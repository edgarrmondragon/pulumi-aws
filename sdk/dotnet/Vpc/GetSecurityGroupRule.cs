// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Vpc
{
    public static class GetSecurityGroupRule
    {
        /// <summary>
        /// `aws.vpc.getSecurityGroupRule` provides details about a specific security group rule.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.vpc.getSecurityGroupRule({
        ///     securityGroupRuleId: _var.security_group_rule_id,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.vpc.get_security_group_rule(security_group_rule_id=var["security_group_rule_id"])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Vpc.GetSecurityGroupRule.Invoke(new()
        ///     {
        ///         SecurityGroupRuleId = @var.Security_group_rule_id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/vpc"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := vpc.GetSecurityGroupRule(ctx, &amp;vpc.GetSecurityGroupRuleArgs{
        /// 			SecurityGroupRuleId: pulumi.StringRef(_var.Security_group_rule_id),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.vpc.VpcFunctions;
        /// import com.pulumi.aws.vpc.inputs.GetSecurityGroupRuleArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = VpcFunctions.getSecurityGroupRule(GetSecurityGroupRuleArgs.builder()
        ///             .securityGroupRuleId(var_.security_group_rule_id())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:vpc:getSecurityGroupRule
        ///       Arguments:
        ///         securityGroupRuleId: ${var.security_group_rule_id}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityGroupRuleResult> InvokeAsync(GetSecurityGroupRuleArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityGroupRuleResult>("aws:vpc/getSecurityGroupRule:getSecurityGroupRule", args ?? new GetSecurityGroupRuleArgs(), options.WithDefaults());

        /// <summary>
        /// `aws.vpc.getSecurityGroupRule` provides details about a specific security group rule.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.vpc.getSecurityGroupRule({
        ///     securityGroupRuleId: _var.security_group_rule_id,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.vpc.get_security_group_rule(security_group_rule_id=var["security_group_rule_id"])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Vpc.GetSecurityGroupRule.Invoke(new()
        ///     {
        ///         SecurityGroupRuleId = @var.Security_group_rule_id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/vpc"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := vpc.GetSecurityGroupRule(ctx, &amp;vpc.GetSecurityGroupRuleArgs{
        /// 			SecurityGroupRuleId: pulumi.StringRef(_var.Security_group_rule_id),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.vpc.VpcFunctions;
        /// import com.pulumi.aws.vpc.inputs.GetSecurityGroupRuleArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = VpcFunctions.getSecurityGroupRule(GetSecurityGroupRuleArgs.builder()
        ///             .securityGroupRuleId(var_.security_group_rule_id())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:vpc:getSecurityGroupRule
        ///       Arguments:
        ///         securityGroupRuleId: ${var.security_group_rule_id}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSecurityGroupRuleResult> Invoke(GetSecurityGroupRuleInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityGroupRuleResult>("aws:vpc/getSecurityGroupRule:getSecurityGroupRule", args ?? new GetSecurityGroupRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityGroupRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSecurityGroupRuleFilterArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public List<Inputs.GetSecurityGroupRuleFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityGroupRuleFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// ID of the security group rule to select.
        /// </summary>
        [Input("securityGroupRuleId")]
        public string? SecurityGroupRuleId { get; set; }

        public GetSecurityGroupRuleArgs()
        {
        }
        public static new GetSecurityGroupRuleArgs Empty => new GetSecurityGroupRuleArgs();
    }

    public sealed class GetSecurityGroupRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSecurityGroupRuleFilterInputArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public InputList<Inputs.GetSecurityGroupRuleFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityGroupRuleFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// ID of the security group rule to select.
        /// </summary>
        [Input("securityGroupRuleId")]
        public Input<string>? SecurityGroupRuleId { get; set; }

        public GetSecurityGroupRuleInvokeArgs()
        {
        }
        public static new GetSecurityGroupRuleInvokeArgs Empty => new GetSecurityGroupRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityGroupRuleResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the security group rule.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The destination IPv4 CIDR range.
        /// </summary>
        public readonly string CidrIpv4;
        /// <summary>
        /// The destination IPv6 CIDR range.
        /// </summary>
        public readonly string CidrIpv6;
        /// <summary>
        /// The security group rule description.
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetSecurityGroupRuleFilterResult> Filters;
        /// <summary>
        /// The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type.
        /// </summary>
        public readonly int FromPort;
        public readonly string Id;
        /// <summary>
        /// The IP protocol name or number. Use `-1` to specify all protocols.
        /// </summary>
        public readonly string IpProtocol;
        /// <summary>
        /// Indicates whether the security group rule is an outbound rule.
        /// </summary>
        public readonly bool IsEgress;
        /// <summary>
        /// The ID of the destination prefix list.
        /// </summary>
        public readonly string PrefixListId;
        /// <summary>
        /// The destination security group that is referenced in the rule.
        /// </summary>
        public readonly string ReferencedSecurityGroupId;
        /// <summary>
        /// The ID of the security group.
        /// </summary>
        public readonly string SecurityGroupId;
        public readonly string SecurityGroupRuleId;
        /// <summary>
        /// A map of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// (Optional) The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.
        /// </summary>
        public readonly int ToPort;

        [OutputConstructor]
        private GetSecurityGroupRuleResult(
            string arn,

            string cidrIpv4,

            string cidrIpv6,

            string description,

            ImmutableArray<Outputs.GetSecurityGroupRuleFilterResult> filters,

            int fromPort,

            string id,

            string ipProtocol,

            bool isEgress,

            string prefixListId,

            string referencedSecurityGroupId,

            string securityGroupId,

            string securityGroupRuleId,

            ImmutableDictionary<string, string> tags,

            int toPort)
        {
            Arn = arn;
            CidrIpv4 = cidrIpv4;
            CidrIpv6 = cidrIpv6;
            Description = description;
            Filters = filters;
            FromPort = fromPort;
            Id = id;
            IpProtocol = ipProtocol;
            IsEgress = isEgress;
            PrefixListId = prefixListId;
            ReferencedSecurityGroupId = referencedSecurityGroupId;
            SecurityGroupId = securityGroupId;
            SecurityGroupRuleId = securityGroupRuleId;
            Tags = tags;
            ToPort = toPort;
        }
    }
}
