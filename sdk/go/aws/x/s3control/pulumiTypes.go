// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type BucketLifecycleConfigurationRule struct {
	// Configuration block containing settings for abort incomplete multipart upload.
	AbortIncompleteMultipartUpload *BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload `pulumi:"abortIncompleteMultipartUpload"`
	// Configuration block containing settings for expiration of objects.
	Expiration *BucketLifecycleConfigurationRuleExpiration `pulumi:"expiration"`
	// Configuration block containing settings for filtering.
	Filter *BucketLifecycleConfigurationRuleFilter `pulumi:"filter"`
	// Unique identifier for the rule.
	Id string `pulumi:"id"`
	// Status of the rule. Valid values: `Enabled` and `Disabled`. Defaults to `Enabled`.
	Status *string `pulumi:"status"`
}

type BucketLifecycleConfigurationRuleArgs struct {
	// Configuration block containing settings for abort incomplete multipart upload.
	AbortIncompleteMultipartUpload pulumix.Input[*BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs] `pulumi:"abortIncompleteMultipartUpload"`
	// Configuration block containing settings for expiration of objects.
	Expiration pulumix.Input[*BucketLifecycleConfigurationRuleExpirationArgs] `pulumi:"expiration"`
	// Configuration block containing settings for filtering.
	Filter pulumix.Input[*BucketLifecycleConfigurationRuleFilterArgs] `pulumi:"filter"`
	// Unique identifier for the rule.
	Id pulumix.Input[string] `pulumi:"id"`
	// Status of the rule. Valid values: `Enabled` and `Disabled`. Defaults to `Enabled`.
	Status pulumix.Input[*string] `pulumi:"status"`
}

func (BucketLifecycleConfigurationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRule)(nil)).Elem()
}

func (i BucketLifecycleConfigurationRuleArgs) ToBucketLifecycleConfigurationRuleOutput() BucketLifecycleConfigurationRuleOutput {
	return i.ToBucketLifecycleConfigurationRuleOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleArgs) ToBucketLifecycleConfigurationRuleOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleOutput)
}

func (i *BucketLifecycleConfigurationRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*BucketLifecycleConfigurationRuleArgs] {
	return pulumix.Val(i)
}

type BucketLifecycleConfigurationRuleOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRule)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleOutput) ToBucketLifecycleConfigurationRuleOutput() BucketLifecycleConfigurationRuleOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleOutput) ToBucketLifecycleConfigurationRuleOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleOutput) ToOutput(ctx context.Context) pulumix.Output[BucketLifecycleConfigurationRule] {
	return pulumix.Output[BucketLifecycleConfigurationRule]{
		OutputState: o.OutputState,
	}
}

// Configuration block containing settings for abort incomplete multipart upload.
func (o BucketLifecycleConfigurationRuleOutput) AbortIncompleteMultipartUpload() pulumix.GPtrOutput[BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload, BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput] {
	value := pulumix.Apply[BucketLifecycleConfigurationRule](o, func(v BucketLifecycleConfigurationRule) *BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload {
		return v.AbortIncompleteMultipartUpload
	})
	return pulumix.GPtrOutput[BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload, BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput]{OutputState: value.OutputState}
}

// Configuration block containing settings for expiration of objects.
func (o BucketLifecycleConfigurationRuleOutput) Expiration() pulumix.GPtrOutput[BucketLifecycleConfigurationRuleExpiration, BucketLifecycleConfigurationRuleExpirationOutput] {
	value := pulumix.Apply[BucketLifecycleConfigurationRule](o, func(v BucketLifecycleConfigurationRule) *BucketLifecycleConfigurationRuleExpiration {
		return v.Expiration
	})
	return pulumix.GPtrOutput[BucketLifecycleConfigurationRuleExpiration, BucketLifecycleConfigurationRuleExpirationOutput]{OutputState: value.OutputState}
}

// Configuration block containing settings for filtering.
func (o BucketLifecycleConfigurationRuleOutput) Filter() pulumix.GPtrOutput[BucketLifecycleConfigurationRuleFilter, BucketLifecycleConfigurationRuleFilterOutput] {
	value := pulumix.Apply[BucketLifecycleConfigurationRule](o, func(v BucketLifecycleConfigurationRule) *BucketLifecycleConfigurationRuleFilter { return v.Filter })
	return pulumix.GPtrOutput[BucketLifecycleConfigurationRuleFilter, BucketLifecycleConfigurationRuleFilterOutput]{OutputState: value.OutputState}
}

// Unique identifier for the rule.
func (o BucketLifecycleConfigurationRuleOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[BucketLifecycleConfigurationRule](o, func(v BucketLifecycleConfigurationRule) string { return v.Id })
}

// Status of the rule. Valid values: `Enabled` and `Disabled`. Defaults to `Enabled`.
func (o BucketLifecycleConfigurationRuleOutput) Status() pulumix.Output[*string] {
	return pulumix.Apply[BucketLifecycleConfigurationRule](o, func(v BucketLifecycleConfigurationRule) *string { return v.Status })
}

type BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload struct {
	// Number of days after which Amazon S3 aborts an incomplete multipart upload.
	DaysAfterInitiation int `pulumi:"daysAfterInitiation"`
}

type BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs struct {
	// Number of days after which Amazon S3 aborts an incomplete multipart upload.
	DaysAfterInitiation pulumix.Input[int] `pulumi:"daysAfterInitiation"`
}

func (BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput {
	return i.ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput)
}

func (i *BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) ToOutput(ctx context.Context) pulumix.Output[*BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs] {
	return pulumix.Val(i)
}

type BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) ToOutput(ctx context.Context) pulumix.Output[BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload] {
	return pulumix.Output[BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload]{
		OutputState: o.OutputState,
	}
}

// Number of days after which Amazon S3 aborts an incomplete multipart upload.
func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) DaysAfterInitiation() pulumix.Output[int] {
	return pulumix.Apply[BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload](o, func(v BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload) int {
		return v.DaysAfterInitiation
	})
}

type BucketLifecycleConfigurationRuleExpiration struct {
	// Date the object is to be deleted. Should be in `YYYY-MM-DD` date format, e.g., `2020-09-30`.
	Date *string `pulumi:"date"`
	// Number of days before the object is to be deleted.
	Days *int `pulumi:"days"`
	// Enable to remove a delete marker with no noncurrent versions. Cannot be specified with `date` or `days`.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
}

type BucketLifecycleConfigurationRuleExpirationArgs struct {
	// Date the object is to be deleted. Should be in `YYYY-MM-DD` date format, e.g., `2020-09-30`.
	Date pulumix.Input[*string] `pulumi:"date"`
	// Number of days before the object is to be deleted.
	Days pulumix.Input[*int] `pulumi:"days"`
	// Enable to remove a delete marker with no noncurrent versions. Cannot be specified with `date` or `days`.
	ExpiredObjectDeleteMarker pulumix.Input[*bool] `pulumi:"expiredObjectDeleteMarker"`
}

func (BucketLifecycleConfigurationRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleExpiration)(nil)).Elem()
}

func (i BucketLifecycleConfigurationRuleExpirationArgs) ToBucketLifecycleConfigurationRuleExpirationOutput() BucketLifecycleConfigurationRuleExpirationOutput {
	return i.ToBucketLifecycleConfigurationRuleExpirationOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleExpirationArgs) ToBucketLifecycleConfigurationRuleExpirationOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleExpirationOutput)
}

func (i *BucketLifecycleConfigurationRuleExpirationArgs) ToOutput(ctx context.Context) pulumix.Output[*BucketLifecycleConfigurationRuleExpirationArgs] {
	return pulumix.Val(i)
}

type BucketLifecycleConfigurationRuleExpirationOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleExpiration)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleExpirationOutput) ToBucketLifecycleConfigurationRuleExpirationOutput() BucketLifecycleConfigurationRuleExpirationOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleExpirationOutput) ToBucketLifecycleConfigurationRuleExpirationOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleExpirationOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleExpirationOutput) ToOutput(ctx context.Context) pulumix.Output[BucketLifecycleConfigurationRuleExpiration] {
	return pulumix.Output[BucketLifecycleConfigurationRuleExpiration]{
		OutputState: o.OutputState,
	}
}

// Date the object is to be deleted. Should be in `YYYY-MM-DD` date format, e.g., `2020-09-30`.
func (o BucketLifecycleConfigurationRuleExpirationOutput) Date() pulumix.Output[*string] {
	return pulumix.Apply[BucketLifecycleConfigurationRuleExpiration](o, func(v BucketLifecycleConfigurationRuleExpiration) *string { return v.Date })
}

// Number of days before the object is to be deleted.
func (o BucketLifecycleConfigurationRuleExpirationOutput) Days() pulumix.Output[*int] {
	return pulumix.Apply[BucketLifecycleConfigurationRuleExpiration](o, func(v BucketLifecycleConfigurationRuleExpiration) *int { return v.Days })
}

// Enable to remove a delete marker with no noncurrent versions. Cannot be specified with `date` or `days`.
func (o BucketLifecycleConfigurationRuleExpirationOutput) ExpiredObjectDeleteMarker() pulumix.Output[*bool] {
	return pulumix.Apply[BucketLifecycleConfigurationRuleExpiration](o, func(v BucketLifecycleConfigurationRuleExpiration) *bool { return v.ExpiredObjectDeleteMarker })
}

type BucketLifecycleConfigurationRuleFilter struct {
	// Object prefix for rule filtering.
	Prefix *string `pulumi:"prefix"`
	// Key-value map of object tags for rule filtering.
	Tags map[string]string `pulumi:"tags"`
}

type BucketLifecycleConfigurationRuleFilterArgs struct {
	// Object prefix for rule filtering.
	Prefix pulumix.Input[*string] `pulumi:"prefix"`
	// Key-value map of object tags for rule filtering.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (BucketLifecycleConfigurationRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleFilter)(nil)).Elem()
}

func (i BucketLifecycleConfigurationRuleFilterArgs) ToBucketLifecycleConfigurationRuleFilterOutput() BucketLifecycleConfigurationRuleFilterOutput {
	return i.ToBucketLifecycleConfigurationRuleFilterOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleFilterArgs) ToBucketLifecycleConfigurationRuleFilterOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleFilterOutput)
}

func (i *BucketLifecycleConfigurationRuleFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*BucketLifecycleConfigurationRuleFilterArgs] {
	return pulumix.Val(i)
}

type BucketLifecycleConfigurationRuleFilterOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleFilter)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleFilterOutput) ToBucketLifecycleConfigurationRuleFilterOutput() BucketLifecycleConfigurationRuleFilterOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleFilterOutput) ToBucketLifecycleConfigurationRuleFilterOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleFilterOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleFilterOutput) ToOutput(ctx context.Context) pulumix.Output[BucketLifecycleConfigurationRuleFilter] {
	return pulumix.Output[BucketLifecycleConfigurationRuleFilter]{
		OutputState: o.OutputState,
	}
}

// Object prefix for rule filtering.
func (o BucketLifecycleConfigurationRuleFilterOutput) Prefix() pulumix.Output[*string] {
	return pulumix.Apply[BucketLifecycleConfigurationRuleFilter](o, func(v BucketLifecycleConfigurationRuleFilter) *string { return v.Prefix })
}

// Key-value map of object tags for rule filtering.
func (o BucketLifecycleConfigurationRuleFilterOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[BucketLifecycleConfigurationRuleFilter](o, func(v BucketLifecycleConfigurationRuleFilter) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type MultiRegionAccessPointDetails struct {
	Name              string                                          `pulumi:"name"`
	PublicAccessBlock *MultiRegionAccessPointDetailsPublicAccessBlock `pulumi:"publicAccessBlock"`
	Regions           []MultiRegionAccessPointDetailsRegion           `pulumi:"regions"`
}

type MultiRegionAccessPointDetailsArgs struct {
	Name              pulumix.Input[string]                                              `pulumi:"name"`
	PublicAccessBlock pulumix.Input[*MultiRegionAccessPointDetailsPublicAccessBlockArgs] `pulumi:"publicAccessBlock"`
	Regions           pulumix.Input[[]*MultiRegionAccessPointDetailsRegionArgs]          `pulumi:"regions"`
}

func (MultiRegionAccessPointDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointDetails)(nil)).Elem()
}

func (i MultiRegionAccessPointDetailsArgs) ToMultiRegionAccessPointDetailsOutput() MultiRegionAccessPointDetailsOutput {
	return i.ToMultiRegionAccessPointDetailsOutputWithContext(context.Background())
}

func (i MultiRegionAccessPointDetailsArgs) ToMultiRegionAccessPointDetailsOutputWithContext(ctx context.Context) MultiRegionAccessPointDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionAccessPointDetailsOutput)
}

func (i *MultiRegionAccessPointDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[*MultiRegionAccessPointDetailsArgs] {
	return pulumix.Val(i)
}

type MultiRegionAccessPointDetailsOutput struct{ *pulumi.OutputState }

func (MultiRegionAccessPointDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointDetails)(nil)).Elem()
}

func (o MultiRegionAccessPointDetailsOutput) ToMultiRegionAccessPointDetailsOutput() MultiRegionAccessPointDetailsOutput {
	return o
}

func (o MultiRegionAccessPointDetailsOutput) ToMultiRegionAccessPointDetailsOutputWithContext(ctx context.Context) MultiRegionAccessPointDetailsOutput {
	return o
}

func (o MultiRegionAccessPointDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[MultiRegionAccessPointDetails] {
	return pulumix.Output[MultiRegionAccessPointDetails]{
		OutputState: o.OutputState,
	}
}

func (o MultiRegionAccessPointDetailsOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[MultiRegionAccessPointDetails](o, func(v MultiRegionAccessPointDetails) string { return v.Name })
}

func (o MultiRegionAccessPointDetailsOutput) PublicAccessBlock() pulumix.GPtrOutput[MultiRegionAccessPointDetailsPublicAccessBlock, MultiRegionAccessPointDetailsPublicAccessBlockOutput] {
	value := pulumix.Apply[MultiRegionAccessPointDetails](o, func(v MultiRegionAccessPointDetails) *MultiRegionAccessPointDetailsPublicAccessBlock {
		return v.PublicAccessBlock
	})
	return pulumix.GPtrOutput[MultiRegionAccessPointDetailsPublicAccessBlock, MultiRegionAccessPointDetailsPublicAccessBlockOutput]{OutputState: value.OutputState}
}

func (o MultiRegionAccessPointDetailsOutput) Regions() pulumix.GArrayOutput[MultiRegionAccessPointDetailsRegion, MultiRegionAccessPointDetailsRegionOutput] {
	value := pulumix.Apply[MultiRegionAccessPointDetails](o, func(v MultiRegionAccessPointDetails) []MultiRegionAccessPointDetailsRegion { return v.Regions })
	return pulumix.GArrayOutput[MultiRegionAccessPointDetailsRegion, MultiRegionAccessPointDetailsRegionOutput]{OutputState: value.OutputState}
}

type MultiRegionAccessPointDetailsPublicAccessBlock struct {
	BlockPublicAcls       *bool `pulumi:"blockPublicAcls"`
	BlockPublicPolicy     *bool `pulumi:"blockPublicPolicy"`
	IgnorePublicAcls      *bool `pulumi:"ignorePublicAcls"`
	RestrictPublicBuckets *bool `pulumi:"restrictPublicBuckets"`
}

type MultiRegionAccessPointDetailsPublicAccessBlockArgs struct {
	BlockPublicAcls       pulumix.Input[*bool] `pulumi:"blockPublicAcls"`
	BlockPublicPolicy     pulumix.Input[*bool] `pulumi:"blockPublicPolicy"`
	IgnorePublicAcls      pulumix.Input[*bool] `pulumi:"ignorePublicAcls"`
	RestrictPublicBuckets pulumix.Input[*bool] `pulumi:"restrictPublicBuckets"`
}

func (MultiRegionAccessPointDetailsPublicAccessBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointDetailsPublicAccessBlock)(nil)).Elem()
}

func (i MultiRegionAccessPointDetailsPublicAccessBlockArgs) ToMultiRegionAccessPointDetailsPublicAccessBlockOutput() MultiRegionAccessPointDetailsPublicAccessBlockOutput {
	return i.ToMultiRegionAccessPointDetailsPublicAccessBlockOutputWithContext(context.Background())
}

func (i MultiRegionAccessPointDetailsPublicAccessBlockArgs) ToMultiRegionAccessPointDetailsPublicAccessBlockOutputWithContext(ctx context.Context) MultiRegionAccessPointDetailsPublicAccessBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionAccessPointDetailsPublicAccessBlockOutput)
}

func (i *MultiRegionAccessPointDetailsPublicAccessBlockArgs) ToOutput(ctx context.Context) pulumix.Output[*MultiRegionAccessPointDetailsPublicAccessBlockArgs] {
	return pulumix.Val(i)
}

type MultiRegionAccessPointDetailsPublicAccessBlockOutput struct{ *pulumi.OutputState }

func (MultiRegionAccessPointDetailsPublicAccessBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointDetailsPublicAccessBlock)(nil)).Elem()
}

func (o MultiRegionAccessPointDetailsPublicAccessBlockOutput) ToMultiRegionAccessPointDetailsPublicAccessBlockOutput() MultiRegionAccessPointDetailsPublicAccessBlockOutput {
	return o
}

func (o MultiRegionAccessPointDetailsPublicAccessBlockOutput) ToMultiRegionAccessPointDetailsPublicAccessBlockOutputWithContext(ctx context.Context) MultiRegionAccessPointDetailsPublicAccessBlockOutput {
	return o
}

func (o MultiRegionAccessPointDetailsPublicAccessBlockOutput) ToOutput(ctx context.Context) pulumix.Output[MultiRegionAccessPointDetailsPublicAccessBlock] {
	return pulumix.Output[MultiRegionAccessPointDetailsPublicAccessBlock]{
		OutputState: o.OutputState,
	}
}

func (o MultiRegionAccessPointDetailsPublicAccessBlockOutput) BlockPublicAcls() pulumix.Output[*bool] {
	return pulumix.Apply[MultiRegionAccessPointDetailsPublicAccessBlock](o, func(v MultiRegionAccessPointDetailsPublicAccessBlock) *bool { return v.BlockPublicAcls })
}

func (o MultiRegionAccessPointDetailsPublicAccessBlockOutput) BlockPublicPolicy() pulumix.Output[*bool] {
	return pulumix.Apply[MultiRegionAccessPointDetailsPublicAccessBlock](o, func(v MultiRegionAccessPointDetailsPublicAccessBlock) *bool { return v.BlockPublicPolicy })
}

func (o MultiRegionAccessPointDetailsPublicAccessBlockOutput) IgnorePublicAcls() pulumix.Output[*bool] {
	return pulumix.Apply[MultiRegionAccessPointDetailsPublicAccessBlock](o, func(v MultiRegionAccessPointDetailsPublicAccessBlock) *bool { return v.IgnorePublicAcls })
}

func (o MultiRegionAccessPointDetailsPublicAccessBlockOutput) RestrictPublicBuckets() pulumix.Output[*bool] {
	return pulumix.Apply[MultiRegionAccessPointDetailsPublicAccessBlock](o, func(v MultiRegionAccessPointDetailsPublicAccessBlock) *bool { return v.RestrictPublicBuckets })
}

type MultiRegionAccessPointDetailsRegion struct {
	Bucket string `pulumi:"bucket"`
}

type MultiRegionAccessPointDetailsRegionArgs struct {
	Bucket pulumix.Input[string] `pulumi:"bucket"`
}

func (MultiRegionAccessPointDetailsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointDetailsRegion)(nil)).Elem()
}

func (i MultiRegionAccessPointDetailsRegionArgs) ToMultiRegionAccessPointDetailsRegionOutput() MultiRegionAccessPointDetailsRegionOutput {
	return i.ToMultiRegionAccessPointDetailsRegionOutputWithContext(context.Background())
}

func (i MultiRegionAccessPointDetailsRegionArgs) ToMultiRegionAccessPointDetailsRegionOutputWithContext(ctx context.Context) MultiRegionAccessPointDetailsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionAccessPointDetailsRegionOutput)
}

func (i *MultiRegionAccessPointDetailsRegionArgs) ToOutput(ctx context.Context) pulumix.Output[*MultiRegionAccessPointDetailsRegionArgs] {
	return pulumix.Val(i)
}

type MultiRegionAccessPointDetailsRegionOutput struct{ *pulumi.OutputState }

func (MultiRegionAccessPointDetailsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointDetailsRegion)(nil)).Elem()
}

func (o MultiRegionAccessPointDetailsRegionOutput) ToMultiRegionAccessPointDetailsRegionOutput() MultiRegionAccessPointDetailsRegionOutput {
	return o
}

func (o MultiRegionAccessPointDetailsRegionOutput) ToMultiRegionAccessPointDetailsRegionOutputWithContext(ctx context.Context) MultiRegionAccessPointDetailsRegionOutput {
	return o
}

func (o MultiRegionAccessPointDetailsRegionOutput) ToOutput(ctx context.Context) pulumix.Output[MultiRegionAccessPointDetailsRegion] {
	return pulumix.Output[MultiRegionAccessPointDetailsRegion]{
		OutputState: o.OutputState,
	}
}

func (o MultiRegionAccessPointDetailsRegionOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[MultiRegionAccessPointDetailsRegion](o, func(v MultiRegionAccessPointDetailsRegion) string { return v.Bucket })
}

type MultiRegionAccessPointPolicyDetails struct {
	// The name of the Multi-Region Access Point.
	Name string `pulumi:"name"`
	// A valid JSON document that specifies the policy that you want to associate with this Multi-Region Access Point. Once applied, the policy can be edited, but not deleted. For more information, see the documentation on [Multi-Region Access Point Permissions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointPermissions.html).
	//
	// > **NOTE:** When you update the `policy`, the update is first listed as the proposed policy. After the update is finished and all Regions have been updated, the proposed policy is listed as the established policy. If both policies have the same version number, the proposed policy is the established policy.
	Policy string `pulumi:"policy"`
}

type MultiRegionAccessPointPolicyDetailsArgs struct {
	// The name of the Multi-Region Access Point.
	Name pulumix.Input[string] `pulumi:"name"`
	// A valid JSON document that specifies the policy that you want to associate with this Multi-Region Access Point. Once applied, the policy can be edited, but not deleted. For more information, see the documentation on [Multi-Region Access Point Permissions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointPermissions.html).
	//
	// > **NOTE:** When you update the `policy`, the update is first listed as the proposed policy. After the update is finished and all Regions have been updated, the proposed policy is listed as the established policy. If both policies have the same version number, the proposed policy is the established policy.
	Policy pulumix.Input[string] `pulumi:"policy"`
}

func (MultiRegionAccessPointPolicyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointPolicyDetails)(nil)).Elem()
}

func (i MultiRegionAccessPointPolicyDetailsArgs) ToMultiRegionAccessPointPolicyDetailsOutput() MultiRegionAccessPointPolicyDetailsOutput {
	return i.ToMultiRegionAccessPointPolicyDetailsOutputWithContext(context.Background())
}

func (i MultiRegionAccessPointPolicyDetailsArgs) ToMultiRegionAccessPointPolicyDetailsOutputWithContext(ctx context.Context) MultiRegionAccessPointPolicyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiRegionAccessPointPolicyDetailsOutput)
}

func (i *MultiRegionAccessPointPolicyDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[*MultiRegionAccessPointPolicyDetailsArgs] {
	return pulumix.Val(i)
}

type MultiRegionAccessPointPolicyDetailsOutput struct{ *pulumi.OutputState }

func (MultiRegionAccessPointPolicyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPointPolicyDetails)(nil)).Elem()
}

func (o MultiRegionAccessPointPolicyDetailsOutput) ToMultiRegionAccessPointPolicyDetailsOutput() MultiRegionAccessPointPolicyDetailsOutput {
	return o
}

func (o MultiRegionAccessPointPolicyDetailsOutput) ToMultiRegionAccessPointPolicyDetailsOutputWithContext(ctx context.Context) MultiRegionAccessPointPolicyDetailsOutput {
	return o
}

func (o MultiRegionAccessPointPolicyDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[MultiRegionAccessPointPolicyDetails] {
	return pulumix.Output[MultiRegionAccessPointPolicyDetails]{
		OutputState: o.OutputState,
	}
}

// The name of the Multi-Region Access Point.
func (o MultiRegionAccessPointPolicyDetailsOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[MultiRegionAccessPointPolicyDetails](o, func(v MultiRegionAccessPointPolicyDetails) string { return v.Name })
}

// A valid JSON document that specifies the policy that you want to associate with this Multi-Region Access Point. Once applied, the policy can be edited, but not deleted. For more information, see the documentation on [Multi-Region Access Point Permissions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointPermissions.html).
//
// > **NOTE:** When you update the `policy`, the update is first listed as the proposed policy. After the update is finished and all Regions have been updated, the proposed policy is listed as the established policy. If both policies have the same version number, the proposed policy is the established policy.
func (o MultiRegionAccessPointPolicyDetailsOutput) Policy() pulumix.Output[string] {
	return pulumix.Apply[MultiRegionAccessPointPolicyDetails](o, func(v MultiRegionAccessPointPolicyDetails) string { return v.Policy })
}

type ObjectLambdaAccessPointConfiguration struct {
	// Allowed features. Valid values: `GetObject-Range`, `GetObject-PartNumber`.
	AllowedFeatures []string `pulumi:"allowedFeatures"`
	// Whether or not the CloudWatch metrics configuration is enabled.
	CloudWatchMetricsEnabled *bool `pulumi:"cloudWatchMetricsEnabled"`
	// Standard access point associated with the Object Lambda Access Point.
	SupportingAccessPoint string `pulumi:"supportingAccessPoint"`
	// List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.
	TransformationConfigurations []ObjectLambdaAccessPointConfigurationTransformationConfiguration `pulumi:"transformationConfigurations"`
}

type ObjectLambdaAccessPointConfigurationArgs struct {
	// Allowed features. Valid values: `GetObject-Range`, `GetObject-PartNumber`.
	AllowedFeatures pulumix.Input[[]string] `pulumi:"allowedFeatures"`
	// Whether or not the CloudWatch metrics configuration is enabled.
	CloudWatchMetricsEnabled pulumix.Input[*bool] `pulumi:"cloudWatchMetricsEnabled"`
	// Standard access point associated with the Object Lambda Access Point.
	SupportingAccessPoint pulumix.Input[string] `pulumi:"supportingAccessPoint"`
	// List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.
	TransformationConfigurations pulumix.Input[[]*ObjectLambdaAccessPointConfigurationTransformationConfigurationArgs] `pulumi:"transformationConfigurations"`
}

func (ObjectLambdaAccessPointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLambdaAccessPointConfiguration)(nil)).Elem()
}

func (i ObjectLambdaAccessPointConfigurationArgs) ToObjectLambdaAccessPointConfigurationOutput() ObjectLambdaAccessPointConfigurationOutput {
	return i.ToObjectLambdaAccessPointConfigurationOutputWithContext(context.Background())
}

func (i ObjectLambdaAccessPointConfigurationArgs) ToObjectLambdaAccessPointConfigurationOutputWithContext(ctx context.Context) ObjectLambdaAccessPointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLambdaAccessPointConfigurationOutput)
}

func (i *ObjectLambdaAccessPointConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ObjectLambdaAccessPointConfigurationArgs] {
	return pulumix.Val(i)
}

type ObjectLambdaAccessPointConfigurationOutput struct{ *pulumi.OutputState }

func (ObjectLambdaAccessPointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLambdaAccessPointConfiguration)(nil)).Elem()
}

func (o ObjectLambdaAccessPointConfigurationOutput) ToObjectLambdaAccessPointConfigurationOutput() ObjectLambdaAccessPointConfigurationOutput {
	return o
}

func (o ObjectLambdaAccessPointConfigurationOutput) ToObjectLambdaAccessPointConfigurationOutputWithContext(ctx context.Context) ObjectLambdaAccessPointConfigurationOutput {
	return o
}

func (o ObjectLambdaAccessPointConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectLambdaAccessPointConfiguration] {
	return pulumix.Output[ObjectLambdaAccessPointConfiguration]{
		OutputState: o.OutputState,
	}
}

// Allowed features. Valid values: `GetObject-Range`, `GetObject-PartNumber`.
func (o ObjectLambdaAccessPointConfigurationOutput) AllowedFeatures() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ObjectLambdaAccessPointConfiguration](o, func(v ObjectLambdaAccessPointConfiguration) []string { return v.AllowedFeatures })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Whether or not the CloudWatch metrics configuration is enabled.
func (o ObjectLambdaAccessPointConfigurationOutput) CloudWatchMetricsEnabled() pulumix.Output[*bool] {
	return pulumix.Apply[ObjectLambdaAccessPointConfiguration](o, func(v ObjectLambdaAccessPointConfiguration) *bool { return v.CloudWatchMetricsEnabled })
}

// Standard access point associated with the Object Lambda Access Point.
func (o ObjectLambdaAccessPointConfigurationOutput) SupportingAccessPoint() pulumix.Output[string] {
	return pulumix.Apply[ObjectLambdaAccessPointConfiguration](o, func(v ObjectLambdaAccessPointConfiguration) string { return v.SupportingAccessPoint })
}

// List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.
func (o ObjectLambdaAccessPointConfigurationOutput) TransformationConfigurations() pulumix.GArrayOutput[ObjectLambdaAccessPointConfigurationTransformationConfiguration, ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput] {
	value := pulumix.Apply[ObjectLambdaAccessPointConfiguration](o, func(v ObjectLambdaAccessPointConfiguration) []ObjectLambdaAccessPointConfigurationTransformationConfiguration {
		return v.TransformationConfigurations
	})
	return pulumix.GArrayOutput[ObjectLambdaAccessPointConfigurationTransformationConfiguration, ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput]{OutputState: value.OutputState}
}

type ObjectLambdaAccessPointConfigurationTransformationConfiguration struct {
	// The actions of an Object Lambda Access Point configuration. Valid values: `GetObject`.
	Actions []string `pulumi:"actions"`
	// The content transformation of an Object Lambda Access Point configuration. See Content Transformation below for more details.
	ContentTransformation ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation `pulumi:"contentTransformation"`
}

type ObjectLambdaAccessPointConfigurationTransformationConfigurationArgs struct {
	// The actions of an Object Lambda Access Point configuration. Valid values: `GetObject`.
	Actions pulumix.Input[[]string] `pulumi:"actions"`
	// The content transformation of an Object Lambda Access Point configuration. See Content Transformation below for more details.
	ContentTransformation pulumix.Input[*ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationArgs] `pulumi:"contentTransformation"`
}

func (ObjectLambdaAccessPointConfigurationTransformationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLambdaAccessPointConfigurationTransformationConfiguration)(nil)).Elem()
}

func (i ObjectLambdaAccessPointConfigurationTransformationConfigurationArgs) ToObjectLambdaAccessPointConfigurationTransformationConfigurationOutput() ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput {
	return i.ToObjectLambdaAccessPointConfigurationTransformationConfigurationOutputWithContext(context.Background())
}

func (i ObjectLambdaAccessPointConfigurationTransformationConfigurationArgs) ToObjectLambdaAccessPointConfigurationTransformationConfigurationOutputWithContext(ctx context.Context) ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput)
}

func (i *ObjectLambdaAccessPointConfigurationTransformationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ObjectLambdaAccessPointConfigurationTransformationConfigurationArgs] {
	return pulumix.Val(i)
}

type ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput struct{ *pulumi.OutputState }

func (ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLambdaAccessPointConfigurationTransformationConfiguration)(nil)).Elem()
}

func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput) ToObjectLambdaAccessPointConfigurationTransformationConfigurationOutput() ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput {
	return o
}

func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput) ToObjectLambdaAccessPointConfigurationTransformationConfigurationOutputWithContext(ctx context.Context) ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput {
	return o
}

func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectLambdaAccessPointConfigurationTransformationConfiguration] {
	return pulumix.Output[ObjectLambdaAccessPointConfigurationTransformationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The actions of an Object Lambda Access Point configuration. Valid values: `GetObject`.
func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput) Actions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ObjectLambdaAccessPointConfigurationTransformationConfiguration](o, func(v ObjectLambdaAccessPointConfigurationTransformationConfiguration) []string { return v.Actions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The content transformation of an Object Lambda Access Point configuration. See Content Transformation below for more details.
func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput) ContentTransformation() pulumix.GPtrOutput[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation, ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput] {
	value := pulumix.Apply[ObjectLambdaAccessPointConfigurationTransformationConfiguration](o, func(v ObjectLambdaAccessPointConfigurationTransformationConfiguration) ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation {
		return v.ContentTransformation
	})
	return pulumix.GPtrOutput[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation, ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput]{OutputState: value.OutputState}
}

type ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation struct {
	// Configuration for an AWS Lambda function. See AWS Lambda below for more details.
	AwsLambda ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda `pulumi:"awsLambda"`
}

type ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationArgs struct {
	// Configuration for an AWS Lambda function. See AWS Lambda below for more details.
	AwsLambda pulumix.Input[*ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs] `pulumi:"awsLambda"`
}

func (ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation)(nil)).Elem()
}

func (i ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationArgs) ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput() ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput {
	return i.ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutputWithContext(context.Background())
}

func (i ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationArgs) ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutputWithContext(ctx context.Context) ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput)
}

func (i *ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationArgs] {
	return pulumix.Val(i)
}

type ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput struct{ *pulumi.OutputState }

func (ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation)(nil)).Elem()
}

func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput) ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput() ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput {
	return o
}

func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput) ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutputWithContext(ctx context.Context) ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput {
	return o
}

func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation] {
	return pulumix.Output[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation]{
		OutputState: o.OutputState,
	}
}

// Configuration for an AWS Lambda function. See AWS Lambda below for more details.
func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput) AwsLambda() pulumix.GPtrOutput[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda, ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput] {
	value := pulumix.Apply[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation](o, func(v ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformation) ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda {
		return v.AwsLambda
	})
	return pulumix.GPtrOutput[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda, ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput]{OutputState: value.OutputState}
}

type ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda struct {
	// The Amazon Resource Name (ARN) of the AWS Lambda function.
	FunctionArn string `pulumi:"functionArn"`
	// Additional JSON that provides supplemental data to the Lambda function used to transform objects.
	FunctionPayload *string `pulumi:"functionPayload"`
}

type ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs struct {
	// The Amazon Resource Name (ARN) of the AWS Lambda function.
	FunctionArn pulumix.Input[string] `pulumi:"functionArn"`
	// Additional JSON that provides supplemental data to the Lambda function used to transform objects.
	FunctionPayload pulumix.Input[*string] `pulumi:"functionPayload"`
}

func (ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda)(nil)).Elem()
}

func (i ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs) ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput() ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput {
	return i.ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutputWithContext(context.Background())
}

func (i ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs) ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutputWithContext(ctx context.Context) ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput)
}

func (i *ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs) ToOutput(ctx context.Context) pulumix.Output[*ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaArgs] {
	return pulumix.Val(i)
}

type ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput struct{ *pulumi.OutputState }

func (ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda)(nil)).Elem()
}

func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput) ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput() ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput {
	return o
}

func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput) ToObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutputWithContext(ctx context.Context) ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput {
	return o
}

func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda] {
	return pulumix.Output[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the AWS Lambda function.
func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput) FunctionArn() pulumix.Output[string] {
	return pulumix.Apply[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda](o, func(v ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda) string {
		return v.FunctionArn
	})
}

// Additional JSON that provides supplemental data to the Lambda function used to transform objects.
func (o ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput) FunctionPayload() pulumix.Output[*string] {
	return pulumix.Apply[ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda](o, func(v ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambda) *string {
		return v.FunctionPayload
	})
}

type StorageLensConfigurationStorageLensConfiguration struct {
	// The account-level configurations of the S3 Storage Lens configuration. See Account Level below for more details.
	AccountLevel StorageLensConfigurationStorageLensConfigurationAccountLevel `pulumi:"accountLevel"`
	// The Amazon Web Services organization for the S3 Storage Lens configuration. See AWS Org below for more details.
	AwsOrg *StorageLensConfigurationStorageLensConfigurationAwsOrg `pulumi:"awsOrg"`
	// Properties of S3 Storage Lens metrics export including the destination, schema and format. See Data Export below for more details.
	DataExport *StorageLensConfigurationStorageLensConfigurationDataExport `pulumi:"dataExport"`
	// Whether the S3 Storage Lens configuration is enabled.
	Enabled bool `pulumi:"enabled"`
	// What is excluded in this configuration. Conflicts with `include`. See Exclude below for more details.
	Exclude *StorageLensConfigurationStorageLensConfigurationExclude `pulumi:"exclude"`
	// What is included in this configuration. Conflicts with `exclude`. See Include below for more details.
	Include *StorageLensConfigurationStorageLensConfigurationInclude `pulumi:"include"`
}

type StorageLensConfigurationStorageLensConfigurationArgs struct {
	// The account-level configurations of the S3 Storage Lens configuration. See Account Level below for more details.
	AccountLevel pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelArgs] `pulumi:"accountLevel"`
	// The Amazon Web Services organization for the S3 Storage Lens configuration. See AWS Org below for more details.
	AwsOrg pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAwsOrgArgs] `pulumi:"awsOrg"`
	// Properties of S3 Storage Lens metrics export including the destination, schema and format. See Data Export below for more details.
	DataExport pulumix.Input[*StorageLensConfigurationStorageLensConfigurationDataExportArgs] `pulumi:"dataExport"`
	// Whether the S3 Storage Lens configuration is enabled.
	Enabled pulumix.Input[bool] `pulumi:"enabled"`
	// What is excluded in this configuration. Conflicts with `include`. See Exclude below for more details.
	Exclude pulumix.Input[*StorageLensConfigurationStorageLensConfigurationExcludeArgs] `pulumi:"exclude"`
	// What is included in this configuration. Conflicts with `exclude`. See Include below for more details.
	Include pulumix.Input[*StorageLensConfigurationStorageLensConfigurationIncludeArgs] `pulumi:"include"`
}

func (StorageLensConfigurationStorageLensConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfiguration)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationArgs) ToStorageLensConfigurationStorageLensConfigurationOutput() StorageLensConfigurationStorageLensConfigurationOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationArgs) ToStorageLensConfigurationStorageLensConfigurationOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfiguration)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationOutput) ToStorageLensConfigurationStorageLensConfigurationOutput() StorageLensConfigurationStorageLensConfigurationOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationOutput) ToStorageLensConfigurationStorageLensConfigurationOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfiguration] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfiguration]{
		OutputState: o.OutputState,
	}
}

// The account-level configurations of the S3 Storage Lens configuration. See Account Level below for more details.
func (o StorageLensConfigurationStorageLensConfigurationOutput) AccountLevel() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevel, StorageLensConfigurationStorageLensConfigurationAccountLevelOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfiguration](o, func(v StorageLensConfigurationStorageLensConfiguration) StorageLensConfigurationStorageLensConfigurationAccountLevel {
		return v.AccountLevel
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevel, StorageLensConfigurationStorageLensConfigurationAccountLevelOutput]{OutputState: value.OutputState}
}

// The Amazon Web Services organization for the S3 Storage Lens configuration. See AWS Org below for more details.
func (o StorageLensConfigurationStorageLensConfigurationOutput) AwsOrg() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAwsOrg, StorageLensConfigurationStorageLensConfigurationAwsOrgOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfiguration](o, func(v StorageLensConfigurationStorageLensConfiguration) *StorageLensConfigurationStorageLensConfigurationAwsOrg {
		return v.AwsOrg
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAwsOrg, StorageLensConfigurationStorageLensConfigurationAwsOrgOutput]{OutputState: value.OutputState}
}

// Properties of S3 Storage Lens metrics export including the destination, schema and format. See Data Export below for more details.
func (o StorageLensConfigurationStorageLensConfigurationOutput) DataExport() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExport, StorageLensConfigurationStorageLensConfigurationDataExportOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfiguration](o, func(v StorageLensConfigurationStorageLensConfiguration) *StorageLensConfigurationStorageLensConfigurationDataExport {
		return v.DataExport
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExport, StorageLensConfigurationStorageLensConfigurationDataExportOutput]{OutputState: value.OutputState}
}

// Whether the S3 Storage Lens configuration is enabled.
func (o StorageLensConfigurationStorageLensConfigurationOutput) Enabled() pulumix.Output[bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfiguration](o, func(v StorageLensConfigurationStorageLensConfiguration) bool { return v.Enabled })
}

// What is excluded in this configuration. Conflicts with `include`. See Exclude below for more details.
func (o StorageLensConfigurationStorageLensConfigurationOutput) Exclude() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationExclude, StorageLensConfigurationStorageLensConfigurationExcludeOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfiguration](o, func(v StorageLensConfigurationStorageLensConfiguration) *StorageLensConfigurationStorageLensConfigurationExclude {
		return v.Exclude
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationExclude, StorageLensConfigurationStorageLensConfigurationExcludeOutput]{OutputState: value.OutputState}
}

// What is included in this configuration. Conflicts with `exclude`. See Include below for more details.
func (o StorageLensConfigurationStorageLensConfigurationOutput) Include() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationInclude, StorageLensConfigurationStorageLensConfigurationIncludeOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfiguration](o, func(v StorageLensConfigurationStorageLensConfiguration) *StorageLensConfigurationStorageLensConfigurationInclude {
		return v.Include
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationInclude, StorageLensConfigurationStorageLensConfigurationIncludeOutput]{OutputState: value.OutputState}
}

type StorageLensConfigurationStorageLensConfigurationAccountLevel struct {
	// S3 Storage Lens activity metrics. See Activity Metrics below for more details.
	ActivityMetrics *StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics `pulumi:"activityMetrics"`
	// Advanced cost-optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics below for more details.
	AdvancedCostOptimizationMetrics *StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics `pulumi:"advancedCostOptimizationMetrics"`
	// Advanced data-protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics below for more details.
	AdvancedDataProtectionMetrics *StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics `pulumi:"advancedDataProtectionMetrics"`
	// S3 Storage Lens bucket-level configuration. See Bucket Level below for more details.
	BucketLevel StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel `pulumi:"bucketLevel"`
	// Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics below for more details.
	DetailedStatusCodeMetrics *StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics `pulumi:"detailedStatusCodeMetrics"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelArgs struct {
	// S3 Storage Lens activity metrics. See Activity Metrics below for more details.
	ActivityMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsArgs] `pulumi:"activityMetrics"`
	// Advanced cost-optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics below for more details.
	AdvancedCostOptimizationMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsArgs] `pulumi:"advancedCostOptimizationMetrics"`
	// Advanced data-protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics below for more details.
	AdvancedDataProtectionMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsArgs] `pulumi:"advancedDataProtectionMetrics"`
	// S3 Storage Lens bucket-level configuration. See Bucket Level below for more details.
	BucketLevel pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelArgs] `pulumi:"bucketLevel"`
	// Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics below for more details.
	DetailedStatusCodeMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsArgs] `pulumi:"detailedStatusCodeMetrics"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevel)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevel)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevel] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevel]{
		OutputState: o.OutputState,
	}
}

// S3 Storage Lens activity metrics. See Activity Metrics below for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelOutput) ActivityMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevel) *StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics {
		return v.ActivityMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput]{OutputState: value.OutputState}
}

// Advanced cost-optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics below for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelOutput) AdvancedCostOptimizationMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevel) *StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics {
		return v.AdvancedCostOptimizationMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput]{OutputState: value.OutputState}
}

// Advanced data-protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics below for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelOutput) AdvancedDataProtectionMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevel) *StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics {
		return v.AdvancedDataProtectionMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput]{OutputState: value.OutputState}
}

// S3 Storage Lens bucket-level configuration. See Bucket Level below for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelOutput) BucketLevel() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevel) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel {
		return v.BucketLevel
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput]{OutputState: value.OutputState}
}

// Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics below for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelOutput) DetailedStatusCodeMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevel) *StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics {
		return v.DetailedStatusCodeMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput]{OutputState: value.OutputState}
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics struct {
	// Whether the activity metrics are enabled.
	Enabled *bool `pulumi:"enabled"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsArgs struct {
	// Whether the activity metrics are enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether the activity metrics are enabled.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetrics) *bool {
		return v.Enabled
	})
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics struct {
	// Whether advanced cost-optimization metrics are enabled.
	Enabled *bool `pulumi:"enabled"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsArgs struct {
	// Whether advanced cost-optimization metrics are enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether advanced cost-optimization metrics are enabled.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetrics) *bool {
		return v.Enabled
	})
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics struct {
	// Whether advanced data-protection metrics are enabled.
	Enabled *bool `pulumi:"enabled"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsArgs struct {
	// Whether advanced data-protection metrics are enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether advanced data-protection metrics are enabled.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetrics) *bool {
		return v.Enabled
	})
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel struct {
	// S3 Storage Lens activity metrics. See Activity Metrics above for more details.
	ActivityMetrics *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics `pulumi:"activityMetrics"`
	// Advanced cost-optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics above for more details.
	AdvancedCostOptimizationMetrics *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics `pulumi:"advancedCostOptimizationMetrics"`
	// Advanced data-protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics above for more details.
	AdvancedDataProtectionMetrics *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics `pulumi:"advancedDataProtectionMetrics"`
	// Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics above for more details.
	DetailedStatusCodeMetrics *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics `pulumi:"detailedStatusCodeMetrics"`
	// Prefix-level metrics for S3 Storage Lens. See Prefix Level below for more details.
	PrefixLevel *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel `pulumi:"prefixLevel"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelArgs struct {
	// S3 Storage Lens activity metrics. See Activity Metrics above for more details.
	ActivityMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsArgs] `pulumi:"activityMetrics"`
	// Advanced cost-optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics above for more details.
	AdvancedCostOptimizationMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsArgs] `pulumi:"advancedCostOptimizationMetrics"`
	// Advanced data-protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics above for more details.
	AdvancedDataProtectionMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsArgs] `pulumi:"advancedDataProtectionMetrics"`
	// Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics above for more details.
	DetailedStatusCodeMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsArgs] `pulumi:"detailedStatusCodeMetrics"`
	// Prefix-level metrics for S3 Storage Lens. See Prefix Level below for more details.
	PrefixLevel pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelArgs] `pulumi:"prefixLevel"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel]{
		OutputState: o.OutputState,
	}
}

// S3 Storage Lens activity metrics. See Activity Metrics above for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput) ActivityMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel) *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics {
		return v.ActivityMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput]{OutputState: value.OutputState}
}

// Advanced cost-optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics above for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput) AdvancedCostOptimizationMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel) *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics {
		return v.AdvancedCostOptimizationMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput]{OutputState: value.OutputState}
}

// Advanced data-protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics above for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput) AdvancedDataProtectionMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel) *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics {
		return v.AdvancedDataProtectionMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput]{OutputState: value.OutputState}
}

// Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics above for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput) DetailedStatusCodeMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel) *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics {
		return v.DetailedStatusCodeMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput]{OutputState: value.OutputState}
}

// Prefix-level metrics for S3 Storage Lens. See Prefix Level below for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput) PrefixLevel() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevel) *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel {
		return v.PrefixLevel
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput]{OutputState: value.OutputState}
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics struct {
	// Whether the activity metrics are enabled.
	Enabled *bool `pulumi:"enabled"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsArgs struct {
	// Whether the activity metrics are enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether the activity metrics are enabled.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetrics) *bool {
		return v.Enabled
	})
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics struct {
	// Whether advanced cost-optimization metrics are enabled.
	Enabled *bool `pulumi:"enabled"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsArgs struct {
	// Whether advanced cost-optimization metrics are enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether advanced cost-optimization metrics are enabled.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetrics) *bool {
		return v.Enabled
	})
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics struct {
	// Whether advanced data-protection metrics are enabled.
	Enabled *bool `pulumi:"enabled"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsArgs struct {
	// Whether advanced data-protection metrics are enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether advanced data-protection metrics are enabled.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetrics) *bool {
		return v.Enabled
	})
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics struct {
	// Whether detailed status code metrics are enabled.
	Enabled *bool `pulumi:"enabled"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsArgs struct {
	// Whether detailed status code metrics are enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether detailed status code metrics are enabled.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetrics) *bool {
		return v.Enabled
	})
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel struct {
	// Prefix-level storage metrics for S3 Storage Lens. See Prefix Level Storage Metrics below for more details.
	StorageMetrics StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics `pulumi:"storageMetrics"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelArgs struct {
	// Prefix-level storage metrics for S3 Storage Lens. See Prefix Level Storage Metrics below for more details.
	StorageMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsArgs] `pulumi:"storageMetrics"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel]{
		OutputState: o.OutputState,
	}
}

// Prefix-level storage metrics for S3 Storage Lens. See Prefix Level Storage Metrics below for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput) StorageMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevel) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics {
		return v.StorageMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput]{OutputState: value.OutputState}
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics struct {
	// Whether prefix-level storage metrics are enabled.
	Enabled *bool `pulumi:"enabled"`
	// Selection criteria. See Selection Criteria below for more details.
	SelectionCriteria *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria `pulumi:"selectionCriteria"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsArgs struct {
	// Whether prefix-level storage metrics are enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// Selection criteria. See Selection Criteria below for more details.
	SelectionCriteria pulumix.Input[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaArgs] `pulumi:"selectionCriteria"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether prefix-level storage metrics are enabled.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics) *bool {
		return v.Enabled
	})
}

// Selection criteria. See Selection Criteria below for more details.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput) SelectionCriteria() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetrics) *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria {
		return v.SelectionCriteria
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria, StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput]{OutputState: value.OutputState}
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria struct {
	// The delimiter of the selection criteria being used.
	Delimiter *string `pulumi:"delimiter"`
	// The max depth of the selection criteria.
	MaxDepth *int `pulumi:"maxDepth"`
	// The minimum number of storage bytes percentage whose metrics will be selected.
	MinStorageBytesPercentage *float64 `pulumi:"minStorageBytesPercentage"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaArgs struct {
	// The delimiter of the selection criteria being used.
	Delimiter pulumix.Input[*string] `pulumi:"delimiter"`
	// The max depth of the selection criteria.
	MaxDepth pulumix.Input[*int] `pulumi:"maxDepth"`
	// The minimum number of storage bytes percentage whose metrics will be selected.
	MinStorageBytesPercentage pulumix.Input[*float64] `pulumi:"minStorageBytesPercentage"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria]{
		OutputState: o.OutputState,
	}
}

// The delimiter of the selection criteria being used.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput) Delimiter() pulumix.Output[*string] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria) *string {
		return v.Delimiter
	})
}

// The max depth of the selection criteria.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput) MaxDepth() pulumix.Output[*int] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria) *int {
		return v.MaxDepth
	})
}

// The minimum number of storage bytes percentage whose metrics will be selected.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput) MinStorageBytesPercentage() pulumix.Output[*float64] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteria) *float64 {
		return v.MinStorageBytesPercentage
	})
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics struct {
	// Whether detailed status code metrics are enabled.
	Enabled *bool `pulumi:"enabled"`
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsArgs struct {
	// Whether detailed status code metrics are enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput() StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether detailed status code metrics are enabled.
func (o StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetrics) *bool {
		return v.Enabled
	})
}

type StorageLensConfigurationStorageLensConfigurationAwsOrg struct {
	// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
	Arn string `pulumi:"arn"`
}

type StorageLensConfigurationStorageLensConfigurationAwsOrgArgs struct {
	// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
	Arn pulumix.Input[string] `pulumi:"arn"`
}

func (StorageLensConfigurationStorageLensConfigurationAwsOrgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAwsOrg)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationAwsOrgArgs) ToStorageLensConfigurationStorageLensConfigurationAwsOrgOutput() StorageLensConfigurationStorageLensConfigurationAwsOrgOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationAwsOrgOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationAwsOrgArgs) ToStorageLensConfigurationStorageLensConfigurationAwsOrgOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAwsOrgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationAwsOrgOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationAwsOrgArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationAwsOrgArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationAwsOrgOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationAwsOrgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationAwsOrg)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationAwsOrgOutput) ToStorageLensConfigurationStorageLensConfigurationAwsOrgOutput() StorageLensConfigurationStorageLensConfigurationAwsOrgOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAwsOrgOutput) ToStorageLensConfigurationStorageLensConfigurationAwsOrgOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationAwsOrgOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationAwsOrgOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationAwsOrg] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationAwsOrg]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
func (o StorageLensConfigurationStorageLensConfigurationAwsOrgOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationAwsOrg](o, func(v StorageLensConfigurationStorageLensConfigurationAwsOrg) string { return v.Arn })
}

type StorageLensConfigurationStorageLensConfigurationDataExport struct {
	// Amazon CloudWatch publishing for S3 Storage Lens metrics. See Cloud Watch Metrics below for more details.
	CloudWatchMetrics *StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics `pulumi:"cloudWatchMetrics"`
	// The bucket where the S3 Storage Lens metrics export will be located. See S3 Bucket Destination below for more details.
	S3BucketDestination *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination `pulumi:"s3BucketDestination"`
}

type StorageLensConfigurationStorageLensConfigurationDataExportArgs struct {
	// Amazon CloudWatch publishing for S3 Storage Lens metrics. See Cloud Watch Metrics below for more details.
	CloudWatchMetrics pulumix.Input[*StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsArgs] `pulumi:"cloudWatchMetrics"`
	// The bucket where the S3 Storage Lens metrics export will be located. See S3 Bucket Destination below for more details.
	S3BucketDestination pulumix.Input[*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs] `pulumi:"s3BucketDestination"`
}

func (StorageLensConfigurationStorageLensConfigurationDataExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExport)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportOutput() StorageLensConfigurationStorageLensConfigurationDataExportOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationDataExportOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationDataExportOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationDataExportArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationDataExportArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationDataExportOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationDataExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExport)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportOutput() StorageLensConfigurationStorageLensConfigurationDataExportOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExport] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExport]{
		OutputState: o.OutputState,
	}
}

// Amazon CloudWatch publishing for S3 Storage Lens metrics. See Cloud Watch Metrics below for more details.
func (o StorageLensConfigurationStorageLensConfigurationDataExportOutput) CloudWatchMetrics() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics, StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExport](o, func(v StorageLensConfigurationStorageLensConfigurationDataExport) *StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics {
		return v.CloudWatchMetrics
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics, StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput]{OutputState: value.OutputState}
}

// The bucket where the S3 Storage Lens metrics export will be located. See S3 Bucket Destination below for more details.
func (o StorageLensConfigurationStorageLensConfigurationDataExportOutput) S3BucketDestination() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination, StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExport](o, func(v StorageLensConfigurationStorageLensConfigurationDataExport) *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination {
		return v.S3BucketDestination
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination, StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput]{OutputState: value.OutputState}
}

type StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics struct {
	// Whether CloudWatch publishing for S3 Storage Lens metrics is enabled.
	Enabled bool `pulumi:"enabled"`
}

type StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsArgs struct {
	// Whether CloudWatch publishing for S3 Storage Lens metrics is enabled.
	Enabled pulumix.Input[bool] `pulumi:"enabled"`
}

func (StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput() StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput() StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics]{
		OutputState: o.OutputState,
	}
}

// Whether CloudWatch publishing for S3 Storage Lens metrics is enabled.
func (o StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput) Enabled() pulumix.Output[bool] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetrics) bool {
		return v.Enabled
	})
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination struct {
	// The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
	AccountId string `pulumi:"accountId"`
	// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
	Arn string `pulumi:"arn"`
	// Encryption of the metrics exports in this bucket. See Encryption below for more details.
	Encryption *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption `pulumi:"encryption"`
	// The export format. Valid values: `CSV`, `Parquet`.
	Format string `pulumi:"format"`
	// The schema version of the export file. Valid values: `V_1`.
	OutputSchemaVersion string `pulumi:"outputSchemaVersion"`
	// The prefix of the destination bucket where the metrics export will be delivered.
	Prefix *string `pulumi:"prefix"`
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs struct {
	// The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Input[string] `pulumi:"accountId"`
	// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// Encryption of the metrics exports in this bucket. See Encryption below for more details.
	Encryption pulumix.Input[*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs] `pulumi:"encryption"`
	// The export format. Valid values: `CSV`, `Parquet`.
	Format pulumix.Input[string] `pulumi:"format"`
	// The schema version of the export file. Valid values: `V_1`.
	OutputSchemaVersion pulumix.Input[string] `pulumi:"outputSchemaVersion"`
	// The prefix of the destination bucket where the metrics export will be delivered.
	Prefix pulumix.Input[*string] `pulumi:"prefix"`
}

func (StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput() StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput() StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination]{
		OutputState: o.OutputState,
	}
}

// The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) AccountId() pulumix.Output[string] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination) string {
		return v.AccountId
	})
}

// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination) string {
		return v.Arn
	})
}

// Encryption of the metrics exports in this bucket. See Encryption below for more details.
func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) Encryption() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption, StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination) *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption {
		return v.Encryption
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption, StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput]{OutputState: value.OutputState}
}

// The export format. Valid values: `CSV`, `Parquet`.
func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) Format() pulumix.Output[string] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination) string {
		return v.Format
	})
}

// The schema version of the export file. Valid values: `V_1`.
func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) OutputSchemaVersion() pulumix.Output[string] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination) string {
		return v.OutputSchemaVersion
	})
}

// The prefix of the destination bucket where the metrics export will be delivered.
func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput) Prefix() pulumix.Output[*string] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination) *string {
		return v.Prefix
	})
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption struct {
	// SSE-KMS encryption. See SSE KMS below for more details.
	SseKms *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms `pulumi:"sseKms"`
	// SSE-S3 encryption. An empty configuration block `{}` should be used.
	SseS3s []StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3 `pulumi:"sseS3s"`
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs struct {
	// SSE-KMS encryption. See SSE KMS below for more details.
	SseKms pulumix.Input[*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsArgs] `pulumi:"sseKms"`
	// SSE-S3 encryption. An empty configuration block `{}` should be used.
	SseS3s pulumix.Input[[]*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Args] `pulumi:"sseS3s"`
}

func (StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput() StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput() StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption]{
		OutputState: o.OutputState,
	}
}

// SSE-KMS encryption. See SSE KMS below for more details.
func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput) SseKms() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms, StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption) *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms {
		return v.SseKms
	})
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms, StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput]{OutputState: value.OutputState}
}

// SSE-S3 encryption. An empty configuration block `{}` should be used.
func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput) SseS3s() pulumix.GArrayOutput[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3, StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption) []StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3 {
		return v.SseS3s
	})
	return pulumix.GArrayOutput[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3, StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output]{OutputState: value.OutputState}
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms struct {
	// KMS key ARN.
	KeyId string `pulumi:"keyId"`
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsArgs struct {
	// KMS key ARN.
	KeyId pulumix.Input[string] `pulumi:"keyId"`
}

func (StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput() StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsArgs) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput() StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms]{
		OutputState: o.OutputState,
	}
}

// KMS key ARN.
func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput) KeyId() pulumix.Output[string] {
	return pulumix.Apply[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms](o, func(v StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKms) string {
		return v.KeyId
	})
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3 struct {
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Args struct {
}

func (StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Args) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output() StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output {
	return i.ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3OutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Args) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3OutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output)
}

func (i *StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Args) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Args] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output() StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output) ToStorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3OutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3]{
		OutputState: o.OutputState,
	}
}

type StorageLensConfigurationStorageLensConfigurationExclude struct {
	// List of S3 bucket ARNs.
	Buckets []string `pulumi:"buckets"`
	// List of AWS Regions.
	Regions []string `pulumi:"regions"`
}

type StorageLensConfigurationStorageLensConfigurationExcludeArgs struct {
	// List of S3 bucket ARNs.
	Buckets pulumix.Input[[]string] `pulumi:"buckets"`
	// List of AWS Regions.
	Regions pulumix.Input[[]string] `pulumi:"regions"`
}

func (StorageLensConfigurationStorageLensConfigurationExcludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationExclude)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationExcludeArgs) ToStorageLensConfigurationStorageLensConfigurationExcludeOutput() StorageLensConfigurationStorageLensConfigurationExcludeOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationExcludeOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationExcludeArgs) ToStorageLensConfigurationStorageLensConfigurationExcludeOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationExcludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationExcludeOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationExcludeArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationExcludeArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationExcludeOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationExcludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationExclude)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationExcludeOutput) ToStorageLensConfigurationStorageLensConfigurationExcludeOutput() StorageLensConfigurationStorageLensConfigurationExcludeOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationExcludeOutput) ToStorageLensConfigurationStorageLensConfigurationExcludeOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationExcludeOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationExcludeOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationExclude] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationExclude]{
		OutputState: o.OutputState,
	}
}

// List of S3 bucket ARNs.
func (o StorageLensConfigurationStorageLensConfigurationExcludeOutput) Buckets() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationExclude](o, func(v StorageLensConfigurationStorageLensConfigurationExclude) []string { return v.Buckets })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of AWS Regions.
func (o StorageLensConfigurationStorageLensConfigurationExcludeOutput) Regions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationExclude](o, func(v StorageLensConfigurationStorageLensConfigurationExclude) []string { return v.Regions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type StorageLensConfigurationStorageLensConfigurationInclude struct {
	// List of S3 bucket ARNs.
	Buckets []string `pulumi:"buckets"`
	// List of AWS Regions.
	Regions []string `pulumi:"regions"`
}

type StorageLensConfigurationStorageLensConfigurationIncludeArgs struct {
	// List of S3 bucket ARNs.
	Buckets pulumix.Input[[]string] `pulumi:"buckets"`
	// List of AWS Regions.
	Regions pulumix.Input[[]string] `pulumi:"regions"`
}

func (StorageLensConfigurationStorageLensConfigurationIncludeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationInclude)(nil)).Elem()
}

func (i StorageLensConfigurationStorageLensConfigurationIncludeArgs) ToStorageLensConfigurationStorageLensConfigurationIncludeOutput() StorageLensConfigurationStorageLensConfigurationIncludeOutput {
	return i.ToStorageLensConfigurationStorageLensConfigurationIncludeOutputWithContext(context.Background())
}

func (i StorageLensConfigurationStorageLensConfigurationIncludeArgs) ToStorageLensConfigurationStorageLensConfigurationIncludeOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationIncludeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageLensConfigurationStorageLensConfigurationIncludeOutput)
}

func (i *StorageLensConfigurationStorageLensConfigurationIncludeArgs) ToOutput(ctx context.Context) pulumix.Output[*StorageLensConfigurationStorageLensConfigurationIncludeArgs] {
	return pulumix.Val(i)
}

type StorageLensConfigurationStorageLensConfigurationIncludeOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationStorageLensConfigurationIncludeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfigurationStorageLensConfigurationInclude)(nil)).Elem()
}

func (o StorageLensConfigurationStorageLensConfigurationIncludeOutput) ToStorageLensConfigurationStorageLensConfigurationIncludeOutput() StorageLensConfigurationStorageLensConfigurationIncludeOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationIncludeOutput) ToStorageLensConfigurationStorageLensConfigurationIncludeOutputWithContext(ctx context.Context) StorageLensConfigurationStorageLensConfigurationIncludeOutput {
	return o
}

func (o StorageLensConfigurationStorageLensConfigurationIncludeOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfigurationStorageLensConfigurationInclude] {
	return pulumix.Output[StorageLensConfigurationStorageLensConfigurationInclude]{
		OutputState: o.OutputState,
	}
}

// List of S3 bucket ARNs.
func (o StorageLensConfigurationStorageLensConfigurationIncludeOutput) Buckets() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationInclude](o, func(v StorageLensConfigurationStorageLensConfigurationInclude) []string { return v.Buckets })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of AWS Regions.
func (o StorageLensConfigurationStorageLensConfigurationIncludeOutput) Regions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[StorageLensConfigurationStorageLensConfigurationInclude](o, func(v StorageLensConfigurationStorageLensConfigurationInclude) []string { return v.Regions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetMultiRegionAccessPointPublicAccessBlock struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs). When set to `true` causes the following behavior:
	// * PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
	// * PUT Object calls fail if the request includes a public ACL.
	// * PUT Bucket calls fail if the request includes a public ACL.
	BlockPublicAcls bool `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. When set to `true` causes Amazon S3 to:
	// * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.
	BlockPublicPolicy bool `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. When set to `true` causes Amazon S3 to:
	// * Ignore all public ACLs on buckets in this account and any objects that they contain.
	IgnorePublicAcls bool `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. When set to `true`:
	// * Only the bucket owner and AWS Services can access buckets with public policies.
	RestrictPublicBuckets bool `pulumi:"restrictPublicBuckets"`
}

type GetMultiRegionAccessPointPublicAccessBlockArgs struct {
	// Specifies whether Amazon S3 should block public access control lists (ACLs). When set to `true` causes the following behavior:
	// * PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
	// * PUT Object calls fail if the request includes a public ACL.
	// * PUT Bucket calls fail if the request includes a public ACL.
	BlockPublicAcls pulumix.Input[bool] `pulumi:"blockPublicAcls"`
	// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. When set to `true` causes Amazon S3 to:
	// * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.
	BlockPublicPolicy pulumix.Input[bool] `pulumi:"blockPublicPolicy"`
	// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. When set to `true` causes Amazon S3 to:
	// * Ignore all public ACLs on buckets in this account and any objects that they contain.
	IgnorePublicAcls pulumix.Input[bool] `pulumi:"ignorePublicAcls"`
	// Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. When set to `true`:
	// * Only the bucket owner and AWS Services can access buckets with public policies.
	RestrictPublicBuckets pulumix.Input[bool] `pulumi:"restrictPublicBuckets"`
}

func (GetMultiRegionAccessPointPublicAccessBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMultiRegionAccessPointPublicAccessBlock)(nil)).Elem()
}

func (i GetMultiRegionAccessPointPublicAccessBlockArgs) ToGetMultiRegionAccessPointPublicAccessBlockOutput() GetMultiRegionAccessPointPublicAccessBlockOutput {
	return i.ToGetMultiRegionAccessPointPublicAccessBlockOutputWithContext(context.Background())
}

func (i GetMultiRegionAccessPointPublicAccessBlockArgs) ToGetMultiRegionAccessPointPublicAccessBlockOutputWithContext(ctx context.Context) GetMultiRegionAccessPointPublicAccessBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMultiRegionAccessPointPublicAccessBlockOutput)
}

func (i *GetMultiRegionAccessPointPublicAccessBlockArgs) ToOutput(ctx context.Context) pulumix.Output[*GetMultiRegionAccessPointPublicAccessBlockArgs] {
	return pulumix.Val(i)
}

type GetMultiRegionAccessPointPublicAccessBlockOutput struct{ *pulumi.OutputState }

func (GetMultiRegionAccessPointPublicAccessBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMultiRegionAccessPointPublicAccessBlock)(nil)).Elem()
}

func (o GetMultiRegionAccessPointPublicAccessBlockOutput) ToGetMultiRegionAccessPointPublicAccessBlockOutput() GetMultiRegionAccessPointPublicAccessBlockOutput {
	return o
}

func (o GetMultiRegionAccessPointPublicAccessBlockOutput) ToGetMultiRegionAccessPointPublicAccessBlockOutputWithContext(ctx context.Context) GetMultiRegionAccessPointPublicAccessBlockOutput {
	return o
}

func (o GetMultiRegionAccessPointPublicAccessBlockOutput) ToOutput(ctx context.Context) pulumix.Output[GetMultiRegionAccessPointPublicAccessBlock] {
	return pulumix.Output[GetMultiRegionAccessPointPublicAccessBlock]{
		OutputState: o.OutputState,
	}
}

// Specifies whether Amazon S3 should block public access control lists (ACLs). When set to `true` causes the following behavior:
// * PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
// * PUT Object calls fail if the request includes a public ACL.
// * PUT Bucket calls fail if the request includes a public ACL.
func (o GetMultiRegionAccessPointPublicAccessBlockOutput) BlockPublicAcls() pulumix.Output[bool] {
	return pulumix.Apply[GetMultiRegionAccessPointPublicAccessBlock](o, func(v GetMultiRegionAccessPointPublicAccessBlock) bool { return v.BlockPublicAcls })
}

// Specifies whether Amazon S3 should block public bucket policies for buckets in this account. When set to `true` causes Amazon S3 to:
// * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.
func (o GetMultiRegionAccessPointPublicAccessBlockOutput) BlockPublicPolicy() pulumix.Output[bool] {
	return pulumix.Apply[GetMultiRegionAccessPointPublicAccessBlock](o, func(v GetMultiRegionAccessPointPublicAccessBlock) bool { return v.BlockPublicPolicy })
}

// Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. When set to `true` causes Amazon S3 to:
// * Ignore all public ACLs on buckets in this account and any objects that they contain.
func (o GetMultiRegionAccessPointPublicAccessBlockOutput) IgnorePublicAcls() pulumix.Output[bool] {
	return pulumix.Apply[GetMultiRegionAccessPointPublicAccessBlock](o, func(v GetMultiRegionAccessPointPublicAccessBlock) bool { return v.IgnorePublicAcls })
}

// Specifies whether Amazon S3 should restrict public bucket policies for buckets in this account. When set to `true`:
// * Only the bucket owner and AWS Services can access buckets with public policies.
func (o GetMultiRegionAccessPointPublicAccessBlockOutput) RestrictPublicBuckets() pulumix.Output[bool] {
	return pulumix.Apply[GetMultiRegionAccessPointPublicAccessBlock](o, func(v GetMultiRegionAccessPointPublicAccessBlock) bool { return v.RestrictPublicBuckets })
}

type GetMultiRegionAccessPointRegion struct {
	// The name of the bucket.
	Bucket string `pulumi:"bucket"`
	// The name of the region.
	Region string `pulumi:"region"`
}

type GetMultiRegionAccessPointRegionArgs struct {
	// The name of the bucket.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// The name of the region.
	Region pulumix.Input[string] `pulumi:"region"`
}

func (GetMultiRegionAccessPointRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMultiRegionAccessPointRegion)(nil)).Elem()
}

func (i GetMultiRegionAccessPointRegionArgs) ToGetMultiRegionAccessPointRegionOutput() GetMultiRegionAccessPointRegionOutput {
	return i.ToGetMultiRegionAccessPointRegionOutputWithContext(context.Background())
}

func (i GetMultiRegionAccessPointRegionArgs) ToGetMultiRegionAccessPointRegionOutputWithContext(ctx context.Context) GetMultiRegionAccessPointRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMultiRegionAccessPointRegionOutput)
}

func (i *GetMultiRegionAccessPointRegionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetMultiRegionAccessPointRegionArgs] {
	return pulumix.Val(i)
}

type GetMultiRegionAccessPointRegionOutput struct{ *pulumi.OutputState }

func (GetMultiRegionAccessPointRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMultiRegionAccessPointRegion)(nil)).Elem()
}

func (o GetMultiRegionAccessPointRegionOutput) ToGetMultiRegionAccessPointRegionOutput() GetMultiRegionAccessPointRegionOutput {
	return o
}

func (o GetMultiRegionAccessPointRegionOutput) ToGetMultiRegionAccessPointRegionOutputWithContext(ctx context.Context) GetMultiRegionAccessPointRegionOutput {
	return o
}

func (o GetMultiRegionAccessPointRegionOutput) ToOutput(ctx context.Context) pulumix.Output[GetMultiRegionAccessPointRegion] {
	return pulumix.Output[GetMultiRegionAccessPointRegion]{
		OutputState: o.OutputState,
	}
}

// The name of the bucket.
func (o GetMultiRegionAccessPointRegionOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[GetMultiRegionAccessPointRegion](o, func(v GetMultiRegionAccessPointRegion) string { return v.Bucket })
}

// The name of the region.
func (o GetMultiRegionAccessPointRegionOutput) Region() pulumix.Output[string] {
	return pulumix.Apply[GetMultiRegionAccessPointRegion](o, func(v GetMultiRegionAccessPointRegion) string { return v.Region })
}

func init() {
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleExpirationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleFilterOutput{})
	pulumi.RegisterOutputType(MultiRegionAccessPointDetailsOutput{})
	pulumi.RegisterOutputType(MultiRegionAccessPointDetailsPublicAccessBlockOutput{})
	pulumi.RegisterOutputType(MultiRegionAccessPointDetailsRegionOutput{})
	pulumi.RegisterOutputType(MultiRegionAccessPointPolicyDetailsOutput{})
	pulumi.RegisterOutputType(ObjectLambdaAccessPointConfigurationOutput{})
	pulumi.RegisterOutputType(ObjectLambdaAccessPointConfigurationTransformationConfigurationOutput{})
	pulumi.RegisterOutputType(ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationOutput{})
	pulumi.RegisterOutputType(ObjectLambdaAccessPointConfigurationTransformationConfigurationContentTransformationAwsLambdaOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelActivityMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedCostOptimizationMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelAdvancedDataProtectionMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelActivityMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedCostOptimizationMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelAdvancedDataProtectionMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelDetailedStatusCodeMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelBucketLevelPrefixLevelStorageMetricsSelectionCriteriaOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAccountLevelDetailedStatusCodeMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationAwsOrgOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationDataExportOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationDataExportCloudWatchMetricsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseKmsOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionSseS3Output{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationExcludeOutput{})
	pulumi.RegisterOutputType(StorageLensConfigurationStorageLensConfigurationIncludeOutput{})
	pulumi.RegisterOutputType(GetMultiRegionAccessPointPublicAccessBlockOutput{})
	pulumi.RegisterOutputType(GetMultiRegionAccessPointRegionOutput{})
}
