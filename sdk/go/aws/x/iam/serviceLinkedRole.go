// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an [IAM service-linked role](https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html).
type ServiceLinkedRole struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) specifying the role.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
	AwsServiceName pulumix.Output[string] `pulumi:"awsServiceName"`
	// The creation date of the IAM role.
	CreateDate pulumix.Output[string] `pulumi:"createDate"`
	// Additional string appended to the role name. Not all AWS services support custom suffixes.
	CustomSuffix pulumix.Output[*string] `pulumi:"customSuffix"`
	// The description of the role.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The name of the role.
	Name pulumix.Output[string] `pulumi:"name"`
	// The path of the role.
	Path pulumix.Output[string] `pulumi:"path"`
	// Key-value mapping of tags for the IAM role. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The stable and unique string identifying the role.
	UniqueId pulumix.Output[string] `pulumi:"uniqueId"`
}

// NewServiceLinkedRole registers a new resource with the given unique name, arguments, and options.
func NewServiceLinkedRole(ctx *pulumi.Context,
	name string, args *ServiceLinkedRoleArgs, opts ...pulumi.ResourceOption) (*ServiceLinkedRole, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsServiceName == nil {
		return nil, errors.New("invalid value for required argument 'AwsServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceLinkedRole
	err := ctx.RegisterResource("aws:iam/serviceLinkedRole:ServiceLinkedRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceLinkedRole gets an existing ServiceLinkedRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceLinkedRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceLinkedRoleState, opts ...pulumi.ResourceOption) (*ServiceLinkedRole, error) {
	var resource ServiceLinkedRole
	err := ctx.ReadResource("aws:iam/serviceLinkedRole:ServiceLinkedRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceLinkedRole resources.
type serviceLinkedRoleState struct {
	// The Amazon Resource Name (ARN) specifying the role.
	Arn *string `pulumi:"arn"`
	// The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
	AwsServiceName *string `pulumi:"awsServiceName"`
	// The creation date of the IAM role.
	CreateDate *string `pulumi:"createDate"`
	// Additional string appended to the role name. Not all AWS services support custom suffixes.
	CustomSuffix *string `pulumi:"customSuffix"`
	// The description of the role.
	Description *string `pulumi:"description"`
	// The name of the role.
	Name *string `pulumi:"name"`
	// The path of the role.
	Path *string `pulumi:"path"`
	// Key-value mapping of tags for the IAM role. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The stable and unique string identifying the role.
	UniqueId *string `pulumi:"uniqueId"`
}

type ServiceLinkedRoleState struct {
	// The Amazon Resource Name (ARN) specifying the role.
	Arn pulumix.Input[*string]
	// The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
	AwsServiceName pulumix.Input[*string]
	// The creation date of the IAM role.
	CreateDate pulumix.Input[*string]
	// Additional string appended to the role name. Not all AWS services support custom suffixes.
	CustomSuffix pulumix.Input[*string]
	// The description of the role.
	Description pulumix.Input[*string]
	// The name of the role.
	Name pulumix.Input[*string]
	// The path of the role.
	Path pulumix.Input[*string]
	// Key-value mapping of tags for the IAM role. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The stable and unique string identifying the role.
	UniqueId pulumix.Input[*string]
}

func (ServiceLinkedRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLinkedRoleState)(nil)).Elem()
}

type serviceLinkedRoleArgs struct {
	// The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
	AwsServiceName string `pulumi:"awsServiceName"`
	// Additional string appended to the role name. Not all AWS services support custom suffixes.
	CustomSuffix *string `pulumi:"customSuffix"`
	// The description of the role.
	Description *string `pulumi:"description"`
	// Key-value mapping of tags for the IAM role. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ServiceLinkedRole resource.
type ServiceLinkedRoleArgs struct {
	// The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
	AwsServiceName pulumix.Input[string]
	// Additional string appended to the role name. Not all AWS services support custom suffixes.
	CustomSuffix pulumix.Input[*string]
	// The description of the role.
	Description pulumix.Input[*string]
	// Key-value mapping of tags for the IAM role. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ServiceLinkedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceLinkedRoleArgs)(nil)).Elem()
}

type ServiceLinkedRoleOutput struct{ *pulumi.OutputState }

func (ServiceLinkedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLinkedRole)(nil)).Elem()
}

func (o ServiceLinkedRoleOutput) ToServiceLinkedRoleOutput() ServiceLinkedRoleOutput {
	return o
}

func (o ServiceLinkedRoleOutput) ToServiceLinkedRoleOutputWithContext(ctx context.Context) ServiceLinkedRoleOutput {
	return o
}

func (o ServiceLinkedRoleOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceLinkedRole] {
	return pulumix.Output[ServiceLinkedRole]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) specifying the role.
func (o ServiceLinkedRoleOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
func (o ServiceLinkedRoleOutput) AwsServiceName() pulumix.Output[string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.Output[string] { return v.AwsServiceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The creation date of the IAM role.
func (o ServiceLinkedRoleOutput) CreateDate() pulumix.Output[string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.Output[string] { return v.CreateDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Additional string appended to the role name. Not all AWS services support custom suffixes.
func (o ServiceLinkedRoleOutput) CustomSuffix() pulumix.Output[*string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.Output[*string] { return v.CustomSuffix })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The description of the role.
func (o ServiceLinkedRoleOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the role.
func (o ServiceLinkedRoleOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The path of the role.
func (o ServiceLinkedRoleOutput) Path() pulumix.Output[string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.Output[string] { return v.Path })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value mapping of tags for the IAM role. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ServiceLinkedRoleOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ServiceLinkedRoleOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The stable and unique string identifying the role.
func (o ServiceLinkedRoleOutput) UniqueId() pulumix.Output[string] {
	value := pulumix.Apply[ServiceLinkedRole](o, func(v ServiceLinkedRole) pulumix.Output[string] { return v.UniqueId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ServiceLinkedRoleOutput{})
}
