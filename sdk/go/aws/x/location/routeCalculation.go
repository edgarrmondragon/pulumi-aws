// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Location Service Route Calculator.
type RouteCalculation struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) for the Route calculator resource. Use the ARN when you specify a resource across AWS.
	CalculatorArn pulumix.Output[string] `pulumi:"calculatorArn"`
	// The name of the route calculator resource.
	CalculatorName pulumix.Output[string] `pulumi:"calculatorName"`
	// The timestamp for when the route calculator resource was created in ISO 8601 format.
	CreateTime pulumix.Output[string] `pulumi:"createTime"`
	// Specifies the data provider of traffic and road network data.
	//
	// The following arguments are optional:
	DataSource pulumix.Output[string] `pulumi:"dataSource"`
	// The optional description for the route calculator resource.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Key-value tags for the route calculator. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The timestamp for when the route calculator resource was last update in ISO 8601.
	UpdateTime pulumix.Output[string] `pulumi:"updateTime"`
}

// NewRouteCalculation registers a new resource with the given unique name, arguments, and options.
func NewRouteCalculation(ctx *pulumi.Context,
	name string, args *RouteCalculationArgs, opts ...pulumi.ResourceOption) (*RouteCalculation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CalculatorName == nil {
		return nil, errors.New("invalid value for required argument 'CalculatorName'")
	}
	if args.DataSource == nil {
		return nil, errors.New("invalid value for required argument 'DataSource'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouteCalculation
	err := ctx.RegisterResource("aws:location/routeCalculation:RouteCalculation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteCalculation gets an existing RouteCalculation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteCalculation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteCalculationState, opts ...pulumi.ResourceOption) (*RouteCalculation, error) {
	var resource RouteCalculation
	err := ctx.ReadResource("aws:location/routeCalculation:RouteCalculation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteCalculation resources.
type routeCalculationState struct {
	// The Amazon Resource Name (ARN) for the Route calculator resource. Use the ARN when you specify a resource across AWS.
	CalculatorArn *string `pulumi:"calculatorArn"`
	// The name of the route calculator resource.
	CalculatorName *string `pulumi:"calculatorName"`
	// The timestamp for when the route calculator resource was created in ISO 8601 format.
	CreateTime *string `pulumi:"createTime"`
	// Specifies the data provider of traffic and road network data.
	//
	// The following arguments are optional:
	DataSource *string `pulumi:"dataSource"`
	// The optional description for the route calculator resource.
	Description *string `pulumi:"description"`
	// Key-value tags for the route calculator. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The timestamp for when the route calculator resource was last update in ISO 8601.
	UpdateTime *string `pulumi:"updateTime"`
}

type RouteCalculationState struct {
	// The Amazon Resource Name (ARN) for the Route calculator resource. Use the ARN when you specify a resource across AWS.
	CalculatorArn pulumix.Input[*string]
	// The name of the route calculator resource.
	CalculatorName pulumix.Input[*string]
	// The timestamp for when the route calculator resource was created in ISO 8601 format.
	CreateTime pulumix.Input[*string]
	// Specifies the data provider of traffic and road network data.
	//
	// The following arguments are optional:
	DataSource pulumix.Input[*string]
	// The optional description for the route calculator resource.
	Description pulumix.Input[*string]
	// Key-value tags for the route calculator. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The timestamp for when the route calculator resource was last update in ISO 8601.
	UpdateTime pulumix.Input[*string]
}

func (RouteCalculationState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeCalculationState)(nil)).Elem()
}

type routeCalculationArgs struct {
	// The name of the route calculator resource.
	CalculatorName string `pulumi:"calculatorName"`
	// Specifies the data provider of traffic and road network data.
	//
	// The following arguments are optional:
	DataSource string `pulumi:"dataSource"`
	// The optional description for the route calculator resource.
	Description *string `pulumi:"description"`
	// Key-value tags for the route calculator. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a RouteCalculation resource.
type RouteCalculationArgs struct {
	// The name of the route calculator resource.
	CalculatorName pulumix.Input[string]
	// Specifies the data provider of traffic and road network data.
	//
	// The following arguments are optional:
	DataSource pulumix.Input[string]
	// The optional description for the route calculator resource.
	Description pulumix.Input[*string]
	// Key-value tags for the route calculator. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (RouteCalculationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeCalculationArgs)(nil)).Elem()
}

type RouteCalculationOutput struct{ *pulumi.OutputState }

func (RouteCalculationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteCalculation)(nil)).Elem()
}

func (o RouteCalculationOutput) ToRouteCalculationOutput() RouteCalculationOutput {
	return o
}

func (o RouteCalculationOutput) ToRouteCalculationOutputWithContext(ctx context.Context) RouteCalculationOutput {
	return o
}

func (o RouteCalculationOutput) ToOutput(ctx context.Context) pulumix.Output[RouteCalculation] {
	return pulumix.Output[RouteCalculation]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) for the Route calculator resource. Use the ARN when you specify a resource across AWS.
func (o RouteCalculationOutput) CalculatorArn() pulumix.Output[string] {
	value := pulumix.Apply[RouteCalculation](o, func(v RouteCalculation) pulumix.Output[string] { return v.CalculatorArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the route calculator resource.
func (o RouteCalculationOutput) CalculatorName() pulumix.Output[string] {
	value := pulumix.Apply[RouteCalculation](o, func(v RouteCalculation) pulumix.Output[string] { return v.CalculatorName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The timestamp for when the route calculator resource was created in ISO 8601 format.
func (o RouteCalculationOutput) CreateTime() pulumix.Output[string] {
	value := pulumix.Apply[RouteCalculation](o, func(v RouteCalculation) pulumix.Output[string] { return v.CreateTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the data provider of traffic and road network data.
//
// The following arguments are optional:
func (o RouteCalculationOutput) DataSource() pulumix.Output[string] {
	value := pulumix.Apply[RouteCalculation](o, func(v RouteCalculation) pulumix.Output[string] { return v.DataSource })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The optional description for the route calculator resource.
func (o RouteCalculationOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[RouteCalculation](o, func(v RouteCalculation) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value tags for the route calculator. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o RouteCalculationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[RouteCalculation](o, func(v RouteCalculation) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o RouteCalculationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[RouteCalculation](o, func(v RouteCalculation) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The timestamp for when the route calculator resource was last update in ISO 8601.
func (o RouteCalculationOutput) UpdateTime() pulumix.Output[string] {
	value := pulumix.Apply[RouteCalculation](o, func(v RouteCalculation) pulumix.Output[string] { return v.UpdateTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(RouteCalculationOutput{})
}
