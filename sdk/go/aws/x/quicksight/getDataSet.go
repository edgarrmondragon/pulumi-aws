// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing a QuickSight Data Set.
func LookupDataSet(ctx *pulumi.Context, args *LookupDataSetArgs, opts ...pulumi.InvokeOption) (*LookupDataSetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataSetResult
	err := ctx.Invoke("aws:quicksight/getDataSet:getDataSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataSet.
type LookupDataSetArgs struct {
	// AWS account ID.
	AwsAccountId               *string                               `pulumi:"awsAccountId"`
	ColumnLevelPermissionRules []GetDataSetColumnLevelPermissionRule `pulumi:"columnLevelPermissionRules"`
	// Identifier for the data set.
	//
	// The following arguments are optional:
	DataSetId string            `pulumi:"dataSetId"`
	Tags      map[string]string `pulumi:"tags"`
	// Deprecated: this attribute has been deprecated
	TagsAll map[string]string `pulumi:"tagsAll"`
}

// A collection of values returned by getDataSet.
type LookupDataSetResult struct {
	Arn                        string                                `pulumi:"arn"`
	AwsAccountId               string                                `pulumi:"awsAccountId"`
	ColumnGroups               []GetDataSetColumnGroup               `pulumi:"columnGroups"`
	ColumnLevelPermissionRules []GetDataSetColumnLevelPermissionRule `pulumi:"columnLevelPermissionRules"`
	DataSetId                  string                                `pulumi:"dataSetId"`
	DataSetUsageConfigurations []GetDataSetDataSetUsageConfiguration `pulumi:"dataSetUsageConfigurations"`
	FieldFolders               []GetDataSetFieldFolder               `pulumi:"fieldFolders"`
	// The provider-assigned unique ID for this managed resource.
	Id                                  string                                         `pulumi:"id"`
	ImportMode                          string                                         `pulumi:"importMode"`
	LogicalTableMaps                    []GetDataSetLogicalTableMap                    `pulumi:"logicalTableMaps"`
	Name                                string                                         `pulumi:"name"`
	Permissions                         []GetDataSetPermission                         `pulumi:"permissions"`
	PhysicalTableMaps                   []GetDataSetPhysicalTableMap                   `pulumi:"physicalTableMaps"`
	RowLevelPermissionDataSets          []GetDataSetRowLevelPermissionDataSet          `pulumi:"rowLevelPermissionDataSets"`
	RowLevelPermissionTagConfigurations []GetDataSetRowLevelPermissionTagConfiguration `pulumi:"rowLevelPermissionTagConfigurations"`
	Tags                                map[string]string                              `pulumi:"tags"`
	// Deprecated: this attribute has been deprecated
	TagsAll map[string]string `pulumi:"tagsAll"`
}

func LookupDataSetOutput(ctx *pulumi.Context, args LookupDataSetOutputArgs, opts ...pulumi.InvokeOption) LookupDataSetResultOutput {
	outputResult := pulumix.ApplyErr[*LookupDataSetArgs](args.ToOutput(), func(plainArgs *LookupDataSetArgs) (*LookupDataSetResult, error) {
		return LookupDataSet(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupDataSetResultOutput, *LookupDataSetResult](outputResult)
}

// A collection of arguments for invoking getDataSet.
type LookupDataSetOutputArgs struct {
	// AWS account ID.
	AwsAccountId               pulumix.Input[*string]                                    `pulumi:"awsAccountId"`
	ColumnLevelPermissionRules pulumix.Input[[]*GetDataSetColumnLevelPermissionRuleArgs] `pulumi:"columnLevelPermissionRules"`
	// Identifier for the data set.
	//
	// The following arguments are optional:
	DataSetId pulumix.Input[string]            `pulumi:"dataSetId"`
	Tags      pulumix.Input[map[string]string] `pulumi:"tags"`
	// Deprecated: this attribute has been deprecated
	TagsAll pulumix.Input[map[string]string] `pulumi:"tagsAll"`
}

func (args LookupDataSetOutputArgs) ToOutput() pulumix.Output[*LookupDataSetArgs] {
	allArgs := pulumix.All(
		args.AwsAccountId.ToOutput(context.Background()).AsAny(),
		args.ColumnLevelPermissionRules.ToOutput(context.Background()).AsAny(),
		args.DataSetId.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny(),
		args.TagsAll.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupDataSetArgs {
		return &LookupDataSetArgs{
			AwsAccountId:               resolvedArgs[0].(*string),
			ColumnLevelPermissionRules: resolvedArgs[1].([]GetDataSetColumnLevelPermissionRule),
			DataSetId:                  resolvedArgs[2].(string),
			Tags:                       resolvedArgs[3].(map[string]string),
			TagsAll:                    resolvedArgs[4].(map[string]string),
		}
	})
}

type LookupDataSetResultOutput struct{ *pulumi.OutputState }

func (LookupDataSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataSetResult)(nil)).Elem()
}

func (o LookupDataSetResultOutput) ToOutput(context.Context) pulumix.Output[*LookupDataSetResult] {
	return pulumix.Output[*LookupDataSetResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupDataSetResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) string { return v.Arn })
}

func (o LookupDataSetResultOutput) AwsAccountId() pulumix.Output[string] {
	return pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) string { return v.AwsAccountId })
}

func (o LookupDataSetResultOutput) ColumnGroups() pulumix.GArrayOutput[GetDataSetColumnGroup, GetDataSetColumnGroupOutput] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) []GetDataSetColumnGroup { return v.ColumnGroups })
	return pulumix.GArrayOutput[GetDataSetColumnGroup, GetDataSetColumnGroupOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) ColumnLevelPermissionRules() pulumix.GArrayOutput[GetDataSetColumnLevelPermissionRule, GetDataSetColumnLevelPermissionRuleOutput] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) []GetDataSetColumnLevelPermissionRule {
		return v.ColumnLevelPermissionRules
	})
	return pulumix.GArrayOutput[GetDataSetColumnLevelPermissionRule, GetDataSetColumnLevelPermissionRuleOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) DataSetId() pulumix.Output[string] {
	return pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) string { return v.DataSetId })
}

func (o LookupDataSetResultOutput) DataSetUsageConfigurations() pulumix.GArrayOutput[GetDataSetDataSetUsageConfiguration, GetDataSetDataSetUsageConfigurationOutput] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) []GetDataSetDataSetUsageConfiguration {
		return v.DataSetUsageConfigurations
	})
	return pulumix.GArrayOutput[GetDataSetDataSetUsageConfiguration, GetDataSetDataSetUsageConfigurationOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) FieldFolders() pulumix.GArrayOutput[GetDataSetFieldFolder, GetDataSetFieldFolderOutput] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) []GetDataSetFieldFolder { return v.FieldFolders })
	return pulumix.GArrayOutput[GetDataSetFieldFolder, GetDataSetFieldFolderOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) string { return v.Id })
}

func (o LookupDataSetResultOutput) ImportMode() pulumix.Output[string] {
	return pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) string { return v.ImportMode })
}

func (o LookupDataSetResultOutput) LogicalTableMaps() pulumix.GArrayOutput[GetDataSetLogicalTableMap, GetDataSetLogicalTableMapOutput] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) []GetDataSetLogicalTableMap { return v.LogicalTableMaps })
	return pulumix.GArrayOutput[GetDataSetLogicalTableMap, GetDataSetLogicalTableMapOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) string { return v.Name })
}

func (o LookupDataSetResultOutput) Permissions() pulumix.GArrayOutput[GetDataSetPermission, GetDataSetPermissionOutput] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) []GetDataSetPermission { return v.Permissions })
	return pulumix.GArrayOutput[GetDataSetPermission, GetDataSetPermissionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) PhysicalTableMaps() pulumix.GArrayOutput[GetDataSetPhysicalTableMap, GetDataSetPhysicalTableMapOutput] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) []GetDataSetPhysicalTableMap { return v.PhysicalTableMaps })
	return pulumix.GArrayOutput[GetDataSetPhysicalTableMap, GetDataSetPhysicalTableMapOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) RowLevelPermissionDataSets() pulumix.GArrayOutput[GetDataSetRowLevelPermissionDataSet, GetDataSetRowLevelPermissionDataSetOutput] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) []GetDataSetRowLevelPermissionDataSet {
		return v.RowLevelPermissionDataSets
	})
	return pulumix.GArrayOutput[GetDataSetRowLevelPermissionDataSet, GetDataSetRowLevelPermissionDataSetOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) RowLevelPermissionTagConfigurations() pulumix.GArrayOutput[GetDataSetRowLevelPermissionTagConfiguration, GetDataSetRowLevelPermissionTagConfigurationOutput] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) []GetDataSetRowLevelPermissionTagConfiguration {
		return v.RowLevelPermissionTagConfigurations
	})
	return pulumix.GArrayOutput[GetDataSetRowLevelPermissionTagConfiguration, GetDataSetRowLevelPermissionTagConfigurationOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataSetResultOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupDataSetResult](o, func(v *LookupDataSetResult) map[string]string { return v.TagsAll })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
