// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an App Runner VPC Ingress Connection.
type VpcIngressConnection struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the VPC Ingress Connection.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The domain name associated with the VPC Ingress Connection resource.
	DomainName pulumix.Output[string] `pulumi:"domainName"`
	// Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
	IngressVpcConfiguration pulumix.GPtrOutput[VpcIngressConnectionIngressVpcConfiguration, VpcIngressConnectionIngressVpcConfigurationOutput] `pulumi:"ingressVpcConfiguration"`
	// A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
	Name pulumix.Output[string] `pulumi:"name"`
	// The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
	ServiceArn pulumix.Output[string] `pulumi:"serviceArn"`
	// The current status of the VPC Ingress Connection.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewVpcIngressConnection registers a new resource with the given unique name, arguments, and options.
func NewVpcIngressConnection(ctx *pulumi.Context,
	name string, args *VpcIngressConnectionArgs, opts ...pulumi.ResourceOption) (*VpcIngressConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IngressVpcConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'IngressVpcConfiguration'")
	}
	if args.ServiceArn == nil {
		return nil, errors.New("invalid value for required argument 'ServiceArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcIngressConnection
	err := ctx.RegisterResource("aws:apprunner/vpcIngressConnection:VpcIngressConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcIngressConnection gets an existing VpcIngressConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcIngressConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcIngressConnectionState, opts ...pulumi.ResourceOption) (*VpcIngressConnection, error) {
	var resource VpcIngressConnection
	err := ctx.ReadResource("aws:apprunner/vpcIngressConnection:VpcIngressConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcIngressConnection resources.
type vpcIngressConnectionState struct {
	// The Amazon Resource Name (ARN) of the VPC Ingress Connection.
	Arn *string `pulumi:"arn"`
	// The domain name associated with the VPC Ingress Connection resource.
	DomainName *string `pulumi:"domainName"`
	// Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
	IngressVpcConfiguration *VpcIngressConnectionIngressVpcConfiguration `pulumi:"ingressVpcConfiguration"`
	// A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
	ServiceArn *string `pulumi:"serviceArn"`
	// The current status of the VPC Ingress Connection.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type VpcIngressConnectionState struct {
	// The Amazon Resource Name (ARN) of the VPC Ingress Connection.
	Arn pulumix.Input[*string]
	// The domain name associated with the VPC Ingress Connection resource.
	DomainName pulumix.Input[*string]
	// Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
	IngressVpcConfiguration pulumix.Input[*VpcIngressConnectionIngressVpcConfigurationArgs]
	// A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
	Name pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
	ServiceArn pulumix.Input[*string]
	// The current status of the VPC Ingress Connection.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (VpcIngressConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIngressConnectionState)(nil)).Elem()
}

type vpcIngressConnectionArgs struct {
	// Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
	IngressVpcConfiguration VpcIngressConnectionIngressVpcConfiguration `pulumi:"ingressVpcConfiguration"`
	// A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
	ServiceArn string `pulumi:"serviceArn"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VpcIngressConnection resource.
type VpcIngressConnectionArgs struct {
	// Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
	IngressVpcConfiguration pulumix.Input[*VpcIngressConnectionIngressVpcConfigurationArgs]
	// A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
	Name pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
	ServiceArn pulumix.Input[string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (VpcIngressConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIngressConnectionArgs)(nil)).Elem()
}

type VpcIngressConnectionOutput struct{ *pulumi.OutputState }

func (VpcIngressConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIngressConnection)(nil)).Elem()
}

func (o VpcIngressConnectionOutput) ToVpcIngressConnectionOutput() VpcIngressConnectionOutput {
	return o
}

func (o VpcIngressConnectionOutput) ToVpcIngressConnectionOutputWithContext(ctx context.Context) VpcIngressConnectionOutput {
	return o
}

func (o VpcIngressConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[VpcIngressConnection] {
	return pulumix.Output[VpcIngressConnection]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the VPC Ingress Connection.
func (o VpcIngressConnectionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[VpcIngressConnection](o, func(v VpcIngressConnection) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The domain name associated with the VPC Ingress Connection resource.
func (o VpcIngressConnectionOutput) DomainName() pulumix.Output[string] {
	value := pulumix.Apply[VpcIngressConnection](o, func(v VpcIngressConnection) pulumix.Output[string] { return v.DomainName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
func (o VpcIngressConnectionOutput) IngressVpcConfiguration() pulumix.GPtrOutput[VpcIngressConnectionIngressVpcConfiguration, VpcIngressConnectionIngressVpcConfigurationOutput] {
	value := pulumix.Apply[VpcIngressConnection](o, func(v VpcIngressConnection) pulumix.GPtrOutput[VpcIngressConnectionIngressVpcConfiguration, VpcIngressConnectionIngressVpcConfigurationOutput] {
		return v.IngressVpcConfiguration
	})
	unwrapped := pulumix.Flatten[*VpcIngressConnectionIngressVpcConfiguration, pulumix.GPtrOutput[VpcIngressConnectionIngressVpcConfiguration, VpcIngressConnectionIngressVpcConfigurationOutput]](value)
	return pulumix.GPtrOutput[VpcIngressConnectionIngressVpcConfiguration, VpcIngressConnectionIngressVpcConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
func (o VpcIngressConnectionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[VpcIngressConnection](o, func(v VpcIngressConnection) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
func (o VpcIngressConnectionOutput) ServiceArn() pulumix.Output[string] {
	value := pulumix.Apply[VpcIngressConnection](o, func(v VpcIngressConnection) pulumix.Output[string] { return v.ServiceArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The current status of the VPC Ingress Connection.
func (o VpcIngressConnectionOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[VpcIngressConnection](o, func(v VpcIngressConnection) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o VpcIngressConnectionOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[VpcIngressConnection](o, func(v VpcIngressConnection) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o VpcIngressConnectionOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[VpcIngressConnection](o, func(v VpcIngressConnection) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(VpcIngressConnectionOutput{})
}
