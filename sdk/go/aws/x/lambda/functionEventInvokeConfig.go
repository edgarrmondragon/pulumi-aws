// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an asynchronous invocation configuration for a Lambda Function or Alias. More information about asynchronous invocations and the configurable values can be found in the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html).
type FunctionEventInvokeConfig struct {
	pulumi.CustomResourceState

	// Configuration block with destination configuration. See below for details.
	DestinationConfig pulumix.GPtrOutput[FunctionEventInvokeConfigDestinationConfig, FunctionEventInvokeConfigDestinationConfigOutput] `pulumi:"destinationConfig"`
	// Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	//
	// The following arguments are optional:
	FunctionName pulumix.Output[string] `pulumi:"functionName"`
	// Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.
	MaximumEventAgeInSeconds pulumix.Output[*int] `pulumi:"maximumEventAgeInSeconds"`
	// Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.
	MaximumRetryAttempts pulumix.Output[*int] `pulumi:"maximumRetryAttempts"`
	// Lambda Function published version, `$LATEST`, or Lambda Alias name.
	Qualifier pulumix.Output[*string] `pulumi:"qualifier"`
}

// NewFunctionEventInvokeConfig registers a new resource with the given unique name, arguments, and options.
func NewFunctionEventInvokeConfig(ctx *pulumi.Context,
	name string, args *FunctionEventInvokeConfigArgs, opts ...pulumi.ResourceOption) (*FunctionEventInvokeConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FunctionEventInvokeConfig
	err := ctx.RegisterResource("aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionEventInvokeConfig gets an existing FunctionEventInvokeConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionEventInvokeConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionEventInvokeConfigState, opts ...pulumi.ResourceOption) (*FunctionEventInvokeConfig, error) {
	var resource FunctionEventInvokeConfig
	err := ctx.ReadResource("aws:lambda/functionEventInvokeConfig:FunctionEventInvokeConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionEventInvokeConfig resources.
type functionEventInvokeConfigState struct {
	// Configuration block with destination configuration. See below for details.
	DestinationConfig *FunctionEventInvokeConfigDestinationConfig `pulumi:"destinationConfig"`
	// Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	//
	// The following arguments are optional:
	FunctionName *string `pulumi:"functionName"`
	// Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.
	MaximumEventAgeInSeconds *int `pulumi:"maximumEventAgeInSeconds"`
	// Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.
	MaximumRetryAttempts *int `pulumi:"maximumRetryAttempts"`
	// Lambda Function published version, `$LATEST`, or Lambda Alias name.
	Qualifier *string `pulumi:"qualifier"`
}

type FunctionEventInvokeConfigState struct {
	// Configuration block with destination configuration. See below for details.
	DestinationConfig pulumix.Input[*FunctionEventInvokeConfigDestinationConfigArgs]
	// Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	//
	// The following arguments are optional:
	FunctionName pulumix.Input[*string]
	// Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.
	MaximumEventAgeInSeconds pulumix.Input[*int]
	// Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.
	MaximumRetryAttempts pulumix.Input[*int]
	// Lambda Function published version, `$LATEST`, or Lambda Alias name.
	Qualifier pulumix.Input[*string]
}

func (FunctionEventInvokeConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionEventInvokeConfigState)(nil)).Elem()
}

type functionEventInvokeConfigArgs struct {
	// Configuration block with destination configuration. See below for details.
	DestinationConfig *FunctionEventInvokeConfigDestinationConfig `pulumi:"destinationConfig"`
	// Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	//
	// The following arguments are optional:
	FunctionName string `pulumi:"functionName"`
	// Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.
	MaximumEventAgeInSeconds *int `pulumi:"maximumEventAgeInSeconds"`
	// Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.
	MaximumRetryAttempts *int `pulumi:"maximumRetryAttempts"`
	// Lambda Function published version, `$LATEST`, or Lambda Alias name.
	Qualifier *string `pulumi:"qualifier"`
}

// The set of arguments for constructing a FunctionEventInvokeConfig resource.
type FunctionEventInvokeConfigArgs struct {
	// Configuration block with destination configuration. See below for details.
	DestinationConfig pulumix.Input[*FunctionEventInvokeConfigDestinationConfigArgs]
	// Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	//
	// The following arguments are optional:
	FunctionName pulumix.Input[string]
	// Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.
	MaximumEventAgeInSeconds pulumix.Input[*int]
	// Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.
	MaximumRetryAttempts pulumix.Input[*int]
	// Lambda Function published version, `$LATEST`, or Lambda Alias name.
	Qualifier pulumix.Input[*string]
}

func (FunctionEventInvokeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionEventInvokeConfigArgs)(nil)).Elem()
}

type FunctionEventInvokeConfigOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfig)(nil)).Elem()
}

func (o FunctionEventInvokeConfigOutput) ToFunctionEventInvokeConfigOutput() FunctionEventInvokeConfigOutput {
	return o
}

func (o FunctionEventInvokeConfigOutput) ToFunctionEventInvokeConfigOutputWithContext(ctx context.Context) FunctionEventInvokeConfigOutput {
	return o
}

func (o FunctionEventInvokeConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FunctionEventInvokeConfig] {
	return pulumix.Output[FunctionEventInvokeConfig]{
		OutputState: o.OutputState,
	}
}

// Configuration block with destination configuration. See below for details.
func (o FunctionEventInvokeConfigOutput) DestinationConfig() pulumix.GPtrOutput[FunctionEventInvokeConfigDestinationConfig, FunctionEventInvokeConfigDestinationConfigOutput] {
	value := pulumix.Apply[FunctionEventInvokeConfig](o, func(v FunctionEventInvokeConfig) pulumix.GPtrOutput[FunctionEventInvokeConfigDestinationConfig, FunctionEventInvokeConfigDestinationConfigOutput] {
		return v.DestinationConfig
	})
	unwrapped := pulumix.Flatten[*FunctionEventInvokeConfigDestinationConfig, pulumix.GPtrOutput[FunctionEventInvokeConfigDestinationConfig, FunctionEventInvokeConfigDestinationConfigOutput]](value)
	return pulumix.GPtrOutput[FunctionEventInvokeConfigDestinationConfig, FunctionEventInvokeConfigDestinationConfigOutput]{OutputState: unwrapped.OutputState}
}

// Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
//
// The following arguments are optional:
func (o FunctionEventInvokeConfigOutput) FunctionName() pulumix.Output[string] {
	value := pulumix.Apply[FunctionEventInvokeConfig](o, func(v FunctionEventInvokeConfig) pulumix.Output[string] { return v.FunctionName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600.
func (o FunctionEventInvokeConfigOutput) MaximumEventAgeInSeconds() pulumix.Output[*int] {
	value := pulumix.Apply[FunctionEventInvokeConfig](o, func(v FunctionEventInvokeConfig) pulumix.Output[*int] { return v.MaximumEventAgeInSeconds })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2.
func (o FunctionEventInvokeConfigOutput) MaximumRetryAttempts() pulumix.Output[*int] {
	value := pulumix.Apply[FunctionEventInvokeConfig](o, func(v FunctionEventInvokeConfig) pulumix.Output[*int] { return v.MaximumRetryAttempts })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Lambda Function published version, `$LATEST`, or Lambda Alias name.
func (o FunctionEventInvokeConfigOutput) Qualifier() pulumix.Output[*string] {
	value := pulumix.Apply[FunctionEventInvokeConfig](o, func(v FunctionEventInvokeConfig) pulumix.Output[*string] { return v.Qualifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(FunctionEventInvokeConfigOutput{})
}
