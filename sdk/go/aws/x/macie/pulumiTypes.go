// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package macie

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type FindingsFilterFindingCriteria struct {
	// A condition that specifies the property, operator, and one or more values to use to filter the results.  (documented below)
	Criterions []FindingsFilterFindingCriteriaCriterion `pulumi:"criterions"`
}

type FindingsFilterFindingCriteriaArgs struct {
	// A condition that specifies the property, operator, and one or more values to use to filter the results.  (documented below)
	Criterions pulumix.Input[[]*FindingsFilterFindingCriteriaCriterionArgs] `pulumi:"criterions"`
}

func (FindingsFilterFindingCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FindingsFilterFindingCriteria)(nil)).Elem()
}

func (i FindingsFilterFindingCriteriaArgs) ToFindingsFilterFindingCriteriaOutput() FindingsFilterFindingCriteriaOutput {
	return i.ToFindingsFilterFindingCriteriaOutputWithContext(context.Background())
}

func (i FindingsFilterFindingCriteriaArgs) ToFindingsFilterFindingCriteriaOutputWithContext(ctx context.Context) FindingsFilterFindingCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FindingsFilterFindingCriteriaOutput)
}

func (i *FindingsFilterFindingCriteriaArgs) ToOutput(ctx context.Context) pulumix.Output[*FindingsFilterFindingCriteriaArgs] {
	return pulumix.Val(i)
}

type FindingsFilterFindingCriteriaOutput struct{ *pulumi.OutputState }

func (FindingsFilterFindingCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FindingsFilterFindingCriteria)(nil)).Elem()
}

func (o FindingsFilterFindingCriteriaOutput) ToFindingsFilterFindingCriteriaOutput() FindingsFilterFindingCriteriaOutput {
	return o
}

func (o FindingsFilterFindingCriteriaOutput) ToFindingsFilterFindingCriteriaOutputWithContext(ctx context.Context) FindingsFilterFindingCriteriaOutput {
	return o
}

func (o FindingsFilterFindingCriteriaOutput) ToOutput(ctx context.Context) pulumix.Output[FindingsFilterFindingCriteria] {
	return pulumix.Output[FindingsFilterFindingCriteria]{
		OutputState: o.OutputState,
	}
}

// A condition that specifies the property, operator, and one or more values to use to filter the results.  (documented below)
func (o FindingsFilterFindingCriteriaOutput) Criterions() pulumix.GArrayOutput[FindingsFilterFindingCriteriaCriterion, FindingsFilterFindingCriteriaCriterionOutput] {
	value := pulumix.Apply[FindingsFilterFindingCriteria](o, func(v FindingsFilterFindingCriteria) []FindingsFilterFindingCriteriaCriterion { return v.Criterions })
	return pulumix.GArrayOutput[FindingsFilterFindingCriteriaCriterion, FindingsFilterFindingCriteriaCriterionOutput]{OutputState: value.OutputState}
}

type FindingsFilterFindingCriteriaCriterion struct {
	// The value for the property exclusively matches (equals an exact match for) all the specified values. If you specify multiple values, Amazon Macie uses AND logic to join the values.
	EqExactMatches []string `pulumi:"eqExactMatches"`
	// The value for the property matches (equals) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values.
	Eqs []string `pulumi:"eqs"`
	// The name of the field to be evaluated.
	Field string `pulumi:"field"`
	// The value for the property is greater than the specified value.
	Gt *string `pulumi:"gt"`
	// The value for the property is greater than or equal to the specified value.
	Gte *string `pulumi:"gte"`
	// The value for the property is less than the specified value.
	Lt *string `pulumi:"lt"`
	// The value for the property is less than or equal to the specified value.
	Lte *string `pulumi:"lte"`
	// The value for the property doesn't match (doesn't equal) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values.
	Neqs []string `pulumi:"neqs"`
}

type FindingsFilterFindingCriteriaCriterionArgs struct {
	// The value for the property exclusively matches (equals an exact match for) all the specified values. If you specify multiple values, Amazon Macie uses AND logic to join the values.
	EqExactMatches pulumix.Input[[]string] `pulumi:"eqExactMatches"`
	// The value for the property matches (equals) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values.
	Eqs pulumix.Input[[]string] `pulumi:"eqs"`
	// The name of the field to be evaluated.
	Field pulumix.Input[string] `pulumi:"field"`
	// The value for the property is greater than the specified value.
	Gt pulumix.Input[*string] `pulumi:"gt"`
	// The value for the property is greater than or equal to the specified value.
	Gte pulumix.Input[*string] `pulumi:"gte"`
	// The value for the property is less than the specified value.
	Lt pulumix.Input[*string] `pulumi:"lt"`
	// The value for the property is less than or equal to the specified value.
	Lte pulumix.Input[*string] `pulumi:"lte"`
	// The value for the property doesn't match (doesn't equal) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values.
	Neqs pulumix.Input[[]string] `pulumi:"neqs"`
}

func (FindingsFilterFindingCriteriaCriterionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FindingsFilterFindingCriteriaCriterion)(nil)).Elem()
}

func (i FindingsFilterFindingCriteriaCriterionArgs) ToFindingsFilterFindingCriteriaCriterionOutput() FindingsFilterFindingCriteriaCriterionOutput {
	return i.ToFindingsFilterFindingCriteriaCriterionOutputWithContext(context.Background())
}

func (i FindingsFilterFindingCriteriaCriterionArgs) ToFindingsFilterFindingCriteriaCriterionOutputWithContext(ctx context.Context) FindingsFilterFindingCriteriaCriterionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FindingsFilterFindingCriteriaCriterionOutput)
}

func (i *FindingsFilterFindingCriteriaCriterionArgs) ToOutput(ctx context.Context) pulumix.Output[*FindingsFilterFindingCriteriaCriterionArgs] {
	return pulumix.Val(i)
}

type FindingsFilterFindingCriteriaCriterionOutput struct{ *pulumi.OutputState }

func (FindingsFilterFindingCriteriaCriterionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FindingsFilterFindingCriteriaCriterion)(nil)).Elem()
}

func (o FindingsFilterFindingCriteriaCriterionOutput) ToFindingsFilterFindingCriteriaCriterionOutput() FindingsFilterFindingCriteriaCriterionOutput {
	return o
}

func (o FindingsFilterFindingCriteriaCriterionOutput) ToFindingsFilterFindingCriteriaCriterionOutputWithContext(ctx context.Context) FindingsFilterFindingCriteriaCriterionOutput {
	return o
}

func (o FindingsFilterFindingCriteriaCriterionOutput) ToOutput(ctx context.Context) pulumix.Output[FindingsFilterFindingCriteriaCriterion] {
	return pulumix.Output[FindingsFilterFindingCriteriaCriterion]{
		OutputState: o.OutputState,
	}
}

// The value for the property exclusively matches (equals an exact match for) all the specified values. If you specify multiple values, Amazon Macie uses AND logic to join the values.
func (o FindingsFilterFindingCriteriaCriterionOutput) EqExactMatches() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FindingsFilterFindingCriteriaCriterion](o, func(v FindingsFilterFindingCriteriaCriterion) []string { return v.EqExactMatches })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The value for the property matches (equals) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values.
func (o FindingsFilterFindingCriteriaCriterionOutput) Eqs() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FindingsFilterFindingCriteriaCriterion](o, func(v FindingsFilterFindingCriteriaCriterion) []string { return v.Eqs })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The name of the field to be evaluated.
func (o FindingsFilterFindingCriteriaCriterionOutput) Field() pulumix.Output[string] {
	return pulumix.Apply[FindingsFilterFindingCriteriaCriterion](o, func(v FindingsFilterFindingCriteriaCriterion) string { return v.Field })
}

// The value for the property is greater than the specified value.
func (o FindingsFilterFindingCriteriaCriterionOutput) Gt() pulumix.Output[*string] {
	return pulumix.Apply[FindingsFilterFindingCriteriaCriterion](o, func(v FindingsFilterFindingCriteriaCriterion) *string { return v.Gt })
}

// The value for the property is greater than or equal to the specified value.
func (o FindingsFilterFindingCriteriaCriterionOutput) Gte() pulumix.Output[*string] {
	return pulumix.Apply[FindingsFilterFindingCriteriaCriterion](o, func(v FindingsFilterFindingCriteriaCriterion) *string { return v.Gte })
}

// The value for the property is less than the specified value.
func (o FindingsFilterFindingCriteriaCriterionOutput) Lt() pulumix.Output[*string] {
	return pulumix.Apply[FindingsFilterFindingCriteriaCriterion](o, func(v FindingsFilterFindingCriteriaCriterion) *string { return v.Lt })
}

// The value for the property is less than or equal to the specified value.
func (o FindingsFilterFindingCriteriaCriterionOutput) Lte() pulumix.Output[*string] {
	return pulumix.Apply[FindingsFilterFindingCriteriaCriterion](o, func(v FindingsFilterFindingCriteriaCriterion) *string { return v.Lte })
}

// The value for the property doesn't match (doesn't equal) the specified value. If you specify multiple values, Amazon Macie uses OR logic to join the values.
func (o FindingsFilterFindingCriteriaCriterionOutput) Neqs() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FindingsFilterFindingCriteriaCriterion](o, func(v FindingsFilterFindingCriteriaCriterion) []string { return v.Neqs })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func init() {
	pulumi.RegisterOutputType(FindingsFilterFindingCriteriaOutput{})
	pulumi.RegisterOutputType(FindingsFilterFindingCriteriaCriterionOutput{})
}
