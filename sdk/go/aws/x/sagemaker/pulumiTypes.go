// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type AppImageConfigKernelGatewayImageConfig struct {
	// The URL where the Git repository is located. See File System Config details below.
	FileSystemConfig *AppImageConfigKernelGatewayImageConfigFileSystemConfig `pulumi:"fileSystemConfig"`
	// The default branch for the Git repository. See Kernel Spec details below.
	KernelSpec AppImageConfigKernelGatewayImageConfigKernelSpec `pulumi:"kernelSpec"`
}

type AppImageConfigKernelGatewayImageConfigArgs struct {
	// The URL where the Git repository is located. See File System Config details below.
	FileSystemConfig pulumix.Input[*AppImageConfigKernelGatewayImageConfigFileSystemConfigArgs] `pulumi:"fileSystemConfig"`
	// The default branch for the Git repository. See Kernel Spec details below.
	KernelSpec pulumix.Input[*AppImageConfigKernelGatewayImageConfigKernelSpecArgs] `pulumi:"kernelSpec"`
}

func (AppImageConfigKernelGatewayImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelGatewayImageConfig)(nil)).Elem()
}

func (i AppImageConfigKernelGatewayImageConfigArgs) ToAppImageConfigKernelGatewayImageConfigOutput() AppImageConfigKernelGatewayImageConfigOutput {
	return i.ToAppImageConfigKernelGatewayImageConfigOutputWithContext(context.Background())
}

func (i AppImageConfigKernelGatewayImageConfigArgs) ToAppImageConfigKernelGatewayImageConfigOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigKernelGatewayImageConfigOutput)
}

func (i *AppImageConfigKernelGatewayImageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*AppImageConfigKernelGatewayImageConfigArgs] {
	return pulumix.Val(i)
}

type AppImageConfigKernelGatewayImageConfigOutput struct{ *pulumi.OutputState }

func (AppImageConfigKernelGatewayImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelGatewayImageConfig)(nil)).Elem()
}

func (o AppImageConfigKernelGatewayImageConfigOutput) ToAppImageConfigKernelGatewayImageConfigOutput() AppImageConfigKernelGatewayImageConfigOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigOutput) ToAppImageConfigKernelGatewayImageConfigOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigKernelGatewayImageConfig] {
	return pulumix.Output[AppImageConfigKernelGatewayImageConfig]{
		OutputState: o.OutputState,
	}
}

// The URL where the Git repository is located. See File System Config details below.
func (o AppImageConfigKernelGatewayImageConfigOutput) FileSystemConfig() pulumix.GPtrOutput[AppImageConfigKernelGatewayImageConfigFileSystemConfig, AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput] {
	value := pulumix.Apply[AppImageConfigKernelGatewayImageConfig](o, func(v AppImageConfigKernelGatewayImageConfig) *AppImageConfigKernelGatewayImageConfigFileSystemConfig {
		return v.FileSystemConfig
	})
	return pulumix.GPtrOutput[AppImageConfigKernelGatewayImageConfigFileSystemConfig, AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput]{OutputState: value.OutputState}
}

// The default branch for the Git repository. See Kernel Spec details below.
func (o AppImageConfigKernelGatewayImageConfigOutput) KernelSpec() pulumix.GPtrOutput[AppImageConfigKernelGatewayImageConfigKernelSpec, AppImageConfigKernelGatewayImageConfigKernelSpecOutput] {
	value := pulumix.Apply[AppImageConfigKernelGatewayImageConfig](o, func(v AppImageConfigKernelGatewayImageConfig) AppImageConfigKernelGatewayImageConfigKernelSpec {
		return v.KernelSpec
	})
	return pulumix.GPtrOutput[AppImageConfigKernelGatewayImageConfigKernelSpec, AppImageConfigKernelGatewayImageConfigKernelSpecOutput]{OutputState: value.OutputState}
}

type AppImageConfigKernelGatewayImageConfigFileSystemConfig struct {
	// The default POSIX group ID (GID). If not specified, defaults to `100`. Valid values are `0` and `100`.
	DefaultGid *int `pulumi:"defaultGid"`
	// The default POSIX user ID (UID). If not specified, defaults to `1000`. Valid values are `0` and `1000`.
	DefaultUid *int `pulumi:"defaultUid"`
	// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to `/home/sagemaker-user`.
	//
	// > **Note:** When specifying `defaultGid` and `defaultUid`, Valid value pairs are [`0`, `0`] and [`100`, `1000`].
	MountPath *string `pulumi:"mountPath"`
}

type AppImageConfigKernelGatewayImageConfigFileSystemConfigArgs struct {
	// The default POSIX group ID (GID). If not specified, defaults to `100`. Valid values are `0` and `100`.
	DefaultGid pulumix.Input[*int] `pulumi:"defaultGid"`
	// The default POSIX user ID (UID). If not specified, defaults to `1000`. Valid values are `0` and `1000`.
	DefaultUid pulumix.Input[*int] `pulumi:"defaultUid"`
	// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to `/home/sagemaker-user`.
	//
	// > **Note:** When specifying `defaultGid` and `defaultUid`, Valid value pairs are [`0`, `0`] and [`100`, `1000`].
	MountPath pulumix.Input[*string] `pulumi:"mountPath"`
}

func (AppImageConfigKernelGatewayImageConfigFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelGatewayImageConfigFileSystemConfig)(nil)).Elem()
}

func (i AppImageConfigKernelGatewayImageConfigFileSystemConfigArgs) ToAppImageConfigKernelGatewayImageConfigFileSystemConfigOutput() AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput {
	return i.ToAppImageConfigKernelGatewayImageConfigFileSystemConfigOutputWithContext(context.Background())
}

func (i AppImageConfigKernelGatewayImageConfigFileSystemConfigArgs) ToAppImageConfigKernelGatewayImageConfigFileSystemConfigOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput)
}

func (i *AppImageConfigKernelGatewayImageConfigFileSystemConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*AppImageConfigKernelGatewayImageConfigFileSystemConfigArgs] {
	return pulumix.Val(i)
}

type AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput struct{ *pulumi.OutputState }

func (AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelGatewayImageConfigFileSystemConfig)(nil)).Elem()
}

func (o AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput) ToAppImageConfigKernelGatewayImageConfigFileSystemConfigOutput() AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput) ToAppImageConfigKernelGatewayImageConfigFileSystemConfigOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigKernelGatewayImageConfigFileSystemConfig] {
	return pulumix.Output[AppImageConfigKernelGatewayImageConfigFileSystemConfig]{
		OutputState: o.OutputState,
	}
}

// The default POSIX group ID (GID). If not specified, defaults to `100`. Valid values are `0` and `100`.
func (o AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput) DefaultGid() pulumix.Output[*int] {
	return pulumix.Apply[AppImageConfigKernelGatewayImageConfigFileSystemConfig](o, func(v AppImageConfigKernelGatewayImageConfigFileSystemConfig) *int { return v.DefaultGid })
}

// The default POSIX user ID (UID). If not specified, defaults to `1000`. Valid values are `0` and `1000`.
func (o AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput) DefaultUid() pulumix.Output[*int] {
	return pulumix.Apply[AppImageConfigKernelGatewayImageConfigFileSystemConfig](o, func(v AppImageConfigKernelGatewayImageConfigFileSystemConfig) *int { return v.DefaultUid })
}

// The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to `/home/sagemaker-user`.
//
// > **Note:** When specifying `defaultGid` and `defaultUid`, Valid value pairs are [`0`, `0`] and [`100`, `1000`].
func (o AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput) MountPath() pulumix.Output[*string] {
	return pulumix.Apply[AppImageConfigKernelGatewayImageConfigFileSystemConfig](o, func(v AppImageConfigKernelGatewayImageConfigFileSystemConfig) *string { return v.MountPath })
}

type AppImageConfigKernelGatewayImageConfigKernelSpec struct {
	// The display name of the kernel.
	DisplayName *string `pulumi:"displayName"`
	// The name of the kernel.
	Name string `pulumi:"name"`
}

type AppImageConfigKernelGatewayImageConfigKernelSpecArgs struct {
	// The display name of the kernel.
	DisplayName pulumix.Input[*string] `pulumi:"displayName"`
	// The name of the kernel.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (AppImageConfigKernelGatewayImageConfigKernelSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelGatewayImageConfigKernelSpec)(nil)).Elem()
}

func (i AppImageConfigKernelGatewayImageConfigKernelSpecArgs) ToAppImageConfigKernelGatewayImageConfigKernelSpecOutput() AppImageConfigKernelGatewayImageConfigKernelSpecOutput {
	return i.ToAppImageConfigKernelGatewayImageConfigKernelSpecOutputWithContext(context.Background())
}

func (i AppImageConfigKernelGatewayImageConfigKernelSpecArgs) ToAppImageConfigKernelGatewayImageConfigKernelSpecOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigKernelSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppImageConfigKernelGatewayImageConfigKernelSpecOutput)
}

func (i *AppImageConfigKernelGatewayImageConfigKernelSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*AppImageConfigKernelGatewayImageConfigKernelSpecArgs] {
	return pulumix.Val(i)
}

type AppImageConfigKernelGatewayImageConfigKernelSpecOutput struct{ *pulumi.OutputState }

func (AppImageConfigKernelGatewayImageConfigKernelSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfigKernelGatewayImageConfigKernelSpec)(nil)).Elem()
}

func (o AppImageConfigKernelGatewayImageConfigKernelSpecOutput) ToAppImageConfigKernelGatewayImageConfigKernelSpecOutput() AppImageConfigKernelGatewayImageConfigKernelSpecOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigKernelSpecOutput) ToAppImageConfigKernelGatewayImageConfigKernelSpecOutputWithContext(ctx context.Context) AppImageConfigKernelGatewayImageConfigKernelSpecOutput {
	return o
}

func (o AppImageConfigKernelGatewayImageConfigKernelSpecOutput) ToOutput(ctx context.Context) pulumix.Output[AppImageConfigKernelGatewayImageConfigKernelSpec] {
	return pulumix.Output[AppImageConfigKernelGatewayImageConfigKernelSpec]{
		OutputState: o.OutputState,
	}
}

// The display name of the kernel.
func (o AppImageConfigKernelGatewayImageConfigKernelSpecOutput) DisplayName() pulumix.Output[*string] {
	return pulumix.Apply[AppImageConfigKernelGatewayImageConfigKernelSpec](o, func(v AppImageConfigKernelGatewayImageConfigKernelSpec) *string { return v.DisplayName })
}

// The name of the kernel.
func (o AppImageConfigKernelGatewayImageConfigKernelSpecOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[AppImageConfigKernelGatewayImageConfigKernelSpec](o, func(v AppImageConfigKernelGatewayImageConfigKernelSpec) string { return v.Name })
}

type AppResourceSpec struct {
	// The instance type that the image version runs on. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type AppResourceSpecArgs struct {
	// The instance type that the image version runs on. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (AppResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppResourceSpec)(nil)).Elem()
}

func (i AppResourceSpecArgs) ToAppResourceSpecOutput() AppResourceSpecOutput {
	return i.ToAppResourceSpecOutputWithContext(context.Background())
}

func (i AppResourceSpecArgs) ToAppResourceSpecOutputWithContext(ctx context.Context) AppResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppResourceSpecOutput)
}

func (i *AppResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*AppResourceSpecArgs] {
	return pulumix.Val(i)
}

type AppResourceSpecOutput struct{ *pulumi.OutputState }

func (AppResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppResourceSpec)(nil)).Elem()
}

func (o AppResourceSpecOutput) ToAppResourceSpecOutput() AppResourceSpecOutput {
	return o
}

func (o AppResourceSpecOutput) ToAppResourceSpecOutputWithContext(ctx context.Context) AppResourceSpecOutput {
	return o
}

func (o AppResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[AppResourceSpec] {
	return pulumix.Output[AppResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
func (o AppResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[AppResourceSpec](o, func(v AppResourceSpec) *string { return v.InstanceType })
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o AppResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[AppResourceSpec](o, func(v AppResourceSpec) *string { return v.LifecycleConfigArn })
}

// The ARN of the SageMaker image that the image version belongs to.
func (o AppResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[AppResourceSpec](o, func(v AppResourceSpec) *string { return v.SagemakerImageArn })
}

// The ARN of the image version created on the instance.
func (o AppResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[AppResourceSpec](o, func(v AppResourceSpec) *string { return v.SagemakerImageVersionArn })
}

type CodeRepositoryGitConfig struct {
	// The default branch for the Git repository.
	Branch *string `pulumi:"branch"`
	// The URL where the Git repository is located.
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of AWSCURRENT and must be in the following format: `{"username": UserName, "password": Password}`
	SecretArn *string `pulumi:"secretArn"`
}

type CodeRepositoryGitConfigArgs struct {
	// The default branch for the Git repository.
	Branch pulumix.Input[*string] `pulumi:"branch"`
	// The URL where the Git repository is located.
	RepositoryUrl pulumix.Input[string] `pulumi:"repositoryUrl"`
	// The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of AWSCURRENT and must be in the following format: `{"username": UserName, "password": Password}`
	SecretArn pulumix.Input[*string] `pulumi:"secretArn"`
}

func (CodeRepositoryGitConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeRepositoryGitConfig)(nil)).Elem()
}

func (i CodeRepositoryGitConfigArgs) ToCodeRepositoryGitConfigOutput() CodeRepositoryGitConfigOutput {
	return i.ToCodeRepositoryGitConfigOutputWithContext(context.Background())
}

func (i CodeRepositoryGitConfigArgs) ToCodeRepositoryGitConfigOutputWithContext(ctx context.Context) CodeRepositoryGitConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeRepositoryGitConfigOutput)
}

func (i *CodeRepositoryGitConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*CodeRepositoryGitConfigArgs] {
	return pulumix.Val(i)
}

type CodeRepositoryGitConfigOutput struct{ *pulumi.OutputState }

func (CodeRepositoryGitConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeRepositoryGitConfig)(nil)).Elem()
}

func (o CodeRepositoryGitConfigOutput) ToCodeRepositoryGitConfigOutput() CodeRepositoryGitConfigOutput {
	return o
}

func (o CodeRepositoryGitConfigOutput) ToCodeRepositoryGitConfigOutputWithContext(ctx context.Context) CodeRepositoryGitConfigOutput {
	return o
}

func (o CodeRepositoryGitConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CodeRepositoryGitConfig] {
	return pulumix.Output[CodeRepositoryGitConfig]{
		OutputState: o.OutputState,
	}
}

// The default branch for the Git repository.
func (o CodeRepositoryGitConfigOutput) Branch() pulumix.Output[*string] {
	return pulumix.Apply[CodeRepositoryGitConfig](o, func(v CodeRepositoryGitConfig) *string { return v.Branch })
}

// The URL where the Git repository is located.
func (o CodeRepositoryGitConfigOutput) RepositoryUrl() pulumix.Output[string] {
	return pulumix.Apply[CodeRepositoryGitConfig](o, func(v CodeRepositoryGitConfig) string { return v.RepositoryUrl })
}

// The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of AWSCURRENT and must be in the following format: `{"username": UserName, "password": Password}`
func (o CodeRepositoryGitConfigOutput) SecretArn() pulumix.Output[*string] {
	return pulumix.Apply[CodeRepositoryGitConfig](o, func(v CodeRepositoryGitConfig) *string { return v.SecretArn })
}

type DataQualityJobDefinitionDataQualityAppSpecification struct {
	// Sets the environment variables in the container that the monitoring job runs. A list of key value pairs.
	Environment map[string]string `pulumi:"environment"`
	// The container image that the data quality monitoring job runs.
	ImageUri string `pulumi:"imageUri"`
	// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
	PostAnalyticsProcessorSourceUri *string `pulumi:"postAnalyticsProcessorSourceUri"`
	// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
	RecordPreprocessorSourceUri *string `pulumi:"recordPreprocessorSourceUri"`
}

type DataQualityJobDefinitionDataQualityAppSpecificationArgs struct {
	// Sets the environment variables in the container that the monitoring job runs. A list of key value pairs.
	Environment pulumix.Input[map[string]string] `pulumi:"environment"`
	// The container image that the data quality monitoring job runs.
	ImageUri pulumix.Input[string] `pulumi:"imageUri"`
	// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
	PostAnalyticsProcessorSourceUri pulumix.Input[*string] `pulumi:"postAnalyticsProcessorSourceUri"`
	// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
	RecordPreprocessorSourceUri pulumix.Input[*string] `pulumi:"recordPreprocessorSourceUri"`
}

func (DataQualityJobDefinitionDataQualityAppSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityAppSpecification)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityAppSpecificationArgs) ToDataQualityJobDefinitionDataQualityAppSpecificationOutput() DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return i.ToDataQualityJobDefinitionDataQualityAppSpecificationOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityAppSpecificationArgs) ToDataQualityJobDefinitionDataQualityAppSpecificationOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityAppSpecificationOutput)
}

func (i *DataQualityJobDefinitionDataQualityAppSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityAppSpecificationArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityAppSpecificationOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityAppSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityAppSpecification)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ToDataQualityJobDefinitionDataQualityAppSpecificationOutput() DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ToDataQualityJobDefinitionDataQualityAppSpecificationOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityAppSpecificationOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityAppSpecification] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityAppSpecification]{
		OutputState: o.OutputState,
	}
}

// Sets the environment variables in the container that the monitoring job runs. A list of key value pairs.
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) Environment() pulumix.MapOutput[string] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityAppSpecification](o, func(v DataQualityJobDefinitionDataQualityAppSpecification) map[string]string { return v.Environment })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// The container image that the data quality monitoring job runs.
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) ImageUri() pulumix.Output[string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityAppSpecification](o, func(v DataQualityJobDefinitionDataQualityAppSpecification) string { return v.ImageUri })
}

// An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) PostAnalyticsProcessorSourceUri() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityAppSpecification](o, func(v DataQualityJobDefinitionDataQualityAppSpecification) *string {
		return v.PostAnalyticsProcessorSourceUri
	})
}

// An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
func (o DataQualityJobDefinitionDataQualityAppSpecificationOutput) RecordPreprocessorSourceUri() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityAppSpecification](o, func(v DataQualityJobDefinitionDataQualityAppSpecification) *string {
		return v.RecordPreprocessorSourceUri
	})
}

type DataQualityJobDefinitionDataQualityBaselineConfig struct {
	// The constraints resource for a monitoring job. Fields are documented below.
	ConstraintsResource *DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource `pulumi:"constraintsResource"`
	// The statistics resource for a monitoring job. Fields are documented below.
	StatisticsResource *DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource `pulumi:"statisticsResource"`
}

type DataQualityJobDefinitionDataQualityBaselineConfigArgs struct {
	// The constraints resource for a monitoring job. Fields are documented below.
	ConstraintsResource pulumix.Input[*DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceArgs] `pulumi:"constraintsResource"`
	// The statistics resource for a monitoring job. Fields are documented below.
	StatisticsResource pulumix.Input[*DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceArgs] `pulumi:"statisticsResource"`
}

func (DataQualityJobDefinitionDataQualityBaselineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigOutput() DataQualityJobDefinitionDataQualityBaselineConfigOutput {
	return i.ToDataQualityJobDefinitionDataQualityBaselineConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityBaselineConfigOutput)
}

func (i *DataQualityJobDefinitionDataQualityBaselineConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityBaselineConfigArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityBaselineConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityBaselineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigOutput() DataQualityJobDefinitionDataQualityBaselineConfigOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfig] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfig]{
		OutputState: o.OutputState,
	}
}

// The constraints resource for a monitoring job. Fields are documented below.
func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) ConstraintsResource() pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource, DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityBaselineConfig](o, func(v DataQualityJobDefinitionDataQualityBaselineConfig) *DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource {
		return v.ConstraintsResource
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource, DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput]{OutputState: value.OutputState}
}

// The statistics resource for a monitoring job. Fields are documented below.
func (o DataQualityJobDefinitionDataQualityBaselineConfigOutput) StatisticsResource() pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource, DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityBaselineConfig](o, func(v DataQualityJobDefinitionDataQualityBaselineConfig) *DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource {
		return v.StatisticsResource
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource, DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput]{OutputState: value.OutputState}
}

type DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource struct {
	// The Amazon S3 URI for the constraints resource.
	S3Uri *string `pulumi:"s3Uri"`
}

type DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceArgs struct {
	// The Amazon S3 URI for the constraints resource.
	S3Uri pulumix.Input[*string] `pulumi:"s3Uri"`
}

func (DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput() DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput {
	return i.ToDataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput)
}

func (i *DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput() DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 URI for the constraints resource.
func (o DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput) S3Uri() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource](o, func(v DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResource) *string { return v.S3Uri })
}

type DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource struct {
	// The Amazon S3 URI for the statistics resource.
	S3Uri *string `pulumi:"s3Uri"`
}

type DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceArgs struct {
	// The Amazon S3 URI for the statistics resource.
	S3Uri pulumix.Input[*string] `pulumi:"s3Uri"`
}

func (DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput() DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput {
	return i.ToDataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceArgs) ToDataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput)
}

func (i *DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput() DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput) ToDataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 URI for the statistics resource.
func (o DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput) S3Uri() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource](o, func(v DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResource) *string { return v.S3Uri })
}

type DataQualityJobDefinitionDataQualityJobInput struct {
	// Input object for the batch transform job. Fields are documented below.
	BatchTransformInput *DataQualityJobDefinitionDataQualityJobInputBatchTransformInput `pulumi:"batchTransformInput"`
	// Input object for the endpoint. Fields are documented below.
	EndpointInput *DataQualityJobDefinitionDataQualityJobInputEndpointInput `pulumi:"endpointInput"`
}

type DataQualityJobDefinitionDataQualityJobInputArgs struct {
	// Input object for the batch transform job. Fields are documented below.
	BatchTransformInput pulumix.Input[*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs] `pulumi:"batchTransformInput"`
	// Input object for the endpoint. Fields are documented below.
	EndpointInput pulumix.Input[*DataQualityJobDefinitionDataQualityJobInputEndpointInputArgs] `pulumi:"endpointInput"`
}

func (DataQualityJobDefinitionDataQualityJobInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInput)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobInputArgs) ToDataQualityJobDefinitionDataQualityJobInputOutput() DataQualityJobDefinitionDataQualityJobInputOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobInputOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobInputArgs) ToDataQualityJobDefinitionDataQualityJobInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobInputOutput)
}

func (i *DataQualityJobDefinitionDataQualityJobInputArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityJobInputArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityJobInputOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInput)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobInputOutput) ToDataQualityJobDefinitionDataQualityJobInputOutput() DataQualityJobDefinitionDataQualityJobInputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputOutput) ToDataQualityJobDefinitionDataQualityJobInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobInput] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobInput]{
		OutputState: o.OutputState,
	}
}

// Input object for the batch transform job. Fields are documented below.
func (o DataQualityJobDefinitionDataQualityJobInputOutput) BatchTransformInput() pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputBatchTransformInput, DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityJobInput](o, func(v DataQualityJobDefinitionDataQualityJobInput) *DataQualityJobDefinitionDataQualityJobInputBatchTransformInput {
		return v.BatchTransformInput
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputBatchTransformInput, DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput]{OutputState: value.OutputState}
}

// Input object for the endpoint. Fields are documented below.
func (o DataQualityJobDefinitionDataQualityJobInputOutput) EndpointInput() pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputEndpointInput, DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityJobInput](o, func(v DataQualityJobDefinitionDataQualityJobInput) *DataQualityJobDefinitionDataQualityJobInputEndpointInput {
		return v.EndpointInput
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputEndpointInput, DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput]{OutputState: value.OutputState}
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInput struct {
	// The Amazon S3 location being used to capture the data.
	DataCapturedDestinationS3Uri string `pulumi:"dataCapturedDestinationS3Uri"`
	// The dataset format for your batch transform job. Fields are documented below.
	DatasetFormat DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat `pulumi:"datasetFormat"`
	// Path to the filesystem where the batch transform data is available to the container. Defaults to `/opt/ml/processing/input`.
	LocalPath *string `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to `FullyReplicated`. Valid values are `FullyReplicated` or `ShardedByS3Key`
	S3DataDistributionType *string `pulumi:"s3DataDistributionType"`
	// Whether the `Pipe` or `File` is used as the input mode for transferring data for the monitoring job. `Pipe` mode is recommended for large datasets. `File` mode is useful for small files that fit in memory. Defaults to `File`.  Valid values are `Pipe` or `File`
	S3InputMode *string `pulumi:"s3InputMode"`
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs struct {
	// The Amazon S3 location being used to capture the data.
	DataCapturedDestinationS3Uri pulumix.Input[string] `pulumi:"dataCapturedDestinationS3Uri"`
	// The dataset format for your batch transform job. Fields are documented below.
	DatasetFormat pulumix.Input[*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatArgs] `pulumi:"datasetFormat"`
	// Path to the filesystem where the batch transform data is available to the container. Defaults to `/opt/ml/processing/input`.
	LocalPath pulumix.Input[*string] `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to `FullyReplicated`. Valid values are `FullyReplicated` or `ShardedByS3Key`
	S3DataDistributionType pulumix.Input[*string] `pulumi:"s3DataDistributionType"`
	// Whether the `Pipe` or `File` is used as the input mode for transferring data for the monitoring job. `Pipe` mode is recommended for large datasets. `File` mode is useful for small files that fit in memory. Defaults to `File`.  Valid values are `Pipe` or `File`
	S3InputMode pulumix.Input[*string] `pulumi:"s3InputMode"`
}

func (DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputBatchTransformInput)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput() DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput)
}

func (i *DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputBatchTransformInput)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput() DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobInputBatchTransformInput] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobInputBatchTransformInput]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 location being used to capture the data.
func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput) DataCapturedDestinationS3Uri() pulumix.Output[string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputBatchTransformInput](o, func(v DataQualityJobDefinitionDataQualityJobInputBatchTransformInput) string {
		return v.DataCapturedDestinationS3Uri
	})
}

// The dataset format for your batch transform job. Fields are documented below.
func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput) DatasetFormat() pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat, DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputBatchTransformInput](o, func(v DataQualityJobDefinitionDataQualityJobInputBatchTransformInput) DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat {
		return v.DatasetFormat
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat, DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput]{OutputState: value.OutputState}
}

// Path to the filesystem where the batch transform data is available to the container. Defaults to `/opt/ml/processing/input`.
func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput) LocalPath() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputBatchTransformInput](o, func(v DataQualityJobDefinitionDataQualityJobInputBatchTransformInput) *string { return v.LocalPath })
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to `FullyReplicated`. Valid values are `FullyReplicated` or `ShardedByS3Key`
func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput) S3DataDistributionType() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputBatchTransformInput](o, func(v DataQualityJobDefinitionDataQualityJobInputBatchTransformInput) *string {
		return v.S3DataDistributionType
	})
}

// Whether the `Pipe` or `File` is used as the input mode for transferring data for the monitoring job. `Pipe` mode is recommended for large datasets. `File` mode is useful for small files that fit in memory. Defaults to `File`.  Valid values are `Pipe` or `File`
func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput) S3InputMode() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputBatchTransformInput](o, func(v DataQualityJobDefinitionDataQualityJobInputBatchTransformInput) *string { return v.S3InputMode })
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat struct {
	// The CSV dataset used in the monitoring job. Fields are documented below.
	Csv *DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv `pulumi:"csv"`
	// The JSON dataset used in the monitoring job. Fields are documented below.
	Json *DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson `pulumi:"json"`
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatArgs struct {
	// The CSV dataset used in the monitoring job. Fields are documented below.
	Csv pulumix.Input[*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvArgs] `pulumi:"csv"`
	// The JSON dataset used in the monitoring job. Fields are documented below.
	Json pulumix.Input[*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonArgs] `pulumi:"json"`
}

func (DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatArgs) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput() DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatArgs) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput)
}

func (i *DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput() DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat]{
		OutputState: o.OutputState,
	}
}

// The CSV dataset used in the monitoring job. Fields are documented below.
func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput) Csv() pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv, DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat](o, func(v DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat) *DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv {
		return v.Csv
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv, DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput]{OutputState: value.OutputState}
}

// The JSON dataset used in the monitoring job. Fields are documented below.
func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput) Json() pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson, DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat](o, func(v DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat) *DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson {
		return v.Json
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson, DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput]{OutputState: value.OutputState}
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv struct {
	// Indicates if the CSV data has a header.
	Header *bool `pulumi:"header"`
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvArgs struct {
	// Indicates if the CSV data has a header.
	Header pulumix.Input[*bool] `pulumi:"header"`
}

func (DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvArgs) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput() DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvArgs) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput)
}

func (i *DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput() DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv]{
		OutputState: o.OutputState,
	}
}

// Indicates if the CSV data has a header.
func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput) Header() pulumix.Output[*bool] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv](o, func(v DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsv) *bool {
		return v.Header
	})
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson struct {
	// Indicates if the file should be read as a json object per line.
	Line *bool `pulumi:"line"`
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonArgs struct {
	// Indicates if the file should be read as a json object per line.
	Line pulumix.Input[*bool] `pulumi:"line"`
}

func (DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonArgs) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput() DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonArgs) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput)
}

func (i *DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput() DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput) ToDataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson]{
		OutputState: o.OutputState,
	}
}

// Indicates if the file should be read as a json object per line.
func (o DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput) Line() pulumix.Output[*bool] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson](o, func(v DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJson) *bool {
		return v.Line
	})
}

type DataQualityJobDefinitionDataQualityJobInputEndpointInput struct {
	// An endpoint in customer's account which has `dataCaptureConfig` enabled.
	EndpointName string `pulumi:"endpointName"`
	// Path to the filesystem where the endpoint data is available to the container. Defaults to `/opt/ml/processing/input`.
	LocalPath *string `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to `FullyReplicated`. Valid values are `FullyReplicated` or `ShardedByS3Key`
	S3DataDistributionType *string `pulumi:"s3DataDistributionType"`
	// Whether the `Pipe` or `File` is used as the input mode for transferring data for the monitoring job. `Pipe` mode is recommended for large datasets. `File` mode is useful for small files that fit in memory. Defaults to `File`.  Valid values are `Pipe` or `File`
	S3InputMode *string `pulumi:"s3InputMode"`
}

type DataQualityJobDefinitionDataQualityJobInputEndpointInputArgs struct {
	// An endpoint in customer's account which has `dataCaptureConfig` enabled.
	EndpointName pulumix.Input[string] `pulumi:"endpointName"`
	// Path to the filesystem where the endpoint data is available to the container. Defaults to `/opt/ml/processing/input`.
	LocalPath pulumix.Input[*string] `pulumi:"localPath"`
	// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to `FullyReplicated`. Valid values are `FullyReplicated` or `ShardedByS3Key`
	S3DataDistributionType pulumix.Input[*string] `pulumi:"s3DataDistributionType"`
	// Whether the `Pipe` or `File` is used as the input mode for transferring data for the monitoring job. `Pipe` mode is recommended for large datasets. `File` mode is useful for small files that fit in memory. Defaults to `File`.  Valid values are `Pipe` or `File`
	S3InputMode pulumix.Input[*string] `pulumi:"s3InputMode"`
}

func (DataQualityJobDefinitionDataQualityJobInputEndpointInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputEndpointInput)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobInputEndpointInputArgs) ToDataQualityJobDefinitionDataQualityJobInputEndpointInputOutput() DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobInputEndpointInputOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobInputEndpointInputArgs) ToDataQualityJobDefinitionDataQualityJobInputEndpointInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput)
}

func (i *DataQualityJobDefinitionDataQualityJobInputEndpointInputArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityJobInputEndpointInputArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobInputEndpointInput)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput) ToDataQualityJobDefinitionDataQualityJobInputEndpointInputOutput() DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput) ToDataQualityJobDefinitionDataQualityJobInputEndpointInputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobInputEndpointInput] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobInputEndpointInput]{
		OutputState: o.OutputState,
	}
}

// An endpoint in customer's account which has `dataCaptureConfig` enabled.
func (o DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput) EndpointName() pulumix.Output[string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputEndpointInput](o, func(v DataQualityJobDefinitionDataQualityJobInputEndpointInput) string { return v.EndpointName })
}

// Path to the filesystem where the endpoint data is available to the container. Defaults to `/opt/ml/processing/input`.
func (o DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput) LocalPath() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputEndpointInput](o, func(v DataQualityJobDefinitionDataQualityJobInputEndpointInput) *string { return v.LocalPath })
}

// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to `FullyReplicated`. Valid values are `FullyReplicated` or `ShardedByS3Key`
func (o DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput) S3DataDistributionType() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputEndpointInput](o, func(v DataQualityJobDefinitionDataQualityJobInputEndpointInput) *string {
		return v.S3DataDistributionType
	})
}

// Whether the `Pipe` or `File` is used as the input mode for transferring data for the monitoring job. `Pipe` mode is recommended for large datasets. `File` mode is useful for small files that fit in memory. Defaults to `File`.  Valid values are `Pipe` or `File`
func (o DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput) S3InputMode() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobInputEndpointInput](o, func(v DataQualityJobDefinitionDataQualityJobInputEndpointInput) *string { return v.S3InputMode })
}

type DataQualityJobDefinitionDataQualityJobOutputConfig struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded. Fields are documented below.
	MonitoringOutputs DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs `pulumi:"monitoringOutputs"`
}

type DataQualityJobDefinitionDataQualityJobOutputConfigArgs struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded. Fields are documented below.
	MonitoringOutputs pulumix.Input[*DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsArgs] `pulumi:"monitoringOutputs"`
}

func (DataQualityJobDefinitionDataQualityJobOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobOutputConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobOutputConfigArgs) ToDataQualityJobDefinitionDataQualityJobOutputConfigOutput() DataQualityJobDefinitionDataQualityJobOutputConfigOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobOutputConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobOutputConfigArgs) ToDataQualityJobDefinitionDataQualityJobOutputConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobOutputConfigOutput)
}

func (i *DataQualityJobDefinitionDataQualityJobOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityJobOutputConfigArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityJobOutputConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobOutputConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobOutputConfigOutput) ToDataQualityJobDefinitionDataQualityJobOutputConfigOutput() DataQualityJobDefinitionDataQualityJobOutputConfigOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobOutputConfigOutput) ToDataQualityJobDefinitionDataQualityJobOutputConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobOutputConfigOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobOutputConfig] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
func (o DataQualityJobDefinitionDataQualityJobOutputConfigOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobOutputConfig](o, func(v DataQualityJobDefinitionDataQualityJobOutputConfig) *string { return v.KmsKeyId })
}

// Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded. Fields are documented below.
func (o DataQualityJobDefinitionDataQualityJobOutputConfigOutput) MonitoringOutputs() pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs, DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityJobOutputConfig](o, func(v DataQualityJobDefinitionDataQualityJobOutputConfig) DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs {
		return v.MonitoringOutputs
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs, DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput]{OutputState: value.OutputState}
}

type DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs struct {
	// The Amazon S3 storage location where the results of a monitoring job are saved. Fields are documented below.
	S3Output DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output `pulumi:"s3Output"`
}

type DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsArgs struct {
	// The Amazon S3 storage location where the results of a monitoring job are saved. Fields are documented below.
	S3Output pulumix.Input[*DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputArgs] `pulumi:"s3Output"`
}

func (DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsArgs) ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput() DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsArgs) ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput)
}

func (i *DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput) ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput() DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput) ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 storage location where the results of a monitoring job are saved. Fields are documented below.
func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput) S3Output() pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output, DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs](o, func(v DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputs) DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output {
		return v.S3Output
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output, DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput]{OutputState: value.OutputState}
}

type DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output struct {
	// Path to the filesystem where the batch transform data is available to the container. Defaults to `/opt/ml/processing/input`.
	LocalPath *string `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes. Valid values are `Continuous` or `EndOfJob`
	S3UploadMode *string `pulumi:"s3UploadMode"`
	// The Amazon S3 URI for the constraints resource.
	S3Uri string `pulumi:"s3Uri"`
}

type DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputArgs struct {
	// Path to the filesystem where the batch transform data is available to the container. Defaults to `/opt/ml/processing/input`.
	LocalPath pulumix.Input[*string] `pulumi:"localPath"`
	// Whether to upload the results of the monitoring job continuously or after the job completes. Valid values are `Continuous` or `EndOfJob`
	S3UploadMode pulumix.Input[*string] `pulumi:"s3UploadMode"`
	// The Amazon S3 URI for the constraints resource.
	S3Uri pulumix.Input[string] `pulumi:"s3Uri"`
}

func (DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output)(nil)).Elem()
}

func (i DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputArgs) ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput() DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput {
	return i.ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputArgs) ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput)
}

func (i *DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output)(nil)).Elem()
}

func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput) ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput() DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput) ToDataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutputWithContext(ctx context.Context) DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput {
	return o
}

func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output] {
	return pulumix.Output[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output]{
		OutputState: o.OutputState,
	}
}

// Path to the filesystem where the batch transform data is available to the container. Defaults to `/opt/ml/processing/input`.
func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput) LocalPath() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output](o, func(v DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output) *string {
		return v.LocalPath
	})
}

// Whether to upload the results of the monitoring job continuously or after the job completes. Valid values are `Continuous` or `EndOfJob`
func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput) S3UploadMode() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output](o, func(v DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output) *string {
		return v.S3UploadMode
	})
}

// The Amazon S3 URI for the constraints resource.
func (o DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput) S3Uri() pulumix.Output[string] {
	return pulumix.Apply[DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output](o, func(v DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output) string {
		return v.S3Uri
	})
}

type DataQualityJobDefinitionJobResources struct {
	// The configuration for the cluster resources used to run the processing job. Fields are documented below.
	ClusterConfig DataQualityJobDefinitionJobResourcesClusterConfig `pulumi:"clusterConfig"`
}

type DataQualityJobDefinitionJobResourcesArgs struct {
	// The configuration for the cluster resources used to run the processing job. Fields are documented below.
	ClusterConfig pulumix.Input[*DataQualityJobDefinitionJobResourcesClusterConfigArgs] `pulumi:"clusterConfig"`
}

func (DataQualityJobDefinitionJobResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionJobResources)(nil)).Elem()
}

func (i DataQualityJobDefinitionJobResourcesArgs) ToDataQualityJobDefinitionJobResourcesOutput() DataQualityJobDefinitionJobResourcesOutput {
	return i.ToDataQualityJobDefinitionJobResourcesOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionJobResourcesArgs) ToDataQualityJobDefinitionJobResourcesOutputWithContext(ctx context.Context) DataQualityJobDefinitionJobResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionJobResourcesOutput)
}

func (i *DataQualityJobDefinitionJobResourcesArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionJobResourcesArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionJobResourcesOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionJobResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionJobResources)(nil)).Elem()
}

func (o DataQualityJobDefinitionJobResourcesOutput) ToDataQualityJobDefinitionJobResourcesOutput() DataQualityJobDefinitionJobResourcesOutput {
	return o
}

func (o DataQualityJobDefinitionJobResourcesOutput) ToDataQualityJobDefinitionJobResourcesOutputWithContext(ctx context.Context) DataQualityJobDefinitionJobResourcesOutput {
	return o
}

func (o DataQualityJobDefinitionJobResourcesOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionJobResources] {
	return pulumix.Output[DataQualityJobDefinitionJobResources]{
		OutputState: o.OutputState,
	}
}

// The configuration for the cluster resources used to run the processing job. Fields are documented below.
func (o DataQualityJobDefinitionJobResourcesOutput) ClusterConfig() pulumix.GPtrOutput[DataQualityJobDefinitionJobResourcesClusterConfig, DataQualityJobDefinitionJobResourcesClusterConfigOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionJobResources](o, func(v DataQualityJobDefinitionJobResources) DataQualityJobDefinitionJobResourcesClusterConfig {
		return v.ClusterConfig
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionJobResourcesClusterConfig, DataQualityJobDefinitionJobResourcesClusterConfigOutput]{OutputState: value.OutputState}
}

type DataQualityJobDefinitionJobResourcesClusterConfig struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1.
	InstanceCount int `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType string `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb int `pulumi:"volumeSizeInGb"`
}

type DataQualityJobDefinitionJobResourcesClusterConfigArgs struct {
	// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1.
	InstanceCount pulumix.Input[int] `pulumi:"instanceCount"`
	// The ML compute instance type for the processing job.
	InstanceType pulumix.Input[string] `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
	VolumeKmsKeyId pulumix.Input[*string] `pulumi:"volumeKmsKeyId"`
	// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
	VolumeSizeInGb pulumix.Input[int] `pulumi:"volumeSizeInGb"`
}

func (DataQualityJobDefinitionJobResourcesClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionJobResourcesClusterConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionJobResourcesClusterConfigArgs) ToDataQualityJobDefinitionJobResourcesClusterConfigOutput() DataQualityJobDefinitionJobResourcesClusterConfigOutput {
	return i.ToDataQualityJobDefinitionJobResourcesClusterConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionJobResourcesClusterConfigArgs) ToDataQualityJobDefinitionJobResourcesClusterConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionJobResourcesClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionJobResourcesClusterConfigOutput)
}

func (i *DataQualityJobDefinitionJobResourcesClusterConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionJobResourcesClusterConfigArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionJobResourcesClusterConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionJobResourcesClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionJobResourcesClusterConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionJobResourcesClusterConfigOutput) ToDataQualityJobDefinitionJobResourcesClusterConfigOutput() DataQualityJobDefinitionJobResourcesClusterConfigOutput {
	return o
}

func (o DataQualityJobDefinitionJobResourcesClusterConfigOutput) ToDataQualityJobDefinitionJobResourcesClusterConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionJobResourcesClusterConfigOutput {
	return o
}

func (o DataQualityJobDefinitionJobResourcesClusterConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionJobResourcesClusterConfig] {
	return pulumix.Output[DataQualityJobDefinitionJobResourcesClusterConfig]{
		OutputState: o.OutputState,
	}
}

// The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1.
func (o DataQualityJobDefinitionJobResourcesClusterConfigOutput) InstanceCount() pulumix.Output[int] {
	return pulumix.Apply[DataQualityJobDefinitionJobResourcesClusterConfig](o, func(v DataQualityJobDefinitionJobResourcesClusterConfig) int { return v.InstanceCount })
}

// The ML compute instance type for the processing job.
func (o DataQualityJobDefinitionJobResourcesClusterConfigOutput) InstanceType() pulumix.Output[string] {
	return pulumix.Apply[DataQualityJobDefinitionJobResourcesClusterConfig](o, func(v DataQualityJobDefinitionJobResourcesClusterConfig) string { return v.InstanceType })
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
func (o DataQualityJobDefinitionJobResourcesClusterConfigOutput) VolumeKmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[DataQualityJobDefinitionJobResourcesClusterConfig](o, func(v DataQualityJobDefinitionJobResourcesClusterConfig) *string { return v.VolumeKmsKeyId })
}

// The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
func (o DataQualityJobDefinitionJobResourcesClusterConfigOutput) VolumeSizeInGb() pulumix.Output[int] {
	return pulumix.Apply[DataQualityJobDefinitionJobResourcesClusterConfig](o, func(v DataQualityJobDefinitionJobResourcesClusterConfig) int { return v.VolumeSizeInGb })
}

type DataQualityJobDefinitionNetworkConfig struct {
	// Whether to encrypt all communications between the instances used for the monitoring jobs. Choose `true` to encrypt communications. Encryption provides greater security for distributed jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption *bool `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the monitoring job.
	EnableNetworkIsolation *bool `pulumi:"enableNetworkIsolation"`
	// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. Fields are documented below.
	VpcConfig *DataQualityJobDefinitionNetworkConfigVpcConfig `pulumi:"vpcConfig"`
}

type DataQualityJobDefinitionNetworkConfigArgs struct {
	// Whether to encrypt all communications between the instances used for the monitoring jobs. Choose `true` to encrypt communications. Encryption provides greater security for distributed jobs, but the processing might take longer.
	EnableInterContainerTrafficEncryption pulumix.Input[*bool] `pulumi:"enableInterContainerTrafficEncryption"`
	// Whether to allow inbound and outbound network calls to and from the containers used for the monitoring job.
	EnableNetworkIsolation pulumix.Input[*bool] `pulumi:"enableNetworkIsolation"`
	// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. Fields are documented below.
	VpcConfig pulumix.Input[*DataQualityJobDefinitionNetworkConfigVpcConfigArgs] `pulumi:"vpcConfig"`
}

func (DataQualityJobDefinitionNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionNetworkConfigArgs) ToDataQualityJobDefinitionNetworkConfigOutput() DataQualityJobDefinitionNetworkConfigOutput {
	return i.ToDataQualityJobDefinitionNetworkConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionNetworkConfigArgs) ToDataQualityJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionNetworkConfigOutput)
}

func (i *DataQualityJobDefinitionNetworkConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionNetworkConfigArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionNetworkConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionNetworkConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionNetworkConfigOutput) ToDataQualityJobDefinitionNetworkConfigOutput() DataQualityJobDefinitionNetworkConfigOutput {
	return o
}

func (o DataQualityJobDefinitionNetworkConfigOutput) ToDataQualityJobDefinitionNetworkConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigOutput {
	return o
}

func (o DataQualityJobDefinitionNetworkConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionNetworkConfig] {
	return pulumix.Output[DataQualityJobDefinitionNetworkConfig]{
		OutputState: o.OutputState,
	}
}

// Whether to encrypt all communications between the instances used for the monitoring jobs. Choose `true` to encrypt communications. Encryption provides greater security for distributed jobs, but the processing might take longer.
func (o DataQualityJobDefinitionNetworkConfigOutput) EnableInterContainerTrafficEncryption() pulumix.Output[*bool] {
	return pulumix.Apply[DataQualityJobDefinitionNetworkConfig](o, func(v DataQualityJobDefinitionNetworkConfig) *bool { return v.EnableInterContainerTrafficEncryption })
}

// Whether to allow inbound and outbound network calls to and from the containers used for the monitoring job.
func (o DataQualityJobDefinitionNetworkConfigOutput) EnableNetworkIsolation() pulumix.Output[*bool] {
	return pulumix.Apply[DataQualityJobDefinitionNetworkConfig](o, func(v DataQualityJobDefinitionNetworkConfig) *bool { return v.EnableNetworkIsolation })
}

// Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. Fields are documented below.
func (o DataQualityJobDefinitionNetworkConfigOutput) VpcConfig() pulumix.GPtrOutput[DataQualityJobDefinitionNetworkConfigVpcConfig, DataQualityJobDefinitionNetworkConfigVpcConfigOutput] {
	value := pulumix.Apply[DataQualityJobDefinitionNetworkConfig](o, func(v DataQualityJobDefinitionNetworkConfig) *DataQualityJobDefinitionNetworkConfigVpcConfig {
		return v.VpcConfig
	})
	return pulumix.GPtrOutput[DataQualityJobDefinitionNetworkConfigVpcConfig, DataQualityJobDefinitionNetworkConfigVpcConfigOutput]{OutputState: value.OutputState}
}

type DataQualityJobDefinitionNetworkConfigVpcConfig struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the `subnets` field.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect your training job or model.
	Subnets []string `pulumi:"subnets"`
}

type DataQualityJobDefinitionNetworkConfigVpcConfigArgs struct {
	// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the `subnets` field.
	SecurityGroupIds pulumix.Input[[]string] `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect your training job or model.
	Subnets pulumix.Input[[]string] `pulumi:"subnets"`
}

func (DataQualityJobDefinitionNetworkConfigVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionNetworkConfigVpcConfig)(nil)).Elem()
}

func (i DataQualityJobDefinitionNetworkConfigVpcConfigArgs) ToDataQualityJobDefinitionNetworkConfigVpcConfigOutput() DataQualityJobDefinitionNetworkConfigVpcConfigOutput {
	return i.ToDataQualityJobDefinitionNetworkConfigVpcConfigOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionNetworkConfigVpcConfigArgs) ToDataQualityJobDefinitionNetworkConfigVpcConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionNetworkConfigVpcConfigOutput)
}

func (i *DataQualityJobDefinitionNetworkConfigVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionNetworkConfigVpcConfigArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionNetworkConfigVpcConfigOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionNetworkConfigVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionNetworkConfigVpcConfig)(nil)).Elem()
}

func (o DataQualityJobDefinitionNetworkConfigVpcConfigOutput) ToDataQualityJobDefinitionNetworkConfigVpcConfigOutput() DataQualityJobDefinitionNetworkConfigVpcConfigOutput {
	return o
}

func (o DataQualityJobDefinitionNetworkConfigVpcConfigOutput) ToDataQualityJobDefinitionNetworkConfigVpcConfigOutputWithContext(ctx context.Context) DataQualityJobDefinitionNetworkConfigVpcConfigOutput {
	return o
}

func (o DataQualityJobDefinitionNetworkConfigVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionNetworkConfigVpcConfig] {
	return pulumix.Output[DataQualityJobDefinitionNetworkConfigVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the `subnets` field.
func (o DataQualityJobDefinitionNetworkConfigVpcConfigOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataQualityJobDefinitionNetworkConfigVpcConfig](o, func(v DataQualityJobDefinitionNetworkConfigVpcConfig) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The ID of the subnets in the VPC to which you want to connect your training job or model.
func (o DataQualityJobDefinitionNetworkConfigVpcConfigOutput) Subnets() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataQualityJobDefinitionNetworkConfigVpcConfig](o, func(v DataQualityJobDefinitionNetworkConfigVpcConfig) []string { return v.Subnets })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DataQualityJobDefinitionStoppingCondition struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds *int `pulumi:"maxRuntimeInSeconds"`
}

type DataQualityJobDefinitionStoppingConditionArgs struct {
	// The maximum runtime allowed in seconds.
	MaxRuntimeInSeconds pulumix.Input[*int] `pulumi:"maxRuntimeInSeconds"`
}

func (DataQualityJobDefinitionStoppingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (i DataQualityJobDefinitionStoppingConditionArgs) ToDataQualityJobDefinitionStoppingConditionOutput() DataQualityJobDefinitionStoppingConditionOutput {
	return i.ToDataQualityJobDefinitionStoppingConditionOutputWithContext(context.Background())
}

func (i DataQualityJobDefinitionStoppingConditionArgs) ToDataQualityJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) DataQualityJobDefinitionStoppingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionStoppingConditionOutput)
}

func (i *DataQualityJobDefinitionStoppingConditionArgs) ToOutput(ctx context.Context) pulumix.Output[*DataQualityJobDefinitionStoppingConditionArgs] {
	return pulumix.Val(i)
}

type DataQualityJobDefinitionStoppingConditionOutput struct{ *pulumi.OutputState }

func (DataQualityJobDefinitionStoppingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinitionStoppingCondition)(nil)).Elem()
}

func (o DataQualityJobDefinitionStoppingConditionOutput) ToDataQualityJobDefinitionStoppingConditionOutput() DataQualityJobDefinitionStoppingConditionOutput {
	return o
}

func (o DataQualityJobDefinitionStoppingConditionOutput) ToDataQualityJobDefinitionStoppingConditionOutputWithContext(ctx context.Context) DataQualityJobDefinitionStoppingConditionOutput {
	return o
}

func (o DataQualityJobDefinitionStoppingConditionOutput) ToOutput(ctx context.Context) pulumix.Output[DataQualityJobDefinitionStoppingCondition] {
	return pulumix.Output[DataQualityJobDefinitionStoppingCondition]{
		OutputState: o.OutputState,
	}
}

// The maximum runtime allowed in seconds.
func (o DataQualityJobDefinitionStoppingConditionOutput) MaxRuntimeInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[DataQualityJobDefinitionStoppingCondition](o, func(v DataQualityJobDefinitionStoppingCondition) *int { return v.MaxRuntimeInSeconds })
}

type DeviceDevice struct {
	// A description for the device.
	Description *string `pulumi:"description"`
	// The name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Amazon Web Services Internet of Things (IoT) object name.
	IotThingName *string `pulumi:"iotThingName"`
}

type DeviceDeviceArgs struct {
	// A description for the device.
	Description pulumix.Input[*string] `pulumi:"description"`
	// The name of the device.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Amazon Web Services Internet of Things (IoT) object name.
	IotThingName pulumix.Input[*string] `pulumi:"iotThingName"`
}

func (DeviceDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceDevice)(nil)).Elem()
}

func (i DeviceDeviceArgs) ToDeviceDeviceOutput() DeviceDeviceOutput {
	return i.ToDeviceDeviceOutputWithContext(context.Background())
}

func (i DeviceDeviceArgs) ToDeviceDeviceOutputWithContext(ctx context.Context) DeviceDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceDeviceOutput)
}

func (i *DeviceDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*DeviceDeviceArgs] {
	return pulumix.Val(i)
}

type DeviceDeviceOutput struct{ *pulumi.OutputState }

func (DeviceDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceDevice)(nil)).Elem()
}

func (o DeviceDeviceOutput) ToDeviceDeviceOutput() DeviceDeviceOutput {
	return o
}

func (o DeviceDeviceOutput) ToDeviceDeviceOutputWithContext(ctx context.Context) DeviceDeviceOutput {
	return o
}

func (o DeviceDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[DeviceDevice] {
	return pulumix.Output[DeviceDevice]{
		OutputState: o.OutputState,
	}
}

// A description for the device.
func (o DeviceDeviceOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[DeviceDevice](o, func(v DeviceDevice) *string { return v.Description })
}

// The name of the device.
func (o DeviceDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[DeviceDevice](o, func(v DeviceDevice) string { return v.DeviceName })
}

// Amazon Web Services Internet of Things (IoT) object name.
func (o DeviceDeviceOutput) IotThingName() pulumix.Output[*string] {
	return pulumix.Apply[DeviceDevice](o, func(v DeviceDevice) *string { return v.IotThingName })
}

type DeviceFleetOutputConfig struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume after compilation job. If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Amazon Simple Storage (S3) bucker URI.
	S3OutputLocation string `pulumi:"s3OutputLocation"`
}

type DeviceFleetOutputConfigArgs struct {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume after compilation job. If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// The Amazon Simple Storage (S3) bucker URI.
	S3OutputLocation pulumix.Input[string] `pulumi:"s3OutputLocation"`
}

func (DeviceFleetOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceFleetOutputConfig)(nil)).Elem()
}

func (i DeviceFleetOutputConfigArgs) ToDeviceFleetOutputConfigOutput() DeviceFleetOutputConfigOutput {
	return i.ToDeviceFleetOutputConfigOutputWithContext(context.Background())
}

func (i DeviceFleetOutputConfigArgs) ToDeviceFleetOutputConfigOutputWithContext(ctx context.Context) DeviceFleetOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceFleetOutputConfigOutput)
}

func (i *DeviceFleetOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DeviceFleetOutputConfigArgs] {
	return pulumix.Val(i)
}

type DeviceFleetOutputConfigOutput struct{ *pulumi.OutputState }

func (DeviceFleetOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceFleetOutputConfig)(nil)).Elem()
}

func (o DeviceFleetOutputConfigOutput) ToDeviceFleetOutputConfigOutput() DeviceFleetOutputConfigOutput {
	return o
}

func (o DeviceFleetOutputConfigOutput) ToDeviceFleetOutputConfigOutputWithContext(ctx context.Context) DeviceFleetOutputConfigOutput {
	return o
}

func (o DeviceFleetOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DeviceFleetOutputConfig] {
	return pulumix.Output[DeviceFleetOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume after compilation job. If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account.
func (o DeviceFleetOutputConfigOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[DeviceFleetOutputConfig](o, func(v DeviceFleetOutputConfig) *string { return v.KmsKeyId })
}

// The Amazon Simple Storage (S3) bucker URI.
func (o DeviceFleetOutputConfigOutput) S3OutputLocation() pulumix.Output[string] {
	return pulumix.Apply[DeviceFleetOutputConfig](o, func(v DeviceFleetOutputConfig) string { return v.S3OutputLocation })
}

type DomainDefaultSpaceSettings struct {
	// The execution role for the space.
	ExecutionRole string `pulumi:"executionRole"`
	// The Jupyter server's app settings. See Jupyter Server App Settings below.
	JupyterServerAppSettings *DomainDefaultSpaceSettingsJupyterServerAppSettings `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings. See Kernel Gateway App Settings below.
	KernelGatewayAppSettings *DomainDefaultSpaceSettingsKernelGatewayAppSettings `pulumi:"kernelGatewayAppSettings"`
	// The security groups for the Amazon Virtual Private Cloud that the space uses for communication.
	SecurityGroups []string `pulumi:"securityGroups"`
}

type DomainDefaultSpaceSettingsArgs struct {
	// The execution role for the space.
	ExecutionRole pulumix.Input[string] `pulumi:"executionRole"`
	// The Jupyter server's app settings. See Jupyter Server App Settings below.
	JupyterServerAppSettings pulumix.Input[*DomainDefaultSpaceSettingsJupyterServerAppSettingsArgs] `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings. See Kernel Gateway App Settings below.
	KernelGatewayAppSettings pulumix.Input[*DomainDefaultSpaceSettingsKernelGatewayAppSettingsArgs] `pulumi:"kernelGatewayAppSettings"`
	// The security groups for the Amazon Virtual Private Cloud that the space uses for communication.
	SecurityGroups pulumix.Input[[]string] `pulumi:"securityGroups"`
}

func (DomainDefaultSpaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettings)(nil)).Elem()
}

func (i DomainDefaultSpaceSettingsArgs) ToDomainDefaultSpaceSettingsOutput() DomainDefaultSpaceSettingsOutput {
	return i.ToDomainDefaultSpaceSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceSettingsArgs) ToDomainDefaultSpaceSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsOutput)
}

func (i *DomainDefaultSpaceSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultSpaceSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettings)(nil)).Elem()
}

func (o DomainDefaultSpaceSettingsOutput) ToDomainDefaultSpaceSettingsOutput() DomainDefaultSpaceSettingsOutput {
	return o
}

func (o DomainDefaultSpaceSettingsOutput) ToDomainDefaultSpaceSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsOutput {
	return o
}

func (o DomainDefaultSpaceSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceSettings] {
	return pulumix.Output[DomainDefaultSpaceSettings]{
		OutputState: o.OutputState,
	}
}

// The execution role for the space.
func (o DomainDefaultSpaceSettingsOutput) ExecutionRole() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultSpaceSettings](o, func(v DomainDefaultSpaceSettings) string { return v.ExecutionRole })
}

// The Jupyter server's app settings. See Jupyter Server App Settings below.
func (o DomainDefaultSpaceSettingsOutput) JupyterServerAppSettings() pulumix.GPtrOutput[DomainDefaultSpaceSettingsJupyterServerAppSettings, DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput] {
	value := pulumix.Apply[DomainDefaultSpaceSettings](o, func(v DomainDefaultSpaceSettings) *DomainDefaultSpaceSettingsJupyterServerAppSettings {
		return v.JupyterServerAppSettings
	})
	return pulumix.GPtrOutput[DomainDefaultSpaceSettingsJupyterServerAppSettings, DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput]{OutputState: value.OutputState}
}

// The kernel gateway app settings. See Kernel Gateway App Settings below.
func (o DomainDefaultSpaceSettingsOutput) KernelGatewayAppSettings() pulumix.GPtrOutput[DomainDefaultSpaceSettingsKernelGatewayAppSettings, DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput] {
	value := pulumix.Apply[DomainDefaultSpaceSettings](o, func(v DomainDefaultSpaceSettings) *DomainDefaultSpaceSettingsKernelGatewayAppSettings {
		return v.KernelGatewayAppSettings
	})
	return pulumix.GPtrOutput[DomainDefaultSpaceSettingsKernelGatewayAppSettings, DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput]{OutputState: value.OutputState}
}

// The security groups for the Amazon Virtual Private Cloud that the space uses for communication.
func (o DomainDefaultSpaceSettingsOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DomainDefaultSpaceSettings](o, func(v DomainDefaultSpaceSettings) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DomainDefaultSpaceSettingsJupyterServerAppSettings struct {
	// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
	CodeRepositories []DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository `pulumi:"codeRepositories"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

type DomainDefaultSpaceSettingsJupyterServerAppSettingsArgs struct {
	// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
	CodeRepositories pulumix.Input[[]*DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs] `pulumi:"codeRepositories"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns pulumix.Input[[]string] `pulumi:"lifecycleConfigArns"`
}

func (DomainDefaultSpaceSettingsJupyterServerAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsJupyterServerAppSettings)(nil)).Elem()
}

func (i DomainDefaultSpaceSettingsJupyterServerAppSettingsArgs) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsOutput() DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput {
	return i.ToDomainDefaultSpaceSettingsJupyterServerAppSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceSettingsJupyterServerAppSettingsArgs) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput)
}

func (i *DomainDefaultSpaceSettingsJupyterServerAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceSettingsJupyterServerAppSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsJupyterServerAppSettings)(nil)).Elem()
}

func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsOutput() DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput {
	return o
}

func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput {
	return o
}

func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceSettingsJupyterServerAppSettings] {
	return pulumix.Output[DomainDefaultSpaceSettingsJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput) CodeRepositories() pulumix.GArrayOutput[DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository, DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput] {
	value := pulumix.Apply[DomainDefaultSpaceSettingsJupyterServerAppSettings](o, func(v DomainDefaultSpaceSettingsJupyterServerAppSettings) []DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository {
		return v.CodeRepositories
	})
	return pulumix.GArrayOutput[DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository, DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec, DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[DomainDefaultSpaceSettingsJupyterServerAppSettings](o, func(v DomainDefaultSpaceSettingsJupyterServerAppSettings) *DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec, DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput) LifecycleConfigArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DomainDefaultSpaceSettingsJupyterServerAppSettings](o, func(v DomainDefaultSpaceSettingsJupyterServerAppSettings) []string { return v.LifecycleConfigArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository struct {
	// The URL of the Git repository.
	RepositoryUrl string `pulumi:"repositoryUrl"`
}

type DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs struct {
	// The URL of the Git repository.
	RepositoryUrl pulumix.Input[string] `pulumi:"repositoryUrl"`
}

func (DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository)(nil)).Elem()
}

func (i DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput() DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return i.ToDomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput)
}

func (i *DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs] {
	return pulumix.Val(i)
}

type DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository)(nil)).Elem()
}

func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput() DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return o
}

func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return o
}

func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository] {
	return pulumix.Output[DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository]{
		OutputState: o.OutputState,
	}
}

// The URL of the Git repository.
func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) RepositoryUrl() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository](o, func(v DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepository) string {
		return v.RepositoryUrl
	})
}

type DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput() DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return i.ToDomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput)
}

func (i *DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput() DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToDomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec] {
	return pulumix.Output[DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.InstanceType
	})
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The ARN of the SageMaker image that the image version belongs to.
func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type DomainDefaultSpaceSettingsKernelGatewayAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages []DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

type DomainDefaultSpaceSettingsKernelGatewayAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages pulumix.Input[[]*DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageArgs] `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns pulumix.Input[[]string] `pulumi:"lifecycleConfigArns"`
}

func (DomainDefaultSpaceSettingsKernelGatewayAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsKernelGatewayAppSettings)(nil)).Elem()
}

func (i DomainDefaultSpaceSettingsKernelGatewayAppSettingsArgs) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput() DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput {
	return i.ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceSettingsKernelGatewayAppSettingsArgs) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput)
}

func (i *DomainDefaultSpaceSettingsKernelGatewayAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceSettingsKernelGatewayAppSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsKernelGatewayAppSettings)(nil)).Elem()
}

func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput() DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput {
	return o
}

func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput {
	return o
}

func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceSettingsKernelGatewayAppSettings] {
	return pulumix.Output[DomainDefaultSpaceSettingsKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput) CustomImages() pulumix.GArrayOutput[DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage, DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput] {
	value := pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettings](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettings) []DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage {
		return v.CustomImages
	})
	return pulumix.GArrayOutput[DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage, DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec, DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettings](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettings) *DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec, DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput) LifecycleConfigArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettings](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettings) []string { return v.LifecycleConfigArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage struct {
	// The name of the App Image Config.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName string `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber *int `pulumi:"imageVersionNumber"`
}

type DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageArgs struct {
	// The name of the App Image Config.
	AppImageConfigName pulumix.Input[string] `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName pulumix.Input[string] `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber pulumix.Input[*int] `pulumi:"imageVersionNumber"`
}

func (DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage)(nil)).Elem()
}

func (i DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageArgs) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput() DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput {
	return i.ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageArgs) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput)
}

func (i *DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageArgs] {
	return pulumix.Val(i)
}

type DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage)(nil)).Elem()
}

func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput() DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput {
	return o
}

func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput {
	return o
}

func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage] {
	return pulumix.Output[DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage]{
		OutputState: o.OutputState,
	}
}

// The name of the App Image Config.
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) AppImageConfigName() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage) string {
		return v.AppImageConfigName
	})
}

// The name of the Custom Image.
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ImageName() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage) string { return v.ImageName })
}

// The version number of the Custom Image.
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ImageVersionNumber() pulumix.Output[*int] {
	return pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImage) *int {
		return v.ImageVersionNumber
	})
}

type DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput() DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return i.ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput)
}

func (i *DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput() DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToDomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec] {
	return pulumix.Output[DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.InstanceType
	})
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The ARN of the SageMaker image that the image version belongs to.
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type DomainDefaultUserSettings struct {
	// The Canvas app settings. See Canvas App Settings below.
	CanvasAppSettings *DomainDefaultUserSettingsCanvasAppSettings `pulumi:"canvasAppSettings"`
	// The execution role ARN for the user.
	ExecutionRole string `pulumi:"executionRole"`
	// The Jupyter server's app settings. See Jupyter Server App Settings below.
	JupyterServerAppSettings *DomainDefaultUserSettingsJupyterServerAppSettings `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings. See Kernel Gateway App Settings below.
	KernelGatewayAppSettings *DomainDefaultUserSettingsKernelGatewayAppSettings `pulumi:"kernelGatewayAppSettings"`
	// The RSession app settings. See RSession App Settings below.
	RSessionAppSettings *DomainDefaultUserSettingsRSessionAppSettings `pulumi:"rSessionAppSettings"`
	// A collection of settings that configure user interaction with the RStudioServerPro app. See RStudioServerProAppSettings below.
	RStudioServerProAppSettings *DomainDefaultUserSettingsRStudioServerProAppSettings `pulumi:"rStudioServerProAppSettings"`
	// A list of security group IDs that will be attached to the user.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The sharing settings. See Sharing Settings below.
	SharingSettings *DomainDefaultUserSettingsSharingSettings `pulumi:"sharingSettings"`
	// The TensorBoard app settings. See TensorBoard App Settings below.
	TensorBoardAppSettings *DomainDefaultUserSettingsTensorBoardAppSettings `pulumi:"tensorBoardAppSettings"`
}

type DomainDefaultUserSettingsArgs struct {
	// The Canvas app settings. See Canvas App Settings below.
	CanvasAppSettings pulumix.Input[*DomainDefaultUserSettingsCanvasAppSettingsArgs] `pulumi:"canvasAppSettings"`
	// The execution role ARN for the user.
	ExecutionRole pulumix.Input[string] `pulumi:"executionRole"`
	// The Jupyter server's app settings. See Jupyter Server App Settings below.
	JupyterServerAppSettings pulumix.Input[*DomainDefaultUserSettingsJupyterServerAppSettingsArgs] `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings. See Kernel Gateway App Settings below.
	KernelGatewayAppSettings pulumix.Input[*DomainDefaultUserSettingsKernelGatewayAppSettingsArgs] `pulumi:"kernelGatewayAppSettings"`
	// The RSession app settings. See RSession App Settings below.
	RSessionAppSettings pulumix.Input[*DomainDefaultUserSettingsRSessionAppSettingsArgs] `pulumi:"rSessionAppSettings"`
	// A collection of settings that configure user interaction with the RStudioServerPro app. See RStudioServerProAppSettings below.
	RStudioServerProAppSettings pulumix.Input[*DomainDefaultUserSettingsRStudioServerProAppSettingsArgs] `pulumi:"rStudioServerProAppSettings"`
	// A list of security group IDs that will be attached to the user.
	SecurityGroups pulumix.Input[[]string] `pulumi:"securityGroups"`
	// The sharing settings. See Sharing Settings below.
	SharingSettings pulumix.Input[*DomainDefaultUserSettingsSharingSettingsArgs] `pulumi:"sharingSettings"`
	// The TensorBoard app settings. See TensorBoard App Settings below.
	TensorBoardAppSettings pulumix.Input[*DomainDefaultUserSettingsTensorBoardAppSettingsArgs] `pulumi:"tensorBoardAppSettings"`
}

func (DomainDefaultUserSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsArgs) ToDomainDefaultUserSettingsOutput() DomainDefaultUserSettingsOutput {
	return i.ToDomainDefaultUserSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsArgs) ToDomainDefaultUserSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsOutput)
}

func (i *DomainDefaultUserSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsOutput) ToDomainDefaultUserSettingsOutput() DomainDefaultUserSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsOutput) ToDomainDefaultUserSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettings] {
	return pulumix.Output[DomainDefaultUserSettings]{
		OutputState: o.OutputState,
	}
}

// The Canvas app settings. See Canvas App Settings below.
func (o DomainDefaultUserSettingsOutput) CanvasAppSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsCanvasAppSettings, DomainDefaultUserSettingsCanvasAppSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettings](o, func(v DomainDefaultUserSettings) *DomainDefaultUserSettingsCanvasAppSettings {
		return v.CanvasAppSettings
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsCanvasAppSettings, DomainDefaultUserSettingsCanvasAppSettingsOutput]{OutputState: value.OutputState}
}

// The execution role ARN for the user.
func (o DomainDefaultUserSettingsOutput) ExecutionRole() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultUserSettings](o, func(v DomainDefaultUserSettings) string { return v.ExecutionRole })
}

// The Jupyter server's app settings. See Jupyter Server App Settings below.
func (o DomainDefaultUserSettingsOutput) JupyterServerAppSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsJupyterServerAppSettings, DomainDefaultUserSettingsJupyterServerAppSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettings](o, func(v DomainDefaultUserSettings) *DomainDefaultUserSettingsJupyterServerAppSettings {
		return v.JupyterServerAppSettings
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsJupyterServerAppSettings, DomainDefaultUserSettingsJupyterServerAppSettingsOutput]{OutputState: value.OutputState}
}

// The kernel gateway app settings. See Kernel Gateway App Settings below.
func (o DomainDefaultUserSettingsOutput) KernelGatewayAppSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsKernelGatewayAppSettings, DomainDefaultUserSettingsKernelGatewayAppSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettings](o, func(v DomainDefaultUserSettings) *DomainDefaultUserSettingsKernelGatewayAppSettings {
		return v.KernelGatewayAppSettings
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsKernelGatewayAppSettings, DomainDefaultUserSettingsKernelGatewayAppSettingsOutput]{OutputState: value.OutputState}
}

// The RSession app settings. See RSession App Settings below.
func (o DomainDefaultUserSettingsOutput) RSessionAppSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsRSessionAppSettings, DomainDefaultUserSettingsRSessionAppSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettings](o, func(v DomainDefaultUserSettings) *DomainDefaultUserSettingsRSessionAppSettings {
		return v.RSessionAppSettings
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsRSessionAppSettings, DomainDefaultUserSettingsRSessionAppSettingsOutput]{OutputState: value.OutputState}
}

// A collection of settings that configure user interaction with the RStudioServerPro app. See RStudioServerProAppSettings below.
func (o DomainDefaultUserSettingsOutput) RStudioServerProAppSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsRStudioServerProAppSettings, DomainDefaultUserSettingsRStudioServerProAppSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettings](o, func(v DomainDefaultUserSettings) *DomainDefaultUserSettingsRStudioServerProAppSettings {
		return v.RStudioServerProAppSettings
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsRStudioServerProAppSettings, DomainDefaultUserSettingsRStudioServerProAppSettingsOutput]{OutputState: value.OutputState}
}

// A list of security group IDs that will be attached to the user.
func (o DomainDefaultUserSettingsOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DomainDefaultUserSettings](o, func(v DomainDefaultUserSettings) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The sharing settings. See Sharing Settings below.
func (o DomainDefaultUserSettingsOutput) SharingSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsSharingSettings, DomainDefaultUserSettingsSharingSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettings](o, func(v DomainDefaultUserSettings) *DomainDefaultUserSettingsSharingSettings { return v.SharingSettings })
	return pulumix.GPtrOutput[DomainDefaultUserSettingsSharingSettings, DomainDefaultUserSettingsSharingSettingsOutput]{OutputState: value.OutputState}
}

// The TensorBoard app settings. See TensorBoard App Settings below.
func (o DomainDefaultUserSettingsOutput) TensorBoardAppSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsTensorBoardAppSettings, DomainDefaultUserSettingsTensorBoardAppSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettings](o, func(v DomainDefaultUserSettings) *DomainDefaultUserSettingsTensorBoardAppSettings {
		return v.TensorBoardAppSettings
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsTensorBoardAppSettings, DomainDefaultUserSettingsTensorBoardAppSettingsOutput]{OutputState: value.OutputState}
}

type DomainDefaultUserSettingsCanvasAppSettings struct {
	// The model registry settings for the SageMaker Canvas application. See Model Register Settings below.
	ModelRegisterSettings *DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings `pulumi:"modelRegisterSettings"`
	// Time series forecast settings for the Canvas app. See Time Series Forecasting Settings below.
	TimeSeriesForecastingSettings *DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings `pulumi:"timeSeriesForecastingSettings"`
	// The workspace settings for the SageMaker Canvas application. See Workspace Settings below.
	WorkspaceSettings *DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings `pulumi:"workspaceSettings"`
}

type DomainDefaultUserSettingsCanvasAppSettingsArgs struct {
	// The model registry settings for the SageMaker Canvas application. See Model Register Settings below.
	ModelRegisterSettings pulumix.Input[*DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsArgs] `pulumi:"modelRegisterSettings"`
	// Time series forecast settings for the Canvas app. See Time Series Forecasting Settings below.
	TimeSeriesForecastingSettings pulumix.Input[*DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs] `pulumi:"timeSeriesForecastingSettings"`
	// The workspace settings for the SageMaker Canvas application. See Workspace Settings below.
	WorkspaceSettings pulumix.Input[*DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsArgs] `pulumi:"workspaceSettings"`
}

func (DomainDefaultUserSettingsCanvasAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsCanvasAppSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsCanvasAppSettingsArgs) ToDomainDefaultUserSettingsCanvasAppSettingsOutput() DomainDefaultUserSettingsCanvasAppSettingsOutput {
	return i.ToDomainDefaultUserSettingsCanvasAppSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsCanvasAppSettingsArgs) ToDomainDefaultUserSettingsCanvasAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsCanvasAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsCanvasAppSettingsOutput)
}

func (i *DomainDefaultUserSettingsCanvasAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsCanvasAppSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsCanvasAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsCanvasAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsCanvasAppSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsCanvasAppSettingsOutput) ToDomainDefaultUserSettingsCanvasAppSettingsOutput() DomainDefaultUserSettingsCanvasAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsCanvasAppSettingsOutput) ToDomainDefaultUserSettingsCanvasAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsCanvasAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsCanvasAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsCanvasAppSettings] {
	return pulumix.Output[DomainDefaultUserSettingsCanvasAppSettings]{
		OutputState: o.OutputState,
	}
}

// The model registry settings for the SageMaker Canvas application. See Model Register Settings below.
func (o DomainDefaultUserSettingsCanvasAppSettingsOutput) ModelRegisterSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings, DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsCanvasAppSettings](o, func(v DomainDefaultUserSettingsCanvasAppSettings) *DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings {
		return v.ModelRegisterSettings
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings, DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput]{OutputState: value.OutputState}
}

// Time series forecast settings for the Canvas app. See Time Series Forecasting Settings below.
func (o DomainDefaultUserSettingsCanvasAppSettingsOutput) TimeSeriesForecastingSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings, DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsCanvasAppSettings](o, func(v DomainDefaultUserSettingsCanvasAppSettings) *DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings {
		return v.TimeSeriesForecastingSettings
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings, DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput]{OutputState: value.OutputState}
}

// The workspace settings for the SageMaker Canvas application. See Workspace Settings below.
func (o DomainDefaultUserSettingsCanvasAppSettingsOutput) WorkspaceSettings() pulumix.GPtrOutput[DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings, DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsCanvasAppSettings](o, func(v DomainDefaultUserSettingsCanvasAppSettings) *DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings {
		return v.WorkspaceSettings
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings, DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput]{OutputState: value.OutputState}
}

type DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings struct {
	// The Amazon Resource Name (ARN) of the SageMaker model registry account. Required only to register model versions created by a different SageMaker Canvas AWS account than the AWS account in which SageMaker model registry is set up.
	CrossAccountModelRegisterRoleArn *string `pulumi:"crossAccountModelRegisterRoleArn"`
	// Describes whether the integration to the model registry is enabled or disabled in the Canvas application. Valid values are `ENABLED` and `DISABLED`.
	Status *string `pulumi:"status"`
}

type DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsArgs struct {
	// The Amazon Resource Name (ARN) of the SageMaker model registry account. Required only to register model versions created by a different SageMaker Canvas AWS account than the AWS account in which SageMaker model registry is set up.
	CrossAccountModelRegisterRoleArn pulumix.Input[*string] `pulumi:"crossAccountModelRegisterRoleArn"`
	// Describes whether the integration to the model registry is enabled or disabled in the Canvas application. Valid values are `ENABLED` and `DISABLED`.
	Status pulumix.Input[*string] `pulumi:"status"`
}

func (DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsArgs) ToDomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput() DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput {
	return i.ToDomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsArgs) ToDomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput)
}

func (i *DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) ToDomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput() DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) ToDomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings] {
	return pulumix.Output[DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the SageMaker model registry account. Required only to register model versions created by a different SageMaker Canvas AWS account than the AWS account in which SageMaker model registry is set up.
func (o DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) CrossAccountModelRegisterRoleArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings](o, func(v DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings) *string {
		return v.CrossAccountModelRegisterRoleArn
	})
}

// Describes whether the integration to the model registry is enabled or disabled in the Canvas application. Valid values are `ENABLED` and `DISABLED`.
func (o DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) Status() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings](o, func(v DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettings) *string { return v.Status })
}

type DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings struct {
	// The IAM role that Canvas passes to Amazon Forecast for time series forecasting. By default, Canvas uses the execution role specified in the UserProfile that launches the Canvas app. If an execution role is not specified in the UserProfile, Canvas uses the execution role specified in the Domain that owns the UserProfile. To allow time series forecasting, this IAM role should have the [AmazonSageMakerCanvasForecastAccess](https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-canvas.html#security-iam-awsmanpol-AmazonSageMakerCanvasForecastAccess) policy attached and forecast.amazonaws.com added in the trust relationship as a service principal.
	AmazonForecastRoleArn *string `pulumi:"amazonForecastRoleArn"`
	// Describes whether time series forecasting is enabled or disabled in the Canvas app. Valid values are `ENABLED` and `DISABLED`.
	Status *string `pulumi:"status"`
}

type DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs struct {
	// The IAM role that Canvas passes to Amazon Forecast for time series forecasting. By default, Canvas uses the execution role specified in the UserProfile that launches the Canvas app. If an execution role is not specified in the UserProfile, Canvas uses the execution role specified in the Domain that owns the UserProfile. To allow time series forecasting, this IAM role should have the [AmazonSageMakerCanvasForecastAccess](https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-canvas.html#security-iam-awsmanpol-AmazonSageMakerCanvasForecastAccess) policy attached and forecast.amazonaws.com added in the trust relationship as a service principal.
	AmazonForecastRoleArn pulumix.Input[*string] `pulumi:"amazonForecastRoleArn"`
	// Describes whether time series forecasting is enabled or disabled in the Canvas app. Valid values are `ENABLED` and `DISABLED`.
	Status pulumix.Input[*string] `pulumi:"status"`
}

func (DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs) ToDomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput() DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput {
	return i.ToDomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs) ToDomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput)
}

func (i *DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) ToDomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput() DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) ToDomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings] {
	return pulumix.Output[DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings]{
		OutputState: o.OutputState,
	}
}

// The IAM role that Canvas passes to Amazon Forecast for time series forecasting. By default, Canvas uses the execution role specified in the UserProfile that launches the Canvas app. If an execution role is not specified in the UserProfile, Canvas uses the execution role specified in the Domain that owns the UserProfile. To allow time series forecasting, this IAM role should have the [AmazonSageMakerCanvasForecastAccess](https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-canvas.html#security-iam-awsmanpol-AmazonSageMakerCanvasForecastAccess) policy attached and forecast.amazonaws.com added in the trust relationship as a service principal.
func (o DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) AmazonForecastRoleArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings](o, func(v DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings) *string {
		return v.AmazonForecastRoleArn
	})
}

// Describes whether time series forecasting is enabled or disabled in the Canvas app. Valid values are `ENABLED` and `DISABLED`.
func (o DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) Status() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings](o, func(v DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings) *string {
		return v.Status
	})
}

type DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings struct {
	// The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.
	S3ArtifactPath *string `pulumi:"s3ArtifactPath"`
	// The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.
	S3KmsKeyId *string `pulumi:"s3KmsKeyId"`
}

type DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsArgs struct {
	// The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.
	S3ArtifactPath pulumix.Input[*string] `pulumi:"s3ArtifactPath"`
	// The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.
	S3KmsKeyId pulumix.Input[*string] `pulumi:"s3KmsKeyId"`
}

func (DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsArgs) ToDomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput() DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput {
	return i.ToDomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsArgs) ToDomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput)
}

func (i *DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) ToDomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput() DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) ToDomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings] {
	return pulumix.Output[DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.
func (o DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) S3ArtifactPath() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings](o, func(v DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings) *string { return v.S3ArtifactPath })
}

// The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.
func (o DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) S3KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings](o, func(v DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettings) *string { return v.S3KmsKeyId })
}

type DomainDefaultUserSettingsJupyterServerAppSettings struct {
	// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
	CodeRepositories []DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository `pulumi:"codeRepositories"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

type DomainDefaultUserSettingsJupyterServerAppSettingsArgs struct {
	// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
	CodeRepositories pulumix.Input[[]*DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryArgs] `pulumi:"codeRepositories"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns pulumix.Input[[]string] `pulumi:"lifecycleConfigArns"`
}

func (DomainDefaultUserSettingsJupyterServerAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsJupyterServerAppSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsJupyterServerAppSettingsArgs) ToDomainDefaultUserSettingsJupyterServerAppSettingsOutput() DomainDefaultUserSettingsJupyterServerAppSettingsOutput {
	return i.ToDomainDefaultUserSettingsJupyterServerAppSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsJupyterServerAppSettingsArgs) ToDomainDefaultUserSettingsJupyterServerAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsJupyterServerAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsJupyterServerAppSettingsOutput)
}

func (i *DomainDefaultUserSettingsJupyterServerAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsJupyterServerAppSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsJupyterServerAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsJupyterServerAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsJupyterServerAppSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsJupyterServerAppSettingsOutput) ToDomainDefaultUserSettingsJupyterServerAppSettingsOutput() DomainDefaultUserSettingsJupyterServerAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsJupyterServerAppSettingsOutput) ToDomainDefaultUserSettingsJupyterServerAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsJupyterServerAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsJupyterServerAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsJupyterServerAppSettings] {
	return pulumix.Output[DomainDefaultUserSettingsJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
func (o DomainDefaultUserSettingsJupyterServerAppSettingsOutput) CodeRepositories() pulumix.GArrayOutput[DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository, DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsJupyterServerAppSettings](o, func(v DomainDefaultUserSettingsJupyterServerAppSettings) []DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository {
		return v.CodeRepositories
	})
	return pulumix.GArrayOutput[DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository, DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o DomainDefaultUserSettingsJupyterServerAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec, DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsJupyterServerAppSettings](o, func(v DomainDefaultUserSettingsJupyterServerAppSettings) *DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec, DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
func (o DomainDefaultUserSettingsJupyterServerAppSettingsOutput) LifecycleConfigArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DomainDefaultUserSettingsJupyterServerAppSettings](o, func(v DomainDefaultUserSettingsJupyterServerAppSettings) []string { return v.LifecycleConfigArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository struct {
	// The URL of the Git repository.
	RepositoryUrl string `pulumi:"repositoryUrl"`
}

type DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryArgs struct {
	// The URL of the Git repository.
	RepositoryUrl pulumix.Input[string] `pulumi:"repositoryUrl"`
}

func (DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository)(nil)).Elem()
}

func (i DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToDomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput() DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return i.ToDomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToDomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(ctx context.Context) DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput)
}

func (i *DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository)(nil)).Elem()
}

func (o DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToDomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput() DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return o
}

func (o DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToDomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(ctx context.Context) DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return o
}

func (o DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository] {
	return pulumix.Output[DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository]{
		OutputState: o.OutputState,
	}
}

// The URL of the Git repository.
func (o DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) RepositoryUrl() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository](o, func(v DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepository) string { return v.RepositoryUrl })
}

type DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToDomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput() DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return i.ToDomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToDomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput)
}

func (i *DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToDomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput() DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToDomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec] {
	return pulumix.Output[DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
func (o DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.InstanceType
	})
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The ARN of the SageMaker image that the image version belongs to.
func (o DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type DomainDefaultUserSettingsKernelGatewayAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages []DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

type DomainDefaultUserSettingsKernelGatewayAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages pulumix.Input[[]*DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageArgs] `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns pulumix.Input[[]string] `pulumi:"lifecycleConfigArns"`
}

func (DomainDefaultUserSettingsKernelGatewayAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsKernelGatewayAppSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsKernelGatewayAppSettingsArgs) ToDomainDefaultUserSettingsKernelGatewayAppSettingsOutput() DomainDefaultUserSettingsKernelGatewayAppSettingsOutput {
	return i.ToDomainDefaultUserSettingsKernelGatewayAppSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsKernelGatewayAppSettingsArgs) ToDomainDefaultUserSettingsKernelGatewayAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsKernelGatewayAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsKernelGatewayAppSettingsOutput)
}

func (i *DomainDefaultUserSettingsKernelGatewayAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsKernelGatewayAppSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsKernelGatewayAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsKernelGatewayAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsKernelGatewayAppSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsKernelGatewayAppSettingsOutput) ToDomainDefaultUserSettingsKernelGatewayAppSettingsOutput() DomainDefaultUserSettingsKernelGatewayAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsKernelGatewayAppSettingsOutput) ToDomainDefaultUserSettingsKernelGatewayAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsKernelGatewayAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsKernelGatewayAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsKernelGatewayAppSettings] {
	return pulumix.Output[DomainDefaultUserSettingsKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsOutput) CustomImages() pulumix.GArrayOutput[DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage, DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettings](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettings) []DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage {
		return v.CustomImages
	})
	return pulumix.GArrayOutput[DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage, DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec, DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettings](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettings) *DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec, DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsOutput) LifecycleConfigArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettings](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettings) []string { return v.LifecycleConfigArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage struct {
	// The name of the App Image Config.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName string `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber *int `pulumi:"imageVersionNumber"`
}

type DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageArgs struct {
	// The name of the App Image Config.
	AppImageConfigName pulumix.Input[string] `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName pulumix.Input[string] `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber pulumix.Input[*int] `pulumi:"imageVersionNumber"`
}

func (DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage)(nil)).Elem()
}

func (i DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageArgs) ToDomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput() DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput {
	return i.ToDomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageArgs) ToDomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(ctx context.Context) DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput)
}

func (i *DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage)(nil)).Elem()
}

func (o DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput) ToDomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput() DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput {
	return o
}

func (o DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput) ToDomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(ctx context.Context) DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput {
	return o
}

func (o DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage] {
	return pulumix.Output[DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage]{
		OutputState: o.OutputState,
	}
}

// The name of the App Image Config.
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput) AppImageConfigName() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage) string {
		return v.AppImageConfigName
	})
}

// The name of the Custom Image.
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput) ImageName() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage) string { return v.ImageName })
}

// The version number of the Custom Image.
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput) ImageVersionNumber() pulumix.Output[*int] {
	return pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImage) *int { return v.ImageVersionNumber })
}

type DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToDomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput() DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return i.ToDomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToDomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput)
}

func (i *DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToDomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput() DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToDomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec] {
	return pulumix.Output[DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.InstanceType
	})
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The ARN of the SageMaker image that the image version belongs to.
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type DomainDefaultUserSettingsRSessionAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages []DomainDefaultUserSettingsRSessionAppSettingsCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
}

type DomainDefaultUserSettingsRSessionAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages pulumix.Input[[]*DomainDefaultUserSettingsRSessionAppSettingsCustomImageArgs] `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
}

func (DomainDefaultUserSettingsRSessionAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsRSessionAppSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsRSessionAppSettingsArgs) ToDomainDefaultUserSettingsRSessionAppSettingsOutput() DomainDefaultUserSettingsRSessionAppSettingsOutput {
	return i.ToDomainDefaultUserSettingsRSessionAppSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsRSessionAppSettingsArgs) ToDomainDefaultUserSettingsRSessionAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsRSessionAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsRSessionAppSettingsOutput)
}

func (i *DomainDefaultUserSettingsRSessionAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsRSessionAppSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsRSessionAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsRSessionAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsRSessionAppSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsRSessionAppSettingsOutput) ToDomainDefaultUserSettingsRSessionAppSettingsOutput() DomainDefaultUserSettingsRSessionAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsRSessionAppSettingsOutput) ToDomainDefaultUserSettingsRSessionAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsRSessionAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsRSessionAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsRSessionAppSettings] {
	return pulumix.Output[DomainDefaultUserSettingsRSessionAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
func (o DomainDefaultUserSettingsRSessionAppSettingsOutput) CustomImages() pulumix.GArrayOutput[DomainDefaultUserSettingsRSessionAppSettingsCustomImage, DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsRSessionAppSettings](o, func(v DomainDefaultUserSettingsRSessionAppSettings) []DomainDefaultUserSettingsRSessionAppSettingsCustomImage {
		return v.CustomImages
	})
	return pulumix.GArrayOutput[DomainDefaultUserSettingsRSessionAppSettingsCustomImage, DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o DomainDefaultUserSettingsRSessionAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec, DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsRSessionAppSettings](o, func(v DomainDefaultUserSettingsRSessionAppSettings) *DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec, DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

type DomainDefaultUserSettingsRSessionAppSettingsCustomImage struct {
	// The name of the App Image Config.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName string `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber *int `pulumi:"imageVersionNumber"`
}

type DomainDefaultUserSettingsRSessionAppSettingsCustomImageArgs struct {
	// The name of the App Image Config.
	AppImageConfigName pulumix.Input[string] `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName pulumix.Input[string] `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber pulumix.Input[*int] `pulumi:"imageVersionNumber"`
}

func (DomainDefaultUserSettingsRSessionAppSettingsCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsRSessionAppSettingsCustomImage)(nil)).Elem()
}

func (i DomainDefaultUserSettingsRSessionAppSettingsCustomImageArgs) ToDomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput() DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput {
	return i.ToDomainDefaultUserSettingsRSessionAppSettingsCustomImageOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsRSessionAppSettingsCustomImageArgs) ToDomainDefaultUserSettingsRSessionAppSettingsCustomImageOutputWithContext(ctx context.Context) DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput)
}

func (i *DomainDefaultUserSettingsRSessionAppSettingsCustomImageArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsRSessionAppSettingsCustomImageArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsRSessionAppSettingsCustomImage)(nil)).Elem()
}

func (o DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput) ToDomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput() DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput {
	return o
}

func (o DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput) ToDomainDefaultUserSettingsRSessionAppSettingsCustomImageOutputWithContext(ctx context.Context) DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput {
	return o
}

func (o DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsRSessionAppSettingsCustomImage] {
	return pulumix.Output[DomainDefaultUserSettingsRSessionAppSettingsCustomImage]{
		OutputState: o.OutputState,
	}
}

// The name of the App Image Config.
func (o DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput) AppImageConfigName() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultUserSettingsRSessionAppSettingsCustomImage](o, func(v DomainDefaultUserSettingsRSessionAppSettingsCustomImage) string { return v.AppImageConfigName })
}

// The name of the Custom Image.
func (o DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput) ImageName() pulumix.Output[string] {
	return pulumix.Apply[DomainDefaultUserSettingsRSessionAppSettingsCustomImage](o, func(v DomainDefaultUserSettingsRSessionAppSettingsCustomImage) string { return v.ImageName })
}

// The version number of the Custom Image.
func (o DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput) ImageVersionNumber() pulumix.Output[*int] {
	return pulumix.Apply[DomainDefaultUserSettingsRSessionAppSettingsCustomImage](o, func(v DomainDefaultUserSettingsRSessionAppSettingsCustomImage) *int { return v.ImageVersionNumber })
}

type DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecArgs struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecArgs) ToDomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput() DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput {
	return i.ToDomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecArgs) ToDomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput)
}

func (i *DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) ToDomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput() DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) ToDomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec] {
	return pulumix.Output[DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
func (o DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec) *string { return v.InstanceType })
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The ARN of the SageMaker image that the image version belongs to.
func (o DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type DomainDefaultUserSettingsRStudioServerProAppSettings struct {
	// Indicates whether the current user has access to the RStudioServerPro app. Valid values are `ENABLED` and `DISABLED`.
	AccessStatus *string `pulumi:"accessStatus"`
	// The level of permissions that the user has within the RStudioServerPro app. This value defaults to `R_STUDIO_USER`. The `R_STUDIO_ADMIN` value allows the user access to the RStudio Administrative Dashboard. Valid values are `R_STUDIO_USER` and `R_STUDIO_ADMIN`.
	UserGroup *string `pulumi:"userGroup"`
}

type DomainDefaultUserSettingsRStudioServerProAppSettingsArgs struct {
	// Indicates whether the current user has access to the RStudioServerPro app. Valid values are `ENABLED` and `DISABLED`.
	AccessStatus pulumix.Input[*string] `pulumi:"accessStatus"`
	// The level of permissions that the user has within the RStudioServerPro app. This value defaults to `R_STUDIO_USER`. The `R_STUDIO_ADMIN` value allows the user access to the RStudio Administrative Dashboard. Valid values are `R_STUDIO_USER` and `R_STUDIO_ADMIN`.
	UserGroup pulumix.Input[*string] `pulumi:"userGroup"`
}

func (DomainDefaultUserSettingsRStudioServerProAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsRStudioServerProAppSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsRStudioServerProAppSettingsArgs) ToDomainDefaultUserSettingsRStudioServerProAppSettingsOutput() DomainDefaultUserSettingsRStudioServerProAppSettingsOutput {
	return i.ToDomainDefaultUserSettingsRStudioServerProAppSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsRStudioServerProAppSettingsArgs) ToDomainDefaultUserSettingsRStudioServerProAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsRStudioServerProAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsRStudioServerProAppSettingsOutput)
}

func (i *DomainDefaultUserSettingsRStudioServerProAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsRStudioServerProAppSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsRStudioServerProAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsRStudioServerProAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsRStudioServerProAppSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsRStudioServerProAppSettingsOutput) ToDomainDefaultUserSettingsRStudioServerProAppSettingsOutput() DomainDefaultUserSettingsRStudioServerProAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsRStudioServerProAppSettingsOutput) ToDomainDefaultUserSettingsRStudioServerProAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsRStudioServerProAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsRStudioServerProAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsRStudioServerProAppSettings] {
	return pulumix.Output[DomainDefaultUserSettingsRStudioServerProAppSettings]{
		OutputState: o.OutputState,
	}
}

// Indicates whether the current user has access to the RStudioServerPro app. Valid values are `ENABLED` and `DISABLED`.
func (o DomainDefaultUserSettingsRStudioServerProAppSettingsOutput) AccessStatus() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsRStudioServerProAppSettings](o, func(v DomainDefaultUserSettingsRStudioServerProAppSettings) *string { return v.AccessStatus })
}

// The level of permissions that the user has within the RStudioServerPro app. This value defaults to `R_STUDIO_USER`. The `R_STUDIO_ADMIN` value allows the user access to the RStudio Administrative Dashboard. Valid values are `R_STUDIO_USER` and `R_STUDIO_ADMIN`.
func (o DomainDefaultUserSettingsRStudioServerProAppSettingsOutput) UserGroup() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsRStudioServerProAppSettings](o, func(v DomainDefaultUserSettingsRStudioServerProAppSettings) *string { return v.UserGroup })
}

type DomainDefaultUserSettingsSharingSettings struct {
	// Whether to include the notebook cell output when sharing the notebook. The default is `Disabled`. Valid values are `Allowed` and `Disabled`.
	NotebookOutputOption *string `pulumi:"notebookOutputOption"`
	// When `notebookOutputOption` is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
	S3KmsKeyId *string `pulumi:"s3KmsKeyId"`
	// When `notebookOutputOption` is Allowed, the Amazon S3 bucket used to save the notebook cell output.
	S3OutputPath *string `pulumi:"s3OutputPath"`
}

type DomainDefaultUserSettingsSharingSettingsArgs struct {
	// Whether to include the notebook cell output when sharing the notebook. The default is `Disabled`. Valid values are `Allowed` and `Disabled`.
	NotebookOutputOption pulumix.Input[*string] `pulumi:"notebookOutputOption"`
	// When `notebookOutputOption` is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
	S3KmsKeyId pulumix.Input[*string] `pulumi:"s3KmsKeyId"`
	// When `notebookOutputOption` is Allowed, the Amazon S3 bucket used to save the notebook cell output.
	S3OutputPath pulumix.Input[*string] `pulumi:"s3OutputPath"`
}

func (DomainDefaultUserSettingsSharingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsSharingSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsSharingSettingsArgs) ToDomainDefaultUserSettingsSharingSettingsOutput() DomainDefaultUserSettingsSharingSettingsOutput {
	return i.ToDomainDefaultUserSettingsSharingSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsSharingSettingsArgs) ToDomainDefaultUserSettingsSharingSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsSharingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsSharingSettingsOutput)
}

func (i *DomainDefaultUserSettingsSharingSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsSharingSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsSharingSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsSharingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsSharingSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsSharingSettingsOutput) ToDomainDefaultUserSettingsSharingSettingsOutput() DomainDefaultUserSettingsSharingSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsSharingSettingsOutput) ToDomainDefaultUserSettingsSharingSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsSharingSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsSharingSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsSharingSettings] {
	return pulumix.Output[DomainDefaultUserSettingsSharingSettings]{
		OutputState: o.OutputState,
	}
}

// Whether to include the notebook cell output when sharing the notebook. The default is `Disabled`. Valid values are `Allowed` and `Disabled`.
func (o DomainDefaultUserSettingsSharingSettingsOutput) NotebookOutputOption() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsSharingSettings](o, func(v DomainDefaultUserSettingsSharingSettings) *string { return v.NotebookOutputOption })
}

// When `notebookOutputOption` is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
func (o DomainDefaultUserSettingsSharingSettingsOutput) S3KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsSharingSettings](o, func(v DomainDefaultUserSettingsSharingSettings) *string { return v.S3KmsKeyId })
}

// When `notebookOutputOption` is Allowed, the Amazon S3 bucket used to save the notebook cell output.
func (o DomainDefaultUserSettingsSharingSettingsOutput) S3OutputPath() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsSharingSettings](o, func(v DomainDefaultUserSettingsSharingSettings) *string { return v.S3OutputPath })
}

type DomainDefaultUserSettingsTensorBoardAppSettings struct {
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
}

type DomainDefaultUserSettingsTensorBoardAppSettingsArgs struct {
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
}

func (DomainDefaultUserSettingsTensorBoardAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsTensorBoardAppSettings)(nil)).Elem()
}

func (i DomainDefaultUserSettingsTensorBoardAppSettingsArgs) ToDomainDefaultUserSettingsTensorBoardAppSettingsOutput() DomainDefaultUserSettingsTensorBoardAppSettingsOutput {
	return i.ToDomainDefaultUserSettingsTensorBoardAppSettingsOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsTensorBoardAppSettingsArgs) ToDomainDefaultUserSettingsTensorBoardAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsTensorBoardAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsTensorBoardAppSettingsOutput)
}

func (i *DomainDefaultUserSettingsTensorBoardAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsTensorBoardAppSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsTensorBoardAppSettingsOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsTensorBoardAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsTensorBoardAppSettings)(nil)).Elem()
}

func (o DomainDefaultUserSettingsTensorBoardAppSettingsOutput) ToDomainDefaultUserSettingsTensorBoardAppSettingsOutput() DomainDefaultUserSettingsTensorBoardAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsTensorBoardAppSettingsOutput) ToDomainDefaultUserSettingsTensorBoardAppSettingsOutputWithContext(ctx context.Context) DomainDefaultUserSettingsTensorBoardAppSettingsOutput {
	return o
}

func (o DomainDefaultUserSettingsTensorBoardAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsTensorBoardAppSettings] {
	return pulumix.Output[DomainDefaultUserSettingsTensorBoardAppSettings]{
		OutputState: o.OutputState,
	}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o DomainDefaultUserSettingsTensorBoardAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec, DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[DomainDefaultUserSettingsTensorBoardAppSettings](o, func(v DomainDefaultUserSettingsTensorBoardAppSettings) *DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec, DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

type DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs) ToDomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput() DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput {
	return i.ToDomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs) ToDomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput)
}

func (i *DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) ToDomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput() DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) ToDomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec] {
	return pulumix.Output[DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
func (o DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec) *string {
		return v.InstanceType
	})
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The ARN of the SageMaker image that the image version belongs to.
func (o DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec](o, func(v DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type DomainDomainSettings struct {
	// The configuration for attaching a SageMaker user profile name to the execution role as a sts:SourceIdentity key [AWS Docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html). Valid values are `USER_PROFILE_NAME` and `DISABLED`.
	ExecutionRoleIdentityConfig *string `pulumi:"executionRoleIdentityConfig"`
	// A collection of settings that configure the RStudioServerPro Domain-level app. see RStudioServerProDomainSettings below.
	RStudioServerProDomainSettings *DomainDomainSettingsRStudioServerProDomainSettings `pulumi:"rStudioServerProDomainSettings"`
	// The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
}

type DomainDomainSettingsArgs struct {
	// The configuration for attaching a SageMaker user profile name to the execution role as a sts:SourceIdentity key [AWS Docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html). Valid values are `USER_PROFILE_NAME` and `DISABLED`.
	ExecutionRoleIdentityConfig pulumix.Input[*string] `pulumi:"executionRoleIdentityConfig"`
	// A collection of settings that configure the RStudioServerPro Domain-level app. see RStudioServerProDomainSettings below.
	RStudioServerProDomainSettings pulumix.Input[*DomainDomainSettingsRStudioServerProDomainSettingsArgs] `pulumi:"rStudioServerProDomainSettings"`
	// The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
	SecurityGroupIds pulumix.Input[[]string] `pulumi:"securityGroupIds"`
}

func (DomainDomainSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDomainSettings)(nil)).Elem()
}

func (i DomainDomainSettingsArgs) ToDomainDomainSettingsOutput() DomainDomainSettingsOutput {
	return i.ToDomainDomainSettingsOutputWithContext(context.Background())
}

func (i DomainDomainSettingsArgs) ToDomainDomainSettingsOutputWithContext(ctx context.Context) DomainDomainSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDomainSettingsOutput)
}

func (i *DomainDomainSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDomainSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDomainSettingsOutput struct{ *pulumi.OutputState }

func (DomainDomainSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDomainSettings)(nil)).Elem()
}

func (o DomainDomainSettingsOutput) ToDomainDomainSettingsOutput() DomainDomainSettingsOutput {
	return o
}

func (o DomainDomainSettingsOutput) ToDomainDomainSettingsOutputWithContext(ctx context.Context) DomainDomainSettingsOutput {
	return o
}

func (o DomainDomainSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDomainSettings] {
	return pulumix.Output[DomainDomainSettings]{
		OutputState: o.OutputState,
	}
}

// The configuration for attaching a SageMaker user profile name to the execution role as a sts:SourceIdentity key [AWS Docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html). Valid values are `USER_PROFILE_NAME` and `DISABLED`.
func (o DomainDomainSettingsOutput) ExecutionRoleIdentityConfig() pulumix.Output[*string] {
	return pulumix.Apply[DomainDomainSettings](o, func(v DomainDomainSettings) *string { return v.ExecutionRoleIdentityConfig })
}

// A collection of settings that configure the RStudioServerPro Domain-level app. see RStudioServerProDomainSettings below.
func (o DomainDomainSettingsOutput) RStudioServerProDomainSettings() pulumix.GPtrOutput[DomainDomainSettingsRStudioServerProDomainSettings, DomainDomainSettingsRStudioServerProDomainSettingsOutput] {
	value := pulumix.Apply[DomainDomainSettings](o, func(v DomainDomainSettings) *DomainDomainSettingsRStudioServerProDomainSettings {
		return v.RStudioServerProDomainSettings
	})
	return pulumix.GPtrOutput[DomainDomainSettingsRStudioServerProDomainSettings, DomainDomainSettingsRStudioServerProDomainSettingsOutput]{OutputState: value.OutputState}
}

// The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
func (o DomainDomainSettingsOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DomainDomainSettings](o, func(v DomainDomainSettings) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DomainDomainSettingsRStudioServerProDomainSettings struct {
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
	// The ARN of the execution role for the RStudioServerPro Domain-level app.
	DomainExecutionRoleArn string `pulumi:"domainExecutionRoleArn"`
	// A URL pointing to an RStudio Connect server.
	RStudioConnectUrl *string `pulumi:"rStudioConnectUrl"`
	// A URL pointing to an RStudio Package Manager server.
	RStudioPackageManagerUrl *string `pulumi:"rStudioPackageManagerUrl"`
}

type DomainDomainSettingsRStudioServerProDomainSettingsArgs struct {
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
	// The ARN of the execution role for the RStudioServerPro Domain-level app.
	DomainExecutionRoleArn pulumix.Input[string] `pulumi:"domainExecutionRoleArn"`
	// A URL pointing to an RStudio Connect server.
	RStudioConnectUrl pulumix.Input[*string] `pulumi:"rStudioConnectUrl"`
	// A URL pointing to an RStudio Package Manager server.
	RStudioPackageManagerUrl pulumix.Input[*string] `pulumi:"rStudioPackageManagerUrl"`
}

func (DomainDomainSettingsRStudioServerProDomainSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDomainSettingsRStudioServerProDomainSettings)(nil)).Elem()
}

func (i DomainDomainSettingsRStudioServerProDomainSettingsArgs) ToDomainDomainSettingsRStudioServerProDomainSettingsOutput() DomainDomainSettingsRStudioServerProDomainSettingsOutput {
	return i.ToDomainDomainSettingsRStudioServerProDomainSettingsOutputWithContext(context.Background())
}

func (i DomainDomainSettingsRStudioServerProDomainSettingsArgs) ToDomainDomainSettingsRStudioServerProDomainSettingsOutputWithContext(ctx context.Context) DomainDomainSettingsRStudioServerProDomainSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDomainSettingsRStudioServerProDomainSettingsOutput)
}

func (i *DomainDomainSettingsRStudioServerProDomainSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDomainSettingsRStudioServerProDomainSettingsArgs] {
	return pulumix.Val(i)
}

type DomainDomainSettingsRStudioServerProDomainSettingsOutput struct{ *pulumi.OutputState }

func (DomainDomainSettingsRStudioServerProDomainSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDomainSettingsRStudioServerProDomainSettings)(nil)).Elem()
}

func (o DomainDomainSettingsRStudioServerProDomainSettingsOutput) ToDomainDomainSettingsRStudioServerProDomainSettingsOutput() DomainDomainSettingsRStudioServerProDomainSettingsOutput {
	return o
}

func (o DomainDomainSettingsRStudioServerProDomainSettingsOutput) ToDomainDomainSettingsRStudioServerProDomainSettingsOutputWithContext(ctx context.Context) DomainDomainSettingsRStudioServerProDomainSettingsOutput {
	return o
}

func (o DomainDomainSettingsRStudioServerProDomainSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDomainSettingsRStudioServerProDomainSettings] {
	return pulumix.Output[DomainDomainSettingsRStudioServerProDomainSettings]{
		OutputState: o.OutputState,
	}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o DomainDomainSettingsRStudioServerProDomainSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec, DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[DomainDomainSettingsRStudioServerProDomainSettings](o, func(v DomainDomainSettingsRStudioServerProDomainSettings) *DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec, DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

// The ARN of the execution role for the RStudioServerPro Domain-level app.
func (o DomainDomainSettingsRStudioServerProDomainSettingsOutput) DomainExecutionRoleArn() pulumix.Output[string] {
	return pulumix.Apply[DomainDomainSettingsRStudioServerProDomainSettings](o, func(v DomainDomainSettingsRStudioServerProDomainSettings) string { return v.DomainExecutionRoleArn })
}

// A URL pointing to an RStudio Connect server.
func (o DomainDomainSettingsRStudioServerProDomainSettingsOutput) RStudioConnectUrl() pulumix.Output[*string] {
	return pulumix.Apply[DomainDomainSettingsRStudioServerProDomainSettings](o, func(v DomainDomainSettingsRStudioServerProDomainSettings) *string { return v.RStudioConnectUrl })
}

// A URL pointing to an RStudio Package Manager server.
func (o DomainDomainSettingsRStudioServerProDomainSettingsOutput) RStudioPackageManagerUrl() pulumix.Output[*string] {
	return pulumix.Apply[DomainDomainSettingsRStudioServerProDomainSettings](o, func(v DomainDomainSettingsRStudioServerProDomainSettings) *string { return v.RStudioPackageManagerUrl })
}

type DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecArgs struct {
	// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The ARN of the SageMaker image that the image version belongs to.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecArgs) ToDomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput() DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput {
	return i.ToDomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecArgs) ToDomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput)
}

func (i *DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput) ToDomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput() DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput) ToDomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput {
	return o
}

func (o DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec] {
	return pulumix.Output[DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type that the image version runs on.. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
func (o DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec](o, func(v DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec) *string {
		return v.InstanceType
	})
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec](o, func(v DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The ARN of the SageMaker image that the image version belongs to.
func (o DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec](o, func(v DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec](o, func(v DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type DomainRetentionPolicy struct {
	// The retention policy for data stored on an Amazon Elastic File System (EFS) volume. Valid values are `Retain` or `Delete`.  Default value is `Retain`.
	HomeEfsFileSystem *string `pulumi:"homeEfsFileSystem"`
}

type DomainRetentionPolicyArgs struct {
	// The retention policy for data stored on an Amazon Elastic File System (EFS) volume. Valid values are `Retain` or `Delete`.  Default value is `Retain`.
	HomeEfsFileSystem pulumix.Input[*string] `pulumi:"homeEfsFileSystem"`
}

func (DomainRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRetentionPolicy)(nil)).Elem()
}

func (i DomainRetentionPolicyArgs) ToDomainRetentionPolicyOutput() DomainRetentionPolicyOutput {
	return i.ToDomainRetentionPolicyOutputWithContext(context.Background())
}

func (i DomainRetentionPolicyArgs) ToDomainRetentionPolicyOutputWithContext(ctx context.Context) DomainRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRetentionPolicyOutput)
}

func (i *DomainRetentionPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainRetentionPolicyArgs] {
	return pulumix.Val(i)
}

type DomainRetentionPolicyOutput struct{ *pulumi.OutputState }

func (DomainRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRetentionPolicy)(nil)).Elem()
}

func (o DomainRetentionPolicyOutput) ToDomainRetentionPolicyOutput() DomainRetentionPolicyOutput {
	return o
}

func (o DomainRetentionPolicyOutput) ToDomainRetentionPolicyOutputWithContext(ctx context.Context) DomainRetentionPolicyOutput {
	return o
}

func (o DomainRetentionPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[DomainRetentionPolicy] {
	return pulumix.Output[DomainRetentionPolicy]{
		OutputState: o.OutputState,
	}
}

// The retention policy for data stored on an Amazon Elastic File System (EFS) volume. Valid values are `Retain` or `Delete`.  Default value is `Retain`.
func (o DomainRetentionPolicyOutput) HomeEfsFileSystem() pulumix.Output[*string] {
	return pulumix.Apply[DomainRetentionPolicy](o, func(v DomainRetentionPolicy) *string { return v.HomeEfsFileSystem })
}

type EndpointConfigurationAsyncInferenceConfig struct {
	// Configures the behavior of the client used by Amazon SageMaker to interact with the model container during asynchronous inference.
	ClientConfig *EndpointConfigurationAsyncInferenceConfigClientConfig `pulumi:"clientConfig"`
	// Specifies the configuration for asynchronous inference invocation outputs.
	OutputConfig EndpointConfigurationAsyncInferenceConfigOutputConfig `pulumi:"outputConfig"`
}

type EndpointConfigurationAsyncInferenceConfigArgs struct {
	// Configures the behavior of the client used by Amazon SageMaker to interact with the model container during asynchronous inference.
	ClientConfig pulumix.Input[*EndpointConfigurationAsyncInferenceConfigClientConfigArgs] `pulumi:"clientConfig"`
	// Specifies the configuration for asynchronous inference invocation outputs.
	OutputConfig pulumix.Input[*EndpointConfigurationAsyncInferenceConfigOutputConfigArgs] `pulumi:"outputConfig"`
}

func (EndpointConfigurationAsyncInferenceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationAsyncInferenceConfig)(nil)).Elem()
}

func (i EndpointConfigurationAsyncInferenceConfigArgs) ToEndpointConfigurationAsyncInferenceConfigOutput() EndpointConfigurationAsyncInferenceConfigOutput {
	return i.ToEndpointConfigurationAsyncInferenceConfigOutputWithContext(context.Background())
}

func (i EndpointConfigurationAsyncInferenceConfigArgs) ToEndpointConfigurationAsyncInferenceConfigOutputWithContext(ctx context.Context) EndpointConfigurationAsyncInferenceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationAsyncInferenceConfigOutput)
}

func (i *EndpointConfigurationAsyncInferenceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationAsyncInferenceConfigArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationAsyncInferenceConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationAsyncInferenceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationAsyncInferenceConfig)(nil)).Elem()
}

func (o EndpointConfigurationAsyncInferenceConfigOutput) ToEndpointConfigurationAsyncInferenceConfigOutput() EndpointConfigurationAsyncInferenceConfigOutput {
	return o
}

func (o EndpointConfigurationAsyncInferenceConfigOutput) ToEndpointConfigurationAsyncInferenceConfigOutputWithContext(ctx context.Context) EndpointConfigurationAsyncInferenceConfigOutput {
	return o
}

func (o EndpointConfigurationAsyncInferenceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationAsyncInferenceConfig] {
	return pulumix.Output[EndpointConfigurationAsyncInferenceConfig]{
		OutputState: o.OutputState,
	}
}

// Configures the behavior of the client used by Amazon SageMaker to interact with the model container during asynchronous inference.
func (o EndpointConfigurationAsyncInferenceConfigOutput) ClientConfig() pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfigClientConfig, EndpointConfigurationAsyncInferenceConfigClientConfigOutput] {
	value := pulumix.Apply[EndpointConfigurationAsyncInferenceConfig](o, func(v EndpointConfigurationAsyncInferenceConfig) *EndpointConfigurationAsyncInferenceConfigClientConfig {
		return v.ClientConfig
	})
	return pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfigClientConfig, EndpointConfigurationAsyncInferenceConfigClientConfigOutput]{OutputState: value.OutputState}
}

// Specifies the configuration for asynchronous inference invocation outputs.
func (o EndpointConfigurationAsyncInferenceConfigOutput) OutputConfig() pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfigOutputConfig, EndpointConfigurationAsyncInferenceConfigOutputConfigOutput] {
	value := pulumix.Apply[EndpointConfigurationAsyncInferenceConfig](o, func(v EndpointConfigurationAsyncInferenceConfig) EndpointConfigurationAsyncInferenceConfigOutputConfig {
		return v.OutputConfig
	})
	return pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfigOutputConfig, EndpointConfigurationAsyncInferenceConfigOutputConfigOutput]{OutputState: value.OutputState}
}

type EndpointConfigurationAsyncInferenceConfigClientConfig struct {
	// The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.
	MaxConcurrentInvocationsPerInstance *int `pulumi:"maxConcurrentInvocationsPerInstance"`
}

type EndpointConfigurationAsyncInferenceConfigClientConfigArgs struct {
	// The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.
	MaxConcurrentInvocationsPerInstance pulumix.Input[*int] `pulumi:"maxConcurrentInvocationsPerInstance"`
}

func (EndpointConfigurationAsyncInferenceConfigClientConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationAsyncInferenceConfigClientConfig)(nil)).Elem()
}

func (i EndpointConfigurationAsyncInferenceConfigClientConfigArgs) ToEndpointConfigurationAsyncInferenceConfigClientConfigOutput() EndpointConfigurationAsyncInferenceConfigClientConfigOutput {
	return i.ToEndpointConfigurationAsyncInferenceConfigClientConfigOutputWithContext(context.Background())
}

func (i EndpointConfigurationAsyncInferenceConfigClientConfigArgs) ToEndpointConfigurationAsyncInferenceConfigClientConfigOutputWithContext(ctx context.Context) EndpointConfigurationAsyncInferenceConfigClientConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationAsyncInferenceConfigClientConfigOutput)
}

func (i *EndpointConfigurationAsyncInferenceConfigClientConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationAsyncInferenceConfigClientConfigArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationAsyncInferenceConfigClientConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationAsyncInferenceConfigClientConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationAsyncInferenceConfigClientConfig)(nil)).Elem()
}

func (o EndpointConfigurationAsyncInferenceConfigClientConfigOutput) ToEndpointConfigurationAsyncInferenceConfigClientConfigOutput() EndpointConfigurationAsyncInferenceConfigClientConfigOutput {
	return o
}

func (o EndpointConfigurationAsyncInferenceConfigClientConfigOutput) ToEndpointConfigurationAsyncInferenceConfigClientConfigOutputWithContext(ctx context.Context) EndpointConfigurationAsyncInferenceConfigClientConfigOutput {
	return o
}

func (o EndpointConfigurationAsyncInferenceConfigClientConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationAsyncInferenceConfigClientConfig] {
	return pulumix.Output[EndpointConfigurationAsyncInferenceConfigClientConfig]{
		OutputState: o.OutputState,
	}
}

// The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.
func (o EndpointConfigurationAsyncInferenceConfigClientConfigOutput) MaxConcurrentInvocationsPerInstance() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationAsyncInferenceConfigClientConfig](o, func(v EndpointConfigurationAsyncInferenceConfigClientConfig) *int {
		return v.MaxConcurrentInvocationsPerInstance
	})
}

type EndpointConfigurationAsyncInferenceConfigOutputConfig struct {
	// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies the configuration for notifications of inference results for asynchronous inference.
	NotificationConfig *EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig `pulumi:"notificationConfig"`
	// The Amazon S3 location to upload failure inference responses to.
	S3FailurePath *string `pulumi:"s3FailurePath"`
	// The Amazon S3 location to upload inference responses to.
	S3OutputPath string `pulumi:"s3OutputPath"`
}

type EndpointConfigurationAsyncInferenceConfigOutputConfigArgs struct {
	// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// Specifies the configuration for notifications of inference results for asynchronous inference.
	NotificationConfig pulumix.Input[*EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigArgs] `pulumi:"notificationConfig"`
	// The Amazon S3 location to upload failure inference responses to.
	S3FailurePath pulumix.Input[*string] `pulumi:"s3FailurePath"`
	// The Amazon S3 location to upload inference responses to.
	S3OutputPath pulumix.Input[string] `pulumi:"s3OutputPath"`
}

func (EndpointConfigurationAsyncInferenceConfigOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationAsyncInferenceConfigOutputConfig)(nil)).Elem()
}

func (i EndpointConfigurationAsyncInferenceConfigOutputConfigArgs) ToEndpointConfigurationAsyncInferenceConfigOutputConfigOutput() EndpointConfigurationAsyncInferenceConfigOutputConfigOutput {
	return i.ToEndpointConfigurationAsyncInferenceConfigOutputConfigOutputWithContext(context.Background())
}

func (i EndpointConfigurationAsyncInferenceConfigOutputConfigArgs) ToEndpointConfigurationAsyncInferenceConfigOutputConfigOutputWithContext(ctx context.Context) EndpointConfigurationAsyncInferenceConfigOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationAsyncInferenceConfigOutputConfigOutput)
}

func (i *EndpointConfigurationAsyncInferenceConfigOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationAsyncInferenceConfigOutputConfigArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationAsyncInferenceConfigOutputConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationAsyncInferenceConfigOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationAsyncInferenceConfigOutputConfig)(nil)).Elem()
}

func (o EndpointConfigurationAsyncInferenceConfigOutputConfigOutput) ToEndpointConfigurationAsyncInferenceConfigOutputConfigOutput() EndpointConfigurationAsyncInferenceConfigOutputConfigOutput {
	return o
}

func (o EndpointConfigurationAsyncInferenceConfigOutputConfigOutput) ToEndpointConfigurationAsyncInferenceConfigOutputConfigOutputWithContext(ctx context.Context) EndpointConfigurationAsyncInferenceConfigOutputConfigOutput {
	return o
}

func (o EndpointConfigurationAsyncInferenceConfigOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationAsyncInferenceConfigOutputConfig] {
	return pulumix.Output[EndpointConfigurationAsyncInferenceConfigOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.
func (o EndpointConfigurationAsyncInferenceConfigOutputConfigOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationAsyncInferenceConfigOutputConfig](o, func(v EndpointConfigurationAsyncInferenceConfigOutputConfig) *string { return v.KmsKeyId })
}

// Specifies the configuration for notifications of inference results for asynchronous inference.
func (o EndpointConfigurationAsyncInferenceConfigOutputConfigOutput) NotificationConfig() pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig, EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput] {
	value := pulumix.Apply[EndpointConfigurationAsyncInferenceConfigOutputConfig](o, func(v EndpointConfigurationAsyncInferenceConfigOutputConfig) *EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig {
		return v.NotificationConfig
	})
	return pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig, EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput]{OutputState: value.OutputState}
}

// The Amazon S3 location to upload failure inference responses to.
func (o EndpointConfigurationAsyncInferenceConfigOutputConfigOutput) S3FailurePath() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationAsyncInferenceConfigOutputConfig](o, func(v EndpointConfigurationAsyncInferenceConfigOutputConfig) *string { return v.S3FailurePath })
}

// The Amazon S3 location to upload inference responses to.
func (o EndpointConfigurationAsyncInferenceConfigOutputConfigOutput) S3OutputPath() pulumix.Output[string] {
	return pulumix.Apply[EndpointConfigurationAsyncInferenceConfigOutputConfig](o, func(v EndpointConfigurationAsyncInferenceConfigOutputConfig) string { return v.S3OutputPath })
}

type EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig struct {
	// Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.
	ErrorTopic *string `pulumi:"errorTopic"`
	// The Amazon SNS topics where you want the inference response to be included. Valid values are `SUCCESS_NOTIFICATION_TOPIC` and `ERROR_NOTIFICATION_TOPIC`.
	IncludeInferenceResponseIns []string `pulumi:"includeInferenceResponseIns"`
	// Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.
	SuccessTopic *string `pulumi:"successTopic"`
}

type EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigArgs struct {
	// Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.
	ErrorTopic pulumix.Input[*string] `pulumi:"errorTopic"`
	// The Amazon SNS topics where you want the inference response to be included. Valid values are `SUCCESS_NOTIFICATION_TOPIC` and `ERROR_NOTIFICATION_TOPIC`.
	IncludeInferenceResponseIns pulumix.Input[[]string] `pulumi:"includeInferenceResponseIns"`
	// Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.
	SuccessTopic pulumix.Input[*string] `pulumi:"successTopic"`
}

func (EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig)(nil)).Elem()
}

func (i EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigArgs) ToEndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput() EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput {
	return i.ToEndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutputWithContext(context.Background())
}

func (i EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigArgs) ToEndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutputWithContext(ctx context.Context) EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput)
}

func (i *EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig)(nil)).Elem()
}

func (o EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput) ToEndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput() EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput {
	return o
}

func (o EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput) ToEndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutputWithContext(ctx context.Context) EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput {
	return o
}

func (o EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig] {
	return pulumix.Output[EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig]{
		OutputState: o.OutputState,
	}
}

// Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.
func (o EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput) ErrorTopic() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig](o, func(v EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig) *string {
		return v.ErrorTopic
	})
}

// The Amazon SNS topics where you want the inference response to be included. Valid values are `SUCCESS_NOTIFICATION_TOPIC` and `ERROR_NOTIFICATION_TOPIC`.
func (o EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput) IncludeInferenceResponseIns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig](o, func(v EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig) []string {
		return v.IncludeInferenceResponseIns
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.
func (o EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput) SuccessTopic() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig](o, func(v EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfig) *string {
		return v.SuccessTopic
	})
}

type EndpointConfigurationDataCaptureConfig struct {
	// The content type headers to capture. Fields are documented below.
	CaptureContentTypeHeader *EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader `pulumi:"captureContentTypeHeader"`
	// Specifies what data to capture. Fields are documented below.
	CaptureOptions []EndpointConfigurationDataCaptureConfigCaptureOption `pulumi:"captureOptions"`
	// The URL for S3 location where the captured data is stored.
	DestinationS3Uri string `pulumi:"destinationS3Uri"`
	// Flag to enable data capture. Defaults to `false`.
	EnableCapture *bool `pulumi:"enableCapture"`
	// Portion of data to capture. Should be between 0 and 100.
	InitialSamplingPercentage int `pulumi:"initialSamplingPercentage"`
	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt the captured data on Amazon S3.
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

type EndpointConfigurationDataCaptureConfigArgs struct {
	// The content type headers to capture. Fields are documented below.
	CaptureContentTypeHeader pulumix.Input[*EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderArgs] `pulumi:"captureContentTypeHeader"`
	// Specifies what data to capture. Fields are documented below.
	CaptureOptions pulumix.Input[[]*EndpointConfigurationDataCaptureConfigCaptureOptionArgs] `pulumi:"captureOptions"`
	// The URL for S3 location where the captured data is stored.
	DestinationS3Uri pulumix.Input[string] `pulumi:"destinationS3Uri"`
	// Flag to enable data capture. Defaults to `false`.
	EnableCapture pulumix.Input[*bool] `pulumi:"enableCapture"`
	// Portion of data to capture. Should be between 0 and 100.
	InitialSamplingPercentage pulumix.Input[int] `pulumi:"initialSamplingPercentage"`
	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt the captured data on Amazon S3.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
}

func (EndpointConfigurationDataCaptureConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationDataCaptureConfig)(nil)).Elem()
}

func (i EndpointConfigurationDataCaptureConfigArgs) ToEndpointConfigurationDataCaptureConfigOutput() EndpointConfigurationDataCaptureConfigOutput {
	return i.ToEndpointConfigurationDataCaptureConfigOutputWithContext(context.Background())
}

func (i EndpointConfigurationDataCaptureConfigArgs) ToEndpointConfigurationDataCaptureConfigOutputWithContext(ctx context.Context) EndpointConfigurationDataCaptureConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationDataCaptureConfigOutput)
}

func (i *EndpointConfigurationDataCaptureConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationDataCaptureConfigArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationDataCaptureConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationDataCaptureConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationDataCaptureConfig)(nil)).Elem()
}

func (o EndpointConfigurationDataCaptureConfigOutput) ToEndpointConfigurationDataCaptureConfigOutput() EndpointConfigurationDataCaptureConfigOutput {
	return o
}

func (o EndpointConfigurationDataCaptureConfigOutput) ToEndpointConfigurationDataCaptureConfigOutputWithContext(ctx context.Context) EndpointConfigurationDataCaptureConfigOutput {
	return o
}

func (o EndpointConfigurationDataCaptureConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationDataCaptureConfig] {
	return pulumix.Output[EndpointConfigurationDataCaptureConfig]{
		OutputState: o.OutputState,
	}
}

// The content type headers to capture. Fields are documented below.
func (o EndpointConfigurationDataCaptureConfigOutput) CaptureContentTypeHeader() pulumix.GPtrOutput[EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader, EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput] {
	value := pulumix.Apply[EndpointConfigurationDataCaptureConfig](o, func(v EndpointConfigurationDataCaptureConfig) *EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader {
		return v.CaptureContentTypeHeader
	})
	return pulumix.GPtrOutput[EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader, EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput]{OutputState: value.OutputState}
}

// Specifies what data to capture. Fields are documented below.
func (o EndpointConfigurationDataCaptureConfigOutput) CaptureOptions() pulumix.GArrayOutput[EndpointConfigurationDataCaptureConfigCaptureOption, EndpointConfigurationDataCaptureConfigCaptureOptionOutput] {
	value := pulumix.Apply[EndpointConfigurationDataCaptureConfig](o, func(v EndpointConfigurationDataCaptureConfig) []EndpointConfigurationDataCaptureConfigCaptureOption {
		return v.CaptureOptions
	})
	return pulumix.GArrayOutput[EndpointConfigurationDataCaptureConfigCaptureOption, EndpointConfigurationDataCaptureConfigCaptureOptionOutput]{OutputState: value.OutputState}
}

// The URL for S3 location where the captured data is stored.
func (o EndpointConfigurationDataCaptureConfigOutput) DestinationS3Uri() pulumix.Output[string] {
	return pulumix.Apply[EndpointConfigurationDataCaptureConfig](o, func(v EndpointConfigurationDataCaptureConfig) string { return v.DestinationS3Uri })
}

// Flag to enable data capture. Defaults to `false`.
func (o EndpointConfigurationDataCaptureConfigOutput) EnableCapture() pulumix.Output[*bool] {
	return pulumix.Apply[EndpointConfigurationDataCaptureConfig](o, func(v EndpointConfigurationDataCaptureConfig) *bool { return v.EnableCapture })
}

// Portion of data to capture. Should be between 0 and 100.
func (o EndpointConfigurationDataCaptureConfigOutput) InitialSamplingPercentage() pulumix.Output[int] {
	return pulumix.Apply[EndpointConfigurationDataCaptureConfig](o, func(v EndpointConfigurationDataCaptureConfig) int { return v.InitialSamplingPercentage })
}

// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt the captured data on Amazon S3.
func (o EndpointConfigurationDataCaptureConfigOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationDataCaptureConfig](o, func(v EndpointConfigurationDataCaptureConfig) *string { return v.KmsKeyId })
}

type EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader struct {
	// The CSV content type headers to capture.
	CsvContentTypes []string `pulumi:"csvContentTypes"`
	// The JSON content type headers to capture.
	JsonContentTypes []string `pulumi:"jsonContentTypes"`
}

type EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderArgs struct {
	// The CSV content type headers to capture.
	CsvContentTypes pulumix.Input[[]string] `pulumi:"csvContentTypes"`
	// The JSON content type headers to capture.
	JsonContentTypes pulumix.Input[[]string] `pulumi:"jsonContentTypes"`
}

func (EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader)(nil)).Elem()
}

func (i EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderArgs) ToEndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput() EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput {
	return i.ToEndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutputWithContext(context.Background())
}

func (i EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderArgs) ToEndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutputWithContext(ctx context.Context) EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput)
}

func (i *EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader)(nil)).Elem()
}

func (o EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput) ToEndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput() EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput {
	return o
}

func (o EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput) ToEndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutputWithContext(ctx context.Context) EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput {
	return o
}

func (o EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader] {
	return pulumix.Output[EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader]{
		OutputState: o.OutputState,
	}
}

// The CSV content type headers to capture.
func (o EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput) CsvContentTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader](o, func(v EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader) []string {
		return v.CsvContentTypes
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The JSON content type headers to capture.
func (o EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput) JsonContentTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader](o, func(v EndpointConfigurationDataCaptureConfigCaptureContentTypeHeader) []string {
		return v.JsonContentTypes
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type EndpointConfigurationDataCaptureConfigCaptureOption struct {
	// Specifies the data to be captured. Should be one of `Input` or `Output`.
	CaptureMode string `pulumi:"captureMode"`
}

type EndpointConfigurationDataCaptureConfigCaptureOptionArgs struct {
	// Specifies the data to be captured. Should be one of `Input` or `Output`.
	CaptureMode pulumix.Input[string] `pulumi:"captureMode"`
}

func (EndpointConfigurationDataCaptureConfigCaptureOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationDataCaptureConfigCaptureOption)(nil)).Elem()
}

func (i EndpointConfigurationDataCaptureConfigCaptureOptionArgs) ToEndpointConfigurationDataCaptureConfigCaptureOptionOutput() EndpointConfigurationDataCaptureConfigCaptureOptionOutput {
	return i.ToEndpointConfigurationDataCaptureConfigCaptureOptionOutputWithContext(context.Background())
}

func (i EndpointConfigurationDataCaptureConfigCaptureOptionArgs) ToEndpointConfigurationDataCaptureConfigCaptureOptionOutputWithContext(ctx context.Context) EndpointConfigurationDataCaptureConfigCaptureOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationDataCaptureConfigCaptureOptionOutput)
}

func (i *EndpointConfigurationDataCaptureConfigCaptureOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationDataCaptureConfigCaptureOptionArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationDataCaptureConfigCaptureOptionOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationDataCaptureConfigCaptureOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationDataCaptureConfigCaptureOption)(nil)).Elem()
}

func (o EndpointConfigurationDataCaptureConfigCaptureOptionOutput) ToEndpointConfigurationDataCaptureConfigCaptureOptionOutput() EndpointConfigurationDataCaptureConfigCaptureOptionOutput {
	return o
}

func (o EndpointConfigurationDataCaptureConfigCaptureOptionOutput) ToEndpointConfigurationDataCaptureConfigCaptureOptionOutputWithContext(ctx context.Context) EndpointConfigurationDataCaptureConfigCaptureOptionOutput {
	return o
}

func (o EndpointConfigurationDataCaptureConfigCaptureOptionOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationDataCaptureConfigCaptureOption] {
	return pulumix.Output[EndpointConfigurationDataCaptureConfigCaptureOption]{
		OutputState: o.OutputState,
	}
}

// Specifies the data to be captured. Should be one of `Input` or `Output`.
func (o EndpointConfigurationDataCaptureConfigCaptureOptionOutput) CaptureMode() pulumix.Output[string] {
	return pulumix.Apply[EndpointConfigurationDataCaptureConfigCaptureOption](o, func(v EndpointConfigurationDataCaptureConfigCaptureOption) string { return v.CaptureMode })
}

type EndpointConfigurationProductionVariant struct {
	// The size of the Elastic Inference (EI) instance to use for the production variant.
	AcceleratorType *string `pulumi:"acceleratorType"`
	// The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see [How Your Container Should Respond to Health Check (Ping) Requests](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-inference-code.html#your-algorithms-inference-algo-ping-requests). Valid values between `60` and `3600`.
	ContainerStartupHealthCheckTimeoutInSeconds *int `pulumi:"containerStartupHealthCheckTimeoutInSeconds"`
	// Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.
	CoreDumpConfig *EndpointConfigurationProductionVariantCoreDumpConfig `pulumi:"coreDumpConfig"`
	// You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.
	EnableSsmAccess *bool `pulumi:"enableSsmAccess"`
	// Initial number of instances used for auto-scaling.
	InitialInstanceCount *int `pulumi:"initialInstanceCount"`
	// Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to `1.0`.
	InitialVariantWeight *float64 `pulumi:"initialVariantWeight"`
	// The type of instance to start.
	InstanceType *string `pulumi:"instanceType"`
	// The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between `60` and `3600`.
	ModelDataDownloadTimeoutInSeconds *int `pulumi:"modelDataDownloadTimeoutInSeconds"`
	// The name of the model to use.
	ModelName string `pulumi:"modelName"`
	// Specifies configuration for how an endpoint performs asynchronous inference.
	ServerlessConfig *EndpointConfigurationProductionVariantServerlessConfig `pulumi:"serverlessConfig"`
	// The name of the variant. If omitted, this provider will assign a random, unique name.
	VariantName *string `pulumi:"variantName"`
	// The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between `1` and `512`.
	VolumeSizeInGb *int `pulumi:"volumeSizeInGb"`
}

type EndpointConfigurationProductionVariantArgs struct {
	// The size of the Elastic Inference (EI) instance to use for the production variant.
	AcceleratorType pulumix.Input[*string] `pulumi:"acceleratorType"`
	// The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see [How Your Container Should Respond to Health Check (Ping) Requests](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-inference-code.html#your-algorithms-inference-algo-ping-requests). Valid values between `60` and `3600`.
	ContainerStartupHealthCheckTimeoutInSeconds pulumix.Input[*int] `pulumi:"containerStartupHealthCheckTimeoutInSeconds"`
	// Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.
	CoreDumpConfig pulumix.Input[*EndpointConfigurationProductionVariantCoreDumpConfigArgs] `pulumi:"coreDumpConfig"`
	// You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.
	EnableSsmAccess pulumix.Input[*bool] `pulumi:"enableSsmAccess"`
	// Initial number of instances used for auto-scaling.
	InitialInstanceCount pulumix.Input[*int] `pulumi:"initialInstanceCount"`
	// Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to `1.0`.
	InitialVariantWeight pulumix.Input[*float64] `pulumi:"initialVariantWeight"`
	// The type of instance to start.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between `60` and `3600`.
	ModelDataDownloadTimeoutInSeconds pulumix.Input[*int] `pulumi:"modelDataDownloadTimeoutInSeconds"`
	// The name of the model to use.
	ModelName pulumix.Input[string] `pulumi:"modelName"`
	// Specifies configuration for how an endpoint performs asynchronous inference.
	ServerlessConfig pulumix.Input[*EndpointConfigurationProductionVariantServerlessConfigArgs] `pulumi:"serverlessConfig"`
	// The name of the variant. If omitted, this provider will assign a random, unique name.
	VariantName pulumix.Input[*string] `pulumi:"variantName"`
	// The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between `1` and `512`.
	VolumeSizeInGb pulumix.Input[*int] `pulumi:"volumeSizeInGb"`
}

func (EndpointConfigurationProductionVariantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationProductionVariant)(nil)).Elem()
}

func (i EndpointConfigurationProductionVariantArgs) ToEndpointConfigurationProductionVariantOutput() EndpointConfigurationProductionVariantOutput {
	return i.ToEndpointConfigurationProductionVariantOutputWithContext(context.Background())
}

func (i EndpointConfigurationProductionVariantArgs) ToEndpointConfigurationProductionVariantOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationProductionVariantOutput)
}

func (i *EndpointConfigurationProductionVariantArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationProductionVariantArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationProductionVariantOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationProductionVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationProductionVariant)(nil)).Elem()
}

func (o EndpointConfigurationProductionVariantOutput) ToEndpointConfigurationProductionVariantOutput() EndpointConfigurationProductionVariantOutput {
	return o
}

func (o EndpointConfigurationProductionVariantOutput) ToEndpointConfigurationProductionVariantOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantOutput {
	return o
}

func (o EndpointConfigurationProductionVariantOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationProductionVariant] {
	return pulumix.Output[EndpointConfigurationProductionVariant]{
		OutputState: o.OutputState,
	}
}

// The size of the Elastic Inference (EI) instance to use for the production variant.
func (o EndpointConfigurationProductionVariantOutput) AcceleratorType() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *string { return v.AcceleratorType })
}

// The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see [How Your Container Should Respond to Health Check (Ping) Requests](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-inference-code.html#your-algorithms-inference-algo-ping-requests). Valid values between `60` and `3600`.
func (o EndpointConfigurationProductionVariantOutput) ContainerStartupHealthCheckTimeoutInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *int {
		return v.ContainerStartupHealthCheckTimeoutInSeconds
	})
}

// Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.
func (o EndpointConfigurationProductionVariantOutput) CoreDumpConfig() pulumix.GPtrOutput[EndpointConfigurationProductionVariantCoreDumpConfig, EndpointConfigurationProductionVariantCoreDumpConfigOutput] {
	value := pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *EndpointConfigurationProductionVariantCoreDumpConfig {
		return v.CoreDumpConfig
	})
	return pulumix.GPtrOutput[EndpointConfigurationProductionVariantCoreDumpConfig, EndpointConfigurationProductionVariantCoreDumpConfigOutput]{OutputState: value.OutputState}
}

// You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.
func (o EndpointConfigurationProductionVariantOutput) EnableSsmAccess() pulumix.Output[*bool] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *bool { return v.EnableSsmAccess })
}

// Initial number of instances used for auto-scaling.
func (o EndpointConfigurationProductionVariantOutput) InitialInstanceCount() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *int { return v.InitialInstanceCount })
}

// Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to `1.0`.
func (o EndpointConfigurationProductionVariantOutput) InitialVariantWeight() pulumix.Output[*float64] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *float64 { return v.InitialVariantWeight })
}

// The type of instance to start.
func (o EndpointConfigurationProductionVariantOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *string { return v.InstanceType })
}

// The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between `60` and `3600`.
func (o EndpointConfigurationProductionVariantOutput) ModelDataDownloadTimeoutInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *int { return v.ModelDataDownloadTimeoutInSeconds })
}

// The name of the model to use.
func (o EndpointConfigurationProductionVariantOutput) ModelName() pulumix.Output[string] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) string { return v.ModelName })
}

// Specifies configuration for how an endpoint performs asynchronous inference.
func (o EndpointConfigurationProductionVariantOutput) ServerlessConfig() pulumix.GPtrOutput[EndpointConfigurationProductionVariantServerlessConfig, EndpointConfigurationProductionVariantServerlessConfigOutput] {
	value := pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *EndpointConfigurationProductionVariantServerlessConfig {
		return v.ServerlessConfig
	})
	return pulumix.GPtrOutput[EndpointConfigurationProductionVariantServerlessConfig, EndpointConfigurationProductionVariantServerlessConfigOutput]{OutputState: value.OutputState}
}

// The name of the variant. If omitted, this provider will assign a random, unique name.
func (o EndpointConfigurationProductionVariantOutput) VariantName() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *string { return v.VariantName })
}

// The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between `1` and `512`.
func (o EndpointConfigurationProductionVariantOutput) VolumeSizeInGb() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationProductionVariant](o, func(v EndpointConfigurationProductionVariant) *int { return v.VolumeSizeInGb })
}

type EndpointConfigurationProductionVariantCoreDumpConfig struct {
	// The Amazon S3 bucket to send the core dump to.
	DestinationS3Uri string `pulumi:"destinationS3Uri"`
	// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

type EndpointConfigurationProductionVariantCoreDumpConfigArgs struct {
	// The Amazon S3 bucket to send the core dump to.
	DestinationS3Uri pulumix.Input[string] `pulumi:"destinationS3Uri"`
	// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
}

func (EndpointConfigurationProductionVariantCoreDumpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationProductionVariantCoreDumpConfig)(nil)).Elem()
}

func (i EndpointConfigurationProductionVariantCoreDumpConfigArgs) ToEndpointConfigurationProductionVariantCoreDumpConfigOutput() EndpointConfigurationProductionVariantCoreDumpConfigOutput {
	return i.ToEndpointConfigurationProductionVariantCoreDumpConfigOutputWithContext(context.Background())
}

func (i EndpointConfigurationProductionVariantCoreDumpConfigArgs) ToEndpointConfigurationProductionVariantCoreDumpConfigOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantCoreDumpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationProductionVariantCoreDumpConfigOutput)
}

func (i *EndpointConfigurationProductionVariantCoreDumpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationProductionVariantCoreDumpConfigArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationProductionVariantCoreDumpConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationProductionVariantCoreDumpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationProductionVariantCoreDumpConfig)(nil)).Elem()
}

func (o EndpointConfigurationProductionVariantCoreDumpConfigOutput) ToEndpointConfigurationProductionVariantCoreDumpConfigOutput() EndpointConfigurationProductionVariantCoreDumpConfigOutput {
	return o
}

func (o EndpointConfigurationProductionVariantCoreDumpConfigOutput) ToEndpointConfigurationProductionVariantCoreDumpConfigOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantCoreDumpConfigOutput {
	return o
}

func (o EndpointConfigurationProductionVariantCoreDumpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationProductionVariantCoreDumpConfig] {
	return pulumix.Output[EndpointConfigurationProductionVariantCoreDumpConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 bucket to send the core dump to.
func (o EndpointConfigurationProductionVariantCoreDumpConfigOutput) DestinationS3Uri() pulumix.Output[string] {
	return pulumix.Apply[EndpointConfigurationProductionVariantCoreDumpConfig](o, func(v EndpointConfigurationProductionVariantCoreDumpConfig) string { return v.DestinationS3Uri })
}

// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.
func (o EndpointConfigurationProductionVariantCoreDumpConfigOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationProductionVariantCoreDumpConfig](o, func(v EndpointConfigurationProductionVariantCoreDumpConfig) *string { return v.KmsKeyId })
}

type EndpointConfigurationProductionVariantServerlessConfig struct {
	// The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between `1` and `200`.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// The memory size of your serverless endpoint. Valid values are in 1 GB increments: `1024` MB, `2048` MB, `3072` MB, `4096` MB, `5120` MB, or `6144` MB.
	MemorySizeInMb int `pulumi:"memorySizeInMb"`
	// The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to `maxConcurrency`. Valid values are between `1` and `200`.
	ProvisionedConcurrency *int `pulumi:"provisionedConcurrency"`
}

type EndpointConfigurationProductionVariantServerlessConfigArgs struct {
	// The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between `1` and `200`.
	MaxConcurrency pulumix.Input[int] `pulumi:"maxConcurrency"`
	// The memory size of your serverless endpoint. Valid values are in 1 GB increments: `1024` MB, `2048` MB, `3072` MB, `4096` MB, `5120` MB, or `6144` MB.
	MemorySizeInMb pulumix.Input[int] `pulumi:"memorySizeInMb"`
	// The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to `maxConcurrency`. Valid values are between `1` and `200`.
	ProvisionedConcurrency pulumix.Input[*int] `pulumi:"provisionedConcurrency"`
}

func (EndpointConfigurationProductionVariantServerlessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationProductionVariantServerlessConfig)(nil)).Elem()
}

func (i EndpointConfigurationProductionVariantServerlessConfigArgs) ToEndpointConfigurationProductionVariantServerlessConfigOutput() EndpointConfigurationProductionVariantServerlessConfigOutput {
	return i.ToEndpointConfigurationProductionVariantServerlessConfigOutputWithContext(context.Background())
}

func (i EndpointConfigurationProductionVariantServerlessConfigArgs) ToEndpointConfigurationProductionVariantServerlessConfigOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantServerlessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationProductionVariantServerlessConfigOutput)
}

func (i *EndpointConfigurationProductionVariantServerlessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationProductionVariantServerlessConfigArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationProductionVariantServerlessConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationProductionVariantServerlessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationProductionVariantServerlessConfig)(nil)).Elem()
}

func (o EndpointConfigurationProductionVariantServerlessConfigOutput) ToEndpointConfigurationProductionVariantServerlessConfigOutput() EndpointConfigurationProductionVariantServerlessConfigOutput {
	return o
}

func (o EndpointConfigurationProductionVariantServerlessConfigOutput) ToEndpointConfigurationProductionVariantServerlessConfigOutputWithContext(ctx context.Context) EndpointConfigurationProductionVariantServerlessConfigOutput {
	return o
}

func (o EndpointConfigurationProductionVariantServerlessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationProductionVariantServerlessConfig] {
	return pulumix.Output[EndpointConfigurationProductionVariantServerlessConfig]{
		OutputState: o.OutputState,
	}
}

// The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between `1` and `200`.
func (o EndpointConfigurationProductionVariantServerlessConfigOutput) MaxConcurrency() pulumix.Output[int] {
	return pulumix.Apply[EndpointConfigurationProductionVariantServerlessConfig](o, func(v EndpointConfigurationProductionVariantServerlessConfig) int { return v.MaxConcurrency })
}

// The memory size of your serverless endpoint. Valid values are in 1 GB increments: `1024` MB, `2048` MB, `3072` MB, `4096` MB, `5120` MB, or `6144` MB.
func (o EndpointConfigurationProductionVariantServerlessConfigOutput) MemorySizeInMb() pulumix.Output[int] {
	return pulumix.Apply[EndpointConfigurationProductionVariantServerlessConfig](o, func(v EndpointConfigurationProductionVariantServerlessConfig) int { return v.MemorySizeInMb })
}

// The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to `maxConcurrency`. Valid values are between `1` and `200`.
func (o EndpointConfigurationProductionVariantServerlessConfigOutput) ProvisionedConcurrency() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationProductionVariantServerlessConfig](o, func(v EndpointConfigurationProductionVariantServerlessConfig) *int { return v.ProvisionedConcurrency })
}

type EndpointConfigurationShadowProductionVariant struct {
	// The size of the Elastic Inference (EI) instance to use for the production variant.
	AcceleratorType *string `pulumi:"acceleratorType"`
	// The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see [How Your Container Should Respond to Health Check (Ping) Requests](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-inference-code.html#your-algorithms-inference-algo-ping-requests). Valid values between `60` and `3600`.
	ContainerStartupHealthCheckTimeoutInSeconds *int `pulumi:"containerStartupHealthCheckTimeoutInSeconds"`
	// Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.
	CoreDumpConfig *EndpointConfigurationShadowProductionVariantCoreDumpConfig `pulumi:"coreDumpConfig"`
	// You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.
	EnableSsmAccess *bool `pulumi:"enableSsmAccess"`
	// Initial number of instances used for auto-scaling.
	InitialInstanceCount *int `pulumi:"initialInstanceCount"`
	// Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to `1.0`.
	InitialVariantWeight *float64 `pulumi:"initialVariantWeight"`
	// The type of instance to start.
	InstanceType *string `pulumi:"instanceType"`
	// The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between `60` and `3600`.
	ModelDataDownloadTimeoutInSeconds *int `pulumi:"modelDataDownloadTimeoutInSeconds"`
	// The name of the model to use.
	ModelName string `pulumi:"modelName"`
	// Specifies configuration for how an endpoint performs asynchronous inference.
	ServerlessConfig *EndpointConfigurationShadowProductionVariantServerlessConfig `pulumi:"serverlessConfig"`
	// The name of the variant. If omitted, this provider will assign a random, unique name.
	VariantName *string `pulumi:"variantName"`
	// The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between `1` and `512`.
	VolumeSizeInGb *int `pulumi:"volumeSizeInGb"`
}

type EndpointConfigurationShadowProductionVariantArgs struct {
	// The size of the Elastic Inference (EI) instance to use for the production variant.
	AcceleratorType pulumix.Input[*string] `pulumi:"acceleratorType"`
	// The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see [How Your Container Should Respond to Health Check (Ping) Requests](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-inference-code.html#your-algorithms-inference-algo-ping-requests). Valid values between `60` and `3600`.
	ContainerStartupHealthCheckTimeoutInSeconds pulumix.Input[*int] `pulumi:"containerStartupHealthCheckTimeoutInSeconds"`
	// Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.
	CoreDumpConfig pulumix.Input[*EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs] `pulumi:"coreDumpConfig"`
	// You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.
	EnableSsmAccess pulumix.Input[*bool] `pulumi:"enableSsmAccess"`
	// Initial number of instances used for auto-scaling.
	InitialInstanceCount pulumix.Input[*int] `pulumi:"initialInstanceCount"`
	// Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to `1.0`.
	InitialVariantWeight pulumix.Input[*float64] `pulumi:"initialVariantWeight"`
	// The type of instance to start.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between `60` and `3600`.
	ModelDataDownloadTimeoutInSeconds pulumix.Input[*int] `pulumi:"modelDataDownloadTimeoutInSeconds"`
	// The name of the model to use.
	ModelName pulumix.Input[string] `pulumi:"modelName"`
	// Specifies configuration for how an endpoint performs asynchronous inference.
	ServerlessConfig pulumix.Input[*EndpointConfigurationShadowProductionVariantServerlessConfigArgs] `pulumi:"serverlessConfig"`
	// The name of the variant. If omitted, this provider will assign a random, unique name.
	VariantName pulumix.Input[*string] `pulumi:"variantName"`
	// The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between `1` and `512`.
	VolumeSizeInGb pulumix.Input[*int] `pulumi:"volumeSizeInGb"`
}

func (EndpointConfigurationShadowProductionVariantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationShadowProductionVariant)(nil)).Elem()
}

func (i EndpointConfigurationShadowProductionVariantArgs) ToEndpointConfigurationShadowProductionVariantOutput() EndpointConfigurationShadowProductionVariantOutput {
	return i.ToEndpointConfigurationShadowProductionVariantOutputWithContext(context.Background())
}

func (i EndpointConfigurationShadowProductionVariantArgs) ToEndpointConfigurationShadowProductionVariantOutputWithContext(ctx context.Context) EndpointConfigurationShadowProductionVariantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationShadowProductionVariantOutput)
}

func (i *EndpointConfigurationShadowProductionVariantArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationShadowProductionVariantArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationShadowProductionVariantOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationShadowProductionVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationShadowProductionVariant)(nil)).Elem()
}

func (o EndpointConfigurationShadowProductionVariantOutput) ToEndpointConfigurationShadowProductionVariantOutput() EndpointConfigurationShadowProductionVariantOutput {
	return o
}

func (o EndpointConfigurationShadowProductionVariantOutput) ToEndpointConfigurationShadowProductionVariantOutputWithContext(ctx context.Context) EndpointConfigurationShadowProductionVariantOutput {
	return o
}

func (o EndpointConfigurationShadowProductionVariantOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationShadowProductionVariant] {
	return pulumix.Output[EndpointConfigurationShadowProductionVariant]{
		OutputState: o.OutputState,
	}
}

// The size of the Elastic Inference (EI) instance to use for the production variant.
func (o EndpointConfigurationShadowProductionVariantOutput) AcceleratorType() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *string { return v.AcceleratorType })
}

// The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see [How Your Container Should Respond to Health Check (Ping) Requests](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-inference-code.html#your-algorithms-inference-algo-ping-requests). Valid values between `60` and `3600`.
func (o EndpointConfigurationShadowProductionVariantOutput) ContainerStartupHealthCheckTimeoutInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *int {
		return v.ContainerStartupHealthCheckTimeoutInSeconds
	})
}

// Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.
func (o EndpointConfigurationShadowProductionVariantOutput) CoreDumpConfig() pulumix.GPtrOutput[EndpointConfigurationShadowProductionVariantCoreDumpConfig, EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput] {
	value := pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *EndpointConfigurationShadowProductionVariantCoreDumpConfig {
		return v.CoreDumpConfig
	})
	return pulumix.GPtrOutput[EndpointConfigurationShadowProductionVariantCoreDumpConfig, EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput]{OutputState: value.OutputState}
}

// You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.
func (o EndpointConfigurationShadowProductionVariantOutput) EnableSsmAccess() pulumix.Output[*bool] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *bool { return v.EnableSsmAccess })
}

// Initial number of instances used for auto-scaling.
func (o EndpointConfigurationShadowProductionVariantOutput) InitialInstanceCount() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *int { return v.InitialInstanceCount })
}

// Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to `1.0`.
func (o EndpointConfigurationShadowProductionVariantOutput) InitialVariantWeight() pulumix.Output[*float64] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *float64 { return v.InitialVariantWeight })
}

// The type of instance to start.
func (o EndpointConfigurationShadowProductionVariantOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *string { return v.InstanceType })
}

// The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between `60` and `3600`.
func (o EndpointConfigurationShadowProductionVariantOutput) ModelDataDownloadTimeoutInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *int { return v.ModelDataDownloadTimeoutInSeconds })
}

// The name of the model to use.
func (o EndpointConfigurationShadowProductionVariantOutput) ModelName() pulumix.Output[string] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) string { return v.ModelName })
}

// Specifies configuration for how an endpoint performs asynchronous inference.
func (o EndpointConfigurationShadowProductionVariantOutput) ServerlessConfig() pulumix.GPtrOutput[EndpointConfigurationShadowProductionVariantServerlessConfig, EndpointConfigurationShadowProductionVariantServerlessConfigOutput] {
	value := pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *EndpointConfigurationShadowProductionVariantServerlessConfig {
		return v.ServerlessConfig
	})
	return pulumix.GPtrOutput[EndpointConfigurationShadowProductionVariantServerlessConfig, EndpointConfigurationShadowProductionVariantServerlessConfigOutput]{OutputState: value.OutputState}
}

// The name of the variant. If omitted, this provider will assign a random, unique name.
func (o EndpointConfigurationShadowProductionVariantOutput) VariantName() pulumix.Output[*string] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *string { return v.VariantName })
}

// The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between `1` and `512`.
func (o EndpointConfigurationShadowProductionVariantOutput) VolumeSizeInGb() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariant](o, func(v EndpointConfigurationShadowProductionVariant) *int { return v.VolumeSizeInGb })
}

type EndpointConfigurationShadowProductionVariantCoreDumpConfig struct {
	// The Amazon S3 bucket to send the core dump to.
	DestinationS3Uri string `pulumi:"destinationS3Uri"`
	// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

type EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs struct {
	// The Amazon S3 bucket to send the core dump to.
	DestinationS3Uri pulumix.Input[string] `pulumi:"destinationS3Uri"`
	// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumix.Input[string] `pulumi:"kmsKeyId"`
}

func (EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationShadowProductionVariantCoreDumpConfig)(nil)).Elem()
}

func (i EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs) ToEndpointConfigurationShadowProductionVariantCoreDumpConfigOutput() EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput {
	return i.ToEndpointConfigurationShadowProductionVariantCoreDumpConfigOutputWithContext(context.Background())
}

func (i EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs) ToEndpointConfigurationShadowProductionVariantCoreDumpConfigOutputWithContext(ctx context.Context) EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput)
}

func (i *EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationShadowProductionVariantCoreDumpConfig)(nil)).Elem()
}

func (o EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput) ToEndpointConfigurationShadowProductionVariantCoreDumpConfigOutput() EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput {
	return o
}

func (o EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput) ToEndpointConfigurationShadowProductionVariantCoreDumpConfigOutputWithContext(ctx context.Context) EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput {
	return o
}

func (o EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationShadowProductionVariantCoreDumpConfig] {
	return pulumix.Output[EndpointConfigurationShadowProductionVariantCoreDumpConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 bucket to send the core dump to.
func (o EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput) DestinationS3Uri() pulumix.Output[string] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariantCoreDumpConfig](o, func(v EndpointConfigurationShadowProductionVariantCoreDumpConfig) string { return v.DestinationS3Uri })
}

// The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.
func (o EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput) KmsKeyId() pulumix.Output[string] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariantCoreDumpConfig](o, func(v EndpointConfigurationShadowProductionVariantCoreDumpConfig) string { return v.KmsKeyId })
}

type EndpointConfigurationShadowProductionVariantServerlessConfig struct {
	// The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between `1` and `200`.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// The memory size of your serverless endpoint. Valid values are in 1 GB increments: `1024` MB, `2048` MB, `3072` MB, `4096` MB, `5120` MB, or `6144` MB.
	MemorySizeInMb int `pulumi:"memorySizeInMb"`
	// The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to `maxConcurrency`. Valid values are between `1` and `200`.
	ProvisionedConcurrency *int `pulumi:"provisionedConcurrency"`
}

type EndpointConfigurationShadowProductionVariantServerlessConfigArgs struct {
	// The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between `1` and `200`.
	MaxConcurrency pulumix.Input[int] `pulumi:"maxConcurrency"`
	// The memory size of your serverless endpoint. Valid values are in 1 GB increments: `1024` MB, `2048` MB, `3072` MB, `4096` MB, `5120` MB, or `6144` MB.
	MemorySizeInMb pulumix.Input[int] `pulumi:"memorySizeInMb"`
	// The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to `maxConcurrency`. Valid values are between `1` and `200`.
	ProvisionedConcurrency pulumix.Input[*int] `pulumi:"provisionedConcurrency"`
}

func (EndpointConfigurationShadowProductionVariantServerlessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationShadowProductionVariantServerlessConfig)(nil)).Elem()
}

func (i EndpointConfigurationShadowProductionVariantServerlessConfigArgs) ToEndpointConfigurationShadowProductionVariantServerlessConfigOutput() EndpointConfigurationShadowProductionVariantServerlessConfigOutput {
	return i.ToEndpointConfigurationShadowProductionVariantServerlessConfigOutputWithContext(context.Background())
}

func (i EndpointConfigurationShadowProductionVariantServerlessConfigArgs) ToEndpointConfigurationShadowProductionVariantServerlessConfigOutputWithContext(ctx context.Context) EndpointConfigurationShadowProductionVariantServerlessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationShadowProductionVariantServerlessConfigOutput)
}

func (i *EndpointConfigurationShadowProductionVariantServerlessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointConfigurationShadowProductionVariantServerlessConfigArgs] {
	return pulumix.Val(i)
}

type EndpointConfigurationShadowProductionVariantServerlessConfigOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationShadowProductionVariantServerlessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationShadowProductionVariantServerlessConfig)(nil)).Elem()
}

func (o EndpointConfigurationShadowProductionVariantServerlessConfigOutput) ToEndpointConfigurationShadowProductionVariantServerlessConfigOutput() EndpointConfigurationShadowProductionVariantServerlessConfigOutput {
	return o
}

func (o EndpointConfigurationShadowProductionVariantServerlessConfigOutput) ToEndpointConfigurationShadowProductionVariantServerlessConfigOutputWithContext(ctx context.Context) EndpointConfigurationShadowProductionVariantServerlessConfigOutput {
	return o
}

func (o EndpointConfigurationShadowProductionVariantServerlessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfigurationShadowProductionVariantServerlessConfig] {
	return pulumix.Output[EndpointConfigurationShadowProductionVariantServerlessConfig]{
		OutputState: o.OutputState,
	}
}

// The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between `1` and `200`.
func (o EndpointConfigurationShadowProductionVariantServerlessConfigOutput) MaxConcurrency() pulumix.Output[int] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariantServerlessConfig](o, func(v EndpointConfigurationShadowProductionVariantServerlessConfig) int { return v.MaxConcurrency })
}

// The memory size of your serverless endpoint. Valid values are in 1 GB increments: `1024` MB, `2048` MB, `3072` MB, `4096` MB, `5120` MB, or `6144` MB.
func (o EndpointConfigurationShadowProductionVariantServerlessConfigOutput) MemorySizeInMb() pulumix.Output[int] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariantServerlessConfig](o, func(v EndpointConfigurationShadowProductionVariantServerlessConfig) int { return v.MemorySizeInMb })
}

// The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to `maxConcurrency`. Valid values are between `1` and `200`.
func (o EndpointConfigurationShadowProductionVariantServerlessConfigOutput) ProvisionedConcurrency() pulumix.Output[*int] {
	return pulumix.Apply[EndpointConfigurationShadowProductionVariantServerlessConfig](o, func(v EndpointConfigurationShadowProductionVariantServerlessConfig) *int {
		return v.ProvisionedConcurrency
	})
}

type EndpointDeploymentConfig struct {
	// Automatic rollback configuration for handling endpoint deployment failures and recovery. See Auto Rollback Configuration.
	AutoRollbackConfiguration *EndpointDeploymentConfigAutoRollbackConfiguration `pulumi:"autoRollbackConfiguration"`
	// Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default. See Blue Green Update Config.
	BlueGreenUpdatePolicy *EndpointDeploymentConfigBlueGreenUpdatePolicy `pulumi:"blueGreenUpdatePolicy"`
	// Specifies a rolling deployment strategy for updating a SageMaker endpoint. See Rolling Update Policy.
	RollingUpdatePolicy *EndpointDeploymentConfigRollingUpdatePolicy `pulumi:"rollingUpdatePolicy"`
}

type EndpointDeploymentConfigArgs struct {
	// Automatic rollback configuration for handling endpoint deployment failures and recovery. See Auto Rollback Configuration.
	AutoRollbackConfiguration pulumix.Input[*EndpointDeploymentConfigAutoRollbackConfigurationArgs] `pulumi:"autoRollbackConfiguration"`
	// Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default. See Blue Green Update Config.
	BlueGreenUpdatePolicy pulumix.Input[*EndpointDeploymentConfigBlueGreenUpdatePolicyArgs] `pulumi:"blueGreenUpdatePolicy"`
	// Specifies a rolling deployment strategy for updating a SageMaker endpoint. See Rolling Update Policy.
	RollingUpdatePolicy pulumix.Input[*EndpointDeploymentConfigRollingUpdatePolicyArgs] `pulumi:"rollingUpdatePolicy"`
}

func (EndpointDeploymentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfig)(nil)).Elem()
}

func (i EndpointDeploymentConfigArgs) ToEndpointDeploymentConfigOutput() EndpointDeploymentConfigOutput {
	return i.ToEndpointDeploymentConfigOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigArgs) ToEndpointDeploymentConfigOutputWithContext(ctx context.Context) EndpointDeploymentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigOutput)
}

func (i *EndpointDeploymentConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfig)(nil)).Elem()
}

func (o EndpointDeploymentConfigOutput) ToEndpointDeploymentConfigOutput() EndpointDeploymentConfigOutput {
	return o
}

func (o EndpointDeploymentConfigOutput) ToEndpointDeploymentConfigOutputWithContext(ctx context.Context) EndpointDeploymentConfigOutput {
	return o
}

func (o EndpointDeploymentConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfig] {
	return pulumix.Output[EndpointDeploymentConfig]{
		OutputState: o.OutputState,
	}
}

// Automatic rollback configuration for handling endpoint deployment failures and recovery. See Auto Rollback Configuration.
func (o EndpointDeploymentConfigOutput) AutoRollbackConfiguration() pulumix.GPtrOutput[EndpointDeploymentConfigAutoRollbackConfiguration, EndpointDeploymentConfigAutoRollbackConfigurationOutput] {
	value := pulumix.Apply[EndpointDeploymentConfig](o, func(v EndpointDeploymentConfig) *EndpointDeploymentConfigAutoRollbackConfiguration {
		return v.AutoRollbackConfiguration
	})
	return pulumix.GPtrOutput[EndpointDeploymentConfigAutoRollbackConfiguration, EndpointDeploymentConfigAutoRollbackConfigurationOutput]{OutputState: value.OutputState}
}

// Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default. See Blue Green Update Config.
func (o EndpointDeploymentConfigOutput) BlueGreenUpdatePolicy() pulumix.GPtrOutput[EndpointDeploymentConfigBlueGreenUpdatePolicy, EndpointDeploymentConfigBlueGreenUpdatePolicyOutput] {
	value := pulumix.Apply[EndpointDeploymentConfig](o, func(v EndpointDeploymentConfig) *EndpointDeploymentConfigBlueGreenUpdatePolicy {
		return v.BlueGreenUpdatePolicy
	})
	return pulumix.GPtrOutput[EndpointDeploymentConfigBlueGreenUpdatePolicy, EndpointDeploymentConfigBlueGreenUpdatePolicyOutput]{OutputState: value.OutputState}
}

// Specifies a rolling deployment strategy for updating a SageMaker endpoint. See Rolling Update Policy.
func (o EndpointDeploymentConfigOutput) RollingUpdatePolicy() pulumix.GPtrOutput[EndpointDeploymentConfigRollingUpdatePolicy, EndpointDeploymentConfigRollingUpdatePolicyOutput] {
	value := pulumix.Apply[EndpointDeploymentConfig](o, func(v EndpointDeploymentConfig) *EndpointDeploymentConfigRollingUpdatePolicy {
		return v.RollingUpdatePolicy
	})
	return pulumix.GPtrOutput[EndpointDeploymentConfigRollingUpdatePolicy, EndpointDeploymentConfigRollingUpdatePolicyOutput]{OutputState: value.OutputState}
}

type EndpointDeploymentConfigAutoRollbackConfiguration struct {
	// List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment. See Alarms.
	Alarms []EndpointDeploymentConfigAutoRollbackConfigurationAlarm `pulumi:"alarms"`
}

type EndpointDeploymentConfigAutoRollbackConfigurationArgs struct {
	// List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment. See Alarms.
	Alarms pulumix.Input[[]*EndpointDeploymentConfigAutoRollbackConfigurationAlarmArgs] `pulumi:"alarms"`
}

func (EndpointDeploymentConfigAutoRollbackConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigAutoRollbackConfiguration)(nil)).Elem()
}

func (i EndpointDeploymentConfigAutoRollbackConfigurationArgs) ToEndpointDeploymentConfigAutoRollbackConfigurationOutput() EndpointDeploymentConfigAutoRollbackConfigurationOutput {
	return i.ToEndpointDeploymentConfigAutoRollbackConfigurationOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigAutoRollbackConfigurationArgs) ToEndpointDeploymentConfigAutoRollbackConfigurationOutputWithContext(ctx context.Context) EndpointDeploymentConfigAutoRollbackConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigAutoRollbackConfigurationOutput)
}

func (i *EndpointDeploymentConfigAutoRollbackConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigAutoRollbackConfigurationArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigAutoRollbackConfigurationOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigAutoRollbackConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigAutoRollbackConfiguration)(nil)).Elem()
}

func (o EndpointDeploymentConfigAutoRollbackConfigurationOutput) ToEndpointDeploymentConfigAutoRollbackConfigurationOutput() EndpointDeploymentConfigAutoRollbackConfigurationOutput {
	return o
}

func (o EndpointDeploymentConfigAutoRollbackConfigurationOutput) ToEndpointDeploymentConfigAutoRollbackConfigurationOutputWithContext(ctx context.Context) EndpointDeploymentConfigAutoRollbackConfigurationOutput {
	return o
}

func (o EndpointDeploymentConfigAutoRollbackConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfigAutoRollbackConfiguration] {
	return pulumix.Output[EndpointDeploymentConfigAutoRollbackConfiguration]{
		OutputState: o.OutputState,
	}
}

// List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment. See Alarms.
func (o EndpointDeploymentConfigAutoRollbackConfigurationOutput) Alarms() pulumix.GArrayOutput[EndpointDeploymentConfigAutoRollbackConfigurationAlarm, EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput] {
	value := pulumix.Apply[EndpointDeploymentConfigAutoRollbackConfiguration](o, func(v EndpointDeploymentConfigAutoRollbackConfiguration) []EndpointDeploymentConfigAutoRollbackConfigurationAlarm {
		return v.Alarms
	})
	return pulumix.GArrayOutput[EndpointDeploymentConfigAutoRollbackConfigurationAlarm, EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput]{OutputState: value.OutputState}
}

type EndpointDeploymentConfigAutoRollbackConfigurationAlarm struct {
	// The name of a CloudWatch alarm in your account.
	AlarmName string `pulumi:"alarmName"`
}

type EndpointDeploymentConfigAutoRollbackConfigurationAlarmArgs struct {
	// The name of a CloudWatch alarm in your account.
	AlarmName pulumix.Input[string] `pulumi:"alarmName"`
}

func (EndpointDeploymentConfigAutoRollbackConfigurationAlarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigAutoRollbackConfigurationAlarm)(nil)).Elem()
}

func (i EndpointDeploymentConfigAutoRollbackConfigurationAlarmArgs) ToEndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput() EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput {
	return i.ToEndpointDeploymentConfigAutoRollbackConfigurationAlarmOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigAutoRollbackConfigurationAlarmArgs) ToEndpointDeploymentConfigAutoRollbackConfigurationAlarmOutputWithContext(ctx context.Context) EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput)
}

func (i *EndpointDeploymentConfigAutoRollbackConfigurationAlarmArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigAutoRollbackConfigurationAlarmArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigAutoRollbackConfigurationAlarm)(nil)).Elem()
}

func (o EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput) ToEndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput() EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput {
	return o
}

func (o EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput) ToEndpointDeploymentConfigAutoRollbackConfigurationAlarmOutputWithContext(ctx context.Context) EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput {
	return o
}

func (o EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfigAutoRollbackConfigurationAlarm] {
	return pulumix.Output[EndpointDeploymentConfigAutoRollbackConfigurationAlarm]{
		OutputState: o.OutputState,
	}
}

// The name of a CloudWatch alarm in your account.
func (o EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput) AlarmName() pulumix.Output[string] {
	return pulumix.Apply[EndpointDeploymentConfigAutoRollbackConfigurationAlarm](o, func(v EndpointDeploymentConfigAutoRollbackConfigurationAlarm) string { return v.AlarmName })
}

type EndpointDeploymentConfigBlueGreenUpdatePolicy struct {
	// Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in `terminationWaitInSeconds` and `waitIntervalInSeconds`. Valid values are between `600` and `14400`.
	MaximumExecutionTimeoutInSeconds *int `pulumi:"maximumExecutionTimeoutInSeconds"`
	// Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is `0`. Valid values are between `0` and `3600`.
	TerminationWaitInSeconds *int `pulumi:"terminationWaitInSeconds"`
	// Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment. See Traffic Routing Configuration.
	TrafficRoutingConfiguration EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration `pulumi:"trafficRoutingConfiguration"`
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyArgs struct {
	// Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in `terminationWaitInSeconds` and `waitIntervalInSeconds`. Valid values are between `600` and `14400`.
	MaximumExecutionTimeoutInSeconds pulumix.Input[*int] `pulumi:"maximumExecutionTimeoutInSeconds"`
	// Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is `0`. Valid values are between `0` and `3600`.
	TerminationWaitInSeconds pulumix.Input[*int] `pulumi:"terminationWaitInSeconds"`
	// Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment. See Traffic Routing Configuration.
	TrafficRoutingConfiguration pulumix.Input[*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs] `pulumi:"trafficRoutingConfiguration"`
}

func (EndpointDeploymentConfigBlueGreenUpdatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigBlueGreenUpdatePolicy)(nil)).Elem()
}

func (i EndpointDeploymentConfigBlueGreenUpdatePolicyArgs) ToEndpointDeploymentConfigBlueGreenUpdatePolicyOutput() EndpointDeploymentConfigBlueGreenUpdatePolicyOutput {
	return i.ToEndpointDeploymentConfigBlueGreenUpdatePolicyOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigBlueGreenUpdatePolicyArgs) ToEndpointDeploymentConfigBlueGreenUpdatePolicyOutputWithContext(ctx context.Context) EndpointDeploymentConfigBlueGreenUpdatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigBlueGreenUpdatePolicyOutput)
}

func (i *EndpointDeploymentConfigBlueGreenUpdatePolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigBlueGreenUpdatePolicyArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigBlueGreenUpdatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigBlueGreenUpdatePolicy)(nil)).Elem()
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyOutput) ToEndpointDeploymentConfigBlueGreenUpdatePolicyOutput() EndpointDeploymentConfigBlueGreenUpdatePolicyOutput {
	return o
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyOutput) ToEndpointDeploymentConfigBlueGreenUpdatePolicyOutputWithContext(ctx context.Context) EndpointDeploymentConfigBlueGreenUpdatePolicyOutput {
	return o
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfigBlueGreenUpdatePolicy] {
	return pulumix.Output[EndpointDeploymentConfigBlueGreenUpdatePolicy]{
		OutputState: o.OutputState,
	}
}

// Maximum execution timeout for the deployment. Note that the timeout value should be larger than the total waiting time specified in `terminationWaitInSeconds` and `waitIntervalInSeconds`. Valid values are between `600` and `14400`.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyOutput) MaximumExecutionTimeoutInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicy](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicy) *int { return v.MaximumExecutionTimeoutInSeconds })
}

// Additional waiting time in seconds after the completion of an endpoint deployment before terminating the old endpoint fleet. Default is `0`. Valid values are between `0` and `3600`.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyOutput) TerminationWaitInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicy](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicy) *int { return v.TerminationWaitInSeconds })
}

// Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment. See Traffic Routing Configuration.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyOutput) TrafficRoutingConfiguration() pulumix.GPtrOutput[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration, EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput] {
	value := pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicy](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicy) EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration {
		return v.TrafficRoutingConfiguration
	})
	return pulumix.GPtrOutput[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration, EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput]{OutputState: value.OutputState}
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration struct {
	// Batch size for the first step to turn on traffic on the new endpoint fleet. Value must be less than or equal to 50% of the variant's total instance count. See Canary Size.
	CanarySize *EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize `pulumi:"canarySize"`
	// Batch size for each step to turn on traffic on the new endpoint fleet. Value must be 10-50% of the variant's total instance count. See Linear Step Size.
	LinearStepSize *EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize `pulumi:"linearStepSize"`
	// Traffic routing strategy type. Valid values are: `ALL_AT_ONCE`, `CANARY`, and `LINEAR`.
	Type string `pulumi:"type"`
	// The waiting time (in seconds) between incremental steps to turn on traffic on the new endpoint fleet. Valid values are between `0` and `3600`.
	WaitIntervalInSeconds int `pulumi:"waitIntervalInSeconds"`
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs struct {
	// Batch size for the first step to turn on traffic on the new endpoint fleet. Value must be less than or equal to 50% of the variant's total instance count. See Canary Size.
	CanarySize pulumix.Input[*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeArgs] `pulumi:"canarySize"`
	// Batch size for each step to turn on traffic on the new endpoint fleet. Value must be 10-50% of the variant's total instance count. See Linear Step Size.
	LinearStepSize pulumix.Input[*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeArgs] `pulumi:"linearStepSize"`
	// Traffic routing strategy type. Valid values are: `ALL_AT_ONCE`, `CANARY`, and `LINEAR`.
	Type pulumix.Input[string] `pulumi:"type"`
	// The waiting time (in seconds) between incremental steps to turn on traffic on the new endpoint fleet. Valid values are between `0` and `3600`.
	WaitIntervalInSeconds pulumix.Input[int] `pulumi:"waitIntervalInSeconds"`
}

func (EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration)(nil)).Elem()
}

func (i EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput() EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput {
	return i.ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutputWithContext(ctx context.Context) EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput)
}

func (i *EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration)(nil)).Elem()
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput() EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput {
	return o
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutputWithContext(ctx context.Context) EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput {
	return o
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration] {
	return pulumix.Output[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Batch size for the first step to turn on traffic on the new endpoint fleet. Value must be less than or equal to 50% of the variant's total instance count. See Canary Size.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput) CanarySize() pulumix.GPtrOutput[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize, EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput] {
	value := pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration) *EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize {
		return v.CanarySize
	})
	return pulumix.GPtrOutput[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize, EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput]{OutputState: value.OutputState}
}

// Batch size for each step to turn on traffic on the new endpoint fleet. Value must be 10-50% of the variant's total instance count. See Linear Step Size.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput) LinearStepSize() pulumix.GPtrOutput[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize, EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput] {
	value := pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration) *EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize {
		return v.LinearStepSize
	})
	return pulumix.GPtrOutput[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize, EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput]{OutputState: value.OutputState}
}

// Traffic routing strategy type. Valid values are: `ALL_AT_ONCE`, `CANARY`, and `LINEAR`.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration) string { return v.Type })
}

// The waiting time (in seconds) between incremental steps to turn on traffic on the new endpoint fleet. Valid values are between `0` and `3600`.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput) WaitIntervalInSeconds() pulumix.Output[int] {
	return pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfiguration) int {
		return v.WaitIntervalInSeconds
	})
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize struct {
	// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
	Type string `pulumi:"type"`
	// Defines the capacity size, either as a number of instances or a capacity percentage.
	Value int `pulumi:"value"`
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeArgs struct {
	// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
	Type pulumix.Input[string] `pulumi:"type"`
	// Defines the capacity size, either as a number of instances or a capacity percentage.
	Value pulumix.Input[int] `pulumi:"value"`
}

func (EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize)(nil)).Elem()
}

func (i EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeArgs) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput() EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput {
	return i.ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeArgs) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutputWithContext(ctx context.Context) EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput)
}

func (i *EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize)(nil)).Elem()
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput() EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput {
	return o
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutputWithContext(ctx context.Context) EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput {
	return o
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize] {
	return pulumix.Output[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize]{
		OutputState: o.OutputState,
	}
}

// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize) string {
		return v.Type
	})
}

// Defines the capacity size, either as a number of instances or a capacity percentage.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput) Value() pulumix.Output[int] {
	return pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySize) int {
		return v.Value
	})
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize struct {
	// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
	Type string `pulumi:"type"`
	// Defines the capacity size, either as a number of instances or a capacity percentage.
	Value int `pulumi:"value"`
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeArgs struct {
	// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
	Type pulumix.Input[string] `pulumi:"type"`
	// Defines the capacity size, either as a number of instances or a capacity percentage.
	Value pulumix.Input[int] `pulumi:"value"`
}

func (EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize)(nil)).Elem()
}

func (i EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeArgs) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput() EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput {
	return i.ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeArgs) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutputWithContext(ctx context.Context) EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput)
}

func (i *EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize)(nil)).Elem()
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput() EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput {
	return o
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput) ToEndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutputWithContext(ctx context.Context) EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput {
	return o
}

func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize] {
	return pulumix.Output[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize]{
		OutputState: o.OutputState,
	}
}

// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize) string {
		return v.Type
	})
}

// Defines the capacity size, either as a number of instances or a capacity percentage.
func (o EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput) Value() pulumix.Output[int] {
	return pulumix.Apply[EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize](o, func(v EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSize) int {
		return v.Value
	})
}

type EndpointDeploymentConfigRollingUpdatePolicy struct {
	// Batch size for each rolling step to provision capacity and turn on traffic on the new endpoint fleet, and terminate capacity on the old endpoint fleet. Value must be between 5% to 50% of the variant's total instance count. See Maximum Batch Size.
	MaximumBatchSize EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize `pulumi:"maximumBatchSize"`
	// The time limit for the total deployment. Exceeding this limit causes a timeout. Valid values are between `600` and `14400`.
	MaximumExecutionTimeoutInSeconds *int `pulumi:"maximumExecutionTimeoutInSeconds"`
	// Batch size for rollback to the old endpoint fleet. Each rolling step to provision capacity and turn on traffic on the old endpoint fleet, and terminate capacity on the new endpoint fleet. If this field is absent, the default value will be set to 100% of total capacity which means to bring up the whole capacity of the old fleet at once during rollback. See Rollback Maximum Batch Size.
	RollbackMaximumBatchSize *EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize `pulumi:"rollbackMaximumBatchSize"`
	// The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet. Valid values are between `0` and `3600`.
	WaitIntervalInSeconds int `pulumi:"waitIntervalInSeconds"`
}

type EndpointDeploymentConfigRollingUpdatePolicyArgs struct {
	// Batch size for each rolling step to provision capacity and turn on traffic on the new endpoint fleet, and terminate capacity on the old endpoint fleet. Value must be between 5% to 50% of the variant's total instance count. See Maximum Batch Size.
	MaximumBatchSize pulumix.Input[*EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeArgs] `pulumi:"maximumBatchSize"`
	// The time limit for the total deployment. Exceeding this limit causes a timeout. Valid values are between `600` and `14400`.
	MaximumExecutionTimeoutInSeconds pulumix.Input[*int] `pulumi:"maximumExecutionTimeoutInSeconds"`
	// Batch size for rollback to the old endpoint fleet. Each rolling step to provision capacity and turn on traffic on the old endpoint fleet, and terminate capacity on the new endpoint fleet. If this field is absent, the default value will be set to 100% of total capacity which means to bring up the whole capacity of the old fleet at once during rollback. See Rollback Maximum Batch Size.
	RollbackMaximumBatchSize pulumix.Input[*EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs] `pulumi:"rollbackMaximumBatchSize"`
	// The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet. Valid values are between `0` and `3600`.
	WaitIntervalInSeconds pulumix.Input[int] `pulumi:"waitIntervalInSeconds"`
}

func (EndpointDeploymentConfigRollingUpdatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigRollingUpdatePolicy)(nil)).Elem()
}

func (i EndpointDeploymentConfigRollingUpdatePolicyArgs) ToEndpointDeploymentConfigRollingUpdatePolicyOutput() EndpointDeploymentConfigRollingUpdatePolicyOutput {
	return i.ToEndpointDeploymentConfigRollingUpdatePolicyOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigRollingUpdatePolicyArgs) ToEndpointDeploymentConfigRollingUpdatePolicyOutputWithContext(ctx context.Context) EndpointDeploymentConfigRollingUpdatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigRollingUpdatePolicyOutput)
}

func (i *EndpointDeploymentConfigRollingUpdatePolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigRollingUpdatePolicyArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigRollingUpdatePolicyOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigRollingUpdatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigRollingUpdatePolicy)(nil)).Elem()
}

func (o EndpointDeploymentConfigRollingUpdatePolicyOutput) ToEndpointDeploymentConfigRollingUpdatePolicyOutput() EndpointDeploymentConfigRollingUpdatePolicyOutput {
	return o
}

func (o EndpointDeploymentConfigRollingUpdatePolicyOutput) ToEndpointDeploymentConfigRollingUpdatePolicyOutputWithContext(ctx context.Context) EndpointDeploymentConfigRollingUpdatePolicyOutput {
	return o
}

func (o EndpointDeploymentConfigRollingUpdatePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfigRollingUpdatePolicy] {
	return pulumix.Output[EndpointDeploymentConfigRollingUpdatePolicy]{
		OutputState: o.OutputState,
	}
}

// Batch size for each rolling step to provision capacity and turn on traffic on the new endpoint fleet, and terminate capacity on the old endpoint fleet. Value must be between 5% to 50% of the variant's total instance count. See Maximum Batch Size.
func (o EndpointDeploymentConfigRollingUpdatePolicyOutput) MaximumBatchSize() pulumix.GPtrOutput[EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize, EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput] {
	value := pulumix.Apply[EndpointDeploymentConfigRollingUpdatePolicy](o, func(v EndpointDeploymentConfigRollingUpdatePolicy) EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize {
		return v.MaximumBatchSize
	})
	return pulumix.GPtrOutput[EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize, EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput]{OutputState: value.OutputState}
}

// The time limit for the total deployment. Exceeding this limit causes a timeout. Valid values are between `600` and `14400`.
func (o EndpointDeploymentConfigRollingUpdatePolicyOutput) MaximumExecutionTimeoutInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[EndpointDeploymentConfigRollingUpdatePolicy](o, func(v EndpointDeploymentConfigRollingUpdatePolicy) *int { return v.MaximumExecutionTimeoutInSeconds })
}

// Batch size for rollback to the old endpoint fleet. Each rolling step to provision capacity and turn on traffic on the old endpoint fleet, and terminate capacity on the new endpoint fleet. If this field is absent, the default value will be set to 100% of total capacity which means to bring up the whole capacity of the old fleet at once during rollback. See Rollback Maximum Batch Size.
func (o EndpointDeploymentConfigRollingUpdatePolicyOutput) RollbackMaximumBatchSize() pulumix.GPtrOutput[EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize, EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput] {
	value := pulumix.Apply[EndpointDeploymentConfigRollingUpdatePolicy](o, func(v EndpointDeploymentConfigRollingUpdatePolicy) *EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize {
		return v.RollbackMaximumBatchSize
	})
	return pulumix.GPtrOutput[EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize, EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput]{OutputState: value.OutputState}
}

// The length of the baking period, during which SageMaker monitors alarms for each batch on the new fleet. Valid values are between `0` and `3600`.
func (o EndpointDeploymentConfigRollingUpdatePolicyOutput) WaitIntervalInSeconds() pulumix.Output[int] {
	return pulumix.Apply[EndpointDeploymentConfigRollingUpdatePolicy](o, func(v EndpointDeploymentConfigRollingUpdatePolicy) int { return v.WaitIntervalInSeconds })
}

type EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize struct {
	// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
	Type string `pulumi:"type"`
	// Defines the capacity size, either as a number of instances or a capacity percentage.
	Value int `pulumi:"value"`
}

type EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeArgs struct {
	// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
	Type pulumix.Input[string] `pulumi:"type"`
	// Defines the capacity size, either as a number of instances or a capacity percentage.
	Value pulumix.Input[int] `pulumi:"value"`
}

func (EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize)(nil)).Elem()
}

func (i EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeArgs) ToEndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput() EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput {
	return i.ToEndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeArgs) ToEndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutputWithContext(ctx context.Context) EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput)
}

func (i *EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize)(nil)).Elem()
}

func (o EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput) ToEndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput() EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput {
	return o
}

func (o EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput) ToEndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutputWithContext(ctx context.Context) EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput {
	return o
}

func (o EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize] {
	return pulumix.Output[EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize]{
		OutputState: o.OutputState,
	}
}

// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
func (o EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize](o, func(v EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize) string { return v.Type })
}

// Defines the capacity size, either as a number of instances or a capacity percentage.
func (o EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput) Value() pulumix.Output[int] {
	return pulumix.Apply[EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize](o, func(v EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSize) int { return v.Value })
}

type EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize struct {
	// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
	Type string `pulumi:"type"`
	// Defines the capacity size, either as a number of instances or a capacity percentage.
	Value int `pulumi:"value"`
}

type EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs struct {
	// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
	Type pulumix.Input[string] `pulumi:"type"`
	// Defines the capacity size, either as a number of instances or a capacity percentage.
	Value pulumix.Input[int] `pulumi:"value"`
}

func (EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize)(nil)).Elem()
}

func (i EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs) ToEndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput() EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput {
	return i.ToEndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutputWithContext(context.Background())
}

func (i EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs) ToEndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutputWithContext(ctx context.Context) EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput)
}

func (i *EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs) ToOutput(ctx context.Context) pulumix.Output[*EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeArgs] {
	return pulumix.Val(i)
}

type EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput struct{ *pulumi.OutputState }

func (EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize)(nil)).Elem()
}

func (o EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput) ToEndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput() EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput {
	return o
}

func (o EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput) ToEndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutputWithContext(ctx context.Context) EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput {
	return o
}

func (o EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize] {
	return pulumix.Output[EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize]{
		OutputState: o.OutputState,
	}
}

// Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.
func (o EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize](o, func(v EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize) string { return v.Type })
}

// Defines the capacity size, either as a number of instances or a capacity percentage.
func (o EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput) Value() pulumix.Output[int] {
	return pulumix.Apply[EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize](o, func(v EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSize) int { return v.Value })
}

type FeatureGroupFeatureDefinition struct {
	// The name of a feature. `featureName` cannot be any of the following: `isDeleted`, `writeTime`, `apiInvocationTime`.
	FeatureName *string `pulumi:"featureName"`
	// The value type of a feature. Valid values are `Integral`, `Fractional`, or `String`.
	FeatureType *string `pulumi:"featureType"`
}

type FeatureGroupFeatureDefinitionArgs struct {
	// The name of a feature. `featureName` cannot be any of the following: `isDeleted`, `writeTime`, `apiInvocationTime`.
	FeatureName pulumix.Input[*string] `pulumi:"featureName"`
	// The value type of a feature. Valid values are `Integral`, `Fractional`, or `String`.
	FeatureType pulumix.Input[*string] `pulumi:"featureType"`
}

func (FeatureGroupFeatureDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupFeatureDefinition)(nil)).Elem()
}

func (i FeatureGroupFeatureDefinitionArgs) ToFeatureGroupFeatureDefinitionOutput() FeatureGroupFeatureDefinitionOutput {
	return i.ToFeatureGroupFeatureDefinitionOutputWithContext(context.Background())
}

func (i FeatureGroupFeatureDefinitionArgs) ToFeatureGroupFeatureDefinitionOutputWithContext(ctx context.Context) FeatureGroupFeatureDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupFeatureDefinitionOutput)
}

func (i *FeatureGroupFeatureDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupFeatureDefinitionArgs] {
	return pulumix.Val(i)
}

type FeatureGroupFeatureDefinitionOutput struct{ *pulumi.OutputState }

func (FeatureGroupFeatureDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupFeatureDefinition)(nil)).Elem()
}

func (o FeatureGroupFeatureDefinitionOutput) ToFeatureGroupFeatureDefinitionOutput() FeatureGroupFeatureDefinitionOutput {
	return o
}

func (o FeatureGroupFeatureDefinitionOutput) ToFeatureGroupFeatureDefinitionOutputWithContext(ctx context.Context) FeatureGroupFeatureDefinitionOutput {
	return o
}

func (o FeatureGroupFeatureDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupFeatureDefinition] {
	return pulumix.Output[FeatureGroupFeatureDefinition]{
		OutputState: o.OutputState,
	}
}

// The name of a feature. `featureName` cannot be any of the following: `isDeleted`, `writeTime`, `apiInvocationTime`.
func (o FeatureGroupFeatureDefinitionOutput) FeatureName() pulumix.Output[*string] {
	return pulumix.Apply[FeatureGroupFeatureDefinition](o, func(v FeatureGroupFeatureDefinition) *string { return v.FeatureName })
}

// The value type of a feature. Valid values are `Integral`, `Fractional`, or `String`.
func (o FeatureGroupFeatureDefinitionOutput) FeatureType() pulumix.Output[*string] {
	return pulumix.Apply[FeatureGroupFeatureDefinition](o, func(v FeatureGroupFeatureDefinition) *string { return v.FeatureType })
}

type FeatureGroupOfflineStoreConfig struct {
	// The meta data of the Glue table that is autogenerated when an OfflineStore is created. See Data Catalog Config Below.
	DataCatalogConfig *FeatureGroupOfflineStoreConfigDataCatalogConfig `pulumi:"dataCatalogConfig"`
	// Set to `true` to turn Online Store On.
	DisableGlueTableCreation *bool `pulumi:"disableGlueTableCreation"`
	// The Amazon Simple Storage (Amazon S3) location of OfflineStore. See S3 Storage Config Below.
	S3StorageConfig FeatureGroupOfflineStoreConfigS3StorageConfig `pulumi:"s3StorageConfig"`
	// Format for the offline store table. Supported formats are `Glue` (Default) and Apache `Iceberg` (https://iceberg.apache.org/).
	TableFormat *string `pulumi:"tableFormat"`
}

type FeatureGroupOfflineStoreConfigArgs struct {
	// The meta data of the Glue table that is autogenerated when an OfflineStore is created. See Data Catalog Config Below.
	DataCatalogConfig pulumix.Input[*FeatureGroupOfflineStoreConfigDataCatalogConfigArgs] `pulumi:"dataCatalogConfig"`
	// Set to `true` to turn Online Store On.
	DisableGlueTableCreation pulumix.Input[*bool] `pulumi:"disableGlueTableCreation"`
	// The Amazon Simple Storage (Amazon S3) location of OfflineStore. See S3 Storage Config Below.
	S3StorageConfig pulumix.Input[*FeatureGroupOfflineStoreConfigS3StorageConfigArgs] `pulumi:"s3StorageConfig"`
	// Format for the offline store table. Supported formats are `Glue` (Default) and Apache `Iceberg` (https://iceberg.apache.org/).
	TableFormat pulumix.Input[*string] `pulumi:"tableFormat"`
}

func (FeatureGroupOfflineStoreConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOfflineStoreConfig)(nil)).Elem()
}

func (i FeatureGroupOfflineStoreConfigArgs) ToFeatureGroupOfflineStoreConfigOutput() FeatureGroupOfflineStoreConfigOutput {
	return i.ToFeatureGroupOfflineStoreConfigOutputWithContext(context.Background())
}

func (i FeatureGroupOfflineStoreConfigArgs) ToFeatureGroupOfflineStoreConfigOutputWithContext(ctx context.Context) FeatureGroupOfflineStoreConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupOfflineStoreConfigOutput)
}

func (i *FeatureGroupOfflineStoreConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupOfflineStoreConfigArgs] {
	return pulumix.Val(i)
}

type FeatureGroupOfflineStoreConfigOutput struct{ *pulumi.OutputState }

func (FeatureGroupOfflineStoreConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOfflineStoreConfig)(nil)).Elem()
}

func (o FeatureGroupOfflineStoreConfigOutput) ToFeatureGroupOfflineStoreConfigOutput() FeatureGroupOfflineStoreConfigOutput {
	return o
}

func (o FeatureGroupOfflineStoreConfigOutput) ToFeatureGroupOfflineStoreConfigOutputWithContext(ctx context.Context) FeatureGroupOfflineStoreConfigOutput {
	return o
}

func (o FeatureGroupOfflineStoreConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupOfflineStoreConfig] {
	return pulumix.Output[FeatureGroupOfflineStoreConfig]{
		OutputState: o.OutputState,
	}
}

// The meta data of the Glue table that is autogenerated when an OfflineStore is created. See Data Catalog Config Below.
func (o FeatureGroupOfflineStoreConfigOutput) DataCatalogConfig() pulumix.GPtrOutput[FeatureGroupOfflineStoreConfigDataCatalogConfig, FeatureGroupOfflineStoreConfigDataCatalogConfigOutput] {
	value := pulumix.Apply[FeatureGroupOfflineStoreConfig](o, func(v FeatureGroupOfflineStoreConfig) *FeatureGroupOfflineStoreConfigDataCatalogConfig {
		return v.DataCatalogConfig
	})
	return pulumix.GPtrOutput[FeatureGroupOfflineStoreConfigDataCatalogConfig, FeatureGroupOfflineStoreConfigDataCatalogConfigOutput]{OutputState: value.OutputState}
}

// Set to `true` to turn Online Store On.
func (o FeatureGroupOfflineStoreConfigOutput) DisableGlueTableCreation() pulumix.Output[*bool] {
	return pulumix.Apply[FeatureGroupOfflineStoreConfig](o, func(v FeatureGroupOfflineStoreConfig) *bool { return v.DisableGlueTableCreation })
}

// The Amazon Simple Storage (Amazon S3) location of OfflineStore. See S3 Storage Config Below.
func (o FeatureGroupOfflineStoreConfigOutput) S3StorageConfig() pulumix.GPtrOutput[FeatureGroupOfflineStoreConfigS3StorageConfig, FeatureGroupOfflineStoreConfigS3StorageConfigOutput] {
	value := pulumix.Apply[FeatureGroupOfflineStoreConfig](o, func(v FeatureGroupOfflineStoreConfig) FeatureGroupOfflineStoreConfigS3StorageConfig {
		return v.S3StorageConfig
	})
	return pulumix.GPtrOutput[FeatureGroupOfflineStoreConfigS3StorageConfig, FeatureGroupOfflineStoreConfigS3StorageConfigOutput]{OutputState: value.OutputState}
}

// Format for the offline store table. Supported formats are `Glue` (Default) and Apache `Iceberg` (https://iceberg.apache.org/).
func (o FeatureGroupOfflineStoreConfigOutput) TableFormat() pulumix.Output[*string] {
	return pulumix.Apply[FeatureGroupOfflineStoreConfig](o, func(v FeatureGroupOfflineStoreConfig) *string { return v.TableFormat })
}

type FeatureGroupOfflineStoreConfigDataCatalogConfig struct {
	// The name of the Glue table catalog.
	Catalog *string `pulumi:"catalog"`
	// The name of the Glue table database.
	Database *string `pulumi:"database"`
	// The name of the Glue table.
	TableName *string `pulumi:"tableName"`
}

type FeatureGroupOfflineStoreConfigDataCatalogConfigArgs struct {
	// The name of the Glue table catalog.
	Catalog pulumix.Input[*string] `pulumi:"catalog"`
	// The name of the Glue table database.
	Database pulumix.Input[*string] `pulumi:"database"`
	// The name of the Glue table.
	TableName pulumix.Input[*string] `pulumi:"tableName"`
}

func (FeatureGroupOfflineStoreConfigDataCatalogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOfflineStoreConfigDataCatalogConfig)(nil)).Elem()
}

func (i FeatureGroupOfflineStoreConfigDataCatalogConfigArgs) ToFeatureGroupOfflineStoreConfigDataCatalogConfigOutput() FeatureGroupOfflineStoreConfigDataCatalogConfigOutput {
	return i.ToFeatureGroupOfflineStoreConfigDataCatalogConfigOutputWithContext(context.Background())
}

func (i FeatureGroupOfflineStoreConfigDataCatalogConfigArgs) ToFeatureGroupOfflineStoreConfigDataCatalogConfigOutputWithContext(ctx context.Context) FeatureGroupOfflineStoreConfigDataCatalogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupOfflineStoreConfigDataCatalogConfigOutput)
}

func (i *FeatureGroupOfflineStoreConfigDataCatalogConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupOfflineStoreConfigDataCatalogConfigArgs] {
	return pulumix.Val(i)
}

type FeatureGroupOfflineStoreConfigDataCatalogConfigOutput struct{ *pulumi.OutputState }

func (FeatureGroupOfflineStoreConfigDataCatalogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOfflineStoreConfigDataCatalogConfig)(nil)).Elem()
}

func (o FeatureGroupOfflineStoreConfigDataCatalogConfigOutput) ToFeatureGroupOfflineStoreConfigDataCatalogConfigOutput() FeatureGroupOfflineStoreConfigDataCatalogConfigOutput {
	return o
}

func (o FeatureGroupOfflineStoreConfigDataCatalogConfigOutput) ToFeatureGroupOfflineStoreConfigDataCatalogConfigOutputWithContext(ctx context.Context) FeatureGroupOfflineStoreConfigDataCatalogConfigOutput {
	return o
}

func (o FeatureGroupOfflineStoreConfigDataCatalogConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupOfflineStoreConfigDataCatalogConfig] {
	return pulumix.Output[FeatureGroupOfflineStoreConfigDataCatalogConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the Glue table catalog.
func (o FeatureGroupOfflineStoreConfigDataCatalogConfigOutput) Catalog() pulumix.Output[*string] {
	return pulumix.Apply[FeatureGroupOfflineStoreConfigDataCatalogConfig](o, func(v FeatureGroupOfflineStoreConfigDataCatalogConfig) *string { return v.Catalog })
}

// The name of the Glue table database.
func (o FeatureGroupOfflineStoreConfigDataCatalogConfigOutput) Database() pulumix.Output[*string] {
	return pulumix.Apply[FeatureGroupOfflineStoreConfigDataCatalogConfig](o, func(v FeatureGroupOfflineStoreConfigDataCatalogConfig) *string { return v.Database })
}

// The name of the Glue table.
func (o FeatureGroupOfflineStoreConfigDataCatalogConfigOutput) TableName() pulumix.Output[*string] {
	return pulumix.Apply[FeatureGroupOfflineStoreConfigDataCatalogConfig](o, func(v FeatureGroupOfflineStoreConfigDataCatalogConfig) *string { return v.TableName })
}

type FeatureGroupOfflineStoreConfigS3StorageConfig struct {
	// The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The S3 URI, or location in Amazon S3, of OfflineStore.
	S3Uri string `pulumi:"s3Uri"`
}

type FeatureGroupOfflineStoreConfigS3StorageConfigArgs struct {
	// The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// The S3 URI, or location in Amazon S3, of OfflineStore.
	S3Uri pulumix.Input[string] `pulumi:"s3Uri"`
}

func (FeatureGroupOfflineStoreConfigS3StorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOfflineStoreConfigS3StorageConfig)(nil)).Elem()
}

func (i FeatureGroupOfflineStoreConfigS3StorageConfigArgs) ToFeatureGroupOfflineStoreConfigS3StorageConfigOutput() FeatureGroupOfflineStoreConfigS3StorageConfigOutput {
	return i.ToFeatureGroupOfflineStoreConfigS3StorageConfigOutputWithContext(context.Background())
}

func (i FeatureGroupOfflineStoreConfigS3StorageConfigArgs) ToFeatureGroupOfflineStoreConfigS3StorageConfigOutputWithContext(ctx context.Context) FeatureGroupOfflineStoreConfigS3StorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupOfflineStoreConfigS3StorageConfigOutput)
}

func (i *FeatureGroupOfflineStoreConfigS3StorageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupOfflineStoreConfigS3StorageConfigArgs] {
	return pulumix.Val(i)
}

type FeatureGroupOfflineStoreConfigS3StorageConfigOutput struct{ *pulumi.OutputState }

func (FeatureGroupOfflineStoreConfigS3StorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOfflineStoreConfigS3StorageConfig)(nil)).Elem()
}

func (o FeatureGroupOfflineStoreConfigS3StorageConfigOutput) ToFeatureGroupOfflineStoreConfigS3StorageConfigOutput() FeatureGroupOfflineStoreConfigS3StorageConfigOutput {
	return o
}

func (o FeatureGroupOfflineStoreConfigS3StorageConfigOutput) ToFeatureGroupOfflineStoreConfigS3StorageConfigOutputWithContext(ctx context.Context) FeatureGroupOfflineStoreConfigS3StorageConfigOutput {
	return o
}

func (o FeatureGroupOfflineStoreConfigS3StorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupOfflineStoreConfigS3StorageConfig] {
	return pulumix.Output[FeatureGroupOfflineStoreConfigS3StorageConfig]{
		OutputState: o.OutputState,
	}
}

// The AWS Key Management Service (KMS) key ID of the key used to encrypt any objects written into the OfflineStore S3 location.
func (o FeatureGroupOfflineStoreConfigS3StorageConfigOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[FeatureGroupOfflineStoreConfigS3StorageConfig](o, func(v FeatureGroupOfflineStoreConfigS3StorageConfig) *string { return v.KmsKeyId })
}

// The S3 URI, or location in Amazon S3, of OfflineStore.
func (o FeatureGroupOfflineStoreConfigS3StorageConfigOutput) S3Uri() pulumix.Output[string] {
	return pulumix.Apply[FeatureGroupOfflineStoreConfigS3StorageConfig](o, func(v FeatureGroupOfflineStoreConfigS3StorageConfig) string { return v.S3Uri })
}

type FeatureGroupOnlineStoreConfig struct {
	// Set to `true` to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.
	EnableOnlineStore *bool `pulumi:"enableOnlineStore"`
	// Security config for at-rest encryption of your OnlineStore. See Security Config Below.
	SecurityConfig *FeatureGroupOnlineStoreConfigSecurityConfig `pulumi:"securityConfig"`
}

type FeatureGroupOnlineStoreConfigArgs struct {
	// Set to `true` to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.
	EnableOnlineStore pulumix.Input[*bool] `pulumi:"enableOnlineStore"`
	// Security config for at-rest encryption of your OnlineStore. See Security Config Below.
	SecurityConfig pulumix.Input[*FeatureGroupOnlineStoreConfigSecurityConfigArgs] `pulumi:"securityConfig"`
}

func (FeatureGroupOnlineStoreConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOnlineStoreConfig)(nil)).Elem()
}

func (i FeatureGroupOnlineStoreConfigArgs) ToFeatureGroupOnlineStoreConfigOutput() FeatureGroupOnlineStoreConfigOutput {
	return i.ToFeatureGroupOnlineStoreConfigOutputWithContext(context.Background())
}

func (i FeatureGroupOnlineStoreConfigArgs) ToFeatureGroupOnlineStoreConfigOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupOnlineStoreConfigOutput)
}

func (i *FeatureGroupOnlineStoreConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupOnlineStoreConfigArgs] {
	return pulumix.Val(i)
}

type FeatureGroupOnlineStoreConfigOutput struct{ *pulumi.OutputState }

func (FeatureGroupOnlineStoreConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOnlineStoreConfig)(nil)).Elem()
}

func (o FeatureGroupOnlineStoreConfigOutput) ToFeatureGroupOnlineStoreConfigOutput() FeatureGroupOnlineStoreConfigOutput {
	return o
}

func (o FeatureGroupOnlineStoreConfigOutput) ToFeatureGroupOnlineStoreConfigOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreConfigOutput {
	return o
}

func (o FeatureGroupOnlineStoreConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupOnlineStoreConfig] {
	return pulumix.Output[FeatureGroupOnlineStoreConfig]{
		OutputState: o.OutputState,
	}
}

// Set to `true` to disable the automatic creation of an AWS Glue table when configuring an OfflineStore.
func (o FeatureGroupOnlineStoreConfigOutput) EnableOnlineStore() pulumix.Output[*bool] {
	return pulumix.Apply[FeatureGroupOnlineStoreConfig](o, func(v FeatureGroupOnlineStoreConfig) *bool { return v.EnableOnlineStore })
}

// Security config for at-rest encryption of your OnlineStore. See Security Config Below.
func (o FeatureGroupOnlineStoreConfigOutput) SecurityConfig() pulumix.GPtrOutput[FeatureGroupOnlineStoreConfigSecurityConfig, FeatureGroupOnlineStoreConfigSecurityConfigOutput] {
	value := pulumix.Apply[FeatureGroupOnlineStoreConfig](o, func(v FeatureGroupOnlineStoreConfig) *FeatureGroupOnlineStoreConfigSecurityConfig {
		return v.SecurityConfig
	})
	return pulumix.GPtrOutput[FeatureGroupOnlineStoreConfigSecurityConfig, FeatureGroupOnlineStoreConfigSecurityConfigOutput]{OutputState: value.OutputState}
}

type FeatureGroupOnlineStoreConfigSecurityConfig struct {
	// The ID of the AWS Key Management Service (AWS KMS) key that SageMaker Feature Store uses to encrypt the Amazon S3 objects at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

type FeatureGroupOnlineStoreConfigSecurityConfigArgs struct {
	// The ID of the AWS Key Management Service (AWS KMS) key that SageMaker Feature Store uses to encrypt the Amazon S3 objects at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
}

func (FeatureGroupOnlineStoreConfigSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOnlineStoreConfigSecurityConfig)(nil)).Elem()
}

func (i FeatureGroupOnlineStoreConfigSecurityConfigArgs) ToFeatureGroupOnlineStoreConfigSecurityConfigOutput() FeatureGroupOnlineStoreConfigSecurityConfigOutput {
	return i.ToFeatureGroupOnlineStoreConfigSecurityConfigOutputWithContext(context.Background())
}

func (i FeatureGroupOnlineStoreConfigSecurityConfigArgs) ToFeatureGroupOnlineStoreConfigSecurityConfigOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreConfigSecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureGroupOnlineStoreConfigSecurityConfigOutput)
}

func (i *FeatureGroupOnlineStoreConfigSecurityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FeatureGroupOnlineStoreConfigSecurityConfigArgs] {
	return pulumix.Val(i)
}

type FeatureGroupOnlineStoreConfigSecurityConfigOutput struct{ *pulumi.OutputState }

func (FeatureGroupOnlineStoreConfigSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureGroupOnlineStoreConfigSecurityConfig)(nil)).Elem()
}

func (o FeatureGroupOnlineStoreConfigSecurityConfigOutput) ToFeatureGroupOnlineStoreConfigSecurityConfigOutput() FeatureGroupOnlineStoreConfigSecurityConfigOutput {
	return o
}

func (o FeatureGroupOnlineStoreConfigSecurityConfigOutput) ToFeatureGroupOnlineStoreConfigSecurityConfigOutputWithContext(ctx context.Context) FeatureGroupOnlineStoreConfigSecurityConfigOutput {
	return o
}

func (o FeatureGroupOnlineStoreConfigSecurityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FeatureGroupOnlineStoreConfigSecurityConfig] {
	return pulumix.Output[FeatureGroupOnlineStoreConfigSecurityConfig]{
		OutputState: o.OutputState,
	}
}

// The ID of the AWS Key Management Service (AWS KMS) key that SageMaker Feature Store uses to encrypt the Amazon S3 objects at rest using Amazon S3 server-side encryption.
func (o FeatureGroupOnlineStoreConfigSecurityConfigOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[FeatureGroupOnlineStoreConfigSecurityConfig](o, func(v FeatureGroupOnlineStoreConfigSecurityConfig) *string { return v.KmsKeyId })
}

type FlowDefinitionHumanLoopActivationConfig struct {
	// defines under what conditions SageMaker creates a human loop. See Human Loop Activation Conditions Config details below.
	HumanLoopActivationConditionsConfig *FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig `pulumi:"humanLoopActivationConditionsConfig"`
}

type FlowDefinitionHumanLoopActivationConfigArgs struct {
	// defines under what conditions SageMaker creates a human loop. See Human Loop Activation Conditions Config details below.
	HumanLoopActivationConditionsConfig pulumix.Input[*FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigArgs] `pulumi:"humanLoopActivationConditionsConfig"`
}

func (FlowDefinitionHumanLoopActivationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopActivationConfig)(nil)).Elem()
}

func (i FlowDefinitionHumanLoopActivationConfigArgs) ToFlowDefinitionHumanLoopActivationConfigOutput() FlowDefinitionHumanLoopActivationConfigOutput {
	return i.ToFlowDefinitionHumanLoopActivationConfigOutputWithContext(context.Background())
}

func (i FlowDefinitionHumanLoopActivationConfigArgs) ToFlowDefinitionHumanLoopActivationConfigOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopActivationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionHumanLoopActivationConfigOutput)
}

func (i *FlowDefinitionHumanLoopActivationConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FlowDefinitionHumanLoopActivationConfigArgs] {
	return pulumix.Val(i)
}

type FlowDefinitionHumanLoopActivationConfigOutput struct{ *pulumi.OutputState }

func (FlowDefinitionHumanLoopActivationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopActivationConfig)(nil)).Elem()
}

func (o FlowDefinitionHumanLoopActivationConfigOutput) ToFlowDefinitionHumanLoopActivationConfigOutput() FlowDefinitionHumanLoopActivationConfigOutput {
	return o
}

func (o FlowDefinitionHumanLoopActivationConfigOutput) ToFlowDefinitionHumanLoopActivationConfigOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopActivationConfigOutput {
	return o
}

func (o FlowDefinitionHumanLoopActivationConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FlowDefinitionHumanLoopActivationConfig] {
	return pulumix.Output[FlowDefinitionHumanLoopActivationConfig]{
		OutputState: o.OutputState,
	}
}

// defines under what conditions SageMaker creates a human loop. See Human Loop Activation Conditions Config details below.
func (o FlowDefinitionHumanLoopActivationConfigOutput) HumanLoopActivationConditionsConfig() pulumix.GPtrOutput[FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig, FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput] {
	value := pulumix.Apply[FlowDefinitionHumanLoopActivationConfig](o, func(v FlowDefinitionHumanLoopActivationConfig) *FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig {
		return v.HumanLoopActivationConditionsConfig
	})
	return pulumix.GPtrOutput[FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig, FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput]{OutputState: value.OutputState}
}

type FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig struct {
	// A JSON expressing use-case specific conditions declaratively. If any condition is matched, atomic tasks are created against the configured work team. For more information about how to structure the JSON, see [JSON Schema for Human Loop Activation Conditions in Amazon Augmented AI](https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-human-fallback-conditions-json-schema.html).
	HumanLoopActivationConditions string `pulumi:"humanLoopActivationConditions"`
}

type FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigArgs struct {
	// A JSON expressing use-case specific conditions declaratively. If any condition is matched, atomic tasks are created against the configured work team. For more information about how to structure the JSON, see [JSON Schema for Human Loop Activation Conditions in Amazon Augmented AI](https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-human-fallback-conditions-json-schema.html).
	HumanLoopActivationConditions pulumix.Input[string] `pulumi:"humanLoopActivationConditions"`
}

func (FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig)(nil)).Elem()
}

func (i FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigArgs) ToFlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput() FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput {
	return i.ToFlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutputWithContext(context.Background())
}

func (i FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigArgs) ToFlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput)
}

func (i *FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigArgs] {
	return pulumix.Val(i)
}

type FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput struct{ *pulumi.OutputState }

func (FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig)(nil)).Elem()
}

func (o FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput) ToFlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput() FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput {
	return o
}

func (o FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput) ToFlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput {
	return o
}

func (o FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig] {
	return pulumix.Output[FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig]{
		OutputState: o.OutputState,
	}
}

// A JSON expressing use-case specific conditions declaratively. If any condition is matched, atomic tasks are created against the configured work team. For more information about how to structure the JSON, see [JSON Schema for Human Loop Activation Conditions in Amazon Augmented AI](https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-human-fallback-conditions-json-schema.html).
func (o FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput) HumanLoopActivationConditions() pulumix.Output[string] {
	return pulumix.Apply[FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig](o, func(v FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfig) string {
		return v.HumanLoopActivationConditions
	})
}

type FlowDefinitionHumanLoopConfig struct {
	// The Amazon Resource Name (ARN) of the human task user interface.
	HumanTaskUiArn string `pulumi:"humanTaskUiArn"`
	// Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. See Public Workforce Task Price details below.
	PublicWorkforceTaskPrice *FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice `pulumi:"publicWorkforceTaskPrice"`
	// The length of time that a task remains available for review by human workers. Valid value range between `1` and `864000`.
	TaskAvailabilityLifetimeInSeconds *int `pulumi:"taskAvailabilityLifetimeInSeconds"`
	// The number of distinct workers who will perform the same task on each object. Valid value range between `1` and `3`.
	TaskCount int `pulumi:"taskCount"`
	// A description for the human worker task.
	TaskDescription string `pulumi:"taskDescription"`
	// An array of keywords used to describe the task so that workers can discover the task.
	TaskKeywords []string `pulumi:"taskKeywords"`
	// The amount of time that a worker has to complete a task. The default value is `3600` seconds.
	TaskTimeLimitInSeconds *int `pulumi:"taskTimeLimitInSeconds"`
	// A title for the human worker task.
	TaskTitle string `pulumi:"taskTitle"`
	// The Amazon Resource Name (ARN) of the human task user interface. Amazon Resource Name (ARN) of a team of workers. For Public workforces see [AWS Docs](https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-management-public.html).
	WorkteamArn string `pulumi:"workteamArn"`
}

type FlowDefinitionHumanLoopConfigArgs struct {
	// The Amazon Resource Name (ARN) of the human task user interface.
	HumanTaskUiArn pulumix.Input[string] `pulumi:"humanTaskUiArn"`
	// Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. See Public Workforce Task Price details below.
	PublicWorkforceTaskPrice pulumix.Input[*FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs] `pulumi:"publicWorkforceTaskPrice"`
	// The length of time that a task remains available for review by human workers. Valid value range between `1` and `864000`.
	TaskAvailabilityLifetimeInSeconds pulumix.Input[*int] `pulumi:"taskAvailabilityLifetimeInSeconds"`
	// The number of distinct workers who will perform the same task on each object. Valid value range between `1` and `3`.
	TaskCount pulumix.Input[int] `pulumi:"taskCount"`
	// A description for the human worker task.
	TaskDescription pulumix.Input[string] `pulumi:"taskDescription"`
	// An array of keywords used to describe the task so that workers can discover the task.
	TaskKeywords pulumix.Input[[]string] `pulumi:"taskKeywords"`
	// The amount of time that a worker has to complete a task. The default value is `3600` seconds.
	TaskTimeLimitInSeconds pulumix.Input[*int] `pulumi:"taskTimeLimitInSeconds"`
	// A title for the human worker task.
	TaskTitle pulumix.Input[string] `pulumi:"taskTitle"`
	// The Amazon Resource Name (ARN) of the human task user interface. Amazon Resource Name (ARN) of a team of workers. For Public workforces see [AWS Docs](https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-management-public.html).
	WorkteamArn pulumix.Input[string] `pulumi:"workteamArn"`
}

func (FlowDefinitionHumanLoopConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopConfig)(nil)).Elem()
}

func (i FlowDefinitionHumanLoopConfigArgs) ToFlowDefinitionHumanLoopConfigOutput() FlowDefinitionHumanLoopConfigOutput {
	return i.ToFlowDefinitionHumanLoopConfigOutputWithContext(context.Background())
}

func (i FlowDefinitionHumanLoopConfigArgs) ToFlowDefinitionHumanLoopConfigOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionHumanLoopConfigOutput)
}

func (i *FlowDefinitionHumanLoopConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FlowDefinitionHumanLoopConfigArgs] {
	return pulumix.Val(i)
}

type FlowDefinitionHumanLoopConfigOutput struct{ *pulumi.OutputState }

func (FlowDefinitionHumanLoopConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopConfig)(nil)).Elem()
}

func (o FlowDefinitionHumanLoopConfigOutput) ToFlowDefinitionHumanLoopConfigOutput() FlowDefinitionHumanLoopConfigOutput {
	return o
}

func (o FlowDefinitionHumanLoopConfigOutput) ToFlowDefinitionHumanLoopConfigOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopConfigOutput {
	return o
}

func (o FlowDefinitionHumanLoopConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FlowDefinitionHumanLoopConfig] {
	return pulumix.Output[FlowDefinitionHumanLoopConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the human task user interface.
func (o FlowDefinitionHumanLoopConfigOutput) HumanTaskUiArn() pulumix.Output[string] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfig](o, func(v FlowDefinitionHumanLoopConfig) string { return v.HumanTaskUiArn })
}

// Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. See Public Workforce Task Price details below.
func (o FlowDefinitionHumanLoopConfigOutput) PublicWorkforceTaskPrice() pulumix.GPtrOutput[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice, FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput] {
	value := pulumix.Apply[FlowDefinitionHumanLoopConfig](o, func(v FlowDefinitionHumanLoopConfig) *FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice {
		return v.PublicWorkforceTaskPrice
	})
	return pulumix.GPtrOutput[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice, FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput]{OutputState: value.OutputState}
}

// The length of time that a task remains available for review by human workers. Valid value range between `1` and `864000`.
func (o FlowDefinitionHumanLoopConfigOutput) TaskAvailabilityLifetimeInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfig](o, func(v FlowDefinitionHumanLoopConfig) *int { return v.TaskAvailabilityLifetimeInSeconds })
}

// The number of distinct workers who will perform the same task on each object. Valid value range between `1` and `3`.
func (o FlowDefinitionHumanLoopConfigOutput) TaskCount() pulumix.Output[int] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfig](o, func(v FlowDefinitionHumanLoopConfig) int { return v.TaskCount })
}

// A description for the human worker task.
func (o FlowDefinitionHumanLoopConfigOutput) TaskDescription() pulumix.Output[string] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfig](o, func(v FlowDefinitionHumanLoopConfig) string { return v.TaskDescription })
}

// An array of keywords used to describe the task so that workers can discover the task.
func (o FlowDefinitionHumanLoopConfigOutput) TaskKeywords() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FlowDefinitionHumanLoopConfig](o, func(v FlowDefinitionHumanLoopConfig) []string { return v.TaskKeywords })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The amount of time that a worker has to complete a task. The default value is `3600` seconds.
func (o FlowDefinitionHumanLoopConfigOutput) TaskTimeLimitInSeconds() pulumix.Output[*int] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfig](o, func(v FlowDefinitionHumanLoopConfig) *int { return v.TaskTimeLimitInSeconds })
}

// A title for the human worker task.
func (o FlowDefinitionHumanLoopConfigOutput) TaskTitle() pulumix.Output[string] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfig](o, func(v FlowDefinitionHumanLoopConfig) string { return v.TaskTitle })
}

// The Amazon Resource Name (ARN) of the human task user interface. Amazon Resource Name (ARN) of a team of workers. For Public workforces see [AWS Docs](https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-management-public.html).
func (o FlowDefinitionHumanLoopConfigOutput) WorkteamArn() pulumix.Output[string] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfig](o, func(v FlowDefinitionHumanLoopConfig) string { return v.WorkteamArn })
}

type FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice struct {
	// Defines the amount of money paid to an Amazon Mechanical Turk worker in United States dollars. See Amount In Usd details below.
	AmountInUsd *FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd `pulumi:"amountInUsd"`
}

type FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs struct {
	// Defines the amount of money paid to an Amazon Mechanical Turk worker in United States dollars. See Amount In Usd details below.
	AmountInUsd pulumix.Input[*FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdArgs] `pulumi:"amountInUsd"`
}

func (FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice)(nil)).Elem()
}

func (i FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs) ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput() FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput {
	return i.ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutputWithContext(context.Background())
}

func (i FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs) ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput)
}

func (i *FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs) ToOutput(ctx context.Context) pulumix.Output[*FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceArgs] {
	return pulumix.Val(i)
}

type FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput struct{ *pulumi.OutputState }

func (FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice)(nil)).Elem()
}

func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput) ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput() FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput {
	return o
}

func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput) ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput {
	return o
}

func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput) ToOutput(ctx context.Context) pulumix.Output[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice] {
	return pulumix.Output[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice]{
		OutputState: o.OutputState,
	}
}

// Defines the amount of money paid to an Amazon Mechanical Turk worker in United States dollars. See Amount In Usd details below.
func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput) AmountInUsd() pulumix.GPtrOutput[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd, FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput] {
	value := pulumix.Apply[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice](o, func(v FlowDefinitionHumanLoopConfigPublicWorkforceTaskPrice) *FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd {
		return v.AmountInUsd
	})
	return pulumix.GPtrOutput[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd, FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput]{OutputState: value.OutputState}
}

type FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd struct {
	// The fractional portion, in cents, of the amount. Valid value range between `0` and `99`.
	Cents *int `pulumi:"cents"`
	// The whole number of dollars in the amount. Valid value range between `0` and `2`.
	Dollars *int `pulumi:"dollars"`
	// Fractions of a cent, in tenths. Valid value range between `0` and `9`.
	TenthFractionsOfACent *int `pulumi:"tenthFractionsOfACent"`
}

type FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdArgs struct {
	// The fractional portion, in cents, of the amount. Valid value range between `0` and `99`.
	Cents pulumix.Input[*int] `pulumi:"cents"`
	// The whole number of dollars in the amount. Valid value range between `0` and `2`.
	Dollars pulumix.Input[*int] `pulumi:"dollars"`
	// Fractions of a cent, in tenths. Valid value range between `0` and `9`.
	TenthFractionsOfACent pulumix.Input[*int] `pulumi:"tenthFractionsOfACent"`
}

func (FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd)(nil)).Elem()
}

func (i FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdArgs) ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput() FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput {
	return i.ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutputWithContext(context.Background())
}

func (i FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdArgs) ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput)
}

func (i *FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdArgs) ToOutput(ctx context.Context) pulumix.Output[*FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdArgs] {
	return pulumix.Val(i)
}

type FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput struct{ *pulumi.OutputState }

func (FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd)(nil)).Elem()
}

func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput) ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput() FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput {
	return o
}

func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput) ToFlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput {
	return o
}

func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput) ToOutput(ctx context.Context) pulumix.Output[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd] {
	return pulumix.Output[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd]{
		OutputState: o.OutputState,
	}
}

// The fractional portion, in cents, of the amount. Valid value range between `0` and `99`.
func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput) Cents() pulumix.Output[*int] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd](o, func(v FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd) *int { return v.Cents })
}

// The whole number of dollars in the amount. Valid value range between `0` and `2`.
func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput) Dollars() pulumix.Output[*int] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd](o, func(v FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd) *int { return v.Dollars })
}

// Fractions of a cent, in tenths. Valid value range between `0` and `9`.
func (o FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput) TenthFractionsOfACent() pulumix.Output[*int] {
	return pulumix.Apply[FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd](o, func(v FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsd) *int {
		return v.TenthFractionsOfACent
	})
}

type FlowDefinitionHumanLoopRequestSource struct {
	// Specifies whether Amazon Rekognition or Amazon Textract are used as the integration source. Valid values are: `AWS/Rekognition/DetectModerationLabels/Image/V3` and `AWS/Textract/AnalyzeDocument/Forms/V1`.
	AwsManagedHumanLoopRequestSource string `pulumi:"awsManagedHumanLoopRequestSource"`
}

type FlowDefinitionHumanLoopRequestSourceArgs struct {
	// Specifies whether Amazon Rekognition or Amazon Textract are used as the integration source. Valid values are: `AWS/Rekognition/DetectModerationLabels/Image/V3` and `AWS/Textract/AnalyzeDocument/Forms/V1`.
	AwsManagedHumanLoopRequestSource pulumix.Input[string] `pulumi:"awsManagedHumanLoopRequestSource"`
}

func (FlowDefinitionHumanLoopRequestSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopRequestSource)(nil)).Elem()
}

func (i FlowDefinitionHumanLoopRequestSourceArgs) ToFlowDefinitionHumanLoopRequestSourceOutput() FlowDefinitionHumanLoopRequestSourceOutput {
	return i.ToFlowDefinitionHumanLoopRequestSourceOutputWithContext(context.Background())
}

func (i FlowDefinitionHumanLoopRequestSourceArgs) ToFlowDefinitionHumanLoopRequestSourceOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopRequestSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionHumanLoopRequestSourceOutput)
}

func (i *FlowDefinitionHumanLoopRequestSourceArgs) ToOutput(ctx context.Context) pulumix.Output[*FlowDefinitionHumanLoopRequestSourceArgs] {
	return pulumix.Val(i)
}

type FlowDefinitionHumanLoopRequestSourceOutput struct{ *pulumi.OutputState }

func (FlowDefinitionHumanLoopRequestSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionHumanLoopRequestSource)(nil)).Elem()
}

func (o FlowDefinitionHumanLoopRequestSourceOutput) ToFlowDefinitionHumanLoopRequestSourceOutput() FlowDefinitionHumanLoopRequestSourceOutput {
	return o
}

func (o FlowDefinitionHumanLoopRequestSourceOutput) ToFlowDefinitionHumanLoopRequestSourceOutputWithContext(ctx context.Context) FlowDefinitionHumanLoopRequestSourceOutput {
	return o
}

func (o FlowDefinitionHumanLoopRequestSourceOutput) ToOutput(ctx context.Context) pulumix.Output[FlowDefinitionHumanLoopRequestSource] {
	return pulumix.Output[FlowDefinitionHumanLoopRequestSource]{
		OutputState: o.OutputState,
	}
}

// Specifies whether Amazon Rekognition or Amazon Textract are used as the integration source. Valid values are: `AWS/Rekognition/DetectModerationLabels/Image/V3` and `AWS/Textract/AnalyzeDocument/Forms/V1`.
func (o FlowDefinitionHumanLoopRequestSourceOutput) AwsManagedHumanLoopRequestSource() pulumix.Output[string] {
	return pulumix.Apply[FlowDefinitionHumanLoopRequestSource](o, func(v FlowDefinitionHumanLoopRequestSource) string { return v.AwsManagedHumanLoopRequestSource })
}

type FlowDefinitionOutputConfig struct {
	// The Amazon Key Management Service (KMS) key ARN for server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Amazon S3 path where the object containing human output will be made available.
	S3OutputPath string `pulumi:"s3OutputPath"`
}

type FlowDefinitionOutputConfigArgs struct {
	// The Amazon Key Management Service (KMS) key ARN for server-side encryption.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// The Amazon S3 path where the object containing human output will be made available.
	S3OutputPath pulumix.Input[string] `pulumi:"s3OutputPath"`
}

func (FlowDefinitionOutputConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionOutputConfig)(nil)).Elem()
}

func (i FlowDefinitionOutputConfigArgs) ToFlowDefinitionOutputConfigOutput() FlowDefinitionOutputConfigOutput {
	return i.ToFlowDefinitionOutputConfigOutputWithContext(context.Background())
}

func (i FlowDefinitionOutputConfigArgs) ToFlowDefinitionOutputConfigOutputWithContext(ctx context.Context) FlowDefinitionOutputConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionOutputConfigOutput)
}

func (i *FlowDefinitionOutputConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FlowDefinitionOutputConfigArgs] {
	return pulumix.Val(i)
}

type FlowDefinitionOutputConfigOutput struct{ *pulumi.OutputState }

func (FlowDefinitionOutputConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinitionOutputConfig)(nil)).Elem()
}

func (o FlowDefinitionOutputConfigOutput) ToFlowDefinitionOutputConfigOutput() FlowDefinitionOutputConfigOutput {
	return o
}

func (o FlowDefinitionOutputConfigOutput) ToFlowDefinitionOutputConfigOutputWithContext(ctx context.Context) FlowDefinitionOutputConfigOutput {
	return o
}

func (o FlowDefinitionOutputConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FlowDefinitionOutputConfig] {
	return pulumix.Output[FlowDefinitionOutputConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Key Management Service (KMS) key ARN for server-side encryption.
func (o FlowDefinitionOutputConfigOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[FlowDefinitionOutputConfig](o, func(v FlowDefinitionOutputConfig) *string { return v.KmsKeyId })
}

// The Amazon S3 path where the object containing human output will be made available.
func (o FlowDefinitionOutputConfigOutput) S3OutputPath() pulumix.Output[string] {
	return pulumix.Apply[FlowDefinitionOutputConfig](o, func(v FlowDefinitionOutputConfig) string { return v.S3OutputPath })
}

type HumanTaskUIUiTemplate struct {
	// The content of the Liquid template for the worker user interface.
	Content *string `pulumi:"content"`
	// The SHA-256 digest of the contents of the template.
	ContentSha256 *string `pulumi:"contentSha256"`
	// The URL for the user interface template.
	Url *string `pulumi:"url"`
}

type HumanTaskUIUiTemplateArgs struct {
	// The content of the Liquid template for the worker user interface.
	Content pulumix.Input[*string] `pulumi:"content"`
	// The SHA-256 digest of the contents of the template.
	ContentSha256 pulumix.Input[*string] `pulumi:"contentSha256"`
	// The URL for the user interface template.
	Url pulumix.Input[*string] `pulumi:"url"`
}

func (HumanTaskUIUiTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HumanTaskUIUiTemplate)(nil)).Elem()
}

func (i HumanTaskUIUiTemplateArgs) ToHumanTaskUIUiTemplateOutput() HumanTaskUIUiTemplateOutput {
	return i.ToHumanTaskUIUiTemplateOutputWithContext(context.Background())
}

func (i HumanTaskUIUiTemplateArgs) ToHumanTaskUIUiTemplateOutputWithContext(ctx context.Context) HumanTaskUIUiTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HumanTaskUIUiTemplateOutput)
}

func (i *HumanTaskUIUiTemplateArgs) ToOutput(ctx context.Context) pulumix.Output[*HumanTaskUIUiTemplateArgs] {
	return pulumix.Val(i)
}

type HumanTaskUIUiTemplateOutput struct{ *pulumi.OutputState }

func (HumanTaskUIUiTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HumanTaskUIUiTemplate)(nil)).Elem()
}

func (o HumanTaskUIUiTemplateOutput) ToHumanTaskUIUiTemplateOutput() HumanTaskUIUiTemplateOutput {
	return o
}

func (o HumanTaskUIUiTemplateOutput) ToHumanTaskUIUiTemplateOutputWithContext(ctx context.Context) HumanTaskUIUiTemplateOutput {
	return o
}

func (o HumanTaskUIUiTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[HumanTaskUIUiTemplate] {
	return pulumix.Output[HumanTaskUIUiTemplate]{
		OutputState: o.OutputState,
	}
}

// The content of the Liquid template for the worker user interface.
func (o HumanTaskUIUiTemplateOutput) Content() pulumix.Output[*string] {
	return pulumix.Apply[HumanTaskUIUiTemplate](o, func(v HumanTaskUIUiTemplate) *string { return v.Content })
}

// The SHA-256 digest of the contents of the template.
func (o HumanTaskUIUiTemplateOutput) ContentSha256() pulumix.Output[*string] {
	return pulumix.Apply[HumanTaskUIUiTemplate](o, func(v HumanTaskUIUiTemplate) *string { return v.ContentSha256 })
}

// The URL for the user interface template.
func (o HumanTaskUIUiTemplateOutput) Url() pulumix.Output[*string] {
	return pulumix.Apply[HumanTaskUIUiTemplate](o, func(v HumanTaskUIUiTemplate) *string { return v.Url })
}

type ModelContainer struct {
	// The DNS host name for the container.
	ContainerHostname *string `pulumi:"containerHostname"`
	// Environment variables for the Docker container.
	// A list of key value pairs.
	Environment map[string]string `pulumi:"environment"`
	// The registry path where the inference code image is stored in Amazon ECR.
	Image *string `pulumi:"image"`
	// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see [Using a Private Docker Registry for Real-Time Inference Containers](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-containers-inference-private.html). see Image Config.
	ImageConfig *ModelContainerImageConfig `pulumi:"imageConfig"`
	// The container hosts value `SingleModel/MultiModel`. The default value is `SingleModel`.
	Mode *string `pulumi:"mode"`
	// The URL for the S3 location where model artifacts are stored.
	ModelDataUrl *string `pulumi:"modelDataUrl"`
	// The Amazon Resource Name (ARN) of the model package to use to create the model.
	ModelPackageName *string `pulumi:"modelPackageName"`
}

type ModelContainerArgs struct {
	// The DNS host name for the container.
	ContainerHostname pulumix.Input[*string] `pulumi:"containerHostname"`
	// Environment variables for the Docker container.
	// A list of key value pairs.
	Environment pulumix.Input[map[string]string] `pulumi:"environment"`
	// The registry path where the inference code image is stored in Amazon ECR.
	Image pulumix.Input[*string] `pulumi:"image"`
	// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see [Using a Private Docker Registry for Real-Time Inference Containers](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-containers-inference-private.html). see Image Config.
	ImageConfig pulumix.Input[*ModelContainerImageConfigArgs] `pulumi:"imageConfig"`
	// The container hosts value `SingleModel/MultiModel`. The default value is `SingleModel`.
	Mode pulumix.Input[*string] `pulumi:"mode"`
	// The URL for the S3 location where model artifacts are stored.
	ModelDataUrl pulumix.Input[*string] `pulumi:"modelDataUrl"`
	// The Amazon Resource Name (ARN) of the model package to use to create the model.
	ModelPackageName pulumix.Input[*string] `pulumi:"modelPackageName"`
}

func (ModelContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainer)(nil)).Elem()
}

func (i ModelContainerArgs) ToModelContainerOutput() ModelContainerOutput {
	return i.ToModelContainerOutputWithContext(context.Background())
}

func (i ModelContainerArgs) ToModelContainerOutputWithContext(ctx context.Context) ModelContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerOutput)
}

func (i *ModelContainerArgs) ToOutput(ctx context.Context) pulumix.Output[*ModelContainerArgs] {
	return pulumix.Val(i)
}

type ModelContainerOutput struct{ *pulumi.OutputState }

func (ModelContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainer)(nil)).Elem()
}

func (o ModelContainerOutput) ToModelContainerOutput() ModelContainerOutput {
	return o
}

func (o ModelContainerOutput) ToModelContainerOutputWithContext(ctx context.Context) ModelContainerOutput {
	return o
}

func (o ModelContainerOutput) ToOutput(ctx context.Context) pulumix.Output[ModelContainer] {
	return pulumix.Output[ModelContainer]{
		OutputState: o.OutputState,
	}
}

// The DNS host name for the container.
func (o ModelContainerOutput) ContainerHostname() pulumix.Output[*string] {
	return pulumix.Apply[ModelContainer](o, func(v ModelContainer) *string { return v.ContainerHostname })
}

// Environment variables for the Docker container.
// A list of key value pairs.
func (o ModelContainerOutput) Environment() pulumix.MapOutput[string] {
	value := pulumix.Apply[ModelContainer](o, func(v ModelContainer) map[string]string { return v.Environment })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// The registry path where the inference code image is stored in Amazon ECR.
func (o ModelContainerOutput) Image() pulumix.Output[*string] {
	return pulumix.Apply[ModelContainer](o, func(v ModelContainer) *string { return v.Image })
}

// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see [Using a Private Docker Registry for Real-Time Inference Containers](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-containers-inference-private.html). see Image Config.
func (o ModelContainerOutput) ImageConfig() pulumix.GPtrOutput[ModelContainerImageConfig, ModelContainerImageConfigOutput] {
	value := pulumix.Apply[ModelContainer](o, func(v ModelContainer) *ModelContainerImageConfig { return v.ImageConfig })
	return pulumix.GPtrOutput[ModelContainerImageConfig, ModelContainerImageConfigOutput]{OutputState: value.OutputState}
}

// The container hosts value `SingleModel/MultiModel`. The default value is `SingleModel`.
func (o ModelContainerOutput) Mode() pulumix.Output[*string] {
	return pulumix.Apply[ModelContainer](o, func(v ModelContainer) *string { return v.Mode })
}

// The URL for the S3 location where model artifacts are stored.
func (o ModelContainerOutput) ModelDataUrl() pulumix.Output[*string] {
	return pulumix.Apply[ModelContainer](o, func(v ModelContainer) *string { return v.ModelDataUrl })
}

// The Amazon Resource Name (ARN) of the model package to use to create the model.
func (o ModelContainerOutput) ModelPackageName() pulumix.Output[*string] {
	return pulumix.Apply[ModelContainer](o, func(v ModelContainer) *string { return v.ModelPackageName })
}

type ModelContainerImageConfig struct {
	// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: `Platform` and `Vpc`.
	RepositoryAccessMode string `pulumi:"repositoryAccessMode"`
	// Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
	RepositoryAuthConfig *ModelContainerImageConfigRepositoryAuthConfig `pulumi:"repositoryAuthConfig"`
}

type ModelContainerImageConfigArgs struct {
	// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: `Platform` and `Vpc`.
	RepositoryAccessMode pulumix.Input[string] `pulumi:"repositoryAccessMode"`
	// Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
	RepositoryAuthConfig pulumix.Input[*ModelContainerImageConfigRepositoryAuthConfigArgs] `pulumi:"repositoryAuthConfig"`
}

func (ModelContainerImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerImageConfig)(nil)).Elem()
}

func (i ModelContainerImageConfigArgs) ToModelContainerImageConfigOutput() ModelContainerImageConfigOutput {
	return i.ToModelContainerImageConfigOutputWithContext(context.Background())
}

func (i ModelContainerImageConfigArgs) ToModelContainerImageConfigOutputWithContext(ctx context.Context) ModelContainerImageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerImageConfigOutput)
}

func (i *ModelContainerImageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ModelContainerImageConfigArgs] {
	return pulumix.Val(i)
}

type ModelContainerImageConfigOutput struct{ *pulumi.OutputState }

func (ModelContainerImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerImageConfig)(nil)).Elem()
}

func (o ModelContainerImageConfigOutput) ToModelContainerImageConfigOutput() ModelContainerImageConfigOutput {
	return o
}

func (o ModelContainerImageConfigOutput) ToModelContainerImageConfigOutputWithContext(ctx context.Context) ModelContainerImageConfigOutput {
	return o
}

func (o ModelContainerImageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelContainerImageConfig] {
	return pulumix.Output[ModelContainerImageConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: `Platform` and `Vpc`.
func (o ModelContainerImageConfigOutput) RepositoryAccessMode() pulumix.Output[string] {
	return pulumix.Apply[ModelContainerImageConfig](o, func(v ModelContainerImageConfig) string { return v.RepositoryAccessMode })
}

// Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
func (o ModelContainerImageConfigOutput) RepositoryAuthConfig() pulumix.GPtrOutput[ModelContainerImageConfigRepositoryAuthConfig, ModelContainerImageConfigRepositoryAuthConfigOutput] {
	value := pulumix.Apply[ModelContainerImageConfig](o, func(v ModelContainerImageConfig) *ModelContainerImageConfigRepositoryAuthConfig {
		return v.RepositoryAuthConfig
	})
	return pulumix.GPtrOutput[ModelContainerImageConfigRepositoryAuthConfig, ModelContainerImageConfigRepositoryAuthConfigOutput]{OutputState: value.OutputState}
}

type ModelContainerImageConfigRepositoryAuthConfig struct {
	// The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see [Create a Lambda function with the console](https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html) in the _AWS Lambda Developer Guide_.
	RepositoryCredentialsProviderArn string `pulumi:"repositoryCredentialsProviderArn"`
}

type ModelContainerImageConfigRepositoryAuthConfigArgs struct {
	// The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see [Create a Lambda function with the console](https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html) in the _AWS Lambda Developer Guide_.
	RepositoryCredentialsProviderArn pulumix.Input[string] `pulumi:"repositoryCredentialsProviderArn"`
}

func (ModelContainerImageConfigRepositoryAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerImageConfigRepositoryAuthConfig)(nil)).Elem()
}

func (i ModelContainerImageConfigRepositoryAuthConfigArgs) ToModelContainerImageConfigRepositoryAuthConfigOutput() ModelContainerImageConfigRepositoryAuthConfigOutput {
	return i.ToModelContainerImageConfigRepositoryAuthConfigOutputWithContext(context.Background())
}

func (i ModelContainerImageConfigRepositoryAuthConfigArgs) ToModelContainerImageConfigRepositoryAuthConfigOutputWithContext(ctx context.Context) ModelContainerImageConfigRepositoryAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerImageConfigRepositoryAuthConfigOutput)
}

func (i *ModelContainerImageConfigRepositoryAuthConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ModelContainerImageConfigRepositoryAuthConfigArgs] {
	return pulumix.Val(i)
}

type ModelContainerImageConfigRepositoryAuthConfigOutput struct{ *pulumi.OutputState }

func (ModelContainerImageConfigRepositoryAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainerImageConfigRepositoryAuthConfig)(nil)).Elem()
}

func (o ModelContainerImageConfigRepositoryAuthConfigOutput) ToModelContainerImageConfigRepositoryAuthConfigOutput() ModelContainerImageConfigRepositoryAuthConfigOutput {
	return o
}

func (o ModelContainerImageConfigRepositoryAuthConfigOutput) ToModelContainerImageConfigRepositoryAuthConfigOutputWithContext(ctx context.Context) ModelContainerImageConfigRepositoryAuthConfigOutput {
	return o
}

func (o ModelContainerImageConfigRepositoryAuthConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelContainerImageConfigRepositoryAuthConfig] {
	return pulumix.Output[ModelContainerImageConfigRepositoryAuthConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see [Create a Lambda function with the console](https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html) in the _AWS Lambda Developer Guide_.
func (o ModelContainerImageConfigRepositoryAuthConfigOutput) RepositoryCredentialsProviderArn() pulumix.Output[string] {
	return pulumix.Apply[ModelContainerImageConfigRepositoryAuthConfig](o, func(v ModelContainerImageConfigRepositoryAuthConfig) string {
		return v.RepositoryCredentialsProviderArn
	})
}

type ModelInferenceExecutionConfig struct {
	// The container hosts value `SingleModel/MultiModel`. The default value is `SingleModel`.
	Mode string `pulumi:"mode"`
}

type ModelInferenceExecutionConfigArgs struct {
	// The container hosts value `SingleModel/MultiModel`. The default value is `SingleModel`.
	Mode pulumix.Input[string] `pulumi:"mode"`
}

func (ModelInferenceExecutionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelInferenceExecutionConfig)(nil)).Elem()
}

func (i ModelInferenceExecutionConfigArgs) ToModelInferenceExecutionConfigOutput() ModelInferenceExecutionConfigOutput {
	return i.ToModelInferenceExecutionConfigOutputWithContext(context.Background())
}

func (i ModelInferenceExecutionConfigArgs) ToModelInferenceExecutionConfigOutputWithContext(ctx context.Context) ModelInferenceExecutionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelInferenceExecutionConfigOutput)
}

func (i *ModelInferenceExecutionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ModelInferenceExecutionConfigArgs] {
	return pulumix.Val(i)
}

type ModelInferenceExecutionConfigOutput struct{ *pulumi.OutputState }

func (ModelInferenceExecutionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelInferenceExecutionConfig)(nil)).Elem()
}

func (o ModelInferenceExecutionConfigOutput) ToModelInferenceExecutionConfigOutput() ModelInferenceExecutionConfigOutput {
	return o
}

func (o ModelInferenceExecutionConfigOutput) ToModelInferenceExecutionConfigOutputWithContext(ctx context.Context) ModelInferenceExecutionConfigOutput {
	return o
}

func (o ModelInferenceExecutionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelInferenceExecutionConfig] {
	return pulumix.Output[ModelInferenceExecutionConfig]{
		OutputState: o.OutputState,
	}
}

// The container hosts value `SingleModel/MultiModel`. The default value is `SingleModel`.
func (o ModelInferenceExecutionConfigOutput) Mode() pulumix.Output[string] {
	return pulumix.Apply[ModelInferenceExecutionConfig](o, func(v ModelInferenceExecutionConfig) string { return v.Mode })
}

type ModelPrimaryContainer struct {
	// The DNS host name for the container.
	ContainerHostname *string `pulumi:"containerHostname"`
	// Environment variables for the Docker container.
	// A list of key value pairs.
	Environment map[string]string `pulumi:"environment"`
	// The registry path where the inference code image is stored in Amazon ECR.
	Image *string `pulumi:"image"`
	// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see [Using a Private Docker Registry for Real-Time Inference Containers](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-containers-inference-private.html). see Image Config.
	ImageConfig *ModelPrimaryContainerImageConfig `pulumi:"imageConfig"`
	// The container hosts value `SingleModel/MultiModel`. The default value is `SingleModel`.
	Mode *string `pulumi:"mode"`
	// The URL for the S3 location where model artifacts are stored.
	ModelDataUrl *string `pulumi:"modelDataUrl"`
	// The Amazon Resource Name (ARN) of the model package to use to create the model.
	ModelPackageName *string `pulumi:"modelPackageName"`
}

type ModelPrimaryContainerArgs struct {
	// The DNS host name for the container.
	ContainerHostname pulumix.Input[*string] `pulumi:"containerHostname"`
	// Environment variables for the Docker container.
	// A list of key value pairs.
	Environment pulumix.Input[map[string]string] `pulumi:"environment"`
	// The registry path where the inference code image is stored in Amazon ECR.
	Image pulumix.Input[*string] `pulumi:"image"`
	// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see [Using a Private Docker Registry for Real-Time Inference Containers](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-containers-inference-private.html). see Image Config.
	ImageConfig pulumix.Input[*ModelPrimaryContainerImageConfigArgs] `pulumi:"imageConfig"`
	// The container hosts value `SingleModel/MultiModel`. The default value is `SingleModel`.
	Mode pulumix.Input[*string] `pulumi:"mode"`
	// The URL for the S3 location where model artifacts are stored.
	ModelDataUrl pulumix.Input[*string] `pulumi:"modelDataUrl"`
	// The Amazon Resource Name (ARN) of the model package to use to create the model.
	ModelPackageName pulumix.Input[*string] `pulumi:"modelPackageName"`
}

func (ModelPrimaryContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPrimaryContainer)(nil)).Elem()
}

func (i ModelPrimaryContainerArgs) ToModelPrimaryContainerOutput() ModelPrimaryContainerOutput {
	return i.ToModelPrimaryContainerOutputWithContext(context.Background())
}

func (i ModelPrimaryContainerArgs) ToModelPrimaryContainerOutputWithContext(ctx context.Context) ModelPrimaryContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPrimaryContainerOutput)
}

func (i *ModelPrimaryContainerArgs) ToOutput(ctx context.Context) pulumix.Output[*ModelPrimaryContainerArgs] {
	return pulumix.Val(i)
}

type ModelPrimaryContainerOutput struct{ *pulumi.OutputState }

func (ModelPrimaryContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPrimaryContainer)(nil)).Elem()
}

func (o ModelPrimaryContainerOutput) ToModelPrimaryContainerOutput() ModelPrimaryContainerOutput {
	return o
}

func (o ModelPrimaryContainerOutput) ToModelPrimaryContainerOutputWithContext(ctx context.Context) ModelPrimaryContainerOutput {
	return o
}

func (o ModelPrimaryContainerOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPrimaryContainer] {
	return pulumix.Output[ModelPrimaryContainer]{
		OutputState: o.OutputState,
	}
}

// The DNS host name for the container.
func (o ModelPrimaryContainerOutput) ContainerHostname() pulumix.Output[*string] {
	return pulumix.Apply[ModelPrimaryContainer](o, func(v ModelPrimaryContainer) *string { return v.ContainerHostname })
}

// Environment variables for the Docker container.
// A list of key value pairs.
func (o ModelPrimaryContainerOutput) Environment() pulumix.MapOutput[string] {
	value := pulumix.Apply[ModelPrimaryContainer](o, func(v ModelPrimaryContainer) map[string]string { return v.Environment })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// The registry path where the inference code image is stored in Amazon ECR.
func (o ModelPrimaryContainerOutput) Image() pulumix.Output[*string] {
	return pulumix.Apply[ModelPrimaryContainer](o, func(v ModelPrimaryContainer) *string { return v.Image })
}

// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see [Using a Private Docker Registry for Real-Time Inference Containers](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-containers-inference-private.html). see Image Config.
func (o ModelPrimaryContainerOutput) ImageConfig() pulumix.GPtrOutput[ModelPrimaryContainerImageConfig, ModelPrimaryContainerImageConfigOutput] {
	value := pulumix.Apply[ModelPrimaryContainer](o, func(v ModelPrimaryContainer) *ModelPrimaryContainerImageConfig { return v.ImageConfig })
	return pulumix.GPtrOutput[ModelPrimaryContainerImageConfig, ModelPrimaryContainerImageConfigOutput]{OutputState: value.OutputState}
}

// The container hosts value `SingleModel/MultiModel`. The default value is `SingleModel`.
func (o ModelPrimaryContainerOutput) Mode() pulumix.Output[*string] {
	return pulumix.Apply[ModelPrimaryContainer](o, func(v ModelPrimaryContainer) *string { return v.Mode })
}

// The URL for the S3 location where model artifacts are stored.
func (o ModelPrimaryContainerOutput) ModelDataUrl() pulumix.Output[*string] {
	return pulumix.Apply[ModelPrimaryContainer](o, func(v ModelPrimaryContainer) *string { return v.ModelDataUrl })
}

// The Amazon Resource Name (ARN) of the model package to use to create the model.
func (o ModelPrimaryContainerOutput) ModelPackageName() pulumix.Output[*string] {
	return pulumix.Apply[ModelPrimaryContainer](o, func(v ModelPrimaryContainer) *string { return v.ModelPackageName })
}

type ModelPrimaryContainerImageConfig struct {
	// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: `Platform` and `Vpc`.
	RepositoryAccessMode string `pulumi:"repositoryAccessMode"`
	// Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
	RepositoryAuthConfig *ModelPrimaryContainerImageConfigRepositoryAuthConfig `pulumi:"repositoryAuthConfig"`
}

type ModelPrimaryContainerImageConfigArgs struct {
	// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: `Platform` and `Vpc`.
	RepositoryAccessMode pulumix.Input[string] `pulumi:"repositoryAccessMode"`
	// Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
	RepositoryAuthConfig pulumix.Input[*ModelPrimaryContainerImageConfigRepositoryAuthConfigArgs] `pulumi:"repositoryAuthConfig"`
}

func (ModelPrimaryContainerImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPrimaryContainerImageConfig)(nil)).Elem()
}

func (i ModelPrimaryContainerImageConfigArgs) ToModelPrimaryContainerImageConfigOutput() ModelPrimaryContainerImageConfigOutput {
	return i.ToModelPrimaryContainerImageConfigOutputWithContext(context.Background())
}

func (i ModelPrimaryContainerImageConfigArgs) ToModelPrimaryContainerImageConfigOutputWithContext(ctx context.Context) ModelPrimaryContainerImageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPrimaryContainerImageConfigOutput)
}

func (i *ModelPrimaryContainerImageConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ModelPrimaryContainerImageConfigArgs] {
	return pulumix.Val(i)
}

type ModelPrimaryContainerImageConfigOutput struct{ *pulumi.OutputState }

func (ModelPrimaryContainerImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPrimaryContainerImageConfig)(nil)).Elem()
}

func (o ModelPrimaryContainerImageConfigOutput) ToModelPrimaryContainerImageConfigOutput() ModelPrimaryContainerImageConfigOutput {
	return o
}

func (o ModelPrimaryContainerImageConfigOutput) ToModelPrimaryContainerImageConfigOutputWithContext(ctx context.Context) ModelPrimaryContainerImageConfigOutput {
	return o
}

func (o ModelPrimaryContainerImageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPrimaryContainerImageConfig] {
	return pulumix.Output[ModelPrimaryContainerImageConfig]{
		OutputState: o.OutputState,
	}
}

// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: `Platform` and `Vpc`.
func (o ModelPrimaryContainerImageConfigOutput) RepositoryAccessMode() pulumix.Output[string] {
	return pulumix.Apply[ModelPrimaryContainerImageConfig](o, func(v ModelPrimaryContainerImageConfig) string { return v.RepositoryAccessMode })
}

// Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
func (o ModelPrimaryContainerImageConfigOutput) RepositoryAuthConfig() pulumix.GPtrOutput[ModelPrimaryContainerImageConfigRepositoryAuthConfig, ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput] {
	value := pulumix.Apply[ModelPrimaryContainerImageConfig](o, func(v ModelPrimaryContainerImageConfig) *ModelPrimaryContainerImageConfigRepositoryAuthConfig {
		return v.RepositoryAuthConfig
	})
	return pulumix.GPtrOutput[ModelPrimaryContainerImageConfigRepositoryAuthConfig, ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput]{OutputState: value.OutputState}
}

type ModelPrimaryContainerImageConfigRepositoryAuthConfig struct {
	// The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see [Create a Lambda function with the console](https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html) in the _AWS Lambda Developer Guide_.
	RepositoryCredentialsProviderArn string `pulumi:"repositoryCredentialsProviderArn"`
}

type ModelPrimaryContainerImageConfigRepositoryAuthConfigArgs struct {
	// The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see [Create a Lambda function with the console](https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html) in the _AWS Lambda Developer Guide_.
	RepositoryCredentialsProviderArn pulumix.Input[string] `pulumi:"repositoryCredentialsProviderArn"`
}

func (ModelPrimaryContainerImageConfigRepositoryAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPrimaryContainerImageConfigRepositoryAuthConfig)(nil)).Elem()
}

func (i ModelPrimaryContainerImageConfigRepositoryAuthConfigArgs) ToModelPrimaryContainerImageConfigRepositoryAuthConfigOutput() ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput {
	return i.ToModelPrimaryContainerImageConfigRepositoryAuthConfigOutputWithContext(context.Background())
}

func (i ModelPrimaryContainerImageConfigRepositoryAuthConfigArgs) ToModelPrimaryContainerImageConfigRepositoryAuthConfigOutputWithContext(ctx context.Context) ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput)
}

func (i *ModelPrimaryContainerImageConfigRepositoryAuthConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ModelPrimaryContainerImageConfigRepositoryAuthConfigArgs] {
	return pulumix.Val(i)
}

type ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput struct{ *pulumi.OutputState }

func (ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelPrimaryContainerImageConfigRepositoryAuthConfig)(nil)).Elem()
}

func (o ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput) ToModelPrimaryContainerImageConfigRepositoryAuthConfigOutput() ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput {
	return o
}

func (o ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput) ToModelPrimaryContainerImageConfigRepositoryAuthConfigOutputWithContext(ctx context.Context) ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput {
	return o
}

func (o ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelPrimaryContainerImageConfigRepositoryAuthConfig] {
	return pulumix.Output[ModelPrimaryContainerImageConfigRepositoryAuthConfig]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see [Create a Lambda function with the console](https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html) in the _AWS Lambda Developer Guide_.
func (o ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput) RepositoryCredentialsProviderArn() pulumix.Output[string] {
	return pulumix.Apply[ModelPrimaryContainerImageConfigRepositoryAuthConfig](o, func(v ModelPrimaryContainerImageConfigRepositoryAuthConfig) string {
		return v.RepositoryCredentialsProviderArn
	})
}

type ModelVpcConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Subnets          []string `pulumi:"subnets"`
}

type ModelVpcConfigArgs struct {
	SecurityGroupIds pulumix.Input[[]string] `pulumi:"securityGroupIds"`
	Subnets          pulumix.Input[[]string] `pulumi:"subnets"`
}

func (ModelVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVpcConfig)(nil)).Elem()
}

func (i ModelVpcConfigArgs) ToModelVpcConfigOutput() ModelVpcConfigOutput {
	return i.ToModelVpcConfigOutputWithContext(context.Background())
}

func (i ModelVpcConfigArgs) ToModelVpcConfigOutputWithContext(ctx context.Context) ModelVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelVpcConfigOutput)
}

func (i *ModelVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ModelVpcConfigArgs] {
	return pulumix.Val(i)
}

type ModelVpcConfigOutput struct{ *pulumi.OutputState }

func (ModelVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelVpcConfig)(nil)).Elem()
}

func (o ModelVpcConfigOutput) ToModelVpcConfigOutput() ModelVpcConfigOutput {
	return o
}

func (o ModelVpcConfigOutput) ToModelVpcConfigOutputWithContext(ctx context.Context) ModelVpcConfigOutput {
	return o
}

func (o ModelVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ModelVpcConfig] {
	return pulumix.Output[ModelVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o ModelVpcConfigOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ModelVpcConfig](o, func(v ModelVpcConfig) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o ModelVpcConfigOutput) Subnets() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ModelVpcConfig](o, func(v ModelVpcConfig) []string { return v.Subnets })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type MonitoringScheduleMonitoringScheduleConfig struct {
	// The name of the monitoring job definition to schedule.
	MonitoringJobDefinitionName string `pulumi:"monitoringJobDefinitionName"`
	// The type of the monitoring job definition to schedule. Valid values are `DataQuality`, `ModelQuality`, `ModelBias` or `ModelExplainability`
	MonitoringType string `pulumi:"monitoringType"`
	// Configures the monitoring schedule. Fields are documented below.
	ScheduleConfig *MonitoringScheduleMonitoringScheduleConfigScheduleConfig `pulumi:"scheduleConfig"`
}

type MonitoringScheduleMonitoringScheduleConfigArgs struct {
	// The name of the monitoring job definition to schedule.
	MonitoringJobDefinitionName pulumix.Input[string] `pulumi:"monitoringJobDefinitionName"`
	// The type of the monitoring job definition to schedule. Valid values are `DataQuality`, `ModelQuality`, `ModelBias` or `ModelExplainability`
	MonitoringType pulumix.Input[string] `pulumi:"monitoringType"`
	// Configures the monitoring schedule. Fields are documented below.
	ScheduleConfig pulumix.Input[*MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs] `pulumi:"scheduleConfig"`
}

func (MonitoringScheduleMonitoringScheduleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringScheduleConfig)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringScheduleConfigArgs) ToMonitoringScheduleMonitoringScheduleConfigOutput() MonitoringScheduleMonitoringScheduleConfigOutput {
	return i.ToMonitoringScheduleMonitoringScheduleConfigOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringScheduleConfigArgs) ToMonitoringScheduleMonitoringScheduleConfigOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringScheduleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringScheduleConfigOutput)
}

func (i *MonitoringScheduleMonitoringScheduleConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringScheduleConfigArgs] {
	return pulumix.Val(i)
}

type MonitoringScheduleMonitoringScheduleConfigOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringScheduleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringScheduleConfig)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringScheduleConfigOutput) ToMonitoringScheduleMonitoringScheduleConfigOutput() MonitoringScheduleMonitoringScheduleConfigOutput {
	return o
}

func (o MonitoringScheduleMonitoringScheduleConfigOutput) ToMonitoringScheduleMonitoringScheduleConfigOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringScheduleConfigOutput {
	return o
}

func (o MonitoringScheduleMonitoringScheduleConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringScheduleConfig] {
	return pulumix.Output[MonitoringScheduleMonitoringScheduleConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the monitoring job definition to schedule.
func (o MonitoringScheduleMonitoringScheduleConfigOutput) MonitoringJobDefinitionName() pulumix.Output[string] {
	return pulumix.Apply[MonitoringScheduleMonitoringScheduleConfig](o, func(v MonitoringScheduleMonitoringScheduleConfig) string { return v.MonitoringJobDefinitionName })
}

// The type of the monitoring job definition to schedule. Valid values are `DataQuality`, `ModelQuality`, `ModelBias` or `ModelExplainability`
func (o MonitoringScheduleMonitoringScheduleConfigOutput) MonitoringType() pulumix.Output[string] {
	return pulumix.Apply[MonitoringScheduleMonitoringScheduleConfig](o, func(v MonitoringScheduleMonitoringScheduleConfig) string { return v.MonitoringType })
}

// Configures the monitoring schedule. Fields are documented below.
func (o MonitoringScheduleMonitoringScheduleConfigOutput) ScheduleConfig() pulumix.GPtrOutput[MonitoringScheduleMonitoringScheduleConfigScheduleConfig, MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput] {
	value := pulumix.Apply[MonitoringScheduleMonitoringScheduleConfig](o, func(v MonitoringScheduleMonitoringScheduleConfig) *MonitoringScheduleMonitoringScheduleConfigScheduleConfig {
		return v.ScheduleConfig
	})
	return pulumix.GPtrOutput[MonitoringScheduleMonitoringScheduleConfigScheduleConfig, MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput]{OutputState: value.OutputState}
}

type MonitoringScheduleMonitoringScheduleConfigScheduleConfig struct {
	// A cron expression that describes details about the monitoring schedule. For example, and hourly schedule would be `cron(0 * ? * * *)`.
	ScheduleExpression string `pulumi:"scheduleExpression"`
}

type MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs struct {
	// A cron expression that describes details about the monitoring schedule. For example, and hourly schedule would be `cron(0 * ? * * *)`.
	ScheduleExpression pulumix.Input[string] `pulumi:"scheduleExpression"`
}

func (MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringScheduleConfigScheduleConfig)(nil)).Elem()
}

func (i MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs) ToMonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput() MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput {
	return i.ToMonitoringScheduleMonitoringScheduleConfigScheduleConfigOutputWithContext(context.Background())
}

func (i MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs) ToMonitoringScheduleMonitoringScheduleConfigScheduleConfigOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput)
}

func (i *MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*MonitoringScheduleMonitoringScheduleConfigScheduleConfigArgs] {
	return pulumix.Val(i)
}

type MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput struct{ *pulumi.OutputState }

func (MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringScheduleMonitoringScheduleConfigScheduleConfig)(nil)).Elem()
}

func (o MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput) ToMonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput() MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput {
	return o
}

func (o MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput) ToMonitoringScheduleMonitoringScheduleConfigScheduleConfigOutputWithContext(ctx context.Context) MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput {
	return o
}

func (o MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringScheduleMonitoringScheduleConfigScheduleConfig] {
	return pulumix.Output[MonitoringScheduleMonitoringScheduleConfigScheduleConfig]{
		OutputState: o.OutputState,
	}
}

// A cron expression that describes details about the monitoring schedule. For example, and hourly schedule would be `cron(0 * ? * * *)`.
func (o MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput) ScheduleExpression() pulumix.Output[string] {
	return pulumix.Apply[MonitoringScheduleMonitoringScheduleConfigScheduleConfig](o, func(v MonitoringScheduleMonitoringScheduleConfigScheduleConfig) string { return v.ScheduleExpression })
}

type NotebookInstanceInstanceMetadataServiceConfiguration struct {
	// Indicates the minimum IMDS version that the notebook instance supports. When passed "1" is passed. This means that both IMDSv1 and IMDSv2 are supported. Valid values are `1` and `2`.
	MinimumInstanceMetadataServiceVersion *string `pulumi:"minimumInstanceMetadataServiceVersion"`
}

type NotebookInstanceInstanceMetadataServiceConfigurationArgs struct {
	// Indicates the minimum IMDS version that the notebook instance supports. When passed "1" is passed. This means that both IMDSv1 and IMDSv2 are supported. Valid values are `1` and `2`.
	MinimumInstanceMetadataServiceVersion pulumix.Input[*string] `pulumi:"minimumInstanceMetadataServiceVersion"`
}

func (NotebookInstanceInstanceMetadataServiceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceInstanceMetadataServiceConfiguration)(nil)).Elem()
}

func (i NotebookInstanceInstanceMetadataServiceConfigurationArgs) ToNotebookInstanceInstanceMetadataServiceConfigurationOutput() NotebookInstanceInstanceMetadataServiceConfigurationOutput {
	return i.ToNotebookInstanceInstanceMetadataServiceConfigurationOutputWithContext(context.Background())
}

func (i NotebookInstanceInstanceMetadataServiceConfigurationArgs) ToNotebookInstanceInstanceMetadataServiceConfigurationOutputWithContext(ctx context.Context) NotebookInstanceInstanceMetadataServiceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebookInstanceInstanceMetadataServiceConfigurationOutput)
}

func (i *NotebookInstanceInstanceMetadataServiceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*NotebookInstanceInstanceMetadataServiceConfigurationArgs] {
	return pulumix.Val(i)
}

type NotebookInstanceInstanceMetadataServiceConfigurationOutput struct{ *pulumi.OutputState }

func (NotebookInstanceInstanceMetadataServiceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceInstanceMetadataServiceConfiguration)(nil)).Elem()
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) ToNotebookInstanceInstanceMetadataServiceConfigurationOutput() NotebookInstanceInstanceMetadataServiceConfigurationOutput {
	return o
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) ToNotebookInstanceInstanceMetadataServiceConfigurationOutputWithContext(ctx context.Context) NotebookInstanceInstanceMetadataServiceConfigurationOutput {
	return o
}

func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[NotebookInstanceInstanceMetadataServiceConfiguration] {
	return pulumix.Output[NotebookInstanceInstanceMetadataServiceConfiguration]{
		OutputState: o.OutputState,
	}
}

// Indicates the minimum IMDS version that the notebook instance supports. When passed "1" is passed. This means that both IMDSv1 and IMDSv2 are supported. Valid values are `1` and `2`.
func (o NotebookInstanceInstanceMetadataServiceConfigurationOutput) MinimumInstanceMetadataServiceVersion() pulumix.Output[*string] {
	return pulumix.Apply[NotebookInstanceInstanceMetadataServiceConfiguration](o, func(v NotebookInstanceInstanceMetadataServiceConfiguration) *string {
		return v.MinimumInstanceMetadataServiceVersion
	})
}

type PipelineParallelismConfiguration struct {
	// The max number of steps that can be executed in parallel.
	MaxParallelExecutionSteps int `pulumi:"maxParallelExecutionSteps"`
}

type PipelineParallelismConfigurationArgs struct {
	// The max number of steps that can be executed in parallel.
	MaxParallelExecutionSteps pulumix.Input[int] `pulumi:"maxParallelExecutionSteps"`
}

func (PipelineParallelismConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineParallelismConfiguration)(nil)).Elem()
}

func (i PipelineParallelismConfigurationArgs) ToPipelineParallelismConfigurationOutput() PipelineParallelismConfigurationOutput {
	return i.ToPipelineParallelismConfigurationOutputWithContext(context.Background())
}

func (i PipelineParallelismConfigurationArgs) ToPipelineParallelismConfigurationOutputWithContext(ctx context.Context) PipelineParallelismConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineParallelismConfigurationOutput)
}

func (i *PipelineParallelismConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*PipelineParallelismConfigurationArgs] {
	return pulumix.Val(i)
}

type PipelineParallelismConfigurationOutput struct{ *pulumi.OutputState }

func (PipelineParallelismConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineParallelismConfiguration)(nil)).Elem()
}

func (o PipelineParallelismConfigurationOutput) ToPipelineParallelismConfigurationOutput() PipelineParallelismConfigurationOutput {
	return o
}

func (o PipelineParallelismConfigurationOutput) ToPipelineParallelismConfigurationOutputWithContext(ctx context.Context) PipelineParallelismConfigurationOutput {
	return o
}

func (o PipelineParallelismConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[PipelineParallelismConfiguration] {
	return pulumix.Output[PipelineParallelismConfiguration]{
		OutputState: o.OutputState,
	}
}

// The max number of steps that can be executed in parallel.
func (o PipelineParallelismConfigurationOutput) MaxParallelExecutionSteps() pulumix.Output[int] {
	return pulumix.Apply[PipelineParallelismConfiguration](o, func(v PipelineParallelismConfiguration) int { return v.MaxParallelExecutionSteps })
}

type PipelinePipelineDefinitionS3Location struct {
	// Name of the S3 bucket.
	Bucket string `pulumi:"bucket"`
	// The object key (or key name) uniquely identifies the object in an S3 bucket.
	ObjectKey string `pulumi:"objectKey"`
	// Version Id of the pipeline definition file. If not specified, Amazon SageMaker will retrieve the latest version.
	VersionId *string `pulumi:"versionId"`
}

type PipelinePipelineDefinitionS3LocationArgs struct {
	// Name of the S3 bucket.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// The object key (or key name) uniquely identifies the object in an S3 bucket.
	ObjectKey pulumix.Input[string] `pulumi:"objectKey"`
	// Version Id of the pipeline definition file. If not specified, Amazon SageMaker will retrieve the latest version.
	VersionId pulumix.Input[*string] `pulumi:"versionId"`
}

func (PipelinePipelineDefinitionS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelinePipelineDefinitionS3Location)(nil)).Elem()
}

func (i PipelinePipelineDefinitionS3LocationArgs) ToPipelinePipelineDefinitionS3LocationOutput() PipelinePipelineDefinitionS3LocationOutput {
	return i.ToPipelinePipelineDefinitionS3LocationOutputWithContext(context.Background())
}

func (i PipelinePipelineDefinitionS3LocationArgs) ToPipelinePipelineDefinitionS3LocationOutputWithContext(ctx context.Context) PipelinePipelineDefinitionS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelinePipelineDefinitionS3LocationOutput)
}

func (i *PipelinePipelineDefinitionS3LocationArgs) ToOutput(ctx context.Context) pulumix.Output[*PipelinePipelineDefinitionS3LocationArgs] {
	return pulumix.Val(i)
}

type PipelinePipelineDefinitionS3LocationOutput struct{ *pulumi.OutputState }

func (PipelinePipelineDefinitionS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelinePipelineDefinitionS3Location)(nil)).Elem()
}

func (o PipelinePipelineDefinitionS3LocationOutput) ToPipelinePipelineDefinitionS3LocationOutput() PipelinePipelineDefinitionS3LocationOutput {
	return o
}

func (o PipelinePipelineDefinitionS3LocationOutput) ToPipelinePipelineDefinitionS3LocationOutputWithContext(ctx context.Context) PipelinePipelineDefinitionS3LocationOutput {
	return o
}

func (o PipelinePipelineDefinitionS3LocationOutput) ToOutput(ctx context.Context) pulumix.Output[PipelinePipelineDefinitionS3Location] {
	return pulumix.Output[PipelinePipelineDefinitionS3Location]{
		OutputState: o.OutputState,
	}
}

// Name of the S3 bucket.
func (o PipelinePipelineDefinitionS3LocationOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[PipelinePipelineDefinitionS3Location](o, func(v PipelinePipelineDefinitionS3Location) string { return v.Bucket })
}

// The object key (or key name) uniquely identifies the object in an S3 bucket.
func (o PipelinePipelineDefinitionS3LocationOutput) ObjectKey() pulumix.Output[string] {
	return pulumix.Apply[PipelinePipelineDefinitionS3Location](o, func(v PipelinePipelineDefinitionS3Location) string { return v.ObjectKey })
}

// Version Id of the pipeline definition file. If not specified, Amazon SageMaker will retrieve the latest version.
func (o PipelinePipelineDefinitionS3LocationOutput) VersionId() pulumix.Output[*string] {
	return pulumix.Apply[PipelinePipelineDefinitionS3Location](o, func(v PipelinePipelineDefinitionS3Location) *string { return v.VersionId })
}

type ProjectServiceCatalogProvisioningDetails struct {
	// The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path.
	PathId *string `pulumi:"pathId"`
	// The ID of the product to provision.
	ProductId string `pulumi:"productId"`
	// The ID of the provisioning artifact.
	ProvisioningArtifactId *string `pulumi:"provisioningArtifactId"`
	// A list of key value pairs that you specify when you provision a product. See Provisioning Parameter below.
	ProvisioningParameters []ProjectServiceCatalogProvisioningDetailsProvisioningParameter `pulumi:"provisioningParameters"`
}

type ProjectServiceCatalogProvisioningDetailsArgs struct {
	// The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path.
	PathId pulumix.Input[*string] `pulumi:"pathId"`
	// The ID of the product to provision.
	ProductId pulumix.Input[string] `pulumi:"productId"`
	// The ID of the provisioning artifact.
	ProvisioningArtifactId pulumix.Input[*string] `pulumi:"provisioningArtifactId"`
	// A list of key value pairs that you specify when you provision a product. See Provisioning Parameter below.
	ProvisioningParameters pulumix.Input[[]*ProjectServiceCatalogProvisioningDetailsProvisioningParameterArgs] `pulumi:"provisioningParameters"`
}

func (ProjectServiceCatalogProvisioningDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectServiceCatalogProvisioningDetails)(nil)).Elem()
}

func (i ProjectServiceCatalogProvisioningDetailsArgs) ToProjectServiceCatalogProvisioningDetailsOutput() ProjectServiceCatalogProvisioningDetailsOutput {
	return i.ToProjectServiceCatalogProvisioningDetailsOutputWithContext(context.Background())
}

func (i ProjectServiceCatalogProvisioningDetailsArgs) ToProjectServiceCatalogProvisioningDetailsOutputWithContext(ctx context.Context) ProjectServiceCatalogProvisioningDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectServiceCatalogProvisioningDetailsOutput)
}

func (i *ProjectServiceCatalogProvisioningDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[*ProjectServiceCatalogProvisioningDetailsArgs] {
	return pulumix.Val(i)
}

type ProjectServiceCatalogProvisioningDetailsOutput struct{ *pulumi.OutputState }

func (ProjectServiceCatalogProvisioningDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectServiceCatalogProvisioningDetails)(nil)).Elem()
}

func (o ProjectServiceCatalogProvisioningDetailsOutput) ToProjectServiceCatalogProvisioningDetailsOutput() ProjectServiceCatalogProvisioningDetailsOutput {
	return o
}

func (o ProjectServiceCatalogProvisioningDetailsOutput) ToProjectServiceCatalogProvisioningDetailsOutputWithContext(ctx context.Context) ProjectServiceCatalogProvisioningDetailsOutput {
	return o
}

func (o ProjectServiceCatalogProvisioningDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectServiceCatalogProvisioningDetails] {
	return pulumix.Output[ProjectServiceCatalogProvisioningDetails]{
		OutputState: o.OutputState,
	}
}

// The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path.
func (o ProjectServiceCatalogProvisioningDetailsOutput) PathId() pulumix.Output[*string] {
	return pulumix.Apply[ProjectServiceCatalogProvisioningDetails](o, func(v ProjectServiceCatalogProvisioningDetails) *string { return v.PathId })
}

// The ID of the product to provision.
func (o ProjectServiceCatalogProvisioningDetailsOutput) ProductId() pulumix.Output[string] {
	return pulumix.Apply[ProjectServiceCatalogProvisioningDetails](o, func(v ProjectServiceCatalogProvisioningDetails) string { return v.ProductId })
}

// The ID of the provisioning artifact.
func (o ProjectServiceCatalogProvisioningDetailsOutput) ProvisioningArtifactId() pulumix.Output[*string] {
	return pulumix.Apply[ProjectServiceCatalogProvisioningDetails](o, func(v ProjectServiceCatalogProvisioningDetails) *string { return v.ProvisioningArtifactId })
}

// A list of key value pairs that you specify when you provision a product. See Provisioning Parameter below.
func (o ProjectServiceCatalogProvisioningDetailsOutput) ProvisioningParameters() pulumix.GArrayOutput[ProjectServiceCatalogProvisioningDetailsProvisioningParameter, ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput] {
	value := pulumix.Apply[ProjectServiceCatalogProvisioningDetails](o, func(v ProjectServiceCatalogProvisioningDetails) []ProjectServiceCatalogProvisioningDetailsProvisioningParameter {
		return v.ProvisioningParameters
	})
	return pulumix.GArrayOutput[ProjectServiceCatalogProvisioningDetailsProvisioningParameter, ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput]{OutputState: value.OutputState}
}

type ProjectServiceCatalogProvisioningDetailsProvisioningParameter struct {
	// The key that identifies a provisioning parameter.
	Key string `pulumi:"key"`
	// The value of the provisioning parameter.
	Value *string `pulumi:"value"`
}

type ProjectServiceCatalogProvisioningDetailsProvisioningParameterArgs struct {
	// The key that identifies a provisioning parameter.
	Key pulumix.Input[string] `pulumi:"key"`
	// The value of the provisioning parameter.
	Value pulumix.Input[*string] `pulumi:"value"`
}

func (ProjectServiceCatalogProvisioningDetailsProvisioningParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectServiceCatalogProvisioningDetailsProvisioningParameter)(nil)).Elem()
}

func (i ProjectServiceCatalogProvisioningDetailsProvisioningParameterArgs) ToProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput() ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput {
	return i.ToProjectServiceCatalogProvisioningDetailsProvisioningParameterOutputWithContext(context.Background())
}

func (i ProjectServiceCatalogProvisioningDetailsProvisioningParameterArgs) ToProjectServiceCatalogProvisioningDetailsProvisioningParameterOutputWithContext(ctx context.Context) ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput)
}

func (i *ProjectServiceCatalogProvisioningDetailsProvisioningParameterArgs) ToOutput(ctx context.Context) pulumix.Output[*ProjectServiceCatalogProvisioningDetailsProvisioningParameterArgs] {
	return pulumix.Val(i)
}

type ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput struct{ *pulumi.OutputState }

func (ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectServiceCatalogProvisioningDetailsProvisioningParameter)(nil)).Elem()
}

func (o ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput) ToProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput() ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput {
	return o
}

func (o ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput) ToProjectServiceCatalogProvisioningDetailsProvisioningParameterOutputWithContext(ctx context.Context) ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput {
	return o
}

func (o ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput) ToOutput(ctx context.Context) pulumix.Output[ProjectServiceCatalogProvisioningDetailsProvisioningParameter] {
	return pulumix.Output[ProjectServiceCatalogProvisioningDetailsProvisioningParameter]{
		OutputState: o.OutputState,
	}
}

// The key that identifies a provisioning parameter.
func (o ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[ProjectServiceCatalogProvisioningDetailsProvisioningParameter](o, func(v ProjectServiceCatalogProvisioningDetailsProvisioningParameter) string { return v.Key })
}

// The value of the provisioning parameter.
func (o ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput) Value() pulumix.Output[*string] {
	return pulumix.Apply[ProjectServiceCatalogProvisioningDetailsProvisioningParameter](o, func(v ProjectServiceCatalogProvisioningDetailsProvisioningParameter) *string { return v.Value })
}

type SpaceSpaceSettings struct {
	// The Jupyter server's app settings. See Jupyter Server App Settings below.
	JupyterServerAppSettings *SpaceSpaceSettingsJupyterServerAppSettings `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings. See Kernel Gateway App Settings below.
	KernelGatewayAppSettings *SpaceSpaceSettingsKernelGatewayAppSettings `pulumi:"kernelGatewayAppSettings"`
}

type SpaceSpaceSettingsArgs struct {
	// The Jupyter server's app settings. See Jupyter Server App Settings below.
	JupyterServerAppSettings pulumix.Input[*SpaceSpaceSettingsJupyterServerAppSettingsArgs] `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings. See Kernel Gateway App Settings below.
	KernelGatewayAppSettings pulumix.Input[*SpaceSpaceSettingsKernelGatewayAppSettingsArgs] `pulumi:"kernelGatewayAppSettings"`
}

func (SpaceSpaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettings)(nil)).Elem()
}

func (i SpaceSpaceSettingsArgs) ToSpaceSpaceSettingsOutput() SpaceSpaceSettingsOutput {
	return i.ToSpaceSpaceSettingsOutputWithContext(context.Background())
}

func (i SpaceSpaceSettingsArgs) ToSpaceSpaceSettingsOutputWithContext(ctx context.Context) SpaceSpaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSpaceSettingsOutput)
}

func (i *SpaceSpaceSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpaceSpaceSettingsArgs] {
	return pulumix.Val(i)
}

type SpaceSpaceSettingsOutput struct{ *pulumi.OutputState }

func (SpaceSpaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettings)(nil)).Elem()
}

func (o SpaceSpaceSettingsOutput) ToSpaceSpaceSettingsOutput() SpaceSpaceSettingsOutput {
	return o
}

func (o SpaceSpaceSettingsOutput) ToSpaceSpaceSettingsOutputWithContext(ctx context.Context) SpaceSpaceSettingsOutput {
	return o
}

func (o SpaceSpaceSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceSpaceSettings] {
	return pulumix.Output[SpaceSpaceSettings]{
		OutputState: o.OutputState,
	}
}

// The Jupyter server's app settings. See Jupyter Server App Settings below.
func (o SpaceSpaceSettingsOutput) JupyterServerAppSettings() pulumix.GPtrOutput[SpaceSpaceSettingsJupyterServerAppSettings, SpaceSpaceSettingsJupyterServerAppSettingsOutput] {
	value := pulumix.Apply[SpaceSpaceSettings](o, func(v SpaceSpaceSettings) *SpaceSpaceSettingsJupyterServerAppSettings {
		return v.JupyterServerAppSettings
	})
	return pulumix.GPtrOutput[SpaceSpaceSettingsJupyterServerAppSettings, SpaceSpaceSettingsJupyterServerAppSettingsOutput]{OutputState: value.OutputState}
}

// The kernel gateway app settings. See Kernel Gateway App Settings below.
func (o SpaceSpaceSettingsOutput) KernelGatewayAppSettings() pulumix.GPtrOutput[SpaceSpaceSettingsKernelGatewayAppSettings, SpaceSpaceSettingsKernelGatewayAppSettingsOutput] {
	value := pulumix.Apply[SpaceSpaceSettings](o, func(v SpaceSpaceSettings) *SpaceSpaceSettingsKernelGatewayAppSettings {
		return v.KernelGatewayAppSettings
	})
	return pulumix.GPtrOutput[SpaceSpaceSettingsKernelGatewayAppSettings, SpaceSpaceSettingsKernelGatewayAppSettingsOutput]{OutputState: value.OutputState}
}

type SpaceSpaceSettingsJupyterServerAppSettings struct {
	// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
	CodeRepositories []SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository `pulumi:"codeRepositories"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

type SpaceSpaceSettingsJupyterServerAppSettingsArgs struct {
	// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
	CodeRepositories pulumix.Input[[]*SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs] `pulumi:"codeRepositories"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns pulumix.Input[[]string] `pulumi:"lifecycleConfigArns"`
}

func (SpaceSpaceSettingsJupyterServerAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsJupyterServerAppSettings)(nil)).Elem()
}

func (i SpaceSpaceSettingsJupyterServerAppSettingsArgs) ToSpaceSpaceSettingsJupyterServerAppSettingsOutput() SpaceSpaceSettingsJupyterServerAppSettingsOutput {
	return i.ToSpaceSpaceSettingsJupyterServerAppSettingsOutputWithContext(context.Background())
}

func (i SpaceSpaceSettingsJupyterServerAppSettingsArgs) ToSpaceSpaceSettingsJupyterServerAppSettingsOutputWithContext(ctx context.Context) SpaceSpaceSettingsJupyterServerAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSpaceSettingsJupyterServerAppSettingsOutput)
}

func (i *SpaceSpaceSettingsJupyterServerAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpaceSpaceSettingsJupyterServerAppSettingsArgs] {
	return pulumix.Val(i)
}

type SpaceSpaceSettingsJupyterServerAppSettingsOutput struct{ *pulumi.OutputState }

func (SpaceSpaceSettingsJupyterServerAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsJupyterServerAppSettings)(nil)).Elem()
}

func (o SpaceSpaceSettingsJupyterServerAppSettingsOutput) ToSpaceSpaceSettingsJupyterServerAppSettingsOutput() SpaceSpaceSettingsJupyterServerAppSettingsOutput {
	return o
}

func (o SpaceSpaceSettingsJupyterServerAppSettingsOutput) ToSpaceSpaceSettingsJupyterServerAppSettingsOutputWithContext(ctx context.Context) SpaceSpaceSettingsJupyterServerAppSettingsOutput {
	return o
}

func (o SpaceSpaceSettingsJupyterServerAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceSpaceSettingsJupyterServerAppSettings] {
	return pulumix.Output[SpaceSpaceSettingsJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
func (o SpaceSpaceSettingsJupyterServerAppSettingsOutput) CodeRepositories() pulumix.GArrayOutput[SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository, SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput] {
	value := pulumix.Apply[SpaceSpaceSettingsJupyterServerAppSettings](o, func(v SpaceSpaceSettingsJupyterServerAppSettings) []SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository {
		return v.CodeRepositories
	})
	return pulumix.GArrayOutput[SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository, SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o SpaceSpaceSettingsJupyterServerAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec, SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[SpaceSpaceSettingsJupyterServerAppSettings](o, func(v SpaceSpaceSettingsJupyterServerAppSettings) SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec, SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
func (o SpaceSpaceSettingsJupyterServerAppSettingsOutput) LifecycleConfigArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpaceSpaceSettingsJupyterServerAppSettings](o, func(v SpaceSpaceSettingsJupyterServerAppSettings) []string { return v.LifecycleConfigArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository struct {
	// The URL of the Git repository.
	RepositoryUrl string `pulumi:"repositoryUrl"`
}

type SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs struct {
	// The URL of the Git repository.
	RepositoryUrl pulumix.Input[string] `pulumi:"repositoryUrl"`
}

func (SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository)(nil)).Elem()
}

func (i SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToSpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput() SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return i.ToSpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(context.Background())
}

func (i SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToSpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(ctx context.Context) SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput)
}

func (i *SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToOutput(ctx context.Context) pulumix.Output[*SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryArgs] {
	return pulumix.Val(i)
}

type SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput struct{ *pulumi.OutputState }

func (SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository)(nil)).Elem()
}

func (o SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToSpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput() SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return o
}

func (o SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToSpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(ctx context.Context) SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return o
}

func (o SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository] {
	return pulumix.Output[SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository]{
		OutputState: o.OutputState,
	}
}

// The URL of the Git repository.
func (o SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput) RepositoryUrl() pulumix.Output[string] {
	return pulumix.Apply[SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository](o, func(v SpaceSpaceSettingsJupyterServerAppSettingsCodeRepository) string { return v.RepositoryUrl })
}

type SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs struct {
	// The instance type.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToSpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput() SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return i.ToSpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToSpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput)
}

func (i *SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToSpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput() SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToSpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec] {
	return pulumix.Output[SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type.
func (o SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec) *string { return v.InstanceType })
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
func (o SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type SpaceSpaceSettingsKernelGatewayAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages []SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

type SpaceSpaceSettingsKernelGatewayAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages pulumix.Input[[]*SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageArgs] `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns pulumix.Input[[]string] `pulumi:"lifecycleConfigArns"`
}

func (SpaceSpaceSettingsKernelGatewayAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsKernelGatewayAppSettings)(nil)).Elem()
}

func (i SpaceSpaceSettingsKernelGatewayAppSettingsArgs) ToSpaceSpaceSettingsKernelGatewayAppSettingsOutput() SpaceSpaceSettingsKernelGatewayAppSettingsOutput {
	return i.ToSpaceSpaceSettingsKernelGatewayAppSettingsOutputWithContext(context.Background())
}

func (i SpaceSpaceSettingsKernelGatewayAppSettingsArgs) ToSpaceSpaceSettingsKernelGatewayAppSettingsOutputWithContext(ctx context.Context) SpaceSpaceSettingsKernelGatewayAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSpaceSettingsKernelGatewayAppSettingsOutput)
}

func (i *SpaceSpaceSettingsKernelGatewayAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpaceSpaceSettingsKernelGatewayAppSettingsArgs] {
	return pulumix.Val(i)
}

type SpaceSpaceSettingsKernelGatewayAppSettingsOutput struct{ *pulumi.OutputState }

func (SpaceSpaceSettingsKernelGatewayAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsKernelGatewayAppSettings)(nil)).Elem()
}

func (o SpaceSpaceSettingsKernelGatewayAppSettingsOutput) ToSpaceSpaceSettingsKernelGatewayAppSettingsOutput() SpaceSpaceSettingsKernelGatewayAppSettingsOutput {
	return o
}

func (o SpaceSpaceSettingsKernelGatewayAppSettingsOutput) ToSpaceSpaceSettingsKernelGatewayAppSettingsOutputWithContext(ctx context.Context) SpaceSpaceSettingsKernelGatewayAppSettingsOutput {
	return o
}

func (o SpaceSpaceSettingsKernelGatewayAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceSpaceSettingsKernelGatewayAppSettings] {
	return pulumix.Output[SpaceSpaceSettingsKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsOutput) CustomImages() pulumix.GArrayOutput[SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage, SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput] {
	value := pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettings](o, func(v SpaceSpaceSettingsKernelGatewayAppSettings) []SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage {
		return v.CustomImages
	})
	return pulumix.GArrayOutput[SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage, SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec, SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettings](o, func(v SpaceSpaceSettingsKernelGatewayAppSettings) SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec, SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsOutput) LifecycleConfigArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettings](o, func(v SpaceSpaceSettingsKernelGatewayAppSettings) []string { return v.LifecycleConfigArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage struct {
	// The name of the App Image Config.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName string `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber *int `pulumi:"imageVersionNumber"`
}

type SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageArgs struct {
	// The name of the App Image Config.
	AppImageConfigName pulumix.Input[string] `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName pulumix.Input[string] `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber pulumix.Input[*int] `pulumi:"imageVersionNumber"`
}

func (SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage)(nil)).Elem()
}

func (i SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageArgs) ToSpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput() SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput {
	return i.ToSpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(context.Background())
}

func (i SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageArgs) ToSpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(ctx context.Context) SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput)
}

func (i *SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageArgs) ToOutput(ctx context.Context) pulumix.Output[*SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageArgs] {
	return pulumix.Val(i)
}

type SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput struct{ *pulumi.OutputState }

func (SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage)(nil)).Elem()
}

func (o SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ToSpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput() SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput {
	return o
}

func (o SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ToSpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(ctx context.Context) SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput {
	return o
}

func (o SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage] {
	return pulumix.Output[SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage]{
		OutputState: o.OutputState,
	}
}

// The name of the App Image Config.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) AppImageConfigName() pulumix.Output[string] {
	return pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage](o, func(v SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage) string { return v.AppImageConfigName })
}

// The name of the Custom Image.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ImageName() pulumix.Output[string] {
	return pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage](o, func(v SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage) string { return v.ImageName })
}

// The version number of the Custom Image.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput) ImageVersionNumber() pulumix.Output[*int] {
	return pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage](o, func(v SpaceSpaceSettingsKernelGatewayAppSettingsCustomImage) *int { return v.ImageVersionNumber })
}

type SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs struct {
	// The instance type.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToSpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput() SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return i.ToSpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToSpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput)
}

func (i *SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToSpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput() SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToSpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec] {
	return pulumix.Output[SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string { return v.InstanceType })
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type UserProfileUserSettings struct {
	// The Canvas app settings. See Canvas App Settings below.
	CanvasAppSettings *UserProfileUserSettingsCanvasAppSettings `pulumi:"canvasAppSettings"`
	// The execution role ARN for the user.
	ExecutionRole string `pulumi:"executionRole"`
	// The Jupyter server's app settings. See Jupyter Server App Settings below.
	JupyterServerAppSettings *UserProfileUserSettingsJupyterServerAppSettings `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings. See Kernel Gateway App Settings below.
	KernelGatewayAppSettings *UserProfileUserSettingsKernelGatewayAppSettings `pulumi:"kernelGatewayAppSettings"`
	// The RSession app settings. See RSession App Settings below.
	RSessionAppSettings *UserProfileUserSettingsRSessionAppSettings `pulumi:"rSessionAppSettings"`
	// A collection of settings that configure user interaction with the RStudioServerPro app. See RStudio Server Pro App Settings below.
	RStudioServerProAppSettings *UserProfileUserSettingsRStudioServerProAppSettings `pulumi:"rStudioServerProAppSettings"`
	// The security groups.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The sharing settings. See Sharing Settings below.
	SharingSettings *UserProfileUserSettingsSharingSettings `pulumi:"sharingSettings"`
	// The TensorBoard app settings. See TensorBoard App Settings below.
	TensorBoardAppSettings *UserProfileUserSettingsTensorBoardAppSettings `pulumi:"tensorBoardAppSettings"`
}

type UserProfileUserSettingsArgs struct {
	// The Canvas app settings. See Canvas App Settings below.
	CanvasAppSettings pulumix.Input[*UserProfileUserSettingsCanvasAppSettingsArgs] `pulumi:"canvasAppSettings"`
	// The execution role ARN for the user.
	ExecutionRole pulumix.Input[string] `pulumi:"executionRole"`
	// The Jupyter server's app settings. See Jupyter Server App Settings below.
	JupyterServerAppSettings pulumix.Input[*UserProfileUserSettingsJupyterServerAppSettingsArgs] `pulumi:"jupyterServerAppSettings"`
	// The kernel gateway app settings. See Kernel Gateway App Settings below.
	KernelGatewayAppSettings pulumix.Input[*UserProfileUserSettingsKernelGatewayAppSettingsArgs] `pulumi:"kernelGatewayAppSettings"`
	// The RSession app settings. See RSession App Settings below.
	RSessionAppSettings pulumix.Input[*UserProfileUserSettingsRSessionAppSettingsArgs] `pulumi:"rSessionAppSettings"`
	// A collection of settings that configure user interaction with the RStudioServerPro app. See RStudio Server Pro App Settings below.
	RStudioServerProAppSettings pulumix.Input[*UserProfileUserSettingsRStudioServerProAppSettingsArgs] `pulumi:"rStudioServerProAppSettings"`
	// The security groups.
	SecurityGroups pulumix.Input[[]string] `pulumi:"securityGroups"`
	// The sharing settings. See Sharing Settings below.
	SharingSettings pulumix.Input[*UserProfileUserSettingsSharingSettingsArgs] `pulumi:"sharingSettings"`
	// The TensorBoard app settings. See TensorBoard App Settings below.
	TensorBoardAppSettings pulumix.Input[*UserProfileUserSettingsTensorBoardAppSettingsArgs] `pulumi:"tensorBoardAppSettings"`
}

func (UserProfileUserSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsArgs) ToUserProfileUserSettingsOutput() UserProfileUserSettingsOutput {
	return i.ToUserProfileUserSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsArgs) ToUserProfileUserSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsOutput)
}

func (i *UserProfileUserSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsOutput) ToUserProfileUserSettingsOutput() UserProfileUserSettingsOutput {
	return o
}

func (o UserProfileUserSettingsOutput) ToUserProfileUserSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsOutput {
	return o
}

func (o UserProfileUserSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettings] {
	return pulumix.Output[UserProfileUserSettings]{
		OutputState: o.OutputState,
	}
}

// The Canvas app settings. See Canvas App Settings below.
func (o UserProfileUserSettingsOutput) CanvasAppSettings() pulumix.GPtrOutput[UserProfileUserSettingsCanvasAppSettings, UserProfileUserSettingsCanvasAppSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettings](o, func(v UserProfileUserSettings) *UserProfileUserSettingsCanvasAppSettings { return v.CanvasAppSettings })
	return pulumix.GPtrOutput[UserProfileUserSettingsCanvasAppSettings, UserProfileUserSettingsCanvasAppSettingsOutput]{OutputState: value.OutputState}
}

// The execution role ARN for the user.
func (o UserProfileUserSettingsOutput) ExecutionRole() pulumix.Output[string] {
	return pulumix.Apply[UserProfileUserSettings](o, func(v UserProfileUserSettings) string { return v.ExecutionRole })
}

// The Jupyter server's app settings. See Jupyter Server App Settings below.
func (o UserProfileUserSettingsOutput) JupyterServerAppSettings() pulumix.GPtrOutput[UserProfileUserSettingsJupyterServerAppSettings, UserProfileUserSettingsJupyterServerAppSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettings](o, func(v UserProfileUserSettings) *UserProfileUserSettingsJupyterServerAppSettings {
		return v.JupyterServerAppSettings
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsJupyterServerAppSettings, UserProfileUserSettingsJupyterServerAppSettingsOutput]{OutputState: value.OutputState}
}

// The kernel gateway app settings. See Kernel Gateway App Settings below.
func (o UserProfileUserSettingsOutput) KernelGatewayAppSettings() pulumix.GPtrOutput[UserProfileUserSettingsKernelGatewayAppSettings, UserProfileUserSettingsKernelGatewayAppSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettings](o, func(v UserProfileUserSettings) *UserProfileUserSettingsKernelGatewayAppSettings {
		return v.KernelGatewayAppSettings
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsKernelGatewayAppSettings, UserProfileUserSettingsKernelGatewayAppSettingsOutput]{OutputState: value.OutputState}
}

// The RSession app settings. See RSession App Settings below.
func (o UserProfileUserSettingsOutput) RSessionAppSettings() pulumix.GPtrOutput[UserProfileUserSettingsRSessionAppSettings, UserProfileUserSettingsRSessionAppSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettings](o, func(v UserProfileUserSettings) *UserProfileUserSettingsRSessionAppSettings {
		return v.RSessionAppSettings
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsRSessionAppSettings, UserProfileUserSettingsRSessionAppSettingsOutput]{OutputState: value.OutputState}
}

// A collection of settings that configure user interaction with the RStudioServerPro app. See RStudio Server Pro App Settings below.
func (o UserProfileUserSettingsOutput) RStudioServerProAppSettings() pulumix.GPtrOutput[UserProfileUserSettingsRStudioServerProAppSettings, UserProfileUserSettingsRStudioServerProAppSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettings](o, func(v UserProfileUserSettings) *UserProfileUserSettingsRStudioServerProAppSettings {
		return v.RStudioServerProAppSettings
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsRStudioServerProAppSettings, UserProfileUserSettingsRStudioServerProAppSettingsOutput]{OutputState: value.OutputState}
}

// The security groups.
func (o UserProfileUserSettingsOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserProfileUserSettings](o, func(v UserProfileUserSettings) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The sharing settings. See Sharing Settings below.
func (o UserProfileUserSettingsOutput) SharingSettings() pulumix.GPtrOutput[UserProfileUserSettingsSharingSettings, UserProfileUserSettingsSharingSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettings](o, func(v UserProfileUserSettings) *UserProfileUserSettingsSharingSettings { return v.SharingSettings })
	return pulumix.GPtrOutput[UserProfileUserSettingsSharingSettings, UserProfileUserSettingsSharingSettingsOutput]{OutputState: value.OutputState}
}

// The TensorBoard app settings. See TensorBoard App Settings below.
func (o UserProfileUserSettingsOutput) TensorBoardAppSettings() pulumix.GPtrOutput[UserProfileUserSettingsTensorBoardAppSettings, UserProfileUserSettingsTensorBoardAppSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettings](o, func(v UserProfileUserSettings) *UserProfileUserSettingsTensorBoardAppSettings {
		return v.TensorBoardAppSettings
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsTensorBoardAppSettings, UserProfileUserSettingsTensorBoardAppSettingsOutput]{OutputState: value.OutputState}
}

type UserProfileUserSettingsCanvasAppSettings struct {
	// The model registry settings for the SageMaker Canvas application. See Model Register Settings below.
	ModelRegisterSettings *UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings `pulumi:"modelRegisterSettings"`
	// Time series forecast settings for the Canvas app. see Time Series Forecasting Settings below.
	TimeSeriesForecastingSettings *UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings `pulumi:"timeSeriesForecastingSettings"`
	// The workspace settings for the SageMaker Canvas application. See Workspace Settings below.
	WorkspaceSettings *UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings `pulumi:"workspaceSettings"`
}

type UserProfileUserSettingsCanvasAppSettingsArgs struct {
	// The model registry settings for the SageMaker Canvas application. See Model Register Settings below.
	ModelRegisterSettings pulumix.Input[*UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsArgs] `pulumi:"modelRegisterSettings"`
	// Time series forecast settings for the Canvas app. see Time Series Forecasting Settings below.
	TimeSeriesForecastingSettings pulumix.Input[*UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs] `pulumi:"timeSeriesForecastingSettings"`
	// The workspace settings for the SageMaker Canvas application. See Workspace Settings below.
	WorkspaceSettings pulumix.Input[*UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsArgs] `pulumi:"workspaceSettings"`
}

func (UserProfileUserSettingsCanvasAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsCanvasAppSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsCanvasAppSettingsArgs) ToUserProfileUserSettingsCanvasAppSettingsOutput() UserProfileUserSettingsCanvasAppSettingsOutput {
	return i.ToUserProfileUserSettingsCanvasAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsCanvasAppSettingsArgs) ToUserProfileUserSettingsCanvasAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsCanvasAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsCanvasAppSettingsOutput)
}

func (i *UserProfileUserSettingsCanvasAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsCanvasAppSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsCanvasAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsCanvasAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsCanvasAppSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsCanvasAppSettingsOutput) ToUserProfileUserSettingsCanvasAppSettingsOutput() UserProfileUserSettingsCanvasAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsCanvasAppSettingsOutput) ToUserProfileUserSettingsCanvasAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsCanvasAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsCanvasAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsCanvasAppSettings] {
	return pulumix.Output[UserProfileUserSettingsCanvasAppSettings]{
		OutputState: o.OutputState,
	}
}

// The model registry settings for the SageMaker Canvas application. See Model Register Settings below.
func (o UserProfileUserSettingsCanvasAppSettingsOutput) ModelRegisterSettings() pulumix.GPtrOutput[UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings, UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettingsCanvasAppSettings](o, func(v UserProfileUserSettingsCanvasAppSettings) *UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings {
		return v.ModelRegisterSettings
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings, UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput]{OutputState: value.OutputState}
}

// Time series forecast settings for the Canvas app. see Time Series Forecasting Settings below.
func (o UserProfileUserSettingsCanvasAppSettingsOutput) TimeSeriesForecastingSettings() pulumix.GPtrOutput[UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings, UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettingsCanvasAppSettings](o, func(v UserProfileUserSettingsCanvasAppSettings) *UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings {
		return v.TimeSeriesForecastingSettings
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings, UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput]{OutputState: value.OutputState}
}

// The workspace settings for the SageMaker Canvas application. See Workspace Settings below.
func (o UserProfileUserSettingsCanvasAppSettingsOutput) WorkspaceSettings() pulumix.GPtrOutput[UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings, UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput] {
	value := pulumix.Apply[UserProfileUserSettingsCanvasAppSettings](o, func(v UserProfileUserSettingsCanvasAppSettings) *UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings {
		return v.WorkspaceSettings
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings, UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput]{OutputState: value.OutputState}
}

type UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings struct {
	// The Amazon Resource Name (ARN) of the SageMaker model registry account. Required only to register model versions created by a different SageMaker Canvas AWS account than the AWS account in which SageMaker model registry is set up.
	CrossAccountModelRegisterRoleArn *string `pulumi:"crossAccountModelRegisterRoleArn"`
	// Describes whether the integration to the model registry is enabled or disabled in the Canvas application. Valid values are `ENABLED` and `DISABLED`.
	Status *string `pulumi:"status"`
}

type UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsArgs struct {
	// The Amazon Resource Name (ARN) of the SageMaker model registry account. Required only to register model versions created by a different SageMaker Canvas AWS account than the AWS account in which SageMaker model registry is set up.
	CrossAccountModelRegisterRoleArn pulumix.Input[*string] `pulumi:"crossAccountModelRegisterRoleArn"`
	// Describes whether the integration to the model registry is enabled or disabled in the Canvas application. Valid values are `ENABLED` and `DISABLED`.
	Status pulumix.Input[*string] `pulumi:"status"`
}

func (UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsArgs) ToUserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput() UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput {
	return i.ToUserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsArgs) ToUserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput)
}

func (i *UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) ToUserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput() UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput {
	return o
}

func (o UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) ToUserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput {
	return o
}

func (o UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings] {
	return pulumix.Output[UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the SageMaker model registry account. Required only to register model versions created by a different SageMaker Canvas AWS account than the AWS account in which SageMaker model registry is set up.
func (o UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) CrossAccountModelRegisterRoleArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings](o, func(v UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings) *string {
		return v.CrossAccountModelRegisterRoleArn
	})
}

// Describes whether the integration to the model registry is enabled or disabled in the Canvas application. Valid values are `ENABLED` and `DISABLED`.
func (o UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput) Status() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings](o, func(v UserProfileUserSettingsCanvasAppSettingsModelRegisterSettings) *string { return v.Status })
}

type UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings struct {
	// The IAM role that Canvas passes to Amazon Forecast for time series forecasting. By default, Canvas uses the execution role specified in the UserProfile that launches the Canvas app. If an execution role is not specified in the UserProfile, Canvas uses the execution role specified in the Domain that owns the UserProfile. To allow time series forecasting, this IAM role should have the [AmazonSageMakerCanvasForecastAccess](https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-canvas.html#security-iam-awsmanpol-AmazonSageMakerCanvasForecastAccess) policy attached and forecast.amazonaws.com added in the trust relationship as a service principal.
	AmazonForecastRoleArn *string `pulumi:"amazonForecastRoleArn"`
	// Describes whether time series forecasting is enabled or disabled in the Canvas app. Valid values are `ENABLED` and `DISABLED`.
	Status *string `pulumi:"status"`
}

type UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs struct {
	// The IAM role that Canvas passes to Amazon Forecast for time series forecasting. By default, Canvas uses the execution role specified in the UserProfile that launches the Canvas app. If an execution role is not specified in the UserProfile, Canvas uses the execution role specified in the Domain that owns the UserProfile. To allow time series forecasting, this IAM role should have the [AmazonSageMakerCanvasForecastAccess](https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-canvas.html#security-iam-awsmanpol-AmazonSageMakerCanvasForecastAccess) policy attached and forecast.amazonaws.com added in the trust relationship as a service principal.
	AmazonForecastRoleArn pulumix.Input[*string] `pulumi:"amazonForecastRoleArn"`
	// Describes whether time series forecasting is enabled or disabled in the Canvas app. Valid values are `ENABLED` and `DISABLED`.
	Status pulumix.Input[*string] `pulumi:"status"`
}

func (UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs) ToUserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput() UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput {
	return i.ToUserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs) ToUserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput)
}

func (i *UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) ToUserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput() UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput {
	return o
}

func (o UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) ToUserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput {
	return o
}

func (o UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings] {
	return pulumix.Output[UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings]{
		OutputState: o.OutputState,
	}
}

// The IAM role that Canvas passes to Amazon Forecast for time series forecasting. By default, Canvas uses the execution role specified in the UserProfile that launches the Canvas app. If an execution role is not specified in the UserProfile, Canvas uses the execution role specified in the Domain that owns the UserProfile. To allow time series forecasting, this IAM role should have the [AmazonSageMakerCanvasForecastAccess](https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-canvas.html#security-iam-awsmanpol-AmazonSageMakerCanvasForecastAccess) policy attached and forecast.amazonaws.com added in the trust relationship as a service principal.
func (o UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) AmazonForecastRoleArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings](o, func(v UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings) *string {
		return v.AmazonForecastRoleArn
	})
}

// Describes whether time series forecasting is enabled or disabled in the Canvas app. Valid values are `ENABLED` and `DISABLED`.
func (o UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput) Status() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings](o, func(v UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettings) *string { return v.Status })
}

type UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings struct {
	// The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.
	S3ArtifactPath *string `pulumi:"s3ArtifactPath"`
	// The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.
	S3KmsKeyId *string `pulumi:"s3KmsKeyId"`
}

type UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsArgs struct {
	// The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.
	S3ArtifactPath pulumix.Input[*string] `pulumi:"s3ArtifactPath"`
	// The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.
	S3KmsKeyId pulumix.Input[*string] `pulumi:"s3KmsKeyId"`
}

func (UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsArgs) ToUserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput() UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput {
	return i.ToUserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsArgs) ToUserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput)
}

func (i *UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) ToUserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput() UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput {
	return o
}

func (o UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) ToUserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput {
	return o
}

func (o UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings] {
	return pulumix.Output[UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings]{
		OutputState: o.OutputState,
	}
}

// The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.
func (o UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) S3ArtifactPath() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings](o, func(v UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings) *string { return v.S3ArtifactPath })
}

// The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.
func (o UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput) S3KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings](o, func(v UserProfileUserSettingsCanvasAppSettingsWorkspaceSettings) *string { return v.S3KmsKeyId })
}

type UserProfileUserSettingsJupyterServerAppSettings struct {
	// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
	CodeRepositories []UserProfileUserSettingsJupyterServerAppSettingsCodeRepository `pulumi:"codeRepositories"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

type UserProfileUserSettingsJupyterServerAppSettingsArgs struct {
	// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
	CodeRepositories pulumix.Input[[]*UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryArgs] `pulumi:"codeRepositories"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns pulumix.Input[[]string] `pulumi:"lifecycleConfigArns"`
}

func (UserProfileUserSettingsJupyterServerAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsJupyterServerAppSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsJupyterServerAppSettingsArgs) ToUserProfileUserSettingsJupyterServerAppSettingsOutput() UserProfileUserSettingsJupyterServerAppSettingsOutput {
	return i.ToUserProfileUserSettingsJupyterServerAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsJupyterServerAppSettingsArgs) ToUserProfileUserSettingsJupyterServerAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsJupyterServerAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsJupyterServerAppSettingsOutput)
}

func (i *UserProfileUserSettingsJupyterServerAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsJupyterServerAppSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsJupyterServerAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsJupyterServerAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsJupyterServerAppSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsJupyterServerAppSettingsOutput) ToUserProfileUserSettingsJupyterServerAppSettingsOutput() UserProfileUserSettingsJupyterServerAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsJupyterServerAppSettingsOutput) ToUserProfileUserSettingsJupyterServerAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsJupyterServerAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsJupyterServerAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsJupyterServerAppSettings] {
	return pulumix.Output[UserProfileUserSettingsJupyterServerAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of Git repositories that SageMaker automatically displays to users for cloning in the JupyterServer application. see Code Repository below.
func (o UserProfileUserSettingsJupyterServerAppSettingsOutput) CodeRepositories() pulumix.GArrayOutput[UserProfileUserSettingsJupyterServerAppSettingsCodeRepository, UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput] {
	value := pulumix.Apply[UserProfileUserSettingsJupyterServerAppSettings](o, func(v UserProfileUserSettingsJupyterServerAppSettings) []UserProfileUserSettingsJupyterServerAppSettingsCodeRepository {
		return v.CodeRepositories
	})
	return pulumix.GArrayOutput[UserProfileUserSettingsJupyterServerAppSettingsCodeRepository, UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o UserProfileUserSettingsJupyterServerAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec, UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[UserProfileUserSettingsJupyterServerAppSettings](o, func(v UserProfileUserSettingsJupyterServerAppSettings) *UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec, UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
func (o UserProfileUserSettingsJupyterServerAppSettingsOutput) LifecycleConfigArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserProfileUserSettingsJupyterServerAppSettings](o, func(v UserProfileUserSettingsJupyterServerAppSettings) []string { return v.LifecycleConfigArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type UserProfileUserSettingsJupyterServerAppSettingsCodeRepository struct {
	// The URL of the Git repository.
	RepositoryUrl string `pulumi:"repositoryUrl"`
}

type UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryArgs struct {
	// The URL of the Git repository.
	RepositoryUrl pulumix.Input[string] `pulumi:"repositoryUrl"`
}

func (UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsJupyterServerAppSettingsCodeRepository)(nil)).Elem()
}

func (i UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToUserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput() UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return i.ToUserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToUserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(ctx context.Context) UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput)
}

func (i *UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsJupyterServerAppSettingsCodeRepository)(nil)).Elem()
}

func (o UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToUserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput() UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return o
}

func (o UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToUserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutputWithContext(ctx context.Context) UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput {
	return o
}

func (o UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsJupyterServerAppSettingsCodeRepository] {
	return pulumix.Output[UserProfileUserSettingsJupyterServerAppSettingsCodeRepository]{
		OutputState: o.OutputState,
	}
}

// The URL of the Git repository.
func (o UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput) RepositoryUrl() pulumix.Output[string] {
	return pulumix.Apply[UserProfileUserSettingsJupyterServerAppSettingsCodeRepository](o, func(v UserProfileUserSettingsJupyterServerAppSettingsCodeRepository) string { return v.RepositoryUrl })
}

type UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs struct {
	// The instance type.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToUserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput() UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return i.ToUserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToUserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput)
}

func (i *UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToUserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput() UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToUserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec] {
	return pulumix.Output[UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type.
func (o UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.InstanceType
	})
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
func (o UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type UserProfileUserSettingsKernelGatewayAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages []UserProfileUserSettingsKernelGatewayAppSettingsCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns []string `pulumi:"lifecycleConfigArns"`
}

type UserProfileUserSettingsKernelGatewayAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages pulumix.Input[[]*UserProfileUserSettingsKernelGatewayAppSettingsCustomImageArgs] `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	LifecycleConfigArns pulumix.Input[[]string] `pulumi:"lifecycleConfigArns"`
}

func (UserProfileUserSettingsKernelGatewayAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsKernelGatewayAppSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsKernelGatewayAppSettingsArgs) ToUserProfileUserSettingsKernelGatewayAppSettingsOutput() UserProfileUserSettingsKernelGatewayAppSettingsOutput {
	return i.ToUserProfileUserSettingsKernelGatewayAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsKernelGatewayAppSettingsArgs) ToUserProfileUserSettingsKernelGatewayAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsKernelGatewayAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsKernelGatewayAppSettingsOutput)
}

func (i *UserProfileUserSettingsKernelGatewayAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsKernelGatewayAppSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsKernelGatewayAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsKernelGatewayAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsKernelGatewayAppSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsKernelGatewayAppSettingsOutput) ToUserProfileUserSettingsKernelGatewayAppSettingsOutput() UserProfileUserSettingsKernelGatewayAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsKernelGatewayAppSettingsOutput) ToUserProfileUserSettingsKernelGatewayAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsKernelGatewayAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsKernelGatewayAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsKernelGatewayAppSettings] {
	return pulumix.Output[UserProfileUserSettingsKernelGatewayAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
func (o UserProfileUserSettingsKernelGatewayAppSettingsOutput) CustomImages() pulumix.GArrayOutput[UserProfileUserSettingsKernelGatewayAppSettingsCustomImage, UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput] {
	value := pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettings](o, func(v UserProfileUserSettingsKernelGatewayAppSettings) []UserProfileUserSettingsKernelGatewayAppSettingsCustomImage {
		return v.CustomImages
	})
	return pulumix.GArrayOutput[UserProfileUserSettingsKernelGatewayAppSettingsCustomImage, UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o UserProfileUserSettingsKernelGatewayAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec, UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettings](o, func(v UserProfileUserSettingsKernelGatewayAppSettings) *UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec, UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
func (o UserProfileUserSettingsKernelGatewayAppSettingsOutput) LifecycleConfigArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettings](o, func(v UserProfileUserSettingsKernelGatewayAppSettings) []string { return v.LifecycleConfigArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type UserProfileUserSettingsKernelGatewayAppSettingsCustomImage struct {
	// The name of the App Image Config.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName string `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber *int `pulumi:"imageVersionNumber"`
}

type UserProfileUserSettingsKernelGatewayAppSettingsCustomImageArgs struct {
	// The name of the App Image Config.
	AppImageConfigName pulumix.Input[string] `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName pulumix.Input[string] `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber pulumix.Input[*int] `pulumi:"imageVersionNumber"`
}

func (UserProfileUserSettingsKernelGatewayAppSettingsCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsKernelGatewayAppSettingsCustomImage)(nil)).Elem()
}

func (i UserProfileUserSettingsKernelGatewayAppSettingsCustomImageArgs) ToUserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput() UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput {
	return i.ToUserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsKernelGatewayAppSettingsCustomImageArgs) ToUserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(ctx context.Context) UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput)
}

func (i *UserProfileUserSettingsKernelGatewayAppSettingsCustomImageArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsKernelGatewayAppSettingsCustomImageArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsKernelGatewayAppSettingsCustomImage)(nil)).Elem()
}

func (o UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput) ToUserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput() UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput {
	return o
}

func (o UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput) ToUserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutputWithContext(ctx context.Context) UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput {
	return o
}

func (o UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsKernelGatewayAppSettingsCustomImage] {
	return pulumix.Output[UserProfileUserSettingsKernelGatewayAppSettingsCustomImage]{
		OutputState: o.OutputState,
	}
}

// The name of the App Image Config.
func (o UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput) AppImageConfigName() pulumix.Output[string] {
	return pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettingsCustomImage](o, func(v UserProfileUserSettingsKernelGatewayAppSettingsCustomImage) string { return v.AppImageConfigName })
}

// The name of the Custom Image.
func (o UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput) ImageName() pulumix.Output[string] {
	return pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettingsCustomImage](o, func(v UserProfileUserSettingsKernelGatewayAppSettingsCustomImage) string { return v.ImageName })
}

// The version number of the Custom Image.
func (o UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput) ImageVersionNumber() pulumix.Output[*int] {
	return pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettingsCustomImage](o, func(v UserProfileUserSettingsKernelGatewayAppSettingsCustomImage) *int { return v.ImageVersionNumber })
}

type UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs struct {
	// The instance type.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToUserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput() UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return i.ToUserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToUserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput)
}

func (i *UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToUserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput() UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToUserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec] {
	return pulumix.Output[UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type.
func (o UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.InstanceType
	})
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
func (o UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type UserProfileUserSettingsRSessionAppSettings struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages []UserProfileUserSettingsRSessionAppSettingsCustomImage `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec *UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
}

type UserProfileUserSettingsRSessionAppSettingsArgs struct {
	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	CustomImages pulumix.Input[[]*UserProfileUserSettingsRSessionAppSettingsCustomImageArgs] `pulumi:"customImages"`
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
}

func (UserProfileUserSettingsRSessionAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsRSessionAppSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsRSessionAppSettingsArgs) ToUserProfileUserSettingsRSessionAppSettingsOutput() UserProfileUserSettingsRSessionAppSettingsOutput {
	return i.ToUserProfileUserSettingsRSessionAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsRSessionAppSettingsArgs) ToUserProfileUserSettingsRSessionAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsRSessionAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsRSessionAppSettingsOutput)
}

func (i *UserProfileUserSettingsRSessionAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsRSessionAppSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsRSessionAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsRSessionAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsRSessionAppSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsRSessionAppSettingsOutput) ToUserProfileUserSettingsRSessionAppSettingsOutput() UserProfileUserSettingsRSessionAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsRSessionAppSettingsOutput) ToUserProfileUserSettingsRSessionAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsRSessionAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsRSessionAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsRSessionAppSettings] {
	return pulumix.Output[UserProfileUserSettingsRSessionAppSettings]{
		OutputState: o.OutputState,
	}
}

// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
func (o UserProfileUserSettingsRSessionAppSettingsOutput) CustomImages() pulumix.GArrayOutput[UserProfileUserSettingsRSessionAppSettingsCustomImage, UserProfileUserSettingsRSessionAppSettingsCustomImageOutput] {
	value := pulumix.Apply[UserProfileUserSettingsRSessionAppSettings](o, func(v UserProfileUserSettingsRSessionAppSettings) []UserProfileUserSettingsRSessionAppSettingsCustomImage {
		return v.CustomImages
	})
	return pulumix.GArrayOutput[UserProfileUserSettingsRSessionAppSettingsCustomImage, UserProfileUserSettingsRSessionAppSettingsCustomImageOutput]{OutputState: value.OutputState}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o UserProfileUserSettingsRSessionAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec, UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[UserProfileUserSettingsRSessionAppSettings](o, func(v UserProfileUserSettingsRSessionAppSettings) *UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec, UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

type UserProfileUserSettingsRSessionAppSettingsCustomImage struct {
	// The name of the App Image Config.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName string `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber *int `pulumi:"imageVersionNumber"`
}

type UserProfileUserSettingsRSessionAppSettingsCustomImageArgs struct {
	// The name of the App Image Config.
	AppImageConfigName pulumix.Input[string] `pulumi:"appImageConfigName"`
	// The name of the Custom Image.
	ImageName pulumix.Input[string] `pulumi:"imageName"`
	// The version number of the Custom Image.
	ImageVersionNumber pulumix.Input[*int] `pulumi:"imageVersionNumber"`
}

func (UserProfileUserSettingsRSessionAppSettingsCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsRSessionAppSettingsCustomImage)(nil)).Elem()
}

func (i UserProfileUserSettingsRSessionAppSettingsCustomImageArgs) ToUserProfileUserSettingsRSessionAppSettingsCustomImageOutput() UserProfileUserSettingsRSessionAppSettingsCustomImageOutput {
	return i.ToUserProfileUserSettingsRSessionAppSettingsCustomImageOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsRSessionAppSettingsCustomImageArgs) ToUserProfileUserSettingsRSessionAppSettingsCustomImageOutputWithContext(ctx context.Context) UserProfileUserSettingsRSessionAppSettingsCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsRSessionAppSettingsCustomImageOutput)
}

func (i *UserProfileUserSettingsRSessionAppSettingsCustomImageArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsRSessionAppSettingsCustomImageArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsRSessionAppSettingsCustomImageOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsRSessionAppSettingsCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsRSessionAppSettingsCustomImage)(nil)).Elem()
}

func (o UserProfileUserSettingsRSessionAppSettingsCustomImageOutput) ToUserProfileUserSettingsRSessionAppSettingsCustomImageOutput() UserProfileUserSettingsRSessionAppSettingsCustomImageOutput {
	return o
}

func (o UserProfileUserSettingsRSessionAppSettingsCustomImageOutput) ToUserProfileUserSettingsRSessionAppSettingsCustomImageOutputWithContext(ctx context.Context) UserProfileUserSettingsRSessionAppSettingsCustomImageOutput {
	return o
}

func (o UserProfileUserSettingsRSessionAppSettingsCustomImageOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsRSessionAppSettingsCustomImage] {
	return pulumix.Output[UserProfileUserSettingsRSessionAppSettingsCustomImage]{
		OutputState: o.OutputState,
	}
}

// The name of the App Image Config.
func (o UserProfileUserSettingsRSessionAppSettingsCustomImageOutput) AppImageConfigName() pulumix.Output[string] {
	return pulumix.Apply[UserProfileUserSettingsRSessionAppSettingsCustomImage](o, func(v UserProfileUserSettingsRSessionAppSettingsCustomImage) string { return v.AppImageConfigName })
}

// The name of the Custom Image.
func (o UserProfileUserSettingsRSessionAppSettingsCustomImageOutput) ImageName() pulumix.Output[string] {
	return pulumix.Apply[UserProfileUserSettingsRSessionAppSettingsCustomImage](o, func(v UserProfileUserSettingsRSessionAppSettingsCustomImage) string { return v.ImageName })
}

// The version number of the Custom Image.
func (o UserProfileUserSettingsRSessionAppSettingsCustomImageOutput) ImageVersionNumber() pulumix.Output[*int] {
	return pulumix.Apply[UserProfileUserSettingsRSessionAppSettingsCustomImage](o, func(v UserProfileUserSettingsRSessionAppSettingsCustomImage) *int { return v.ImageVersionNumber })
}

type UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecArgs struct {
	// The instance type.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecArgs) ToUserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput() UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput {
	return i.ToUserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecArgs) ToUserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput)
}

func (i *UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) ToUserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput() UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) ToUserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec] {
	return pulumix.Output[UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type.
func (o UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec) *string { return v.InstanceType })
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
func (o UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type UserProfileUserSettingsRStudioServerProAppSettings struct {
	// Indicates whether the current user has access to the RStudioServerPro app. Valid values are `ENABLED` and `DISABLED`.
	AccessStatus *string `pulumi:"accessStatus"`
	// The level of permissions that the user has within the RStudioServerPro app. This value defaults to `R_STUDIO_USER`. The `R_STUDIO_ADMIN` value allows the user access to the RStudio Administrative Dashboard. Valid values are `R_STUDIO_USER` and `R_STUDIO_ADMIN`.
	UserGroup *string `pulumi:"userGroup"`
}

type UserProfileUserSettingsRStudioServerProAppSettingsArgs struct {
	// Indicates whether the current user has access to the RStudioServerPro app. Valid values are `ENABLED` and `DISABLED`.
	AccessStatus pulumix.Input[*string] `pulumi:"accessStatus"`
	// The level of permissions that the user has within the RStudioServerPro app. This value defaults to `R_STUDIO_USER`. The `R_STUDIO_ADMIN` value allows the user access to the RStudio Administrative Dashboard. Valid values are `R_STUDIO_USER` and `R_STUDIO_ADMIN`.
	UserGroup pulumix.Input[*string] `pulumi:"userGroup"`
}

func (UserProfileUserSettingsRStudioServerProAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsRStudioServerProAppSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsRStudioServerProAppSettingsArgs) ToUserProfileUserSettingsRStudioServerProAppSettingsOutput() UserProfileUserSettingsRStudioServerProAppSettingsOutput {
	return i.ToUserProfileUserSettingsRStudioServerProAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsRStudioServerProAppSettingsArgs) ToUserProfileUserSettingsRStudioServerProAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsRStudioServerProAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsRStudioServerProAppSettingsOutput)
}

func (i *UserProfileUserSettingsRStudioServerProAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsRStudioServerProAppSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsRStudioServerProAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsRStudioServerProAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsRStudioServerProAppSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsRStudioServerProAppSettingsOutput) ToUserProfileUserSettingsRStudioServerProAppSettingsOutput() UserProfileUserSettingsRStudioServerProAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsRStudioServerProAppSettingsOutput) ToUserProfileUserSettingsRStudioServerProAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsRStudioServerProAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsRStudioServerProAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsRStudioServerProAppSettings] {
	return pulumix.Output[UserProfileUserSettingsRStudioServerProAppSettings]{
		OutputState: o.OutputState,
	}
}

// Indicates whether the current user has access to the RStudioServerPro app. Valid values are `ENABLED` and `DISABLED`.
func (o UserProfileUserSettingsRStudioServerProAppSettingsOutput) AccessStatus() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsRStudioServerProAppSettings](o, func(v UserProfileUserSettingsRStudioServerProAppSettings) *string { return v.AccessStatus })
}

// The level of permissions that the user has within the RStudioServerPro app. This value defaults to `R_STUDIO_USER`. The `R_STUDIO_ADMIN` value allows the user access to the RStudio Administrative Dashboard. Valid values are `R_STUDIO_USER` and `R_STUDIO_ADMIN`.
func (o UserProfileUserSettingsRStudioServerProAppSettingsOutput) UserGroup() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsRStudioServerProAppSettings](o, func(v UserProfileUserSettingsRStudioServerProAppSettings) *string { return v.UserGroup })
}

type UserProfileUserSettingsSharingSettings struct {
	// Whether to include the notebook cell output when sharing the notebook. The default is `Disabled`. Valid values are `Allowed` and `Disabled`.
	NotebookOutputOption *string `pulumi:"notebookOutputOption"`
	// When `notebookOutputOption` is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
	S3KmsKeyId *string `pulumi:"s3KmsKeyId"`
	// When `notebookOutputOption` is Allowed, the Amazon S3 bucket used to save the notebook cell output.
	S3OutputPath *string `pulumi:"s3OutputPath"`
}

type UserProfileUserSettingsSharingSettingsArgs struct {
	// Whether to include the notebook cell output when sharing the notebook. The default is `Disabled`. Valid values are `Allowed` and `Disabled`.
	NotebookOutputOption pulumix.Input[*string] `pulumi:"notebookOutputOption"`
	// When `notebookOutputOption` is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
	S3KmsKeyId pulumix.Input[*string] `pulumi:"s3KmsKeyId"`
	// When `notebookOutputOption` is Allowed, the Amazon S3 bucket used to save the notebook cell output.
	S3OutputPath pulumix.Input[*string] `pulumi:"s3OutputPath"`
}

func (UserProfileUserSettingsSharingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsSharingSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsSharingSettingsArgs) ToUserProfileUserSettingsSharingSettingsOutput() UserProfileUserSettingsSharingSettingsOutput {
	return i.ToUserProfileUserSettingsSharingSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsSharingSettingsArgs) ToUserProfileUserSettingsSharingSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsSharingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsSharingSettingsOutput)
}

func (i *UserProfileUserSettingsSharingSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsSharingSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsSharingSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsSharingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsSharingSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsSharingSettingsOutput) ToUserProfileUserSettingsSharingSettingsOutput() UserProfileUserSettingsSharingSettingsOutput {
	return o
}

func (o UserProfileUserSettingsSharingSettingsOutput) ToUserProfileUserSettingsSharingSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsSharingSettingsOutput {
	return o
}

func (o UserProfileUserSettingsSharingSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsSharingSettings] {
	return pulumix.Output[UserProfileUserSettingsSharingSettings]{
		OutputState: o.OutputState,
	}
}

// Whether to include the notebook cell output when sharing the notebook. The default is `Disabled`. Valid values are `Allowed` and `Disabled`.
func (o UserProfileUserSettingsSharingSettingsOutput) NotebookOutputOption() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsSharingSettings](o, func(v UserProfileUserSettingsSharingSettings) *string { return v.NotebookOutputOption })
}

// When `notebookOutputOption` is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
func (o UserProfileUserSettingsSharingSettingsOutput) S3KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsSharingSettings](o, func(v UserProfileUserSettingsSharingSettings) *string { return v.S3KmsKeyId })
}

// When `notebookOutputOption` is Allowed, the Amazon S3 bucket used to save the notebook cell output.
func (o UserProfileUserSettingsSharingSettingsOutput) S3OutputPath() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsSharingSettings](o, func(v UserProfileUserSettingsSharingSettings) *string { return v.S3OutputPath })
}

type UserProfileUserSettingsTensorBoardAppSettings struct {
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec `pulumi:"defaultResourceSpec"`
}

type UserProfileUserSettingsTensorBoardAppSettingsArgs struct {
	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	DefaultResourceSpec pulumix.Input[*UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs] `pulumi:"defaultResourceSpec"`
}

func (UserProfileUserSettingsTensorBoardAppSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsTensorBoardAppSettings)(nil)).Elem()
}

func (i UserProfileUserSettingsTensorBoardAppSettingsArgs) ToUserProfileUserSettingsTensorBoardAppSettingsOutput() UserProfileUserSettingsTensorBoardAppSettingsOutput {
	return i.ToUserProfileUserSettingsTensorBoardAppSettingsOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsTensorBoardAppSettingsArgs) ToUserProfileUserSettingsTensorBoardAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsTensorBoardAppSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsTensorBoardAppSettingsOutput)
}

func (i *UserProfileUserSettingsTensorBoardAppSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsTensorBoardAppSettingsArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsTensorBoardAppSettingsOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsTensorBoardAppSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsTensorBoardAppSettings)(nil)).Elem()
}

func (o UserProfileUserSettingsTensorBoardAppSettingsOutput) ToUserProfileUserSettingsTensorBoardAppSettingsOutput() UserProfileUserSettingsTensorBoardAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsTensorBoardAppSettingsOutput) ToUserProfileUserSettingsTensorBoardAppSettingsOutputWithContext(ctx context.Context) UserProfileUserSettingsTensorBoardAppSettingsOutput {
	return o
}

func (o UserProfileUserSettingsTensorBoardAppSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsTensorBoardAppSettings] {
	return pulumix.Output[UserProfileUserSettingsTensorBoardAppSettings]{
		OutputState: o.OutputState,
	}
}

// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
func (o UserProfileUserSettingsTensorBoardAppSettingsOutput) DefaultResourceSpec() pulumix.GPtrOutput[UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec, UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput] {
	value := pulumix.Apply[UserProfileUserSettingsTensorBoardAppSettings](o, func(v UserProfileUserSettingsTensorBoardAppSettings) UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec {
		return v.DefaultResourceSpec
	})
	return pulumix.GPtrOutput[UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec, UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput]{OutputState: value.OutputState}
}

type UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec struct {
	// The instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn *string `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn *string `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn *string `pulumi:"sagemakerImageVersionArn"`
}

type UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs struct {
	// The instance type.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	LifecycleConfigArn pulumix.Input[*string] `pulumi:"lifecycleConfigArn"`
	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	SagemakerImageArn pulumix.Input[*string] `pulumi:"sagemakerImageArn"`
	// The ARN of the image version created on the instance.
	SagemakerImageVersionArn pulumix.Input[*string] `pulumi:"sagemakerImageVersionArn"`
}

func (UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (i UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs) ToUserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput() UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput {
	return i.ToUserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutputWithContext(context.Background())
}

func (i UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs) ToUserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput)
}

func (i *UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs) ToOutput(ctx context.Context) pulumix.Output[*UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecArgs] {
	return pulumix.Val(i)
}

type UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput struct{ *pulumi.OutputState }

func (UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec)(nil)).Elem()
}

func (o UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) ToUserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput() UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) ToUserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutputWithContext(ctx context.Context) UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput {
	return o
}

func (o UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec] {
	return pulumix.Output[UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec]{
		OutputState: o.OutputState,
	}
}

// The instance type.
func (o UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec) *string {
		return v.InstanceType
	})
}

// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
func (o UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) LifecycleConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec) *string {
		return v.LifecycleConfigArn
	})
}

// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
func (o UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) SagemakerImageArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageArn
	})
}

// The ARN of the image version created on the instance.
func (o UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput) SagemakerImageVersionArn() pulumix.Output[*string] {
	return pulumix.Apply[UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec](o, func(v UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpec) *string {
		return v.SagemakerImageVersionArn
	})
}

type WorkforceCognitoConfig struct {
	// The client ID for your Amazon Cognito user pool.
	ClientId string `pulumi:"clientId"`
	// ID for your Amazon Cognito user pool.
	UserPool string `pulumi:"userPool"`
}

type WorkforceCognitoConfigArgs struct {
	// The client ID for your Amazon Cognito user pool.
	ClientId pulumix.Input[string] `pulumi:"clientId"`
	// ID for your Amazon Cognito user pool.
	UserPool pulumix.Input[string] `pulumi:"userPool"`
}

func (WorkforceCognitoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkforceCognitoConfig)(nil)).Elem()
}

func (i WorkforceCognitoConfigArgs) ToWorkforceCognitoConfigOutput() WorkforceCognitoConfigOutput {
	return i.ToWorkforceCognitoConfigOutputWithContext(context.Background())
}

func (i WorkforceCognitoConfigArgs) ToWorkforceCognitoConfigOutputWithContext(ctx context.Context) WorkforceCognitoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforceCognitoConfigOutput)
}

func (i *WorkforceCognitoConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkforceCognitoConfigArgs] {
	return pulumix.Val(i)
}

type WorkforceCognitoConfigOutput struct{ *pulumi.OutputState }

func (WorkforceCognitoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkforceCognitoConfig)(nil)).Elem()
}

func (o WorkforceCognitoConfigOutput) ToWorkforceCognitoConfigOutput() WorkforceCognitoConfigOutput {
	return o
}

func (o WorkforceCognitoConfigOutput) ToWorkforceCognitoConfigOutputWithContext(ctx context.Context) WorkforceCognitoConfigOutput {
	return o
}

func (o WorkforceCognitoConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WorkforceCognitoConfig] {
	return pulumix.Output[WorkforceCognitoConfig]{
		OutputState: o.OutputState,
	}
}

// The client ID for your Amazon Cognito user pool.
func (o WorkforceCognitoConfigOutput) ClientId() pulumix.Output[string] {
	return pulumix.Apply[WorkforceCognitoConfig](o, func(v WorkforceCognitoConfig) string { return v.ClientId })
}

// ID for your Amazon Cognito user pool.
func (o WorkforceCognitoConfigOutput) UserPool() pulumix.Output[string] {
	return pulumix.Apply[WorkforceCognitoConfig](o, func(v WorkforceCognitoConfig) string { return v.UserPool })
}

type WorkforceOidcConfig struct {
	// The OIDC IdP authorization endpoint used to configure your private workforce.
	AuthorizationEndpoint string `pulumi:"authorizationEndpoint"`
	// The OIDC IdP client ID used to configure your private workforce.
	ClientId string `pulumi:"clientId"`
	// The OIDC IdP client secret used to configure your private workforce.
	ClientSecret string `pulumi:"clientSecret"`
	// The OIDC IdP issuer used to configure your private workforce.
	Issuer string `pulumi:"issuer"`
	// The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
	JwksUri string `pulumi:"jwksUri"`
	// The OIDC IdP logout endpoint used to configure your private workforce.
	LogoutEndpoint string `pulumi:"logoutEndpoint"`
	// The OIDC IdP token endpoint used to configure your private workforce.
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// The OIDC IdP user information endpoint used to configure your private workforce.
	UserInfoEndpoint string `pulumi:"userInfoEndpoint"`
}

type WorkforceOidcConfigArgs struct {
	// The OIDC IdP authorization endpoint used to configure your private workforce.
	AuthorizationEndpoint pulumix.Input[string] `pulumi:"authorizationEndpoint"`
	// The OIDC IdP client ID used to configure your private workforce.
	ClientId pulumix.Input[string] `pulumi:"clientId"`
	// The OIDC IdP client secret used to configure your private workforce.
	ClientSecret pulumix.Input[string] `pulumi:"clientSecret"`
	// The OIDC IdP issuer used to configure your private workforce.
	Issuer pulumix.Input[string] `pulumi:"issuer"`
	// The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
	JwksUri pulumix.Input[string] `pulumi:"jwksUri"`
	// The OIDC IdP logout endpoint used to configure your private workforce.
	LogoutEndpoint pulumix.Input[string] `pulumi:"logoutEndpoint"`
	// The OIDC IdP token endpoint used to configure your private workforce.
	TokenEndpoint pulumix.Input[string] `pulumi:"tokenEndpoint"`
	// The OIDC IdP user information endpoint used to configure your private workforce.
	UserInfoEndpoint pulumix.Input[string] `pulumi:"userInfoEndpoint"`
}

func (WorkforceOidcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkforceOidcConfig)(nil)).Elem()
}

func (i WorkforceOidcConfigArgs) ToWorkforceOidcConfigOutput() WorkforceOidcConfigOutput {
	return i.ToWorkforceOidcConfigOutputWithContext(context.Background())
}

func (i WorkforceOidcConfigArgs) ToWorkforceOidcConfigOutputWithContext(ctx context.Context) WorkforceOidcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforceOidcConfigOutput)
}

func (i *WorkforceOidcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkforceOidcConfigArgs] {
	return pulumix.Val(i)
}

type WorkforceOidcConfigOutput struct{ *pulumi.OutputState }

func (WorkforceOidcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkforceOidcConfig)(nil)).Elem()
}

func (o WorkforceOidcConfigOutput) ToWorkforceOidcConfigOutput() WorkforceOidcConfigOutput {
	return o
}

func (o WorkforceOidcConfigOutput) ToWorkforceOidcConfigOutputWithContext(ctx context.Context) WorkforceOidcConfigOutput {
	return o
}

func (o WorkforceOidcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WorkforceOidcConfig] {
	return pulumix.Output[WorkforceOidcConfig]{
		OutputState: o.OutputState,
	}
}

// The OIDC IdP authorization endpoint used to configure your private workforce.
func (o WorkforceOidcConfigOutput) AuthorizationEndpoint() pulumix.Output[string] {
	return pulumix.Apply[WorkforceOidcConfig](o, func(v WorkforceOidcConfig) string { return v.AuthorizationEndpoint })
}

// The OIDC IdP client ID used to configure your private workforce.
func (o WorkforceOidcConfigOutput) ClientId() pulumix.Output[string] {
	return pulumix.Apply[WorkforceOidcConfig](o, func(v WorkforceOidcConfig) string { return v.ClientId })
}

// The OIDC IdP client secret used to configure your private workforce.
func (o WorkforceOidcConfigOutput) ClientSecret() pulumix.Output[string] {
	return pulumix.Apply[WorkforceOidcConfig](o, func(v WorkforceOidcConfig) string { return v.ClientSecret })
}

// The OIDC IdP issuer used to configure your private workforce.
func (o WorkforceOidcConfigOutput) Issuer() pulumix.Output[string] {
	return pulumix.Apply[WorkforceOidcConfig](o, func(v WorkforceOidcConfig) string { return v.Issuer })
}

// The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
func (o WorkforceOidcConfigOutput) JwksUri() pulumix.Output[string] {
	return pulumix.Apply[WorkforceOidcConfig](o, func(v WorkforceOidcConfig) string { return v.JwksUri })
}

// The OIDC IdP logout endpoint used to configure your private workforce.
func (o WorkforceOidcConfigOutput) LogoutEndpoint() pulumix.Output[string] {
	return pulumix.Apply[WorkforceOidcConfig](o, func(v WorkforceOidcConfig) string { return v.LogoutEndpoint })
}

// The OIDC IdP token endpoint used to configure your private workforce.
func (o WorkforceOidcConfigOutput) TokenEndpoint() pulumix.Output[string] {
	return pulumix.Apply[WorkforceOidcConfig](o, func(v WorkforceOidcConfig) string { return v.TokenEndpoint })
}

// The OIDC IdP user information endpoint used to configure your private workforce.
func (o WorkforceOidcConfigOutput) UserInfoEndpoint() pulumix.Output[string] {
	return pulumix.Apply[WorkforceOidcConfig](o, func(v WorkforceOidcConfig) string { return v.UserInfoEndpoint })
}

type WorkforceSourceIpConfig struct {
	// A list of up to 10 CIDR values.
	Cidrs []string `pulumi:"cidrs"`
}

type WorkforceSourceIpConfigArgs struct {
	// A list of up to 10 CIDR values.
	Cidrs pulumix.Input[[]string] `pulumi:"cidrs"`
}

func (WorkforceSourceIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkforceSourceIpConfig)(nil)).Elem()
}

func (i WorkforceSourceIpConfigArgs) ToWorkforceSourceIpConfigOutput() WorkforceSourceIpConfigOutput {
	return i.ToWorkforceSourceIpConfigOutputWithContext(context.Background())
}

func (i WorkforceSourceIpConfigArgs) ToWorkforceSourceIpConfigOutputWithContext(ctx context.Context) WorkforceSourceIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforceSourceIpConfigOutput)
}

func (i *WorkforceSourceIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkforceSourceIpConfigArgs] {
	return pulumix.Val(i)
}

type WorkforceSourceIpConfigOutput struct{ *pulumi.OutputState }

func (WorkforceSourceIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkforceSourceIpConfig)(nil)).Elem()
}

func (o WorkforceSourceIpConfigOutput) ToWorkforceSourceIpConfigOutput() WorkforceSourceIpConfigOutput {
	return o
}

func (o WorkforceSourceIpConfigOutput) ToWorkforceSourceIpConfigOutputWithContext(ctx context.Context) WorkforceSourceIpConfigOutput {
	return o
}

func (o WorkforceSourceIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WorkforceSourceIpConfig] {
	return pulumix.Output[WorkforceSourceIpConfig]{
		OutputState: o.OutputState,
	}
}

// A list of up to 10 CIDR values.
func (o WorkforceSourceIpConfigOutput) Cidrs() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WorkforceSourceIpConfig](o, func(v WorkforceSourceIpConfig) []string { return v.Cidrs })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WorkforceWorkforceVpcConfig struct {
	// The VPC security group IDs. The security groups must be for the same VPC as specified in the subnet.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC that you want to connect.
	Subnets       []string `pulumi:"subnets"`
	VpcEndpointId *string  `pulumi:"vpcEndpointId"`
	// The ID of the VPC that the workforce uses for communication.
	VpcId *string `pulumi:"vpcId"`
}

type WorkforceWorkforceVpcConfigArgs struct {
	// The VPC security group IDs. The security groups must be for the same VPC as specified in the subnet.
	SecurityGroupIds pulumix.Input[[]string] `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC that you want to connect.
	Subnets       pulumix.Input[[]string] `pulumi:"subnets"`
	VpcEndpointId pulumix.Input[*string]  `pulumi:"vpcEndpointId"`
	// The ID of the VPC that the workforce uses for communication.
	VpcId pulumix.Input[*string] `pulumi:"vpcId"`
}

func (WorkforceWorkforceVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkforceWorkforceVpcConfig)(nil)).Elem()
}

func (i WorkforceWorkforceVpcConfigArgs) ToWorkforceWorkforceVpcConfigOutput() WorkforceWorkforceVpcConfigOutput {
	return i.ToWorkforceWorkforceVpcConfigOutputWithContext(context.Background())
}

func (i WorkforceWorkforceVpcConfigArgs) ToWorkforceWorkforceVpcConfigOutputWithContext(ctx context.Context) WorkforceWorkforceVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforceWorkforceVpcConfigOutput)
}

func (i *WorkforceWorkforceVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkforceWorkforceVpcConfigArgs] {
	return pulumix.Val(i)
}

type WorkforceWorkforceVpcConfigOutput struct{ *pulumi.OutputState }

func (WorkforceWorkforceVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkforceWorkforceVpcConfig)(nil)).Elem()
}

func (o WorkforceWorkforceVpcConfigOutput) ToWorkforceWorkforceVpcConfigOutput() WorkforceWorkforceVpcConfigOutput {
	return o
}

func (o WorkforceWorkforceVpcConfigOutput) ToWorkforceWorkforceVpcConfigOutputWithContext(ctx context.Context) WorkforceWorkforceVpcConfigOutput {
	return o
}

func (o WorkforceWorkforceVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WorkforceWorkforceVpcConfig] {
	return pulumix.Output[WorkforceWorkforceVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The VPC security group IDs. The security groups must be for the same VPC as specified in the subnet.
func (o WorkforceWorkforceVpcConfigOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WorkforceWorkforceVpcConfig](o, func(v WorkforceWorkforceVpcConfig) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The ID of the subnets in the VPC that you want to connect.
func (o WorkforceWorkforceVpcConfigOutput) Subnets() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WorkforceWorkforceVpcConfig](o, func(v WorkforceWorkforceVpcConfig) []string { return v.Subnets })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o WorkforceWorkforceVpcConfigOutput) VpcEndpointId() pulumix.Output[*string] {
	return pulumix.Apply[WorkforceWorkforceVpcConfig](o, func(v WorkforceWorkforceVpcConfig) *string { return v.VpcEndpointId })
}

// The ID of the VPC that the workforce uses for communication.
func (o WorkforceWorkforceVpcConfigOutput) VpcId() pulumix.Output[*string] {
	return pulumix.Apply[WorkforceWorkforceVpcConfig](o, func(v WorkforceWorkforceVpcConfig) *string { return v.VpcId })
}

type WorkteamMemberDefinition struct {
	// The Amazon Cognito user group that is part of the work team. See Cognito Member Definition details below.
	CognitoMemberDefinition *WorkteamMemberDefinitionCognitoMemberDefinition `pulumi:"cognitoMemberDefinition"`
	// A list user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. See Cognito Member Definition details below.
	OidcMemberDefinition *WorkteamMemberDefinitionOidcMemberDefinition `pulumi:"oidcMemberDefinition"`
}

type WorkteamMemberDefinitionArgs struct {
	// The Amazon Cognito user group that is part of the work team. See Cognito Member Definition details below.
	CognitoMemberDefinition pulumix.Input[*WorkteamMemberDefinitionCognitoMemberDefinitionArgs] `pulumi:"cognitoMemberDefinition"`
	// A list user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. See Cognito Member Definition details below.
	OidcMemberDefinition pulumix.Input[*WorkteamMemberDefinitionOidcMemberDefinitionArgs] `pulumi:"oidcMemberDefinition"`
}

func (WorkteamMemberDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamMemberDefinition)(nil)).Elem()
}

func (i WorkteamMemberDefinitionArgs) ToWorkteamMemberDefinitionOutput() WorkteamMemberDefinitionOutput {
	return i.ToWorkteamMemberDefinitionOutputWithContext(context.Background())
}

func (i WorkteamMemberDefinitionArgs) ToWorkteamMemberDefinitionOutputWithContext(ctx context.Context) WorkteamMemberDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamMemberDefinitionOutput)
}

func (i *WorkteamMemberDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkteamMemberDefinitionArgs] {
	return pulumix.Val(i)
}

type WorkteamMemberDefinitionOutput struct{ *pulumi.OutputState }

func (WorkteamMemberDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamMemberDefinition)(nil)).Elem()
}

func (o WorkteamMemberDefinitionOutput) ToWorkteamMemberDefinitionOutput() WorkteamMemberDefinitionOutput {
	return o
}

func (o WorkteamMemberDefinitionOutput) ToWorkteamMemberDefinitionOutputWithContext(ctx context.Context) WorkteamMemberDefinitionOutput {
	return o
}

func (o WorkteamMemberDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[WorkteamMemberDefinition] {
	return pulumix.Output[WorkteamMemberDefinition]{
		OutputState: o.OutputState,
	}
}

// The Amazon Cognito user group that is part of the work team. See Cognito Member Definition details below.
func (o WorkteamMemberDefinitionOutput) CognitoMemberDefinition() pulumix.GPtrOutput[WorkteamMemberDefinitionCognitoMemberDefinition, WorkteamMemberDefinitionCognitoMemberDefinitionOutput] {
	value := pulumix.Apply[WorkteamMemberDefinition](o, func(v WorkteamMemberDefinition) *WorkteamMemberDefinitionCognitoMemberDefinition {
		return v.CognitoMemberDefinition
	})
	return pulumix.GPtrOutput[WorkteamMemberDefinitionCognitoMemberDefinition, WorkteamMemberDefinitionCognitoMemberDefinitionOutput]{OutputState: value.OutputState}
}

// A list user groups that exist in your OIDC Identity Provider (IdP). One to ten groups can be used to create a single private work team. See Cognito Member Definition details below.
func (o WorkteamMemberDefinitionOutput) OidcMemberDefinition() pulumix.GPtrOutput[WorkteamMemberDefinitionOidcMemberDefinition, WorkteamMemberDefinitionOidcMemberDefinitionOutput] {
	value := pulumix.Apply[WorkteamMemberDefinition](o, func(v WorkteamMemberDefinition) *WorkteamMemberDefinitionOidcMemberDefinition {
		return v.OidcMemberDefinition
	})
	return pulumix.GPtrOutput[WorkteamMemberDefinitionOidcMemberDefinition, WorkteamMemberDefinitionOidcMemberDefinitionOutput]{OutputState: value.OutputState}
}

type WorkteamMemberDefinitionCognitoMemberDefinition struct {
	// An identifier for an application client. You must create the app client ID using Amazon Cognito.
	ClientId string `pulumi:"clientId"`
	// An identifier for a user group.
	UserGroup string `pulumi:"userGroup"`
	// An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
	UserPool string `pulumi:"userPool"`
}

type WorkteamMemberDefinitionCognitoMemberDefinitionArgs struct {
	// An identifier for an application client. You must create the app client ID using Amazon Cognito.
	ClientId pulumix.Input[string] `pulumi:"clientId"`
	// An identifier for a user group.
	UserGroup pulumix.Input[string] `pulumi:"userGroup"`
	// An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
	UserPool pulumix.Input[string] `pulumi:"userPool"`
}

func (WorkteamMemberDefinitionCognitoMemberDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamMemberDefinitionCognitoMemberDefinition)(nil)).Elem()
}

func (i WorkteamMemberDefinitionCognitoMemberDefinitionArgs) ToWorkteamMemberDefinitionCognitoMemberDefinitionOutput() WorkteamMemberDefinitionCognitoMemberDefinitionOutput {
	return i.ToWorkteamMemberDefinitionCognitoMemberDefinitionOutputWithContext(context.Background())
}

func (i WorkteamMemberDefinitionCognitoMemberDefinitionArgs) ToWorkteamMemberDefinitionCognitoMemberDefinitionOutputWithContext(ctx context.Context) WorkteamMemberDefinitionCognitoMemberDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamMemberDefinitionCognitoMemberDefinitionOutput)
}

func (i *WorkteamMemberDefinitionCognitoMemberDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkteamMemberDefinitionCognitoMemberDefinitionArgs] {
	return pulumix.Val(i)
}

type WorkteamMemberDefinitionCognitoMemberDefinitionOutput struct{ *pulumi.OutputState }

func (WorkteamMemberDefinitionCognitoMemberDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamMemberDefinitionCognitoMemberDefinition)(nil)).Elem()
}

func (o WorkteamMemberDefinitionCognitoMemberDefinitionOutput) ToWorkteamMemberDefinitionCognitoMemberDefinitionOutput() WorkteamMemberDefinitionCognitoMemberDefinitionOutput {
	return o
}

func (o WorkteamMemberDefinitionCognitoMemberDefinitionOutput) ToWorkteamMemberDefinitionCognitoMemberDefinitionOutputWithContext(ctx context.Context) WorkteamMemberDefinitionCognitoMemberDefinitionOutput {
	return o
}

func (o WorkteamMemberDefinitionCognitoMemberDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[WorkteamMemberDefinitionCognitoMemberDefinition] {
	return pulumix.Output[WorkteamMemberDefinitionCognitoMemberDefinition]{
		OutputState: o.OutputState,
	}
}

// An identifier for an application client. You must create the app client ID using Amazon Cognito.
func (o WorkteamMemberDefinitionCognitoMemberDefinitionOutput) ClientId() pulumix.Output[string] {
	return pulumix.Apply[WorkteamMemberDefinitionCognitoMemberDefinition](o, func(v WorkteamMemberDefinitionCognitoMemberDefinition) string { return v.ClientId })
}

// An identifier for a user group.
func (o WorkteamMemberDefinitionCognitoMemberDefinitionOutput) UserGroup() pulumix.Output[string] {
	return pulumix.Apply[WorkteamMemberDefinitionCognitoMemberDefinition](o, func(v WorkteamMemberDefinitionCognitoMemberDefinition) string { return v.UserGroup })
}

// An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
func (o WorkteamMemberDefinitionCognitoMemberDefinitionOutput) UserPool() pulumix.Output[string] {
	return pulumix.Apply[WorkteamMemberDefinitionCognitoMemberDefinition](o, func(v WorkteamMemberDefinitionCognitoMemberDefinition) string { return v.UserPool })
}

type WorkteamMemberDefinitionOidcMemberDefinition struct {
	// A list of comma separated strings that identifies user groups in your OIDC IdP. Each user group is made up of a group of private workers.
	Groups []string `pulumi:"groups"`
}

type WorkteamMemberDefinitionOidcMemberDefinitionArgs struct {
	// A list of comma separated strings that identifies user groups in your OIDC IdP. Each user group is made up of a group of private workers.
	Groups pulumix.Input[[]string] `pulumi:"groups"`
}

func (WorkteamMemberDefinitionOidcMemberDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamMemberDefinitionOidcMemberDefinition)(nil)).Elem()
}

func (i WorkteamMemberDefinitionOidcMemberDefinitionArgs) ToWorkteamMemberDefinitionOidcMemberDefinitionOutput() WorkteamMemberDefinitionOidcMemberDefinitionOutput {
	return i.ToWorkteamMemberDefinitionOidcMemberDefinitionOutputWithContext(context.Background())
}

func (i WorkteamMemberDefinitionOidcMemberDefinitionArgs) ToWorkteamMemberDefinitionOidcMemberDefinitionOutputWithContext(ctx context.Context) WorkteamMemberDefinitionOidcMemberDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamMemberDefinitionOidcMemberDefinitionOutput)
}

func (i *WorkteamMemberDefinitionOidcMemberDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkteamMemberDefinitionOidcMemberDefinitionArgs] {
	return pulumix.Val(i)
}

type WorkteamMemberDefinitionOidcMemberDefinitionOutput struct{ *pulumi.OutputState }

func (WorkteamMemberDefinitionOidcMemberDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamMemberDefinitionOidcMemberDefinition)(nil)).Elem()
}

func (o WorkteamMemberDefinitionOidcMemberDefinitionOutput) ToWorkteamMemberDefinitionOidcMemberDefinitionOutput() WorkteamMemberDefinitionOidcMemberDefinitionOutput {
	return o
}

func (o WorkteamMemberDefinitionOidcMemberDefinitionOutput) ToWorkteamMemberDefinitionOidcMemberDefinitionOutputWithContext(ctx context.Context) WorkteamMemberDefinitionOidcMemberDefinitionOutput {
	return o
}

func (o WorkteamMemberDefinitionOidcMemberDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[WorkteamMemberDefinitionOidcMemberDefinition] {
	return pulumix.Output[WorkteamMemberDefinitionOidcMemberDefinition]{
		OutputState: o.OutputState,
	}
}

// A list of comma separated strings that identifies user groups in your OIDC IdP. Each user group is made up of a group of private workers.
func (o WorkteamMemberDefinitionOidcMemberDefinitionOutput) Groups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WorkteamMemberDefinitionOidcMemberDefinition](o, func(v WorkteamMemberDefinitionOidcMemberDefinition) []string { return v.Groups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WorkteamNotificationConfiguration struct {
	// The ARN for the SNS topic to which notifications should be published.
	NotificationTopicArn *string `pulumi:"notificationTopicArn"`
}

type WorkteamNotificationConfigurationArgs struct {
	// The ARN for the SNS topic to which notifications should be published.
	NotificationTopicArn pulumix.Input[*string] `pulumi:"notificationTopicArn"`
}

func (WorkteamNotificationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamNotificationConfiguration)(nil)).Elem()
}

func (i WorkteamNotificationConfigurationArgs) ToWorkteamNotificationConfigurationOutput() WorkteamNotificationConfigurationOutput {
	return i.ToWorkteamNotificationConfigurationOutputWithContext(context.Background())
}

func (i WorkteamNotificationConfigurationArgs) ToWorkteamNotificationConfigurationOutputWithContext(ctx context.Context) WorkteamNotificationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkteamNotificationConfigurationOutput)
}

func (i *WorkteamNotificationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkteamNotificationConfigurationArgs] {
	return pulumix.Val(i)
}

type WorkteamNotificationConfigurationOutput struct{ *pulumi.OutputState }

func (WorkteamNotificationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkteamNotificationConfiguration)(nil)).Elem()
}

func (o WorkteamNotificationConfigurationOutput) ToWorkteamNotificationConfigurationOutput() WorkteamNotificationConfigurationOutput {
	return o
}

func (o WorkteamNotificationConfigurationOutput) ToWorkteamNotificationConfigurationOutputWithContext(ctx context.Context) WorkteamNotificationConfigurationOutput {
	return o
}

func (o WorkteamNotificationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[WorkteamNotificationConfiguration] {
	return pulumix.Output[WorkteamNotificationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ARN for the SNS topic to which notifications should be published.
func (o WorkteamNotificationConfigurationOutput) NotificationTopicArn() pulumix.Output[*string] {
	return pulumix.Apply[WorkteamNotificationConfiguration](o, func(v WorkteamNotificationConfiguration) *string { return v.NotificationTopicArn })
}

func init() {
	pulumi.RegisterOutputType(AppImageConfigKernelGatewayImageConfigOutput{})
	pulumi.RegisterOutputType(AppImageConfigKernelGatewayImageConfigFileSystemConfigOutput{})
	pulumi.RegisterOutputType(AppImageConfigKernelGatewayImageConfigKernelSpecOutput{})
	pulumi.RegisterOutputType(AppResourceSpecOutput{})
	pulumi.RegisterOutputType(CodeRepositoryGitConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityAppSpecificationOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityBaselineConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityBaselineConfigConstraintsResourceOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityBaselineConfigStatisticsResourceOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobInputOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobInputBatchTransformInputOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatCsvOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatJsonOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobInputEndpointInputOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobOutputConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionJobResourcesOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionJobResourcesClusterConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionNetworkConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionNetworkConfigVpcConfigOutput{})
	pulumi.RegisterOutputType(DataQualityJobDefinitionStoppingConditionOutput{})
	pulumi.RegisterOutputType(DeviceDeviceOutput{})
	pulumi.RegisterOutputType(DeviceFleetOutputConfigOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceSettingsJupyterServerAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceSettingsKernelGatewayAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceSettingsKernelGatewayAppSettingsCustomImageOutput{})
	pulumi.RegisterOutputType(DomainDefaultSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsCanvasAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsCanvasAppSettingsModelRegisterSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsCanvasAppSettingsWorkspaceSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsJupyterServerAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsJupyterServerAppSettingsCodeRepositoryOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsKernelGatewayAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsKernelGatewayAppSettingsCustomImageOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsRSessionAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsRSessionAppSettingsCustomImageOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsRSessionAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsRStudioServerProAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsSharingSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsTensorBoardAppSettingsOutput{})
	pulumi.RegisterOutputType(DomainDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(DomainDomainSettingsOutput{})
	pulumi.RegisterOutputType(DomainDomainSettingsRStudioServerProDomainSettingsOutput{})
	pulumi.RegisterOutputType(DomainDomainSettingsRStudioServerProDomainSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(DomainRetentionPolicyOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationAsyncInferenceConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationAsyncInferenceConfigClientConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationAsyncInferenceConfigOutputConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationAsyncInferenceConfigOutputConfigNotificationConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationDataCaptureConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationDataCaptureConfigCaptureContentTypeHeaderOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationDataCaptureConfigCaptureOptionOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationProductionVariantOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationProductionVariantCoreDumpConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationProductionVariantServerlessConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationShadowProductionVariantOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationShadowProductionVariantCoreDumpConfigOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationShadowProductionVariantServerlessConfigOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigAutoRollbackConfigurationOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigAutoRollbackConfigurationAlarmOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigBlueGreenUpdatePolicyOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationCanarySizeOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigBlueGreenUpdatePolicyTrafficRoutingConfigurationLinearStepSizeOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigRollingUpdatePolicyOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigRollingUpdatePolicyMaximumBatchSizeOutput{})
	pulumi.RegisterOutputType(EndpointDeploymentConfigRollingUpdatePolicyRollbackMaximumBatchSizeOutput{})
	pulumi.RegisterOutputType(FeatureGroupFeatureDefinitionOutput{})
	pulumi.RegisterOutputType(FeatureGroupOfflineStoreConfigOutput{})
	pulumi.RegisterOutputType(FeatureGroupOfflineStoreConfigDataCatalogConfigOutput{})
	pulumi.RegisterOutputType(FeatureGroupOfflineStoreConfigS3StorageConfigOutput{})
	pulumi.RegisterOutputType(FeatureGroupOnlineStoreConfigOutput{})
	pulumi.RegisterOutputType(FeatureGroupOnlineStoreConfigSecurityConfigOutput{})
	pulumi.RegisterOutputType(FlowDefinitionHumanLoopActivationConfigOutput{})
	pulumi.RegisterOutputType(FlowDefinitionHumanLoopActivationConfigHumanLoopActivationConditionsConfigOutput{})
	pulumi.RegisterOutputType(FlowDefinitionHumanLoopConfigOutput{})
	pulumi.RegisterOutputType(FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceOutput{})
	pulumi.RegisterOutputType(FlowDefinitionHumanLoopConfigPublicWorkforceTaskPriceAmountInUsdOutput{})
	pulumi.RegisterOutputType(FlowDefinitionHumanLoopRequestSourceOutput{})
	pulumi.RegisterOutputType(FlowDefinitionOutputConfigOutput{})
	pulumi.RegisterOutputType(HumanTaskUIUiTemplateOutput{})
	pulumi.RegisterOutputType(ModelContainerOutput{})
	pulumi.RegisterOutputType(ModelContainerImageConfigOutput{})
	pulumi.RegisterOutputType(ModelContainerImageConfigRepositoryAuthConfigOutput{})
	pulumi.RegisterOutputType(ModelInferenceExecutionConfigOutput{})
	pulumi.RegisterOutputType(ModelPrimaryContainerOutput{})
	pulumi.RegisterOutputType(ModelPrimaryContainerImageConfigOutput{})
	pulumi.RegisterOutputType(ModelPrimaryContainerImageConfigRepositoryAuthConfigOutput{})
	pulumi.RegisterOutputType(ModelVpcConfigOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringScheduleConfigOutput{})
	pulumi.RegisterOutputType(MonitoringScheduleMonitoringScheduleConfigScheduleConfigOutput{})
	pulumi.RegisterOutputType(NotebookInstanceInstanceMetadataServiceConfigurationOutput{})
	pulumi.RegisterOutputType(PipelineParallelismConfigurationOutput{})
	pulumi.RegisterOutputType(PipelinePipelineDefinitionS3LocationOutput{})
	pulumi.RegisterOutputType(ProjectServiceCatalogProvisioningDetailsOutput{})
	pulumi.RegisterOutputType(ProjectServiceCatalogProvisioningDetailsProvisioningParameterOutput{})
	pulumi.RegisterOutputType(SpaceSpaceSettingsOutput{})
	pulumi.RegisterOutputType(SpaceSpaceSettingsJupyterServerAppSettingsOutput{})
	pulumi.RegisterOutputType(SpaceSpaceSettingsJupyterServerAppSettingsCodeRepositoryOutput{})
	pulumi.RegisterOutputType(SpaceSpaceSettingsJupyterServerAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(SpaceSpaceSettingsKernelGatewayAppSettingsOutput{})
	pulumi.RegisterOutputType(SpaceSpaceSettingsKernelGatewayAppSettingsCustomImageOutput{})
	pulumi.RegisterOutputType(SpaceSpaceSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsCanvasAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsCanvasAppSettingsModelRegisterSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsCanvasAppSettingsTimeSeriesForecastingSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsCanvasAppSettingsWorkspaceSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsJupyterServerAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsJupyterServerAppSettingsCodeRepositoryOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsJupyterServerAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsKernelGatewayAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsKernelGatewayAppSettingsCustomImageOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsKernelGatewayAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsRSessionAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsRSessionAppSettingsCustomImageOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsRSessionAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsRStudioServerProAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsSharingSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsTensorBoardAppSettingsOutput{})
	pulumi.RegisterOutputType(UserProfileUserSettingsTensorBoardAppSettingsDefaultResourceSpecOutput{})
	pulumi.RegisterOutputType(WorkforceCognitoConfigOutput{})
	pulumi.RegisterOutputType(WorkforceOidcConfigOutput{})
	pulumi.RegisterOutputType(WorkforceSourceIpConfigOutput{})
	pulumi.RegisterOutputType(WorkforceWorkforceVpcConfigOutput{})
	pulumi.RegisterOutputType(WorkteamMemberDefinitionOutput{})
	pulumi.RegisterOutputType(WorkteamMemberDefinitionCognitoMemberDefinitionOutput{})
	pulumi.RegisterOutputType(WorkteamMemberDefinitionOidcMemberDefinitionOutput{})
	pulumi.RegisterOutputType(WorkteamNotificationConfigurationOutput{})
}
