// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package secretsmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get the ARNs and names of Secrets Manager secrets matching the specified criteria.
func GetSecrets(ctx *pulumi.Context, args *GetSecretsArgs, opts ...pulumi.InvokeOption) (*GetSecretsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecretsResult
	err := ctx.Invoke("aws:secretsmanager/getSecrets:getSecrets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecrets.
type GetSecretsArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetSecretsFilter `pulumi:"filters"`
}

// A collection of values returned by getSecrets.
type GetSecretsResult struct {
	// Set of ARNs of the matched Secrets Manager secrets.
	Arns    []string           `pulumi:"arns"`
	Filters []GetSecretsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of names of the matched Secrets Manager secrets.
	Names []string `pulumi:"names"`
}

func GetSecretsOutput(ctx *pulumi.Context, args GetSecretsOutputArgs, opts ...pulumi.InvokeOption) GetSecretsResultOutput {
	outputResult := pulumix.ApplyErr[*GetSecretsArgs](args.ToOutput(), func(plainArgs *GetSecretsArgs) (*GetSecretsResult, error) {
		return GetSecrets(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetSecretsResultOutput, *GetSecretsResult](outputResult)
}

// A collection of arguments for invoking getSecrets.
type GetSecretsOutputArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters pulumix.Input[[]*GetSecretsFilterArgs] `pulumi:"filters"`
}

func (args GetSecretsOutputArgs) ToOutput() pulumix.Output[*GetSecretsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetSecretsArgs {
		return &GetSecretsArgs{
			Filters: resolvedArgs[0].([]GetSecretsFilter),
		}
	})
}

type GetSecretsResultOutput struct{ *pulumi.OutputState }

func (GetSecretsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsResult)(nil)).Elem()
}

func (o GetSecretsResultOutput) ToOutput(context.Context) pulumix.Output[*GetSecretsResult] {
	return pulumix.Output[*GetSecretsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretsResultOutput) Arns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetSecretsResult](o, func(v *GetSecretsResult) []string { return v.Arns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetSecretsResultOutput) Filters() pulumix.GArrayOutput[GetSecretsFilter, GetSecretsFilterOutput] {
	value := pulumix.Apply[*GetSecretsResult](o, func(v *GetSecretsResult) []GetSecretsFilter { return v.Filters })
	return pulumix.GArrayOutput[GetSecretsFilter, GetSecretsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetSecretsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetSecretsResult](o, func(v *GetSecretsResult) string { return v.Id })
}

func (o GetSecretsResultOutput) Names() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetSecretsResult](o, func(v *GetSecretsResult) []string { return v.Names })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}
