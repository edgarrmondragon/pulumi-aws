// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a global network resource.
type GlobalNetwork struct {
	pulumi.CustomResourceState

	// Global Network Amazon Resource Name (ARN)
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Description of the Global Network.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewGlobalNetwork registers a new resource with the given unique name, arguments, and options.
func NewGlobalNetwork(ctx *pulumi.Context,
	name string, args *GlobalNetworkArgs, opts ...pulumi.ResourceOption) (*GlobalNetwork, error) {
	if args == nil {
		args = &GlobalNetworkArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GlobalNetwork
	err := ctx.RegisterResource("aws:networkmanager/globalNetwork:GlobalNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalNetwork gets an existing GlobalNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalNetworkState, opts ...pulumi.ResourceOption) (*GlobalNetwork, error) {
	var resource GlobalNetwork
	err := ctx.ReadResource("aws:networkmanager/globalNetwork:GlobalNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalNetwork resources.
type globalNetworkState struct {
	// Global Network Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// Description of the Global Network.
	Description *string `pulumi:"description"`
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type GlobalNetworkState struct {
	// Global Network Amazon Resource Name (ARN)
	Arn pulumix.Input[*string]
	// Description of the Global Network.
	Description pulumix.Input[*string]
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (GlobalNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalNetworkState)(nil)).Elem()
}

type globalNetworkArgs struct {
	// Description of the Global Network.
	Description *string `pulumi:"description"`
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a GlobalNetwork resource.
type GlobalNetworkArgs struct {
	// Description of the Global Network.
	Description pulumix.Input[*string]
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (GlobalNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalNetworkArgs)(nil)).Elem()
}

type GlobalNetworkOutput struct{ *pulumi.OutputState }

func (GlobalNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalNetwork)(nil)).Elem()
}

func (o GlobalNetworkOutput) ToGlobalNetworkOutput() GlobalNetworkOutput {
	return o
}

func (o GlobalNetworkOutput) ToGlobalNetworkOutputWithContext(ctx context.Context) GlobalNetworkOutput {
	return o
}

func (o GlobalNetworkOutput) ToOutput(ctx context.Context) pulumix.Output[GlobalNetwork] {
	return pulumix.Output[GlobalNetwork]{
		OutputState: o.OutputState,
	}
}

// Global Network Amazon Resource Name (ARN)
func (o GlobalNetworkOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[GlobalNetwork](o, func(v GlobalNetwork) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the Global Network.
func (o GlobalNetworkOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[GlobalNetwork](o, func(v GlobalNetwork) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o GlobalNetworkOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[GlobalNetwork](o, func(v GlobalNetwork) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o GlobalNetworkOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[GlobalNetwork](o, func(v GlobalNetwork) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(GlobalNetworkOutput{})
}
