// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmcontacts

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS SSM Contacts Contact Channel.
type ContactChannel struct {
	pulumi.CustomResourceState

	// Whether the contact channel is activated. The contact channel must be activated to use it to engage the contact. One of `ACTIVATED` or `NOT_ACTIVATED`.
	ActivationStatus pulumix.Output[string] `pulumi:"activationStatus"`
	// Amazon Resource Name (ARN) of the contact channel.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
	ContactId pulumix.Output[string] `pulumi:"contactId"`
	// Block that contains contact engagement details. See details below.
	DeliveryAddress pulumix.GPtrOutput[ContactChannelDeliveryAddress, ContactChannelDeliveryAddressOutput] `pulumi:"deliveryAddress"`
	// Name of the contact channel. Must be between 1 and 255 characters, and may contain alphanumerics, underscores (`_`), hyphens (`-`), periods (`.`), and spaces.
	Name pulumix.Output[string] `pulumi:"name"`
	// Type of the contact channel. One of `SMS`, `VOICE` or `EMAIL`.
	Type pulumix.Output[string] `pulumi:"type"`
}

// NewContactChannel registers a new resource with the given unique name, arguments, and options.
func NewContactChannel(ctx *pulumi.Context,
	name string, args *ContactChannelArgs, opts ...pulumi.ResourceOption) (*ContactChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContactId == nil {
		return nil, errors.New("invalid value for required argument 'ContactId'")
	}
	if args.DeliveryAddress == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryAddress'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContactChannel
	err := ctx.RegisterResource("aws:ssmcontacts/contactChannel:ContactChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContactChannel gets an existing ContactChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContactChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContactChannelState, opts ...pulumi.ResourceOption) (*ContactChannel, error) {
	var resource ContactChannel
	err := ctx.ReadResource("aws:ssmcontacts/contactChannel:ContactChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContactChannel resources.
type contactChannelState struct {
	// Whether the contact channel is activated. The contact channel must be activated to use it to engage the contact. One of `ACTIVATED` or `NOT_ACTIVATED`.
	ActivationStatus *string `pulumi:"activationStatus"`
	// Amazon Resource Name (ARN) of the contact channel.
	Arn *string `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
	ContactId *string `pulumi:"contactId"`
	// Block that contains contact engagement details. See details below.
	DeliveryAddress *ContactChannelDeliveryAddress `pulumi:"deliveryAddress"`
	// Name of the contact channel. Must be between 1 and 255 characters, and may contain alphanumerics, underscores (`_`), hyphens (`-`), periods (`.`), and spaces.
	Name *string `pulumi:"name"`
	// Type of the contact channel. One of `SMS`, `VOICE` or `EMAIL`.
	Type *string `pulumi:"type"`
}

type ContactChannelState struct {
	// Whether the contact channel is activated. The contact channel must be activated to use it to engage the contact. One of `ACTIVATED` or `NOT_ACTIVATED`.
	ActivationStatus pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the contact channel.
	Arn pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
	ContactId pulumix.Input[*string]
	// Block that contains contact engagement details. See details below.
	DeliveryAddress pulumix.Input[*ContactChannelDeliveryAddressArgs]
	// Name of the contact channel. Must be between 1 and 255 characters, and may contain alphanumerics, underscores (`_`), hyphens (`-`), periods (`.`), and spaces.
	Name pulumix.Input[*string]
	// Type of the contact channel. One of `SMS`, `VOICE` or `EMAIL`.
	Type pulumix.Input[*string]
}

func (ContactChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*contactChannelState)(nil)).Elem()
}

type contactChannelArgs struct {
	// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
	ContactId string `pulumi:"contactId"`
	// Block that contains contact engagement details. See details below.
	DeliveryAddress ContactChannelDeliveryAddress `pulumi:"deliveryAddress"`
	// Name of the contact channel. Must be between 1 and 255 characters, and may contain alphanumerics, underscores (`_`), hyphens (`-`), periods (`.`), and spaces.
	Name *string `pulumi:"name"`
	// Type of the contact channel. One of `SMS`, `VOICE` or `EMAIL`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a ContactChannel resource.
type ContactChannelArgs struct {
	// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
	ContactId pulumix.Input[string]
	// Block that contains contact engagement details. See details below.
	DeliveryAddress pulumix.Input[*ContactChannelDeliveryAddressArgs]
	// Name of the contact channel. Must be between 1 and 255 characters, and may contain alphanumerics, underscores (`_`), hyphens (`-`), periods (`.`), and spaces.
	Name pulumix.Input[*string]
	// Type of the contact channel. One of `SMS`, `VOICE` or `EMAIL`.
	Type pulumix.Input[string]
}

func (ContactChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contactChannelArgs)(nil)).Elem()
}

type ContactChannelOutput struct{ *pulumi.OutputState }

func (ContactChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactChannel)(nil)).Elem()
}

func (o ContactChannelOutput) ToContactChannelOutput() ContactChannelOutput {
	return o
}

func (o ContactChannelOutput) ToContactChannelOutputWithContext(ctx context.Context) ContactChannelOutput {
	return o
}

func (o ContactChannelOutput) ToOutput(ctx context.Context) pulumix.Output[ContactChannel] {
	return pulumix.Output[ContactChannel]{
		OutputState: o.OutputState,
	}
}

// Whether the contact channel is activated. The contact channel must be activated to use it to engage the contact. One of `ACTIVATED` or `NOT_ACTIVATED`.
func (o ContactChannelOutput) ActivationStatus() pulumix.Output[string] {
	value := pulumix.Apply[ContactChannel](o, func(v ContactChannel) pulumix.Output[string] { return v.ActivationStatus })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the contact channel.
func (o ContactChannelOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ContactChannel](o, func(v ContactChannel) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
func (o ContactChannelOutput) ContactId() pulumix.Output[string] {
	value := pulumix.Apply[ContactChannel](o, func(v ContactChannel) pulumix.Output[string] { return v.ContactId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Block that contains contact engagement details. See details below.
func (o ContactChannelOutput) DeliveryAddress() pulumix.GPtrOutput[ContactChannelDeliveryAddress, ContactChannelDeliveryAddressOutput] {
	value := pulumix.Apply[ContactChannel](o, func(v ContactChannel) pulumix.GPtrOutput[ContactChannelDeliveryAddress, ContactChannelDeliveryAddressOutput] {
		return v.DeliveryAddress
	})
	unwrapped := pulumix.Flatten[*ContactChannelDeliveryAddress, pulumix.GPtrOutput[ContactChannelDeliveryAddress, ContactChannelDeliveryAddressOutput]](value)
	return pulumix.GPtrOutput[ContactChannelDeliveryAddress, ContactChannelDeliveryAddressOutput]{OutputState: unwrapped.OutputState}
}

// Name of the contact channel. Must be between 1 and 255 characters, and may contain alphanumerics, underscores (`_`), hyphens (`-`), periods (`.`), and spaces.
func (o ContactChannelOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ContactChannel](o, func(v ContactChannel) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Type of the contact channel. One of `SMS`, `VOICE` or `EMAIL`.
func (o ContactChannelOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[ContactChannel](o, func(v ContactChannel) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ContactChannelOutput{})
}
