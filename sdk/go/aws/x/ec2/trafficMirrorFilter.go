// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Traffic mirror filter.\
// Read [limits and considerations](https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-considerations.html) for traffic mirroring
type TrafficMirrorFilter struct {
	pulumi.CustomResourceState

	// The ARN of the traffic mirror filter.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A description of the filter.
	Description pulumix.Output[*string] `pulumi:"description"`
	// List of amazon network services that should be mirrored. Valid values: `amazon-dns`.
	NetworkServices pulumix.ArrayOutput[string] `pulumi:"networkServices"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewTrafficMirrorFilter registers a new resource with the given unique name, arguments, and options.
func NewTrafficMirrorFilter(ctx *pulumi.Context,
	name string, args *TrafficMirrorFilterArgs, opts ...pulumi.ResourceOption) (*TrafficMirrorFilter, error) {
	if args == nil {
		args = &TrafficMirrorFilterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrafficMirrorFilter
	err := ctx.RegisterResource("aws:ec2/trafficMirrorFilter:TrafficMirrorFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficMirrorFilter gets an existing TrafficMirrorFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficMirrorFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficMirrorFilterState, opts ...pulumi.ResourceOption) (*TrafficMirrorFilter, error) {
	var resource TrafficMirrorFilter
	err := ctx.ReadResource("aws:ec2/trafficMirrorFilter:TrafficMirrorFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficMirrorFilter resources.
type trafficMirrorFilterState struct {
	// The ARN of the traffic mirror filter.
	Arn *string `pulumi:"arn"`
	// A description of the filter.
	Description *string `pulumi:"description"`
	// List of amazon network services that should be mirrored. Valid values: `amazon-dns`.
	NetworkServices []string `pulumi:"networkServices"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type TrafficMirrorFilterState struct {
	// The ARN of the traffic mirror filter.
	Arn pulumix.Input[*string]
	// A description of the filter.
	Description pulumix.Input[*string]
	// List of amazon network services that should be mirrored. Valid values: `amazon-dns`.
	NetworkServices pulumix.Input[[]string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (TrafficMirrorFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficMirrorFilterState)(nil)).Elem()
}

type trafficMirrorFilterArgs struct {
	// A description of the filter.
	Description *string `pulumi:"description"`
	// List of amazon network services that should be mirrored. Valid values: `amazon-dns`.
	NetworkServices []string `pulumi:"networkServices"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a TrafficMirrorFilter resource.
type TrafficMirrorFilterArgs struct {
	// A description of the filter.
	Description pulumix.Input[*string]
	// List of amazon network services that should be mirrored. Valid values: `amazon-dns`.
	NetworkServices pulumix.Input[[]string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (TrafficMirrorFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficMirrorFilterArgs)(nil)).Elem()
}

type TrafficMirrorFilterOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilter)(nil)).Elem()
}

func (o TrafficMirrorFilterOutput) ToTrafficMirrorFilterOutput() TrafficMirrorFilterOutput {
	return o
}

func (o TrafficMirrorFilterOutput) ToTrafficMirrorFilterOutputWithContext(ctx context.Context) TrafficMirrorFilterOutput {
	return o
}

func (o TrafficMirrorFilterOutput) ToOutput(ctx context.Context) pulumix.Output[TrafficMirrorFilter] {
	return pulumix.Output[TrafficMirrorFilter]{
		OutputState: o.OutputState,
	}
}

// The ARN of the traffic mirror filter.
func (o TrafficMirrorFilterOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[TrafficMirrorFilter](o, func(v TrafficMirrorFilter) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description of the filter.
func (o TrafficMirrorFilterOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[TrafficMirrorFilter](o, func(v TrafficMirrorFilter) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// List of amazon network services that should be mirrored. Valid values: `amazon-dns`.
func (o TrafficMirrorFilterOutput) NetworkServices() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[TrafficMirrorFilter](o, func(v TrafficMirrorFilter) pulumix.ArrayOutput[string] { return v.NetworkServices })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TrafficMirrorFilterOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[TrafficMirrorFilter](o, func(v TrafficMirrorFilter) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TrafficMirrorFilterOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[TrafficMirrorFilter](o, func(v TrafficMirrorFilter) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(TrafficMirrorFilterOutput{})
}
