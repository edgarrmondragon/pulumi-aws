// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xray

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type GroupInsightsConfiguration struct {
	// Specifies whether insights are enabled.
	InsightsEnabled bool `pulumi:"insightsEnabled"`
	// Specifies whether insight notifications are enabled.
	NotificationsEnabled *bool `pulumi:"notificationsEnabled"`
}

type GroupInsightsConfigurationArgs struct {
	// Specifies whether insights are enabled.
	InsightsEnabled pulumix.Input[bool] `pulumi:"insightsEnabled"`
	// Specifies whether insight notifications are enabled.
	NotificationsEnabled pulumix.Input[*bool] `pulumi:"notificationsEnabled"`
}

func (GroupInsightsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInsightsConfiguration)(nil)).Elem()
}

func (i GroupInsightsConfigurationArgs) ToGroupInsightsConfigurationOutput() GroupInsightsConfigurationOutput {
	return i.ToGroupInsightsConfigurationOutputWithContext(context.Background())
}

func (i GroupInsightsConfigurationArgs) ToGroupInsightsConfigurationOutputWithContext(ctx context.Context) GroupInsightsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInsightsConfigurationOutput)
}

func (i *GroupInsightsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GroupInsightsConfigurationArgs] {
	return pulumix.Val(i)
}

type GroupInsightsConfigurationOutput struct{ *pulumi.OutputState }

func (GroupInsightsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInsightsConfiguration)(nil)).Elem()
}

func (o GroupInsightsConfigurationOutput) ToGroupInsightsConfigurationOutput() GroupInsightsConfigurationOutput {
	return o
}

func (o GroupInsightsConfigurationOutput) ToGroupInsightsConfigurationOutputWithContext(ctx context.Context) GroupInsightsConfigurationOutput {
	return o
}

func (o GroupInsightsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GroupInsightsConfiguration] {
	return pulumix.Output[GroupInsightsConfiguration]{
		OutputState: o.OutputState,
	}
}

// Specifies whether insights are enabled.
func (o GroupInsightsConfigurationOutput) InsightsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[GroupInsightsConfiguration](o, func(v GroupInsightsConfiguration) bool { return v.InsightsEnabled })
}

// Specifies whether insight notifications are enabled.
func (o GroupInsightsConfigurationOutput) NotificationsEnabled() pulumix.Output[*bool] {
	return pulumix.Apply[GroupInsightsConfiguration](o, func(v GroupInsightsConfiguration) *bool { return v.NotificationsEnabled })
}

func init() {
	pulumi.RegisterOutputType(GroupInsightsConfigurationOutput{})
}
