// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an RDS DB proxy default target group resource.
//
// The `rds.ProxyDefaultTargetGroup` behaves differently from normal resources, in that the provider does not _create_ or _destroy_ this resource, since it implicitly exists as part of an RDS DB Proxy. On the provider resource creation it is automatically imported and on resource destruction, the provider performs no actions in RDS.
type ProxyDefaultTargetGroup struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) representing the target group.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig pulumix.GPtrOutput[ProxyDefaultTargetGroupConnectionPoolConfig, ProxyDefaultTargetGroupConnectionPoolConfigOutput] `pulumi:"connectionPoolConfig"`
	// Name of the RDS DB Proxy.
	DbProxyName pulumix.Output[string] `pulumi:"dbProxyName"`
	// The name of the default target group.
	Name pulumix.Output[string] `pulumi:"name"`
}

// NewProxyDefaultTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewProxyDefaultTargetGroup(ctx *pulumi.Context,
	name string, args *ProxyDefaultTargetGroupArgs, opts ...pulumi.ResourceOption) (*ProxyDefaultTargetGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbProxyName == nil {
		return nil, errors.New("invalid value for required argument 'DbProxyName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProxyDefaultTargetGroup
	err := ctx.RegisterResource("aws:rds/proxyDefaultTargetGroup:ProxyDefaultTargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyDefaultTargetGroup gets an existing ProxyDefaultTargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyDefaultTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyDefaultTargetGroupState, opts ...pulumi.ResourceOption) (*ProxyDefaultTargetGroup, error) {
	var resource ProxyDefaultTargetGroup
	err := ctx.ReadResource("aws:rds/proxyDefaultTargetGroup:ProxyDefaultTargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxyDefaultTargetGroup resources.
type proxyDefaultTargetGroupState struct {
	// The Amazon Resource Name (ARN) representing the target group.
	Arn *string `pulumi:"arn"`
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig *ProxyDefaultTargetGroupConnectionPoolConfig `pulumi:"connectionPoolConfig"`
	// Name of the RDS DB Proxy.
	DbProxyName *string `pulumi:"dbProxyName"`
	// The name of the default target group.
	Name *string `pulumi:"name"`
}

type ProxyDefaultTargetGroupState struct {
	// The Amazon Resource Name (ARN) representing the target group.
	Arn pulumix.Input[*string]
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig pulumix.Input[*ProxyDefaultTargetGroupConnectionPoolConfigArgs]
	// Name of the RDS DB Proxy.
	DbProxyName pulumix.Input[*string]
	// The name of the default target group.
	Name pulumix.Input[*string]
}

func (ProxyDefaultTargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyDefaultTargetGroupState)(nil)).Elem()
}

type proxyDefaultTargetGroupArgs struct {
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig *ProxyDefaultTargetGroupConnectionPoolConfig `pulumi:"connectionPoolConfig"`
	// Name of the RDS DB Proxy.
	DbProxyName string `pulumi:"dbProxyName"`
}

// The set of arguments for constructing a ProxyDefaultTargetGroup resource.
type ProxyDefaultTargetGroupArgs struct {
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig pulumix.Input[*ProxyDefaultTargetGroupConnectionPoolConfigArgs]
	// Name of the RDS DB Proxy.
	DbProxyName pulumix.Input[string]
}

func (ProxyDefaultTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyDefaultTargetGroupArgs)(nil)).Elem()
}

type ProxyDefaultTargetGroupOutput struct{ *pulumi.OutputState }

func (ProxyDefaultTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyDefaultTargetGroup)(nil)).Elem()
}

func (o ProxyDefaultTargetGroupOutput) ToProxyDefaultTargetGroupOutput() ProxyDefaultTargetGroupOutput {
	return o
}

func (o ProxyDefaultTargetGroupOutput) ToProxyDefaultTargetGroupOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupOutput {
	return o
}

func (o ProxyDefaultTargetGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ProxyDefaultTargetGroup] {
	return pulumix.Output[ProxyDefaultTargetGroup]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) representing the target group.
func (o ProxyDefaultTargetGroupOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ProxyDefaultTargetGroup](o, func(v ProxyDefaultTargetGroup) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The settings that determine the size and behavior of the connection pool for the target group.
func (o ProxyDefaultTargetGroupOutput) ConnectionPoolConfig() pulumix.GPtrOutput[ProxyDefaultTargetGroupConnectionPoolConfig, ProxyDefaultTargetGroupConnectionPoolConfigOutput] {
	value := pulumix.Apply[ProxyDefaultTargetGroup](o, func(v ProxyDefaultTargetGroup) pulumix.GPtrOutput[ProxyDefaultTargetGroupConnectionPoolConfig, ProxyDefaultTargetGroupConnectionPoolConfigOutput] {
		return v.ConnectionPoolConfig
	})
	unwrapped := pulumix.Flatten[*ProxyDefaultTargetGroupConnectionPoolConfig, pulumix.GPtrOutput[ProxyDefaultTargetGroupConnectionPoolConfig, ProxyDefaultTargetGroupConnectionPoolConfigOutput]](value)
	return pulumix.GPtrOutput[ProxyDefaultTargetGroupConnectionPoolConfig, ProxyDefaultTargetGroupConnectionPoolConfigOutput]{OutputState: unwrapped.OutputState}
}

// Name of the RDS DB Proxy.
func (o ProxyDefaultTargetGroupOutput) DbProxyName() pulumix.Output[string] {
	value := pulumix.Apply[ProxyDefaultTargetGroup](o, func(v ProxyDefaultTargetGroup) pulumix.Output[string] { return v.DbProxyName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the default target group.
func (o ProxyDefaultTargetGroupOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ProxyDefaultTargetGroup](o, func(v ProxyDefaultTargetGroup) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ProxyDefaultTargetGroupOutput{})
}
