// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmincidents

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// > **NOTE:** The AWS Region specified by a provider must always be one of the Regions specified for the replication set.
//
// Use this data source to manage a replication set in AWS Systems Manager Incident Manager.
func LookupReplicationSet(ctx *pulumi.Context, args *LookupReplicationSetArgs, opts ...pulumi.InvokeOption) (*LookupReplicationSetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReplicationSetResult
	err := ctx.Invoke("aws:ssmincidents/getReplicationSet:getReplicationSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReplicationSet.
type LookupReplicationSetArgs struct {
	// All tags applied to the replication set.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getReplicationSet.
type LookupReplicationSetResult struct {
	// The Amazon Resouce Name (ARN) of the replication set.
	Arn string `pulumi:"arn"`
	// The ARN of the user who created the replication set.
	CreatedBy string `pulumi:"createdBy"`
	// If `true`, the last remaining Region in a replication set canâ€™t be deleted.
	DeletionProtected bool `pulumi:"deletionProtected"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ARN of the user who last modified the replication set.
	LastModifiedBy string                    `pulumi:"lastModifiedBy"`
	Regions        []GetReplicationSetRegion `pulumi:"regions"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status string `pulumi:"status"`
	// All tags applied to the replication set.
	Tags map[string]string `pulumi:"tags"`
}

func LookupReplicationSetOutput(ctx *pulumi.Context, args LookupReplicationSetOutputArgs, opts ...pulumi.InvokeOption) LookupReplicationSetResultOutput {
	outputResult := pulumix.ApplyErr[*LookupReplicationSetArgs](args.ToOutput(), func(plainArgs *LookupReplicationSetArgs) (*LookupReplicationSetResult, error) {
		return LookupReplicationSet(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupReplicationSetResultOutput, *LookupReplicationSetResult](outputResult)
}

// A collection of arguments for invoking getReplicationSet.
type LookupReplicationSetOutputArgs struct {
	// All tags applied to the replication set.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupReplicationSetOutputArgs) ToOutput() pulumix.Output[*LookupReplicationSetArgs] {
	allArgs := pulumix.All(
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupReplicationSetArgs {
		return &LookupReplicationSetArgs{
			Tags: resolvedArgs[0].(map[string]string),
		}
	})
}

type LookupReplicationSetResultOutput struct{ *pulumi.OutputState }

func (LookupReplicationSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationSetResult)(nil)).Elem()
}

func (o LookupReplicationSetResultOutput) ToOutput(context.Context) pulumix.Output[*LookupReplicationSetResult] {
	return pulumix.Output[*LookupReplicationSetResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupReplicationSetResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupReplicationSetResult](o, func(v *LookupReplicationSetResult) string { return v.Arn })
}

func (o LookupReplicationSetResultOutput) CreatedBy() pulumix.Output[string] {
	return pulumix.Apply[*LookupReplicationSetResult](o, func(v *LookupReplicationSetResult) string { return v.CreatedBy })
}

func (o LookupReplicationSetResultOutput) DeletionProtected() pulumix.Output[bool] {
	return pulumix.Apply[*LookupReplicationSetResult](o, func(v *LookupReplicationSetResult) bool { return v.DeletionProtected })
}

func (o LookupReplicationSetResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupReplicationSetResult](o, func(v *LookupReplicationSetResult) string { return v.Id })
}

func (o LookupReplicationSetResultOutput) LastModifiedBy() pulumix.Output[string] {
	return pulumix.Apply[*LookupReplicationSetResult](o, func(v *LookupReplicationSetResult) string { return v.LastModifiedBy })
}

func (o LookupReplicationSetResultOutput) Regions() pulumix.GArrayOutput[GetReplicationSetRegion, GetReplicationSetRegionOutput] {
	value := pulumix.Apply[*LookupReplicationSetResult](o, func(v *LookupReplicationSetResult) []GetReplicationSetRegion { return v.Regions })
	return pulumix.GArrayOutput[GetReplicationSetRegion, GetReplicationSetRegionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupReplicationSetResultOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[*LookupReplicationSetResult](o, func(v *LookupReplicationSetResult) string { return v.Status })
}

func (o LookupReplicationSetResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupReplicationSetResult](o, func(v *LookupReplicationSetResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
