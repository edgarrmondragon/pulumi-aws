// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS Kendra FAQ.
type Faq struct {
	pulumi.CustomResourceState

	// ARN of the FAQ.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Unix datetime that the FAQ was created.
	CreatedAt pulumix.Output[string] `pulumi:"createdAt"`
	// The description for a FAQ.
	Description pulumix.Output[*string] `pulumi:"description"`
	// When the Status field value is `FAILED`, this contains a message that explains why.
	ErrorMessage pulumix.Output[string] `pulumi:"errorMessage"`
	// The identifier of the FAQ.
	FaqId pulumix.Output[string] `pulumi:"faqId"`
	// The file format used by the input files for the FAQ. Valid Values are `CSV`, `CSV_WITH_HEADER`, `JSON`.
	FileFormat pulumix.Output[*string] `pulumi:"fileFormat"`
	// The identifier of the index for a FAQ.
	IndexId pulumix.Output[string] `pulumi:"indexId"`
	// The code for a language. This shows a supported language for the FAQ document. English is supported by default. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html).
	LanguageCode pulumix.Output[string] `pulumi:"languageCode"`
	// The name that should be associated with the FAQ.
	Name pulumix.Output[string] `pulumi:"name"`
	// The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// The S3 location of the FAQ input data. Detailed below.
	//
	// The `s3Path` configuration block supports the following arguments:
	S3Path pulumix.GPtrOutput[FaqS3Path, FaqS3PathOutput] `pulumi:"s3Path"`
	// The status of the FAQ. It is ready to use when the status is ACTIVE.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The date and time that the FAQ was last updated.
	UpdatedAt pulumix.Output[string] `pulumi:"updatedAt"`
}

// NewFaq registers a new resource with the given unique name, arguments, and options.
func NewFaq(ctx *pulumi.Context,
	name string, args *FaqArgs, opts ...pulumi.ResourceOption) (*Faq, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IndexId == nil {
		return nil, errors.New("invalid value for required argument 'IndexId'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	if args.S3Path == nil {
		return nil, errors.New("invalid value for required argument 'S3Path'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Faq
	err := ctx.RegisterResource("aws:kendra/faq:Faq", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFaq gets an existing Faq resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFaq(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FaqState, opts ...pulumi.ResourceOption) (*Faq, error) {
	var resource Faq
	err := ctx.ReadResource("aws:kendra/faq:Faq", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Faq resources.
type faqState struct {
	// ARN of the FAQ.
	Arn *string `pulumi:"arn"`
	// The Unix datetime that the FAQ was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The description for a FAQ.
	Description *string `pulumi:"description"`
	// When the Status field value is `FAILED`, this contains a message that explains why.
	ErrorMessage *string `pulumi:"errorMessage"`
	// The identifier of the FAQ.
	FaqId *string `pulumi:"faqId"`
	// The file format used by the input files for the FAQ. Valid Values are `CSV`, `CSV_WITH_HEADER`, `JSON`.
	FileFormat *string `pulumi:"fileFormat"`
	// The identifier of the index for a FAQ.
	IndexId *string `pulumi:"indexId"`
	// The code for a language. This shows a supported language for the FAQ document. English is supported by default. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html).
	LanguageCode *string `pulumi:"languageCode"`
	// The name that should be associated with the FAQ.
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
	RoleArn *string `pulumi:"roleArn"`
	// The S3 location of the FAQ input data. Detailed below.
	//
	// The `s3Path` configuration block supports the following arguments:
	S3Path *FaqS3Path `pulumi:"s3Path"`
	// The status of the FAQ. It is ready to use when the status is ACTIVE.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The date and time that the FAQ was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type FaqState struct {
	// ARN of the FAQ.
	Arn pulumix.Input[*string]
	// The Unix datetime that the FAQ was created.
	CreatedAt pulumix.Input[*string]
	// The description for a FAQ.
	Description pulumix.Input[*string]
	// When the Status field value is `FAILED`, this contains a message that explains why.
	ErrorMessage pulumix.Input[*string]
	// The identifier of the FAQ.
	FaqId pulumix.Input[*string]
	// The file format used by the input files for the FAQ. Valid Values are `CSV`, `CSV_WITH_HEADER`, `JSON`.
	FileFormat pulumix.Input[*string]
	// The identifier of the index for a FAQ.
	IndexId pulumix.Input[*string]
	// The code for a language. This shows a supported language for the FAQ document. English is supported by default. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html).
	LanguageCode pulumix.Input[*string]
	// The name that should be associated with the FAQ.
	Name pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
	RoleArn pulumix.Input[*string]
	// The S3 location of the FAQ input data. Detailed below.
	//
	// The `s3Path` configuration block supports the following arguments:
	S3Path pulumix.Input[*FaqS3PathArgs]
	// The status of the FAQ. It is ready to use when the status is ACTIVE.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The date and time that the FAQ was last updated.
	UpdatedAt pulumix.Input[*string]
}

func (FaqState) ElementType() reflect.Type {
	return reflect.TypeOf((*faqState)(nil)).Elem()
}

type faqArgs struct {
	// The description for a FAQ.
	Description *string `pulumi:"description"`
	// The file format used by the input files for the FAQ. Valid Values are `CSV`, `CSV_WITH_HEADER`, `JSON`.
	FileFormat *string `pulumi:"fileFormat"`
	// The identifier of the index for a FAQ.
	IndexId string `pulumi:"indexId"`
	// The code for a language. This shows a supported language for the FAQ document. English is supported by default. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html).
	LanguageCode *string `pulumi:"languageCode"`
	// The name that should be associated with the FAQ.
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
	RoleArn string `pulumi:"roleArn"`
	// The S3 location of the FAQ input data. Detailed below.
	//
	// The `s3Path` configuration block supports the following arguments:
	S3Path FaqS3Path `pulumi:"s3Path"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Faq resource.
type FaqArgs struct {
	// The description for a FAQ.
	Description pulumix.Input[*string]
	// The file format used by the input files for the FAQ. Valid Values are `CSV`, `CSV_WITH_HEADER`, `JSON`.
	FileFormat pulumix.Input[*string]
	// The identifier of the index for a FAQ.
	IndexId pulumix.Input[string]
	// The code for a language. This shows a supported language for the FAQ document. English is supported by default. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html).
	LanguageCode pulumix.Input[*string]
	// The name that should be associated with the FAQ.
	Name pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
	RoleArn pulumix.Input[string]
	// The S3 location of the FAQ input data. Detailed below.
	//
	// The `s3Path` configuration block supports the following arguments:
	S3Path pulumix.Input[*FaqS3PathArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (FaqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*faqArgs)(nil)).Elem()
}

type FaqOutput struct{ *pulumi.OutputState }

func (FaqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Faq)(nil)).Elem()
}

func (o FaqOutput) ToFaqOutput() FaqOutput {
	return o
}

func (o FaqOutput) ToFaqOutputWithContext(ctx context.Context) FaqOutput {
	return o
}

func (o FaqOutput) ToOutput(ctx context.Context) pulumix.Output[Faq] {
	return pulumix.Output[Faq]{
		OutputState: o.OutputState,
	}
}

// ARN of the FAQ.
func (o FaqOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Unix datetime that the FAQ was created.
func (o FaqOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description for a FAQ.
func (o FaqOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// When the Status field value is `FAILED`, this contains a message that explains why.
func (o FaqOutput) ErrorMessage() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.ErrorMessage })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier of the FAQ.
func (o FaqOutput) FaqId() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.FaqId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The file format used by the input files for the FAQ. Valid Values are `CSV`, `CSV_WITH_HEADER`, `JSON`.
func (o FaqOutput) FileFormat() pulumix.Output[*string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[*string] { return v.FileFormat })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The identifier of the index for a FAQ.
func (o FaqOutput) IndexId() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.IndexId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The code for a language. This shows a supported language for the FAQ document. English is supported by default. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html).
func (o FaqOutput) LanguageCode() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.LanguageCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name that should be associated with the FAQ.
func (o FaqOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
func (o FaqOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The S3 location of the FAQ input data. Detailed below.
//
// The `s3Path` configuration block supports the following arguments:
func (o FaqOutput) S3Path() pulumix.GPtrOutput[FaqS3Path, FaqS3PathOutput] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.GPtrOutput[FaqS3Path, FaqS3PathOutput] { return v.S3Path })
	unwrapped := pulumix.Flatten[*FaqS3Path, pulumix.GPtrOutput[FaqS3Path, FaqS3PathOutput]](value)
	return pulumix.GPtrOutput[FaqS3Path, FaqS3PathOutput]{OutputState: unwrapped.OutputState}
}

// The status of the FAQ. It is ready to use when the status is ACTIVE.
func (o FaqOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FaqOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FaqOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The date and time that the FAQ was last updated.
func (o FaqOutput) UpdatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Faq](o, func(v Faq) pulumix.Output[string] { return v.UpdatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(FaqOutput{})
}
