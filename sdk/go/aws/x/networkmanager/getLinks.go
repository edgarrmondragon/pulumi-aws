// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieve information about link.
func GetLinks(ctx *pulumi.Context, args *GetLinksArgs, opts ...pulumi.InvokeOption) (*GetLinksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLinksResult
	err := ctx.Invoke("aws:networkmanager/getLinks:getLinks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLinks.
type GetLinksArgs struct {
	// ID of the Global Network of the links to retrieve.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// Link provider to retrieve.
	ProviderName *string `pulumi:"providerName"`
	// ID of the site of the links to retrieve.
	SiteId *string `pulumi:"siteId"`
	// Restricts the list to the links with these tags.
	Tags map[string]string `pulumi:"tags"`
	// Link type to retrieve.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getLinks.
type GetLinksResult struct {
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// IDs of the links.
	Ids          []string          `pulumi:"ids"`
	ProviderName *string           `pulumi:"providerName"`
	SiteId       *string           `pulumi:"siteId"`
	Tags         map[string]string `pulumi:"tags"`
	Type         *string           `pulumi:"type"`
}

func GetLinksOutput(ctx *pulumi.Context, args GetLinksOutputArgs, opts ...pulumi.InvokeOption) GetLinksResultOutput {
	outputResult := pulumix.ApplyErr[*GetLinksArgs](args.ToOutput(), func(plainArgs *GetLinksArgs) (*GetLinksResult, error) {
		return GetLinks(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetLinksResultOutput, *GetLinksResult](outputResult)
}

// A collection of arguments for invoking getLinks.
type GetLinksOutputArgs struct {
	// ID of the Global Network of the links to retrieve.
	GlobalNetworkId pulumix.Input[string] `pulumi:"globalNetworkId"`
	// Link provider to retrieve.
	ProviderName pulumix.Input[*string] `pulumi:"providerName"`
	// ID of the site of the links to retrieve.
	SiteId pulumix.Input[*string] `pulumi:"siteId"`
	// Restricts the list to the links with these tags.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Link type to retrieve.
	Type pulumix.Input[*string] `pulumi:"type"`
}

func (args GetLinksOutputArgs) ToOutput() pulumix.Output[*GetLinksArgs] {
	allArgs := pulumix.All(
		args.GlobalNetworkId.ToOutput(context.Background()).AsAny(),
		args.ProviderName.ToOutput(context.Background()).AsAny(),
		args.SiteId.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny(),
		args.Type.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetLinksArgs {
		return &GetLinksArgs{
			GlobalNetworkId: resolvedArgs[0].(string),
			ProviderName:    resolvedArgs[1].(*string),
			SiteId:          resolvedArgs[2].(*string),
			Tags:            resolvedArgs[3].(map[string]string),
			Type:            resolvedArgs[4].(*string),
		}
	})
}

type GetLinksResultOutput struct{ *pulumi.OutputState }

func (GetLinksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinksResult)(nil)).Elem()
}

func (o GetLinksResultOutput) ToOutput(context.Context) pulumix.Output[*GetLinksResult] {
	return pulumix.Output[*GetLinksResult]{
		OutputState: o.OutputState,
	}
}

func (o GetLinksResultOutput) GlobalNetworkId() pulumix.Output[string] {
	return pulumix.Apply[*GetLinksResult](o, func(v *GetLinksResult) string { return v.GlobalNetworkId })
}

func (o GetLinksResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetLinksResult](o, func(v *GetLinksResult) string { return v.Id })
}

func (o GetLinksResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetLinksResult](o, func(v *GetLinksResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetLinksResultOutput) ProviderName() pulumix.Output[*string] {
	return pulumix.Apply[*GetLinksResult](o, func(v *GetLinksResult) *string { return v.ProviderName })
}

func (o GetLinksResultOutput) SiteId() pulumix.Output[*string] {
	return pulumix.Apply[*GetLinksResult](o, func(v *GetLinksResult) *string { return v.SiteId })
}

func (o GetLinksResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetLinksResult](o, func(v *GetLinksResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetLinksResultOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[*GetLinksResult](o, func(v *GetLinksResult) *string { return v.Type })
}
