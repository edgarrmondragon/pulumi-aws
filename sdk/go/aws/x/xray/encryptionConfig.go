// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package xray

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates and manages an AWS XRay Encryption Config.
//
// > **NOTE:** Removing this resource from the provider has no effect to the encryption configuration within X-Ray.
type EncryptionConfig struct {
	pulumi.CustomResourceState

	// An AWS KMS customer master key (CMK) ARN.
	KeyId pulumix.Output[*string] `pulumi:"keyId"`
	// The type of encryption. Set to `KMS` to use your own key for encryption. Set to `NONE` for default encryption.
	Type pulumix.Output[string] `pulumi:"type"`
}

// NewEncryptionConfig registers a new resource with the given unique name, arguments, and options.
func NewEncryptionConfig(ctx *pulumi.Context,
	name string, args *EncryptionConfigArgs, opts ...pulumi.ResourceOption) (*EncryptionConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EncryptionConfig
	err := ctx.RegisterResource("aws:xray/encryptionConfig:EncryptionConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEncryptionConfig gets an existing EncryptionConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEncryptionConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EncryptionConfigState, opts ...pulumi.ResourceOption) (*EncryptionConfig, error) {
	var resource EncryptionConfig
	err := ctx.ReadResource("aws:xray/encryptionConfig:EncryptionConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EncryptionConfig resources.
type encryptionConfigState struct {
	// An AWS KMS customer master key (CMK) ARN.
	KeyId *string `pulumi:"keyId"`
	// The type of encryption. Set to `KMS` to use your own key for encryption. Set to `NONE` for default encryption.
	Type *string `pulumi:"type"`
}

type EncryptionConfigState struct {
	// An AWS KMS customer master key (CMK) ARN.
	KeyId pulumix.Input[*string]
	// The type of encryption. Set to `KMS` to use your own key for encryption. Set to `NONE` for default encryption.
	Type pulumix.Input[*string]
}

func (EncryptionConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionConfigState)(nil)).Elem()
}

type encryptionConfigArgs struct {
	// An AWS KMS customer master key (CMK) ARN.
	KeyId *string `pulumi:"keyId"`
	// The type of encryption. Set to `KMS` to use your own key for encryption. Set to `NONE` for default encryption.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a EncryptionConfig resource.
type EncryptionConfigArgs struct {
	// An AWS KMS customer master key (CMK) ARN.
	KeyId pulumix.Input[*string]
	// The type of encryption. Set to `KMS` to use your own key for encryption. Set to `NONE` for default encryption.
	Type pulumix.Input[string]
}

func (EncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionConfigArgs)(nil)).Elem()
}

type EncryptionConfigOutput struct{ *pulumi.OutputState }

func (EncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfig)(nil)).Elem()
}

func (o EncryptionConfigOutput) ToEncryptionConfigOutput() EncryptionConfigOutput {
	return o
}

func (o EncryptionConfigOutput) ToEncryptionConfigOutputWithContext(ctx context.Context) EncryptionConfigOutput {
	return o
}

func (o EncryptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[EncryptionConfig] {
	return pulumix.Output[EncryptionConfig]{
		OutputState: o.OutputState,
	}
}

// An AWS KMS customer master key (CMK) ARN.
func (o EncryptionConfigOutput) KeyId() pulumix.Output[*string] {
	value := pulumix.Apply[EncryptionConfig](o, func(v EncryptionConfig) pulumix.Output[*string] { return v.KeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The type of encryption. Set to `KMS` to use your own key for encryption. Set to `NONE` for default encryption.
func (o EncryptionConfigOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[EncryptionConfig](o, func(v EncryptionConfig) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(EncryptionConfigOutput{})
}
