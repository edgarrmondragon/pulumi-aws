// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmincidents

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage response plans in AWS Systems Manager Incident Manager.
type ResponsePlan struct {
	pulumi.CustomResourceState

	// The actions that the response plan starts at the beginning of an incident.
	Action pulumix.GPtrOutput[ResponsePlanAction, ResponsePlanActionOutput] `pulumi:"action"`
	// The ARN of the response plan.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Chatbot chat channel used for collaboration during an incident.
	ChatChannels pulumix.ArrayOutput[string] `pulumi:"chatChannels"`
	// The long format of the response plan name. This field can contain spaces.
	DisplayName pulumix.Output[*string] `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
	Engagements      pulumix.ArrayOutput[string]                                                          `pulumi:"engagements"`
	IncidentTemplate pulumix.GPtrOutput[ResponsePlanIncidentTemplate, ResponsePlanIncidentTemplateOutput] `pulumi:"incidentTemplate"`
	// Information about third-party services integrated into the response plan. The following values are supported:
	Integration pulumix.GPtrOutput[ResponsePlanIntegration, ResponsePlanIntegrationOutput] `pulumi:"integration"`
	// The name of the response plan.
	Name pulumix.Output[string] `pulumi:"name"`
	// The tags applied to the response plan.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewResponsePlan registers a new resource with the given unique name, arguments, and options.
func NewResponsePlan(ctx *pulumi.Context,
	name string, args *ResponsePlanArgs, opts ...pulumi.ResourceOption) (*ResponsePlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IncidentTemplate == nil {
		return nil, errors.New("invalid value for required argument 'IncidentTemplate'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResponsePlan
	err := ctx.RegisterResource("aws:ssmincidents/responsePlan:ResponsePlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResponsePlan gets an existing ResponsePlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResponsePlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResponsePlanState, opts ...pulumi.ResourceOption) (*ResponsePlan, error) {
	var resource ResponsePlan
	err := ctx.ReadResource("aws:ssmincidents/responsePlan:ResponsePlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResponsePlan resources.
type responsePlanState struct {
	// The actions that the response plan starts at the beginning of an incident.
	Action *ResponsePlanAction `pulumi:"action"`
	// The ARN of the response plan.
	Arn *string `pulumi:"arn"`
	// The Chatbot chat channel used for collaboration during an incident.
	ChatChannels []string `pulumi:"chatChannels"`
	// The long format of the response plan name. This field can contain spaces.
	DisplayName *string `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
	Engagements      []string                      `pulumi:"engagements"`
	IncidentTemplate *ResponsePlanIncidentTemplate `pulumi:"incidentTemplate"`
	// Information about third-party services integrated into the response plan. The following values are supported:
	Integration *ResponsePlanIntegration `pulumi:"integration"`
	// The name of the response plan.
	Name *string `pulumi:"name"`
	// The tags applied to the response plan.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ResponsePlanState struct {
	// The actions that the response plan starts at the beginning of an incident.
	Action pulumix.Input[*ResponsePlanActionArgs]
	// The ARN of the response plan.
	Arn pulumix.Input[*string]
	// The Chatbot chat channel used for collaboration during an incident.
	ChatChannels pulumix.Input[[]string]
	// The long format of the response plan name. This field can contain spaces.
	DisplayName pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
	Engagements      pulumix.Input[[]string]
	IncidentTemplate pulumix.Input[*ResponsePlanIncidentTemplateArgs]
	// Information about third-party services integrated into the response plan. The following values are supported:
	Integration pulumix.Input[*ResponsePlanIntegrationArgs]
	// The name of the response plan.
	Name pulumix.Input[*string]
	// The tags applied to the response plan.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ResponsePlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*responsePlanState)(nil)).Elem()
}

type responsePlanArgs struct {
	// The actions that the response plan starts at the beginning of an incident.
	Action *ResponsePlanAction `pulumi:"action"`
	// The Chatbot chat channel used for collaboration during an incident.
	ChatChannels []string `pulumi:"chatChannels"`
	// The long format of the response plan name. This field can contain spaces.
	DisplayName *string `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
	Engagements      []string                     `pulumi:"engagements"`
	IncidentTemplate ResponsePlanIncidentTemplate `pulumi:"incidentTemplate"`
	// Information about third-party services integrated into the response plan. The following values are supported:
	Integration *ResponsePlanIntegration `pulumi:"integration"`
	// The name of the response plan.
	Name *string `pulumi:"name"`
	// The tags applied to the response plan.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ResponsePlan resource.
type ResponsePlanArgs struct {
	// The actions that the response plan starts at the beginning of an incident.
	Action pulumix.Input[*ResponsePlanActionArgs]
	// The Chatbot chat channel used for collaboration during an incident.
	ChatChannels pulumix.Input[[]string]
	// The long format of the response plan name. This field can contain spaces.
	DisplayName pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
	Engagements      pulumix.Input[[]string]
	IncidentTemplate pulumix.Input[*ResponsePlanIncidentTemplateArgs]
	// Information about third-party services integrated into the response plan. The following values are supported:
	Integration pulumix.Input[*ResponsePlanIntegrationArgs]
	// The name of the response plan.
	Name pulumix.Input[*string]
	// The tags applied to the response plan.
	Tags pulumix.Input[map[string]string]
}

func (ResponsePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*responsePlanArgs)(nil)).Elem()
}

type ResponsePlanOutput struct{ *pulumi.OutputState }

func (ResponsePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlan)(nil)).Elem()
}

func (o ResponsePlanOutput) ToResponsePlanOutput() ResponsePlanOutput {
	return o
}

func (o ResponsePlanOutput) ToResponsePlanOutputWithContext(ctx context.Context) ResponsePlanOutput {
	return o
}

func (o ResponsePlanOutput) ToOutput(ctx context.Context) pulumix.Output[ResponsePlan] {
	return pulumix.Output[ResponsePlan]{
		OutputState: o.OutputState,
	}
}

// The actions that the response plan starts at the beginning of an incident.
func (o ResponsePlanOutput) Action() pulumix.GPtrOutput[ResponsePlanAction, ResponsePlanActionOutput] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.GPtrOutput[ResponsePlanAction, ResponsePlanActionOutput] { return v.Action })
	unwrapped := pulumix.Flatten[*ResponsePlanAction, pulumix.GPtrOutput[ResponsePlanAction, ResponsePlanActionOutput]](value)
	return pulumix.GPtrOutput[ResponsePlanAction, ResponsePlanActionOutput]{OutputState: unwrapped.OutputState}
}

// The ARN of the response plan.
func (o ResponsePlanOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Chatbot chat channel used for collaboration during an incident.
func (o ResponsePlanOutput) ChatChannels() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.ArrayOutput[string] { return v.ChatChannels })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The long format of the response plan name. This field can contain spaces.
func (o ResponsePlanOutput) DisplayName() pulumix.Output[*string] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.Output[*string] { return v.DisplayName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
func (o ResponsePlanOutput) Engagements() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.ArrayOutput[string] { return v.Engagements })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func (o ResponsePlanOutput) IncidentTemplate() pulumix.GPtrOutput[ResponsePlanIncidentTemplate, ResponsePlanIncidentTemplateOutput] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.GPtrOutput[ResponsePlanIncidentTemplate, ResponsePlanIncidentTemplateOutput] {
		return v.IncidentTemplate
	})
	unwrapped := pulumix.Flatten[*ResponsePlanIncidentTemplate, pulumix.GPtrOutput[ResponsePlanIncidentTemplate, ResponsePlanIncidentTemplateOutput]](value)
	return pulumix.GPtrOutput[ResponsePlanIncidentTemplate, ResponsePlanIncidentTemplateOutput]{OutputState: unwrapped.OutputState}
}

// Information about third-party services integrated into the response plan. The following values are supported:
func (o ResponsePlanOutput) Integration() pulumix.GPtrOutput[ResponsePlanIntegration, ResponsePlanIntegrationOutput] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.GPtrOutput[ResponsePlanIntegration, ResponsePlanIntegrationOutput] {
		return v.Integration
	})
	unwrapped := pulumix.Flatten[*ResponsePlanIntegration, pulumix.GPtrOutput[ResponsePlanIntegration, ResponsePlanIntegrationOutput]](value)
	return pulumix.GPtrOutput[ResponsePlanIntegration, ResponsePlanIntegrationOutput]{OutputState: unwrapped.OutputState}
}

// The name of the response plan.
func (o ResponsePlanOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The tags applied to the response plan.
func (o ResponsePlanOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ResponsePlanOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ResponsePlan](o, func(v ResponsePlan) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ResponsePlanOutput{})
}
