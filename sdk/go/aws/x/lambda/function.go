// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Lambda Function resource. Lambda allows you to trigger execution of code in response to events in AWS, enabling serverless backend solutions. The Lambda Function itself includes source code and runtime configuration.
//
// For information about Lambda and how to use it, see [What is AWS Lambda?](https://docs.aws.amazon.com/lambda/latest/dg/welcome.html)
//
// > **NOTE:** Due to [AWS Lambda improved VPC networking changes that began deploying in September 2019](https://aws.amazon.com/blogs/compute/announcing-improved-vpc-networking-for-aws-lambda-functions/), EC2 subnets and security groups associated with Lambda Functions can take up to 45 minutes to successfully delete.
//
// > **NOTE:** If you get a `KMSAccessDeniedException: Lambda was unable to decrypt the environment variables because KMS access was denied` error when invoking an `lambda.Function` with environment variables, the IAM role associated with the function may have been deleted and recreated _after_ the function was created. You can fix the problem two ways: 1) updating the function's role to another role and then updating it back again to the recreated role, or 2) by using Pulumi to `taint` the function and `apply` your configuration again to recreate the function. (When you create a function, Lambda grants permissions on the KMS key to the function's IAM role. If the IAM role is recreated, the grant is no longer valid. Changing the function's role or recreating the function causes Lambda to update the grant.)
//
// > To give an external source (like an EventBridge Rule, SNS, or S3) permission to access the Lambda function, use the `lambda.Permission` resource. See [Lambda Permission Model](https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html) for more details. On the other hand, the `role` argument of this resource is the function's execution role for identity and access to AWS services and resources.
type Function struct {
	pulumi.CustomResourceState

	// Instruction set architecture for your Lambda function. Valid values are `["x8664"]` and `["arm64"]`. Default is `["x8664"]`. Removing this attribute, function's architecture stay the same.
	Architectures pulumix.ArrayOutput[string] `pulumi:"architectures"`
	// Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Path to the function's deployment package within the local filesystem. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified.
	Code pulumix.Output[*pulumi.Archive] `pulumi:"code"`
	// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
	CodeSigningConfigArn pulumix.Output[*string] `pulumi:"codeSigningConfigArn"`
	// Configuration block. Detailed below.
	DeadLetterConfig pulumix.GPtrOutput[FunctionDeadLetterConfig, FunctionDeadLetterConfigOutput] `pulumi:"deadLetterConfig"`
	// Description of what your Lambda Function does.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Configuration block. Detailed below.
	Environment pulumix.GPtrOutput[FunctionEnvironment, FunctionEnvironmentOutput] `pulumi:"environment"`
	// The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
	EphemeralStorage pulumix.GPtrOutput[FunctionEphemeralStorage, FunctionEphemeralStorageOutput] `pulumi:"ephemeralStorage"`
	// Configuration block. Detailed below.
	FileSystemConfig pulumix.GPtrOutput[FunctionFileSystemConfig, FunctionFileSystemConfigOutput] `pulumi:"fileSystemConfig"`
	// Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
	Handler pulumix.Output[*string] `pulumi:"handler"`
	// Configuration block. Detailed below.
	ImageConfig pulumix.GPtrOutput[FunctionImageConfig, FunctionImageConfigOutput] `pulumi:"imageConfig"`
	// ECR image URI containing the function's deployment package. Exactly one of `filename`, `imageUri`,  or `s3Bucket` must be specified.
	ImageUri pulumix.Output[*string] `pulumi:"imageUri"`
	// ARN to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`.
	InvokeArn pulumix.Output[string] `pulumi:"invokeArn"`
	// Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
	KmsKeyArn pulumix.Output[*string] `pulumi:"kmsKeyArn"`
	// Date this resource was last modified.
	LastModified pulumix.Output[string] `pulumi:"lastModified"`
	// List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
	Layers pulumix.ArrayOutput[string] `pulumi:"layers"`
	// Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
	MemorySize pulumix.Output[*int] `pulumi:"memorySize"`
	// Unique name for your Lambda Function.
	Name pulumix.Output[string] `pulumi:"name"`
	// Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
	PackageType pulumix.Output[*string] `pulumi:"packageType"`
	// Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
	Publish pulumix.Output[*bool] `pulumi:"publish"`
	// ARN identifying your Lambda Function Version (if versioning is enabled via `publish = true`).
	QualifiedArn pulumix.Output[string] `pulumi:"qualifiedArn"`
	// Qualified ARN (ARN with lambda version number) to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`.
	QualifiedInvokeArn pulumix.Output[string] `pulumi:"qualifiedInvokeArn"`
	// **AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.** Whether to replace the security groups on associated lambda network interfaces upon destruction. Removing these security groups from orphaned network interfaces can speed up security group deletion times by avoiding a dependency on AWS's internal cleanup operations. By default, the ENI security groups will be replaced with the `default` security group in the function's VPC. Set the `replacementSecurityGroupIds` attribute to use a custom list of security groups for replacement.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplaceSecurityGroupsOnDestroy pulumix.Output[*bool] `pulumi:"replaceSecurityGroupsOnDestroy"`
	// List of security group IDs to assign to orphaned Lambda function network interfaces upon destruction. `replaceSecurityGroupsOnDestroy` must be set to `true` to use this attribute.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplacementSecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"replacementSecurityGroupIds"`
	// Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
	ReservedConcurrentExecutions pulumix.Output[*int] `pulumi:"reservedConcurrentExecutions"`
	// Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources.
	//
	// The following arguments are optional:
	Role pulumix.Output[string] `pulumi:"role"`
	// Identifier of the function's runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
	Runtime pulumix.Output[*string] `pulumi:"runtime"`
	// S3 bucket location containing the function's deployment package. This bucket must reside in the same AWS region where you are creating the Lambda function. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified. When `s3Bucket` is set, `s3Key` is required.
	S3Bucket pulumix.Output[*string] `pulumi:"s3Bucket"`
	// S3 key of an object containing the function's deployment package. When `s3Bucket` is set, `s3Key` is required.
	S3Key pulumix.Output[*string] `pulumi:"s3Key"`
	// Object version containing the function's deployment package. Conflicts with `filename` and `imageUri`.
	S3ObjectVersion pulumix.Output[*string] `pulumi:"s3ObjectVersion"`
	// ARN of the signing job.
	SigningJobArn pulumix.Output[string] `pulumi:"signingJobArn"`
	// ARN of the signing profile version.
	// * `snap_start.optimization_status` - Optimization status of the snap start configuration. Valid values are `On` and `Off`.
	SigningProfileVersionArn pulumix.Output[string] `pulumi:"signingProfileVersionArn"`
	// Set to true if you do not wish the function to be deleted at destroy time, and instead just remove the function from the Pulumi state.
	SkipDestroy pulumix.Output[*bool] `pulumi:"skipDestroy"`
	// Snap start settings block. Detailed below.
	SnapStart pulumix.GPtrOutput[FunctionSnapStart, FunctionSnapStartOutput] `pulumi:"snapStart"`
	// Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3Key`.
	SourceCodeHash pulumix.Output[string] `pulumi:"sourceCodeHash"`
	// Size in bytes of the function .zip file.
	SourceCodeSize pulumix.Output[int] `pulumi:"sourceCodeSize"`
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
	Timeout pulumix.Output[*int] `pulumi:"timeout"`
	// Configuration block. Detailed below.
	TracingConfig pulumix.GPtrOutput[FunctionTracingConfig, FunctionTracingConfigOutput] `pulumi:"tracingConfig"`
	// Latest published version of your Lambda Function.
	// * `vpc_config.vpc_id` - ID of the VPC.
	Version pulumix.Output[string] `pulumi:"version"`
	// Configuration block. Detailed below.
	VpcConfig pulumix.GPtrOutput[FunctionVpcConfig, FunctionVpcConfigOutput] `pulumi:"vpcConfig"`
}

// NewFunction registers a new resource with the given unique name, arguments, and options.
func NewFunction(ctx *pulumi.Context,
	name string, args *FunctionArgs, opts ...pulumi.ResourceOption) (*Function, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Function
	err := ctx.RegisterResource("aws:lambda/function:Function", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunction gets an existing Function resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionState, opts ...pulumi.ResourceOption) (*Function, error) {
	var resource Function
	err := ctx.ReadResource("aws:lambda/function:Function", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Function resources.
type functionState struct {
	// Instruction set architecture for your Lambda function. Valid values are `["x8664"]` and `["arm64"]`. Default is `["x8664"]`. Removing this attribute, function's architecture stay the same.
	Architectures []string `pulumi:"architectures"`
	// Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
	Arn *string `pulumi:"arn"`
	// Path to the function's deployment package within the local filesystem. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified.
	Code pulumi.Archive `pulumi:"code"`
	// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
	CodeSigningConfigArn *string `pulumi:"codeSigningConfigArn"`
	// Configuration block. Detailed below.
	DeadLetterConfig *FunctionDeadLetterConfig `pulumi:"deadLetterConfig"`
	// Description of what your Lambda Function does.
	Description *string `pulumi:"description"`
	// Configuration block. Detailed below.
	Environment *FunctionEnvironment `pulumi:"environment"`
	// The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
	EphemeralStorage *FunctionEphemeralStorage `pulumi:"ephemeralStorage"`
	// Configuration block. Detailed below.
	FileSystemConfig *FunctionFileSystemConfig `pulumi:"fileSystemConfig"`
	// Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
	Handler *string `pulumi:"handler"`
	// Configuration block. Detailed below.
	ImageConfig *FunctionImageConfig `pulumi:"imageConfig"`
	// ECR image URI containing the function's deployment package. Exactly one of `filename`, `imageUri`,  or `s3Bucket` must be specified.
	ImageUri *string `pulumi:"imageUri"`
	// ARN to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`.
	InvokeArn *string `pulumi:"invokeArn"`
	// Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Date this resource was last modified.
	LastModified *string `pulumi:"lastModified"`
	// List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
	Layers []string `pulumi:"layers"`
	// Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
	MemorySize *int `pulumi:"memorySize"`
	// Unique name for your Lambda Function.
	Name *string `pulumi:"name"`
	// Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
	PackageType *string `pulumi:"packageType"`
	// Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
	Publish *bool `pulumi:"publish"`
	// ARN identifying your Lambda Function Version (if versioning is enabled via `publish = true`).
	QualifiedArn *string `pulumi:"qualifiedArn"`
	// Qualified ARN (ARN with lambda version number) to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`.
	QualifiedInvokeArn *string `pulumi:"qualifiedInvokeArn"`
	// **AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.** Whether to replace the security groups on associated lambda network interfaces upon destruction. Removing these security groups from orphaned network interfaces can speed up security group deletion times by avoiding a dependency on AWS's internal cleanup operations. By default, the ENI security groups will be replaced with the `default` security group in the function's VPC. Set the `replacementSecurityGroupIds` attribute to use a custom list of security groups for replacement.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplaceSecurityGroupsOnDestroy *bool `pulumi:"replaceSecurityGroupsOnDestroy"`
	// List of security group IDs to assign to orphaned Lambda function network interfaces upon destruction. `replaceSecurityGroupsOnDestroy` must be set to `true` to use this attribute.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplacementSecurityGroupIds []string `pulumi:"replacementSecurityGroupIds"`
	// Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
	ReservedConcurrentExecutions *int `pulumi:"reservedConcurrentExecutions"`
	// Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources.
	//
	// The following arguments are optional:
	Role *string `pulumi:"role"`
	// Identifier of the function's runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
	Runtime *string `pulumi:"runtime"`
	// S3 bucket location containing the function's deployment package. This bucket must reside in the same AWS region where you are creating the Lambda function. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified. When `s3Bucket` is set, `s3Key` is required.
	S3Bucket *string `pulumi:"s3Bucket"`
	// S3 key of an object containing the function's deployment package. When `s3Bucket` is set, `s3Key` is required.
	S3Key *string `pulumi:"s3Key"`
	// Object version containing the function's deployment package. Conflicts with `filename` and `imageUri`.
	S3ObjectVersion *string `pulumi:"s3ObjectVersion"`
	// ARN of the signing job.
	SigningJobArn *string `pulumi:"signingJobArn"`
	// ARN of the signing profile version.
	// * `snap_start.optimization_status` - Optimization status of the snap start configuration. Valid values are `On` and `Off`.
	SigningProfileVersionArn *string `pulumi:"signingProfileVersionArn"`
	// Set to true if you do not wish the function to be deleted at destroy time, and instead just remove the function from the Pulumi state.
	SkipDestroy *bool `pulumi:"skipDestroy"`
	// Snap start settings block. Detailed below.
	SnapStart *FunctionSnapStart `pulumi:"snapStart"`
	// Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3Key`.
	SourceCodeHash *string `pulumi:"sourceCodeHash"`
	// Size in bytes of the function .zip file.
	SourceCodeSize *int `pulumi:"sourceCodeSize"`
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
	Timeout *int `pulumi:"timeout"`
	// Configuration block. Detailed below.
	TracingConfig *FunctionTracingConfig `pulumi:"tracingConfig"`
	// Latest published version of your Lambda Function.
	// * `vpc_config.vpc_id` - ID of the VPC.
	Version *string `pulumi:"version"`
	// Configuration block. Detailed below.
	VpcConfig *FunctionVpcConfig `pulumi:"vpcConfig"`
}

type FunctionState struct {
	// Instruction set architecture for your Lambda function. Valid values are `["x8664"]` and `["arm64"]`. Default is `["x8664"]`. Removing this attribute, function's architecture stay the same.
	Architectures pulumix.Input[[]string]
	// Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
	Arn pulumix.Input[*string]
	// Path to the function's deployment package within the local filesystem. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified.
	Code pulumix.Input[*pulumi.Archive]
	// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
	CodeSigningConfigArn pulumix.Input[*string]
	// Configuration block. Detailed below.
	DeadLetterConfig pulumix.Input[*FunctionDeadLetterConfigArgs]
	// Description of what your Lambda Function does.
	Description pulumix.Input[*string]
	// Configuration block. Detailed below.
	Environment pulumix.Input[*FunctionEnvironmentArgs]
	// The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
	EphemeralStorage pulumix.Input[*FunctionEphemeralStorageArgs]
	// Configuration block. Detailed below.
	FileSystemConfig pulumix.Input[*FunctionFileSystemConfigArgs]
	// Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
	Handler pulumix.Input[*string]
	// Configuration block. Detailed below.
	ImageConfig pulumix.Input[*FunctionImageConfigArgs]
	// ECR image URI containing the function's deployment package. Exactly one of `filename`, `imageUri`,  or `s3Bucket` must be specified.
	ImageUri pulumix.Input[*string]
	// ARN to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`.
	InvokeArn pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
	KmsKeyArn pulumix.Input[*string]
	// Date this resource was last modified.
	LastModified pulumix.Input[*string]
	// List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
	Layers pulumix.Input[[]string]
	// Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
	MemorySize pulumix.Input[*int]
	// Unique name for your Lambda Function.
	Name pulumix.Input[*string]
	// Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
	PackageType pulumix.Input[*string]
	// Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
	Publish pulumix.Input[*bool]
	// ARN identifying your Lambda Function Version (if versioning is enabled via `publish = true`).
	QualifiedArn pulumix.Input[*string]
	// Qualified ARN (ARN with lambda version number) to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`.
	QualifiedInvokeArn pulumix.Input[*string]
	// **AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.** Whether to replace the security groups on associated lambda network interfaces upon destruction. Removing these security groups from orphaned network interfaces can speed up security group deletion times by avoiding a dependency on AWS's internal cleanup operations. By default, the ENI security groups will be replaced with the `default` security group in the function's VPC. Set the `replacementSecurityGroupIds` attribute to use a custom list of security groups for replacement.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplaceSecurityGroupsOnDestroy pulumix.Input[*bool]
	// List of security group IDs to assign to orphaned Lambda function network interfaces upon destruction. `replaceSecurityGroupsOnDestroy` must be set to `true` to use this attribute.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplacementSecurityGroupIds pulumix.Input[[]string]
	// Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
	ReservedConcurrentExecutions pulumix.Input[*int]
	// Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources.
	//
	// The following arguments are optional:
	Role pulumix.Input[*string]
	// Identifier of the function's runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
	Runtime pulumix.Input[*string]
	// S3 bucket location containing the function's deployment package. This bucket must reside in the same AWS region where you are creating the Lambda function. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified. When `s3Bucket` is set, `s3Key` is required.
	S3Bucket pulumix.Input[*string]
	// S3 key of an object containing the function's deployment package. When `s3Bucket` is set, `s3Key` is required.
	S3Key pulumix.Input[*string]
	// Object version containing the function's deployment package. Conflicts with `filename` and `imageUri`.
	S3ObjectVersion pulumix.Input[*string]
	// ARN of the signing job.
	SigningJobArn pulumix.Input[*string]
	// ARN of the signing profile version.
	// * `snap_start.optimization_status` - Optimization status of the snap start configuration. Valid values are `On` and `Off`.
	SigningProfileVersionArn pulumix.Input[*string]
	// Set to true if you do not wish the function to be deleted at destroy time, and instead just remove the function from the Pulumi state.
	SkipDestroy pulumix.Input[*bool]
	// Snap start settings block. Detailed below.
	SnapStart pulumix.Input[*FunctionSnapStartArgs]
	// Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3Key`.
	SourceCodeHash pulumix.Input[*string]
	// Size in bytes of the function .zip file.
	SourceCodeSize pulumix.Input[*int]
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
	Timeout pulumix.Input[*int]
	// Configuration block. Detailed below.
	TracingConfig pulumix.Input[*FunctionTracingConfigArgs]
	// Latest published version of your Lambda Function.
	// * `vpc_config.vpc_id` - ID of the VPC.
	Version pulumix.Input[*string]
	// Configuration block. Detailed below.
	VpcConfig pulumix.Input[*FunctionVpcConfigArgs]
}

func (FunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionState)(nil)).Elem()
}

type functionArgs struct {
	// Instruction set architecture for your Lambda function. Valid values are `["x8664"]` and `["arm64"]`. Default is `["x8664"]`. Removing this attribute, function's architecture stay the same.
	Architectures []string `pulumi:"architectures"`
	// Path to the function's deployment package within the local filesystem. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified.
	Code pulumi.Archive `pulumi:"code"`
	// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
	CodeSigningConfigArn *string `pulumi:"codeSigningConfigArn"`
	// Configuration block. Detailed below.
	DeadLetterConfig *FunctionDeadLetterConfig `pulumi:"deadLetterConfig"`
	// Description of what your Lambda Function does.
	Description *string `pulumi:"description"`
	// Configuration block. Detailed below.
	Environment *FunctionEnvironment `pulumi:"environment"`
	// The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
	EphemeralStorage *FunctionEphemeralStorage `pulumi:"ephemeralStorage"`
	// Configuration block. Detailed below.
	FileSystemConfig *FunctionFileSystemConfig `pulumi:"fileSystemConfig"`
	// Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
	Handler *string `pulumi:"handler"`
	// Configuration block. Detailed below.
	ImageConfig *FunctionImageConfig `pulumi:"imageConfig"`
	// ECR image URI containing the function's deployment package. Exactly one of `filename`, `imageUri`,  or `s3Bucket` must be specified.
	ImageUri *string `pulumi:"imageUri"`
	// Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
	Layers []string `pulumi:"layers"`
	// Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
	MemorySize *int `pulumi:"memorySize"`
	// Unique name for your Lambda Function.
	Name *string `pulumi:"name"`
	// Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
	PackageType *string `pulumi:"packageType"`
	// Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
	Publish *bool `pulumi:"publish"`
	// **AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.** Whether to replace the security groups on associated lambda network interfaces upon destruction. Removing these security groups from orphaned network interfaces can speed up security group deletion times by avoiding a dependency on AWS's internal cleanup operations. By default, the ENI security groups will be replaced with the `default` security group in the function's VPC. Set the `replacementSecurityGroupIds` attribute to use a custom list of security groups for replacement.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplaceSecurityGroupsOnDestroy *bool `pulumi:"replaceSecurityGroupsOnDestroy"`
	// List of security group IDs to assign to orphaned Lambda function network interfaces upon destruction. `replaceSecurityGroupsOnDestroy` must be set to `true` to use this attribute.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplacementSecurityGroupIds []string `pulumi:"replacementSecurityGroupIds"`
	// Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
	ReservedConcurrentExecutions *int `pulumi:"reservedConcurrentExecutions"`
	// Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources.
	//
	// The following arguments are optional:
	Role string `pulumi:"role"`
	// Identifier of the function's runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
	Runtime *string `pulumi:"runtime"`
	// S3 bucket location containing the function's deployment package. This bucket must reside in the same AWS region where you are creating the Lambda function. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified. When `s3Bucket` is set, `s3Key` is required.
	S3Bucket *string `pulumi:"s3Bucket"`
	// S3 key of an object containing the function's deployment package. When `s3Bucket` is set, `s3Key` is required.
	S3Key *string `pulumi:"s3Key"`
	// Object version containing the function's deployment package. Conflicts with `filename` and `imageUri`.
	S3ObjectVersion *string `pulumi:"s3ObjectVersion"`
	// Set to true if you do not wish the function to be deleted at destroy time, and instead just remove the function from the Pulumi state.
	SkipDestroy *bool `pulumi:"skipDestroy"`
	// Snap start settings block. Detailed below.
	SnapStart *FunctionSnapStart `pulumi:"snapStart"`
	// Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3Key`.
	SourceCodeHash *string `pulumi:"sourceCodeHash"`
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
	Timeout *int `pulumi:"timeout"`
	// Configuration block. Detailed below.
	TracingConfig *FunctionTracingConfig `pulumi:"tracingConfig"`
	// Configuration block. Detailed below.
	VpcConfig *FunctionVpcConfig `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a Function resource.
type FunctionArgs struct {
	// Instruction set architecture for your Lambda function. Valid values are `["x8664"]` and `["arm64"]`. Default is `["x8664"]`. Removing this attribute, function's architecture stay the same.
	Architectures pulumix.Input[[]string]
	// Path to the function's deployment package within the local filesystem. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified.
	Code pulumix.Input[*pulumi.Archive]
	// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
	CodeSigningConfigArn pulumix.Input[*string]
	// Configuration block. Detailed below.
	DeadLetterConfig pulumix.Input[*FunctionDeadLetterConfigArgs]
	// Description of what your Lambda Function does.
	Description pulumix.Input[*string]
	// Configuration block. Detailed below.
	Environment pulumix.Input[*FunctionEnvironmentArgs]
	// The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
	EphemeralStorage pulumix.Input[*FunctionEphemeralStorageArgs]
	// Configuration block. Detailed below.
	FileSystemConfig pulumix.Input[*FunctionFileSystemConfigArgs]
	// Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
	Handler pulumix.Input[*string]
	// Configuration block. Detailed below.
	ImageConfig pulumix.Input[*FunctionImageConfigArgs]
	// ECR image URI containing the function's deployment package. Exactly one of `filename`, `imageUri`,  or `s3Bucket` must be specified.
	ImageUri pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
	KmsKeyArn pulumix.Input[*string]
	// List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
	Layers pulumix.Input[[]string]
	// Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
	MemorySize pulumix.Input[*int]
	// Unique name for your Lambda Function.
	Name pulumix.Input[*string]
	// Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
	PackageType pulumix.Input[*string]
	// Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
	Publish pulumix.Input[*bool]
	// **AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.** Whether to replace the security groups on associated lambda network interfaces upon destruction. Removing these security groups from orphaned network interfaces can speed up security group deletion times by avoiding a dependency on AWS's internal cleanup operations. By default, the ENI security groups will be replaced with the `default` security group in the function's VPC. Set the `replacementSecurityGroupIds` attribute to use a custom list of security groups for replacement.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplaceSecurityGroupsOnDestroy pulumix.Input[*bool]
	// List of security group IDs to assign to orphaned Lambda function network interfaces upon destruction. `replaceSecurityGroupsOnDestroy` must be set to `true` to use this attribute.
	//
	// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
	ReplacementSecurityGroupIds pulumix.Input[[]string]
	// Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
	ReservedConcurrentExecutions pulumix.Input[*int]
	// Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources.
	//
	// The following arguments are optional:
	Role pulumix.Input[string]
	// Identifier of the function's runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
	Runtime pulumix.Input[*string]
	// S3 bucket location containing the function's deployment package. This bucket must reside in the same AWS region where you are creating the Lambda function. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified. When `s3Bucket` is set, `s3Key` is required.
	S3Bucket pulumix.Input[*string]
	// S3 key of an object containing the function's deployment package. When `s3Bucket` is set, `s3Key` is required.
	S3Key pulumix.Input[*string]
	// Object version containing the function's deployment package. Conflicts with `filename` and `imageUri`.
	S3ObjectVersion pulumix.Input[*string]
	// Set to true if you do not wish the function to be deleted at destroy time, and instead just remove the function from the Pulumi state.
	SkipDestroy pulumix.Input[*bool]
	// Snap start settings block. Detailed below.
	SnapStart pulumix.Input[*FunctionSnapStartArgs]
	// Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3Key`.
	SourceCodeHash pulumix.Input[*string]
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
	Timeout pulumix.Input[*int]
	// Configuration block. Detailed below.
	TracingConfig pulumix.Input[*FunctionTracingConfigArgs]
	// Configuration block. Detailed below.
	VpcConfig pulumix.Input[*FunctionVpcConfigArgs]
}

func (FunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionArgs)(nil)).Elem()
}

type FunctionOutput struct{ *pulumi.OutputState }

func (FunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Function)(nil)).Elem()
}

func (o FunctionOutput) ToFunctionOutput() FunctionOutput {
	return o
}

func (o FunctionOutput) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return o
}

func (o FunctionOutput) ToOutput(ctx context.Context) pulumix.Output[Function] {
	return pulumix.Output[Function]{
		OutputState: o.OutputState,
	}
}

// Instruction set architecture for your Lambda function. Valid values are `["x8664"]` and `["arm64"]`. Default is `["x8664"]`. Removing this attribute, function's architecture stay the same.
func (o FunctionOutput) Architectures() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.ArrayOutput[string] { return v.Architectures })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
func (o FunctionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Path to the function's deployment package within the local filesystem. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified.
func (o FunctionOutput) Code() pulumix.Output[*pulumi.Archive] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*pulumi.Archive] { return v.Code })
	return pulumix.Flatten[*pulumi.Archive, pulumix.Output[*pulumi.Archive]](value)
}

// To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
func (o FunctionOutput) CodeSigningConfigArn() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.CodeSigningConfigArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block. Detailed below.
func (o FunctionOutput) DeadLetterConfig() pulumix.GPtrOutput[FunctionDeadLetterConfig, FunctionDeadLetterConfigOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionDeadLetterConfig, FunctionDeadLetterConfigOutput] {
		return v.DeadLetterConfig
	})
	unwrapped := pulumix.Flatten[*FunctionDeadLetterConfig, pulumix.GPtrOutput[FunctionDeadLetterConfig, FunctionDeadLetterConfigOutput]](value)
	return pulumix.GPtrOutput[FunctionDeadLetterConfig, FunctionDeadLetterConfigOutput]{OutputState: unwrapped.OutputState}
}

// Description of what your Lambda Function does.
func (o FunctionOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block. Detailed below.
func (o FunctionOutput) Environment() pulumix.GPtrOutput[FunctionEnvironment, FunctionEnvironmentOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionEnvironment, FunctionEnvironmentOutput] {
		return v.Environment
	})
	unwrapped := pulumix.Flatten[*FunctionEnvironment, pulumix.GPtrOutput[FunctionEnvironment, FunctionEnvironmentOutput]](value)
	return pulumix.GPtrOutput[FunctionEnvironment, FunctionEnvironmentOutput]{OutputState: unwrapped.OutputState}
}

// The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
func (o FunctionOutput) EphemeralStorage() pulumix.GPtrOutput[FunctionEphemeralStorage, FunctionEphemeralStorageOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionEphemeralStorage, FunctionEphemeralStorageOutput] {
		return v.EphemeralStorage
	})
	unwrapped := pulumix.Flatten[*FunctionEphemeralStorage, pulumix.GPtrOutput[FunctionEphemeralStorage, FunctionEphemeralStorageOutput]](value)
	return pulumix.GPtrOutput[FunctionEphemeralStorage, FunctionEphemeralStorageOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block. Detailed below.
func (o FunctionOutput) FileSystemConfig() pulumix.GPtrOutput[FunctionFileSystemConfig, FunctionFileSystemConfigOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionFileSystemConfig, FunctionFileSystemConfigOutput] {
		return v.FileSystemConfig
	})
	unwrapped := pulumix.Flatten[*FunctionFileSystemConfig, pulumix.GPtrOutput[FunctionFileSystemConfig, FunctionFileSystemConfigOutput]](value)
	return pulumix.GPtrOutput[FunctionFileSystemConfig, FunctionFileSystemConfigOutput]{OutputState: unwrapped.OutputState}
}

// Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
func (o FunctionOutput) Handler() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.Handler })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block. Detailed below.
func (o FunctionOutput) ImageConfig() pulumix.GPtrOutput[FunctionImageConfig, FunctionImageConfigOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionImageConfig, FunctionImageConfigOutput] {
		return v.ImageConfig
	})
	unwrapped := pulumix.Flatten[*FunctionImageConfig, pulumix.GPtrOutput[FunctionImageConfig, FunctionImageConfigOutput]](value)
	return pulumix.GPtrOutput[FunctionImageConfig, FunctionImageConfigOutput]{OutputState: unwrapped.OutputState}
}

// ECR image URI containing the function's deployment package. Exactly one of `filename`, `imageUri`,  or `s3Bucket` must be specified.
func (o FunctionOutput) ImageUri() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.ImageUri })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`.
func (o FunctionOutput) InvokeArn() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.InvokeArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
func (o FunctionOutput) KmsKeyArn() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.KmsKeyArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Date this resource was last modified.
func (o FunctionOutput) LastModified() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.LastModified })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
func (o FunctionOutput) Layers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.ArrayOutput[string] { return v.Layers })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
func (o FunctionOutput) MemorySize() pulumix.Output[*int] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*int] { return v.MemorySize })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Unique name for your Lambda Function.
func (o FunctionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
func (o FunctionOutput) PackageType() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.PackageType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
func (o FunctionOutput) Publish() pulumix.Output[*bool] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*bool] { return v.Publish })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// ARN identifying your Lambda Function Version (if versioning is enabled via `publish = true`).
func (o FunctionOutput) QualifiedArn() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.QualifiedArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Qualified ARN (ARN with lambda version number) to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`.
func (o FunctionOutput) QualifiedInvokeArn() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.QualifiedInvokeArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// **AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.** Whether to replace the security groups on associated lambda network interfaces upon destruction. Removing these security groups from orphaned network interfaces can speed up security group deletion times by avoiding a dependency on AWS's internal cleanup operations. By default, the ENI security groups will be replaced with the `default` security group in the function's VPC. Set the `replacementSecurityGroupIds` attribute to use a custom list of security groups for replacement.
//
// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
func (o FunctionOutput) ReplaceSecurityGroupsOnDestroy() pulumix.Output[*bool] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*bool] { return v.ReplaceSecurityGroupsOnDestroy })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// List of security group IDs to assign to orphaned Lambda function network interfaces upon destruction. `replaceSecurityGroupsOnDestroy` must be set to `true` to use this attribute.
//
// Deprecated: AWS no longer supports this operation. This attribute now has no effect and will be removed in a future major version.
func (o FunctionOutput) ReplacementSecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.ArrayOutput[string] { return v.ReplacementSecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
func (o FunctionOutput) ReservedConcurrentExecutions() pulumix.Output[*int] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*int] { return v.ReservedConcurrentExecutions })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources.
//
// The following arguments are optional:
func (o FunctionOutput) Role() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Role })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of the function's runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
func (o FunctionOutput) Runtime() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.Runtime })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// S3 bucket location containing the function's deployment package. This bucket must reside in the same AWS region where you are creating the Lambda function. Exactly one of `filename`, `imageUri`, or `s3Bucket` must be specified. When `s3Bucket` is set, `s3Key` is required.
func (o FunctionOutput) S3Bucket() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.S3Bucket })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// S3 key of an object containing the function's deployment package. When `s3Bucket` is set, `s3Key` is required.
func (o FunctionOutput) S3Key() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.S3Key })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Object version containing the function's deployment package. Conflicts with `filename` and `imageUri`.
func (o FunctionOutput) S3ObjectVersion() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.S3ObjectVersion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN of the signing job.
func (o FunctionOutput) SigningJobArn() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.SigningJobArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the signing profile version.
// * `snap_start.optimization_status` - Optimization status of the snap start configuration. Valid values are `On` and `Off`.
func (o FunctionOutput) SigningProfileVersionArn() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.SigningProfileVersionArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Set to true if you do not wish the function to be deleted at destroy time, and instead just remove the function from the Pulumi state.
func (o FunctionOutput) SkipDestroy() pulumix.Output[*bool] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*bool] { return v.SkipDestroy })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Snap start settings block. Detailed below.
func (o FunctionOutput) SnapStart() pulumix.GPtrOutput[FunctionSnapStart, FunctionSnapStartOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionSnapStart, FunctionSnapStartOutput] { return v.SnapStart })
	unwrapped := pulumix.Flatten[*FunctionSnapStart, pulumix.GPtrOutput[FunctionSnapStart, FunctionSnapStartOutput]](value)
	return pulumix.GPtrOutput[FunctionSnapStart, FunctionSnapStartOutput]{OutputState: unwrapped.OutputState}
}

// Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3Key`.
func (o FunctionOutput) SourceCodeHash() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.SourceCodeHash })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Size in bytes of the function .zip file.
func (o FunctionOutput) SourceCodeSize() pulumix.Output[int] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[int] { return v.SourceCodeSize })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FunctionOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FunctionOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
func (o FunctionOutput) Timeout() pulumix.Output[*int] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*int] { return v.Timeout })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Configuration block. Detailed below.
func (o FunctionOutput) TracingConfig() pulumix.GPtrOutput[FunctionTracingConfig, FunctionTracingConfigOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionTracingConfig, FunctionTracingConfigOutput] {
		return v.TracingConfig
	})
	unwrapped := pulumix.Flatten[*FunctionTracingConfig, pulumix.GPtrOutput[FunctionTracingConfig, FunctionTracingConfigOutput]](value)
	return pulumix.GPtrOutput[FunctionTracingConfig, FunctionTracingConfigOutput]{OutputState: unwrapped.OutputState}
}

// Latest published version of your Lambda Function.
// * `vpc_config.vpc_id` - ID of the VPC.
func (o FunctionOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block. Detailed below.
func (o FunctionOutput) VpcConfig() pulumix.GPtrOutput[FunctionVpcConfig, FunctionVpcConfigOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionVpcConfig, FunctionVpcConfigOutput] { return v.VpcConfig })
	unwrapped := pulumix.Flatten[*FunctionVpcConfig, pulumix.GPtrOutput[FunctionVpcConfig, FunctionVpcConfigOutput]](value)
	return pulumix.GPtrOutput[FunctionVpcConfig, FunctionVpcConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(FunctionOutput{})
}
