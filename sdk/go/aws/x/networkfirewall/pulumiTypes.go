// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type FirewallEncryptionConfiguration struct {
	// The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
	KeyId *string `pulumi:"keyId"`
	// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.
	Type string `pulumi:"type"`
}

type FirewallEncryptionConfigurationArgs struct {
	// The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
	KeyId pulumix.Input[*string] `pulumi:"keyId"`
	// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (FirewallEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallEncryptionConfiguration)(nil)).Elem()
}

func (i FirewallEncryptionConfigurationArgs) ToFirewallEncryptionConfigurationOutput() FirewallEncryptionConfigurationOutput {
	return i.ToFirewallEncryptionConfigurationOutputWithContext(context.Background())
}

func (i FirewallEncryptionConfigurationArgs) ToFirewallEncryptionConfigurationOutputWithContext(ctx context.Context) FirewallEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallEncryptionConfigurationOutput)
}

func (i *FirewallEncryptionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallEncryptionConfigurationArgs] {
	return pulumix.Val(i)
}

type FirewallEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (FirewallEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallEncryptionConfiguration)(nil)).Elem()
}

func (o FirewallEncryptionConfigurationOutput) ToFirewallEncryptionConfigurationOutput() FirewallEncryptionConfigurationOutput {
	return o
}

func (o FirewallEncryptionConfigurationOutput) ToFirewallEncryptionConfigurationOutputWithContext(ctx context.Context) FirewallEncryptionConfigurationOutput {
	return o
}

func (o FirewallEncryptionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallEncryptionConfiguration] {
	return pulumix.Output[FirewallEncryptionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
func (o FirewallEncryptionConfigurationOutput) KeyId() pulumix.Output[*string] {
	return pulumix.Apply[FirewallEncryptionConfiguration](o, func(v FirewallEncryptionConfiguration) *string { return v.KeyId })
}

// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.
func (o FirewallEncryptionConfigurationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[FirewallEncryptionConfiguration](o, func(v FirewallEncryptionConfiguration) string { return v.Type })
}

type FirewallFirewallStatus struct {
	// Set of subnets configured for use by the firewall.
	SyncStates []FirewallFirewallStatusSyncState `pulumi:"syncStates"`
}

type FirewallFirewallStatusArgs struct {
	// Set of subnets configured for use by the firewall.
	SyncStates pulumix.Input[[]*FirewallFirewallStatusSyncStateArgs] `pulumi:"syncStates"`
}

func (FirewallFirewallStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallFirewallStatus)(nil)).Elem()
}

func (i FirewallFirewallStatusArgs) ToFirewallFirewallStatusOutput() FirewallFirewallStatusOutput {
	return i.ToFirewallFirewallStatusOutputWithContext(context.Background())
}

func (i FirewallFirewallStatusArgs) ToFirewallFirewallStatusOutputWithContext(ctx context.Context) FirewallFirewallStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFirewallStatusOutput)
}

func (i *FirewallFirewallStatusArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallFirewallStatusArgs] {
	return pulumix.Val(i)
}

type FirewallFirewallStatusOutput struct{ *pulumi.OutputState }

func (FirewallFirewallStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallFirewallStatus)(nil)).Elem()
}

func (o FirewallFirewallStatusOutput) ToFirewallFirewallStatusOutput() FirewallFirewallStatusOutput {
	return o
}

func (o FirewallFirewallStatusOutput) ToFirewallFirewallStatusOutputWithContext(ctx context.Context) FirewallFirewallStatusOutput {
	return o
}

func (o FirewallFirewallStatusOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallFirewallStatus] {
	return pulumix.Output[FirewallFirewallStatus]{
		OutputState: o.OutputState,
	}
}

// Set of subnets configured for use by the firewall.
func (o FirewallFirewallStatusOutput) SyncStates() pulumix.GArrayOutput[FirewallFirewallStatusSyncState, FirewallFirewallStatusSyncStateOutput] {
	value := pulumix.Apply[FirewallFirewallStatus](o, func(v FirewallFirewallStatus) []FirewallFirewallStatusSyncState { return v.SyncStates })
	return pulumix.GArrayOutput[FirewallFirewallStatusSyncState, FirewallFirewallStatusSyncStateOutput]{OutputState: value.OutputState}
}

type FirewallFirewallStatusSyncState struct {
	// Nested list describing the attachment status of the firewall's association with a single VPC subnet.
	Attachments []FirewallFirewallStatusSyncStateAttachment `pulumi:"attachments"`
	// The Availability Zone where the subnet is configured.
	AvailabilityZone *string `pulumi:"availabilityZone"`
}

type FirewallFirewallStatusSyncStateArgs struct {
	// Nested list describing the attachment status of the firewall's association with a single VPC subnet.
	Attachments pulumix.Input[[]*FirewallFirewallStatusSyncStateAttachmentArgs] `pulumi:"attachments"`
	// The Availability Zone where the subnet is configured.
	AvailabilityZone pulumix.Input[*string] `pulumi:"availabilityZone"`
}

func (FirewallFirewallStatusSyncStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallFirewallStatusSyncState)(nil)).Elem()
}

func (i FirewallFirewallStatusSyncStateArgs) ToFirewallFirewallStatusSyncStateOutput() FirewallFirewallStatusSyncStateOutput {
	return i.ToFirewallFirewallStatusSyncStateOutputWithContext(context.Background())
}

func (i FirewallFirewallStatusSyncStateArgs) ToFirewallFirewallStatusSyncStateOutputWithContext(ctx context.Context) FirewallFirewallStatusSyncStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFirewallStatusSyncStateOutput)
}

func (i *FirewallFirewallStatusSyncStateArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallFirewallStatusSyncStateArgs] {
	return pulumix.Val(i)
}

type FirewallFirewallStatusSyncStateOutput struct{ *pulumi.OutputState }

func (FirewallFirewallStatusSyncStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallFirewallStatusSyncState)(nil)).Elem()
}

func (o FirewallFirewallStatusSyncStateOutput) ToFirewallFirewallStatusSyncStateOutput() FirewallFirewallStatusSyncStateOutput {
	return o
}

func (o FirewallFirewallStatusSyncStateOutput) ToFirewallFirewallStatusSyncStateOutputWithContext(ctx context.Context) FirewallFirewallStatusSyncStateOutput {
	return o
}

func (o FirewallFirewallStatusSyncStateOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallFirewallStatusSyncState] {
	return pulumix.Output[FirewallFirewallStatusSyncState]{
		OutputState: o.OutputState,
	}
}

// Nested list describing the attachment status of the firewall's association with a single VPC subnet.
func (o FirewallFirewallStatusSyncStateOutput) Attachments() pulumix.GArrayOutput[FirewallFirewallStatusSyncStateAttachment, FirewallFirewallStatusSyncStateAttachmentOutput] {
	value := pulumix.Apply[FirewallFirewallStatusSyncState](o, func(v FirewallFirewallStatusSyncState) []FirewallFirewallStatusSyncStateAttachment {
		return v.Attachments
	})
	return pulumix.GArrayOutput[FirewallFirewallStatusSyncStateAttachment, FirewallFirewallStatusSyncStateAttachmentOutput]{OutputState: value.OutputState}
}

// The Availability Zone where the subnet is configured.
func (o FirewallFirewallStatusSyncStateOutput) AvailabilityZone() pulumix.Output[*string] {
	return pulumix.Apply[FirewallFirewallStatusSyncState](o, func(v FirewallFirewallStatusSyncState) *string { return v.AvailabilityZone })
}

type FirewallFirewallStatusSyncStateAttachment struct {
	// The identifier of the firewall endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// The unique identifier for the subnet.
	SubnetId *string `pulumi:"subnetId"`
}

type FirewallFirewallStatusSyncStateAttachmentArgs struct {
	// The identifier of the firewall endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
	EndpointId pulumix.Input[*string] `pulumi:"endpointId"`
	// The unique identifier for the subnet.
	SubnetId pulumix.Input[*string] `pulumi:"subnetId"`
}

func (FirewallFirewallStatusSyncStateAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallFirewallStatusSyncStateAttachment)(nil)).Elem()
}

func (i FirewallFirewallStatusSyncStateAttachmentArgs) ToFirewallFirewallStatusSyncStateAttachmentOutput() FirewallFirewallStatusSyncStateAttachmentOutput {
	return i.ToFirewallFirewallStatusSyncStateAttachmentOutputWithContext(context.Background())
}

func (i FirewallFirewallStatusSyncStateAttachmentArgs) ToFirewallFirewallStatusSyncStateAttachmentOutputWithContext(ctx context.Context) FirewallFirewallStatusSyncStateAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFirewallStatusSyncStateAttachmentOutput)
}

func (i *FirewallFirewallStatusSyncStateAttachmentArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallFirewallStatusSyncStateAttachmentArgs] {
	return pulumix.Val(i)
}

type FirewallFirewallStatusSyncStateAttachmentOutput struct{ *pulumi.OutputState }

func (FirewallFirewallStatusSyncStateAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallFirewallStatusSyncStateAttachment)(nil)).Elem()
}

func (o FirewallFirewallStatusSyncStateAttachmentOutput) ToFirewallFirewallStatusSyncStateAttachmentOutput() FirewallFirewallStatusSyncStateAttachmentOutput {
	return o
}

func (o FirewallFirewallStatusSyncStateAttachmentOutput) ToFirewallFirewallStatusSyncStateAttachmentOutputWithContext(ctx context.Context) FirewallFirewallStatusSyncStateAttachmentOutput {
	return o
}

func (o FirewallFirewallStatusSyncStateAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallFirewallStatusSyncStateAttachment] {
	return pulumix.Output[FirewallFirewallStatusSyncStateAttachment]{
		OutputState: o.OutputState,
	}
}

// The identifier of the firewall endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
func (o FirewallFirewallStatusSyncStateAttachmentOutput) EndpointId() pulumix.Output[*string] {
	return pulumix.Apply[FirewallFirewallStatusSyncStateAttachment](o, func(v FirewallFirewallStatusSyncStateAttachment) *string { return v.EndpointId })
}

// The unique identifier for the subnet.
func (o FirewallFirewallStatusSyncStateAttachmentOutput) SubnetId() pulumix.Output[*string] {
	return pulumix.Apply[FirewallFirewallStatusSyncStateAttachment](o, func(v FirewallFirewallStatusSyncStateAttachment) *string { return v.SubnetId })
}

type FirewallPolicyEncryptionConfiguration struct {
	// The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
	KeyId *string `pulumi:"keyId"`
	// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.
	Type string `pulumi:"type"`
}

type FirewallPolicyEncryptionConfigurationArgs struct {
	// The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
	KeyId pulumix.Input[*string] `pulumi:"keyId"`
	// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (FirewallPolicyEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyEncryptionConfiguration)(nil)).Elem()
}

func (i FirewallPolicyEncryptionConfigurationArgs) ToFirewallPolicyEncryptionConfigurationOutput() FirewallPolicyEncryptionConfigurationOutput {
	return i.ToFirewallPolicyEncryptionConfigurationOutputWithContext(context.Background())
}

func (i FirewallPolicyEncryptionConfigurationArgs) ToFirewallPolicyEncryptionConfigurationOutputWithContext(ctx context.Context) FirewallPolicyEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyEncryptionConfigurationOutput)
}

func (i *FirewallPolicyEncryptionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyEncryptionConfigurationArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (FirewallPolicyEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyEncryptionConfiguration)(nil)).Elem()
}

func (o FirewallPolicyEncryptionConfigurationOutput) ToFirewallPolicyEncryptionConfigurationOutput() FirewallPolicyEncryptionConfigurationOutput {
	return o
}

func (o FirewallPolicyEncryptionConfigurationOutput) ToFirewallPolicyEncryptionConfigurationOutputWithContext(ctx context.Context) FirewallPolicyEncryptionConfigurationOutput {
	return o
}

func (o FirewallPolicyEncryptionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyEncryptionConfiguration] {
	return pulumix.Output[FirewallPolicyEncryptionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
func (o FirewallPolicyEncryptionConfigurationOutput) KeyId() pulumix.Output[*string] {
	return pulumix.Apply[FirewallPolicyEncryptionConfiguration](o, func(v FirewallPolicyEncryptionConfiguration) *string { return v.KeyId })
}

// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.
func (o FirewallPolicyEncryptionConfigurationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[FirewallPolicyEncryptionConfiguration](o, func(v FirewallPolicyEncryptionConfiguration) string { return v.Type })
}

type FirewallPolicyFirewallPolicy struct {
	// . Contains variables that you can use to override default Suricata settings in your firewall policy. See Rule Variables for details.
	PolicyVariables *FirewallPolicyFirewallPolicyPolicyVariables `pulumi:"policyVariables"`
	// Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a `statefulEngineOptions` block with a `ruleOrder` value of `STRICT_ORDER`. You can specify one of either or neither values of `aws:drop_strict` or `aws:drop_established`, as well as any combination of `aws:alert_strict` and `aws:alert_established`.
	StatefulDefaultActions []string `pulumi:"statefulDefaultActions"`
	// A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.
	StatefulEngineOptions *FirewallPolicyFirewallPolicyStatefulEngineOptions `pulumi:"statefulEngineOptions"`
	// Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.
	StatefulRuleGroupReferences []FirewallPolicyFirewallPolicyStatefulRuleGroupReference `pulumi:"statefulRuleGroupReferences"`
	// Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's `statelessDefaultActions`. See Stateless Custom Action below for details.
	StatelessCustomActions []FirewallPolicyFirewallPolicyStatelessCustomAction `pulumi:"statelessCustomActions"`
	// Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
	// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
	StatelessDefaultActions []string `pulumi:"statelessDefaultActions"`
	// Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
	// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
	StatelessFragmentDefaultActions []string `pulumi:"statelessFragmentDefaultActions"`
	// Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.
	StatelessRuleGroupReferences []FirewallPolicyFirewallPolicyStatelessRuleGroupReference `pulumi:"statelessRuleGroupReferences"`
}

type FirewallPolicyFirewallPolicyArgs struct {
	// . Contains variables that you can use to override default Suricata settings in your firewall policy. See Rule Variables for details.
	PolicyVariables pulumix.Input[*FirewallPolicyFirewallPolicyPolicyVariablesArgs] `pulumi:"policyVariables"`
	// Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a `statefulEngineOptions` block with a `ruleOrder` value of `STRICT_ORDER`. You can specify one of either or neither values of `aws:drop_strict` or `aws:drop_established`, as well as any combination of `aws:alert_strict` and `aws:alert_established`.
	StatefulDefaultActions pulumix.Input[[]string] `pulumi:"statefulDefaultActions"`
	// A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.
	StatefulEngineOptions pulumix.Input[*FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs] `pulumi:"statefulEngineOptions"`
	// Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.
	StatefulRuleGroupReferences pulumix.Input[[]*FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs] `pulumi:"statefulRuleGroupReferences"`
	// Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's `statelessDefaultActions`. See Stateless Custom Action below for details.
	StatelessCustomActions pulumix.Input[[]*FirewallPolicyFirewallPolicyStatelessCustomActionArgs] `pulumi:"statelessCustomActions"`
	// Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
	// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
	StatelessDefaultActions pulumix.Input[[]string] `pulumi:"statelessDefaultActions"`
	// Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
	// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
	StatelessFragmentDefaultActions pulumix.Input[[]string] `pulumi:"statelessFragmentDefaultActions"`
	// Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.
	StatelessRuleGroupReferences pulumix.Input[[]*FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs] `pulumi:"statelessRuleGroupReferences"`
}

func (FirewallPolicyFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicy)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyArgs) ToFirewallPolicyFirewallPolicyOutput() FirewallPolicyFirewallPolicyOutput {
	return i.ToFirewallPolicyFirewallPolicyOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyArgs) ToFirewallPolicyFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyOutput)
}

func (i *FirewallPolicyFirewallPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicy)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyOutput) ToFirewallPolicyFirewallPolicyOutput() FirewallPolicyFirewallPolicyOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyOutput) ToFirewallPolicyFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicy] {
	return pulumix.Output[FirewallPolicyFirewallPolicy]{
		OutputState: o.OutputState,
	}
}

// . Contains variables that you can use to override default Suricata settings in your firewall policy. See Rule Variables for details.
func (o FirewallPolicyFirewallPolicyOutput) PolicyVariables() pulumix.GPtrOutput[FirewallPolicyFirewallPolicyPolicyVariables, FirewallPolicyFirewallPolicyPolicyVariablesOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicy](o, func(v FirewallPolicyFirewallPolicy) *FirewallPolicyFirewallPolicyPolicyVariables {
		return v.PolicyVariables
	})
	return pulumix.GPtrOutput[FirewallPolicyFirewallPolicyPolicyVariables, FirewallPolicyFirewallPolicyPolicyVariablesOutput]{OutputState: value.OutputState}
}

// Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a `statefulEngineOptions` block with a `ruleOrder` value of `STRICT_ORDER`. You can specify one of either or neither values of `aws:drop_strict` or `aws:drop_established`, as well as any combination of `aws:alert_strict` and `aws:alert_established`.
func (o FirewallPolicyFirewallPolicyOutput) StatefulDefaultActions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicy](o, func(v FirewallPolicyFirewallPolicy) []string { return v.StatefulDefaultActions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.
func (o FirewallPolicyFirewallPolicyOutput) StatefulEngineOptions() pulumix.GPtrOutput[FirewallPolicyFirewallPolicyStatefulEngineOptions, FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicy](o, func(v FirewallPolicyFirewallPolicy) *FirewallPolicyFirewallPolicyStatefulEngineOptions {
		return v.StatefulEngineOptions
	})
	return pulumix.GPtrOutput[FirewallPolicyFirewallPolicyStatefulEngineOptions, FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput]{OutputState: value.OutputState}
}

// Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.
func (o FirewallPolicyFirewallPolicyOutput) StatefulRuleGroupReferences() pulumix.GArrayOutput[FirewallPolicyFirewallPolicyStatefulRuleGroupReference, FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicy](o, func(v FirewallPolicyFirewallPolicy) []FirewallPolicyFirewallPolicyStatefulRuleGroupReference {
		return v.StatefulRuleGroupReferences
	})
	return pulumix.GArrayOutput[FirewallPolicyFirewallPolicyStatefulRuleGroupReference, FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput]{OutputState: value.OutputState}
}

// Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's `statelessDefaultActions`. See Stateless Custom Action below for details.
func (o FirewallPolicyFirewallPolicyOutput) StatelessCustomActions() pulumix.GArrayOutput[FirewallPolicyFirewallPolicyStatelessCustomAction, FirewallPolicyFirewallPolicyStatelessCustomActionOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicy](o, func(v FirewallPolicyFirewallPolicy) []FirewallPolicyFirewallPolicyStatelessCustomAction {
		return v.StatelessCustomActions
	})
	return pulumix.GArrayOutput[FirewallPolicyFirewallPolicyStatelessCustomAction, FirewallPolicyFirewallPolicyStatelessCustomActionOutput]{OutputState: value.OutputState}
}

// Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
func (o FirewallPolicyFirewallPolicyOutput) StatelessDefaultActions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicy](o, func(v FirewallPolicyFirewallPolicy) []string { return v.StatelessDefaultActions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
func (o FirewallPolicyFirewallPolicyOutput) StatelessFragmentDefaultActions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicy](o, func(v FirewallPolicyFirewallPolicy) []string { return v.StatelessFragmentDefaultActions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.
func (o FirewallPolicyFirewallPolicyOutput) StatelessRuleGroupReferences() pulumix.GArrayOutput[FirewallPolicyFirewallPolicyStatelessRuleGroupReference, FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicy](o, func(v FirewallPolicyFirewallPolicy) []FirewallPolicyFirewallPolicyStatelessRuleGroupReference {
		return v.StatelessRuleGroupReferences
	})
	return pulumix.GArrayOutput[FirewallPolicyFirewallPolicyStatelessRuleGroupReference, FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput]{OutputState: value.OutputState}
}

type FirewallPolicyFirewallPolicyPolicyVariables struct {
	RuleVariables []FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable `pulumi:"ruleVariables"`
}

type FirewallPolicyFirewallPolicyPolicyVariablesArgs struct {
	RuleVariables pulumix.Input[[]*FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableArgs] `pulumi:"ruleVariables"`
}

func (FirewallPolicyFirewallPolicyPolicyVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyPolicyVariables)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyPolicyVariablesArgs) ToFirewallPolicyFirewallPolicyPolicyVariablesOutput() FirewallPolicyFirewallPolicyPolicyVariablesOutput {
	return i.ToFirewallPolicyFirewallPolicyPolicyVariablesOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyPolicyVariablesArgs) ToFirewallPolicyFirewallPolicyPolicyVariablesOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPolicyVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyPolicyVariablesOutput)
}

func (i *FirewallPolicyFirewallPolicyPolicyVariablesArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyPolicyVariablesArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyPolicyVariablesOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyPolicyVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyPolicyVariables)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesOutput) ToFirewallPolicyFirewallPolicyPolicyVariablesOutput() FirewallPolicyFirewallPolicyPolicyVariablesOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesOutput) ToFirewallPolicyFirewallPolicyPolicyVariablesOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPolicyVariablesOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyPolicyVariables] {
	return pulumix.Output[FirewallPolicyFirewallPolicyPolicyVariables]{
		OutputState: o.OutputState,
	}
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesOutput) RuleVariables() pulumix.GArrayOutput[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable, FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicyPolicyVariables](o, func(v FirewallPolicyFirewallPolicyPolicyVariables) []FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable {
		return v.RuleVariables
	})
	return pulumix.GArrayOutput[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable, FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput]{OutputState: value.OutputState}
}

type FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable struct {
	// A configuration block that defines a set of IP addresses. See IP Set below for details.
	IpSet FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet `pulumi:"ipSet"`
	// An alphanumeric string to identify the `ipSet`. Valid values: `HOME_NET`
	Key string `pulumi:"key"`
}

type FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableArgs struct {
	// A configuration block that defines a set of IP addresses. See IP Set below for details.
	IpSet pulumix.Input[*FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetArgs] `pulumi:"ipSet"`
	// An alphanumeric string to identify the `ipSet`. Valid values: `HOME_NET`
	Key pulumix.Input[string] `pulumi:"key"`
}

func (FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableArgs) ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput() FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput {
	return i.ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableArgs) ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput)
}

func (i *FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput) ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput() FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput) ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable] {
	return pulumix.Output[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable]{
		OutputState: o.OutputState,
	}
}

// A configuration block that defines a set of IP addresses. See IP Set below for details.
func (o FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput) IpSet() pulumix.GPtrOutput[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet, FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable](o, func(v FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable) FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet {
		return v.IpSet
	})
	return pulumix.GPtrOutput[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet, FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput]{OutputState: value.OutputState}
}

// An alphanumeric string to identify the `ipSet`. Valid values: `HOME_NET`
func (o FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable](o, func(v FirewallPolicyFirewallPolicyPolicyVariablesRuleVariable) string { return v.Key })
}

type FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet struct {
	// Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata `HOME_NET` variable.
	Definitions []string `pulumi:"definitions"`
}

type FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetArgs struct {
	// Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata `HOME_NET` variable.
	Definitions pulumix.Input[[]string] `pulumi:"definitions"`
}

func (FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetArgs) ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput() FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput {
	return i.ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetArgs) ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput)
}

func (i *FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput) ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput() FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput) ToFirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet] {
	return pulumix.Output[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet]{
		OutputState: o.OutputState,
	}
}

// Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata `HOME_NET` variable.
func (o FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput) Definitions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet](o, func(v FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSet) []string { return v.Definitions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type FirewallPolicyFirewallPolicyStatefulEngineOptions struct {
	// Indicates how to manage the order of stateful rule evaluation for the policy. Default value: `DEFAULT_ACTION_ORDER`. Valid values: `DEFAULT_ACTION_ORDER`, `STRICT_ORDER`.
	RuleOrder *string `pulumi:"ruleOrder"`
	// Describes how to treat traffic which has broken midstream. Default value: `DROP`. Valid values: `DROP`, `CONTINUE`, `REJECT`.
	StreamExceptionPolicy *string `pulumi:"streamExceptionPolicy"`
}

type FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs struct {
	// Indicates how to manage the order of stateful rule evaluation for the policy. Default value: `DEFAULT_ACTION_ORDER`. Valid values: `DEFAULT_ACTION_ORDER`, `STRICT_ORDER`.
	RuleOrder pulumix.Input[*string] `pulumi:"ruleOrder"`
	// Describes how to treat traffic which has broken midstream. Default value: `DROP`. Valid values: `DROP`, `CONTINUE`, `REJECT`.
	StreamExceptionPolicy pulumix.Input[*string] `pulumi:"streamExceptionPolicy"`
}

func (FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatefulEngineOptions)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs) ToFirewallPolicyFirewallPolicyStatefulEngineOptionsOutput() FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput {
	return i.ToFirewallPolicyFirewallPolicyStatefulEngineOptionsOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs) ToFirewallPolicyFirewallPolicyStatefulEngineOptionsOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput)
}

func (i *FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatefulEngineOptions)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput) ToFirewallPolicyFirewallPolicyStatefulEngineOptionsOutput() FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput) ToFirewallPolicyFirewallPolicyStatefulEngineOptionsOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyStatefulEngineOptions] {
	return pulumix.Output[FirewallPolicyFirewallPolicyStatefulEngineOptions]{
		OutputState: o.OutputState,
	}
}

// Indicates how to manage the order of stateful rule evaluation for the policy. Default value: `DEFAULT_ACTION_ORDER`. Valid values: `DEFAULT_ACTION_ORDER`, `STRICT_ORDER`.
func (o FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput) RuleOrder() pulumix.Output[*string] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyStatefulEngineOptions](o, func(v FirewallPolicyFirewallPolicyStatefulEngineOptions) *string { return v.RuleOrder })
}

// Describes how to treat traffic which has broken midstream. Default value: `DROP`. Valid values: `DROP`, `CONTINUE`, `REJECT`.
func (o FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput) StreamExceptionPolicy() pulumix.Output[*string] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyStatefulEngineOptions](o, func(v FirewallPolicyFirewallPolicyStatefulEngineOptions) *string { return v.StreamExceptionPolicy })
}

type FirewallPolicyFirewallPolicyStatefulRuleGroupReference struct {
	// Configuration block for override values
	Override *FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride `pulumi:"override"`
	// An integer setting that indicates the order in which to apply the stateful rule groups in a single policy. This argument must be specified if the policy has a `statefulEngineOptions` block with a `ruleOrder` value of `STRICT_ORDER`. AWS Network Firewall applies each stateful rule group to a packet starting with the group that has the lowest priority setting.
	Priority *int `pulumi:"priority"`
	// The Amazon Resource Name (ARN) of the stateful rule group.
	ResourceArn string `pulumi:"resourceArn"`
}

type FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs struct {
	// Configuration block for override values
	Override pulumix.Input[*FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs] `pulumi:"override"`
	// An integer setting that indicates the order in which to apply the stateful rule groups in a single policy. This argument must be specified if the policy has a `statefulEngineOptions` block with a `ruleOrder` value of `STRICT_ORDER`. AWS Network Firewall applies each stateful rule group to a packet starting with the group that has the lowest priority setting.
	Priority pulumix.Input[*int] `pulumi:"priority"`
	// The Amazon Resource Name (ARN) of the stateful rule group.
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
}

func (FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatefulRuleGroupReference)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs) ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput() FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput {
	return i.ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs) ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput)
}

func (i *FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatefulRuleGroupReference)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput() FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyStatefulRuleGroupReference] {
	return pulumix.Output[FirewallPolicyFirewallPolicyStatefulRuleGroupReference]{
		OutputState: o.OutputState,
	}
}

// Configuration block for override values
func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) Override() pulumix.GPtrOutput[FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride, FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicyStatefulRuleGroupReference](o, func(v FirewallPolicyFirewallPolicyStatefulRuleGroupReference) *FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride {
		return v.Override
	})
	return pulumix.GPtrOutput[FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride, FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput]{OutputState: value.OutputState}
}

// An integer setting that indicates the order in which to apply the stateful rule groups in a single policy. This argument must be specified if the policy has a `statefulEngineOptions` block with a `ruleOrder` value of `STRICT_ORDER`. AWS Network Firewall applies each stateful rule group to a packet starting with the group that has the lowest priority setting.
func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) Priority() pulumix.Output[*int] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyStatefulRuleGroupReference](o, func(v FirewallPolicyFirewallPolicyStatefulRuleGroupReference) *int { return v.Priority })
}

// The Amazon Resource Name (ARN) of the stateful rule group.
func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyStatefulRuleGroupReference](o, func(v FirewallPolicyFirewallPolicyStatefulRuleGroupReference) string { return v.ResourceArn })
}

type FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride struct {
	// The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.
	Action *string `pulumi:"action"`
}

type FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs struct {
	// The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.
	Action pulumix.Input[*string] `pulumi:"action"`
}

func (FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs) ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput() FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput {
	return i.ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs) ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput)
}

func (i *FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput() FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) ToFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride] {
	return pulumix.Output[FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride]{
		OutputState: o.OutputState,
	}
}

// The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.
func (o FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) Action() pulumix.Output[*string] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride](o, func(v FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride) *string { return v.Action })
}

type FirewallPolicyFirewallPolicyStatelessCustomAction struct {
	// A configuration block describing the custom action associated with the `actionName`. See Action Definition below for details.
	ActionDefinition FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition `pulumi:"actionDefinition"`
	// A friendly name of the custom action.
	ActionName string `pulumi:"actionName"`
}

type FirewallPolicyFirewallPolicyStatelessCustomActionArgs struct {
	// A configuration block describing the custom action associated with the `actionName`. See Action Definition below for details.
	ActionDefinition pulumix.Input[*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs] `pulumi:"actionDefinition"`
	// A friendly name of the custom action.
	ActionName pulumix.Input[string] `pulumi:"actionName"`
}

func (FirewallPolicyFirewallPolicyStatelessCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessCustomAction)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyStatelessCustomActionArgs) ToFirewallPolicyFirewallPolicyStatelessCustomActionOutput() FirewallPolicyFirewallPolicyStatelessCustomActionOutput {
	return i.ToFirewallPolicyFirewallPolicyStatelessCustomActionOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyStatelessCustomActionArgs) ToFirewallPolicyFirewallPolicyStatelessCustomActionOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyStatelessCustomActionOutput)
}

func (i *FirewallPolicyFirewallPolicyStatelessCustomActionArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyStatelessCustomActionArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyStatelessCustomActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyStatelessCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessCustomAction)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionOutput) ToFirewallPolicyFirewallPolicyStatelessCustomActionOutput() FirewallPolicyFirewallPolicyStatelessCustomActionOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionOutput) ToFirewallPolicyFirewallPolicyStatelessCustomActionOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessCustomActionOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyStatelessCustomAction] {
	return pulumix.Output[FirewallPolicyFirewallPolicyStatelessCustomAction]{
		OutputState: o.OutputState,
	}
}

// A configuration block describing the custom action associated with the `actionName`. See Action Definition below for details.
func (o FirewallPolicyFirewallPolicyStatelessCustomActionOutput) ActionDefinition() pulumix.GPtrOutput[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition, FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicyStatelessCustomAction](o, func(v FirewallPolicyFirewallPolicyStatelessCustomAction) FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition {
		return v.ActionDefinition
	})
	return pulumix.GPtrOutput[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition, FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput]{OutputState: value.OutputState}
}

// A friendly name of the custom action.
func (o FirewallPolicyFirewallPolicyStatelessCustomActionOutput) ActionName() pulumix.Output[string] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyStatelessCustomAction](o, func(v FirewallPolicyFirewallPolicyStatelessCustomAction) string { return v.ActionName })
}

type FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition struct {
	// A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.
	PublishMetricAction FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction `pulumi:"publishMetricAction"`
}

type FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs struct {
	// A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.
	PublishMetricAction pulumix.Input[*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs] `pulumi:"publishMetricAction"`
}

func (FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput() FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput {
	return i.ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput)
}

func (i *FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput() FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition] {
	return pulumix.Output[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition]{
		OutputState: o.OutputState,
	}
}

// A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.
func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) PublishMetricAction() pulumix.GPtrOutput[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction, FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition](o, func(v FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition) FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction {
		return v.PublishMetricAction
	})
	return pulumix.GPtrOutput[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction, FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput]{OutputState: value.OutputState}
}

type FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction struct {
	// Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.
	Dimensions []FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension `pulumi:"dimensions"`
}

type FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs struct {
	// Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.
	Dimensions pulumix.Input[[]*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs] `pulumi:"dimensions"`
}

func (FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput() FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput {
	return i.ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput)
}

func (i *FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput() FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction] {
	return pulumix.Output[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction]{
		OutputState: o.OutputState,
	}
}

// Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.
func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) Dimensions() pulumix.GArrayOutput[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension, FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput] {
	value := pulumix.Apply[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction](o, func(v FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction) []FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension {
		return v.Dimensions
	})
	return pulumix.GArrayOutput[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension, FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput]{OutputState: value.OutputState}
}

type FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension struct {
	// The string value to use in the custom metric dimension.
	Value string `pulumi:"value"`
}

type FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs struct {
	// The string value to use in the custom metric dimension.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput() FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return i.ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput)
}

func (i *FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput() FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) ToFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension] {
	return pulumix.Output[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension]{
		OutputState: o.OutputState,
	}
}

// The string value to use in the custom metric dimension.
func (o FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension](o, func(v FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension) string {
		return v.Value
	})
}

type FirewallPolicyFirewallPolicyStatelessRuleGroupReference struct {
	// An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
	Priority int `pulumi:"priority"`
	// The Amazon Resource Name (ARN) of the stateless rule group.
	ResourceArn string `pulumi:"resourceArn"`
}

type FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs struct {
	// An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The Amazon Resource Name (ARN) of the stateless rule group.
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
}

func (FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessRuleGroupReference)(nil)).Elem()
}

func (i FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs) ToFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput() FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput {
	return i.ToFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(context.Background())
}

func (i FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs) ToFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput)
}

func (i *FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs] {
	return pulumix.Val(i)
}

type FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFirewallPolicyStatelessRuleGroupReference)(nil)).Elem()
}

func (o FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ToFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput() FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ToFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(ctx context.Context) FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput {
	return o
}

func (o FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicyFirewallPolicyStatelessRuleGroupReference] {
	return pulumix.Output[FirewallPolicyFirewallPolicyStatelessRuleGroupReference]{
		OutputState: o.OutputState,
	}
}

// An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
func (o FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyStatelessRuleGroupReference](o, func(v FirewallPolicyFirewallPolicyStatelessRuleGroupReference) int { return v.Priority })
}

// The Amazon Resource Name (ARN) of the stateless rule group.
func (o FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[FirewallPolicyFirewallPolicyStatelessRuleGroupReference](o, func(v FirewallPolicyFirewallPolicyStatelessRuleGroupReference) string { return v.ResourceArn })
}

type FirewallSubnetMapping struct {
	// The subnet's IP address type. Valida values: `"DUALSTACK"`, `"IPV4"`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// The unique identifier for the subnet.
	SubnetId string `pulumi:"subnetId"`
}

type FirewallSubnetMappingArgs struct {
	// The subnet's IP address type. Valida values: `"DUALSTACK"`, `"IPV4"`.
	IpAddressType pulumix.Input[*string] `pulumi:"ipAddressType"`
	// The unique identifier for the subnet.
	SubnetId pulumix.Input[string] `pulumi:"subnetId"`
}

func (FirewallSubnetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSubnetMapping)(nil)).Elem()
}

func (i FirewallSubnetMappingArgs) ToFirewallSubnetMappingOutput() FirewallSubnetMappingOutput {
	return i.ToFirewallSubnetMappingOutputWithContext(context.Background())
}

func (i FirewallSubnetMappingArgs) ToFirewallSubnetMappingOutputWithContext(ctx context.Context) FirewallSubnetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallSubnetMappingOutput)
}

func (i *FirewallSubnetMappingArgs) ToOutput(ctx context.Context) pulumix.Output[*FirewallSubnetMappingArgs] {
	return pulumix.Val(i)
}

type FirewallSubnetMappingOutput struct{ *pulumi.OutputState }

func (FirewallSubnetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallSubnetMapping)(nil)).Elem()
}

func (o FirewallSubnetMappingOutput) ToFirewallSubnetMappingOutput() FirewallSubnetMappingOutput {
	return o
}

func (o FirewallSubnetMappingOutput) ToFirewallSubnetMappingOutputWithContext(ctx context.Context) FirewallSubnetMappingOutput {
	return o
}

func (o FirewallSubnetMappingOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallSubnetMapping] {
	return pulumix.Output[FirewallSubnetMapping]{
		OutputState: o.OutputState,
	}
}

// The subnet's IP address type. Valida values: `"DUALSTACK"`, `"IPV4"`.
func (o FirewallSubnetMappingOutput) IpAddressType() pulumix.Output[*string] {
	return pulumix.Apply[FirewallSubnetMapping](o, func(v FirewallSubnetMapping) *string { return v.IpAddressType })
}

// The unique identifier for the subnet.
func (o FirewallSubnetMappingOutput) SubnetId() pulumix.Output[string] {
	return pulumix.Apply[FirewallSubnetMapping](o, func(v FirewallSubnetMapping) string { return v.SubnetId })
}

type LoggingConfigurationLoggingConfiguration struct {
	// Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for `FLOW` logs and one for `ALERT` logs.
	LogDestinationConfigs []LoggingConfigurationLoggingConfigurationLogDestinationConfig `pulumi:"logDestinationConfigs"`
}

type LoggingConfigurationLoggingConfigurationArgs struct {
	// Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for `FLOW` logs and one for `ALERT` logs.
	LogDestinationConfigs pulumix.Input[[]*LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs] `pulumi:"logDestinationConfigs"`
}

func (LoggingConfigurationLoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLoggingConfiguration)(nil)).Elem()
}

func (i LoggingConfigurationLoggingConfigurationArgs) ToLoggingConfigurationLoggingConfigurationOutput() LoggingConfigurationLoggingConfigurationOutput {
	return i.ToLoggingConfigurationLoggingConfigurationOutputWithContext(context.Background())
}

func (i LoggingConfigurationLoggingConfigurationArgs) ToLoggingConfigurationLoggingConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationLoggingConfigurationOutput)
}

func (i *LoggingConfigurationLoggingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationLoggingConfigurationArgs] {
	return pulumix.Val(i)
}

type LoggingConfigurationLoggingConfigurationOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLoggingConfiguration)(nil)).Elem()
}

func (o LoggingConfigurationLoggingConfigurationOutput) ToLoggingConfigurationLoggingConfigurationOutput() LoggingConfigurationLoggingConfigurationOutput {
	return o
}

func (o LoggingConfigurationLoggingConfigurationOutput) ToLoggingConfigurationLoggingConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationOutput {
	return o
}

func (o LoggingConfigurationLoggingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationLoggingConfiguration] {
	return pulumix.Output[LoggingConfigurationLoggingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for `FLOW` logs and one for `ALERT` logs.
func (o LoggingConfigurationLoggingConfigurationOutput) LogDestinationConfigs() pulumix.GArrayOutput[LoggingConfigurationLoggingConfigurationLogDestinationConfig, LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput] {
	value := pulumix.Apply[LoggingConfigurationLoggingConfiguration](o, func(v LoggingConfigurationLoggingConfiguration) []LoggingConfigurationLoggingConfigurationLogDestinationConfig {
		return v.LogDestinationConfigs
	})
	return pulumix.GArrayOutput[LoggingConfigurationLoggingConfigurationLogDestinationConfig, LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput]{OutputState: value.OutputState}
}

type LoggingConfigurationLoggingConfigurationLogDestinationConfig struct {
	// A map describing the logging destination for the chosen `logDestinationType`.
	// * For an Amazon S3 bucket, specify the key `bucketName` with the name of the bucket and optionally specify the key `prefix` with a path.
	// * For a CloudWatch log group, specify the key `logGroup` with the name of the CloudWatch log group.
	// * For a Kinesis Data Firehose delivery stream, specify the key `deliveryStream` with the name of the delivery stream.
	LogDestination map[string]string `pulumi:"logDestination"`
	// The location to send logs to. Valid values: `S3`, `CloudWatchLogs`, `KinesisDataFirehose`.
	LogDestinationType string `pulumi:"logDestinationType"`
	// The type of log to send. Valid values: `ALERT` or `FLOW`. Alert logs report traffic that matches a `StatefulRule` with an action setting that sends a log message. Flow logs are standard network traffic flow logs.
	LogType string `pulumi:"logType"`
}

type LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs struct {
	// A map describing the logging destination for the chosen `logDestinationType`.
	// * For an Amazon S3 bucket, specify the key `bucketName` with the name of the bucket and optionally specify the key `prefix` with a path.
	// * For a CloudWatch log group, specify the key `logGroup` with the name of the CloudWatch log group.
	// * For a Kinesis Data Firehose delivery stream, specify the key `deliveryStream` with the name of the delivery stream.
	LogDestination pulumix.Input[map[string]string] `pulumi:"logDestination"`
	// The location to send logs to. Valid values: `S3`, `CloudWatchLogs`, `KinesisDataFirehose`.
	LogDestinationType pulumix.Input[string] `pulumi:"logDestinationType"`
	// The type of log to send. Valid values: `ALERT` or `FLOW`. Alert logs report traffic that matches a `StatefulRule` with an action setting that sends a log message. Flow logs are standard network traffic flow logs.
	LogType pulumix.Input[string] `pulumi:"logType"`
}

func (LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLoggingConfigurationLogDestinationConfig)(nil)).Elem()
}

func (i LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs) ToLoggingConfigurationLoggingConfigurationLogDestinationConfigOutput() LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput {
	return i.ToLoggingConfigurationLoggingConfigurationLogDestinationConfigOutputWithContext(context.Background())
}

func (i LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs) ToLoggingConfigurationLoggingConfigurationLogDestinationConfigOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput)
}

func (i *LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs] {
	return pulumix.Val(i)
}

type LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLoggingConfigurationLogDestinationConfig)(nil)).Elem()
}

func (o LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput) ToLoggingConfigurationLoggingConfigurationLogDestinationConfigOutput() LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput {
	return o
}

func (o LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput) ToLoggingConfigurationLoggingConfigurationLogDestinationConfigOutputWithContext(ctx context.Context) LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput {
	return o
}

func (o LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationLoggingConfigurationLogDestinationConfig] {
	return pulumix.Output[LoggingConfigurationLoggingConfigurationLogDestinationConfig]{
		OutputState: o.OutputState,
	}
}

// A map describing the logging destination for the chosen `logDestinationType`.
// * For an Amazon S3 bucket, specify the key `bucketName` with the name of the bucket and optionally specify the key `prefix` with a path.
// * For a CloudWatch log group, specify the key `logGroup` with the name of the CloudWatch log group.
// * For a Kinesis Data Firehose delivery stream, specify the key `deliveryStream` with the name of the delivery stream.
func (o LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput) LogDestination() pulumix.MapOutput[string] {
	value := pulumix.Apply[LoggingConfigurationLoggingConfigurationLogDestinationConfig](o, func(v LoggingConfigurationLoggingConfigurationLogDestinationConfig) map[string]string {
		return v.LogDestination
	})
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// The location to send logs to. Valid values: `S3`, `CloudWatchLogs`, `KinesisDataFirehose`.
func (o LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput) LogDestinationType() pulumix.Output[string] {
	return pulumix.Apply[LoggingConfigurationLoggingConfigurationLogDestinationConfig](o, func(v LoggingConfigurationLoggingConfigurationLogDestinationConfig) string {
		return v.LogDestinationType
	})
}

// The type of log to send. Valid values: `ALERT` or `FLOW`. Alert logs report traffic that matches a `StatefulRule` with an action setting that sends a log message. Flow logs are standard network traffic flow logs.
func (o LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput) LogType() pulumix.Output[string] {
	return pulumix.Apply[LoggingConfigurationLoggingConfigurationLogDestinationConfig](o, func(v LoggingConfigurationLoggingConfigurationLogDestinationConfig) string { return v.LogType })
}

type RuleGroupEncryptionConfiguration struct {
	// The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
	KeyId *string `pulumi:"keyId"`
	// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.
	Type string `pulumi:"type"`
}

type RuleGroupEncryptionConfigurationArgs struct {
	// The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
	KeyId pulumix.Input[*string] `pulumi:"keyId"`
	// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupEncryptionConfiguration)(nil)).Elem()
}

func (i RuleGroupEncryptionConfigurationArgs) ToRuleGroupEncryptionConfigurationOutput() RuleGroupEncryptionConfigurationOutput {
	return i.ToRuleGroupEncryptionConfigurationOutputWithContext(context.Background())
}

func (i RuleGroupEncryptionConfigurationArgs) ToRuleGroupEncryptionConfigurationOutputWithContext(ctx context.Context) RuleGroupEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupEncryptionConfigurationOutput)
}

func (i *RuleGroupEncryptionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupEncryptionConfigurationArgs] {
	return pulumix.Val(i)
}

type RuleGroupEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (RuleGroupEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupEncryptionConfiguration)(nil)).Elem()
}

func (o RuleGroupEncryptionConfigurationOutput) ToRuleGroupEncryptionConfigurationOutput() RuleGroupEncryptionConfigurationOutput {
	return o
}

func (o RuleGroupEncryptionConfigurationOutput) ToRuleGroupEncryptionConfigurationOutputWithContext(ctx context.Context) RuleGroupEncryptionConfigurationOutput {
	return o
}

func (o RuleGroupEncryptionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupEncryptionConfiguration] {
	return pulumix.Output[RuleGroupEncryptionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
func (o RuleGroupEncryptionConfigurationOutput) KeyId() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupEncryptionConfiguration](o, func(v RuleGroupEncryptionConfiguration) *string { return v.KeyId })
}

// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.
func (o RuleGroupEncryptionConfigurationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupEncryptionConfiguration](o, func(v RuleGroupEncryptionConfiguration) string { return v.Type })
}

type RuleGroupRuleGroup struct {
	// A configuration block that defines the IP Set References for the rule group. See Reference Sets below for details. Please notes that there can only be a maximum of 5 `referenceSets` in a `ruleGroup`. See the [AWS documentation](https://docs.aws.amazon.com/network-firewall/latest/developerguide/rule-groups-ip-set-references.html#rule-groups-ip-set-reference-limits) for details.
	ReferenceSets *RuleGroupRuleGroupReferenceSets `pulumi:"referenceSets"`
	// A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for **stateful** rule groups. See Rule Variables below for details.
	RuleVariables *RuleGroupRuleGroupRuleVariables `pulumi:"ruleVariables"`
	// A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.
	RulesSource RuleGroupRuleGroupRulesSource `pulumi:"rulesSource"`
	// A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.
	StatefulRuleOptions *RuleGroupRuleGroupStatefulRuleOptions `pulumi:"statefulRuleOptions"`
}

type RuleGroupRuleGroupArgs struct {
	// A configuration block that defines the IP Set References for the rule group. See Reference Sets below for details. Please notes that there can only be a maximum of 5 `referenceSets` in a `ruleGroup`. See the [AWS documentation](https://docs.aws.amazon.com/network-firewall/latest/developerguide/rule-groups-ip-set-references.html#rule-groups-ip-set-reference-limits) for details.
	ReferenceSets pulumix.Input[*RuleGroupRuleGroupReferenceSetsArgs] `pulumi:"referenceSets"`
	// A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for **stateful** rule groups. See Rule Variables below for details.
	RuleVariables pulumix.Input[*RuleGroupRuleGroupRuleVariablesArgs] `pulumi:"ruleVariables"`
	// A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.
	RulesSource pulumix.Input[*RuleGroupRuleGroupRulesSourceArgs] `pulumi:"rulesSource"`
	// A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.
	StatefulRuleOptions pulumix.Input[*RuleGroupRuleGroupStatefulRuleOptionsArgs] `pulumi:"statefulRuleOptions"`
}

func (RuleGroupRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroup)(nil)).Elem()
}

func (i RuleGroupRuleGroupArgs) ToRuleGroupRuleGroupOutput() RuleGroupRuleGroupOutput {
	return i.ToRuleGroupRuleGroupOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupArgs) ToRuleGroupRuleGroupOutputWithContext(ctx context.Context) RuleGroupRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupOutput)
}

func (i *RuleGroupRuleGroupArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroup)(nil)).Elem()
}

func (o RuleGroupRuleGroupOutput) ToRuleGroupRuleGroupOutput() RuleGroupRuleGroupOutput {
	return o
}

func (o RuleGroupRuleGroupOutput) ToRuleGroupRuleGroupOutputWithContext(ctx context.Context) RuleGroupRuleGroupOutput {
	return o
}

func (o RuleGroupRuleGroupOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroup] {
	return pulumix.Output[RuleGroupRuleGroup]{
		OutputState: o.OutputState,
	}
}

// A configuration block that defines the IP Set References for the rule group. See Reference Sets below for details. Please notes that there can only be a maximum of 5 `referenceSets` in a `ruleGroup`. See the [AWS documentation](https://docs.aws.amazon.com/network-firewall/latest/developerguide/rule-groups-ip-set-references.html#rule-groups-ip-set-reference-limits) for details.
func (o RuleGroupRuleGroupOutput) ReferenceSets() pulumix.GPtrOutput[RuleGroupRuleGroupReferenceSets, RuleGroupRuleGroupReferenceSetsOutput] {
	value := pulumix.Apply[RuleGroupRuleGroup](o, func(v RuleGroupRuleGroup) *RuleGroupRuleGroupReferenceSets { return v.ReferenceSets })
	return pulumix.GPtrOutput[RuleGroupRuleGroupReferenceSets, RuleGroupRuleGroupReferenceSetsOutput]{OutputState: value.OutputState}
}

// A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for **stateful** rule groups. See Rule Variables below for details.
func (o RuleGroupRuleGroupOutput) RuleVariables() pulumix.GPtrOutput[RuleGroupRuleGroupRuleVariables, RuleGroupRuleGroupRuleVariablesOutput] {
	value := pulumix.Apply[RuleGroupRuleGroup](o, func(v RuleGroupRuleGroup) *RuleGroupRuleGroupRuleVariables { return v.RuleVariables })
	return pulumix.GPtrOutput[RuleGroupRuleGroupRuleVariables, RuleGroupRuleGroupRuleVariablesOutput]{OutputState: value.OutputState}
}

// A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.
func (o RuleGroupRuleGroupOutput) RulesSource() pulumix.GPtrOutput[RuleGroupRuleGroupRulesSource, RuleGroupRuleGroupRulesSourceOutput] {
	value := pulumix.Apply[RuleGroupRuleGroup](o, func(v RuleGroupRuleGroup) RuleGroupRuleGroupRulesSource { return v.RulesSource })
	return pulumix.GPtrOutput[RuleGroupRuleGroupRulesSource, RuleGroupRuleGroupRulesSourceOutput]{OutputState: value.OutputState}
}

// A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.
func (o RuleGroupRuleGroupOutput) StatefulRuleOptions() pulumix.GPtrOutput[RuleGroupRuleGroupStatefulRuleOptions, RuleGroupRuleGroupStatefulRuleOptionsOutput] {
	value := pulumix.Apply[RuleGroupRuleGroup](o, func(v RuleGroupRuleGroup) *RuleGroupRuleGroupStatefulRuleOptions { return v.StatefulRuleOptions })
	return pulumix.GPtrOutput[RuleGroupRuleGroupStatefulRuleOptions, RuleGroupRuleGroupStatefulRuleOptionsOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupReferenceSets struct {
	IpSetReferences []RuleGroupRuleGroupReferenceSetsIpSetReference `pulumi:"ipSetReferences"`
}

type RuleGroupRuleGroupReferenceSetsArgs struct {
	IpSetReferences pulumix.Input[[]*RuleGroupRuleGroupReferenceSetsIpSetReferenceArgs] `pulumi:"ipSetReferences"`
}

func (RuleGroupRuleGroupReferenceSetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupReferenceSets)(nil)).Elem()
}

func (i RuleGroupRuleGroupReferenceSetsArgs) ToRuleGroupRuleGroupReferenceSetsOutput() RuleGroupRuleGroupReferenceSetsOutput {
	return i.ToRuleGroupRuleGroupReferenceSetsOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupReferenceSetsArgs) ToRuleGroupRuleGroupReferenceSetsOutputWithContext(ctx context.Context) RuleGroupRuleGroupReferenceSetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupReferenceSetsOutput)
}

func (i *RuleGroupRuleGroupReferenceSetsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupReferenceSetsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupReferenceSetsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupReferenceSetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupReferenceSets)(nil)).Elem()
}

func (o RuleGroupRuleGroupReferenceSetsOutput) ToRuleGroupRuleGroupReferenceSetsOutput() RuleGroupRuleGroupReferenceSetsOutput {
	return o
}

func (o RuleGroupRuleGroupReferenceSetsOutput) ToRuleGroupRuleGroupReferenceSetsOutputWithContext(ctx context.Context) RuleGroupRuleGroupReferenceSetsOutput {
	return o
}

func (o RuleGroupRuleGroupReferenceSetsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupReferenceSets] {
	return pulumix.Output[RuleGroupRuleGroupReferenceSets]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupRuleGroupReferenceSetsOutput) IpSetReferences() pulumix.GArrayOutput[RuleGroupRuleGroupReferenceSetsIpSetReference, RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupReferenceSets](o, func(v RuleGroupRuleGroupReferenceSets) []RuleGroupRuleGroupReferenceSetsIpSetReference {
		return v.IpSetReferences
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupReferenceSetsIpSetReference, RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupReferenceSetsIpSetReference struct {
	// Set of configuration blocks that define the IP Reference information. See IP Set Reference below for details.
	IpSetReferences []RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference `pulumi:"ipSetReferences"`
	// A unique alphanumeric string to identify the `ipSet`.
	Key string `pulumi:"key"`
}

type RuleGroupRuleGroupReferenceSetsIpSetReferenceArgs struct {
	// Set of configuration blocks that define the IP Reference information. See IP Set Reference below for details.
	IpSetReferences pulumix.Input[[]*RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceArgs] `pulumi:"ipSetReferences"`
	// A unique alphanumeric string to identify the `ipSet`.
	Key pulumix.Input[string] `pulumi:"key"`
}

func (RuleGroupRuleGroupReferenceSetsIpSetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupReferenceSetsIpSetReference)(nil)).Elem()
}

func (i RuleGroupRuleGroupReferenceSetsIpSetReferenceArgs) ToRuleGroupRuleGroupReferenceSetsIpSetReferenceOutput() RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput {
	return i.ToRuleGroupRuleGroupReferenceSetsIpSetReferenceOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupReferenceSetsIpSetReferenceArgs) ToRuleGroupRuleGroupReferenceSetsIpSetReferenceOutputWithContext(ctx context.Context) RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput)
}

func (i *RuleGroupRuleGroupReferenceSetsIpSetReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupReferenceSetsIpSetReferenceArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupReferenceSetsIpSetReference)(nil)).Elem()
}

func (o RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput) ToRuleGroupRuleGroupReferenceSetsIpSetReferenceOutput() RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput {
	return o
}

func (o RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput) ToRuleGroupRuleGroupReferenceSetsIpSetReferenceOutputWithContext(ctx context.Context) RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput {
	return o
}

func (o RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupReferenceSetsIpSetReference] {
	return pulumix.Output[RuleGroupRuleGroupReferenceSetsIpSetReference]{
		OutputState: o.OutputState,
	}
}

// Set of configuration blocks that define the IP Reference information. See IP Set Reference below for details.
func (o RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput) IpSetReferences() pulumix.GArrayOutput[RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference, RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupReferenceSetsIpSetReference](o, func(v RuleGroupRuleGroupReferenceSetsIpSetReference) []RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference {
		return v.IpSetReferences
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference, RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput]{OutputState: value.OutputState}
}

// A unique alphanumeric string to identify the `ipSet`.
func (o RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupReferenceSetsIpSetReference](o, func(v RuleGroupRuleGroupReferenceSetsIpSetReference) string { return v.Key })
}

type RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference struct {
	// Set of Managed Prefix IP ARN(s)
	ReferenceArn string `pulumi:"referenceArn"`
}

type RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceArgs struct {
	// Set of Managed Prefix IP ARN(s)
	ReferenceArn pulumix.Input[string] `pulumi:"referenceArn"`
}

func (RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference)(nil)).Elem()
}

func (i RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceArgs) ToRuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput() RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput {
	return i.ToRuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceArgs) ToRuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutputWithContext(ctx context.Context) RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput)
}

func (i *RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference)(nil)).Elem()
}

func (o RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput) ToRuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput() RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput {
	return o
}

func (o RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput) ToRuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutputWithContext(ctx context.Context) RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput {
	return o
}

func (o RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference] {
	return pulumix.Output[RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference]{
		OutputState: o.OutputState,
	}
}

// Set of Managed Prefix IP ARN(s)
func (o RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput) ReferenceArn() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference](o, func(v RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReference) string { return v.ReferenceArn })
}

type RuleGroupRuleGroupRuleVariables struct {
	// Set of configuration blocks that define IP address information. See IP Sets below for details.
	IpSets []RuleGroupRuleGroupRuleVariablesIpSet `pulumi:"ipSets"`
	// Set of configuration blocks that define port range information. See Port Sets below for details.
	PortSets []RuleGroupRuleGroupRuleVariablesPortSet `pulumi:"portSets"`
}

type RuleGroupRuleGroupRuleVariablesArgs struct {
	// Set of configuration blocks that define IP address information. See IP Sets below for details.
	IpSets pulumix.Input[[]*RuleGroupRuleGroupRuleVariablesIpSetArgs] `pulumi:"ipSets"`
	// Set of configuration blocks that define port range information. See Port Sets below for details.
	PortSets pulumix.Input[[]*RuleGroupRuleGroupRuleVariablesPortSetArgs] `pulumi:"portSets"`
}

func (RuleGroupRuleGroupRuleVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariables)(nil)).Elem()
}

func (i RuleGroupRuleGroupRuleVariablesArgs) ToRuleGroupRuleGroupRuleVariablesOutput() RuleGroupRuleGroupRuleVariablesOutput {
	return i.ToRuleGroupRuleGroupRuleVariablesOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRuleVariablesArgs) ToRuleGroupRuleGroupRuleVariablesOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRuleVariablesOutput)
}

func (i *RuleGroupRuleGroupRuleVariablesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRuleVariablesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRuleVariablesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRuleVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariables)(nil)).Elem()
}

func (o RuleGroupRuleGroupRuleVariablesOutput) ToRuleGroupRuleGroupRuleVariablesOutput() RuleGroupRuleGroupRuleVariablesOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesOutput) ToRuleGroupRuleGroupRuleVariablesOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRuleVariables] {
	return pulumix.Output[RuleGroupRuleGroupRuleVariables]{
		OutputState: o.OutputState,
	}
}

// Set of configuration blocks that define IP address information. See IP Sets below for details.
func (o RuleGroupRuleGroupRuleVariablesOutput) IpSets() pulumix.GArrayOutput[RuleGroupRuleGroupRuleVariablesIpSet, RuleGroupRuleGroupRuleVariablesIpSetOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRuleVariables](o, func(v RuleGroupRuleGroupRuleVariables) []RuleGroupRuleGroupRuleVariablesIpSet { return v.IpSets })
	return pulumix.GArrayOutput[RuleGroupRuleGroupRuleVariablesIpSet, RuleGroupRuleGroupRuleVariablesIpSetOutput]{OutputState: value.OutputState}
}

// Set of configuration blocks that define port range information. See Port Sets below for details.
func (o RuleGroupRuleGroupRuleVariablesOutput) PortSets() pulumix.GArrayOutput[RuleGroupRuleGroupRuleVariablesPortSet, RuleGroupRuleGroupRuleVariablesPortSetOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRuleVariables](o, func(v RuleGroupRuleGroupRuleVariables) []RuleGroupRuleGroupRuleVariablesPortSet { return v.PortSets })
	return pulumix.GArrayOutput[RuleGroupRuleGroupRuleVariablesPortSet, RuleGroupRuleGroupRuleVariablesPortSetOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRuleVariablesIpSet struct {
	// A configuration block that defines a set of IP addresses. See IP Set below for details.
	IpSet RuleGroupRuleGroupRuleVariablesIpSetIpSet `pulumi:"ipSet"`
	// A unique alphanumeric string to identify the `ipSet`.
	Key string `pulumi:"key"`
}

type RuleGroupRuleGroupRuleVariablesIpSetArgs struct {
	// A configuration block that defines a set of IP addresses. See IP Set below for details.
	IpSet pulumix.Input[*RuleGroupRuleGroupRuleVariablesIpSetIpSetArgs] `pulumi:"ipSet"`
	// A unique alphanumeric string to identify the `ipSet`.
	Key pulumix.Input[string] `pulumi:"key"`
}

func (RuleGroupRuleGroupRuleVariablesIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariablesIpSet)(nil)).Elem()
}

func (i RuleGroupRuleGroupRuleVariablesIpSetArgs) ToRuleGroupRuleGroupRuleVariablesIpSetOutput() RuleGroupRuleGroupRuleVariablesIpSetOutput {
	return i.ToRuleGroupRuleGroupRuleVariablesIpSetOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRuleVariablesIpSetArgs) ToRuleGroupRuleGroupRuleVariablesIpSetOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRuleVariablesIpSetOutput)
}

func (i *RuleGroupRuleGroupRuleVariablesIpSetArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRuleVariablesIpSetArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRuleVariablesIpSetOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRuleVariablesIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariablesIpSet)(nil)).Elem()
}

func (o RuleGroupRuleGroupRuleVariablesIpSetOutput) ToRuleGroupRuleGroupRuleVariablesIpSetOutput() RuleGroupRuleGroupRuleVariablesIpSetOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesIpSetOutput) ToRuleGroupRuleGroupRuleVariablesIpSetOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesIpSetOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesIpSetOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRuleVariablesIpSet] {
	return pulumix.Output[RuleGroupRuleGroupRuleVariablesIpSet]{
		OutputState: o.OutputState,
	}
}

// A configuration block that defines a set of IP addresses. See IP Set below for details.
func (o RuleGroupRuleGroupRuleVariablesIpSetOutput) IpSet() pulumix.GPtrOutput[RuleGroupRuleGroupRuleVariablesIpSetIpSet, RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRuleVariablesIpSet](o, func(v RuleGroupRuleGroupRuleVariablesIpSet) RuleGroupRuleGroupRuleVariablesIpSetIpSet { return v.IpSet })
	return pulumix.GPtrOutput[RuleGroupRuleGroupRuleVariablesIpSetIpSet, RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput]{OutputState: value.OutputState}
}

// A unique alphanumeric string to identify the `ipSet`.
func (o RuleGroupRuleGroupRuleVariablesIpSetOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRuleVariablesIpSet](o, func(v RuleGroupRuleGroupRuleVariablesIpSet) string { return v.Key })
}

type RuleGroupRuleGroupRuleVariablesIpSetIpSet struct {
	// Set of IP addresses and address ranges, in CIDR notation.
	Definitions []string `pulumi:"definitions"`
}

type RuleGroupRuleGroupRuleVariablesIpSetIpSetArgs struct {
	// Set of IP addresses and address ranges, in CIDR notation.
	Definitions pulumix.Input[[]string] `pulumi:"definitions"`
}

func (RuleGroupRuleGroupRuleVariablesIpSetIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariablesIpSetIpSet)(nil)).Elem()
}

func (i RuleGroupRuleGroupRuleVariablesIpSetIpSetArgs) ToRuleGroupRuleGroupRuleVariablesIpSetIpSetOutput() RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput {
	return i.ToRuleGroupRuleGroupRuleVariablesIpSetIpSetOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRuleVariablesIpSetIpSetArgs) ToRuleGroupRuleGroupRuleVariablesIpSetIpSetOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput)
}

func (i *RuleGroupRuleGroupRuleVariablesIpSetIpSetArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRuleVariablesIpSetIpSetArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariablesIpSetIpSet)(nil)).Elem()
}

func (o RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput) ToRuleGroupRuleGroupRuleVariablesIpSetIpSetOutput() RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput) ToRuleGroupRuleGroupRuleVariablesIpSetIpSetOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRuleVariablesIpSetIpSet] {
	return pulumix.Output[RuleGroupRuleGroupRuleVariablesIpSetIpSet]{
		OutputState: o.OutputState,
	}
}

// Set of IP addresses and address ranges, in CIDR notation.
func (o RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput) Definitions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleGroupRuleVariablesIpSetIpSet](o, func(v RuleGroupRuleGroupRuleVariablesIpSetIpSet) []string { return v.Definitions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRuleVariablesPortSet struct {
	// An unique alphanumeric string to identify the `portSet`.
	Key string `pulumi:"key"`
	// A configuration block that defines a set of port ranges. See Port Set below for details.
	PortSet RuleGroupRuleGroupRuleVariablesPortSetPortSet `pulumi:"portSet"`
}

type RuleGroupRuleGroupRuleVariablesPortSetArgs struct {
	// An unique alphanumeric string to identify the `portSet`.
	Key pulumix.Input[string] `pulumi:"key"`
	// A configuration block that defines a set of port ranges. See Port Set below for details.
	PortSet pulumix.Input[*RuleGroupRuleGroupRuleVariablesPortSetPortSetArgs] `pulumi:"portSet"`
}

func (RuleGroupRuleGroupRuleVariablesPortSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariablesPortSet)(nil)).Elem()
}

func (i RuleGroupRuleGroupRuleVariablesPortSetArgs) ToRuleGroupRuleGroupRuleVariablesPortSetOutput() RuleGroupRuleGroupRuleVariablesPortSetOutput {
	return i.ToRuleGroupRuleGroupRuleVariablesPortSetOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRuleVariablesPortSetArgs) ToRuleGroupRuleGroupRuleVariablesPortSetOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesPortSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRuleVariablesPortSetOutput)
}

func (i *RuleGroupRuleGroupRuleVariablesPortSetArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRuleVariablesPortSetArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRuleVariablesPortSetOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRuleVariablesPortSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariablesPortSet)(nil)).Elem()
}

func (o RuleGroupRuleGroupRuleVariablesPortSetOutput) ToRuleGroupRuleGroupRuleVariablesPortSetOutput() RuleGroupRuleGroupRuleVariablesPortSetOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesPortSetOutput) ToRuleGroupRuleGroupRuleVariablesPortSetOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesPortSetOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesPortSetOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRuleVariablesPortSet] {
	return pulumix.Output[RuleGroupRuleGroupRuleVariablesPortSet]{
		OutputState: o.OutputState,
	}
}

// An unique alphanumeric string to identify the `portSet`.
func (o RuleGroupRuleGroupRuleVariablesPortSetOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRuleVariablesPortSet](o, func(v RuleGroupRuleGroupRuleVariablesPortSet) string { return v.Key })
}

// A configuration block that defines a set of port ranges. See Port Set below for details.
func (o RuleGroupRuleGroupRuleVariablesPortSetOutput) PortSet() pulumix.GPtrOutput[RuleGroupRuleGroupRuleVariablesPortSetPortSet, RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRuleVariablesPortSet](o, func(v RuleGroupRuleGroupRuleVariablesPortSet) RuleGroupRuleGroupRuleVariablesPortSetPortSet {
		return v.PortSet
	})
	return pulumix.GPtrOutput[RuleGroupRuleGroupRuleVariablesPortSetPortSet, RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRuleVariablesPortSetPortSet struct {
	// Set of port ranges.
	Definitions []string `pulumi:"definitions"`
}

type RuleGroupRuleGroupRuleVariablesPortSetPortSetArgs struct {
	// Set of port ranges.
	Definitions pulumix.Input[[]string] `pulumi:"definitions"`
}

func (RuleGroupRuleGroupRuleVariablesPortSetPortSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariablesPortSetPortSet)(nil)).Elem()
}

func (i RuleGroupRuleGroupRuleVariablesPortSetPortSetArgs) ToRuleGroupRuleGroupRuleVariablesPortSetPortSetOutput() RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput {
	return i.ToRuleGroupRuleGroupRuleVariablesPortSetPortSetOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRuleVariablesPortSetPortSetArgs) ToRuleGroupRuleGroupRuleVariablesPortSetPortSetOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput)
}

func (i *RuleGroupRuleGroupRuleVariablesPortSetPortSetArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRuleVariablesPortSetPortSetArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRuleVariablesPortSetPortSet)(nil)).Elem()
}

func (o RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput) ToRuleGroupRuleGroupRuleVariablesPortSetPortSetOutput() RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput) ToRuleGroupRuleGroupRuleVariablesPortSetPortSetOutputWithContext(ctx context.Context) RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput {
	return o
}

func (o RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRuleVariablesPortSetPortSet] {
	return pulumix.Output[RuleGroupRuleGroupRuleVariablesPortSetPortSet]{
		OutputState: o.OutputState,
	}
}

// Set of port ranges.
func (o RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput) Definitions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleGroupRuleVariablesPortSetPortSet](o, func(v RuleGroupRuleGroupRuleVariablesPortSetPortSet) []string { return v.Definitions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSource struct {
	// A configuration block containing **stateful** inspection criteria for a domain list rule group. See Rules Source List below for details.
	RulesSourceList *RuleGroupRuleGroupRulesSourceRulesSourceList `pulumi:"rulesSourceList"`
	// The fully qualified name of a file in an S3 bucket that contains Suricata compatible intrusion preventions system (IPS) rules or the Suricata rules as a string. These rules contain **stateful** inspection criteria and the action to take for traffic that matches the criteria.
	RulesString *string `pulumi:"rulesString"`
	// Set of configuration blocks containing **stateful** inspection criteria for 5-tuple rules to be used together in a rule group. See Stateful Rule below for details.
	StatefulRules []RuleGroupRuleGroupRulesSourceStatefulRule `pulumi:"statefulRules"`
	// A configuration block containing **stateless** inspection criteria for a stateless rule group. See Stateless Rules and Custom Actions below for details.
	StatelessRulesAndCustomActions *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions `pulumi:"statelessRulesAndCustomActions"`
}

type RuleGroupRuleGroupRulesSourceArgs struct {
	// A configuration block containing **stateful** inspection criteria for a domain list rule group. See Rules Source List below for details.
	RulesSourceList pulumix.Input[*RuleGroupRuleGroupRulesSourceRulesSourceListArgs] `pulumi:"rulesSourceList"`
	// The fully qualified name of a file in an S3 bucket that contains Suricata compatible intrusion preventions system (IPS) rules or the Suricata rules as a string. These rules contain **stateful** inspection criteria and the action to take for traffic that matches the criteria.
	RulesString pulumix.Input[*string] `pulumi:"rulesString"`
	// Set of configuration blocks containing **stateful** inspection criteria for 5-tuple rules to be used together in a rule group. See Stateful Rule below for details.
	StatefulRules pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatefulRuleArgs] `pulumi:"statefulRules"`
	// A configuration block containing **stateless** inspection criteria for a stateless rule group. See Stateless Rules and Custom Actions below for details.
	StatelessRulesAndCustomActions pulumix.Input[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsArgs] `pulumi:"statelessRulesAndCustomActions"`
}

func (RuleGroupRuleGroupRulesSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSource)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceArgs) ToRuleGroupRuleGroupRulesSourceOutput() RuleGroupRuleGroupRulesSourceOutput {
	return i.ToRuleGroupRuleGroupRulesSourceOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceArgs) ToRuleGroupRuleGroupRulesSourceOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceOutput)
}

func (i *RuleGroupRuleGroupRulesSourceArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSource)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceOutput) ToRuleGroupRuleGroupRulesSourceOutput() RuleGroupRuleGroupRulesSourceOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceOutput) ToRuleGroupRuleGroupRulesSourceOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSource] {
	return pulumix.Output[RuleGroupRuleGroupRulesSource]{
		OutputState: o.OutputState,
	}
}

// A configuration block containing **stateful** inspection criteria for a domain list rule group. See Rules Source List below for details.
func (o RuleGroupRuleGroupRulesSourceOutput) RulesSourceList() pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceRulesSourceList, RuleGroupRuleGroupRulesSourceRulesSourceListOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSource](o, func(v RuleGroupRuleGroupRulesSource) *RuleGroupRuleGroupRulesSourceRulesSourceList {
		return v.RulesSourceList
	})
	return pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceRulesSourceList, RuleGroupRuleGroupRulesSourceRulesSourceListOutput]{OutputState: value.OutputState}
}

// The fully qualified name of a file in an S3 bucket that contains Suricata compatible intrusion preventions system (IPS) rules or the Suricata rules as a string. These rules contain **stateful** inspection criteria and the action to take for traffic that matches the criteria.
func (o RuleGroupRuleGroupRulesSourceOutput) RulesString() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSource](o, func(v RuleGroupRuleGroupRulesSource) *string { return v.RulesString })
}

// Set of configuration blocks containing **stateful** inspection criteria for 5-tuple rules to be used together in a rule group. See Stateful Rule below for details.
func (o RuleGroupRuleGroupRulesSourceOutput) StatefulRules() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatefulRule, RuleGroupRuleGroupRulesSourceStatefulRuleOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSource](o, func(v RuleGroupRuleGroupRulesSource) []RuleGroupRuleGroupRulesSourceStatefulRule {
		return v.StatefulRules
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatefulRule, RuleGroupRuleGroupRulesSourceStatefulRuleOutput]{OutputState: value.OutputState}
}

// A configuration block containing **stateless** inspection criteria for a stateless rule group. See Stateless Rules and Custom Actions below for details.
func (o RuleGroupRuleGroupRulesSourceOutput) StatelessRulesAndCustomActions() pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSource](o, func(v RuleGroupRuleGroupRulesSource) *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions {
		return v.StatelessRulesAndCustomActions
	})
	return pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceRulesSourceList struct {
	// String value to specify whether domains in the target list are allowed or denied access. Valid values: `ALLOWLIST`, `DENYLIST`.
	GeneratedRulesType string `pulumi:"generatedRulesType"`
	// Set of types of domain specifications that are provided in the `targets` argument. Valid values: `HTTP_HOST`, `TLS_SNI`.
	TargetTypes []string `pulumi:"targetTypes"`
	// Set of domains that you want to inspect for in your traffic flows.
	Targets []string `pulumi:"targets"`
}

type RuleGroupRuleGroupRulesSourceRulesSourceListArgs struct {
	// String value to specify whether domains in the target list are allowed or denied access. Valid values: `ALLOWLIST`, `DENYLIST`.
	GeneratedRulesType pulumix.Input[string] `pulumi:"generatedRulesType"`
	// Set of types of domain specifications that are provided in the `targets` argument. Valid values: `HTTP_HOST`, `TLS_SNI`.
	TargetTypes pulumix.Input[[]string] `pulumi:"targetTypes"`
	// Set of domains that you want to inspect for in your traffic flows.
	Targets pulumix.Input[[]string] `pulumi:"targets"`
}

func (RuleGroupRuleGroupRulesSourceRulesSourceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceRulesSourceList)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceRulesSourceListArgs) ToRuleGroupRuleGroupRulesSourceRulesSourceListOutput() RuleGroupRuleGroupRulesSourceRulesSourceListOutput {
	return i.ToRuleGroupRuleGroupRulesSourceRulesSourceListOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceRulesSourceListArgs) ToRuleGroupRuleGroupRulesSourceRulesSourceListOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceRulesSourceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceRulesSourceListOutput)
}

func (i *RuleGroupRuleGroupRulesSourceRulesSourceListArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceRulesSourceListArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceRulesSourceListOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceRulesSourceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceRulesSourceList)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceRulesSourceListOutput) ToRuleGroupRuleGroupRulesSourceRulesSourceListOutput() RuleGroupRuleGroupRulesSourceRulesSourceListOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceRulesSourceListOutput) ToRuleGroupRuleGroupRulesSourceRulesSourceListOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceRulesSourceListOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceRulesSourceListOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceRulesSourceList] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceRulesSourceList]{
		OutputState: o.OutputState,
	}
}

// String value to specify whether domains in the target list are allowed or denied access. Valid values: `ALLOWLIST`, `DENYLIST`.
func (o RuleGroupRuleGroupRulesSourceRulesSourceListOutput) GeneratedRulesType() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceRulesSourceList](o, func(v RuleGroupRuleGroupRulesSourceRulesSourceList) string { return v.GeneratedRulesType })
}

// Set of types of domain specifications that are provided in the `targets` argument. Valid values: `HTTP_HOST`, `TLS_SNI`.
func (o RuleGroupRuleGroupRulesSourceRulesSourceListOutput) TargetTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceRulesSourceList](o, func(v RuleGroupRuleGroupRulesSourceRulesSourceList) []string { return v.TargetTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Set of domains that you want to inspect for in your traffic flows.
func (o RuleGroupRuleGroupRulesSourceRulesSourceListOutput) Targets() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceRulesSourceList](o, func(v RuleGroupRuleGroupRulesSourceRulesSourceList) []string { return v.Targets })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceStatefulRule struct {
	// Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: `ALERT`, `DROP`, `PASS`, or `REJECT`.
	Action string `pulumi:"action"`
	// A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See Header below for details.
	Header RuleGroupRuleGroupRulesSourceStatefulRuleHeader `pulumi:"header"`
	// Set of configuration blocks containing additional settings for a stateful rule. See Rule Option below for details.
	RuleOptions []RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption `pulumi:"ruleOptions"`
}

type RuleGroupRuleGroupRulesSourceStatefulRuleArgs struct {
	// Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: `ALERT`, `DROP`, `PASS`, or `REJECT`.
	Action pulumix.Input[string] `pulumi:"action"`
	// A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See Header below for details.
	Header pulumix.Input[*RuleGroupRuleGroupRulesSourceStatefulRuleHeaderArgs] `pulumi:"header"`
	// Set of configuration blocks containing additional settings for a stateful rule. See Rule Option below for details.
	RuleOptions pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionArgs] `pulumi:"ruleOptions"`
}

func (RuleGroupRuleGroupRulesSourceStatefulRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatefulRule)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatefulRuleArgs) ToRuleGroupRuleGroupRulesSourceStatefulRuleOutput() RuleGroupRuleGroupRulesSourceStatefulRuleOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatefulRuleOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatefulRuleArgs) ToRuleGroupRuleGroupRulesSourceStatefulRuleOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatefulRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatefulRuleOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatefulRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatefulRuleArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatefulRuleOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatefulRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatefulRule)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatefulRuleOutput) ToRuleGroupRuleGroupRulesSourceStatefulRuleOutput() RuleGroupRuleGroupRulesSourceStatefulRuleOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatefulRuleOutput) ToRuleGroupRuleGroupRulesSourceStatefulRuleOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatefulRuleOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatefulRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatefulRule] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatefulRule]{
		OutputState: o.OutputState,
	}
}

// Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: `ALERT`, `DROP`, `PASS`, or `REJECT`.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleOutput) Action() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRule](o, func(v RuleGroupRuleGroupRulesSourceStatefulRule) string { return v.Action })
}

// A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See Header below for details.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleOutput) Header() pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatefulRuleHeader, RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRule](o, func(v RuleGroupRuleGroupRulesSourceStatefulRule) RuleGroupRuleGroupRulesSourceStatefulRuleHeader {
		return v.Header
	})
	return pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatefulRuleHeader, RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput]{OutputState: value.OutputState}
}

// Set of configuration blocks containing additional settings for a stateful rule. See Rule Option below for details.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleOutput) RuleOptions() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption, RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRule](o, func(v RuleGroupRuleGroupRulesSourceStatefulRule) []RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption {
		return v.RuleOptions
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption, RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceStatefulRuleHeader struct {
	// The destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify `ANY`.
	Destination string `pulumi:"destination"`
	// The destination port to inspect for. To match with any address, specify `ANY`.
	DestinationPort string `pulumi:"destinationPort"`
	// The direction of traffic flow to inspect. Valid values: `ANY` or `FORWARD`.
	Direction string `pulumi:"direction"`
	// The protocol to inspect. Valid values: `IP`, `TCP`, `UDP`, `ICMP`, `HTTP`, `FTP`, `TLS`, `SMB`, `DNS`, `DCERPC`, `SSH`, `SMTP`, `IMAP`, `MSN`, `KRB5`, `IKEV2`, `TFTP`, `NTP`, `DHCP`.
	Protocol string `pulumi:"protocol"`
	// The source IP address or address range for, in CIDR notation. To match with any address, specify `ANY`.
	Source string `pulumi:"source"`
	// The source port to inspect for. To match with any address, specify `ANY`.
	SourcePort string `pulumi:"sourcePort"`
}

type RuleGroupRuleGroupRulesSourceStatefulRuleHeaderArgs struct {
	// The destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify `ANY`.
	Destination pulumix.Input[string] `pulumi:"destination"`
	// The destination port to inspect for. To match with any address, specify `ANY`.
	DestinationPort pulumix.Input[string] `pulumi:"destinationPort"`
	// The direction of traffic flow to inspect. Valid values: `ANY` or `FORWARD`.
	Direction pulumix.Input[string] `pulumi:"direction"`
	// The protocol to inspect. Valid values: `IP`, `TCP`, `UDP`, `ICMP`, `HTTP`, `FTP`, `TLS`, `SMB`, `DNS`, `DCERPC`, `SSH`, `SMTP`, `IMAP`, `MSN`, `KRB5`, `IKEV2`, `TFTP`, `NTP`, `DHCP`.
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// The source IP address or address range for, in CIDR notation. To match with any address, specify `ANY`.
	Source pulumix.Input[string] `pulumi:"source"`
	// The source port to inspect for. To match with any address, specify `ANY`.
	SourcePort pulumix.Input[string] `pulumi:"sourcePort"`
}

func (RuleGroupRuleGroupRulesSourceStatefulRuleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatefulRuleHeader)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatefulRuleHeaderArgs) ToRuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput() RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatefulRuleHeaderArgs) ToRuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatefulRuleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatefulRuleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatefulRuleHeader)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) ToRuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput() RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) ToRuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatefulRuleHeader] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatefulRuleHeader]{
		OutputState: o.OutputState,
	}
}

// The destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify `ANY`.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) Destination() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRuleHeader](o, func(v RuleGroupRuleGroupRulesSourceStatefulRuleHeader) string { return v.Destination })
}

// The destination port to inspect for. To match with any address, specify `ANY`.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) DestinationPort() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRuleHeader](o, func(v RuleGroupRuleGroupRulesSourceStatefulRuleHeader) string { return v.DestinationPort })
}

// The direction of traffic flow to inspect. Valid values: `ANY` or `FORWARD`.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) Direction() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRuleHeader](o, func(v RuleGroupRuleGroupRulesSourceStatefulRuleHeader) string { return v.Direction })
}

// The protocol to inspect. Valid values: `IP`, `TCP`, `UDP`, `ICMP`, `HTTP`, `FTP`, `TLS`, `SMB`, `DNS`, `DCERPC`, `SSH`, `SMTP`, `IMAP`, `MSN`, `KRB5`, `IKEV2`, `TFTP`, `NTP`, `DHCP`.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRuleHeader](o, func(v RuleGroupRuleGroupRulesSourceStatefulRuleHeader) string { return v.Protocol })
}

// The source IP address or address range for, in CIDR notation. To match with any address, specify `ANY`.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) Source() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRuleHeader](o, func(v RuleGroupRuleGroupRulesSourceStatefulRuleHeader) string { return v.Source })
}

// The source port to inspect for. To match with any address, specify `ANY`.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput) SourcePort() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRuleHeader](o, func(v RuleGroupRuleGroupRulesSourceStatefulRuleHeader) string { return v.SourcePort })
}

type RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption struct {
	// Keyword defined by open source detection systems like Snort or Suricata for stateful rule inspection.
	// See [Snort General Rule Options](http://manual-snort-org.s3-website-us-east-1.amazonaws.com/node31.html) or [Suricata Rule Options](https://suricata.readthedocs.io/en/suricata-5.0.1/rules/intro.html#rule-options) for more details.
	Keyword string `pulumi:"keyword"`
	// Set of strings for additional settings to use in stateful rule inspection.
	Settings []string `pulumi:"settings"`
}

type RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionArgs struct {
	// Keyword defined by open source detection systems like Snort or Suricata for stateful rule inspection.
	// See [Snort General Rule Options](http://manual-snort-org.s3-website-us-east-1.amazonaws.com/node31.html) or [Suricata Rule Options](https://suricata.readthedocs.io/en/suricata-5.0.1/rules/intro.html#rule-options) for more details.
	Keyword pulumix.Input[string] `pulumi:"keyword"`
	// Set of strings for additional settings to use in stateful rule inspection.
	Settings pulumix.Input[[]string] `pulumi:"settings"`
}

func (RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionArgs) ToRuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput() RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionArgs) ToRuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput) ToRuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput() RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput) ToRuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption]{
		OutputState: o.OutputState,
	}
}

// Keyword defined by open source detection systems like Snort or Suricata for stateful rule inspection.
// See [Snort General Rule Options](http://manual-snort-org.s3-website-us-east-1.amazonaws.com/node31.html) or [Suricata Rule Options](https://suricata.readthedocs.io/en/suricata-5.0.1/rules/intro.html#rule-options) for more details.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput) Keyword() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption](o, func(v RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption) string { return v.Keyword })
}

// Set of strings for additional settings to use in stateful rule inspection.
func (o RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput) Settings() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption](o, func(v RuleGroupRuleGroupRulesSourceStatefulRuleRuleOption) []string { return v.Settings })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions struct {
	// Set of configuration blocks containing custom action definitions that are available for use by the set of `stateless rule`. See Custom Action below for details.
	CustomActions []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction `pulumi:"customActions"`
	// Set of configuration blocks containing the stateless rules for use in the stateless rule group. See Stateless Rule below for details.
	StatelessRules []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule `pulumi:"statelessRules"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsArgs struct {
	// Set of configuration blocks containing custom action definitions that are available for use by the set of `stateless rule`. See Custom Action below for details.
	CustomActions pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionArgs] `pulumi:"customActions"`
	// Set of configuration blocks containing the stateless rules for use in the stateless rule group. See Stateless Rule below for details.
	StatelessRules pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleArgs] `pulumi:"statelessRules"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions]{
		OutputState: o.OutputState,
	}
}

// Set of configuration blocks containing custom action definitions that are available for use by the set of `stateless rule`. See Custom Action below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput) CustomActions() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions) []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction {
		return v.CustomActions
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput]{OutputState: value.OutputState}
}

// Set of configuration blocks containing the stateless rules for use in the stateless rule group. See Stateless Rule below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput) StatelessRules() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActions) []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule {
		return v.StatelessRules
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction struct {
	// A configuration block describing the custom action associated with the `actionName`. See Action Definition below for details.
	ActionDefinition RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition `pulumi:"actionDefinition"`
	// A friendly name of the custom action.
	ActionName string `pulumi:"actionName"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionArgs struct {
	// A configuration block describing the custom action associated with the `actionName`. See Action Definition below for details.
	ActionDefinition pulumix.Input[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionArgs] `pulumi:"actionDefinition"`
	// A friendly name of the custom action.
	ActionName pulumix.Input[string] `pulumi:"actionName"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction]{
		OutputState: o.OutputState,
	}
}

// A configuration block describing the custom action associated with the `actionName`. See Action Definition below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput) ActionDefinition() pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition {
		return v.ActionDefinition
	})
	return pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput]{OutputState: value.OutputState}
}

// A friendly name of the custom action.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput) ActionName() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomAction) string {
		return v.ActionName
	})
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition struct {
	// A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.
	PublishMetricAction RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction `pulumi:"publishMetricAction"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionArgs struct {
	// A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.
	PublishMetricAction pulumix.Input[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionArgs] `pulumi:"publishMetricAction"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition]{
		OutputState: o.OutputState,
	}
}

// A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput) PublishMetricAction() pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinition) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction {
		return v.PublishMetricAction
	})
	return pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction struct {
	// Set of configuration blocks containing the dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for details.
	Dimensions []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension `pulumi:"dimensions"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionArgs struct {
	// Set of configuration blocks containing the dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for details.
	Dimensions pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionArgs] `pulumi:"dimensions"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction]{
		OutputState: o.OutputState,
	}
}

// Set of configuration blocks containing the dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput) Dimensions() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricAction) []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension {
		return v.Dimensions
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension struct {
	// The value to use in the custom metric dimension.
	Value string `pulumi:"value"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionArgs struct {
	// The value to use in the custom metric dimension.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension]{
		OutputState: o.OutputState,
	}
}

// The value to use in the custom metric dimension.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimension) string {
		return v.Value
	})
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule struct {
	// A setting that indicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. AWS Network Firewall evaluates the rules in a rule group starting with the lowest priority setting.
	Priority int `pulumi:"priority"`
	// A configuration block defining the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria. See Rule Definition below for details.
	RuleDefinition RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition `pulumi:"ruleDefinition"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleArgs struct {
	// A setting that indicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. AWS Network Firewall evaluates the rules in a rule group starting with the lowest priority setting.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// A configuration block defining the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria. See Rule Definition below for details.
	RuleDefinition pulumix.Input[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionArgs] `pulumi:"ruleDefinition"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule]{
		OutputState: o.OutputState,
	}
}

// A setting that indicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. AWS Network Firewall evaluates the rules in a rule group starting with the lowest priority setting.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule) int {
		return v.Priority
	})
}

// A configuration block defining the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria. See Rule Definition below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput) RuleDefinition() pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRule) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition {
		return v.RuleDefinition
	})
	return pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition struct {
	// Set of actions to take on a packet that matches one of the stateless rule definition's `matchAttributes`. For every rule you must specify 1 standard action, and you can add custom actions. Standard actions include: `aws:pass`, `aws:drop`, `aws:forward_to_sfe`.
	Actions []string `pulumi:"actions"`
	// A configuration block containing criteria for AWS Network Firewall to use to inspect an individual packet in stateless rule inspection. See Match Attributes below for details.
	MatchAttributes RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes `pulumi:"matchAttributes"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionArgs struct {
	// Set of actions to take on a packet that matches one of the stateless rule definition's `matchAttributes`. For every rule you must specify 1 standard action, and you can add custom actions. Standard actions include: `aws:pass`, `aws:drop`, `aws:forward_to_sfe`.
	Actions pulumix.Input[[]string] `pulumi:"actions"`
	// A configuration block containing criteria for AWS Network Firewall to use to inspect an individual packet in stateless rule inspection. See Match Attributes below for details.
	MatchAttributes pulumix.Input[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesArgs] `pulumi:"matchAttributes"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition]{
		OutputState: o.OutputState,
	}
}

// Set of actions to take on a packet that matches one of the stateless rule definition's `matchAttributes`. For every rule you must specify 1 standard action, and you can add custom actions. Standard actions include: `aws:pass`, `aws:drop`, `aws:forward_to_sfe`.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput) Actions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition) []string {
		return v.Actions
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A configuration block containing criteria for AWS Network Firewall to use to inspect an individual packet in stateless rule inspection. See Match Attributes below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput) MatchAttributes() pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinition) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes {
		return v.MatchAttributes
	})
	return pulumix.GPtrOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes struct {
	// Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.
	DestinationPorts []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort `pulumi:"destinationPorts"`
	// Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.
	Destinations []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination `pulumi:"destinations"`
	// Set of protocols to inspect for, specified using the protocol's assigned internet protocol number (IANA). If not specified, this matches with any protocol.
	Protocols []int `pulumi:"protocols"`
	// Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.
	SourcePorts []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort `pulumi:"sourcePorts"`
	// Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.
	Sources []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource `pulumi:"sources"`
	// Set of configuration blocks containing the TCP flags and masks to inspect for. If not specified, this matches with any settings.
	TcpFlags []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag `pulumi:"tcpFlags"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesArgs struct {
	// Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.
	DestinationPorts pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortArgs] `pulumi:"destinationPorts"`
	// Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.
	Destinations pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationArgs] `pulumi:"destinations"`
	// Set of protocols to inspect for, specified using the protocol's assigned internet protocol number (IANA). If not specified, this matches with any protocol.
	Protocols pulumix.Input[[]int] `pulumi:"protocols"`
	// Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.
	SourcePorts pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortArgs] `pulumi:"sourcePorts"`
	// Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.
	Sources pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceArgs] `pulumi:"sources"`
	// Set of configuration blocks containing the TCP flags and masks to inspect for. If not specified, this matches with any settings.
	TcpFlags pulumix.Input[[]*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagArgs] `pulumi:"tcpFlags"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes]{
		OutputState: o.OutputState,
	}
}

// Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) DestinationPorts() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes) []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort {
		return v.DestinationPorts
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput]{OutputState: value.OutputState}
}

// Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) Destinations() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes) []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination {
		return v.Destinations
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput]{OutputState: value.OutputState}
}

// Set of protocols to inspect for, specified using the protocol's assigned internet protocol number (IANA). If not specified, this matches with any protocol.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) Protocols() pulumix.ArrayOutput[int] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes) []int {
		return v.Protocols
	})
	return pulumix.ArrayOutput[int]{OutputState: value.OutputState}
}

// Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) SourcePorts() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes) []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort {
		return v.SourcePorts
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput]{OutputState: value.OutputState}
}

// Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) Sources() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes) []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource {
		return v.Sources
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput]{OutputState: value.OutputState}
}

// Set of configuration blocks containing the TCP flags and masks to inspect for. If not specified, this matches with any settings.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput) TcpFlags() pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributes) []RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag {
		return v.TcpFlags
	})
	return pulumix.GArrayOutput[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag, RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination struct {
	// An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
	AddressDefinition string `pulumi:"addressDefinition"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationArgs struct {
	// An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
	AddressDefinition pulumix.Input[string] `pulumi:"addressDefinition"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination]{
		OutputState: o.OutputState,
	}
}

// An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput) AddressDefinition() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestination) string {
		return v.AddressDefinition
	})
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort struct {
	// The lower limit of the port range. This must be less than or equal to the `toPort`.
	FromPort int `pulumi:"fromPort"`
	// The upper limit of the port range. This must be greater than or equal to the `fromPort`.
	ToPort *int `pulumi:"toPort"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortArgs struct {
	// The lower limit of the port range. This must be less than or equal to the `toPort`.
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// The upper limit of the port range. This must be greater than or equal to the `fromPort`.
	ToPort pulumix.Input[*int] `pulumi:"toPort"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort]{
		OutputState: o.OutputState,
	}
}

// The lower limit of the port range. This must be less than or equal to the `toPort`.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort) int {
		return v.FromPort
	})
}

// The upper limit of the port range. This must be greater than or equal to the `fromPort`.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput) ToPort() pulumix.Output[*int] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPort) *int {
		return v.ToPort
	})
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource struct {
	// An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
	AddressDefinition string `pulumi:"addressDefinition"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceArgs struct {
	// An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
	AddressDefinition pulumix.Input[string] `pulumi:"addressDefinition"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource]{
		OutputState: o.OutputState,
	}
}

// An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput) AddressDefinition() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSource) string {
		return v.AddressDefinition
	})
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort struct {
	// The lower limit of the port range. This must be less than or equal to the `toPort`.
	FromPort int `pulumi:"fromPort"`
	// The upper limit of the port range. This must be greater than or equal to the `fromPort`.
	ToPort *int `pulumi:"toPort"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortArgs struct {
	// The lower limit of the port range. This must be less than or equal to the `toPort`.
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// The upper limit of the port range. This must be greater than or equal to the `fromPort`.
	ToPort pulumix.Input[*int] `pulumi:"toPort"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort]{
		OutputState: o.OutputState,
	}
}

// The lower limit of the port range. This must be less than or equal to the `toPort`.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort) int {
		return v.FromPort
	})
}

// The upper limit of the port range. This must be greater than or equal to the `fromPort`.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput) ToPort() pulumix.Output[*int] {
	return pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePort) *int {
		return v.ToPort
	})
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag struct {
	// Set of flags to look for in a packet. This setting can only specify values that are also specified in `masks`.
	// Valid values: `FIN`, `SYN`, `RST`, `PSH`, `ACK`, `URG`, `ECE`, `CWR`.
	Flags []string `pulumi:"flags"`
	// Set of flags to consider in the inspection. To inspect all flags, leave this empty.
	// Valid values: `FIN`, `SYN`, `RST`, `PSH`, `ACK`, `URG`, `ECE`, `CWR`.
	Masks []string `pulumi:"masks"`
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagArgs struct {
	// Set of flags to look for in a packet. This setting can only specify values that are also specified in `masks`.
	// Valid values: `FIN`, `SYN`, `RST`, `PSH`, `ACK`, `URG`, `ECE`, `CWR`.
	Flags pulumix.Input[[]string] `pulumi:"flags"`
	// Set of flags to consider in the inspection. To inspect all flags, leave this empty.
	// Valid values: `FIN`, `SYN`, `RST`, `PSH`, `ACK`, `URG`, `ECE`, `CWR`.
	Masks pulumix.Input[[]string] `pulumi:"masks"`
}

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag)(nil)).Elem()
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput {
	return i.ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagArgs) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput)
}

func (i *RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag)(nil)).Elem()
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput() RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput) ToRuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutputWithContext(ctx context.Context) RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput {
	return o
}

func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag] {
	return pulumix.Output[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag]{
		OutputState: o.OutputState,
	}
}

// Set of flags to look for in a packet. This setting can only specify values that are also specified in `masks`.
// Valid values: `FIN`, `SYN`, `RST`, `PSH`, `ACK`, `URG`, `ECE`, `CWR`.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput) Flags() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag) []string {
		return v.Flags
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Set of flags to consider in the inspection. To inspect all flags, leave this empty.
// Valid values: `FIN`, `SYN`, `RST`, `PSH`, `ACK`, `URG`, `ECE`, `CWR`.
func (o RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput) Masks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag](o, func(v RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlag) []string {
		return v.Masks
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleGroupStatefulRuleOptions struct {
	// Indicates how to manage the order of the rule evaluation for the rule group. Default value: `DEFAULT_ACTION_ORDER`. Valid values: `DEFAULT_ACTION_ORDER`, `STRICT_ORDER`.
	RuleOrder string `pulumi:"ruleOrder"`
}

type RuleGroupRuleGroupStatefulRuleOptionsArgs struct {
	// Indicates how to manage the order of the rule evaluation for the rule group. Default value: `DEFAULT_ACTION_ORDER`. Valid values: `DEFAULT_ACTION_ORDER`, `STRICT_ORDER`.
	RuleOrder pulumix.Input[string] `pulumi:"ruleOrder"`
}

func (RuleGroupRuleGroupStatefulRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupStatefulRuleOptions)(nil)).Elem()
}

func (i RuleGroupRuleGroupStatefulRuleOptionsArgs) ToRuleGroupRuleGroupStatefulRuleOptionsOutput() RuleGroupRuleGroupStatefulRuleOptionsOutput {
	return i.ToRuleGroupRuleGroupStatefulRuleOptionsOutputWithContext(context.Background())
}

func (i RuleGroupRuleGroupStatefulRuleOptionsArgs) ToRuleGroupRuleGroupStatefulRuleOptionsOutputWithContext(ctx context.Context) RuleGroupRuleGroupStatefulRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleGroupStatefulRuleOptionsOutput)
}

func (i *RuleGroupRuleGroupStatefulRuleOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleGroupStatefulRuleOptionsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleGroupStatefulRuleOptionsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleGroupStatefulRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleGroupStatefulRuleOptions)(nil)).Elem()
}

func (o RuleGroupRuleGroupStatefulRuleOptionsOutput) ToRuleGroupRuleGroupStatefulRuleOptionsOutput() RuleGroupRuleGroupStatefulRuleOptionsOutput {
	return o
}

func (o RuleGroupRuleGroupStatefulRuleOptionsOutput) ToRuleGroupRuleGroupStatefulRuleOptionsOutputWithContext(ctx context.Context) RuleGroupRuleGroupStatefulRuleOptionsOutput {
	return o
}

func (o RuleGroupRuleGroupStatefulRuleOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleGroupStatefulRuleOptions] {
	return pulumix.Output[RuleGroupRuleGroupStatefulRuleOptions]{
		OutputState: o.OutputState,
	}
}

// Indicates how to manage the order of the rule evaluation for the rule group. Default value: `DEFAULT_ACTION_ORDER`. Valid values: `DEFAULT_ACTION_ORDER`, `STRICT_ORDER`.
func (o RuleGroupRuleGroupStatefulRuleOptionsOutput) RuleOrder() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleGroupStatefulRuleOptions](o, func(v RuleGroupRuleGroupStatefulRuleOptions) string { return v.RuleOrder })
}

type GetFirewallEncryptionConfiguration struct {
	// The ID of the AWS Key Management Service (AWS KMS) customer managed key.
	KeyId string `pulumi:"keyId"`
	// The type of the AWS Key Management Service (AWS KMS) key use by the firewall.
	Type string `pulumi:"type"`
}

type GetFirewallEncryptionConfigurationArgs struct {
	// The ID of the AWS Key Management Service (AWS KMS) customer managed key.
	KeyId pulumix.Input[string] `pulumi:"keyId"`
	// The type of the AWS Key Management Service (AWS KMS) key use by the firewall.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetFirewallEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallEncryptionConfiguration)(nil)).Elem()
}

func (i GetFirewallEncryptionConfigurationArgs) ToGetFirewallEncryptionConfigurationOutput() GetFirewallEncryptionConfigurationOutput {
	return i.ToGetFirewallEncryptionConfigurationOutputWithContext(context.Background())
}

func (i GetFirewallEncryptionConfigurationArgs) ToGetFirewallEncryptionConfigurationOutputWithContext(ctx context.Context) GetFirewallEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallEncryptionConfigurationOutput)
}

func (i *GetFirewallEncryptionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallEncryptionConfigurationArgs] {
	return pulumix.Val(i)
}

type GetFirewallEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (GetFirewallEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallEncryptionConfiguration)(nil)).Elem()
}

func (o GetFirewallEncryptionConfigurationOutput) ToGetFirewallEncryptionConfigurationOutput() GetFirewallEncryptionConfigurationOutput {
	return o
}

func (o GetFirewallEncryptionConfigurationOutput) ToGetFirewallEncryptionConfigurationOutputWithContext(ctx context.Context) GetFirewallEncryptionConfigurationOutput {
	return o
}

func (o GetFirewallEncryptionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallEncryptionConfiguration] {
	return pulumix.Output[GetFirewallEncryptionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ID of the AWS Key Management Service (AWS KMS) customer managed key.
func (o GetFirewallEncryptionConfigurationOutput) KeyId() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallEncryptionConfiguration](o, func(v GetFirewallEncryptionConfiguration) string { return v.KeyId })
}

// The type of the AWS Key Management Service (AWS KMS) key use by the firewall.
func (o GetFirewallEncryptionConfigurationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallEncryptionConfiguration](o, func(v GetFirewallEncryptionConfiguration) string { return v.Type })
}

type GetFirewallFirewallStatus struct {
	// Aggregated count of all resources used by reference sets in a firewall.
	CapacityUsageSummaries []GetFirewallFirewallStatusCapacityUsageSummary `pulumi:"capacityUsageSummaries"`
	// Summary of sync states for all availability zones in which the firewall is configured.
	ConfigurationSyncStateSummary string `pulumi:"configurationSyncStateSummary"`
	Status                        string `pulumi:"status"`
	// Set of subnets configured for use by the firewall.
	SyncStates []GetFirewallFirewallStatusSyncState `pulumi:"syncStates"`
}

type GetFirewallFirewallStatusArgs struct {
	// Aggregated count of all resources used by reference sets in a firewall.
	CapacityUsageSummaries pulumix.Input[[]*GetFirewallFirewallStatusCapacityUsageSummaryArgs] `pulumi:"capacityUsageSummaries"`
	// Summary of sync states for all availability zones in which the firewall is configured.
	ConfigurationSyncStateSummary pulumix.Input[string] `pulumi:"configurationSyncStateSummary"`
	Status                        pulumix.Input[string] `pulumi:"status"`
	// Set of subnets configured for use by the firewall.
	SyncStates pulumix.Input[[]*GetFirewallFirewallStatusSyncStateArgs] `pulumi:"syncStates"`
}

func (GetFirewallFirewallStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatus)(nil)).Elem()
}

func (i GetFirewallFirewallStatusArgs) ToGetFirewallFirewallStatusOutput() GetFirewallFirewallStatusOutput {
	return i.ToGetFirewallFirewallStatusOutputWithContext(context.Background())
}

func (i GetFirewallFirewallStatusArgs) ToGetFirewallFirewallStatusOutputWithContext(ctx context.Context) GetFirewallFirewallStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallFirewallStatusOutput)
}

func (i *GetFirewallFirewallStatusArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallFirewallStatusArgs] {
	return pulumix.Val(i)
}

type GetFirewallFirewallStatusOutput struct{ *pulumi.OutputState }

func (GetFirewallFirewallStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatus)(nil)).Elem()
}

func (o GetFirewallFirewallStatusOutput) ToGetFirewallFirewallStatusOutput() GetFirewallFirewallStatusOutput {
	return o
}

func (o GetFirewallFirewallStatusOutput) ToGetFirewallFirewallStatusOutputWithContext(ctx context.Context) GetFirewallFirewallStatusOutput {
	return o
}

func (o GetFirewallFirewallStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallFirewallStatus] {
	return pulumix.Output[GetFirewallFirewallStatus]{
		OutputState: o.OutputState,
	}
}

// Aggregated count of all resources used by reference sets in a firewall.
func (o GetFirewallFirewallStatusOutput) CapacityUsageSummaries() pulumix.GArrayOutput[GetFirewallFirewallStatusCapacityUsageSummary, GetFirewallFirewallStatusCapacityUsageSummaryOutput] {
	value := pulumix.Apply[GetFirewallFirewallStatus](o, func(v GetFirewallFirewallStatus) []GetFirewallFirewallStatusCapacityUsageSummary {
		return v.CapacityUsageSummaries
	})
	return pulumix.GArrayOutput[GetFirewallFirewallStatusCapacityUsageSummary, GetFirewallFirewallStatusCapacityUsageSummaryOutput]{OutputState: value.OutputState}
}

// Summary of sync states for all availability zones in which the firewall is configured.
func (o GetFirewallFirewallStatusOutput) ConfigurationSyncStateSummary() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallFirewallStatus](o, func(v GetFirewallFirewallStatus) string { return v.ConfigurationSyncStateSummary })
}

func (o GetFirewallFirewallStatusOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallFirewallStatus](o, func(v GetFirewallFirewallStatus) string { return v.Status })
}

// Set of subnets configured for use by the firewall.
func (o GetFirewallFirewallStatusOutput) SyncStates() pulumix.GArrayOutput[GetFirewallFirewallStatusSyncState, GetFirewallFirewallStatusSyncStateOutput] {
	value := pulumix.Apply[GetFirewallFirewallStatus](o, func(v GetFirewallFirewallStatus) []GetFirewallFirewallStatusSyncState { return v.SyncStates })
	return pulumix.GArrayOutput[GetFirewallFirewallStatusSyncState, GetFirewallFirewallStatusSyncStateOutput]{OutputState: value.OutputState}
}

type GetFirewallFirewallStatusCapacityUsageSummary struct {
	// Capacity usage of CIDR blocks used by IP set references in a firewall.
	Cidrs []GetFirewallFirewallStatusCapacityUsageSummaryCidr `pulumi:"cidrs"`
}

type GetFirewallFirewallStatusCapacityUsageSummaryArgs struct {
	// Capacity usage of CIDR blocks used by IP set references in a firewall.
	Cidrs pulumix.Input[[]*GetFirewallFirewallStatusCapacityUsageSummaryCidrArgs] `pulumi:"cidrs"`
}

func (GetFirewallFirewallStatusCapacityUsageSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusCapacityUsageSummary)(nil)).Elem()
}

func (i GetFirewallFirewallStatusCapacityUsageSummaryArgs) ToGetFirewallFirewallStatusCapacityUsageSummaryOutput() GetFirewallFirewallStatusCapacityUsageSummaryOutput {
	return i.ToGetFirewallFirewallStatusCapacityUsageSummaryOutputWithContext(context.Background())
}

func (i GetFirewallFirewallStatusCapacityUsageSummaryArgs) ToGetFirewallFirewallStatusCapacityUsageSummaryOutputWithContext(ctx context.Context) GetFirewallFirewallStatusCapacityUsageSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallFirewallStatusCapacityUsageSummaryOutput)
}

func (i *GetFirewallFirewallStatusCapacityUsageSummaryArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallFirewallStatusCapacityUsageSummaryArgs] {
	return pulumix.Val(i)
}

type GetFirewallFirewallStatusCapacityUsageSummaryOutput struct{ *pulumi.OutputState }

func (GetFirewallFirewallStatusCapacityUsageSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusCapacityUsageSummary)(nil)).Elem()
}

func (o GetFirewallFirewallStatusCapacityUsageSummaryOutput) ToGetFirewallFirewallStatusCapacityUsageSummaryOutput() GetFirewallFirewallStatusCapacityUsageSummaryOutput {
	return o
}

func (o GetFirewallFirewallStatusCapacityUsageSummaryOutput) ToGetFirewallFirewallStatusCapacityUsageSummaryOutputWithContext(ctx context.Context) GetFirewallFirewallStatusCapacityUsageSummaryOutput {
	return o
}

func (o GetFirewallFirewallStatusCapacityUsageSummaryOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallFirewallStatusCapacityUsageSummary] {
	return pulumix.Output[GetFirewallFirewallStatusCapacityUsageSummary]{
		OutputState: o.OutputState,
	}
}

// Capacity usage of CIDR blocks used by IP set references in a firewall.
func (o GetFirewallFirewallStatusCapacityUsageSummaryOutput) Cidrs() pulumix.GArrayOutput[GetFirewallFirewallStatusCapacityUsageSummaryCidr, GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput] {
	value := pulumix.Apply[GetFirewallFirewallStatusCapacityUsageSummary](o, func(v GetFirewallFirewallStatusCapacityUsageSummary) []GetFirewallFirewallStatusCapacityUsageSummaryCidr {
		return v.Cidrs
	})
	return pulumix.GArrayOutput[GetFirewallFirewallStatusCapacityUsageSummaryCidr, GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput]{OutputState: value.OutputState}
}

type GetFirewallFirewallStatusCapacityUsageSummaryCidr struct {
	// Available number of CIDR blocks available for use by the IP set references in a firewall.
	AvailableCidrCount int `pulumi:"availableCidrCount"`
	// The list of IP set references used by a firewall.
	IpSetReferences []GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference `pulumi:"ipSetReferences"`
	// Number of CIDR blocks used by the IP set references in a firewall.
	UtilizedCidrCount int `pulumi:"utilizedCidrCount"`
}

type GetFirewallFirewallStatusCapacityUsageSummaryCidrArgs struct {
	// Available number of CIDR blocks available for use by the IP set references in a firewall.
	AvailableCidrCount pulumix.Input[int] `pulumi:"availableCidrCount"`
	// The list of IP set references used by a firewall.
	IpSetReferences pulumix.Input[[]*GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceArgs] `pulumi:"ipSetReferences"`
	// Number of CIDR blocks used by the IP set references in a firewall.
	UtilizedCidrCount pulumix.Input[int] `pulumi:"utilizedCidrCount"`
}

func (GetFirewallFirewallStatusCapacityUsageSummaryCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusCapacityUsageSummaryCidr)(nil)).Elem()
}

func (i GetFirewallFirewallStatusCapacityUsageSummaryCidrArgs) ToGetFirewallFirewallStatusCapacityUsageSummaryCidrOutput() GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput {
	return i.ToGetFirewallFirewallStatusCapacityUsageSummaryCidrOutputWithContext(context.Background())
}

func (i GetFirewallFirewallStatusCapacityUsageSummaryCidrArgs) ToGetFirewallFirewallStatusCapacityUsageSummaryCidrOutputWithContext(ctx context.Context) GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput)
}

func (i *GetFirewallFirewallStatusCapacityUsageSummaryCidrArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallFirewallStatusCapacityUsageSummaryCidrArgs] {
	return pulumix.Val(i)
}

type GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput struct{ *pulumi.OutputState }

func (GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusCapacityUsageSummaryCidr)(nil)).Elem()
}

func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput) ToGetFirewallFirewallStatusCapacityUsageSummaryCidrOutput() GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput {
	return o
}

func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput) ToGetFirewallFirewallStatusCapacityUsageSummaryCidrOutputWithContext(ctx context.Context) GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput {
	return o
}

func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallFirewallStatusCapacityUsageSummaryCidr] {
	return pulumix.Output[GetFirewallFirewallStatusCapacityUsageSummaryCidr]{
		OutputState: o.OutputState,
	}
}

// Available number of CIDR blocks available for use by the IP set references in a firewall.
func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput) AvailableCidrCount() pulumix.Output[int] {
	return pulumix.Apply[GetFirewallFirewallStatusCapacityUsageSummaryCidr](o, func(v GetFirewallFirewallStatusCapacityUsageSummaryCidr) int { return v.AvailableCidrCount })
}

// The list of IP set references used by a firewall.
func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput) IpSetReferences() pulumix.GArrayOutput[GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference, GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput] {
	value := pulumix.Apply[GetFirewallFirewallStatusCapacityUsageSummaryCidr](o, func(v GetFirewallFirewallStatusCapacityUsageSummaryCidr) []GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference {
		return v.IpSetReferences
	})
	return pulumix.GArrayOutput[GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference, GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput]{OutputState: value.OutputState}
}

// Number of CIDR blocks used by the IP set references in a firewall.
func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput) UtilizedCidrCount() pulumix.Output[int] {
	return pulumix.Apply[GetFirewallFirewallStatusCapacityUsageSummaryCidr](o, func(v GetFirewallFirewallStatusCapacityUsageSummaryCidr) int { return v.UtilizedCidrCount })
}

type GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference struct {
	// Total number of CIDR blocks used by the IP set references in a firewall.
	ResolvedCidrCount int `pulumi:"resolvedCidrCount"`
}

type GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceArgs struct {
	// Total number of CIDR blocks used by the IP set references in a firewall.
	ResolvedCidrCount pulumix.Input[int] `pulumi:"resolvedCidrCount"`
}

func (GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference)(nil)).Elem()
}

func (i GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceArgs) ToGetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput() GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput {
	return i.ToGetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutputWithContext(context.Background())
}

func (i GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceArgs) ToGetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutputWithContext(ctx context.Context) GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput)
}

func (i *GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceArgs] {
	return pulumix.Val(i)
}

type GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput struct{ *pulumi.OutputState }

func (GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference)(nil)).Elem()
}

func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput) ToGetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput() GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput {
	return o
}

func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput) ToGetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutputWithContext(ctx context.Context) GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput {
	return o
}

func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference] {
	return pulumix.Output[GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference]{
		OutputState: o.OutputState,
	}
}

// Total number of CIDR blocks used by the IP set references in a firewall.
func (o GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput) ResolvedCidrCount() pulumix.Output[int] {
	return pulumix.Apply[GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference](o, func(v GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReference) int {
		return v.ResolvedCidrCount
	})
}

type GetFirewallFirewallStatusSyncState struct {
	// Nested list describing the attachment status of the firewall's association with a single VPC subnet.
	Attachments []GetFirewallFirewallStatusSyncStateAttachment `pulumi:"attachments"`
	// The Availability Zone where the subnet is configured.
	AvailabilityZone string `pulumi:"availabilityZone"`
}

type GetFirewallFirewallStatusSyncStateArgs struct {
	// Nested list describing the attachment status of the firewall's association with a single VPC subnet.
	Attachments pulumix.Input[[]*GetFirewallFirewallStatusSyncStateAttachmentArgs] `pulumi:"attachments"`
	// The Availability Zone where the subnet is configured.
	AvailabilityZone pulumix.Input[string] `pulumi:"availabilityZone"`
}

func (GetFirewallFirewallStatusSyncStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusSyncState)(nil)).Elem()
}

func (i GetFirewallFirewallStatusSyncStateArgs) ToGetFirewallFirewallStatusSyncStateOutput() GetFirewallFirewallStatusSyncStateOutput {
	return i.ToGetFirewallFirewallStatusSyncStateOutputWithContext(context.Background())
}

func (i GetFirewallFirewallStatusSyncStateArgs) ToGetFirewallFirewallStatusSyncStateOutputWithContext(ctx context.Context) GetFirewallFirewallStatusSyncStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallFirewallStatusSyncStateOutput)
}

func (i *GetFirewallFirewallStatusSyncStateArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallFirewallStatusSyncStateArgs] {
	return pulumix.Val(i)
}

type GetFirewallFirewallStatusSyncStateOutput struct{ *pulumi.OutputState }

func (GetFirewallFirewallStatusSyncStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusSyncState)(nil)).Elem()
}

func (o GetFirewallFirewallStatusSyncStateOutput) ToGetFirewallFirewallStatusSyncStateOutput() GetFirewallFirewallStatusSyncStateOutput {
	return o
}

func (o GetFirewallFirewallStatusSyncStateOutput) ToGetFirewallFirewallStatusSyncStateOutputWithContext(ctx context.Context) GetFirewallFirewallStatusSyncStateOutput {
	return o
}

func (o GetFirewallFirewallStatusSyncStateOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallFirewallStatusSyncState] {
	return pulumix.Output[GetFirewallFirewallStatusSyncState]{
		OutputState: o.OutputState,
	}
}

// Nested list describing the attachment status of the firewall's association with a single VPC subnet.
func (o GetFirewallFirewallStatusSyncStateOutput) Attachments() pulumix.GArrayOutput[GetFirewallFirewallStatusSyncStateAttachment, GetFirewallFirewallStatusSyncStateAttachmentOutput] {
	value := pulumix.Apply[GetFirewallFirewallStatusSyncState](o, func(v GetFirewallFirewallStatusSyncState) []GetFirewallFirewallStatusSyncStateAttachment {
		return v.Attachments
	})
	return pulumix.GArrayOutput[GetFirewallFirewallStatusSyncStateAttachment, GetFirewallFirewallStatusSyncStateAttachmentOutput]{OutputState: value.OutputState}
}

// The Availability Zone where the subnet is configured.
func (o GetFirewallFirewallStatusSyncStateOutput) AvailabilityZone() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallFirewallStatusSyncState](o, func(v GetFirewallFirewallStatusSyncState) string { return v.AvailabilityZone })
}

type GetFirewallFirewallStatusSyncStateAttachment struct {
	// The identifier of the firewall endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
	EndpointId string `pulumi:"endpointId"`
	Status     string `pulumi:"status"`
	// The unique identifier for the subnet.
	SubnetId string `pulumi:"subnetId"`
}

type GetFirewallFirewallStatusSyncStateAttachmentArgs struct {
	// The identifier of the firewall endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
	EndpointId pulumix.Input[string] `pulumi:"endpointId"`
	Status     pulumix.Input[string] `pulumi:"status"`
	// The unique identifier for the subnet.
	SubnetId pulumix.Input[string] `pulumi:"subnetId"`
}

func (GetFirewallFirewallStatusSyncStateAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusSyncStateAttachment)(nil)).Elem()
}

func (i GetFirewallFirewallStatusSyncStateAttachmentArgs) ToGetFirewallFirewallStatusSyncStateAttachmentOutput() GetFirewallFirewallStatusSyncStateAttachmentOutput {
	return i.ToGetFirewallFirewallStatusSyncStateAttachmentOutputWithContext(context.Background())
}

func (i GetFirewallFirewallStatusSyncStateAttachmentArgs) ToGetFirewallFirewallStatusSyncStateAttachmentOutputWithContext(ctx context.Context) GetFirewallFirewallStatusSyncStateAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallFirewallStatusSyncStateAttachmentOutput)
}

func (i *GetFirewallFirewallStatusSyncStateAttachmentArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallFirewallStatusSyncStateAttachmentArgs] {
	return pulumix.Val(i)
}

type GetFirewallFirewallStatusSyncStateAttachmentOutput struct{ *pulumi.OutputState }

func (GetFirewallFirewallStatusSyncStateAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallFirewallStatusSyncStateAttachment)(nil)).Elem()
}

func (o GetFirewallFirewallStatusSyncStateAttachmentOutput) ToGetFirewallFirewallStatusSyncStateAttachmentOutput() GetFirewallFirewallStatusSyncStateAttachmentOutput {
	return o
}

func (o GetFirewallFirewallStatusSyncStateAttachmentOutput) ToGetFirewallFirewallStatusSyncStateAttachmentOutputWithContext(ctx context.Context) GetFirewallFirewallStatusSyncStateAttachmentOutput {
	return o
}

func (o GetFirewallFirewallStatusSyncStateAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallFirewallStatusSyncStateAttachment] {
	return pulumix.Output[GetFirewallFirewallStatusSyncStateAttachment]{
		OutputState: o.OutputState,
	}
}

// The identifier of the firewall endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
func (o GetFirewallFirewallStatusSyncStateAttachmentOutput) EndpointId() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallFirewallStatusSyncStateAttachment](o, func(v GetFirewallFirewallStatusSyncStateAttachment) string { return v.EndpointId })
}

func (o GetFirewallFirewallStatusSyncStateAttachmentOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallFirewallStatusSyncStateAttachment](o, func(v GetFirewallFirewallStatusSyncStateAttachment) string { return v.Status })
}

// The unique identifier for the subnet.
func (o GetFirewallFirewallStatusSyncStateAttachmentOutput) SubnetId() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallFirewallStatusSyncStateAttachment](o, func(v GetFirewallFirewallStatusSyncStateAttachment) string { return v.SubnetId })
}

type GetFirewallPolicyFirewallPolicy struct {
	StatefulDefaultActions          []string                                                     `pulumi:"statefulDefaultActions"`
	StatefulEngineOptions           []GetFirewallPolicyFirewallPolicyStatefulEngineOption        `pulumi:"statefulEngineOptions"`
	StatefulRuleGroupReferences     []GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference  `pulumi:"statefulRuleGroupReferences"`
	StatelessCustomActions          []GetFirewallPolicyFirewallPolicyStatelessCustomAction       `pulumi:"statelessCustomActions"`
	StatelessDefaultActions         []string                                                     `pulumi:"statelessDefaultActions"`
	StatelessFragmentDefaultActions []string                                                     `pulumi:"statelessFragmentDefaultActions"`
	StatelessRuleGroupReferences    []GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference `pulumi:"statelessRuleGroupReferences"`
}

type GetFirewallPolicyFirewallPolicyArgs struct {
	StatefulDefaultActions          pulumix.Input[[]string]                                                          `pulumi:"statefulDefaultActions"`
	StatefulEngineOptions           pulumix.Input[[]*GetFirewallPolicyFirewallPolicyStatefulEngineOptionArgs]        `pulumi:"statefulEngineOptions"`
	StatefulRuleGroupReferences     pulumix.Input[[]*GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs]  `pulumi:"statefulRuleGroupReferences"`
	StatelessCustomActions          pulumix.Input[[]*GetFirewallPolicyFirewallPolicyStatelessCustomActionArgs]       `pulumi:"statelessCustomActions"`
	StatelessDefaultActions         pulumix.Input[[]string]                                                          `pulumi:"statelessDefaultActions"`
	StatelessFragmentDefaultActions pulumix.Input[[]string]                                                          `pulumi:"statelessFragmentDefaultActions"`
	StatelessRuleGroupReferences    pulumix.Input[[]*GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs] `pulumi:"statelessRuleGroupReferences"`
}

func (GetFirewallPolicyFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicy)(nil)).Elem()
}

func (i GetFirewallPolicyFirewallPolicyArgs) ToGetFirewallPolicyFirewallPolicyOutput() GetFirewallPolicyFirewallPolicyOutput {
	return i.ToGetFirewallPolicyFirewallPolicyOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFirewallPolicyArgs) ToGetFirewallPolicyFirewallPolicyOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFirewallPolicyOutput)
}

func (i *GetFirewallPolicyFirewallPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallPolicyFirewallPolicyArgs] {
	return pulumix.Val(i)
}

type GetFirewallPolicyFirewallPolicyOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicy)(nil)).Elem()
}

func (o GetFirewallPolicyFirewallPolicyOutput) ToGetFirewallPolicyFirewallPolicyOutput() GetFirewallPolicyFirewallPolicyOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyOutput) ToGetFirewallPolicyFirewallPolicyOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallPolicyFirewallPolicy] {
	return pulumix.Output[GetFirewallPolicyFirewallPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallPolicyFirewallPolicyOutput) StatefulDefaultActions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicy](o, func(v GetFirewallPolicyFirewallPolicy) []string { return v.StatefulDefaultActions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetFirewallPolicyFirewallPolicyOutput) StatefulEngineOptions() pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatefulEngineOption, GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicy](o, func(v GetFirewallPolicyFirewallPolicy) []GetFirewallPolicyFirewallPolicyStatefulEngineOption {
		return v.StatefulEngineOptions
	})
	return pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatefulEngineOption, GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput]{OutputState: value.OutputState}
}

func (o GetFirewallPolicyFirewallPolicyOutput) StatefulRuleGroupReferences() pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference, GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicy](o, func(v GetFirewallPolicyFirewallPolicy) []GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference {
		return v.StatefulRuleGroupReferences
	})
	return pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference, GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput]{OutputState: value.OutputState}
}

func (o GetFirewallPolicyFirewallPolicyOutput) StatelessCustomActions() pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessCustomAction, GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicy](o, func(v GetFirewallPolicyFirewallPolicy) []GetFirewallPolicyFirewallPolicyStatelessCustomAction {
		return v.StatelessCustomActions
	})
	return pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessCustomAction, GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput]{OutputState: value.OutputState}
}

func (o GetFirewallPolicyFirewallPolicyOutput) StatelessDefaultActions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicy](o, func(v GetFirewallPolicyFirewallPolicy) []string { return v.StatelessDefaultActions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetFirewallPolicyFirewallPolicyOutput) StatelessFragmentDefaultActions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicy](o, func(v GetFirewallPolicyFirewallPolicy) []string { return v.StatelessFragmentDefaultActions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetFirewallPolicyFirewallPolicyOutput) StatelessRuleGroupReferences() pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference, GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicy](o, func(v GetFirewallPolicyFirewallPolicy) []GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference {
		return v.StatelessRuleGroupReferences
	})
	return pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference, GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput]{OutputState: value.OutputState}
}

type GetFirewallPolicyFirewallPolicyStatefulEngineOption struct {
	RuleOrder             string `pulumi:"ruleOrder"`
	StreamExceptionPolicy string `pulumi:"streamExceptionPolicy"`
}

type GetFirewallPolicyFirewallPolicyStatefulEngineOptionArgs struct {
	RuleOrder             pulumix.Input[string] `pulumi:"ruleOrder"`
	StreamExceptionPolicy pulumix.Input[string] `pulumi:"streamExceptionPolicy"`
}

func (GetFirewallPolicyFirewallPolicyStatefulEngineOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatefulEngineOption)(nil)).Elem()
}

func (i GetFirewallPolicyFirewallPolicyStatefulEngineOptionArgs) ToGetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput() GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput {
	return i.ToGetFirewallPolicyFirewallPolicyStatefulEngineOptionOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFirewallPolicyStatefulEngineOptionArgs) ToGetFirewallPolicyFirewallPolicyStatefulEngineOptionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput)
}

func (i *GetFirewallPolicyFirewallPolicyStatefulEngineOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallPolicyFirewallPolicyStatefulEngineOptionArgs] {
	return pulumix.Val(i)
}

type GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatefulEngineOption)(nil)).Elem()
}

func (o GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput) ToGetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput() GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput) ToGetFirewallPolicyFirewallPolicyStatefulEngineOptionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallPolicyFirewallPolicyStatefulEngineOption] {
	return pulumix.Output[GetFirewallPolicyFirewallPolicyStatefulEngineOption]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput) RuleOrder() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallPolicyFirewallPolicyStatefulEngineOption](o, func(v GetFirewallPolicyFirewallPolicyStatefulEngineOption) string { return v.RuleOrder })
}

func (o GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput) StreamExceptionPolicy() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallPolicyFirewallPolicyStatefulEngineOption](o, func(v GetFirewallPolicyFirewallPolicyStatefulEngineOption) string { return v.StreamExceptionPolicy })
}

type GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference struct {
	Overrides   []GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride `pulumi:"overrides"`
	Priority    int                                                                 `pulumi:"priority"`
	ResourceArn string                                                              `pulumi:"resourceArn"`
}

type GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs struct {
	Overrides   pulumix.Input[[]*GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs] `pulumi:"overrides"`
	Priority    pulumix.Input[int]                                                                      `pulumi:"priority"`
	ResourceArn pulumix.Input[string]                                                                   `pulumi:"resourceArn"`
}

func (GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference)(nil)).Elem()
}

func (i GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs) ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput() GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput {
	return i.ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs) ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput)
}

func (i *GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs] {
	return pulumix.Val(i)
}

type GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference)(nil)).Elem()
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput() GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference] {
	return pulumix.Output[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) Overrides() pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride, GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference](o, func(v GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference) []GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride {
		return v.Overrides
	})
	return pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride, GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput]{OutputState: value.OutputState}
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference](o, func(v GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference) int { return v.Priority })
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference](o, func(v GetFirewallPolicyFirewallPolicyStatefulRuleGroupReference) string { return v.ResourceArn })
}

type GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride struct {
	Action *string `pulumi:"action"`
}

type GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs struct {
	Action pulumix.Input[*string] `pulumi:"action"`
}

func (GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride)(nil)).Elem()
}

func (i GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs) ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput() GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput {
	return i.ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs) ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput)
}

func (i *GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideArgs] {
	return pulumix.Val(i)
}

type GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride)(nil)).Elem()
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput() GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) ToGetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride] {
	return pulumix.Output[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput) Action() pulumix.Output[*string] {
	return pulumix.Apply[GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride](o, func(v GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverride) *string { return v.Action })
}

type GetFirewallPolicyFirewallPolicyStatelessCustomAction struct {
	ActionDefinitions []GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition `pulumi:"actionDefinitions"`
	ActionName        string                                                                 `pulumi:"actionName"`
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionArgs struct {
	ActionDefinitions pulumix.Input[[]*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs] `pulumi:"actionDefinitions"`
	ActionName        pulumix.Input[string]                                                                      `pulumi:"actionName"`
}

func (GetFirewallPolicyFirewallPolicyStatelessCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessCustomAction)(nil)).Elem()
}

func (i GetFirewallPolicyFirewallPolicyStatelessCustomActionArgs) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionOutput() GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput {
	return i.ToGetFirewallPolicyFirewallPolicyStatelessCustomActionOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFirewallPolicyStatelessCustomActionArgs) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput)
}

func (i *GetFirewallPolicyFirewallPolicyStatelessCustomActionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallPolicyFirewallPolicyStatelessCustomActionArgs] {
	return pulumix.Val(i)
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessCustomAction)(nil)).Elem()
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionOutput() GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessCustomAction] {
	return pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessCustomAction]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput) ActionDefinitions() pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition, GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicyStatelessCustomAction](o, func(v GetFirewallPolicyFirewallPolicyStatelessCustomAction) []GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition {
		return v.ActionDefinitions
	})
	return pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition, GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput]{OutputState: value.OutputState}
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput) ActionName() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallPolicyFirewallPolicyStatelessCustomAction](o, func(v GetFirewallPolicyFirewallPolicyStatelessCustomAction) string { return v.ActionName })
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition struct {
	PublishMetricActions []GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction `pulumi:"publishMetricActions"`
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs struct {
	PublishMetricActions pulumix.Input[[]*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs] `pulumi:"publishMetricActions"`
}

func (GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition)(nil)).Elem()
}

func (i GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput() GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput {
	return i.ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput)
}

func (i *GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionArgs] {
	return pulumix.Val(i)
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition)(nil)).Elem()
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput() GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition] {
	return pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput) PublishMetricActions() pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction, GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition](o, func(v GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinition) []GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction {
		return v.PublishMetricActions
	})
	return pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction, GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput]{OutputState: value.OutputState}
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction struct {
	Dimensions []GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension `pulumi:"dimensions"`
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs struct {
	Dimensions pulumix.Input[[]*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs] `pulumi:"dimensions"`
}

func (GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction)(nil)).Elem()
}

func (i GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput() GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput {
	return i.ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput)
}

func (i *GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionArgs] {
	return pulumix.Val(i)
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction)(nil)).Elem()
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput() GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction] {
	return pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput) Dimensions() pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension, GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput] {
	value := pulumix.Apply[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction](o, func(v GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction) []GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension {
		return v.Dimensions
	})
	return pulumix.GArrayOutput[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension, GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput]{OutputState: value.OutputState}
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension struct {
	Value string `pulumi:"value"`
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs struct {
	Value pulumix.Input[string] `pulumi:"value"`
}

func (GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension)(nil)).Elem()
}

func (i GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput() GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return i.ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput)
}

func (i *GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionArgs] {
	return pulumix.Val(i)
}

type GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension)(nil)).Elem()
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput() GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) ToGetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension] {
	return pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension](o, func(v GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension) string {
		return v.Value
	})
}

type GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference struct {
	Priority    int    `pulumi:"priority"`
	ResourceArn string `pulumi:"resourceArn"`
}

type GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs struct {
	Priority    pulumix.Input[int]    `pulumi:"priority"`
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
}

func (GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference)(nil)).Elem()
}

func (i GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs) ToGetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput() GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput {
	return i.ToGetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(context.Background())
}

func (i GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs) ToGetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput)
}

func (i *GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs] {
	return pulumix.Val(i)
}

type GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference)(nil)).Elem()
}

func (o GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ToGetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput() GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ToGetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutputWithContext(ctx context.Context) GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput {
	return o
}

func (o GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference] {
	return pulumix.Output[GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference]{
		OutputState: o.OutputState,
	}
}

func (o GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference](o, func(v GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference) int { return v.Priority })
}

func (o GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference](o, func(v GetFirewallPolicyFirewallPolicyStatelessRuleGroupReference) string { return v.ResourceArn })
}

type GetFirewallSubnetMapping struct {
	// The unique identifier for the subnet.
	SubnetId string `pulumi:"subnetId"`
}

type GetFirewallSubnetMappingArgs struct {
	// The unique identifier for the subnet.
	SubnetId pulumix.Input[string] `pulumi:"subnetId"`
}

func (GetFirewallSubnetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallSubnetMapping)(nil)).Elem()
}

func (i GetFirewallSubnetMappingArgs) ToGetFirewallSubnetMappingOutput() GetFirewallSubnetMappingOutput {
	return i.ToGetFirewallSubnetMappingOutputWithContext(context.Background())
}

func (i GetFirewallSubnetMappingArgs) ToGetFirewallSubnetMappingOutputWithContext(ctx context.Context) GetFirewallSubnetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallSubnetMappingOutput)
}

func (i *GetFirewallSubnetMappingArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFirewallSubnetMappingArgs] {
	return pulumix.Val(i)
}

type GetFirewallSubnetMappingOutput struct{ *pulumi.OutputState }

func (GetFirewallSubnetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallSubnetMapping)(nil)).Elem()
}

func (o GetFirewallSubnetMappingOutput) ToGetFirewallSubnetMappingOutput() GetFirewallSubnetMappingOutput {
	return o
}

func (o GetFirewallSubnetMappingOutput) ToGetFirewallSubnetMappingOutputWithContext(ctx context.Context) GetFirewallSubnetMappingOutput {
	return o
}

func (o GetFirewallSubnetMappingOutput) ToOutput(ctx context.Context) pulumix.Output[GetFirewallSubnetMapping] {
	return pulumix.Output[GetFirewallSubnetMapping]{
		OutputState: o.OutputState,
	}
}

// The unique identifier for the subnet.
func (o GetFirewallSubnetMappingOutput) SubnetId() pulumix.Output[string] {
	return pulumix.Apply[GetFirewallSubnetMapping](o, func(v GetFirewallSubnetMapping) string { return v.SubnetId })
}

func init() {
	pulumi.RegisterOutputType(FirewallEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(FirewallFirewallStatusOutput{})
	pulumi.RegisterOutputType(FirewallFirewallStatusSyncStateOutput{})
	pulumi.RegisterOutputType(FirewallFirewallStatusSyncStateAttachmentOutput{})
	pulumi.RegisterOutputType(FirewallPolicyEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyPolicyVariablesOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyPolicyVariablesRuleVariableIpSetOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyStatefulEngineOptionsOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyStatelessCustomActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput{})
	pulumi.RegisterOutputType(FirewallSubnetMappingOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLoggingConfigurationOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLoggingConfigurationLogDestinationConfigOutput{})
	pulumi.RegisterOutputType(RuleGroupEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupReferenceSetsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupReferenceSetsIpSetReferenceOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupReferenceSetsIpSetReferenceIpSetReferenceOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRuleVariablesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRuleVariablesIpSetOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRuleVariablesIpSetIpSetOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRuleVariablesPortSetOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRuleVariablesPortSetPortSetOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceRulesSourceListOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatefulRuleOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatefulRuleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatefulRuleRuleOptionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionActionDefinitionPublishMetricActionDimensionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesDestinationPortOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourceOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesSourcePortOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleRuleDefinitionMatchAttributesTcpFlagOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleGroupStatefulRuleOptionsOutput{})
	pulumi.RegisterOutputType(GetFirewallEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(GetFirewallFirewallStatusOutput{})
	pulumi.RegisterOutputType(GetFirewallFirewallStatusCapacityUsageSummaryOutput{})
	pulumi.RegisterOutputType(GetFirewallFirewallStatusCapacityUsageSummaryCidrOutput{})
	pulumi.RegisterOutputType(GetFirewallFirewallStatusCapacityUsageSummaryCidrIpSetReferenceOutput{})
	pulumi.RegisterOutputType(GetFirewallFirewallStatusSyncStateOutput{})
	pulumi.RegisterOutputType(GetFirewallFirewallStatusSyncStateAttachmentOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFirewallPolicyOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFirewallPolicyStatefulEngineOptionOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFirewallPolicyStatefulRuleGroupReferenceOverrideOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFirewallPolicyStatelessCustomActionOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimensionOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyFirewallPolicyStatelessRuleGroupReferenceOutput{})
	pulumi.RegisterOutputType(GetFirewallSubnetMappingOutput{})
}
