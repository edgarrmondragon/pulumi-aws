// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codeartifact

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CodeArtifact Domain Resource.
type Domain struct {
	pulumi.CustomResourceState

	// The ARN of the Domain.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The total size of all assets in the domain.
	AssetSizeBytes pulumix.Output[string] `pulumi:"assetSizeBytes"`
	// A timestamp that represents the date and time the domain was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.
	Domain pulumix.Output[string] `pulumi:"domain"`
	// The encryption key for the domain. This is used to encrypt content stored in a domain. The KMS Key Amazon Resource Name (ARN). The default aws/codeartifact AWS KMS master key is used if this element is absent.
	EncryptionKey pulumix.Output[string] `pulumi:"encryptionKey"`
	// The AWS account ID that owns the domain.
	Owner pulumix.Output[string] `pulumi:"owner"`
	// The number of repositories in the domain.
	RepositoryCount pulumix.Output[int] `pulumi:"repositoryCount"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Domain
	err := ctx.RegisterResource("aws:codeartifact/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("aws:codeartifact/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	// The ARN of the Domain.
	Arn *string `pulumi:"arn"`
	// The total size of all assets in the domain.
	AssetSizeBytes *string `pulumi:"assetSizeBytes"`
	// A timestamp that represents the date and time the domain was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	CreatedTime *string `pulumi:"createdTime"`
	// The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.
	Domain *string `pulumi:"domain"`
	// The encryption key for the domain. This is used to encrypt content stored in a domain. The KMS Key Amazon Resource Name (ARN). The default aws/codeartifact AWS KMS master key is used if this element is absent.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// The AWS account ID that owns the domain.
	Owner *string `pulumi:"owner"`
	// The number of repositories in the domain.
	RepositoryCount *int `pulumi:"repositoryCount"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DomainState struct {
	// The ARN of the Domain.
	Arn pulumix.Input[*string]
	// The total size of all assets in the domain.
	AssetSizeBytes pulumix.Input[*string]
	// A timestamp that represents the date and time the domain was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	CreatedTime pulumix.Input[*string]
	// The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.
	Domain pulumix.Input[*string]
	// The encryption key for the domain. This is used to encrypt content stored in a domain. The KMS Key Amazon Resource Name (ARN). The default aws/codeartifact AWS KMS master key is used if this element is absent.
	EncryptionKey pulumix.Input[*string]
	// The AWS account ID that owns the domain.
	Owner pulumix.Input[*string]
	// The number of repositories in the domain.
	RepositoryCount pulumix.Input[*int]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	// The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.
	Domain string `pulumi:"domain"`
	// The encryption key for the domain. This is used to encrypt content stored in a domain. The KMS Key Amazon Resource Name (ARN). The default aws/codeartifact AWS KMS master key is used if this element is absent.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.
	Domain pulumix.Input[string]
	// The encryption key for the domain. This is used to encrypt content stored in a domain. The KMS Key Amazon Resource Name (ARN). The default aws/codeartifact AWS KMS master key is used if this element is absent.
	EncryptionKey pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainOutput struct{ *pulumi.OutputState }

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Domain)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

func (o DomainOutput) ToOutput(ctx context.Context) pulumix.Output[Domain] {
	return pulumix.Output[Domain]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Domain.
func (o DomainOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The total size of all assets in the domain.
func (o DomainOutput) AssetSizeBytes() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.AssetSizeBytes })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A timestamp that represents the date and time the domain was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
func (o DomainOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.
func (o DomainOutput) Domain() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.Domain })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The encryption key for the domain. This is used to encrypt content stored in a domain. The KMS Key Amazon Resource Name (ARN). The default aws/codeartifact AWS KMS master key is used if this element is absent.
func (o DomainOutput) EncryptionKey() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.EncryptionKey })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS account ID that owns the domain.
func (o DomainOutput) Owner() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.Owner })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of repositories in the domain.
func (o DomainOutput) RepositoryCount() pulumix.Output[int] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[int] { return v.RepositoryCount })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DomainOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DomainOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DomainOutput{})
}
