// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic MapReduce Cluster Instance Group configuration.
// See [Amazon Elastic MapReduce Documentation](https://aws.amazon.com/documentation/emr/) for more information.
//
// > **NOTE:** At this time, Instance Groups cannot be destroyed through the API nor
// web interface. Instance Groups are destroyed when the EMR Cluster is destroyed.
// this provider will resize any Instance Group to zero when destroying the resource.
type InstanceGroup struct {
	pulumi.CustomResourceState

	// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
	AutoscalingPolicy pulumix.Output[*string] `pulumi:"autoscalingPolicy"`
	// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
	BidPrice pulumix.Output[*string] `pulumi:"bidPrice"`
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId pulumix.Output[string] `pulumi:"clusterId"`
	// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewInstanceGroup(ctx, "task", &emr.InstanceGroupArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson pulumix.Output[*string] `pulumi:"configurationsJson"`
	// One or more `ebsConfig` blocks as defined below. Changing this forces a new resource to be created.
	EbsConfigs pulumix.GArrayOutput[InstanceGroupEbsConfig, InstanceGroupEbsConfigOutput] `pulumi:"ebsConfigs"`
	// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
	EbsOptimized pulumix.Output[*bool] `pulumi:"ebsOptimized"`
	// target number of instances for the instance group. defaults to 0.
	InstanceCount pulumix.Output[int] `pulumi:"instanceCount"`
	// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
	InstanceType pulumix.Output[string] `pulumi:"instanceType"`
	// Human friendly name given to the instance group. Changing this forces a new resource to be created.
	Name pulumix.Output[string] `pulumi:"name"`
	// The number of instances currently running in this instance group.
	RunningInstanceCount pulumix.Output[int] `pulumi:"runningInstanceCount"`
	// The current status of the instance group.
	Status pulumix.Output[string] `pulumi:"status"`
}

// NewInstanceGroup registers a new resource with the given unique name, arguments, and options.
func NewInstanceGroup(ctx *pulumi.Context,
	name string, args *InstanceGroupArgs, opts ...pulumi.ResourceOption) (*InstanceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceGroup
	err := ctx.RegisterResource("aws:emr/instanceGroup:InstanceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceGroup gets an existing InstanceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceGroupState, opts ...pulumi.ResourceOption) (*InstanceGroup, error) {
	var resource InstanceGroup
	err := ctx.ReadResource("aws:emr/instanceGroup:InstanceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceGroup resources.
type instanceGroupState struct {
	// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
	AutoscalingPolicy *string `pulumi:"autoscalingPolicy"`
	// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
	BidPrice *string `pulumi:"bidPrice"`
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId *string `pulumi:"clusterId"`
	// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewInstanceGroup(ctx, "task", &emr.InstanceGroupArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson *string `pulumi:"configurationsJson"`
	// One or more `ebsConfig` blocks as defined below. Changing this forces a new resource to be created.
	EbsConfigs []InstanceGroupEbsConfig `pulumi:"ebsConfigs"`
	// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// target number of instances for the instance group. defaults to 0.
	InstanceCount *int `pulumi:"instanceCount"`
	// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
	InstanceType *string `pulumi:"instanceType"`
	// Human friendly name given to the instance group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The number of instances currently running in this instance group.
	RunningInstanceCount *int `pulumi:"runningInstanceCount"`
	// The current status of the instance group.
	Status *string `pulumi:"status"`
}

type InstanceGroupState struct {
	// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
	AutoscalingPolicy pulumix.Input[*string]
	// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
	BidPrice pulumix.Input[*string]
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId pulumix.Input[*string]
	// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewInstanceGroup(ctx, "task", &emr.InstanceGroupArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson pulumix.Input[*string]
	// One or more `ebsConfig` blocks as defined below. Changing this forces a new resource to be created.
	EbsConfigs pulumix.Input[[]*InstanceGroupEbsConfigArgs]
	// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
	EbsOptimized pulumix.Input[*bool]
	// target number of instances for the instance group. defaults to 0.
	InstanceCount pulumix.Input[*int]
	// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
	InstanceType pulumix.Input[*string]
	// Human friendly name given to the instance group. Changing this forces a new resource to be created.
	Name pulumix.Input[*string]
	// The number of instances currently running in this instance group.
	RunningInstanceCount pulumix.Input[*int]
	// The current status of the instance group.
	Status pulumix.Input[*string]
}

func (InstanceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupState)(nil)).Elem()
}

type instanceGroupArgs struct {
	// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
	AutoscalingPolicy *string `pulumi:"autoscalingPolicy"`
	// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
	BidPrice *string `pulumi:"bidPrice"`
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId string `pulumi:"clusterId"`
	// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewInstanceGroup(ctx, "task", &emr.InstanceGroupArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson *string `pulumi:"configurationsJson"`
	// One or more `ebsConfig` blocks as defined below. Changing this forces a new resource to be created.
	EbsConfigs []InstanceGroupEbsConfig `pulumi:"ebsConfigs"`
	// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// target number of instances for the instance group. defaults to 0.
	InstanceCount *int `pulumi:"instanceCount"`
	// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
	InstanceType string `pulumi:"instanceType"`
	// Human friendly name given to the instance group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a InstanceGroup resource.
type InstanceGroupArgs struct {
	// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
	AutoscalingPolicy pulumix.Input[*string]
	// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
	BidPrice pulumix.Input[*string]
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId pulumix.Input[string]
	// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewInstanceGroup(ctx, "task", &emr.InstanceGroupArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson pulumix.Input[*string]
	// One or more `ebsConfig` blocks as defined below. Changing this forces a new resource to be created.
	EbsConfigs pulumix.Input[[]*InstanceGroupEbsConfigArgs]
	// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
	EbsOptimized pulumix.Input[*bool]
	// target number of instances for the instance group. defaults to 0.
	InstanceCount pulumix.Input[*int]
	// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
	InstanceType pulumix.Input[string]
	// Human friendly name given to the instance group. Changing this forces a new resource to be created.
	Name pulumix.Input[*string]
}

func (InstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupArgs)(nil)).Elem()
}

type InstanceGroupOutput struct{ *pulumi.OutputState }

func (InstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroup)(nil)).Elem()
}

func (o InstanceGroupOutput) ToInstanceGroupOutput() InstanceGroupOutput {
	return o
}

func (o InstanceGroupOutput) ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput {
	return o
}

func (o InstanceGroupOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceGroup] {
	return pulumix.Output[InstanceGroup]{
		OutputState: o.OutputState,
	}
}

// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
func (o InstanceGroupOutput) AutoscalingPolicy() pulumix.Output[*string] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[*string] { return v.AutoscalingPolicy })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
func (o InstanceGroupOutput) BidPrice() pulumix.Output[*string] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[*string] { return v.BidPrice })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
func (o InstanceGroupOutput) ClusterId() pulumix.Output[string] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[string] { return v.ClusterId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := emr.NewInstanceGroup(ctx, "task", &emr.InstanceGroupArgs{
//				ConfigurationsJson: pulumi.String(`[
//
// {
// "Classification": "hadoop-env",
// "Configurations": [
// {
// "Classification": "export",
// "Properties": {
// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
// }
// }
// ],
// "Properties": {}
// }
// ]
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func (o InstanceGroupOutput) ConfigurationsJson() pulumix.Output[*string] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[*string] { return v.ConfigurationsJson })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// One or more `ebsConfig` blocks as defined below. Changing this forces a new resource to be created.
func (o InstanceGroupOutput) EbsConfigs() pulumix.GArrayOutput[InstanceGroupEbsConfig, InstanceGroupEbsConfigOutput] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.GArrayOutput[InstanceGroupEbsConfig, InstanceGroupEbsConfigOutput] {
		return v.EbsConfigs
	})
	unwrapped := pulumix.Flatten[[]InstanceGroupEbsConfig, pulumix.GArrayOutput[InstanceGroupEbsConfig, InstanceGroupEbsConfigOutput]](value)
	return pulumix.GArrayOutput[InstanceGroupEbsConfig, InstanceGroupEbsConfigOutput]{OutputState: unwrapped.OutputState}
}

// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
func (o InstanceGroupOutput) EbsOptimized() pulumix.Output[*bool] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[*bool] { return v.EbsOptimized })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// target number of instances for the instance group. defaults to 0.
func (o InstanceGroupOutput) InstanceCount() pulumix.Output[int] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[int] { return v.InstanceCount })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
func (o InstanceGroupOutput) InstanceType() pulumix.Output[string] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[string] { return v.InstanceType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Human friendly name given to the instance group. Changing this forces a new resource to be created.
func (o InstanceGroupOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of instances currently running in this instance group.
func (o InstanceGroupOutput) RunningInstanceCount() pulumix.Output[int] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[int] { return v.RunningInstanceCount })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The current status of the instance group.
func (o InstanceGroupOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[InstanceGroup](o, func(v InstanceGroup) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(InstanceGroupOutput{})
}
