// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker Notebook Instance resource.
type NotebookInstance struct {
	pulumi.CustomResourceState

	// A list of Elastic Inference (EI) instance types to associate with this notebook instance. See [Elastic Inference Accelerator](https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html) for more details. Valid values: `ml.eia1.medium`, `ml.eia1.large`, `ml.eia1.xlarge`, `ml.eia2.medium`, `ml.eia2.large`, `ml.eia2.xlarge`.
	AcceleratorTypes pulumix.ArrayOutput[string] `pulumi:"acceleratorTypes"`
	// An array of up to three Git repositories to associate with the notebook instance.
	// These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
	AdditionalCodeRepositories pulumix.ArrayOutput[string] `pulumi:"additionalCodeRepositories"`
	// The Amazon Resource Name (ARN) assigned by AWS to this notebook instance.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository.
	DefaultCodeRepository pulumix.Output[*string] `pulumi:"defaultCodeRepository"`
	// Set to `Disabled` to disable internet access to notebook. Requires `securityGroups` and `subnetId` to be set. Supported values: `Enabled` (Default) or `Disabled`. If set to `Disabled`, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
	DirectInternetAccess pulumix.Output[*string] `pulumi:"directInternetAccess"`
	// Information on the IMDS configuration of the notebook instance. Conflicts with `instanceMetadataServiceConfiguration`. see details below.
	InstanceMetadataServiceConfiguration pulumix.GPtrOutput[NotebookInstanceInstanceMetadataServiceConfiguration, NotebookInstanceInstanceMetadataServiceConfigurationOutput] `pulumi:"instanceMetadataServiceConfiguration"`
	// The name of ML compute instance type.
	InstanceType pulumix.Output[string] `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumix.Output[*string] `pulumi:"kmsKeyId"`
	// The name of a lifecycle configuration to associate with the notebook instance.
	LifecycleConfigName pulumix.Output[*string] `pulumi:"lifecycleConfigName"`
	// The name of the notebook instance (must be unique).
	Name pulumix.Output[string] `pulumi:"name"`
	// The network interface ID that Amazon SageMaker created at the time of creating the instance. Only available when setting `subnetId`.
	NetworkInterfaceId pulumix.Output[string] `pulumi:"networkInterfaceId"`
	// The platform identifier of the notebook instance runtime environment. This value can be either `notebook-al1-v1`, `notebook-al2-v1`, or  `notebook-al2-v2`, depending on which version of Amazon Linux you require.
	PlatformIdentifier pulumix.Output[string] `pulumi:"platformIdentifier"`
	// The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// Whether root access is `Enabled` or `Disabled` for users of the notebook instance. The default value is `Enabled`.
	RootAccess pulumix.Output[*string] `pulumi:"rootAccess"`
	// The associated security groups.
	SecurityGroups pulumix.ArrayOutput[string] `pulumi:"securityGroups"`
	// The VPC subnet ID.
	SubnetId pulumix.Output[*string] `pulumi:"subnetId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The URL that you use to connect to the Jupyter notebook that is running in your notebook instance.
	Url pulumix.Output[string] `pulumi:"url"`
	// The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
	VolumeSize pulumix.Output[*int] `pulumi:"volumeSize"`
}

// NewNotebookInstance registers a new resource with the given unique name, arguments, and options.
func NewNotebookInstance(ctx *pulumi.Context,
	name string, args *NotebookInstanceArgs, opts ...pulumi.ResourceOption) (*NotebookInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NotebookInstance
	err := ctx.RegisterResource("aws:sagemaker/notebookInstance:NotebookInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotebookInstance gets an existing NotebookInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebookInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotebookInstanceState, opts ...pulumi.ResourceOption) (*NotebookInstance, error) {
	var resource NotebookInstance
	err := ctx.ReadResource("aws:sagemaker/notebookInstance:NotebookInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotebookInstance resources.
type notebookInstanceState struct {
	// A list of Elastic Inference (EI) instance types to associate with this notebook instance. See [Elastic Inference Accelerator](https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html) for more details. Valid values: `ml.eia1.medium`, `ml.eia1.large`, `ml.eia1.xlarge`, `ml.eia2.medium`, `ml.eia2.large`, `ml.eia2.xlarge`.
	AcceleratorTypes []string `pulumi:"acceleratorTypes"`
	// An array of up to three Git repositories to associate with the notebook instance.
	// These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
	AdditionalCodeRepositories []string `pulumi:"additionalCodeRepositories"`
	// The Amazon Resource Name (ARN) assigned by AWS to this notebook instance.
	Arn *string `pulumi:"arn"`
	// The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository.
	DefaultCodeRepository *string `pulumi:"defaultCodeRepository"`
	// Set to `Disabled` to disable internet access to notebook. Requires `securityGroups` and `subnetId` to be set. Supported values: `Enabled` (Default) or `Disabled`. If set to `Disabled`, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
	DirectInternetAccess *string `pulumi:"directInternetAccess"`
	// Information on the IMDS configuration of the notebook instance. Conflicts with `instanceMetadataServiceConfiguration`. see details below.
	InstanceMetadataServiceConfiguration *NotebookInstanceInstanceMetadataServiceConfiguration `pulumi:"instanceMetadataServiceConfiguration"`
	// The name of ML compute instance type.
	InstanceType *string `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The name of a lifecycle configuration to associate with the notebook instance.
	LifecycleConfigName *string `pulumi:"lifecycleConfigName"`
	// The name of the notebook instance (must be unique).
	Name *string `pulumi:"name"`
	// The network interface ID that Amazon SageMaker created at the time of creating the instance. Only available when setting `subnetId`.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The platform identifier of the notebook instance runtime environment. This value can be either `notebook-al1-v1`, `notebook-al2-v1`, or  `notebook-al2-v2`, depending on which version of Amazon Linux you require.
	PlatformIdentifier *string `pulumi:"platformIdentifier"`
	// The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
	RoleArn *string `pulumi:"roleArn"`
	// Whether root access is `Enabled` or `Disabled` for users of the notebook instance. The default value is `Enabled`.
	RootAccess *string `pulumi:"rootAccess"`
	// The associated security groups.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The VPC subnet ID.
	SubnetId *string `pulumi:"subnetId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The URL that you use to connect to the Jupyter notebook that is running in your notebook instance.
	Url *string `pulumi:"url"`
	// The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
	VolumeSize *int `pulumi:"volumeSize"`
}

type NotebookInstanceState struct {
	// A list of Elastic Inference (EI) instance types to associate with this notebook instance. See [Elastic Inference Accelerator](https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html) for more details. Valid values: `ml.eia1.medium`, `ml.eia1.large`, `ml.eia1.xlarge`, `ml.eia2.medium`, `ml.eia2.large`, `ml.eia2.xlarge`.
	AcceleratorTypes pulumix.Input[[]string]
	// An array of up to three Git repositories to associate with the notebook instance.
	// These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
	AdditionalCodeRepositories pulumix.Input[[]string]
	// The Amazon Resource Name (ARN) assigned by AWS to this notebook instance.
	Arn pulumix.Input[*string]
	// The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository.
	DefaultCodeRepository pulumix.Input[*string]
	// Set to `Disabled` to disable internet access to notebook. Requires `securityGroups` and `subnetId` to be set. Supported values: `Enabled` (Default) or `Disabled`. If set to `Disabled`, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
	DirectInternetAccess pulumix.Input[*string]
	// Information on the IMDS configuration of the notebook instance. Conflicts with `instanceMetadataServiceConfiguration`. see details below.
	InstanceMetadataServiceConfiguration pulumix.Input[*NotebookInstanceInstanceMetadataServiceConfigurationArgs]
	// The name of ML compute instance type.
	InstanceType pulumix.Input[*string]
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumix.Input[*string]
	// The name of a lifecycle configuration to associate with the notebook instance.
	LifecycleConfigName pulumix.Input[*string]
	// The name of the notebook instance (must be unique).
	Name pulumix.Input[*string]
	// The network interface ID that Amazon SageMaker created at the time of creating the instance. Only available when setting `subnetId`.
	NetworkInterfaceId pulumix.Input[*string]
	// The platform identifier of the notebook instance runtime environment. This value can be either `notebook-al1-v1`, `notebook-al2-v1`, or  `notebook-al2-v2`, depending on which version of Amazon Linux you require.
	PlatformIdentifier pulumix.Input[*string]
	// The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
	RoleArn pulumix.Input[*string]
	// Whether root access is `Enabled` or `Disabled` for users of the notebook instance. The default value is `Enabled`.
	RootAccess pulumix.Input[*string]
	// The associated security groups.
	SecurityGroups pulumix.Input[[]string]
	// The VPC subnet ID.
	SubnetId pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The URL that you use to connect to the Jupyter notebook that is running in your notebook instance.
	Url pulumix.Input[*string]
	// The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
	VolumeSize pulumix.Input[*int]
}

func (NotebookInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*notebookInstanceState)(nil)).Elem()
}

type notebookInstanceArgs struct {
	// A list of Elastic Inference (EI) instance types to associate with this notebook instance. See [Elastic Inference Accelerator](https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html) for more details. Valid values: `ml.eia1.medium`, `ml.eia1.large`, `ml.eia1.xlarge`, `ml.eia2.medium`, `ml.eia2.large`, `ml.eia2.xlarge`.
	AcceleratorTypes []string `pulumi:"acceleratorTypes"`
	// An array of up to three Git repositories to associate with the notebook instance.
	// These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
	AdditionalCodeRepositories []string `pulumi:"additionalCodeRepositories"`
	// The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository.
	DefaultCodeRepository *string `pulumi:"defaultCodeRepository"`
	// Set to `Disabled` to disable internet access to notebook. Requires `securityGroups` and `subnetId` to be set. Supported values: `Enabled` (Default) or `Disabled`. If set to `Disabled`, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
	DirectInternetAccess *string `pulumi:"directInternetAccess"`
	// Information on the IMDS configuration of the notebook instance. Conflicts with `instanceMetadataServiceConfiguration`. see details below.
	InstanceMetadataServiceConfiguration *NotebookInstanceInstanceMetadataServiceConfiguration `pulumi:"instanceMetadataServiceConfiguration"`
	// The name of ML compute instance type.
	InstanceType string `pulumi:"instanceType"`
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The name of a lifecycle configuration to associate with the notebook instance.
	LifecycleConfigName *string `pulumi:"lifecycleConfigName"`
	// The name of the notebook instance (must be unique).
	Name *string `pulumi:"name"`
	// The platform identifier of the notebook instance runtime environment. This value can be either `notebook-al1-v1`, `notebook-al2-v1`, or  `notebook-al2-v2`, depending on which version of Amazon Linux you require.
	PlatformIdentifier *string `pulumi:"platformIdentifier"`
	// The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
	RoleArn string `pulumi:"roleArn"`
	// Whether root access is `Enabled` or `Disabled` for users of the notebook instance. The default value is `Enabled`.
	RootAccess *string `pulumi:"rootAccess"`
	// The associated security groups.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The VPC subnet ID.
	SubnetId *string `pulumi:"subnetId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
	VolumeSize *int `pulumi:"volumeSize"`
}

// The set of arguments for constructing a NotebookInstance resource.
type NotebookInstanceArgs struct {
	// A list of Elastic Inference (EI) instance types to associate with this notebook instance. See [Elastic Inference Accelerator](https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html) for more details. Valid values: `ml.eia1.medium`, `ml.eia1.large`, `ml.eia1.xlarge`, `ml.eia2.medium`, `ml.eia2.large`, `ml.eia2.xlarge`.
	AcceleratorTypes pulumix.Input[[]string]
	// An array of up to three Git repositories to associate with the notebook instance.
	// These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
	AdditionalCodeRepositories pulumix.Input[[]string]
	// The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository.
	DefaultCodeRepository pulumix.Input[*string]
	// Set to `Disabled` to disable internet access to notebook. Requires `securityGroups` and `subnetId` to be set. Supported values: `Enabled` (Default) or `Disabled`. If set to `Disabled`, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
	DirectInternetAccess pulumix.Input[*string]
	// Information on the IMDS configuration of the notebook instance. Conflicts with `instanceMetadataServiceConfiguration`. see details below.
	InstanceMetadataServiceConfiguration pulumix.Input[*NotebookInstanceInstanceMetadataServiceConfigurationArgs]
	// The name of ML compute instance type.
	InstanceType pulumix.Input[string]
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	KmsKeyId pulumix.Input[*string]
	// The name of a lifecycle configuration to associate with the notebook instance.
	LifecycleConfigName pulumix.Input[*string]
	// The name of the notebook instance (must be unique).
	Name pulumix.Input[*string]
	// The platform identifier of the notebook instance runtime environment. This value can be either `notebook-al1-v1`, `notebook-al2-v1`, or  `notebook-al2-v2`, depending on which version of Amazon Linux you require.
	PlatformIdentifier pulumix.Input[*string]
	// The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
	RoleArn pulumix.Input[string]
	// Whether root access is `Enabled` or `Disabled` for users of the notebook instance. The default value is `Enabled`.
	RootAccess pulumix.Input[*string]
	// The associated security groups.
	SecurityGroups pulumix.Input[[]string]
	// The VPC subnet ID.
	SubnetId pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
	VolumeSize pulumix.Input[*int]
}

func (NotebookInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notebookInstanceArgs)(nil)).Elem()
}

type NotebookInstanceOutput struct{ *pulumi.OutputState }

func (NotebookInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstance)(nil)).Elem()
}

func (o NotebookInstanceOutput) ToNotebookInstanceOutput() NotebookInstanceOutput {
	return o
}

func (o NotebookInstanceOutput) ToNotebookInstanceOutputWithContext(ctx context.Context) NotebookInstanceOutput {
	return o
}

func (o NotebookInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[NotebookInstance] {
	return pulumix.Output[NotebookInstance]{
		OutputState: o.OutputState,
	}
}

// A list of Elastic Inference (EI) instance types to associate with this notebook instance. See [Elastic Inference Accelerator](https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html) for more details. Valid values: `ml.eia1.medium`, `ml.eia1.large`, `ml.eia1.xlarge`, `ml.eia2.medium`, `ml.eia2.large`, `ml.eia2.xlarge`.
func (o NotebookInstanceOutput) AcceleratorTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.ArrayOutput[string] { return v.AcceleratorTypes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// An array of up to three Git repositories to associate with the notebook instance.
// These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
func (o NotebookInstanceOutput) AdditionalCodeRepositories() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.ArrayOutput[string] { return v.AdditionalCodeRepositories })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) assigned by AWS to this notebook instance.
func (o NotebookInstanceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in [AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository.
func (o NotebookInstanceOutput) DefaultCodeRepository() pulumix.Output[*string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[*string] { return v.DefaultCodeRepository })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Set to `Disabled` to disable internet access to notebook. Requires `securityGroups` and `subnetId` to be set. Supported values: `Enabled` (Default) or `Disabled`. If set to `Disabled`, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
func (o NotebookInstanceOutput) DirectInternetAccess() pulumix.Output[*string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[*string] { return v.DirectInternetAccess })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Information on the IMDS configuration of the notebook instance. Conflicts with `instanceMetadataServiceConfiguration`. see details below.
func (o NotebookInstanceOutput) InstanceMetadataServiceConfiguration() pulumix.GPtrOutput[NotebookInstanceInstanceMetadataServiceConfiguration, NotebookInstanceInstanceMetadataServiceConfigurationOutput] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.GPtrOutput[NotebookInstanceInstanceMetadataServiceConfiguration, NotebookInstanceInstanceMetadataServiceConfigurationOutput] {
		return v.InstanceMetadataServiceConfiguration
	})
	unwrapped := pulumix.Flatten[*NotebookInstanceInstanceMetadataServiceConfiguration, pulumix.GPtrOutput[NotebookInstanceInstanceMetadataServiceConfiguration, NotebookInstanceInstanceMetadataServiceConfigurationOutput]](value)
	return pulumix.GPtrOutput[NotebookInstanceInstanceMetadataServiceConfiguration, NotebookInstanceInstanceMetadataServiceConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The name of ML compute instance type.
func (o NotebookInstanceOutput) InstanceType() pulumix.Output[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[string] { return v.InstanceType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
func (o NotebookInstanceOutput) KmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[*string] { return v.KmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of a lifecycle configuration to associate with the notebook instance.
func (o NotebookInstanceOutput) LifecycleConfigName() pulumix.Output[*string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[*string] { return v.LifecycleConfigName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the notebook instance (must be unique).
func (o NotebookInstanceOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The network interface ID that Amazon SageMaker created at the time of creating the instance. Only available when setting `subnetId`.
func (o NotebookInstanceOutput) NetworkInterfaceId() pulumix.Output[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[string] { return v.NetworkInterfaceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The platform identifier of the notebook instance runtime environment. This value can be either `notebook-al1-v1`, `notebook-al2-v1`, or  `notebook-al2-v2`, depending on which version of Amazon Linux you require.
func (o NotebookInstanceOutput) PlatformIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[string] { return v.PlatformIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
func (o NotebookInstanceOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether root access is `Enabled` or `Disabled` for users of the notebook instance. The default value is `Enabled`.
func (o NotebookInstanceOutput) RootAccess() pulumix.Output[*string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[*string] { return v.RootAccess })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The associated security groups.
func (o NotebookInstanceOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.ArrayOutput[string] { return v.SecurityGroups })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The VPC subnet ID.
func (o NotebookInstanceOutput) SubnetId() pulumix.Output[*string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[*string] { return v.SubnetId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o NotebookInstanceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o NotebookInstanceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The URL that you use to connect to the Jupyter notebook that is running in your notebook instance.
func (o NotebookInstanceOutput) Url() pulumix.Output[string] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[string] { return v.Url })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
func (o NotebookInstanceOutput) VolumeSize() pulumix.Output[*int] {
	value := pulumix.Apply[NotebookInstance](o, func(v NotebookInstance) pulumix.Output[*int] { return v.VolumeSize })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

func init() {
	pulumi.RegisterOutputType(NotebookInstanceOutput{})
}
