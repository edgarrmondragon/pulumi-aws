// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Lex Bot resource. For more information see
// [Amazon Lex: How It Works](https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html)
type Bot struct {
	pulumi.CustomResourceState

	// The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.
	AbortStatement pulumix.GPtrOutput[BotAbortStatement, BotAbortStatementOutput] `pulumi:"abortStatement"`
	Arn            pulumix.Output[string]                                         `pulumi:"arn"`
	// Checksum identifying the version of the bot that was created. The checksum is not
	// included as an argument because the resource will add it automatically when updating the bot.
	Checksum pulumix.Output[string] `pulumi:"checksum"`
	// By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the [Amazon Lex FAQ](https://aws.amazon.com/lex/faqs#data-security) and the [Amazon Lex PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-childDirected).
	ChildDirected pulumix.Output[bool] `pulumi:"childDirected"`
	// The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.
	ClarificationPrompt pulumix.GPtrOutput[BotClarificationPrompt, BotClarificationPromptOutput] `pulumi:"clarificationPrompt"`
	// Determines if a new bot version is created when the initial resource is created and on each update. Defaults to `false`.
	CreateVersion pulumix.Output[*bool] `pulumi:"createVersion"`
	// The date when the bot version was created.
	CreatedDate pulumix.Output[string] `pulumi:"createdDate"`
	// A description of the bot. Must be less than or equal to 200 characters in length.
	Description pulumix.Output[*string] `pulumi:"description"`
	// When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is `false`.
	DetectSentiment pulumix.Output[*bool] `pulumi:"detectSentiment"`
	// Set to `true` to enable access to natural language understanding improvements. When you set the `enableModelImprovements` parameter to true you can use the `nluIntentConfidenceThreshold` parameter to configure confidence scores. For more information, see [Confidence Scores](https://docs.aws.amazon.com/lex/latest/dg/confidence-scores.html). You can only set the `enableModelImprovements` parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-enableModelImprovements).
	EnableModelImprovements pulumix.Output[*bool] `pulumi:"enableModelImprovements"`
	// If status is FAILED, Amazon Lex provides the reason that it failed to build the bot.
	FailureReason pulumix.Output[string] `pulumi:"failureReason"`
	// The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is `300`. Must be a number between 60 and 86400 (inclusive).
	IdleSessionTtlInSeconds pulumix.Output[*int] `pulumi:"idleSessionTtlInSeconds"`
	// A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.
	Intents pulumix.GArrayOutput[BotIntent, BotIntentOutput] `pulumi:"intents"`
	// The date when the $LATEST version of this bot was updated.
	LastUpdatedDate pulumix.Output[string] `pulumi:"lastUpdatedDate"`
	// Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-locale). Default is `en-US`.
	Locale pulumix.Output[*string] `pulumi:"locale"`
	// The name of the bot that you want to create, case sensitive. Must be between 2 and 50 characters in length.
	Name pulumix.Output[string] `pulumi:"name"`
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-nluIntentConfidenceThreshold) This value requires `enableModelImprovements` to be set to `true` and the default is `0`. Must be a float between 0 and 1.
	NluIntentConfidenceThreshold pulumix.Output[*float64] `pulumi:"nluIntentConfidenceThreshold"`
	// If you set the `processBehavior` element to `BUILD`, Amazon Lex builds the bot so that it can be run. If you set the element to `SAVE` Amazon Lex saves the bot, but doesn't build it. Default is `SAVE`.
	ProcessBehavior pulumix.Output[*string] `pulumi:"processBehavior"`
	// When you send a request to create or update a bot, Amazon Lex sets the status response
	// element to BUILDING. After Amazon Lex builds the bot, it sets status to READY. If Amazon Lex can't
	// build the bot, it sets status to FAILED. Amazon Lex returns the reason for the failure in the
	// failureReason response element.
	Status pulumix.Output[string] `pulumi:"status"`
	// The version of the bot.
	Version pulumix.Output[string] `pulumi:"version"`
	// The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see [Available Voices](http://docs.aws.amazon.com/polly/latest/dg/voicelist.html) in the Amazon Polly Developer Guide.
	VoiceId pulumix.Output[string] `pulumi:"voiceId"`
}

// NewBot registers a new resource with the given unique name, arguments, and options.
func NewBot(ctx *pulumi.Context,
	name string, args *BotArgs, opts ...pulumi.ResourceOption) (*Bot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AbortStatement == nil {
		return nil, errors.New("invalid value for required argument 'AbortStatement'")
	}
	if args.ChildDirected == nil {
		return nil, errors.New("invalid value for required argument 'ChildDirected'")
	}
	if args.Intents == nil {
		return nil, errors.New("invalid value for required argument 'Intents'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Bot
	err := ctx.RegisterResource("aws:lex/bot:Bot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBot gets an existing Bot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotState, opts ...pulumi.ResourceOption) (*Bot, error) {
	var resource Bot
	err := ctx.ReadResource("aws:lex/bot:Bot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bot resources.
type botState struct {
	// The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.
	AbortStatement *BotAbortStatement `pulumi:"abortStatement"`
	Arn            *string            `pulumi:"arn"`
	// Checksum identifying the version of the bot that was created. The checksum is not
	// included as an argument because the resource will add it automatically when updating the bot.
	Checksum *string `pulumi:"checksum"`
	// By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the [Amazon Lex FAQ](https://aws.amazon.com/lex/faqs#data-security) and the [Amazon Lex PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-childDirected).
	ChildDirected *bool `pulumi:"childDirected"`
	// The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.
	ClarificationPrompt *BotClarificationPrompt `pulumi:"clarificationPrompt"`
	// Determines if a new bot version is created when the initial resource is created and on each update. Defaults to `false`.
	CreateVersion *bool `pulumi:"createVersion"`
	// The date when the bot version was created.
	CreatedDate *string `pulumi:"createdDate"`
	// A description of the bot. Must be less than or equal to 200 characters in length.
	Description *string `pulumi:"description"`
	// When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is `false`.
	DetectSentiment *bool `pulumi:"detectSentiment"`
	// Set to `true` to enable access to natural language understanding improvements. When you set the `enableModelImprovements` parameter to true you can use the `nluIntentConfidenceThreshold` parameter to configure confidence scores. For more information, see [Confidence Scores](https://docs.aws.amazon.com/lex/latest/dg/confidence-scores.html). You can only set the `enableModelImprovements` parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-enableModelImprovements).
	EnableModelImprovements *bool `pulumi:"enableModelImprovements"`
	// If status is FAILED, Amazon Lex provides the reason that it failed to build the bot.
	FailureReason *string `pulumi:"failureReason"`
	// The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is `300`. Must be a number between 60 and 86400 (inclusive).
	IdleSessionTtlInSeconds *int `pulumi:"idleSessionTtlInSeconds"`
	// A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.
	Intents []BotIntent `pulumi:"intents"`
	// The date when the $LATEST version of this bot was updated.
	LastUpdatedDate *string `pulumi:"lastUpdatedDate"`
	// Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-locale). Default is `en-US`.
	Locale *string `pulumi:"locale"`
	// The name of the bot that you want to create, case sensitive. Must be between 2 and 50 characters in length.
	Name *string `pulumi:"name"`
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-nluIntentConfidenceThreshold) This value requires `enableModelImprovements` to be set to `true` and the default is `0`. Must be a float between 0 and 1.
	NluIntentConfidenceThreshold *float64 `pulumi:"nluIntentConfidenceThreshold"`
	// If you set the `processBehavior` element to `BUILD`, Amazon Lex builds the bot so that it can be run. If you set the element to `SAVE` Amazon Lex saves the bot, but doesn't build it. Default is `SAVE`.
	ProcessBehavior *string `pulumi:"processBehavior"`
	// When you send a request to create or update a bot, Amazon Lex sets the status response
	// element to BUILDING. After Amazon Lex builds the bot, it sets status to READY. If Amazon Lex can't
	// build the bot, it sets status to FAILED. Amazon Lex returns the reason for the failure in the
	// failureReason response element.
	Status *string `pulumi:"status"`
	// The version of the bot.
	Version *string `pulumi:"version"`
	// The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see [Available Voices](http://docs.aws.amazon.com/polly/latest/dg/voicelist.html) in the Amazon Polly Developer Guide.
	VoiceId *string `pulumi:"voiceId"`
}

type BotState struct {
	// The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.
	AbortStatement pulumix.Input[*BotAbortStatementArgs]
	Arn            pulumix.Input[*string]
	// Checksum identifying the version of the bot that was created. The checksum is not
	// included as an argument because the resource will add it automatically when updating the bot.
	Checksum pulumix.Input[*string]
	// By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the [Amazon Lex FAQ](https://aws.amazon.com/lex/faqs#data-security) and the [Amazon Lex PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-childDirected).
	ChildDirected pulumix.Input[*bool]
	// The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.
	ClarificationPrompt pulumix.Input[*BotClarificationPromptArgs]
	// Determines if a new bot version is created when the initial resource is created and on each update. Defaults to `false`.
	CreateVersion pulumix.Input[*bool]
	// The date when the bot version was created.
	CreatedDate pulumix.Input[*string]
	// A description of the bot. Must be less than or equal to 200 characters in length.
	Description pulumix.Input[*string]
	// When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is `false`.
	DetectSentiment pulumix.Input[*bool]
	// Set to `true` to enable access to natural language understanding improvements. When you set the `enableModelImprovements` parameter to true you can use the `nluIntentConfidenceThreshold` parameter to configure confidence scores. For more information, see [Confidence Scores](https://docs.aws.amazon.com/lex/latest/dg/confidence-scores.html). You can only set the `enableModelImprovements` parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-enableModelImprovements).
	EnableModelImprovements pulumix.Input[*bool]
	// If status is FAILED, Amazon Lex provides the reason that it failed to build the bot.
	FailureReason pulumix.Input[*string]
	// The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is `300`. Must be a number between 60 and 86400 (inclusive).
	IdleSessionTtlInSeconds pulumix.Input[*int]
	// A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.
	Intents pulumix.Input[[]*BotIntentArgs]
	// The date when the $LATEST version of this bot was updated.
	LastUpdatedDate pulumix.Input[*string]
	// Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-locale). Default is `en-US`.
	Locale pulumix.Input[*string]
	// The name of the bot that you want to create, case sensitive. Must be between 2 and 50 characters in length.
	Name pulumix.Input[*string]
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-nluIntentConfidenceThreshold) This value requires `enableModelImprovements` to be set to `true` and the default is `0`. Must be a float between 0 and 1.
	NluIntentConfidenceThreshold pulumix.Input[*float64]
	// If you set the `processBehavior` element to `BUILD`, Amazon Lex builds the bot so that it can be run. If you set the element to `SAVE` Amazon Lex saves the bot, but doesn't build it. Default is `SAVE`.
	ProcessBehavior pulumix.Input[*string]
	// When you send a request to create or update a bot, Amazon Lex sets the status response
	// element to BUILDING. After Amazon Lex builds the bot, it sets status to READY. If Amazon Lex can't
	// build the bot, it sets status to FAILED. Amazon Lex returns the reason for the failure in the
	// failureReason response element.
	Status pulumix.Input[*string]
	// The version of the bot.
	Version pulumix.Input[*string]
	// The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see [Available Voices](http://docs.aws.amazon.com/polly/latest/dg/voicelist.html) in the Amazon Polly Developer Guide.
	VoiceId pulumix.Input[*string]
}

func (BotState) ElementType() reflect.Type {
	return reflect.TypeOf((*botState)(nil)).Elem()
}

type botArgs struct {
	// The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.
	AbortStatement BotAbortStatement `pulumi:"abortStatement"`
	// By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the [Amazon Lex FAQ](https://aws.amazon.com/lex/faqs#data-security) and the [Amazon Lex PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-childDirected).
	ChildDirected bool `pulumi:"childDirected"`
	// The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.
	ClarificationPrompt *BotClarificationPrompt `pulumi:"clarificationPrompt"`
	// Determines if a new bot version is created when the initial resource is created and on each update. Defaults to `false`.
	CreateVersion *bool `pulumi:"createVersion"`
	// A description of the bot. Must be less than or equal to 200 characters in length.
	Description *string `pulumi:"description"`
	// When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is `false`.
	DetectSentiment *bool `pulumi:"detectSentiment"`
	// Set to `true` to enable access to natural language understanding improvements. When you set the `enableModelImprovements` parameter to true you can use the `nluIntentConfidenceThreshold` parameter to configure confidence scores. For more information, see [Confidence Scores](https://docs.aws.amazon.com/lex/latest/dg/confidence-scores.html). You can only set the `enableModelImprovements` parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-enableModelImprovements).
	EnableModelImprovements *bool `pulumi:"enableModelImprovements"`
	// The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is `300`. Must be a number between 60 and 86400 (inclusive).
	IdleSessionTtlInSeconds *int `pulumi:"idleSessionTtlInSeconds"`
	// A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.
	Intents []BotIntent `pulumi:"intents"`
	// Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-locale). Default is `en-US`.
	Locale *string `pulumi:"locale"`
	// The name of the bot that you want to create, case sensitive. Must be between 2 and 50 characters in length.
	Name *string `pulumi:"name"`
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-nluIntentConfidenceThreshold) This value requires `enableModelImprovements` to be set to `true` and the default is `0`. Must be a float between 0 and 1.
	NluIntentConfidenceThreshold *float64 `pulumi:"nluIntentConfidenceThreshold"`
	// If you set the `processBehavior` element to `BUILD`, Amazon Lex builds the bot so that it can be run. If you set the element to `SAVE` Amazon Lex saves the bot, but doesn't build it. Default is `SAVE`.
	ProcessBehavior *string `pulumi:"processBehavior"`
	// The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see [Available Voices](http://docs.aws.amazon.com/polly/latest/dg/voicelist.html) in the Amazon Polly Developer Guide.
	VoiceId *string `pulumi:"voiceId"`
}

// The set of arguments for constructing a Bot resource.
type BotArgs struct {
	// The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.
	AbortStatement pulumix.Input[*BotAbortStatementArgs]
	// By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the [Amazon Lex FAQ](https://aws.amazon.com/lex/faqs#data-security) and the [Amazon Lex PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-childDirected).
	ChildDirected pulumix.Input[bool]
	// The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.
	ClarificationPrompt pulumix.Input[*BotClarificationPromptArgs]
	// Determines if a new bot version is created when the initial resource is created and on each update. Defaults to `false`.
	CreateVersion pulumix.Input[*bool]
	// A description of the bot. Must be less than or equal to 200 characters in length.
	Description pulumix.Input[*string]
	// When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is `false`.
	DetectSentiment pulumix.Input[*bool]
	// Set to `true` to enable access to natural language understanding improvements. When you set the `enableModelImprovements` parameter to true you can use the `nluIntentConfidenceThreshold` parameter to configure confidence scores. For more information, see [Confidence Scores](https://docs.aws.amazon.com/lex/latest/dg/confidence-scores.html). You can only set the `enableModelImprovements` parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-enableModelImprovements).
	EnableModelImprovements pulumix.Input[*bool]
	// The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is `300`. Must be a number between 60 and 86400 (inclusive).
	IdleSessionTtlInSeconds pulumix.Input[*int]
	// A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.
	Intents pulumix.Input[[]*BotIntentArgs]
	// Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-locale). Default is `en-US`.
	Locale pulumix.Input[*string]
	// The name of the bot that you want to create, case sensitive. Must be between 2 and 50 characters in length.
	Name pulumix.Input[*string]
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-nluIntentConfidenceThreshold) This value requires `enableModelImprovements` to be set to `true` and the default is `0`. Must be a float between 0 and 1.
	NluIntentConfidenceThreshold pulumix.Input[*float64]
	// If you set the `processBehavior` element to `BUILD`, Amazon Lex builds the bot so that it can be run. If you set the element to `SAVE` Amazon Lex saves the bot, but doesn't build it. Default is `SAVE`.
	ProcessBehavior pulumix.Input[*string]
	// The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see [Available Voices](http://docs.aws.amazon.com/polly/latest/dg/voicelist.html) in the Amazon Polly Developer Guide.
	VoiceId pulumix.Input[*string]
}

func (BotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botArgs)(nil)).Elem()
}

type BotOutput struct{ *pulumi.OutputState }

func (BotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Bot)(nil)).Elem()
}

func (o BotOutput) ToBotOutput() BotOutput {
	return o
}

func (o BotOutput) ToBotOutputWithContext(ctx context.Context) BotOutput {
	return o
}

func (o BotOutput) ToOutput(ctx context.Context) pulumix.Output[Bot] {
	return pulumix.Output[Bot]{
		OutputState: o.OutputState,
	}
}

// The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.
func (o BotOutput) AbortStatement() pulumix.GPtrOutput[BotAbortStatement, BotAbortStatementOutput] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.GPtrOutput[BotAbortStatement, BotAbortStatementOutput] { return v.AbortStatement })
	unwrapped := pulumix.Flatten[*BotAbortStatement, pulumix.GPtrOutput[BotAbortStatement, BotAbortStatementOutput]](value)
	return pulumix.GPtrOutput[BotAbortStatement, BotAbortStatementOutput]{OutputState: unwrapped.OutputState}
}

func (o BotOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Checksum identifying the version of the bot that was created. The checksum is not
// included as an argument because the resource will add it automatically when updating the bot.
func (o BotOutput) Checksum() pulumix.Output[string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[string] { return v.Checksum })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the [Amazon Lex FAQ](https://aws.amazon.com/lex/faqs#data-security) and the [Amazon Lex PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-childDirected).
func (o BotOutput) ChildDirected() pulumix.Output[bool] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[bool] { return v.ChildDirected })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.
func (o BotOutput) ClarificationPrompt() pulumix.GPtrOutput[BotClarificationPrompt, BotClarificationPromptOutput] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.GPtrOutput[BotClarificationPrompt, BotClarificationPromptOutput] {
		return v.ClarificationPrompt
	})
	unwrapped := pulumix.Flatten[*BotClarificationPrompt, pulumix.GPtrOutput[BotClarificationPrompt, BotClarificationPromptOutput]](value)
	return pulumix.GPtrOutput[BotClarificationPrompt, BotClarificationPromptOutput]{OutputState: unwrapped.OutputState}
}

// Determines if a new bot version is created when the initial resource is created and on each update. Defaults to `false`.
func (o BotOutput) CreateVersion() pulumix.Output[*bool] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[*bool] { return v.CreateVersion })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The date when the bot version was created.
func (o BotOutput) CreatedDate() pulumix.Output[string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[string] { return v.CreatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description of the bot. Must be less than or equal to 200 characters in length.
func (o BotOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is `false`.
func (o BotOutput) DetectSentiment() pulumix.Output[*bool] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[*bool] { return v.DetectSentiment })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Set to `true` to enable access to natural language understanding improvements. When you set the `enableModelImprovements` parameter to true you can use the `nluIntentConfidenceThreshold` parameter to configure confidence scores. For more information, see [Confidence Scores](https://docs.aws.amazon.com/lex/latest/dg/confidence-scores.html). You can only set the `enableModelImprovements` parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-enableModelImprovements).
func (o BotOutput) EnableModelImprovements() pulumix.Output[*bool] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[*bool] { return v.EnableModelImprovements })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// If status is FAILED, Amazon Lex provides the reason that it failed to build the bot.
func (o BotOutput) FailureReason() pulumix.Output[string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[string] { return v.FailureReason })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is `300`. Must be a number between 60 and 86400 (inclusive).
func (o BotOutput) IdleSessionTtlInSeconds() pulumix.Output[*int] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[*int] { return v.IdleSessionTtlInSeconds })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.
func (o BotOutput) Intents() pulumix.GArrayOutput[BotIntent, BotIntentOutput] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.GArrayOutput[BotIntent, BotIntentOutput] { return v.Intents })
	unwrapped := pulumix.Flatten[[]BotIntent, pulumix.GArrayOutput[BotIntent, BotIntentOutput]](value)
	return pulumix.GArrayOutput[BotIntent, BotIntentOutput]{OutputState: unwrapped.OutputState}
}

// The date when the $LATEST version of this bot was updated.
func (o BotOutput) LastUpdatedDate() pulumix.Output[string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[string] { return v.LastUpdatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-locale). Default is `en-US`.
func (o BotOutput) Locale() pulumix.Output[*string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[*string] { return v.Locale })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the bot that you want to create, case sensitive. Must be between 2 and 50 characters in length.
func (o BotOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see [Amazon Lex Bot PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-nluIntentConfidenceThreshold) This value requires `enableModelImprovements` to be set to `true` and the default is `0`. Must be a float between 0 and 1.
func (o BotOutput) NluIntentConfidenceThreshold() pulumix.Output[*float64] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[*float64] { return v.NluIntentConfidenceThreshold })
	return pulumix.Flatten[*float64, pulumix.Output[*float64]](value)
}

// If you set the `processBehavior` element to `BUILD`, Amazon Lex builds the bot so that it can be run. If you set the element to `SAVE` Amazon Lex saves the bot, but doesn't build it. Default is `SAVE`.
func (o BotOutput) ProcessBehavior() pulumix.Output[*string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[*string] { return v.ProcessBehavior })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// When you send a request to create or update a bot, Amazon Lex sets the status response
// element to BUILDING. After Amazon Lex builds the bot, it sets status to READY. If Amazon Lex can't
// build the bot, it sets status to FAILED. Amazon Lex returns the reason for the failure in the
// failureReason response element.
func (o BotOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The version of the bot.
func (o BotOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see [Available Voices](http://docs.aws.amazon.com/polly/latest/dg/voicelist.html) in the Amazon Polly Developer Guide.
func (o BotOutput) VoiceId() pulumix.Output[string] {
	value := pulumix.Apply[Bot](o, func(v Bot) pulumix.Output[string] { return v.VoiceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(BotOutput{})
}
