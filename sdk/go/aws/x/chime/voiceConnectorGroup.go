// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chime

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by including VoiceConnectorItems in the request.
//
// You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.
type VoiceConnectorGroup struct {
	pulumi.CustomResourceState

	// The Amazon Chime Voice Connectors to route inbound calls to.
	Connectors pulumix.GArrayOutput[VoiceConnectorGroupConnector, VoiceConnectorGroupConnectorOutput] `pulumi:"connectors"`
	// The name of the Amazon Chime Voice Connector group.
	Name pulumix.Output[string] `pulumi:"name"`
}

// NewVoiceConnectorGroup registers a new resource with the given unique name, arguments, and options.
func NewVoiceConnectorGroup(ctx *pulumi.Context,
	name string, args *VoiceConnectorGroupArgs, opts ...pulumi.ResourceOption) (*VoiceConnectorGroup, error) {
	if args == nil {
		args = &VoiceConnectorGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VoiceConnectorGroup
	err := ctx.RegisterResource("aws:chime/voiceConnectorGroup:VoiceConnectorGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVoiceConnectorGroup gets an existing VoiceConnectorGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVoiceConnectorGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VoiceConnectorGroupState, opts ...pulumi.ResourceOption) (*VoiceConnectorGroup, error) {
	var resource VoiceConnectorGroup
	err := ctx.ReadResource("aws:chime/voiceConnectorGroup:VoiceConnectorGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VoiceConnectorGroup resources.
type voiceConnectorGroupState struct {
	// The Amazon Chime Voice Connectors to route inbound calls to.
	Connectors []VoiceConnectorGroupConnector `pulumi:"connectors"`
	// The name of the Amazon Chime Voice Connector group.
	Name *string `pulumi:"name"`
}

type VoiceConnectorGroupState struct {
	// The Amazon Chime Voice Connectors to route inbound calls to.
	Connectors pulumix.Input[[]*VoiceConnectorGroupConnectorArgs]
	// The name of the Amazon Chime Voice Connector group.
	Name pulumix.Input[*string]
}

func (VoiceConnectorGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorGroupState)(nil)).Elem()
}

type voiceConnectorGroupArgs struct {
	// The Amazon Chime Voice Connectors to route inbound calls to.
	Connectors []VoiceConnectorGroupConnector `pulumi:"connectors"`
	// The name of the Amazon Chime Voice Connector group.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a VoiceConnectorGroup resource.
type VoiceConnectorGroupArgs struct {
	// The Amazon Chime Voice Connectors to route inbound calls to.
	Connectors pulumix.Input[[]*VoiceConnectorGroupConnectorArgs]
	// The name of the Amazon Chime Voice Connector group.
	Name pulumix.Input[*string]
}

func (VoiceConnectorGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorGroupArgs)(nil)).Elem()
}

type VoiceConnectorGroupOutput struct{ *pulumi.OutputState }

func (VoiceConnectorGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorGroup)(nil)).Elem()
}

func (o VoiceConnectorGroupOutput) ToVoiceConnectorGroupOutput() VoiceConnectorGroupOutput {
	return o
}

func (o VoiceConnectorGroupOutput) ToVoiceConnectorGroupOutputWithContext(ctx context.Context) VoiceConnectorGroupOutput {
	return o
}

func (o VoiceConnectorGroupOutput) ToOutput(ctx context.Context) pulumix.Output[VoiceConnectorGroup] {
	return pulumix.Output[VoiceConnectorGroup]{
		OutputState: o.OutputState,
	}
}

// The Amazon Chime Voice Connectors to route inbound calls to.
func (o VoiceConnectorGroupOutput) Connectors() pulumix.GArrayOutput[VoiceConnectorGroupConnector, VoiceConnectorGroupConnectorOutput] {
	value := pulumix.Apply[VoiceConnectorGroup](o, func(v VoiceConnectorGroup) pulumix.GArrayOutput[VoiceConnectorGroupConnector, VoiceConnectorGroupConnectorOutput] {
		return v.Connectors
	})
	unwrapped := pulumix.Flatten[[]VoiceConnectorGroupConnector, pulumix.GArrayOutput[VoiceConnectorGroupConnector, VoiceConnectorGroupConnectorOutput]](value)
	return pulumix.GArrayOutput[VoiceConnectorGroupConnector, VoiceConnectorGroupConnectorOutput]{OutputState: unwrapped.OutputState}
}

// The name of the Amazon Chime Voice Connector group.
func (o VoiceConnectorGroupOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[VoiceConnectorGroup](o, func(v VoiceConnectorGroup) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(VoiceConnectorGroupOutput{})
}
