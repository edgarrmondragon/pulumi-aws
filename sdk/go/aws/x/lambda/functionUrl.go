// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Lambda function URL resource. A function URL is a dedicated HTTP(S) endpoint for a Lambda function.
//
// See the [AWS Lambda documentation](https://docs.aws.amazon.com/lambda/latest/dg/lambda-urls.html) for more information.
type FunctionUrl struct {
	pulumi.CustomResourceState

	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType pulumix.Output[string] `pulumi:"authorizationType"`
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors pulumix.GPtrOutput[FunctionUrlCors, FunctionUrlCorsOutput] `pulumi:"cors"`
	// The Amazon Resource Name (ARN) of the function.
	FunctionArn pulumix.Output[string] `pulumi:"functionArn"`
	// The name (or ARN) of the Lambda function.
	FunctionName pulumix.Output[string] `pulumi:"functionName"`
	// The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
	FunctionUrl pulumix.Output[string] `pulumi:"functionUrl"`
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode pulumix.Output[*string] `pulumi:"invokeMode"`
	// The alias name or `"$LATEST"`.
	Qualifier pulumix.Output[*string] `pulumi:"qualifier"`
	// A generated ID for the endpoint.
	UrlId pulumix.Output[string] `pulumi:"urlId"`
}

// NewFunctionUrl registers a new resource with the given unique name, arguments, and options.
func NewFunctionUrl(ctx *pulumi.Context,
	name string, args *FunctionUrlArgs, opts ...pulumi.ResourceOption) (*FunctionUrl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthorizationType == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizationType'")
	}
	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FunctionUrl
	err := ctx.RegisterResource("aws:lambda/functionUrl:FunctionUrl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionUrl gets an existing FunctionUrl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionUrl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionUrlState, opts ...pulumi.ResourceOption) (*FunctionUrl, error) {
	var resource FunctionUrl
	err := ctx.ReadResource("aws:lambda/functionUrl:FunctionUrl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionUrl resources.
type functionUrlState struct {
	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType *string `pulumi:"authorizationType"`
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors *FunctionUrlCors `pulumi:"cors"`
	// The Amazon Resource Name (ARN) of the function.
	FunctionArn *string `pulumi:"functionArn"`
	// The name (or ARN) of the Lambda function.
	FunctionName *string `pulumi:"functionName"`
	// The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
	FunctionUrl *string `pulumi:"functionUrl"`
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode *string `pulumi:"invokeMode"`
	// The alias name or `"$LATEST"`.
	Qualifier *string `pulumi:"qualifier"`
	// A generated ID for the endpoint.
	UrlId *string `pulumi:"urlId"`
}

type FunctionUrlState struct {
	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType pulumix.Input[*string]
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors pulumix.Input[*FunctionUrlCorsArgs]
	// The Amazon Resource Name (ARN) of the function.
	FunctionArn pulumix.Input[*string]
	// The name (or ARN) of the Lambda function.
	FunctionName pulumix.Input[*string]
	// The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
	FunctionUrl pulumix.Input[*string]
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode pulumix.Input[*string]
	// The alias name or `"$LATEST"`.
	Qualifier pulumix.Input[*string]
	// A generated ID for the endpoint.
	UrlId pulumix.Input[*string]
}

func (FunctionUrlState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionUrlState)(nil)).Elem()
}

type functionUrlArgs struct {
	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType string `pulumi:"authorizationType"`
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors *FunctionUrlCors `pulumi:"cors"`
	// The name (or ARN) of the Lambda function.
	FunctionName string `pulumi:"functionName"`
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode *string `pulumi:"invokeMode"`
	// The alias name or `"$LATEST"`.
	Qualifier *string `pulumi:"qualifier"`
}

// The set of arguments for constructing a FunctionUrl resource.
type FunctionUrlArgs struct {
	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType pulumix.Input[string]
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors pulumix.Input[*FunctionUrlCorsArgs]
	// The name (or ARN) of the Lambda function.
	FunctionName pulumix.Input[string]
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode pulumix.Input[*string]
	// The alias name or `"$LATEST"`.
	Qualifier pulumix.Input[*string]
}

func (FunctionUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionUrlArgs)(nil)).Elem()
}

type FunctionUrlOutput struct{ *pulumi.OutputState }

func (FunctionUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionUrl)(nil)).Elem()
}

func (o FunctionUrlOutput) ToFunctionUrlOutput() FunctionUrlOutput {
	return o
}

func (o FunctionUrlOutput) ToFunctionUrlOutputWithContext(ctx context.Context) FunctionUrlOutput {
	return o
}

func (o FunctionUrlOutput) ToOutput(ctx context.Context) pulumix.Output[FunctionUrl] {
	return pulumix.Output[FunctionUrl]{
		OutputState: o.OutputState,
	}
}

// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
func (o FunctionUrlOutput) AuthorizationType() pulumix.Output[string] {
	value := pulumix.Apply[FunctionUrl](o, func(v FunctionUrl) pulumix.Output[string] { return v.AuthorizationType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
func (o FunctionUrlOutput) Cors() pulumix.GPtrOutput[FunctionUrlCors, FunctionUrlCorsOutput] {
	value := pulumix.Apply[FunctionUrl](o, func(v FunctionUrl) pulumix.GPtrOutput[FunctionUrlCors, FunctionUrlCorsOutput] { return v.Cors })
	unwrapped := pulumix.Flatten[*FunctionUrlCors, pulumix.GPtrOutput[FunctionUrlCors, FunctionUrlCorsOutput]](value)
	return pulumix.GPtrOutput[FunctionUrlCors, FunctionUrlCorsOutput]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) of the function.
func (o FunctionUrlOutput) FunctionArn() pulumix.Output[string] {
	value := pulumix.Apply[FunctionUrl](o, func(v FunctionUrl) pulumix.Output[string] { return v.FunctionArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name (or ARN) of the Lambda function.
func (o FunctionUrlOutput) FunctionName() pulumix.Output[string] {
	value := pulumix.Apply[FunctionUrl](o, func(v FunctionUrl) pulumix.Output[string] { return v.FunctionName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
func (o FunctionUrlOutput) FunctionUrl() pulumix.Output[string] {
	value := pulumix.Apply[FunctionUrl](o, func(v FunctionUrl) pulumix.Output[string] { return v.FunctionUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
func (o FunctionUrlOutput) InvokeMode() pulumix.Output[*string] {
	value := pulumix.Apply[FunctionUrl](o, func(v FunctionUrl) pulumix.Output[*string] { return v.InvokeMode })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The alias name or `"$LATEST"`.
func (o FunctionUrlOutput) Qualifier() pulumix.Output[*string] {
	value := pulumix.Apply[FunctionUrl](o, func(v FunctionUrl) pulumix.Output[*string] { return v.Qualifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A generated ID for the endpoint.
func (o FunctionUrlOutput) UrlId() pulumix.Output[string] {
	value := pulumix.Apply[FunctionUrl](o, func(v FunctionUrl) pulumix.Output[string] { return v.UrlId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(FunctionUrlOutput{})
}
