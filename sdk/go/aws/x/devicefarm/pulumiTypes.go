// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devicefarm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DevicePoolRule struct {
	// The rule's stringified attribute. Valid values are: `APPIUM_VERSION`, `ARN`, `AVAILABILITY`, `FLEET_TYPE`, `FORM_FACTOR`, `INSTANCE_ARN`, `INSTANCE_LABELS`, `MANUFACTURER`, `MODEL`, `OS_VERSION`, `PLATFORM`, `REMOTE_ACCESS_ENABLED`, `REMOTE_DEBUG_ENABLED`.
	Attribute *string `pulumi:"attribute"`
	// Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute. Valid values are: `EQUALS`, `NOT_IN`, `IN`, `GREATER_THAN`, `GREATER_THAN_OR_EQUALS`, `LESS_THAN`, `LESS_THAN_OR_EQUALS`, `CONTAINS`.
	Operator *string `pulumi:"operator"`
	// The rule's value.
	Value *string `pulumi:"value"`
}

type DevicePoolRuleArgs struct {
	// The rule's stringified attribute. Valid values are: `APPIUM_VERSION`, `ARN`, `AVAILABILITY`, `FLEET_TYPE`, `FORM_FACTOR`, `INSTANCE_ARN`, `INSTANCE_LABELS`, `MANUFACTURER`, `MODEL`, `OS_VERSION`, `PLATFORM`, `REMOTE_ACCESS_ENABLED`, `REMOTE_DEBUG_ENABLED`.
	Attribute pulumix.Input[*string] `pulumi:"attribute"`
	// Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute. Valid values are: `EQUALS`, `NOT_IN`, `IN`, `GREATER_THAN`, `GREATER_THAN_OR_EQUALS`, `LESS_THAN`, `LESS_THAN_OR_EQUALS`, `CONTAINS`.
	Operator pulumix.Input[*string] `pulumi:"operator"`
	// The rule's value.
	Value pulumix.Input[*string] `pulumi:"value"`
}

func (DevicePoolRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePoolRule)(nil)).Elem()
}

func (i DevicePoolRuleArgs) ToDevicePoolRuleOutput() DevicePoolRuleOutput {
	return i.ToDevicePoolRuleOutputWithContext(context.Background())
}

func (i DevicePoolRuleArgs) ToDevicePoolRuleOutputWithContext(ctx context.Context) DevicePoolRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePoolRuleOutput)
}

func (i *DevicePoolRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*DevicePoolRuleArgs] {
	return pulumix.Val(i)
}

type DevicePoolRuleOutput struct{ *pulumi.OutputState }

func (DevicePoolRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePoolRule)(nil)).Elem()
}

func (o DevicePoolRuleOutput) ToDevicePoolRuleOutput() DevicePoolRuleOutput {
	return o
}

func (o DevicePoolRuleOutput) ToDevicePoolRuleOutputWithContext(ctx context.Context) DevicePoolRuleOutput {
	return o
}

func (o DevicePoolRuleOutput) ToOutput(ctx context.Context) pulumix.Output[DevicePoolRule] {
	return pulumix.Output[DevicePoolRule]{
		OutputState: o.OutputState,
	}
}

// The rule's stringified attribute. Valid values are: `APPIUM_VERSION`, `ARN`, `AVAILABILITY`, `FLEET_TYPE`, `FORM_FACTOR`, `INSTANCE_ARN`, `INSTANCE_LABELS`, `MANUFACTURER`, `MODEL`, `OS_VERSION`, `PLATFORM`, `REMOTE_ACCESS_ENABLED`, `REMOTE_DEBUG_ENABLED`.
func (o DevicePoolRuleOutput) Attribute() pulumix.Output[*string] {
	return pulumix.Apply[DevicePoolRule](o, func(v DevicePoolRule) *string { return v.Attribute })
}

// Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute. Valid values are: `EQUALS`, `NOT_IN`, `IN`, `GREATER_THAN`, `GREATER_THAN_OR_EQUALS`, `LESS_THAN`, `LESS_THAN_OR_EQUALS`, `CONTAINS`.
func (o DevicePoolRuleOutput) Operator() pulumix.Output[*string] {
	return pulumix.Apply[DevicePoolRule](o, func(v DevicePoolRule) *string { return v.Operator })
}

// The rule's value.
func (o DevicePoolRuleOutput) Value() pulumix.Output[*string] {
	return pulumix.Apply[DevicePoolRule](o, func(v DevicePoolRule) *string { return v.Value })
}

type TestGridProjectVpcConfig struct {
	// A list of VPC security group IDs in your Amazon VPC.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of VPC subnet IDs in your Amazon VPC.
	SubnetIds []string `pulumi:"subnetIds"`
	// The ID of the Amazon VPC.
	VpcId string `pulumi:"vpcId"`
}

type TestGridProjectVpcConfigArgs struct {
	// A list of VPC security group IDs in your Amazon VPC.
	SecurityGroupIds pulumix.Input[[]string] `pulumi:"securityGroupIds"`
	// A list of VPC subnet IDs in your Amazon VPC.
	SubnetIds pulumix.Input[[]string] `pulumi:"subnetIds"`
	// The ID of the Amazon VPC.
	VpcId pulumix.Input[string] `pulumi:"vpcId"`
}

func (TestGridProjectVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TestGridProjectVpcConfig)(nil)).Elem()
}

func (i TestGridProjectVpcConfigArgs) ToTestGridProjectVpcConfigOutput() TestGridProjectVpcConfigOutput {
	return i.ToTestGridProjectVpcConfigOutputWithContext(context.Background())
}

func (i TestGridProjectVpcConfigArgs) ToTestGridProjectVpcConfigOutputWithContext(ctx context.Context) TestGridProjectVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TestGridProjectVpcConfigOutput)
}

func (i *TestGridProjectVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*TestGridProjectVpcConfigArgs] {
	return pulumix.Val(i)
}

type TestGridProjectVpcConfigOutput struct{ *pulumi.OutputState }

func (TestGridProjectVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TestGridProjectVpcConfig)(nil)).Elem()
}

func (o TestGridProjectVpcConfigOutput) ToTestGridProjectVpcConfigOutput() TestGridProjectVpcConfigOutput {
	return o
}

func (o TestGridProjectVpcConfigOutput) ToTestGridProjectVpcConfigOutputWithContext(ctx context.Context) TestGridProjectVpcConfigOutput {
	return o
}

func (o TestGridProjectVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[TestGridProjectVpcConfig] {
	return pulumix.Output[TestGridProjectVpcConfig]{
		OutputState: o.OutputState,
	}
}

// A list of VPC security group IDs in your Amazon VPC.
func (o TestGridProjectVpcConfigOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[TestGridProjectVpcConfig](o, func(v TestGridProjectVpcConfig) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A list of VPC subnet IDs in your Amazon VPC.
func (o TestGridProjectVpcConfigOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[TestGridProjectVpcConfig](o, func(v TestGridProjectVpcConfig) []string { return v.SubnetIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The ID of the Amazon VPC.
func (o TestGridProjectVpcConfigOutput) VpcId() pulumix.Output[string] {
	return pulumix.Apply[TestGridProjectVpcConfig](o, func(v TestGridProjectVpcConfig) string { return v.VpcId })
}

func init() {
	pulumi.RegisterOutputType(DevicePoolRuleOutput{})
	pulumi.RegisterOutputType(TestGridProjectVpcConfigOutput{})
}
