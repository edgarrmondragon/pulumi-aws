// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides access to an AppConfig Configuration Profile.
func LookupConfigurationProfile(ctx *pulumi.Context, args *LookupConfigurationProfileArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationProfileResult
	err := ctx.Invoke("aws:appconfig/getConfigurationProfile:getConfigurationProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfigurationProfile.
type LookupConfigurationProfileArgs struct {
	// ID of the AppConfig application to which this configuration profile belongs.
	ApplicationId string `pulumi:"applicationId"`
	// ID of the Configuration Profile.
	ConfigurationProfileId string `pulumi:"configurationProfileId"`
	// Map of tags for the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getConfigurationProfile.
type LookupConfigurationProfileResult struct {
	ApplicationId string `pulumi:"applicationId"`
	// ARN of the Configuration Profile.
	Arn                    string `pulumi:"arn"`
	ConfigurationProfileId string `pulumi:"configurationProfileId"`
	// Description of the Configuration Profile.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Location URI of the Configuration Profile.
	LocationUri string `pulumi:"locationUri"`
	// Name of the Configuration Profile.
	Name string `pulumi:"name"`
	// ARN of an IAM role with permission to access the configuration at the specified location_uri.
	RetrievalRoleArn string `pulumi:"retrievalRoleArn"`
	// Map of tags for the resource.
	Tags map[string]string `pulumi:"tags"`
	// Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
	Type string `pulumi:"type"`
	// Nested list of methods for validating the configuration.
	Validators []GetConfigurationProfileValidator `pulumi:"validators"`
}

func LookupConfigurationProfileOutput(ctx *pulumi.Context, args LookupConfigurationProfileOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationProfileResultOutput {
	outputResult := pulumix.ApplyErr[*LookupConfigurationProfileArgs](args.ToOutput(), func(plainArgs *LookupConfigurationProfileArgs) (*LookupConfigurationProfileResult, error) {
		return LookupConfigurationProfile(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupConfigurationProfileResultOutput, *LookupConfigurationProfileResult](outputResult)
}

// A collection of arguments for invoking getConfigurationProfile.
type LookupConfigurationProfileOutputArgs struct {
	// ID of the AppConfig application to which this configuration profile belongs.
	ApplicationId pulumix.Input[string] `pulumi:"applicationId"`
	// ID of the Configuration Profile.
	ConfigurationProfileId pulumix.Input[string] `pulumi:"configurationProfileId"`
	// Map of tags for the resource.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupConfigurationProfileOutputArgs) ToOutput() pulumix.Output[*LookupConfigurationProfileArgs] {
	allArgs := pulumix.All(
		args.ApplicationId.ToOutput(context.Background()).AsAny(),
		args.ConfigurationProfileId.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupConfigurationProfileArgs {
		return &LookupConfigurationProfileArgs{
			ApplicationId:          resolvedArgs[0].(string),
			ConfigurationProfileId: resolvedArgs[1].(string),
			Tags:                   resolvedArgs[2].(map[string]string),
		}
	})
}

type LookupConfigurationProfileResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationProfileResult)(nil)).Elem()
}

func (o LookupConfigurationProfileResultOutput) ToOutput(context.Context) pulumix.Output[*LookupConfigurationProfileResult] {
	return pulumix.Output[*LookupConfigurationProfileResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupConfigurationProfileResultOutput) ApplicationId() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) string { return v.ApplicationId })
}

func (o LookupConfigurationProfileResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) string { return v.Arn })
}

func (o LookupConfigurationProfileResultOutput) ConfigurationProfileId() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) string { return v.ConfigurationProfileId })
}

func (o LookupConfigurationProfileResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) string { return v.Description })
}

func (o LookupConfigurationProfileResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) string { return v.Id })
}

func (o LookupConfigurationProfileResultOutput) LocationUri() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) string { return v.LocationUri })
}

func (o LookupConfigurationProfileResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) string { return v.Name })
}

func (o LookupConfigurationProfileResultOutput) RetrievalRoleArn() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) string { return v.RetrievalRoleArn })
}

func (o LookupConfigurationProfileResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupConfigurationProfileResultOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) string { return v.Type })
}

func (o LookupConfigurationProfileResultOutput) Validators() pulumix.GArrayOutput[GetConfigurationProfileValidator, GetConfigurationProfileValidatorOutput] {
	value := pulumix.Apply[*LookupConfigurationProfileResult](o, func(v *LookupConfigurationProfileResult) []GetConfigurationProfileValidator { return v.Validators })
	return pulumix.GArrayOutput[GetConfigurationProfileValidator, GetConfigurationProfileValidatorOutput]{
		OutputState: value.OutputState,
	}
}
