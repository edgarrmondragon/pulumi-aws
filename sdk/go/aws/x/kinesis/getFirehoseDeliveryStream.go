// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kinesis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get information about a Kinesis Firehose Delivery Stream for use in other resources.
//
// For more details, see the [Amazon Kinesis Firehose Documentation](https://aws.amazon.com/documentation/firehose/).
func LookupFirehoseDeliveryStream(ctx *pulumi.Context, args *LookupFirehoseDeliveryStreamArgs, opts ...pulumi.InvokeOption) (*LookupFirehoseDeliveryStreamResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFirehoseDeliveryStreamResult
	err := ctx.Invoke("aws:kinesis/getFirehoseDeliveryStream:getFirehoseDeliveryStream", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFirehoseDeliveryStream.
type LookupFirehoseDeliveryStreamArgs struct {
	// Name of the Kinesis Stream.
	Name string `pulumi:"name"`
}

// A collection of values returned by getFirehoseDeliveryStream.
type LookupFirehoseDeliveryStreamResult struct {
	// ARN of the Kinesis Stream (same as id).
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupFirehoseDeliveryStreamOutput(ctx *pulumi.Context, args LookupFirehoseDeliveryStreamOutputArgs, opts ...pulumi.InvokeOption) LookupFirehoseDeliveryStreamResultOutput {
	outputResult := pulumix.ApplyErr[*LookupFirehoseDeliveryStreamArgs](args.ToOutput(), func(plainArgs *LookupFirehoseDeliveryStreamArgs) (*LookupFirehoseDeliveryStreamResult, error) {
		return LookupFirehoseDeliveryStream(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupFirehoseDeliveryStreamResultOutput, *LookupFirehoseDeliveryStreamResult](outputResult)
}

// A collection of arguments for invoking getFirehoseDeliveryStream.
type LookupFirehoseDeliveryStreamOutputArgs struct {
	// Name of the Kinesis Stream.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args LookupFirehoseDeliveryStreamOutputArgs) ToOutput() pulumix.Output[*LookupFirehoseDeliveryStreamArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupFirehoseDeliveryStreamArgs {
		return &LookupFirehoseDeliveryStreamArgs{
			Name: resolvedArgs[0].(string),
		}
	})
}

type LookupFirehoseDeliveryStreamResultOutput struct{ *pulumi.OutputState }

func (LookupFirehoseDeliveryStreamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirehoseDeliveryStreamResult)(nil)).Elem()
}

func (o LookupFirehoseDeliveryStreamResultOutput) ToOutput(context.Context) pulumix.Output[*LookupFirehoseDeliveryStreamResult] {
	return pulumix.Output[*LookupFirehoseDeliveryStreamResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupFirehoseDeliveryStreamResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupFirehoseDeliveryStreamResult](o, func(v *LookupFirehoseDeliveryStreamResult) string { return v.Arn })
}

func (o LookupFirehoseDeliveryStreamResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupFirehoseDeliveryStreamResult](o, func(v *LookupFirehoseDeliveryStreamResult) string { return v.Id })
}

func (o LookupFirehoseDeliveryStreamResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupFirehoseDeliveryStreamResult](o, func(v *LookupFirehoseDeliveryStreamResult) string { return v.Name })
}
