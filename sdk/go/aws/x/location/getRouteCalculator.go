// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieve information about a Location Service Route Calculator.
func GetRouteCalculator(ctx *pulumi.Context, args *GetRouteCalculatorArgs, opts ...pulumi.InvokeOption) (*GetRouteCalculatorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRouteCalculatorResult
	err := ctx.Invoke("aws:location/getRouteCalculator:getRouteCalculator", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteCalculator.
type GetRouteCalculatorArgs struct {
	// Name of the route calculator resource.
	CalculatorName string `pulumi:"calculatorName"`
	// Key-value map of resource tags for the route calculator.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getRouteCalculator.
type GetRouteCalculatorResult struct {
	// ARN for the Route calculator resource. Use the ARN when you specify a resource across AWS.
	CalculatorArn  string `pulumi:"calculatorArn"`
	CalculatorName string `pulumi:"calculatorName"`
	// Timestamp for when the route calculator resource was created in ISO 8601 format.
	CreateTime string `pulumi:"createTime"`
	// Data provider of traffic and road network data.
	DataSource string `pulumi:"dataSource"`
	// Optional description of the route calculator resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Key-value map of resource tags for the route calculator.
	Tags map[string]string `pulumi:"tags"`
	// Timestamp for when the route calculator resource was last updated in ISO 8601 format.
	UpdateTime string `pulumi:"updateTime"`
}

func GetRouteCalculatorOutput(ctx *pulumi.Context, args GetRouteCalculatorOutputArgs, opts ...pulumi.InvokeOption) GetRouteCalculatorResultOutput {
	outputResult := pulumix.ApplyErr[*GetRouteCalculatorArgs](args.ToOutput(), func(plainArgs *GetRouteCalculatorArgs) (*GetRouteCalculatorResult, error) {
		return GetRouteCalculator(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetRouteCalculatorResultOutput, *GetRouteCalculatorResult](outputResult)
}

// A collection of arguments for invoking getRouteCalculator.
type GetRouteCalculatorOutputArgs struct {
	// Name of the route calculator resource.
	CalculatorName pulumix.Input[string] `pulumi:"calculatorName"`
	// Key-value map of resource tags for the route calculator.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetRouteCalculatorOutputArgs) ToOutput() pulumix.Output[*GetRouteCalculatorArgs] {
	allArgs := pulumix.All(
		args.CalculatorName.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetRouteCalculatorArgs {
		return &GetRouteCalculatorArgs{
			CalculatorName: resolvedArgs[0].(string),
			Tags:           resolvedArgs[1].(map[string]string),
		}
	})
}

type GetRouteCalculatorResultOutput struct{ *pulumi.OutputState }

func (GetRouteCalculatorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteCalculatorResult)(nil)).Elem()
}

func (o GetRouteCalculatorResultOutput) ToOutput(context.Context) pulumix.Output[*GetRouteCalculatorResult] {
	return pulumix.Output[*GetRouteCalculatorResult]{
		OutputState: o.OutputState,
	}
}

func (o GetRouteCalculatorResultOutput) CalculatorArn() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteCalculatorResult](o, func(v *GetRouteCalculatorResult) string { return v.CalculatorArn })
}

func (o GetRouteCalculatorResultOutput) CalculatorName() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteCalculatorResult](o, func(v *GetRouteCalculatorResult) string { return v.CalculatorName })
}

func (o GetRouteCalculatorResultOutput) CreateTime() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteCalculatorResult](o, func(v *GetRouteCalculatorResult) string { return v.CreateTime })
}

func (o GetRouteCalculatorResultOutput) DataSource() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteCalculatorResult](o, func(v *GetRouteCalculatorResult) string { return v.DataSource })
}

func (o GetRouteCalculatorResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteCalculatorResult](o, func(v *GetRouteCalculatorResult) string { return v.Description })
}

func (o GetRouteCalculatorResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteCalculatorResult](o, func(v *GetRouteCalculatorResult) string { return v.Id })
}

func (o GetRouteCalculatorResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetRouteCalculatorResult](o, func(v *GetRouteCalculatorResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetRouteCalculatorResultOutput) UpdateTime() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteCalculatorResult](o, func(v *GetRouteCalculatorResult) string { return v.UpdateTime })
}
