// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type PublicKey struct {
	pulumi.CustomResourceState

	// Internal value used by CloudFront to allow future updates to the public key configuration.
	CallerReference pulumix.Output[string] `pulumi:"callerReference"`
	// An optional comment about the public key.
	Comment pulumix.Output[*string] `pulumi:"comment"`
	// The encoded public key that you want to add to CloudFront to use with features like field-level encryption.
	EncodedKey pulumix.Output[string] `pulumi:"encodedKey"`
	// The current version of the public key. For example: `E2QWRUHAPOMQZL`.
	Etag pulumix.Output[string] `pulumi:"etag"`
	// The name for the public key. By default generated by this provider.
	Name pulumix.Output[string] `pulumi:"name"`
	// The name for the public key. Conflicts with `name`.
	//
	// **NOTE:** When setting `encodedKey` value, there needs a newline at the end of string. Otherwise, multiple runs of pulumi will want to recreate the `cloudfront.PublicKey` resource.
	NamePrefix pulumix.Output[string] `pulumi:"namePrefix"`
}

// NewPublicKey registers a new resource with the given unique name, arguments, and options.
func NewPublicKey(ctx *pulumi.Context,
	name string, args *PublicKeyArgs, opts ...pulumi.ResourceOption) (*PublicKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EncodedKey == nil {
		return nil, errors.New("invalid value for required argument 'EncodedKey'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublicKey
	err := ctx.RegisterResource("aws:cloudfront/publicKey:PublicKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicKey gets an existing PublicKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicKeyState, opts ...pulumi.ResourceOption) (*PublicKey, error) {
	var resource PublicKey
	err := ctx.ReadResource("aws:cloudfront/publicKey:PublicKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicKey resources.
type publicKeyState struct {
	// Internal value used by CloudFront to allow future updates to the public key configuration.
	CallerReference *string `pulumi:"callerReference"`
	// An optional comment about the public key.
	Comment *string `pulumi:"comment"`
	// The encoded public key that you want to add to CloudFront to use with features like field-level encryption.
	EncodedKey *string `pulumi:"encodedKey"`
	// The current version of the public key. For example: `E2QWRUHAPOMQZL`.
	Etag *string `pulumi:"etag"`
	// The name for the public key. By default generated by this provider.
	Name *string `pulumi:"name"`
	// The name for the public key. Conflicts with `name`.
	//
	// **NOTE:** When setting `encodedKey` value, there needs a newline at the end of string. Otherwise, multiple runs of pulumi will want to recreate the `cloudfront.PublicKey` resource.
	NamePrefix *string `pulumi:"namePrefix"`
}

type PublicKeyState struct {
	// Internal value used by CloudFront to allow future updates to the public key configuration.
	CallerReference pulumix.Input[*string]
	// An optional comment about the public key.
	Comment pulumix.Input[*string]
	// The encoded public key that you want to add to CloudFront to use with features like field-level encryption.
	EncodedKey pulumix.Input[*string]
	// The current version of the public key. For example: `E2QWRUHAPOMQZL`.
	Etag pulumix.Input[*string]
	// The name for the public key. By default generated by this provider.
	Name pulumix.Input[*string]
	// The name for the public key. Conflicts with `name`.
	//
	// **NOTE:** When setting `encodedKey` value, there needs a newline at the end of string. Otherwise, multiple runs of pulumi will want to recreate the `cloudfront.PublicKey` resource.
	NamePrefix pulumix.Input[*string]
}

func (PublicKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicKeyState)(nil)).Elem()
}

type publicKeyArgs struct {
	// An optional comment about the public key.
	Comment *string `pulumi:"comment"`
	// The encoded public key that you want to add to CloudFront to use with features like field-level encryption.
	EncodedKey string `pulumi:"encodedKey"`
	// The name for the public key. By default generated by this provider.
	Name *string `pulumi:"name"`
	// The name for the public key. Conflicts with `name`.
	//
	// **NOTE:** When setting `encodedKey` value, there needs a newline at the end of string. Otherwise, multiple runs of pulumi will want to recreate the `cloudfront.PublicKey` resource.
	NamePrefix *string `pulumi:"namePrefix"`
}

// The set of arguments for constructing a PublicKey resource.
type PublicKeyArgs struct {
	// An optional comment about the public key.
	Comment pulumix.Input[*string]
	// The encoded public key that you want to add to CloudFront to use with features like field-level encryption.
	EncodedKey pulumix.Input[string]
	// The name for the public key. By default generated by this provider.
	Name pulumix.Input[*string]
	// The name for the public key. Conflicts with `name`.
	//
	// **NOTE:** When setting `encodedKey` value, there needs a newline at the end of string. Otherwise, multiple runs of pulumi will want to recreate the `cloudfront.PublicKey` resource.
	NamePrefix pulumix.Input[*string]
}

func (PublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicKeyArgs)(nil)).Elem()
}

type PublicKeyOutput struct{ *pulumi.OutputState }

func (PublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicKey)(nil)).Elem()
}

func (o PublicKeyOutput) ToPublicKeyOutput() PublicKeyOutput {
	return o
}

func (o PublicKeyOutput) ToPublicKeyOutputWithContext(ctx context.Context) PublicKeyOutput {
	return o
}

func (o PublicKeyOutput) ToOutput(ctx context.Context) pulumix.Output[PublicKey] {
	return pulumix.Output[PublicKey]{
		OutputState: o.OutputState,
	}
}

// Internal value used by CloudFront to allow future updates to the public key configuration.
func (o PublicKeyOutput) CallerReference() pulumix.Output[string] {
	value := pulumix.Apply[PublicKey](o, func(v PublicKey) pulumix.Output[string] { return v.CallerReference })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An optional comment about the public key.
func (o PublicKeyOutput) Comment() pulumix.Output[*string] {
	value := pulumix.Apply[PublicKey](o, func(v PublicKey) pulumix.Output[*string] { return v.Comment })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The encoded public key that you want to add to CloudFront to use with features like field-level encryption.
func (o PublicKeyOutput) EncodedKey() pulumix.Output[string] {
	value := pulumix.Apply[PublicKey](o, func(v PublicKey) pulumix.Output[string] { return v.EncodedKey })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The current version of the public key. For example: `E2QWRUHAPOMQZL`.
func (o PublicKeyOutput) Etag() pulumix.Output[string] {
	value := pulumix.Apply[PublicKey](o, func(v PublicKey) pulumix.Output[string] { return v.Etag })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name for the public key. By default generated by this provider.
func (o PublicKeyOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[PublicKey](o, func(v PublicKey) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name for the public key. Conflicts with `name`.
//
// **NOTE:** When setting `encodedKey` value, there needs a newline at the end of string. Otherwise, multiple runs of pulumi will want to recreate the `cloudfront.PublicKey` resource.
func (o PublicKeyOutput) NamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[PublicKey](o, func(v PublicKey) pulumix.Output[string] { return v.NamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(PublicKeyOutput{})
}
