// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an SES receipt rule set resource.
type ReceiptRuleSet struct {
	pulumi.CustomResourceState

	// SES receipt rule set ARN.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Name of the rule set.
	RuleSetName pulumix.Output[string] `pulumi:"ruleSetName"`
}

// NewReceiptRuleSet registers a new resource with the given unique name, arguments, and options.
func NewReceiptRuleSet(ctx *pulumi.Context,
	name string, args *ReceiptRuleSetArgs, opts ...pulumi.ResourceOption) (*ReceiptRuleSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuleSetName == nil {
		return nil, errors.New("invalid value for required argument 'RuleSetName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReceiptRuleSet
	err := ctx.RegisterResource("aws:ses/receiptRuleSet:ReceiptRuleSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReceiptRuleSet gets an existing ReceiptRuleSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReceiptRuleSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReceiptRuleSetState, opts ...pulumi.ResourceOption) (*ReceiptRuleSet, error) {
	var resource ReceiptRuleSet
	err := ctx.ReadResource("aws:ses/receiptRuleSet:ReceiptRuleSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReceiptRuleSet resources.
type receiptRuleSetState struct {
	// SES receipt rule set ARN.
	Arn *string `pulumi:"arn"`
	// Name of the rule set.
	RuleSetName *string `pulumi:"ruleSetName"`
}

type ReceiptRuleSetState struct {
	// SES receipt rule set ARN.
	Arn pulumix.Input[*string]
	// Name of the rule set.
	RuleSetName pulumix.Input[*string]
}

func (ReceiptRuleSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptRuleSetState)(nil)).Elem()
}

type receiptRuleSetArgs struct {
	// Name of the rule set.
	RuleSetName string `pulumi:"ruleSetName"`
}

// The set of arguments for constructing a ReceiptRuleSet resource.
type ReceiptRuleSetArgs struct {
	// Name of the rule set.
	RuleSetName pulumix.Input[string]
}

func (ReceiptRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptRuleSetArgs)(nil)).Elem()
}

type ReceiptRuleSetOutput struct{ *pulumi.OutputState }

func (ReceiptRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleSet)(nil)).Elem()
}

func (o ReceiptRuleSetOutput) ToReceiptRuleSetOutput() ReceiptRuleSetOutput {
	return o
}

func (o ReceiptRuleSetOutput) ToReceiptRuleSetOutputWithContext(ctx context.Context) ReceiptRuleSetOutput {
	return o
}

func (o ReceiptRuleSetOutput) ToOutput(ctx context.Context) pulumix.Output[ReceiptRuleSet] {
	return pulumix.Output[ReceiptRuleSet]{
		OutputState: o.OutputState,
	}
}

// SES receipt rule set ARN.
func (o ReceiptRuleSetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ReceiptRuleSet](o, func(v ReceiptRuleSet) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the rule set.
func (o ReceiptRuleSetOutput) RuleSetName() pulumix.Output[string] {
	value := pulumix.Apply[ReceiptRuleSet](o, func(v ReceiptRuleSet) pulumix.Output[string] { return v.RuleSetName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ReceiptRuleSetOutput{})
}
