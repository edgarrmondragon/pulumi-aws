// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Associate an Amazon FSx file system with the FSx File Gateway. After the association process is complete, the file shares on the Amazon FSx file system are available for access through the gateway. This operation only supports the FSx File Gateway type.
//
// [FSx File Gateway requirements](https://docs.aws.amazon.com/filegateway/latest/filefsxw/Requirements.html).
type FileSystemAssociation struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the newly created file system association.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the storage used for the audit logs.
	AuditDestinationArn pulumix.Output[*string] `pulumi:"auditDestinationArn"`
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes pulumix.GPtrOutput[FileSystemAssociationCacheAttributes, FileSystemAssociationCacheAttributesOutput] `pulumi:"cacheAttributes"`
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn pulumix.Output[string] `pulumi:"gatewayArn"`
	// The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
	LocationArn pulumix.Output[string] `pulumi:"locationArn"`
	// The password of the user credential.
	Password pulumix.Output[string] `pulumi:"password"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
	Username pulumix.Output[string] `pulumi:"username"`
}

// NewFileSystemAssociation registers a new resource with the given unique name, arguments, and options.
func NewFileSystemAssociation(ctx *pulumi.Context,
	name string, args *FileSystemAssociationArgs, opts ...pulumi.ResourceOption) (*FileSystemAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayArn == nil {
		return nil, errors.New("invalid value for required argument 'GatewayArn'")
	}
	if args.LocationArn == nil {
		return nil, errors.New("invalid value for required argument 'LocationArn'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		untypedSecretValue := pulumi.ToSecret(args.Password.ToOutput(ctx.Context()).Untyped())
		args.Password = pulumix.MustConvertTyped[string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FileSystemAssociation
	err := ctx.RegisterResource("aws:storagegateway/fileSystemAssociation:FileSystemAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFileSystemAssociation gets an existing FileSystemAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFileSystemAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FileSystemAssociationState, opts ...pulumi.ResourceOption) (*FileSystemAssociation, error) {
	var resource FileSystemAssociation
	err := ctx.ReadResource("aws:storagegateway/fileSystemAssociation:FileSystemAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FileSystemAssociation resources.
type fileSystemAssociationState struct {
	// Amazon Resource Name (ARN) of the newly created file system association.
	Arn *string `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the storage used for the audit logs.
	AuditDestinationArn *string `pulumi:"auditDestinationArn"`
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes *FileSystemAssociationCacheAttributes `pulumi:"cacheAttributes"`
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn *string `pulumi:"gatewayArn"`
	// The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
	LocationArn *string `pulumi:"locationArn"`
	// The password of the user credential.
	Password *string `pulumi:"password"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
	Username *string `pulumi:"username"`
}

type FileSystemAssociationState struct {
	// Amazon Resource Name (ARN) of the newly created file system association.
	Arn pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the storage used for the audit logs.
	AuditDestinationArn pulumix.Input[*string]
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes pulumix.Input[*FileSystemAssociationCacheAttributesArgs]
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
	LocationArn pulumix.Input[*string]
	// The password of the user credential.
	Password pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
	Username pulumix.Input[*string]
}

func (FileSystemAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*fileSystemAssociationState)(nil)).Elem()
}

type fileSystemAssociationArgs struct {
	// The Amazon Resource Name (ARN) of the storage used for the audit logs.
	AuditDestinationArn *string `pulumi:"auditDestinationArn"`
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes *FileSystemAssociationCacheAttributes `pulumi:"cacheAttributes"`
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn string `pulumi:"gatewayArn"`
	// The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
	LocationArn string `pulumi:"locationArn"`
	// The password of the user credential.
	Password string `pulumi:"password"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a FileSystemAssociation resource.
type FileSystemAssociationArgs struct {
	// The Amazon Resource Name (ARN) of the storage used for the audit logs.
	AuditDestinationArn pulumix.Input[*string]
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes pulumix.Input[*FileSystemAssociationCacheAttributesArgs]
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn pulumix.Input[string]
	// The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
	LocationArn pulumix.Input[string]
	// The password of the user credential.
	Password pulumix.Input[string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
	Username pulumix.Input[string]
}

func (FileSystemAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fileSystemAssociationArgs)(nil)).Elem()
}

type FileSystemAssociationOutput struct{ *pulumi.OutputState }

func (FileSystemAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemAssociation)(nil)).Elem()
}

func (o FileSystemAssociationOutput) ToFileSystemAssociationOutput() FileSystemAssociationOutput {
	return o
}

func (o FileSystemAssociationOutput) ToFileSystemAssociationOutputWithContext(ctx context.Context) FileSystemAssociationOutput {
	return o
}

func (o FileSystemAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[FileSystemAssociation] {
	return pulumix.Output[FileSystemAssociation]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the newly created file system association.
func (o FileSystemAssociationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[FileSystemAssociation](o, func(v FileSystemAssociation) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the storage used for the audit logs.
func (o FileSystemAssociationOutput) AuditDestinationArn() pulumix.Output[*string] {
	value := pulumix.Apply[FileSystemAssociation](o, func(v FileSystemAssociation) pulumix.Output[*string] { return v.AuditDestinationArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Refresh cache information. see Cache Attributes for more details.
func (o FileSystemAssociationOutput) CacheAttributes() pulumix.GPtrOutput[FileSystemAssociationCacheAttributes, FileSystemAssociationCacheAttributesOutput] {
	value := pulumix.Apply[FileSystemAssociation](o, func(v FileSystemAssociation) pulumix.GPtrOutput[FileSystemAssociationCacheAttributes, FileSystemAssociationCacheAttributesOutput] {
		return v.CacheAttributes
	})
	unwrapped := pulumix.Flatten[*FileSystemAssociationCacheAttributes, pulumix.GPtrOutput[FileSystemAssociationCacheAttributes, FileSystemAssociationCacheAttributesOutput]](value)
	return pulumix.GPtrOutput[FileSystemAssociationCacheAttributes, FileSystemAssociationCacheAttributesOutput]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) of the gateway.
func (o FileSystemAssociationOutput) GatewayArn() pulumix.Output[string] {
	value := pulumix.Apply[FileSystemAssociation](o, func(v FileSystemAssociation) pulumix.Output[string] { return v.GatewayArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
func (o FileSystemAssociationOutput) LocationArn() pulumix.Output[string] {
	value := pulumix.Apply[FileSystemAssociation](o, func(v FileSystemAssociation) pulumix.Output[string] { return v.LocationArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The password of the user credential.
func (o FileSystemAssociationOutput) Password() pulumix.Output[string] {
	value := pulumix.Apply[FileSystemAssociation](o, func(v FileSystemAssociation) pulumix.Output[string] { return v.Password })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FileSystemAssociationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[FileSystemAssociation](o, func(v FileSystemAssociation) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FileSystemAssociationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[FileSystemAssociation](o, func(v FileSystemAssociation) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
func (o FileSystemAssociationOutput) Username() pulumix.Output[string] {
	value := pulumix.Apply[FileSystemAssociation](o, func(v FileSystemAssociation) pulumix.Output[string] { return v.Username })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(FileSystemAssociationOutput{})
}
