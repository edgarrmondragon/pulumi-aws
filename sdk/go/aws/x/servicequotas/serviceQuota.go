// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicequotas

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an individual Service Quota.
//
// > **NOTE:** Global quotas apply to all AWS regions, but can only be accessed in `us-east-1` in the Commercial partition or `us-gov-west-1` in the GovCloud partition. In other regions, the AWS API will return the error `The request failed because the specified service does not exist.`
type ServiceQuota struct {
	pulumi.CustomResourceState

	// Whether the service quota can be increased.
	Adjustable pulumix.Output[bool] `pulumi:"adjustable"`
	// Amazon Resource Name (ARN) of the service quota.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Default value of the service quota.
	DefaultValue pulumix.Output[float64] `pulumi:"defaultValue"`
	// Code of the service quota to track. For example: `L-F678F1CE`. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html).
	QuotaCode pulumix.Output[string] `pulumi:"quotaCode"`
	// Name of the quota.
	QuotaName     pulumix.Output[string] `pulumi:"quotaName"`
	RequestId     pulumix.Output[string] `pulumi:"requestId"`
	RequestStatus pulumix.Output[string] `pulumi:"requestStatus"`
	// Code of the service to track. For example: `vpc`. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
	ServiceCode pulumix.Output[string] `pulumi:"serviceCode"`
	// Name of the service.
	ServiceName pulumix.Output[string] `pulumi:"serviceName"`
	// Information about the measurement.
	UsageMetrics pulumix.GArrayOutput[ServiceQuotaUsageMetric, ServiceQuotaUsageMetricOutput] `pulumi:"usageMetrics"`
	// Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
	Value pulumix.Output[float64] `pulumi:"value"`
}

// NewServiceQuota registers a new resource with the given unique name, arguments, and options.
func NewServiceQuota(ctx *pulumi.Context,
	name string, args *ServiceQuotaArgs, opts ...pulumi.ResourceOption) (*ServiceQuota, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.QuotaCode == nil {
		return nil, errors.New("invalid value for required argument 'QuotaCode'")
	}
	if args.ServiceCode == nil {
		return nil, errors.New("invalid value for required argument 'ServiceCode'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceQuota
	err := ctx.RegisterResource("aws:servicequotas/serviceQuota:ServiceQuota", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceQuota gets an existing ServiceQuota resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceQuota(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceQuotaState, opts ...pulumi.ResourceOption) (*ServiceQuota, error) {
	var resource ServiceQuota
	err := ctx.ReadResource("aws:servicequotas/serviceQuota:ServiceQuota", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceQuota resources.
type serviceQuotaState struct {
	// Whether the service quota can be increased.
	Adjustable *bool `pulumi:"adjustable"`
	// Amazon Resource Name (ARN) of the service quota.
	Arn *string `pulumi:"arn"`
	// Default value of the service quota.
	DefaultValue *float64 `pulumi:"defaultValue"`
	// Code of the service quota to track. For example: `L-F678F1CE`. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html).
	QuotaCode *string `pulumi:"quotaCode"`
	// Name of the quota.
	QuotaName     *string `pulumi:"quotaName"`
	RequestId     *string `pulumi:"requestId"`
	RequestStatus *string `pulumi:"requestStatus"`
	// Code of the service to track. For example: `vpc`. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
	ServiceCode *string `pulumi:"serviceCode"`
	// Name of the service.
	ServiceName *string `pulumi:"serviceName"`
	// Information about the measurement.
	UsageMetrics []ServiceQuotaUsageMetric `pulumi:"usageMetrics"`
	// Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
	Value *float64 `pulumi:"value"`
}

type ServiceQuotaState struct {
	// Whether the service quota can be increased.
	Adjustable pulumix.Input[*bool]
	// Amazon Resource Name (ARN) of the service quota.
	Arn pulumix.Input[*string]
	// Default value of the service quota.
	DefaultValue pulumix.Input[*float64]
	// Code of the service quota to track. For example: `L-F678F1CE`. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html).
	QuotaCode pulumix.Input[*string]
	// Name of the quota.
	QuotaName     pulumix.Input[*string]
	RequestId     pulumix.Input[*string]
	RequestStatus pulumix.Input[*string]
	// Code of the service to track. For example: `vpc`. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
	ServiceCode pulumix.Input[*string]
	// Name of the service.
	ServiceName pulumix.Input[*string]
	// Information about the measurement.
	UsageMetrics pulumix.Input[[]*ServiceQuotaUsageMetricArgs]
	// Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
	Value pulumix.Input[*float64]
}

func (ServiceQuotaState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceQuotaState)(nil)).Elem()
}

type serviceQuotaArgs struct {
	// Code of the service quota to track. For example: `L-F678F1CE`. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html).
	QuotaCode string `pulumi:"quotaCode"`
	// Code of the service to track. For example: `vpc`. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
	ServiceCode string `pulumi:"serviceCode"`
	// Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
	Value float64 `pulumi:"value"`
}

// The set of arguments for constructing a ServiceQuota resource.
type ServiceQuotaArgs struct {
	// Code of the service quota to track. For example: `L-F678F1CE`. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html).
	QuotaCode pulumix.Input[string]
	// Code of the service to track. For example: `vpc`. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
	ServiceCode pulumix.Input[string]
	// Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
	Value pulumix.Input[float64]
}

func (ServiceQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceQuotaArgs)(nil)).Elem()
}

type ServiceQuotaOutput struct{ *pulumi.OutputState }

func (ServiceQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceQuota)(nil)).Elem()
}

func (o ServiceQuotaOutput) ToServiceQuotaOutput() ServiceQuotaOutput {
	return o
}

func (o ServiceQuotaOutput) ToServiceQuotaOutputWithContext(ctx context.Context) ServiceQuotaOutput {
	return o
}

func (o ServiceQuotaOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceQuota] {
	return pulumix.Output[ServiceQuota]{
		OutputState: o.OutputState,
	}
}

// Whether the service quota can be increased.
func (o ServiceQuotaOutput) Adjustable() pulumix.Output[bool] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[bool] { return v.Adjustable })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Amazon Resource Name (ARN) of the service quota.
func (o ServiceQuotaOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Default value of the service quota.
func (o ServiceQuotaOutput) DefaultValue() pulumix.Output[float64] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[float64] { return v.DefaultValue })
	return pulumix.Flatten[float64, pulumix.Output[float64]](value)
}

// Code of the service quota to track. For example: `L-F678F1CE`. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html).
func (o ServiceQuotaOutput) QuotaCode() pulumix.Output[string] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[string] { return v.QuotaCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the quota.
func (o ServiceQuotaOutput) QuotaName() pulumix.Output[string] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[string] { return v.QuotaName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o ServiceQuotaOutput) RequestId() pulumix.Output[string] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[string] { return v.RequestId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o ServiceQuotaOutput) RequestStatus() pulumix.Output[string] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[string] { return v.RequestStatus })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Code of the service to track. For example: `vpc`. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
func (o ServiceQuotaOutput) ServiceCode() pulumix.Output[string] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[string] { return v.ServiceCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the service.
func (o ServiceQuotaOutput) ServiceName() pulumix.Output[string] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[string] { return v.ServiceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Information about the measurement.
func (o ServiceQuotaOutput) UsageMetrics() pulumix.GArrayOutput[ServiceQuotaUsageMetric, ServiceQuotaUsageMetricOutput] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.GArrayOutput[ServiceQuotaUsageMetric, ServiceQuotaUsageMetricOutput] {
		return v.UsageMetrics
	})
	unwrapped := pulumix.Flatten[[]ServiceQuotaUsageMetric, pulumix.GArrayOutput[ServiceQuotaUsageMetric, ServiceQuotaUsageMetricOutput]](value)
	return pulumix.GArrayOutput[ServiceQuotaUsageMetric, ServiceQuotaUsageMetricOutput]{OutputState: unwrapped.OutputState}
}

// Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
func (o ServiceQuotaOutput) Value() pulumix.Output[float64] {
	value := pulumix.Apply[ServiceQuota](o, func(v ServiceQuota) pulumix.Output[float64] { return v.Value })
	return pulumix.Flatten[float64, pulumix.Output[float64]](value)
}

func init() {
	pulumi.RegisterOutputType(ServiceQuotaOutput{})
}
