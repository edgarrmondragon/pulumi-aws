// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Associates a transit gateway Connect peer with a device, and optionally, with a link.
// If you specify a link, it must be associated with the specified device.
type TransitGatewayConnectPeerAssociation struct {
	pulumi.CustomResourceState

	// The ID of the device.
	DeviceId pulumix.Output[string] `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId pulumix.Output[string] `pulumi:"globalNetworkId"`
	// The ID of the link.
	LinkId pulumix.Output[*string] `pulumi:"linkId"`
	// The Amazon Resource Name (ARN) of the Connect peer.
	TransitGatewayConnectPeerArn pulumix.Output[string] `pulumi:"transitGatewayConnectPeerArn"`
}

// NewTransitGatewayConnectPeerAssociation registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayConnectPeerAssociation(ctx *pulumi.Context,
	name string, args *TransitGatewayConnectPeerAssociationArgs, opts ...pulumi.ResourceOption) (*TransitGatewayConnectPeerAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeviceId == nil {
		return nil, errors.New("invalid value for required argument 'DeviceId'")
	}
	if args.GlobalNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'GlobalNetworkId'")
	}
	if args.TransitGatewayConnectPeerArn == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayConnectPeerArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransitGatewayConnectPeerAssociation
	err := ctx.RegisterResource("aws:networkmanager/transitGatewayConnectPeerAssociation:TransitGatewayConnectPeerAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayConnectPeerAssociation gets an existing TransitGatewayConnectPeerAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayConnectPeerAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayConnectPeerAssociationState, opts ...pulumi.ResourceOption) (*TransitGatewayConnectPeerAssociation, error) {
	var resource TransitGatewayConnectPeerAssociation
	err := ctx.ReadResource("aws:networkmanager/transitGatewayConnectPeerAssociation:TransitGatewayConnectPeerAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayConnectPeerAssociation resources.
type transitGatewayConnectPeerAssociationState struct {
	// The ID of the device.
	DeviceId *string `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId *string `pulumi:"globalNetworkId"`
	// The ID of the link.
	LinkId *string `pulumi:"linkId"`
	// The Amazon Resource Name (ARN) of the Connect peer.
	TransitGatewayConnectPeerArn *string `pulumi:"transitGatewayConnectPeerArn"`
}

type TransitGatewayConnectPeerAssociationState struct {
	// The ID of the device.
	DeviceId pulumix.Input[*string]
	// The ID of the global network.
	GlobalNetworkId pulumix.Input[*string]
	// The ID of the link.
	LinkId pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the Connect peer.
	TransitGatewayConnectPeerArn pulumix.Input[*string]
}

func (TransitGatewayConnectPeerAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayConnectPeerAssociationState)(nil)).Elem()
}

type transitGatewayConnectPeerAssociationArgs struct {
	// The ID of the device.
	DeviceId string `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// The ID of the link.
	LinkId *string `pulumi:"linkId"`
	// The Amazon Resource Name (ARN) of the Connect peer.
	TransitGatewayConnectPeerArn string `pulumi:"transitGatewayConnectPeerArn"`
}

// The set of arguments for constructing a TransitGatewayConnectPeerAssociation resource.
type TransitGatewayConnectPeerAssociationArgs struct {
	// The ID of the device.
	DeviceId pulumix.Input[string]
	// The ID of the global network.
	GlobalNetworkId pulumix.Input[string]
	// The ID of the link.
	LinkId pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the Connect peer.
	TransitGatewayConnectPeerArn pulumix.Input[string]
}

func (TransitGatewayConnectPeerAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayConnectPeerAssociationArgs)(nil)).Elem()
}

type TransitGatewayConnectPeerAssociationOutput struct{ *pulumi.OutputState }

func (TransitGatewayConnectPeerAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayConnectPeerAssociation)(nil)).Elem()
}

func (o TransitGatewayConnectPeerAssociationOutput) ToTransitGatewayConnectPeerAssociationOutput() TransitGatewayConnectPeerAssociationOutput {
	return o
}

func (o TransitGatewayConnectPeerAssociationOutput) ToTransitGatewayConnectPeerAssociationOutputWithContext(ctx context.Context) TransitGatewayConnectPeerAssociationOutput {
	return o
}

func (o TransitGatewayConnectPeerAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[TransitGatewayConnectPeerAssociation] {
	return pulumix.Output[TransitGatewayConnectPeerAssociation]{
		OutputState: o.OutputState,
	}
}

// The ID of the device.
func (o TransitGatewayConnectPeerAssociationOutput) DeviceId() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayConnectPeerAssociation](o, func(v TransitGatewayConnectPeerAssociation) pulumix.Output[string] { return v.DeviceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the global network.
func (o TransitGatewayConnectPeerAssociationOutput) GlobalNetworkId() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayConnectPeerAssociation](o, func(v TransitGatewayConnectPeerAssociation) pulumix.Output[string] { return v.GlobalNetworkId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the link.
func (o TransitGatewayConnectPeerAssociationOutput) LinkId() pulumix.Output[*string] {
	value := pulumix.Apply[TransitGatewayConnectPeerAssociation](o, func(v TransitGatewayConnectPeerAssociation) pulumix.Output[*string] { return v.LinkId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Amazon Resource Name (ARN) of the Connect peer.
func (o TransitGatewayConnectPeerAssociationOutput) TransitGatewayConnectPeerArn() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayConnectPeerAssociation](o, func(v TransitGatewayConnectPeerAssociation) pulumix.Output[string] {
		return v.TransitGatewayConnectPeerArn
	})
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(TransitGatewayConnectPeerAssociationOutput{})
}
