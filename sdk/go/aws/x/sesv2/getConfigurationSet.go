// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sesv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS SESv2 (Simple Email V2) Configuration Set.
func LookupConfigurationSet(ctx *pulumi.Context, args *LookupConfigurationSetArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationSetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationSetResult
	err := ctx.Invoke("aws:sesv2/getConfigurationSet:getConfigurationSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfigurationSet.
type LookupConfigurationSetArgs struct {
	// The name of the configuration set.
	ConfigurationSetName string `pulumi:"configurationSetName"`
	// Key-value map of resource tags for the container recipe.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getConfigurationSet.
type LookupConfigurationSetResult struct {
	Arn                  string `pulumi:"arn"`
	ConfigurationSetName string `pulumi:"configurationSetName"`
	// An object that defines the dedicated IP pool that is used to send emails that you send using the configuration set.
	DeliveryOptions []GetConfigurationSetDeliveryOption `pulumi:"deliveryOptions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
	ReputationOptions []GetConfigurationSetReputationOption `pulumi:"reputationOptions"`
	// An object that defines whether or not Amazon SES can send email that you send using the configuration set.
	SendingOptions []GetConfigurationSetSendingOption `pulumi:"sendingOptions"`
	// An object that contains information about the suppression list preferences for your account.
	SuppressionOptions []GetConfigurationSetSuppressionOption `pulumi:"suppressionOptions"`
	// Key-value map of resource tags for the container recipe.
	Tags map[string]string `pulumi:"tags"`
	// An object that defines the open and click tracking options for emails that you send using the configuration set.
	TrackingOptions []GetConfigurationSetTrackingOption `pulumi:"trackingOptions"`
	// An object that contains information about the VDM preferences for your configuration set.
	VdmOptions []GetConfigurationSetVdmOption `pulumi:"vdmOptions"`
}

func LookupConfigurationSetOutput(ctx *pulumi.Context, args LookupConfigurationSetOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationSetResultOutput {
	outputResult := pulumix.ApplyErr[*LookupConfigurationSetArgs](args.ToOutput(), func(plainArgs *LookupConfigurationSetArgs) (*LookupConfigurationSetResult, error) {
		return LookupConfigurationSet(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupConfigurationSetResultOutput, *LookupConfigurationSetResult](outputResult)
}

// A collection of arguments for invoking getConfigurationSet.
type LookupConfigurationSetOutputArgs struct {
	// The name of the configuration set.
	ConfigurationSetName pulumix.Input[string] `pulumi:"configurationSetName"`
	// Key-value map of resource tags for the container recipe.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupConfigurationSetOutputArgs) ToOutput() pulumix.Output[*LookupConfigurationSetArgs] {
	allArgs := pulumix.All(
		args.ConfigurationSetName.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupConfigurationSetArgs {
		return &LookupConfigurationSetArgs{
			ConfigurationSetName: resolvedArgs[0].(string),
			Tags:                 resolvedArgs[1].(map[string]string),
		}
	})
}

type LookupConfigurationSetResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationSetResult)(nil)).Elem()
}

func (o LookupConfigurationSetResultOutput) ToOutput(context.Context) pulumix.Output[*LookupConfigurationSetResult] {
	return pulumix.Output[*LookupConfigurationSetResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupConfigurationSetResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) string { return v.Arn })
}

func (o LookupConfigurationSetResultOutput) ConfigurationSetName() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) string { return v.ConfigurationSetName })
}

func (o LookupConfigurationSetResultOutput) DeliveryOptions() pulumix.GArrayOutput[GetConfigurationSetDeliveryOption, GetConfigurationSetDeliveryOptionOutput] {
	value := pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) []GetConfigurationSetDeliveryOption { return v.DeliveryOptions })
	return pulumix.GArrayOutput[GetConfigurationSetDeliveryOption, GetConfigurationSetDeliveryOptionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupConfigurationSetResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) string { return v.Id })
}

func (o LookupConfigurationSetResultOutput) ReputationOptions() pulumix.GArrayOutput[GetConfigurationSetReputationOption, GetConfigurationSetReputationOptionOutput] {
	value := pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) []GetConfigurationSetReputationOption {
		return v.ReputationOptions
	})
	return pulumix.GArrayOutput[GetConfigurationSetReputationOption, GetConfigurationSetReputationOptionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupConfigurationSetResultOutput) SendingOptions() pulumix.GArrayOutput[GetConfigurationSetSendingOption, GetConfigurationSetSendingOptionOutput] {
	value := pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) []GetConfigurationSetSendingOption { return v.SendingOptions })
	return pulumix.GArrayOutput[GetConfigurationSetSendingOption, GetConfigurationSetSendingOptionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupConfigurationSetResultOutput) SuppressionOptions() pulumix.GArrayOutput[GetConfigurationSetSuppressionOption, GetConfigurationSetSuppressionOptionOutput] {
	value := pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) []GetConfigurationSetSuppressionOption {
		return v.SuppressionOptions
	})
	return pulumix.GArrayOutput[GetConfigurationSetSuppressionOption, GetConfigurationSetSuppressionOptionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupConfigurationSetResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupConfigurationSetResultOutput) TrackingOptions() pulumix.GArrayOutput[GetConfigurationSetTrackingOption, GetConfigurationSetTrackingOptionOutput] {
	value := pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) []GetConfigurationSetTrackingOption { return v.TrackingOptions })
	return pulumix.GArrayOutput[GetConfigurationSetTrackingOption, GetConfigurationSetTrackingOptionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupConfigurationSetResultOutput) VdmOptions() pulumix.GArrayOutput[GetConfigurationSetVdmOption, GetConfigurationSetVdmOptionOutput] {
	value := pulumix.Apply[*LookupConfigurationSetResult](o, func(v *LookupConfigurationSetResult) []GetConfigurationSetVdmOption { return v.VdmOptions })
	return pulumix.GArrayOutput[GetConfigurationSetVdmOption, GetConfigurationSetVdmOptionOutput]{
		OutputState: value.OutputState,
	}
}
