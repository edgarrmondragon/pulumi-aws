// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `ec2.NetworkInsightsPath` provides details about a specific Network Insights Path.
func LookupNetworkInsightsPath(ctx *pulumi.Context, args *LookupNetworkInsightsPathArgs, opts ...pulumi.InvokeOption) (*LookupNetworkInsightsPathResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkInsightsPathResult
	err := ctx.Invoke("aws:ec2/getNetworkInsightsPath:getNetworkInsightsPath", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkInsightsPath.
type LookupNetworkInsightsPathArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetNetworkInsightsPathFilter `pulumi:"filters"`
	// ID of the Network Insights Path to select.
	NetworkInsightsPathId *string `pulumi:"networkInsightsPathId"`
	// Map of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getNetworkInsightsPath.
type LookupNetworkInsightsPathResult struct {
	// ARN of the selected Network Insights Path.
	Arn string `pulumi:"arn"`
	// AWS resource that is the destination of the path.
	Destination string `pulumi:"destination"`
	// ARN of the destination.
	DestinationArn string `pulumi:"destinationArn"`
	// IP address of the AWS resource that is the destination of the path.
	DestinationIp string `pulumi:"destinationIp"`
	// Destination port.
	DestinationPort int                            `pulumi:"destinationPort"`
	Filters         []GetNetworkInsightsPathFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string `pulumi:"id"`
	NetworkInsightsPathId string `pulumi:"networkInsightsPathId"`
	// Protocol.
	Protocol string `pulumi:"protocol"`
	// AWS resource that is the source of the path.
	Source string `pulumi:"source"`
	// ARN of the source.
	SourceArn string `pulumi:"sourceArn"`
	// IP address of the AWS resource that is the source of the path.
	SourceIp string `pulumi:"sourceIp"`
	// Map of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

func LookupNetworkInsightsPathOutput(ctx *pulumi.Context, args LookupNetworkInsightsPathOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkInsightsPathResultOutput {
	outputResult := pulumix.ApplyErr[*LookupNetworkInsightsPathArgs](args.ToOutput(), func(plainArgs *LookupNetworkInsightsPathArgs) (*LookupNetworkInsightsPathResult, error) {
		return LookupNetworkInsightsPath(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupNetworkInsightsPathResultOutput, *LookupNetworkInsightsPathResult](outputResult)
}

// A collection of arguments for invoking getNetworkInsightsPath.
type LookupNetworkInsightsPathOutputArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters pulumix.Input[[]*GetNetworkInsightsPathFilterArgs] `pulumi:"filters"`
	// ID of the Network Insights Path to select.
	NetworkInsightsPathId pulumix.Input[*string] `pulumi:"networkInsightsPathId"`
	// Map of tags assigned to the resource.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupNetworkInsightsPathOutputArgs) ToOutput() pulumix.Output[*LookupNetworkInsightsPathArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.NetworkInsightsPathId.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupNetworkInsightsPathArgs {
		return &LookupNetworkInsightsPathArgs{
			Filters:               resolvedArgs[0].([]GetNetworkInsightsPathFilter),
			NetworkInsightsPathId: resolvedArgs[1].(*string),
			Tags:                  resolvedArgs[2].(map[string]string),
		}
	})
}

type LookupNetworkInsightsPathResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkInsightsPathResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkInsightsPathResult)(nil)).Elem()
}

func (o LookupNetworkInsightsPathResultOutput) ToOutput(context.Context) pulumix.Output[*LookupNetworkInsightsPathResult] {
	return pulumix.Output[*LookupNetworkInsightsPathResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupNetworkInsightsPathResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.Arn })
}

func (o LookupNetworkInsightsPathResultOutput) Destination() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.Destination })
}

func (o LookupNetworkInsightsPathResultOutput) DestinationArn() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.DestinationArn })
}

func (o LookupNetworkInsightsPathResultOutput) DestinationIp() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.DestinationIp })
}

func (o LookupNetworkInsightsPathResultOutput) DestinationPort() pulumix.Output[int] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) int { return v.DestinationPort })
}

func (o LookupNetworkInsightsPathResultOutput) Filters() pulumix.GArrayOutput[GetNetworkInsightsPathFilter, GetNetworkInsightsPathFilterOutput] {
	value := pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) []GetNetworkInsightsPathFilter { return v.Filters })
	return pulumix.GArrayOutput[GetNetworkInsightsPathFilter, GetNetworkInsightsPathFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInsightsPathResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.Id })
}

func (o LookupNetworkInsightsPathResultOutput) NetworkInsightsPathId() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.NetworkInsightsPathId })
}

func (o LookupNetworkInsightsPathResultOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.Protocol })
}

func (o LookupNetworkInsightsPathResultOutput) Source() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.Source })
}

func (o LookupNetworkInsightsPathResultOutput) SourceArn() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.SourceArn })
}

func (o LookupNetworkInsightsPathResultOutput) SourceIp() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) string { return v.SourceIp })
}

func (o LookupNetworkInsightsPathResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupNetworkInsightsPathResult](o, func(v *LookupNetworkInsightsPathResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
