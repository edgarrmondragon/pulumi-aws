// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific Amazon Connect User Hierarchy Structure
func LookupUserHierarchyStructure(ctx *pulumi.Context, args *LookupUserHierarchyStructureArgs, opts ...pulumi.InvokeOption) (*LookupUserHierarchyStructureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserHierarchyStructureResult
	err := ctx.Invoke("aws:connect/getUserHierarchyStructure:getUserHierarchyStructure", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserHierarchyStructure.
type LookupUserHierarchyStructureArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId string `pulumi:"instanceId"`
}

// A collection of values returned by getUserHierarchyStructure.
type LookupUserHierarchyStructureResult struct {
	// Block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
	HierarchyStructures []GetUserHierarchyStructureHierarchyStructure `pulumi:"hierarchyStructures"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
}

func LookupUserHierarchyStructureOutput(ctx *pulumi.Context, args LookupUserHierarchyStructureOutputArgs, opts ...pulumi.InvokeOption) LookupUserHierarchyStructureResultOutput {
	outputResult := pulumix.ApplyErr[*LookupUserHierarchyStructureArgs](args.ToOutput(), func(plainArgs *LookupUserHierarchyStructureArgs) (*LookupUserHierarchyStructureResult, error) {
		return LookupUserHierarchyStructure(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupUserHierarchyStructureResultOutput, *LookupUserHierarchyStructureResult](outputResult)
}

// A collection of arguments for invoking getUserHierarchyStructure.
type LookupUserHierarchyStructureOutputArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId pulumix.Input[string] `pulumi:"instanceId"`
}

func (args LookupUserHierarchyStructureOutputArgs) ToOutput() pulumix.Output[*LookupUserHierarchyStructureArgs] {
	allArgs := pulumix.All(
		args.InstanceId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupUserHierarchyStructureArgs {
		return &LookupUserHierarchyStructureArgs{
			InstanceId: resolvedArgs[0].(string),
		}
	})
}

type LookupUserHierarchyStructureResultOutput struct{ *pulumi.OutputState }

func (LookupUserHierarchyStructureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserHierarchyStructureResult)(nil)).Elem()
}

func (o LookupUserHierarchyStructureResultOutput) ToOutput(context.Context) pulumix.Output[*LookupUserHierarchyStructureResult] {
	return pulumix.Output[*LookupUserHierarchyStructureResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupUserHierarchyStructureResultOutput) HierarchyStructures() pulumix.GArrayOutput[GetUserHierarchyStructureHierarchyStructure, GetUserHierarchyStructureHierarchyStructureOutput] {
	value := pulumix.Apply[*LookupUserHierarchyStructureResult](o, func(v *LookupUserHierarchyStructureResult) []GetUserHierarchyStructureHierarchyStructure {
		return v.HierarchyStructures
	})
	return pulumix.GArrayOutput[GetUserHierarchyStructureHierarchyStructure, GetUserHierarchyStructureHierarchyStructureOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupUserHierarchyStructureResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupUserHierarchyStructureResult](o, func(v *LookupUserHierarchyStructureResult) string { return v.Id })
}

func (o LookupUserHierarchyStructureResultOutput) InstanceId() pulumix.Output[string] {
	return pulumix.Apply[*LookupUserHierarchyStructureResult](o, func(v *LookupUserHierarchyStructureResult) string { return v.InstanceId })
}
