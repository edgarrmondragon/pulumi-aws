// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The AMI resource allows the creation and management of a completely-custom
// *Amazon Machine Image* (AMI).
//
// If you just want to duplicate an existing AMI, possibly copying it to another
// region, it's better to use `ec2.AmiCopy` instead.
//
// If you just want to share an existing AMI with another AWS account,
// it's better to use `ec2.AmiLaunchPermission` instead.
type Ami struct {
	pulumi.CustomResourceState

	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumix.Output[*string] `pulumi:"architecture"`
	// ARN of the AMI.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumix.Output[*string] `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumix.Output[*string] `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices pulumix.GArrayOutput[AmiEbsBlockDevice, AmiEbsBlockDeviceOutput] `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumix.Output[*bool] `pulumi:"enaSupport"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices pulumix.GArrayOutput[AmiEphemeralBlockDevice, AmiEphemeralBlockDeviceOutput] `pulumi:"ephemeralBlockDevices"`
	// Hypervisor type of the image.
	Hypervisor pulumix.Output[string] `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation pulumix.Output[string] `pulumi:"imageLocation"`
	// AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.
	ImageOwnerAlias pulumix.Output[string] `pulumi:"imageOwnerAlias"`
	// Type of image.
	ImageType pulumix.Output[string] `pulumi:"imageType"`
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport pulumix.Output[*string] `pulumi:"imdsSupport"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId           pulumix.Output[*string] `pulumi:"kernelId"`
	ManageEbsSnapshots pulumix.Output[bool]    `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name pulumix.Output[string] `pulumi:"name"`
	// AWS account ID of the image owner.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// This value is set to windows for Windows AMIs; otherwise, it is blank.
	Platform pulumix.Output[string] `pulumi:"platform"`
	// Platform details associated with the billing code of the AMI.
	PlatformDetails pulumix.Output[string] `pulumi:"platformDetails"`
	// Whether the image has public launch permissions.
	Public pulumix.Output[bool] `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumix.Output[*string] `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumix.Output[*string] `pulumi:"rootDeviceName"`
	// Snapshot ID for the root volume (for EBS-backed AMIs)
	RootSnapshotId pulumix.Output[string] `pulumi:"rootSnapshotId"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumix.Output[*string] `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport pulumix.Output[*string] `pulumi:"tpmSupport"`
	// Operation of the Amazon EC2 instance and the billing code that is associated with the AMI.
	UsageOperation pulumix.Output[string] `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumix.Output[*string] `pulumi:"virtualizationType"`
}

// NewAmi registers a new resource with the given unique name, arguments, and options.
func NewAmi(ctx *pulumi.Context,
	name string, args *AmiArgs, opts ...pulumi.ResourceOption) (*Ami, error) {
	if args == nil {
		args = &AmiArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ami
	err := ctx.RegisterResource("aws:ec2/ami:Ami", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmi gets an existing Ami resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiState, opts ...pulumi.ResourceOption) (*Ami, error) {
	var resource Ami
	err := ctx.ReadResource("aws:ec2/ami:Ami", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ami resources.
type amiState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture *string `pulumi:"architecture"`
	// ARN of the AMI.
	Arn *string `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode *string `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport *bool `pulumi:"enaSupport"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Hypervisor type of the image.
	Hypervisor *string `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation *string `pulumi:"imageLocation"`
	// AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.
	ImageOwnerAlias *string `pulumi:"imageOwnerAlias"`
	// Type of image.
	ImageType *string `pulumi:"imageType"`
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport *string `pulumi:"imdsSupport"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId           *string `pulumi:"kernelId"`
	ManageEbsSnapshots *bool   `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name *string `pulumi:"name"`
	// AWS account ID of the image owner.
	OwnerId *string `pulumi:"ownerId"`
	// This value is set to windows for Windows AMIs; otherwise, it is blank.
	Platform *string `pulumi:"platform"`
	// Platform details associated with the billing code of the AMI.
	PlatformDetails *string `pulumi:"platformDetails"`
	// Whether the image has public launch permissions.
	Public *bool `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId *string `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName *string `pulumi:"rootDeviceName"`
	// Snapshot ID for the root volume (for EBS-backed AMIs)
	RootSnapshotId *string `pulumi:"rootSnapshotId"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport *string `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport *string `pulumi:"tpmSupport"`
	// Operation of the Amazon EC2 instance and the billing code that is associated with the AMI.
	UsageOperation *string `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

type AmiState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumix.Input[*string]
	// ARN of the AMI.
	Arn pulumix.Input[*string]
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumix.Input[*string]
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumix.Input[*string]
	// Longer, human-readable description for the AMI.
	Description pulumix.Input[*string]
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices pulumix.Input[[]*AmiEbsBlockDeviceArgs]
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumix.Input[*bool]
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices pulumix.Input[[]*AmiEphemeralBlockDeviceArgs]
	// Hypervisor type of the image.
	Hypervisor pulumix.Input[*string]
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation pulumix.Input[*string]
	// AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.
	ImageOwnerAlias pulumix.Input[*string]
	// Type of image.
	ImageType pulumix.Input[*string]
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport pulumix.Input[*string]
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId           pulumix.Input[*string]
	ManageEbsSnapshots pulumix.Input[*bool]
	// Region-unique name for the AMI.
	Name pulumix.Input[*string]
	// AWS account ID of the image owner.
	OwnerId pulumix.Input[*string]
	// This value is set to windows for Windows AMIs; otherwise, it is blank.
	Platform pulumix.Input[*string]
	// Platform details associated with the billing code of the AMI.
	PlatformDetails pulumix.Input[*string]
	// Whether the image has public launch permissions.
	Public pulumix.Input[*bool]
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumix.Input[*string]
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumix.Input[*string]
	// Snapshot ID for the root volume (for EBS-backed AMIs)
	RootSnapshotId pulumix.Input[*string]
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport pulumix.Input[*string]
	// Operation of the Amazon EC2 instance and the billing code that is associated with the AMI.
	UsageOperation pulumix.Input[*string]
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumix.Input[*string]
}

func (AmiState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiState)(nil)).Elem()
}

type amiArgs struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture *string `pulumi:"architecture"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode *string `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport *bool `pulumi:"enaSupport"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation *string `pulumi:"imageLocation"`
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport *string `pulumi:"imdsSupport"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId *string `pulumi:"kernelId"`
	// Region-unique name for the AMI.
	Name *string `pulumi:"name"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId *string `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName *string `pulumi:"rootDeviceName"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport *string `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport *string `pulumi:"tpmSupport"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

// The set of arguments for constructing a Ami resource.
type AmiArgs struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumix.Input[*string]
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumix.Input[*string]
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumix.Input[*string]
	// Longer, human-readable description for the AMI.
	Description pulumix.Input[*string]
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices pulumix.Input[[]*AmiEbsBlockDeviceArgs]
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumix.Input[*bool]
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices pulumix.Input[[]*AmiEphemeralBlockDeviceArgs]
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation pulumix.Input[*string]
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport pulumix.Input[*string]
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId pulumix.Input[*string]
	// Region-unique name for the AMI.
	Name pulumix.Input[*string]
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumix.Input[*string]
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumix.Input[*string]
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport pulumix.Input[*string]
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumix.Input[*string]
}

func (AmiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiArgs)(nil)).Elem()
}

type AmiOutput struct{ *pulumi.OutputState }

func (AmiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ami)(nil)).Elem()
}

func (o AmiOutput) ToAmiOutput() AmiOutput {
	return o
}

func (o AmiOutput) ToAmiOutputWithContext(ctx context.Context) AmiOutput {
	return o
}

func (o AmiOutput) ToOutput(ctx context.Context) pulumix.Output[Ami] {
	return pulumix.Output[Ami]{
		OutputState: o.OutputState,
	}
}

// Machine architecture for created instances. Defaults to "x8664".
func (o AmiOutput) Architecture() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.Architecture })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN of the AMI.
func (o AmiOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiOutput) BootMode() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.BootMode })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
func (o AmiOutput) DeprecationTime() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.DeprecationTime })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Longer, human-readable description for the AMI.
func (o AmiOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Nested block describing an EBS block device that should be
// attached to created instances. The structure of this block is described below.
func (o AmiOutput) EbsBlockDevices() pulumix.GArrayOutput[AmiEbsBlockDevice, AmiEbsBlockDeviceOutput] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.GArrayOutput[AmiEbsBlockDevice, AmiEbsBlockDeviceOutput] { return v.EbsBlockDevices })
	unwrapped := pulumix.Flatten[[]AmiEbsBlockDevice, pulumix.GArrayOutput[AmiEbsBlockDevice, AmiEbsBlockDeviceOutput]](value)
	return pulumix.GArrayOutput[AmiEbsBlockDevice, AmiEbsBlockDeviceOutput]{OutputState: unwrapped.OutputState}
}

// Whether enhanced networking with ENA is enabled. Defaults to `false`.
func (o AmiOutput) EnaSupport() pulumix.Output[*bool] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*bool] { return v.EnaSupport })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Nested block describing an ephemeral block device that
// should be attached to created instances. The structure of this block is described below.
func (o AmiOutput) EphemeralBlockDevices() pulumix.GArrayOutput[AmiEphemeralBlockDevice, AmiEphemeralBlockDeviceOutput] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.GArrayOutput[AmiEphemeralBlockDevice, AmiEphemeralBlockDeviceOutput] {
		return v.EphemeralBlockDevices
	})
	unwrapped := pulumix.Flatten[[]AmiEphemeralBlockDevice, pulumix.GArrayOutput[AmiEphemeralBlockDevice, AmiEphemeralBlockDeviceOutput]](value)
	return pulumix.GArrayOutput[AmiEphemeralBlockDevice, AmiEphemeralBlockDeviceOutput]{OutputState: unwrapped.OutputState}
}

// Hypervisor type of the image.
func (o AmiOutput) Hypervisor() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.Hypervisor })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Path to an S3 object containing an image manifest, e.g., created
// by the `ec2-upload-bundle` command in the EC2 command line tools.
func (o AmiOutput) ImageLocation() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.ImageLocation })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.
func (o AmiOutput) ImageOwnerAlias() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.ImageOwnerAlias })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Type of image.
func (o AmiOutput) ImageType() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.ImageType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
func (o AmiOutput) ImdsSupport() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.ImdsSupport })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ID of the kernel image (AKI) that will be used as the paravirtual
// kernel in created instances.
func (o AmiOutput) KernelId() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.KernelId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o AmiOutput) ManageEbsSnapshots() pulumix.Output[bool] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[bool] { return v.ManageEbsSnapshots })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Region-unique name for the AMI.
func (o AmiOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS account ID of the image owner.
func (o AmiOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// This value is set to windows for Windows AMIs; otherwise, it is blank.
func (o AmiOutput) Platform() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.Platform })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Platform details associated with the billing code of the AMI.
func (o AmiOutput) PlatformDetails() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.PlatformDetails })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether the image has public launch permissions.
func (o AmiOutput) Public() pulumix.Output[bool] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[bool] { return v.Public })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// ID of an initrd image (ARI) that will be used when booting the
// created instances.
func (o AmiOutput) RamdiskId() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.RamdiskId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
func (o AmiOutput) RootDeviceName() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.RootDeviceName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Snapshot ID for the root volume (for EBS-backed AMIs)
func (o AmiOutput) RootSnapshotId() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.RootSnapshotId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// When set to "simple" (the default), enables enhanced networking
// for created instances. No other value is supported at this time.
func (o AmiOutput) SriovNetSupport() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.SriovNetSupport })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AmiOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AmiOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiOutput) TpmSupport() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.TpmSupport })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Operation of the Amazon EC2 instance and the billing code that is associated with the AMI.
func (o AmiOutput) UsageOperation() pulumix.Output[string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[string] { return v.UsageOperation })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Keyword to choose what virtualization mode created instances
// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
// changes the set of further arguments that are required, as described below.
func (o AmiOutput) VirtualizationType() pulumix.Output[*string] {
	value := pulumix.Apply[Ami](o, func(v Ami) pulumix.Output[*string] { return v.VirtualizationType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(AmiOutput{})
}
