// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS VPC Lattice Resource Policy.
type ResourcePolicy struct {
	pulumi.CustomResourceState

	// An IAM policy. The policy string in JSON must not contain newlines or blank lines.
	Policy pulumix.Output[string] `pulumi:"policy"`
	// The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
	ResourceArn pulumix.Output[string] `pulumi:"resourceArn"`
}

// NewResourcePolicy registers a new resource with the given unique name, arguments, and options.
func NewResourcePolicy(ctx *pulumi.Context,
	name string, args *ResourcePolicyArgs, opts ...pulumi.ResourceOption) (*ResourcePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	if args.ResourceArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourcePolicy
	err := ctx.RegisterResource("aws:vpclattice/resourcePolicy:ResourcePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourcePolicy gets an existing ResourcePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourcePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourcePolicyState, opts ...pulumi.ResourceOption) (*ResourcePolicy, error) {
	var resource ResourcePolicy
	err := ctx.ReadResource("aws:vpclattice/resourcePolicy:ResourcePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourcePolicy resources.
type resourcePolicyState struct {
	// An IAM policy. The policy string in JSON must not contain newlines or blank lines.
	Policy *string `pulumi:"policy"`
	// The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
	ResourceArn *string `pulumi:"resourceArn"`
}

type ResourcePolicyState struct {
	// An IAM policy. The policy string in JSON must not contain newlines or blank lines.
	Policy pulumix.Input[*string]
	// The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
	ResourceArn pulumix.Input[*string]
}

func (ResourcePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcePolicyState)(nil)).Elem()
}

type resourcePolicyArgs struct {
	// An IAM policy. The policy string in JSON must not contain newlines or blank lines.
	Policy string `pulumi:"policy"`
	// The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
	ResourceArn string `pulumi:"resourceArn"`
}

// The set of arguments for constructing a ResourcePolicy resource.
type ResourcePolicyArgs struct {
	// An IAM policy. The policy string in JSON must not contain newlines or blank lines.
	Policy pulumix.Input[string]
	// The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
	ResourceArn pulumix.Input[string]
}

func (ResourcePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcePolicyArgs)(nil)).Elem()
}

type ResourcePolicyOutput struct{ *pulumi.OutputState }

func (ResourcePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicy)(nil)).Elem()
}

func (o ResourcePolicyOutput) ToResourcePolicyOutput() ResourcePolicyOutput {
	return o
}

func (o ResourcePolicyOutput) ToResourcePolicyOutputWithContext(ctx context.Context) ResourcePolicyOutput {
	return o
}

func (o ResourcePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[ResourcePolicy] {
	return pulumix.Output[ResourcePolicy]{
		OutputState: o.OutputState,
	}
}

// An IAM policy. The policy string in JSON must not contain newlines or blank lines.
func (o ResourcePolicyOutput) Policy() pulumix.Output[string] {
	value := pulumix.Apply[ResourcePolicy](o, func(v ResourcePolicy) pulumix.Output[string] { return v.Policy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
func (o ResourcePolicyOutput) ResourceArn() pulumix.Output[string] {
	value := pulumix.Apply[ResourcePolicy](o, func(v ResourcePolicy) pulumix.Output[string] { return v.ResourceArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ResourcePolicyOutput{})
}
