// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage S3 Bucket Ownership Controls. For more information, see the [S3 Developer Guide](https://docs.aws.amazon.com/AmazonS3/latest/dev/about-object-ownership.html).
type BucketOwnershipControls struct {
	pulumi.CustomResourceState

	// Name of the bucket that you want to associate this access point with.
	Bucket pulumix.Output[string] `pulumi:"bucket"`
	// Configuration block(s) with Ownership Controls rules. Detailed below.
	Rule pulumix.GPtrOutput[BucketOwnershipControlsRule, BucketOwnershipControlsRuleOutput] `pulumi:"rule"`
}

// NewBucketOwnershipControls registers a new resource with the given unique name, arguments, and options.
func NewBucketOwnershipControls(ctx *pulumi.Context,
	name string, args *BucketOwnershipControlsArgs, opts ...pulumi.ResourceOption) (*BucketOwnershipControls, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Rule == nil {
		return nil, errors.New("invalid value for required argument 'Rule'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketOwnershipControls
	err := ctx.RegisterResource("aws:s3/bucketOwnershipControls:BucketOwnershipControls", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketOwnershipControls gets an existing BucketOwnershipControls resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketOwnershipControls(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketOwnershipControlsState, opts ...pulumi.ResourceOption) (*BucketOwnershipControls, error) {
	var resource BucketOwnershipControls
	err := ctx.ReadResource("aws:s3/bucketOwnershipControls:BucketOwnershipControls", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketOwnershipControls resources.
type bucketOwnershipControlsState struct {
	// Name of the bucket that you want to associate this access point with.
	Bucket *string `pulumi:"bucket"`
	// Configuration block(s) with Ownership Controls rules. Detailed below.
	Rule *BucketOwnershipControlsRule `pulumi:"rule"`
}

type BucketOwnershipControlsState struct {
	// Name of the bucket that you want to associate this access point with.
	Bucket pulumix.Input[*string]
	// Configuration block(s) with Ownership Controls rules. Detailed below.
	Rule pulumix.Input[*BucketOwnershipControlsRuleArgs]
}

func (BucketOwnershipControlsState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketOwnershipControlsState)(nil)).Elem()
}

type bucketOwnershipControlsArgs struct {
	// Name of the bucket that you want to associate this access point with.
	Bucket string `pulumi:"bucket"`
	// Configuration block(s) with Ownership Controls rules. Detailed below.
	Rule BucketOwnershipControlsRule `pulumi:"rule"`
}

// The set of arguments for constructing a BucketOwnershipControls resource.
type BucketOwnershipControlsArgs struct {
	// Name of the bucket that you want to associate this access point with.
	Bucket pulumix.Input[string]
	// Configuration block(s) with Ownership Controls rules. Detailed below.
	Rule pulumix.Input[*BucketOwnershipControlsRuleArgs]
}

func (BucketOwnershipControlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketOwnershipControlsArgs)(nil)).Elem()
}

type BucketOwnershipControlsOutput struct{ *pulumi.OutputState }

func (BucketOwnershipControlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketOwnershipControls)(nil)).Elem()
}

func (o BucketOwnershipControlsOutput) ToBucketOwnershipControlsOutput() BucketOwnershipControlsOutput {
	return o
}

func (o BucketOwnershipControlsOutput) ToBucketOwnershipControlsOutputWithContext(ctx context.Context) BucketOwnershipControlsOutput {
	return o
}

func (o BucketOwnershipControlsOutput) ToOutput(ctx context.Context) pulumix.Output[BucketOwnershipControls] {
	return pulumix.Output[BucketOwnershipControls]{
		OutputState: o.OutputState,
	}
}

// Name of the bucket that you want to associate this access point with.
func (o BucketOwnershipControlsOutput) Bucket() pulumix.Output[string] {
	value := pulumix.Apply[BucketOwnershipControls](o, func(v BucketOwnershipControls) pulumix.Output[string] { return v.Bucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block(s) with Ownership Controls rules. Detailed below.
func (o BucketOwnershipControlsOutput) Rule() pulumix.GPtrOutput[BucketOwnershipControlsRule, BucketOwnershipControlsRuleOutput] {
	value := pulumix.Apply[BucketOwnershipControls](o, func(v BucketOwnershipControls) pulumix.GPtrOutput[BucketOwnershipControlsRule, BucketOwnershipControlsRuleOutput] {
		return v.Rule
	})
	unwrapped := pulumix.Flatten[*BucketOwnershipControlsRule, pulumix.GPtrOutput[BucketOwnershipControlsRule, BucketOwnershipControlsRuleOutput]](value)
	return pulumix.GPtrOutput[BucketOwnershipControlsRule, BucketOwnershipControlsRuleOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(BucketOwnershipControlsOutput{})
}
