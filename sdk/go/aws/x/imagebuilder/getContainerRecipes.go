// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get the ARNs and names of Image Builder Container Recipes matching the specified criteria.
func GetContainerRecipes(ctx *pulumi.Context, args *GetContainerRecipesArgs, opts ...pulumi.InvokeOption) (*GetContainerRecipesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetContainerRecipesResult
	err := ctx.Invoke("aws:imagebuilder/getContainerRecipes:getContainerRecipes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerRecipes.
type GetContainerRecipesArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetContainerRecipesFilter `pulumi:"filters"`
	// Owner of the container recipes. Valid values are `Self`, `Shared` and `Amazon`. Defaults to `Self`.
	Owner *string `pulumi:"owner"`
}

// A collection of values returned by getContainerRecipes.
type GetContainerRecipesResult struct {
	// Set of ARNs of the matched Image Builder Container Recipes.
	Arns    []string                    `pulumi:"arns"`
	Filters []GetContainerRecipesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of names of the matched Image Builder Container Recipes.
	Names []string `pulumi:"names"`
	Owner *string  `pulumi:"owner"`
}

func GetContainerRecipesOutput(ctx *pulumi.Context, args GetContainerRecipesOutputArgs, opts ...pulumi.InvokeOption) GetContainerRecipesResultOutput {
	outputResult := pulumix.ApplyErr[*GetContainerRecipesArgs](args.ToOutput(), func(plainArgs *GetContainerRecipesArgs) (*GetContainerRecipesResult, error) {
		return GetContainerRecipes(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetContainerRecipesResultOutput, *GetContainerRecipesResult](outputResult)
}

// A collection of arguments for invoking getContainerRecipes.
type GetContainerRecipesOutputArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters pulumix.Input[[]*GetContainerRecipesFilterArgs] `pulumi:"filters"`
	// Owner of the container recipes. Valid values are `Self`, `Shared` and `Amazon`. Defaults to `Self`.
	Owner pulumix.Input[*string] `pulumi:"owner"`
}

func (args GetContainerRecipesOutputArgs) ToOutput() pulumix.Output[*GetContainerRecipesArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Owner.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetContainerRecipesArgs {
		return &GetContainerRecipesArgs{
			Filters: resolvedArgs[0].([]GetContainerRecipesFilter),
			Owner:   resolvedArgs[1].(*string),
		}
	})
}

type GetContainerRecipesResultOutput struct{ *pulumi.OutputState }

func (GetContainerRecipesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipesResult)(nil)).Elem()
}

func (o GetContainerRecipesResultOutput) ToOutput(context.Context) pulumix.Output[*GetContainerRecipesResult] {
	return pulumix.Output[*GetContainerRecipesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetContainerRecipesResultOutput) Arns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetContainerRecipesResult](o, func(v *GetContainerRecipesResult) []string { return v.Arns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetContainerRecipesResultOutput) Filters() pulumix.GArrayOutput[GetContainerRecipesFilter, GetContainerRecipesFilterOutput] {
	value := pulumix.Apply[*GetContainerRecipesResult](o, func(v *GetContainerRecipesResult) []GetContainerRecipesFilter { return v.Filters })
	return pulumix.GArrayOutput[GetContainerRecipesFilter, GetContainerRecipesFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetContainerRecipesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetContainerRecipesResult](o, func(v *GetContainerRecipesResult) string { return v.Id })
}

func (o GetContainerRecipesResultOutput) Names() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetContainerRecipesResult](o, func(v *GetContainerRecipesResult) []string { return v.Names })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetContainerRecipesResultOutput) Owner() pulumix.Output[*string] {
	return pulumix.Apply[*GetContainerRecipesResult](o, func(v *GetContainerRecipesResult) *string { return v.Owner })
}
