// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CloudFormation Stack resource.
type Stack struct {
	pulumi.CustomResourceState

	// A list of capabilities.
	// Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities pulumix.ArrayOutput[string] `pulumi:"capabilities"`
	// Set to true to disable rollback of the stack if stack creation failed.
	// Conflicts with `onFailure`.
	DisableRollback pulumix.Output[*bool] `pulumi:"disableRollback"`
	// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
	IamRoleArn pulumix.Output[*string] `pulumi:"iamRoleArn"`
	// Stack name.
	Name pulumix.Output[string] `pulumi:"name"`
	// A list of SNS topic ARNs to publish stack related events.
	NotificationArns pulumix.ArrayOutput[string] `pulumi:"notificationArns"`
	// Action to be taken if stack creation fails. This must be
	// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disableRollback`.
	OnFailure pulumix.Output[*string] `pulumi:"onFailure"`
	// A map of outputs from the stack.
	Outputs pulumix.MapOutput[string] `pulumi:"outputs"`
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters pulumix.MapOutput[string] `pulumi:"parameters"`
	// Structure containing the stack policy body.
	// Conflicts w/ `policyUrl`.
	PolicyBody pulumix.Output[string] `pulumi:"policyBody"`
	// Location of a file containing the stack policy.
	// Conflicts w/ `policyBody`.
	PolicyUrl pulumix.Output[*string] `pulumi:"policyUrl"`
	// Map of resource tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Structure containing the template body (max size: 51,200 bytes).
	TemplateBody pulumix.Output[string] `pulumi:"templateBody"`
	// Location of a file containing the template body (max size: 460,800 bytes).
	TemplateUrl pulumix.Output[*string] `pulumi:"templateUrl"`
	// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
	TimeoutInMinutes pulumix.Output[*int] `pulumi:"timeoutInMinutes"`
}

// NewStack registers a new resource with the given unique name, arguments, and options.
func NewStack(ctx *pulumi.Context,
	name string, args *StackArgs, opts ...pulumi.ResourceOption) (*Stack, error) {
	if args == nil {
		args = &StackArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Stack
	err := ctx.RegisterResource("aws:cloudformation/stack:Stack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStack gets an existing Stack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackState, opts ...pulumi.ResourceOption) (*Stack, error) {
	var resource Stack
	err := ctx.ReadResource("aws:cloudformation/stack:Stack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Stack resources.
type stackState struct {
	// A list of capabilities.
	// Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities []string `pulumi:"capabilities"`
	// Set to true to disable rollback of the stack if stack creation failed.
	// Conflicts with `onFailure`.
	DisableRollback *bool `pulumi:"disableRollback"`
	// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
	IamRoleArn *string `pulumi:"iamRoleArn"`
	// Stack name.
	Name *string `pulumi:"name"`
	// A list of SNS topic ARNs to publish stack related events.
	NotificationArns []string `pulumi:"notificationArns"`
	// Action to be taken if stack creation fails. This must be
	// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disableRollback`.
	OnFailure *string `pulumi:"onFailure"`
	// A map of outputs from the stack.
	Outputs map[string]string `pulumi:"outputs"`
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters map[string]string `pulumi:"parameters"`
	// Structure containing the stack policy body.
	// Conflicts w/ `policyUrl`.
	PolicyBody *string `pulumi:"policyBody"`
	// Location of a file containing the stack policy.
	// Conflicts w/ `policyBody`.
	PolicyUrl *string `pulumi:"policyUrl"`
	// Map of resource tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Structure containing the template body (max size: 51,200 bytes).
	TemplateBody *string `pulumi:"templateBody"`
	// Location of a file containing the template body (max size: 460,800 bytes).
	TemplateUrl *string `pulumi:"templateUrl"`
	// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
	TimeoutInMinutes *int `pulumi:"timeoutInMinutes"`
}

type StackState struct {
	// A list of capabilities.
	// Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities pulumix.Input[[]string]
	// Set to true to disable rollback of the stack if stack creation failed.
	// Conflicts with `onFailure`.
	DisableRollback pulumix.Input[*bool]
	// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
	IamRoleArn pulumix.Input[*string]
	// Stack name.
	Name pulumix.Input[*string]
	// A list of SNS topic ARNs to publish stack related events.
	NotificationArns pulumix.Input[[]string]
	// Action to be taken if stack creation fails. This must be
	// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disableRollback`.
	OnFailure pulumix.Input[*string]
	// A map of outputs from the stack.
	Outputs pulumix.Input[map[string]string]
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters pulumix.Input[map[string]string]
	// Structure containing the stack policy body.
	// Conflicts w/ `policyUrl`.
	PolicyBody pulumix.Input[*string]
	// Location of a file containing the stack policy.
	// Conflicts w/ `policyBody`.
	PolicyUrl pulumix.Input[*string]
	// Map of resource tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Structure containing the template body (max size: 51,200 bytes).
	TemplateBody pulumix.Input[*string]
	// Location of a file containing the template body (max size: 460,800 bytes).
	TemplateUrl pulumix.Input[*string]
	// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
	TimeoutInMinutes pulumix.Input[*int]
}

func (StackState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackState)(nil)).Elem()
}

type stackArgs struct {
	// A list of capabilities.
	// Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities []string `pulumi:"capabilities"`
	// Set to true to disable rollback of the stack if stack creation failed.
	// Conflicts with `onFailure`.
	DisableRollback *bool `pulumi:"disableRollback"`
	// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
	IamRoleArn *string `pulumi:"iamRoleArn"`
	// Stack name.
	Name *string `pulumi:"name"`
	// A list of SNS topic ARNs to publish stack related events.
	NotificationArns []string `pulumi:"notificationArns"`
	// Action to be taken if stack creation fails. This must be
	// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disableRollback`.
	OnFailure *string `pulumi:"onFailure"`
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters map[string]string `pulumi:"parameters"`
	// Structure containing the stack policy body.
	// Conflicts w/ `policyUrl`.
	PolicyBody *string `pulumi:"policyBody"`
	// Location of a file containing the stack policy.
	// Conflicts w/ `policyBody`.
	PolicyUrl *string `pulumi:"policyUrl"`
	// Map of resource tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Structure containing the template body (max size: 51,200 bytes).
	TemplateBody *string `pulumi:"templateBody"`
	// Location of a file containing the template body (max size: 460,800 bytes).
	TemplateUrl *string `pulumi:"templateUrl"`
	// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
	TimeoutInMinutes *int `pulumi:"timeoutInMinutes"`
}

// The set of arguments for constructing a Stack resource.
type StackArgs struct {
	// A list of capabilities.
	// Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities pulumix.Input[[]string]
	// Set to true to disable rollback of the stack if stack creation failed.
	// Conflicts with `onFailure`.
	DisableRollback pulumix.Input[*bool]
	// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
	IamRoleArn pulumix.Input[*string]
	// Stack name.
	Name pulumix.Input[*string]
	// A list of SNS topic ARNs to publish stack related events.
	NotificationArns pulumix.Input[[]string]
	// Action to be taken if stack creation fails. This must be
	// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disableRollback`.
	OnFailure pulumix.Input[*string]
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters pulumix.Input[map[string]string]
	// Structure containing the stack policy body.
	// Conflicts w/ `policyUrl`.
	PolicyBody pulumix.Input[*string]
	// Location of a file containing the stack policy.
	// Conflicts w/ `policyBody`.
	PolicyUrl pulumix.Input[*string]
	// Map of resource tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Structure containing the template body (max size: 51,200 bytes).
	TemplateBody pulumix.Input[*string]
	// Location of a file containing the template body (max size: 460,800 bytes).
	TemplateUrl pulumix.Input[*string]
	// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
	TimeoutInMinutes pulumix.Input[*int]
}

func (StackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackArgs)(nil)).Elem()
}

type StackOutput struct{ *pulumi.OutputState }

func (StackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Stack)(nil)).Elem()
}

func (o StackOutput) ToStackOutput() StackOutput {
	return o
}

func (o StackOutput) ToStackOutputWithContext(ctx context.Context) StackOutput {
	return o
}

func (o StackOutput) ToOutput(ctx context.Context) pulumix.Output[Stack] {
	return pulumix.Output[Stack]{
		OutputState: o.OutputState,
	}
}

// A list of capabilities.
// Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
func (o StackOutput) Capabilities() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.ArrayOutput[string] { return v.Capabilities })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Set to true to disable rollback of the stack if stack creation failed.
// Conflicts with `onFailure`.
func (o StackOutput) DisableRollback() pulumix.Output[*bool] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*bool] { return v.DisableRollback })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
func (o StackOutput) IamRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.IamRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Stack name.
func (o StackOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of SNS topic ARNs to publish stack related events.
func (o StackOutput) NotificationArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.ArrayOutput[string] { return v.NotificationArns })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Action to be taken if stack creation fails. This must be
// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disableRollback`.
func (o StackOutput) OnFailure() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.OnFailure })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A map of outputs from the stack.
func (o StackOutput) Outputs() pulumix.MapOutput[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.MapOutput[string] { return v.Outputs })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of Parameter structures that specify input parameters for the stack.
func (o StackOutput) Parameters() pulumix.MapOutput[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.MapOutput[string] { return v.Parameters })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Structure containing the stack policy body.
// Conflicts w/ `policyUrl`.
func (o StackOutput) PolicyBody() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.PolicyBody })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Location of a file containing the stack policy.
// Conflicts w/ `policyBody`.
func (o StackOutput) PolicyUrl() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.PolicyUrl })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Map of resource tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o StackOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o StackOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Structure containing the template body (max size: 51,200 bytes).
func (o StackOutput) TemplateBody() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.TemplateBody })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Location of a file containing the template body (max size: 460,800 bytes).
func (o StackOutput) TemplateUrl() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.TemplateUrl })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
func (o StackOutput) TimeoutInMinutes() pulumix.Output[*int] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*int] { return v.TimeoutInMinutes })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

func init() {
	pulumi.RegisterOutputType(StackOutput{})
}
