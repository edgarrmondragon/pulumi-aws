// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package macie

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an [AWS Macie Custom Data Identifier](https://docs.aws.amazon.com/macie/latest/APIReference/custom-data-identifiers-id.html).
type CustomDataIdentifier struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the custom data identifier.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The date and time, in UTC and extended RFC 3339 format, when the Amazon Macie account was created.
	CreatedAt pulumix.Output[string] `pulumi:"createdAt"`
	// A custom description of the custom data identifier. The description can contain as many as 512 characters.
	Description pulumix.Output[*string] `pulumi:"description"`
	// An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.
	IgnoreWords pulumix.ArrayOutput[string] `pulumi:"ignoreWords"`
	// An array that lists specific character sequences (keywords), one of which must be within proximity (`maximumMatchDistance`) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3 - 90 characters. Keywords aren't case sensitive.
	Keywords pulumix.ArrayOutput[string] `pulumi:"keywords"`
	// The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.
	MaximumMatchDistance pulumix.Output[int] `pulumi:"maximumMatchDistance"`
	// A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Output[string] `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Output[string] `pulumi:"namePrefix"`
	// The regular expression (regex) that defines the pattern to match. The expression can contain as many as 512 characters.
	Regex pulumix.Output[*string] `pulumi:"regex"`
	// A map of key-value pairs that specifies the tags to associate with the custom data identifier.
	Tags    pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewCustomDataIdentifier registers a new resource with the given unique name, arguments, and options.
func NewCustomDataIdentifier(ctx *pulumi.Context,
	name string, args *CustomDataIdentifierArgs, opts ...pulumi.ResourceOption) (*CustomDataIdentifier, error) {
	if args == nil {
		args = &CustomDataIdentifierArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomDataIdentifier
	err := ctx.RegisterResource("aws:macie/customDataIdentifier:CustomDataIdentifier", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomDataIdentifier gets an existing CustomDataIdentifier resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomDataIdentifier(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomDataIdentifierState, opts ...pulumi.ResourceOption) (*CustomDataIdentifier, error) {
	var resource CustomDataIdentifier
	err := ctx.ReadResource("aws:macie/customDataIdentifier:CustomDataIdentifier", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomDataIdentifier resources.
type customDataIdentifierState struct {
	// The Amazon Resource Name (ARN) of the custom data identifier.
	Arn *string `pulumi:"arn"`
	// The date and time, in UTC and extended RFC 3339 format, when the Amazon Macie account was created.
	CreatedAt *string `pulumi:"createdAt"`
	// A custom description of the custom data identifier. The description can contain as many as 512 characters.
	Description *string `pulumi:"description"`
	// An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.
	IgnoreWords []string `pulumi:"ignoreWords"`
	// An array that lists specific character sequences (keywords), one of which must be within proximity (`maximumMatchDistance`) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3 - 90 characters. Keywords aren't case sensitive.
	Keywords []string `pulumi:"keywords"`
	// The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.
	MaximumMatchDistance *int `pulumi:"maximumMatchDistance"`
	// A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// The regular expression (regex) that defines the pattern to match. The expression can contain as many as 512 characters.
	Regex *string `pulumi:"regex"`
	// A map of key-value pairs that specifies the tags to associate with the custom data identifier.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type CustomDataIdentifierState struct {
	// The Amazon Resource Name (ARN) of the custom data identifier.
	Arn pulumix.Input[*string]
	// The date and time, in UTC and extended RFC 3339 format, when the Amazon Macie account was created.
	CreatedAt pulumix.Input[*string]
	// A custom description of the custom data identifier. The description can contain as many as 512 characters.
	Description pulumix.Input[*string]
	// An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.
	IgnoreWords pulumix.Input[[]string]
	// An array that lists specific character sequences (keywords), one of which must be within proximity (`maximumMatchDistance`) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3 - 90 characters. Keywords aren't case sensitive.
	Keywords pulumix.Input[[]string]
	// The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.
	MaximumMatchDistance pulumix.Input[*int]
	// A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// The regular expression (regex) that defines the pattern to match. The expression can contain as many as 512 characters.
	Regex pulumix.Input[*string]
	// A map of key-value pairs that specifies the tags to associate with the custom data identifier.
	Tags    pulumix.Input[map[string]string]
	TagsAll pulumix.Input[map[string]string]
}

func (CustomDataIdentifierState) ElementType() reflect.Type {
	return reflect.TypeOf((*customDataIdentifierState)(nil)).Elem()
}

type customDataIdentifierArgs struct {
	// A custom description of the custom data identifier. The description can contain as many as 512 characters.
	Description *string `pulumi:"description"`
	// An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.
	IgnoreWords []string `pulumi:"ignoreWords"`
	// An array that lists specific character sequences (keywords), one of which must be within proximity (`maximumMatchDistance`) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3 - 90 characters. Keywords aren't case sensitive.
	Keywords []string `pulumi:"keywords"`
	// The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.
	MaximumMatchDistance *int `pulumi:"maximumMatchDistance"`
	// A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// The regular expression (regex) that defines the pattern to match. The expression can contain as many as 512 characters.
	Regex *string `pulumi:"regex"`
	// A map of key-value pairs that specifies the tags to associate with the custom data identifier.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CustomDataIdentifier resource.
type CustomDataIdentifierArgs struct {
	// A custom description of the custom data identifier. The description can contain as many as 512 characters.
	Description pulumix.Input[*string]
	// An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.
	IgnoreWords pulumix.Input[[]string]
	// An array that lists specific character sequences (keywords), one of which must be within proximity (`maximumMatchDistance`) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3 - 90 characters. Keywords aren't case sensitive.
	Keywords pulumix.Input[[]string]
	// The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.
	MaximumMatchDistance pulumix.Input[*int]
	// A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// The regular expression (regex) that defines the pattern to match. The expression can contain as many as 512 characters.
	Regex pulumix.Input[*string]
	// A map of key-value pairs that specifies the tags to associate with the custom data identifier.
	Tags pulumix.Input[map[string]string]
}

func (CustomDataIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customDataIdentifierArgs)(nil)).Elem()
}

type CustomDataIdentifierOutput struct{ *pulumi.OutputState }

func (CustomDataIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDataIdentifier)(nil)).Elem()
}

func (o CustomDataIdentifierOutput) ToCustomDataIdentifierOutput() CustomDataIdentifierOutput {
	return o
}

func (o CustomDataIdentifierOutput) ToCustomDataIdentifierOutputWithContext(ctx context.Context) CustomDataIdentifierOutput {
	return o
}

func (o CustomDataIdentifierOutput) ToOutput(ctx context.Context) pulumix.Output[CustomDataIdentifier] {
	return pulumix.Output[CustomDataIdentifier]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the custom data identifier.
func (o CustomDataIdentifierOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The date and time, in UTC and extended RFC 3339 format, when the Amazon Macie account was created.
func (o CustomDataIdentifierOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A custom description of the custom data identifier. The description can contain as many as 512 characters.
func (o CustomDataIdentifierOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.
func (o CustomDataIdentifierOutput) IgnoreWords() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.ArrayOutput[string] { return v.IgnoreWords })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// An array that lists specific character sequences (keywords), one of which must be within proximity (`maximumMatchDistance`) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3 - 90 characters. Keywords aren't case sensitive.
func (o CustomDataIdentifierOutput) Keywords() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.ArrayOutput[string] { return v.Keywords })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.
func (o CustomDataIdentifierOutput) MaximumMatchDistance() pulumix.Output[int] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.Output[int] { return v.MaximumMatchDistance })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
func (o CustomDataIdentifierOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
func (o CustomDataIdentifierOutput) NamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.Output[string] { return v.NamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The regular expression (regex) that defines the pattern to match. The expression can contain as many as 512 characters.
func (o CustomDataIdentifierOutput) Regex() pulumix.Output[*string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.Output[*string] { return v.Regex })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A map of key-value pairs that specifies the tags to associate with the custom data identifier.
func (o CustomDataIdentifierOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o CustomDataIdentifierOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[CustomDataIdentifier](o, func(v CustomDataIdentifier) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(CustomDataIdentifierOutput{})
}
