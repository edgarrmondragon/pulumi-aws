// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific S3 bucket.
//
// This resource may prove useful when setting up a Route53 record, or an origin for a CloudFront
// Distribution.
func LookupBucket(ctx *pulumi.Context, args *LookupBucketArgs, opts ...pulumi.InvokeOption) (*LookupBucketResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBucketResult
	err := ctx.Invoke("aws:s3/getBucket:getBucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBucket.
type LookupBucketArgs struct {
	// Name of the bucket
	Bucket string `pulumi:"bucket"`
}

// A collection of values returned by getBucket.
type LookupBucketResult struct {
	// ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
	Arn    string `pulumi:"arn"`
	Bucket string `pulumi:"bucket"`
	// Bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
	BucketDomainName string `pulumi:"bucketDomainName"`
	// The bucket region-specific domain name. The bucket domain name including the region name. Please refer to the [S3 endpoints reference](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) for format. Note: AWS CloudFront allows specifying an S3 region-specific endpoint when creating an S3 origin. This will prevent redirect issues from CloudFront to the S3 Origin URL. For more information, see the [Virtual Hosted-Style Requests for Other Regions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#deprecated-global-endpoint) section in the AWS S3 User Guide.
	BucketRegionalDomainName string `pulumi:"bucketRegionalDomainName"`
	// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
	HostedZoneId string `pulumi:"hostedZoneId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// AWS region this bucket resides in.
	Region string `pulumi:"region"`
	// Domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
	WebsiteDomain string `pulumi:"websiteDomain"`
	// Website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
	WebsiteEndpoint string `pulumi:"websiteEndpoint"`
}

func LookupBucketOutput(ctx *pulumi.Context, args LookupBucketOutputArgs, opts ...pulumi.InvokeOption) LookupBucketResultOutput {
	outputResult := pulumix.ApplyErr[*LookupBucketArgs](args.ToOutput(), func(plainArgs *LookupBucketArgs) (*LookupBucketResult, error) {
		return LookupBucket(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupBucketResultOutput, *LookupBucketResult](outputResult)
}

// A collection of arguments for invoking getBucket.
type LookupBucketOutputArgs struct {
	// Name of the bucket
	Bucket pulumix.Input[string] `pulumi:"bucket"`
}

func (args LookupBucketOutputArgs) ToOutput() pulumix.Output[*LookupBucketArgs] {
	allArgs := pulumix.All(
		args.Bucket.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupBucketArgs {
		return &LookupBucketArgs{
			Bucket: resolvedArgs[0].(string),
		}
	})
}

type LookupBucketResultOutput struct{ *pulumi.OutputState }

func (LookupBucketResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketResult)(nil)).Elem()
}

func (o LookupBucketResultOutput) ToOutput(context.Context) pulumix.Output[*LookupBucketResult] {
	return pulumix.Output[*LookupBucketResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupBucketResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupBucketResult](o, func(v *LookupBucketResult) string { return v.Arn })
}

func (o LookupBucketResultOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[*LookupBucketResult](o, func(v *LookupBucketResult) string { return v.Bucket })
}

func (o LookupBucketResultOutput) BucketDomainName() pulumix.Output[string] {
	return pulumix.Apply[*LookupBucketResult](o, func(v *LookupBucketResult) string { return v.BucketDomainName })
}

func (o LookupBucketResultOutput) BucketRegionalDomainName() pulumix.Output[string] {
	return pulumix.Apply[*LookupBucketResult](o, func(v *LookupBucketResult) string { return v.BucketRegionalDomainName })
}

func (o LookupBucketResultOutput) HostedZoneId() pulumix.Output[string] {
	return pulumix.Apply[*LookupBucketResult](o, func(v *LookupBucketResult) string { return v.HostedZoneId })
}

func (o LookupBucketResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupBucketResult](o, func(v *LookupBucketResult) string { return v.Id })
}

func (o LookupBucketResultOutput) Region() pulumix.Output[string] {
	return pulumix.Apply[*LookupBucketResult](o, func(v *LookupBucketResult) string { return v.Region })
}

func (o LookupBucketResultOutput) WebsiteDomain() pulumix.Output[string] {
	return pulumix.Apply[*LookupBucketResult](o, func(v *LookupBucketResult) string { return v.WebsiteDomain })
}

func (o LookupBucketResultOutput) WebsiteEndpoint() pulumix.Output[string] {
	return pulumix.Apply[*LookupBucketResult](o, func(v *LookupBucketResult) string { return v.WebsiteEndpoint })
}
