// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Object Storage Location within AWS DataSync.
//
// > **NOTE:** The DataSync Agents must be available before creating this resource.
type LocationObjectStorage struct {
	pulumi.CustomResourceState

	// The access key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	AccessKey pulumix.Output[*string] `pulumi:"accessKey"`
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns pulumix.ArrayOutput[string] `pulumi:"agentArns"`
	// Amazon Resource Name (ARN) of the DataSync Location.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The bucket on the self-managed object storage server that is used to read data from.
	BucketName pulumix.Output[string] `pulumi:"bucketName"`
	// The secret key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	SecretKey pulumix.Output[*string] `pulumi:"secretKey"`
	// Specifies a certificate to authenticate with an object storage system that uses a private or self-signed certificate authority (CA). You must specify a Base64-encoded .pem string. The certificate can be up to 32768 bytes (before Base64 encoding).
	ServerCertificate pulumix.Output[*string] `pulumi:"serverCertificate"`
	// The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server. An agent uses this host name to mount the object storage server in a network.
	ServerHostname pulumix.Output[string] `pulumi:"serverHostname"`
	// The port that your self-managed object storage server accepts inbound network traffic on. The server port is set by default to TCP 80 (`HTTP`) or TCP 443 (`HTTPS`). You can specify a custom port if your self-managed object storage server requires one.
	ServerPort pulumix.Output[*int] `pulumi:"serverPort"`
	// The protocol that the object storage server uses to communicate. Valid values are `HTTP` or `HTTPS`.
	ServerProtocol pulumix.Output[*string] `pulumi:"serverProtocol"`
	// A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster. If the subdirectory isn't specified, it will default to /.
	Subdirectory pulumix.Output[string] `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The URL of the Object Storage location that was described.
	Uri pulumix.Output[string] `pulumi:"uri"`
}

// NewLocationObjectStorage registers a new resource with the given unique name, arguments, and options.
func NewLocationObjectStorage(ctx *pulumi.Context,
	name string, args *LocationObjectStorageArgs, opts ...pulumi.ResourceOption) (*LocationObjectStorage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentArns == nil {
		return nil, errors.New("invalid value for required argument 'AgentArns'")
	}
	if args.BucketName == nil {
		return nil, errors.New("invalid value for required argument 'BucketName'")
	}
	if args.ServerHostname == nil {
		return nil, errors.New("invalid value for required argument 'ServerHostname'")
	}
	if args.SecretKey != nil {
		untypedSecretValue := pulumi.ToSecret(args.SecretKey.ToOutput(ctx.Context()).Untyped())
		args.SecretKey = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocationObjectStorage
	err := ctx.RegisterResource("aws:datasync/locationObjectStorage:LocationObjectStorage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationObjectStorage gets an existing LocationObjectStorage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationObjectStorage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationObjectStorageState, opts ...pulumi.ResourceOption) (*LocationObjectStorage, error) {
	var resource LocationObjectStorage
	err := ctx.ReadResource("aws:datasync/locationObjectStorage:LocationObjectStorage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationObjectStorage resources.
type locationObjectStorageState struct {
	// The access key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	AccessKey *string `pulumi:"accessKey"`
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns []string `pulumi:"agentArns"`
	// Amazon Resource Name (ARN) of the DataSync Location.
	Arn *string `pulumi:"arn"`
	// The bucket on the self-managed object storage server that is used to read data from.
	BucketName *string `pulumi:"bucketName"`
	// The secret key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	SecretKey *string `pulumi:"secretKey"`
	// Specifies a certificate to authenticate with an object storage system that uses a private or self-signed certificate authority (CA). You must specify a Base64-encoded .pem string. The certificate can be up to 32768 bytes (before Base64 encoding).
	ServerCertificate *string `pulumi:"serverCertificate"`
	// The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server. An agent uses this host name to mount the object storage server in a network.
	ServerHostname *string `pulumi:"serverHostname"`
	// The port that your self-managed object storage server accepts inbound network traffic on. The server port is set by default to TCP 80 (`HTTP`) or TCP 443 (`HTTPS`). You can specify a custom port if your self-managed object storage server requires one.
	ServerPort *int `pulumi:"serverPort"`
	// The protocol that the object storage server uses to communicate. Valid values are `HTTP` or `HTTPS`.
	ServerProtocol *string `pulumi:"serverProtocol"`
	// A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster. If the subdirectory isn't specified, it will default to /.
	Subdirectory *string `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The URL of the Object Storage location that was described.
	Uri *string `pulumi:"uri"`
}

type LocationObjectStorageState struct {
	// The access key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	AccessKey pulumix.Input[*string]
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns pulumix.Input[[]string]
	// Amazon Resource Name (ARN) of the DataSync Location.
	Arn pulumix.Input[*string]
	// The bucket on the self-managed object storage server that is used to read data from.
	BucketName pulumix.Input[*string]
	// The secret key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	SecretKey pulumix.Input[*string]
	// Specifies a certificate to authenticate with an object storage system that uses a private or self-signed certificate authority (CA). You must specify a Base64-encoded .pem string. The certificate can be up to 32768 bytes (before Base64 encoding).
	ServerCertificate pulumix.Input[*string]
	// The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server. An agent uses this host name to mount the object storage server in a network.
	ServerHostname pulumix.Input[*string]
	// The port that your self-managed object storage server accepts inbound network traffic on. The server port is set by default to TCP 80 (`HTTP`) or TCP 443 (`HTTPS`). You can specify a custom port if your self-managed object storage server requires one.
	ServerPort pulumix.Input[*int]
	// The protocol that the object storage server uses to communicate. Valid values are `HTTP` or `HTTPS`.
	ServerProtocol pulumix.Input[*string]
	// A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster. If the subdirectory isn't specified, it will default to /.
	Subdirectory pulumix.Input[*string]
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The URL of the Object Storage location that was described.
	Uri pulumix.Input[*string]
}

func (LocationObjectStorageState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationObjectStorageState)(nil)).Elem()
}

type locationObjectStorageArgs struct {
	// The access key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	AccessKey *string `pulumi:"accessKey"`
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns []string `pulumi:"agentArns"`
	// The bucket on the self-managed object storage server that is used to read data from.
	BucketName string `pulumi:"bucketName"`
	// The secret key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	SecretKey *string `pulumi:"secretKey"`
	// Specifies a certificate to authenticate with an object storage system that uses a private or self-signed certificate authority (CA). You must specify a Base64-encoded .pem string. The certificate can be up to 32768 bytes (before Base64 encoding).
	ServerCertificate *string `pulumi:"serverCertificate"`
	// The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server. An agent uses this host name to mount the object storage server in a network.
	ServerHostname string `pulumi:"serverHostname"`
	// The port that your self-managed object storage server accepts inbound network traffic on. The server port is set by default to TCP 80 (`HTTP`) or TCP 443 (`HTTPS`). You can specify a custom port if your self-managed object storage server requires one.
	ServerPort *int `pulumi:"serverPort"`
	// The protocol that the object storage server uses to communicate. Valid values are `HTTP` or `HTTPS`.
	ServerProtocol *string `pulumi:"serverProtocol"`
	// A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster. If the subdirectory isn't specified, it will default to /.
	Subdirectory *string `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LocationObjectStorage resource.
type LocationObjectStorageArgs struct {
	// The access key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	AccessKey pulumix.Input[*string]
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns pulumix.Input[[]string]
	// The bucket on the self-managed object storage server that is used to read data from.
	BucketName pulumix.Input[string]
	// The secret key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
	SecretKey pulumix.Input[*string]
	// Specifies a certificate to authenticate with an object storage system that uses a private or self-signed certificate authority (CA). You must specify a Base64-encoded .pem string. The certificate can be up to 32768 bytes (before Base64 encoding).
	ServerCertificate pulumix.Input[*string]
	// The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server. An agent uses this host name to mount the object storage server in a network.
	ServerHostname pulumix.Input[string]
	// The port that your self-managed object storage server accepts inbound network traffic on. The server port is set by default to TCP 80 (`HTTP`) or TCP 443 (`HTTPS`). You can specify a custom port if your self-managed object storage server requires one.
	ServerPort pulumix.Input[*int]
	// The protocol that the object storage server uses to communicate. Valid values are `HTTP` or `HTTPS`.
	ServerProtocol pulumix.Input[*string]
	// A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster. If the subdirectory isn't specified, it will default to /.
	Subdirectory pulumix.Input[*string]
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (LocationObjectStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationObjectStorageArgs)(nil)).Elem()
}

type LocationObjectStorageOutput struct{ *pulumi.OutputState }

func (LocationObjectStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationObjectStorage)(nil)).Elem()
}

func (o LocationObjectStorageOutput) ToLocationObjectStorageOutput() LocationObjectStorageOutput {
	return o
}

func (o LocationObjectStorageOutput) ToLocationObjectStorageOutputWithContext(ctx context.Context) LocationObjectStorageOutput {
	return o
}

func (o LocationObjectStorageOutput) ToOutput(ctx context.Context) pulumix.Output[LocationObjectStorage] {
	return pulumix.Output[LocationObjectStorage]{
		OutputState: o.OutputState,
	}
}

// The access key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
func (o LocationObjectStorageOutput) AccessKey() pulumix.Output[*string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[*string] { return v.AccessKey })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A list of DataSync Agent ARNs with which this location will be associated.
func (o LocationObjectStorageOutput) AgentArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.ArrayOutput[string] { return v.AgentArns })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of the DataSync Location.
func (o LocationObjectStorageOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The bucket on the self-managed object storage server that is used to read data from.
func (o LocationObjectStorageOutput) BucketName() pulumix.Output[string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[string] { return v.BucketName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The secret key is used if credentials are required to access the self-managed object storage server. If your object storage requires a user name and password to authenticate, use `accessKey` and `secretKey` to provide the user name and password, respectively.
func (o LocationObjectStorageOutput) SecretKey() pulumix.Output[*string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[*string] { return v.SecretKey })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies a certificate to authenticate with an object storage system that uses a private or self-signed certificate authority (CA). You must specify a Base64-encoded .pem string. The certificate can be up to 32768 bytes (before Base64 encoding).
func (o LocationObjectStorageOutput) ServerCertificate() pulumix.Output[*string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[*string] { return v.ServerCertificate })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server. An agent uses this host name to mount the object storage server in a network.
func (o LocationObjectStorageOutput) ServerHostname() pulumix.Output[string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[string] { return v.ServerHostname })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The port that your self-managed object storage server accepts inbound network traffic on. The server port is set by default to TCP 80 (`HTTP`) or TCP 443 (`HTTPS`). You can specify a custom port if your self-managed object storage server requires one.
func (o LocationObjectStorageOutput) ServerPort() pulumix.Output[*int] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[*int] { return v.ServerPort })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The protocol that the object storage server uses to communicate. Valid values are `HTTP` or `HTTPS`.
func (o LocationObjectStorageOutput) ServerProtocol() pulumix.Output[*string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[*string] { return v.ServerProtocol })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A subdirectory in the HDFS cluster. This subdirectory is used to read data from or write data to the HDFS cluster. If the subdirectory isn't specified, it will default to /.
func (o LocationObjectStorageOutput) Subdirectory() pulumix.Output[string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[string] { return v.Subdirectory })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o LocationObjectStorageOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o LocationObjectStorageOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The URL of the Object Storage location that was described.
func (o LocationObjectStorageOutput) Uri() pulumix.Output[string] {
	value := pulumix.Apply[LocationObjectStorage](o, func(v LocationObjectStorage) pulumix.Output[string] { return v.Uri })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(LocationObjectStorageOutput{})
}
