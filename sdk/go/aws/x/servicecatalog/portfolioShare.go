// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Service Catalog Portfolio Share. Shares the specified portfolio with the specified account or organization node. You can share portfolios to an organization, an organizational unit, or a specific account.
//
// If the portfolio share with the specified account or organization node already exists, using this resource to re-create the share will have no effect and will not return an error. You can then use this resource to update the share.
//
// > **NOTE:** Shares to an organization node can only be created by the management account of an organization or by a delegated administrator. If a delegated admin is de-registered, they can no longer create portfolio shares.
//
// > **NOTE:** AWSOrganizationsAccess must be enabled in order to create a portfolio share to an organization node.
//
// > **NOTE:** You can't share a shared resource, including portfolios that contain a shared product.
type PortfolioShare struct {
	pulumi.CustomResourceState

	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Output[*string] `pulumi:"acceptLanguage"`
	// Whether the shared portfolio is imported by the recipient account. If the recipient is organizational, the share is automatically imported, and the field is always set to true.
	Accepted pulumix.Output[bool] `pulumi:"accepted"`
	// Portfolio identifier.
	PortfolioId pulumix.Output[string] `pulumi:"portfolioId"`
	// Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.
	PrincipalId pulumix.Output[string] `pulumi:"principalId"`
	// Enables or disables Principal sharing when creating the portfolio share. If this flag is not provided, principal sharing is disabled.
	SharePrincipals pulumix.Output[*bool] `pulumi:"sharePrincipals"`
	// Whether to enable sharing of `servicecatalog.TagOption` resources when creating the portfolio share.
	ShareTagOptions pulumix.Output[*bool] `pulumi:"shareTagOptions"`
	// Type of portfolio share. Valid values are `ACCOUNT` (an external account), `ORGANIZATION` (a share to every account in an organization), `ORGANIZATIONAL_UNIT`, `ORGANIZATION_MEMBER_ACCOUNT` (a share to an account in an organization).
	//
	// The following arguments are optional:
	Type pulumix.Output[string] `pulumi:"type"`
	// Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.
	WaitForAcceptance pulumix.Output[*bool] `pulumi:"waitForAcceptance"`
}

// NewPortfolioShare registers a new resource with the given unique name, arguments, and options.
func NewPortfolioShare(ctx *pulumi.Context,
	name string, args *PortfolioShareArgs, opts ...pulumi.ResourceOption) (*PortfolioShare, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PortfolioId == nil {
		return nil, errors.New("invalid value for required argument 'PortfolioId'")
	}
	if args.PrincipalId == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PortfolioShare
	err := ctx.RegisterResource("aws:servicecatalog/portfolioShare:PortfolioShare", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPortfolioShare gets an existing PortfolioShare resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPortfolioShare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PortfolioShareState, opts ...pulumi.ResourceOption) (*PortfolioShare, error) {
	var resource PortfolioShare
	err := ctx.ReadResource("aws:servicecatalog/portfolioShare:PortfolioShare", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PortfolioShare resources.
type portfolioShareState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Whether the shared portfolio is imported by the recipient account. If the recipient is organizational, the share is automatically imported, and the field is always set to true.
	Accepted *bool `pulumi:"accepted"`
	// Portfolio identifier.
	PortfolioId *string `pulumi:"portfolioId"`
	// Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.
	PrincipalId *string `pulumi:"principalId"`
	// Enables or disables Principal sharing when creating the portfolio share. If this flag is not provided, principal sharing is disabled.
	SharePrincipals *bool `pulumi:"sharePrincipals"`
	// Whether to enable sharing of `servicecatalog.TagOption` resources when creating the portfolio share.
	ShareTagOptions *bool `pulumi:"shareTagOptions"`
	// Type of portfolio share. Valid values are `ACCOUNT` (an external account), `ORGANIZATION` (a share to every account in an organization), `ORGANIZATIONAL_UNIT`, `ORGANIZATION_MEMBER_ACCOUNT` (a share to an account in an organization).
	//
	// The following arguments are optional:
	Type *string `pulumi:"type"`
	// Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.
	WaitForAcceptance *bool `pulumi:"waitForAcceptance"`
}

type PortfolioShareState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// Whether the shared portfolio is imported by the recipient account. If the recipient is organizational, the share is automatically imported, and the field is always set to true.
	Accepted pulumix.Input[*bool]
	// Portfolio identifier.
	PortfolioId pulumix.Input[*string]
	// Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.
	PrincipalId pulumix.Input[*string]
	// Enables or disables Principal sharing when creating the portfolio share. If this flag is not provided, principal sharing is disabled.
	SharePrincipals pulumix.Input[*bool]
	// Whether to enable sharing of `servicecatalog.TagOption` resources when creating the portfolio share.
	ShareTagOptions pulumix.Input[*bool]
	// Type of portfolio share. Valid values are `ACCOUNT` (an external account), `ORGANIZATION` (a share to every account in an organization), `ORGANIZATIONAL_UNIT`, `ORGANIZATION_MEMBER_ACCOUNT` (a share to an account in an organization).
	//
	// The following arguments are optional:
	Type pulumix.Input[*string]
	// Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.
	WaitForAcceptance pulumix.Input[*bool]
}

func (PortfolioShareState) ElementType() reflect.Type {
	return reflect.TypeOf((*portfolioShareState)(nil)).Elem()
}

type portfolioShareArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Portfolio identifier.
	PortfolioId string `pulumi:"portfolioId"`
	// Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.
	PrincipalId string `pulumi:"principalId"`
	// Enables or disables Principal sharing when creating the portfolio share. If this flag is not provided, principal sharing is disabled.
	SharePrincipals *bool `pulumi:"sharePrincipals"`
	// Whether to enable sharing of `servicecatalog.TagOption` resources when creating the portfolio share.
	ShareTagOptions *bool `pulumi:"shareTagOptions"`
	// Type of portfolio share. Valid values are `ACCOUNT` (an external account), `ORGANIZATION` (a share to every account in an organization), `ORGANIZATIONAL_UNIT`, `ORGANIZATION_MEMBER_ACCOUNT` (a share to an account in an organization).
	//
	// The following arguments are optional:
	Type string `pulumi:"type"`
	// Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.
	WaitForAcceptance *bool `pulumi:"waitForAcceptance"`
}

// The set of arguments for constructing a PortfolioShare resource.
type PortfolioShareArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// Portfolio identifier.
	PortfolioId pulumix.Input[string]
	// Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.
	PrincipalId pulumix.Input[string]
	// Enables or disables Principal sharing when creating the portfolio share. If this flag is not provided, principal sharing is disabled.
	SharePrincipals pulumix.Input[*bool]
	// Whether to enable sharing of `servicecatalog.TagOption` resources when creating the portfolio share.
	ShareTagOptions pulumix.Input[*bool]
	// Type of portfolio share. Valid values are `ACCOUNT` (an external account), `ORGANIZATION` (a share to every account in an organization), `ORGANIZATIONAL_UNIT`, `ORGANIZATION_MEMBER_ACCOUNT` (a share to an account in an organization).
	//
	// The following arguments are optional:
	Type pulumix.Input[string]
	// Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.
	WaitForAcceptance pulumix.Input[*bool]
}

func (PortfolioShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*portfolioShareArgs)(nil)).Elem()
}

type PortfolioShareOutput struct{ *pulumi.OutputState }

func (PortfolioShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortfolioShare)(nil)).Elem()
}

func (o PortfolioShareOutput) ToPortfolioShareOutput() PortfolioShareOutput {
	return o
}

func (o PortfolioShareOutput) ToPortfolioShareOutputWithContext(ctx context.Context) PortfolioShareOutput {
	return o
}

func (o PortfolioShareOutput) ToOutput(ctx context.Context) pulumix.Output[PortfolioShare] {
	return pulumix.Output[PortfolioShare]{
		OutputState: o.OutputState,
	}
}

// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
func (o PortfolioShareOutput) AcceptLanguage() pulumix.Output[*string] {
	value := pulumix.Apply[PortfolioShare](o, func(v PortfolioShare) pulumix.Output[*string] { return v.AcceptLanguage })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Whether the shared portfolio is imported by the recipient account. If the recipient is organizational, the share is automatically imported, and the field is always set to true.
func (o PortfolioShareOutput) Accepted() pulumix.Output[bool] {
	value := pulumix.Apply[PortfolioShare](o, func(v PortfolioShare) pulumix.Output[bool] { return v.Accepted })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Portfolio identifier.
func (o PortfolioShareOutput) PortfolioId() pulumix.Output[string] {
	value := pulumix.Apply[PortfolioShare](o, func(v PortfolioShare) pulumix.Output[string] { return v.PortfolioId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.
func (o PortfolioShareOutput) PrincipalId() pulumix.Output[string] {
	value := pulumix.Apply[PortfolioShare](o, func(v PortfolioShare) pulumix.Output[string] { return v.PrincipalId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Enables or disables Principal sharing when creating the portfolio share. If this flag is not provided, principal sharing is disabled.
func (o PortfolioShareOutput) SharePrincipals() pulumix.Output[*bool] {
	value := pulumix.Apply[PortfolioShare](o, func(v PortfolioShare) pulumix.Output[*bool] { return v.SharePrincipals })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Whether to enable sharing of `servicecatalog.TagOption` resources when creating the portfolio share.
func (o PortfolioShareOutput) ShareTagOptions() pulumix.Output[*bool] {
	value := pulumix.Apply[PortfolioShare](o, func(v PortfolioShare) pulumix.Output[*bool] { return v.ShareTagOptions })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Type of portfolio share. Valid values are `ACCOUNT` (an external account), `ORGANIZATION` (a share to every account in an organization), `ORGANIZATIONAL_UNIT`, `ORGANIZATION_MEMBER_ACCOUNT` (a share to an account in an organization).
//
// The following arguments are optional:
func (o PortfolioShareOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[PortfolioShare](o, func(v PortfolioShare) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to wait (up to the timeout) for the share to be accepted. Organizational shares are automatically accepted.
func (o PortfolioShareOutput) WaitForAcceptance() pulumix.Output[*bool] {
	value := pulumix.Apply[PortfolioShare](o, func(v PortfolioShare) pulumix.Output[*bool] { return v.WaitForAcceptance })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

func init() {
	pulumi.RegisterOutputType(PortfolioShareOutput{})
}
