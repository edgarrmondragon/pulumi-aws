// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Service Catalog Product Portfolio Association.
type ProductPortfolioAssociation struct {
	pulumi.CustomResourceState

	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Output[*string] `pulumi:"acceptLanguage"`
	// Portfolio identifier.
	PortfolioId pulumix.Output[string] `pulumi:"portfolioId"`
	// Product identifier.
	//
	// The following arguments are optional:
	ProductId pulumix.Output[string] `pulumi:"productId"`
	// Identifier of the source portfolio.
	SourcePortfolioId pulumix.Output[*string] `pulumi:"sourcePortfolioId"`
}

// NewProductPortfolioAssociation registers a new resource with the given unique name, arguments, and options.
func NewProductPortfolioAssociation(ctx *pulumi.Context,
	name string, args *ProductPortfolioAssociationArgs, opts ...pulumi.ResourceOption) (*ProductPortfolioAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PortfolioId == nil {
		return nil, errors.New("invalid value for required argument 'PortfolioId'")
	}
	if args.ProductId == nil {
		return nil, errors.New("invalid value for required argument 'ProductId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProductPortfolioAssociation
	err := ctx.RegisterResource("aws:servicecatalog/productPortfolioAssociation:ProductPortfolioAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProductPortfolioAssociation gets an existing ProductPortfolioAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProductPortfolioAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProductPortfolioAssociationState, opts ...pulumi.ResourceOption) (*ProductPortfolioAssociation, error) {
	var resource ProductPortfolioAssociation
	err := ctx.ReadResource("aws:servicecatalog/productPortfolioAssociation:ProductPortfolioAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProductPortfolioAssociation resources.
type productPortfolioAssociationState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Portfolio identifier.
	PortfolioId *string `pulumi:"portfolioId"`
	// Product identifier.
	//
	// The following arguments are optional:
	ProductId *string `pulumi:"productId"`
	// Identifier of the source portfolio.
	SourcePortfolioId *string `pulumi:"sourcePortfolioId"`
}

type ProductPortfolioAssociationState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// Portfolio identifier.
	PortfolioId pulumix.Input[*string]
	// Product identifier.
	//
	// The following arguments are optional:
	ProductId pulumix.Input[*string]
	// Identifier of the source portfolio.
	SourcePortfolioId pulumix.Input[*string]
}

func (ProductPortfolioAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*productPortfolioAssociationState)(nil)).Elem()
}

type productPortfolioAssociationArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Portfolio identifier.
	PortfolioId string `pulumi:"portfolioId"`
	// Product identifier.
	//
	// The following arguments are optional:
	ProductId string `pulumi:"productId"`
	// Identifier of the source portfolio.
	SourcePortfolioId *string `pulumi:"sourcePortfolioId"`
}

// The set of arguments for constructing a ProductPortfolioAssociation resource.
type ProductPortfolioAssociationArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// Portfolio identifier.
	PortfolioId pulumix.Input[string]
	// Product identifier.
	//
	// The following arguments are optional:
	ProductId pulumix.Input[string]
	// Identifier of the source portfolio.
	SourcePortfolioId pulumix.Input[*string]
}

func (ProductPortfolioAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*productPortfolioAssociationArgs)(nil)).Elem()
}

type ProductPortfolioAssociationOutput struct{ *pulumi.OutputState }

func (ProductPortfolioAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductPortfolioAssociation)(nil)).Elem()
}

func (o ProductPortfolioAssociationOutput) ToProductPortfolioAssociationOutput() ProductPortfolioAssociationOutput {
	return o
}

func (o ProductPortfolioAssociationOutput) ToProductPortfolioAssociationOutputWithContext(ctx context.Context) ProductPortfolioAssociationOutput {
	return o
}

func (o ProductPortfolioAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[ProductPortfolioAssociation] {
	return pulumix.Output[ProductPortfolioAssociation]{
		OutputState: o.OutputState,
	}
}

// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
func (o ProductPortfolioAssociationOutput) AcceptLanguage() pulumix.Output[*string] {
	value := pulumix.Apply[ProductPortfolioAssociation](o, func(v ProductPortfolioAssociation) pulumix.Output[*string] { return v.AcceptLanguage })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Portfolio identifier.
func (o ProductPortfolioAssociationOutput) PortfolioId() pulumix.Output[string] {
	value := pulumix.Apply[ProductPortfolioAssociation](o, func(v ProductPortfolioAssociation) pulumix.Output[string] { return v.PortfolioId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Product identifier.
//
// The following arguments are optional:
func (o ProductPortfolioAssociationOutput) ProductId() pulumix.Output[string] {
	value := pulumix.Apply[ProductPortfolioAssociation](o, func(v ProductPortfolioAssociation) pulumix.Output[string] { return v.ProductId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of the source portfolio.
func (o ProductPortfolioAssociationOutput) SourcePortfolioId() pulumix.Output[*string] {
	value := pulumix.Apply[ProductPortfolioAssociation](o, func(v ProductPortfolioAssociation) pulumix.Output[*string] { return v.SourcePortfolioId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(ProductPortfolioAssociationOutput{})
}
