// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to designate the active SES receipt rule set
type ActiveReceiptRuleSet struct {
	pulumi.CustomResourceState

	// The SES receipt rule set ARN.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name of the rule set
	RuleSetName pulumix.Output[string] `pulumi:"ruleSetName"`
}

// NewActiveReceiptRuleSet registers a new resource with the given unique name, arguments, and options.
func NewActiveReceiptRuleSet(ctx *pulumi.Context,
	name string, args *ActiveReceiptRuleSetArgs, opts ...pulumi.ResourceOption) (*ActiveReceiptRuleSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuleSetName == nil {
		return nil, errors.New("invalid value for required argument 'RuleSetName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ActiveReceiptRuleSet
	err := ctx.RegisterResource("aws:ses/activeReceiptRuleSet:ActiveReceiptRuleSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActiveReceiptRuleSet gets an existing ActiveReceiptRuleSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActiveReceiptRuleSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActiveReceiptRuleSetState, opts ...pulumi.ResourceOption) (*ActiveReceiptRuleSet, error) {
	var resource ActiveReceiptRuleSet
	err := ctx.ReadResource("aws:ses/activeReceiptRuleSet:ActiveReceiptRuleSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ActiveReceiptRuleSet resources.
type activeReceiptRuleSetState struct {
	// The SES receipt rule set ARN.
	Arn *string `pulumi:"arn"`
	// The name of the rule set
	RuleSetName *string `pulumi:"ruleSetName"`
}

type ActiveReceiptRuleSetState struct {
	// The SES receipt rule set ARN.
	Arn pulumix.Input[*string]
	// The name of the rule set
	RuleSetName pulumix.Input[*string]
}

func (ActiveReceiptRuleSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*activeReceiptRuleSetState)(nil)).Elem()
}

type activeReceiptRuleSetArgs struct {
	// The name of the rule set
	RuleSetName string `pulumi:"ruleSetName"`
}

// The set of arguments for constructing a ActiveReceiptRuleSet resource.
type ActiveReceiptRuleSetArgs struct {
	// The name of the rule set
	RuleSetName pulumix.Input[string]
}

func (ActiveReceiptRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*activeReceiptRuleSetArgs)(nil)).Elem()
}

type ActiveReceiptRuleSetOutput struct{ *pulumi.OutputState }

func (ActiveReceiptRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveReceiptRuleSet)(nil)).Elem()
}

func (o ActiveReceiptRuleSetOutput) ToActiveReceiptRuleSetOutput() ActiveReceiptRuleSetOutput {
	return o
}

func (o ActiveReceiptRuleSetOutput) ToActiveReceiptRuleSetOutputWithContext(ctx context.Context) ActiveReceiptRuleSetOutput {
	return o
}

func (o ActiveReceiptRuleSetOutput) ToOutput(ctx context.Context) pulumix.Output[ActiveReceiptRuleSet] {
	return pulumix.Output[ActiveReceiptRuleSet]{
		OutputState: o.OutputState,
	}
}

// The SES receipt rule set ARN.
func (o ActiveReceiptRuleSetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ActiveReceiptRuleSet](o, func(v ActiveReceiptRuleSet) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the rule set
func (o ActiveReceiptRuleSetOutput) RuleSetName() pulumix.Output[string] {
	value := pulumix.Apply[ActiveReceiptRuleSet](o, func(v ActiveReceiptRuleSet) pulumix.Output[string] { return v.RuleSetName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ActiveReceiptRuleSetOutput{})
}
