// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AppConfig Deployment Strategy resource.
type DeploymentStrategy struct {
	pulumi.CustomResourceState

	// ARN of the AppConfig Deployment Strategy.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
	DeploymentDurationInMinutes pulumix.Output[int] `pulumi:"deploymentDurationInMinutes"`
	// Description of the deployment strategy. Can be at most 1024 characters.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
	FinalBakeTimeInMinutes pulumix.Output[*int] `pulumi:"finalBakeTimeInMinutes"`
	// Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
	GrowthFactor pulumix.Output[float64] `pulumi:"growthFactor"`
	// Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
	GrowthType pulumix.Output[*string] `pulumi:"growthType"`
	// Name for the deployment strategy. Must be between 1 and 64 characters in length.
	Name pulumix.Output[string] `pulumi:"name"`
	// Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
	ReplicateTo pulumix.Output[string] `pulumi:"replicateTo"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDeploymentStrategy registers a new resource with the given unique name, arguments, and options.
func NewDeploymentStrategy(ctx *pulumi.Context,
	name string, args *DeploymentStrategyArgs, opts ...pulumi.ResourceOption) (*DeploymentStrategy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeploymentDurationInMinutes == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentDurationInMinutes'")
	}
	if args.GrowthFactor == nil {
		return nil, errors.New("invalid value for required argument 'GrowthFactor'")
	}
	if args.ReplicateTo == nil {
		return nil, errors.New("invalid value for required argument 'ReplicateTo'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeploymentStrategy
	err := ctx.RegisterResource("aws:appconfig/deploymentStrategy:DeploymentStrategy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeploymentStrategy gets an existing DeploymentStrategy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeploymentStrategy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentStrategyState, opts ...pulumi.ResourceOption) (*DeploymentStrategy, error) {
	var resource DeploymentStrategy
	err := ctx.ReadResource("aws:appconfig/deploymentStrategy:DeploymentStrategy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeploymentStrategy resources.
type deploymentStrategyState struct {
	// ARN of the AppConfig Deployment Strategy.
	Arn *string `pulumi:"arn"`
	// Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
	DeploymentDurationInMinutes *int `pulumi:"deploymentDurationInMinutes"`
	// Description of the deployment strategy. Can be at most 1024 characters.
	Description *string `pulumi:"description"`
	// Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
	FinalBakeTimeInMinutes *int `pulumi:"finalBakeTimeInMinutes"`
	// Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
	GrowthFactor *float64 `pulumi:"growthFactor"`
	// Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
	GrowthType *string `pulumi:"growthType"`
	// Name for the deployment strategy. Must be between 1 and 64 characters in length.
	Name *string `pulumi:"name"`
	// Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
	ReplicateTo *string `pulumi:"replicateTo"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DeploymentStrategyState struct {
	// ARN of the AppConfig Deployment Strategy.
	Arn pulumix.Input[*string]
	// Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
	DeploymentDurationInMinutes pulumix.Input[*int]
	// Description of the deployment strategy. Can be at most 1024 characters.
	Description pulumix.Input[*string]
	// Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
	FinalBakeTimeInMinutes pulumix.Input[*int]
	// Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
	GrowthFactor pulumix.Input[*float64]
	// Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
	GrowthType pulumix.Input[*string]
	// Name for the deployment strategy. Must be between 1 and 64 characters in length.
	Name pulumix.Input[*string]
	// Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
	ReplicateTo pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DeploymentStrategyState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentStrategyState)(nil)).Elem()
}

type deploymentStrategyArgs struct {
	// Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
	DeploymentDurationInMinutes int `pulumi:"deploymentDurationInMinutes"`
	// Description of the deployment strategy. Can be at most 1024 characters.
	Description *string `pulumi:"description"`
	// Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
	FinalBakeTimeInMinutes *int `pulumi:"finalBakeTimeInMinutes"`
	// Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
	GrowthFactor float64 `pulumi:"growthFactor"`
	// Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
	GrowthType *string `pulumi:"growthType"`
	// Name for the deployment strategy. Must be between 1 and 64 characters in length.
	Name *string `pulumi:"name"`
	// Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
	ReplicateTo string `pulumi:"replicateTo"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DeploymentStrategy resource.
type DeploymentStrategyArgs struct {
	// Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
	DeploymentDurationInMinutes pulumix.Input[int]
	// Description of the deployment strategy. Can be at most 1024 characters.
	Description pulumix.Input[*string]
	// Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
	FinalBakeTimeInMinutes pulumix.Input[*int]
	// Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
	GrowthFactor pulumix.Input[float64]
	// Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
	GrowthType pulumix.Input[*string]
	// Name for the deployment strategy. Must be between 1 and 64 characters in length.
	Name pulumix.Input[*string]
	// Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
	ReplicateTo pulumix.Input[string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DeploymentStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentStrategyArgs)(nil)).Elem()
}

type DeploymentStrategyOutput struct{ *pulumi.OutputState }

func (DeploymentStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentStrategy)(nil)).Elem()
}

func (o DeploymentStrategyOutput) ToDeploymentStrategyOutput() DeploymentStrategyOutput {
	return o
}

func (o DeploymentStrategyOutput) ToDeploymentStrategyOutputWithContext(ctx context.Context) DeploymentStrategyOutput {
	return o
}

func (o DeploymentStrategyOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentStrategy] {
	return pulumix.Output[DeploymentStrategy]{
		OutputState: o.OutputState,
	}
}

// ARN of the AppConfig Deployment Strategy.
func (o DeploymentStrategyOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.
func (o DeploymentStrategyOutput) DeploymentDurationInMinutes() pulumix.Output[int] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.Output[int] { return v.DeploymentDurationInMinutes })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Description of the deployment strategy. Can be at most 1024 characters.
func (o DeploymentStrategyOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Amount of time AWS AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back. Minimum value of 0, maximum value of 1440.
func (o DeploymentStrategyOutput) FinalBakeTimeInMinutes() pulumix.Output[*int] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.Output[*int] { return v.FinalBakeTimeInMinutes })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0.
func (o DeploymentStrategyOutput) GrowthFactor() pulumix.Output[float64] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.Output[float64] { return v.GrowthFactor })
	return pulumix.Flatten[float64, pulumix.Output[float64]](value)
}

// Algorithm used to define how percentage grows over time. Valid value: `LINEAR` and `EXPONENTIAL`. Defaults to `LINEAR`.
func (o DeploymentStrategyOutput) GrowthType() pulumix.Output[*string] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.Output[*string] { return v.GrowthType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name for the deployment strategy. Must be between 1 and 64 characters in length.
func (o DeploymentStrategyOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Where to save the deployment strategy. Valid values: `NONE` and `SSM_DOCUMENT`.
func (o DeploymentStrategyOutput) ReplicateTo() pulumix.Output[string] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.Output[string] { return v.ReplicateTo })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DeploymentStrategyOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DeploymentStrategyOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DeploymentStrategy](o, func(v DeploymentStrategy) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DeploymentStrategyOutput{})
}
