// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an independent configuration resource for S3 bucket [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html).
//
// > **NOTE:** S3 Buckets only support a single replication configuration. Declaring multiple `s3.BucketReplicationConfig` resources to the same S3 Bucket will cause a perpetual difference in configuration.
type BucketReplicationConfig struct {
	pulumi.CustomResourceState

	// Name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumix.Output[string] `pulumi:"bucket"`
	// ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumix.Output[string] `pulumi:"role"`
	// List of configuration blocks describing the rules managing the replication. See below.
	Rules pulumix.GArrayOutput[BucketReplicationConfigRule, BucketReplicationConfigRuleOutput] `pulumi:"rules"`
	// Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token pulumix.Output[*string] `pulumi:"token"`
}

// NewBucketReplicationConfig registers a new resource with the given unique name, arguments, and options.
func NewBucketReplicationConfig(ctx *pulumi.Context,
	name string, args *BucketReplicationConfigArgs, opts ...pulumi.ResourceOption) (*BucketReplicationConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.Token != nil {
		untypedSecretValue := pulumi.ToSecret(args.Token.ToOutput(ctx.Context()).Untyped())
		args.Token = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"token",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketReplicationConfig
	err := ctx.RegisterResource("aws:s3/bucketReplicationConfig:BucketReplicationConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketReplicationConfig gets an existing BucketReplicationConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketReplicationConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketReplicationConfigState, opts ...pulumi.ResourceOption) (*BucketReplicationConfig, error) {
	var resource BucketReplicationConfig
	err := ctx.ReadResource("aws:s3/bucketReplicationConfig:BucketReplicationConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketReplicationConfig resources.
type bucketReplicationConfigState struct {
	// Name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket *string `pulumi:"bucket"`
	// ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role *string `pulumi:"role"`
	// List of configuration blocks describing the rules managing the replication. See below.
	Rules []BucketReplicationConfigRule `pulumi:"rules"`
	// Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token *string `pulumi:"token"`
}

type BucketReplicationConfigState struct {
	// Name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumix.Input[*string]
	// ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumix.Input[*string]
	// List of configuration blocks describing the rules managing the replication. See below.
	Rules pulumix.Input[[]*BucketReplicationConfigRuleArgs]
	// Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token pulumix.Input[*string]
}

func (BucketReplicationConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketReplicationConfigState)(nil)).Elem()
}

type bucketReplicationConfigArgs struct {
	// Name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket string `pulumi:"bucket"`
	// ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role string `pulumi:"role"`
	// List of configuration blocks describing the rules managing the replication. See below.
	Rules []BucketReplicationConfigRule `pulumi:"rules"`
	// Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token *string `pulumi:"token"`
}

// The set of arguments for constructing a BucketReplicationConfig resource.
type BucketReplicationConfigArgs struct {
	// Name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumix.Input[string]
	// ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumix.Input[string]
	// List of configuration blocks describing the rules managing the replication. See below.
	Rules pulumix.Input[[]*BucketReplicationConfigRuleArgs]
	// Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token pulumix.Input[*string]
}

func (BucketReplicationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketReplicationConfigArgs)(nil)).Elem()
}

type BucketReplicationConfigOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfig)(nil)).Elem()
}

func (o BucketReplicationConfigOutput) ToBucketReplicationConfigOutput() BucketReplicationConfigOutput {
	return o
}

func (o BucketReplicationConfigOutput) ToBucketReplicationConfigOutputWithContext(ctx context.Context) BucketReplicationConfigOutput {
	return o
}

func (o BucketReplicationConfigOutput) ToOutput(ctx context.Context) pulumix.Output[BucketReplicationConfig] {
	return pulumix.Output[BucketReplicationConfig]{
		OutputState: o.OutputState,
	}
}

// Name of the source S3 bucket you want Amazon S3 to monitor.
func (o BucketReplicationConfigOutput) Bucket() pulumix.Output[string] {
	value := pulumix.Apply[BucketReplicationConfig](o, func(v BucketReplicationConfig) pulumix.Output[string] { return v.Bucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the IAM role for Amazon S3 to assume when replicating the objects.
func (o BucketReplicationConfigOutput) Role() pulumix.Output[string] {
	value := pulumix.Apply[BucketReplicationConfig](o, func(v BucketReplicationConfig) pulumix.Output[string] { return v.Role })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of configuration blocks describing the rules managing the replication. See below.
func (o BucketReplicationConfigOutput) Rules() pulumix.GArrayOutput[BucketReplicationConfigRule, BucketReplicationConfigRuleOutput] {
	value := pulumix.Apply[BucketReplicationConfig](o, func(v BucketReplicationConfig) pulumix.GArrayOutput[BucketReplicationConfigRule, BucketReplicationConfigRuleOutput] {
		return v.Rules
	})
	unwrapped := pulumix.Flatten[[]BucketReplicationConfigRule, pulumix.GArrayOutput[BucketReplicationConfigRule, BucketReplicationConfigRuleOutput]](value)
	return pulumix.GArrayOutput[BucketReplicationConfigRule, BucketReplicationConfigRuleOutput]{OutputState: unwrapped.OutputState}
}

// Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
func (o BucketReplicationConfigOutput) Token() pulumix.Output[*string] {
	value := pulumix.Apply[BucketReplicationConfig](o, func(v BucketReplicationConfig) pulumix.Output[*string] { return v.Token })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(BucketReplicationConfigOutput{})
}
