// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides the ability to register a target with an AWS VPC Lattice Target Group.
type TargetGroupAttachment struct {
	pulumi.CustomResourceState

	// The target.
	Target pulumix.GPtrOutput[TargetGroupAttachmentTarget, TargetGroupAttachmentTargetOutput] `pulumi:"target"`
	// The ID or Amazon Resource Name (ARN) of the target group.
	TargetGroupIdentifier pulumix.Output[string] `pulumi:"targetGroupIdentifier"`
}

// NewTargetGroupAttachment registers a new resource with the given unique name, arguments, and options.
func NewTargetGroupAttachment(ctx *pulumi.Context,
	name string, args *TargetGroupAttachmentArgs, opts ...pulumi.ResourceOption) (*TargetGroupAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	if args.TargetGroupIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'TargetGroupIdentifier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TargetGroupAttachment
	err := ctx.RegisterResource("aws:vpclattice/targetGroupAttachment:TargetGroupAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTargetGroupAttachment gets an existing TargetGroupAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTargetGroupAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TargetGroupAttachmentState, opts ...pulumi.ResourceOption) (*TargetGroupAttachment, error) {
	var resource TargetGroupAttachment
	err := ctx.ReadResource("aws:vpclattice/targetGroupAttachment:TargetGroupAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TargetGroupAttachment resources.
type targetGroupAttachmentState struct {
	// The target.
	Target *TargetGroupAttachmentTarget `pulumi:"target"`
	// The ID or Amazon Resource Name (ARN) of the target group.
	TargetGroupIdentifier *string `pulumi:"targetGroupIdentifier"`
}

type TargetGroupAttachmentState struct {
	// The target.
	Target pulumix.Input[*TargetGroupAttachmentTargetArgs]
	// The ID or Amazon Resource Name (ARN) of the target group.
	TargetGroupIdentifier pulumix.Input[*string]
}

func (TargetGroupAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetGroupAttachmentState)(nil)).Elem()
}

type targetGroupAttachmentArgs struct {
	// The target.
	Target TargetGroupAttachmentTarget `pulumi:"target"`
	// The ID or Amazon Resource Name (ARN) of the target group.
	TargetGroupIdentifier string `pulumi:"targetGroupIdentifier"`
}

// The set of arguments for constructing a TargetGroupAttachment resource.
type TargetGroupAttachmentArgs struct {
	// The target.
	Target pulumix.Input[*TargetGroupAttachmentTargetArgs]
	// The ID or Amazon Resource Name (ARN) of the target group.
	TargetGroupIdentifier pulumix.Input[string]
}

func (TargetGroupAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*targetGroupAttachmentArgs)(nil)).Elem()
}

type TargetGroupAttachmentOutput struct{ *pulumi.OutputState }

func (TargetGroupAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupAttachment)(nil)).Elem()
}

func (o TargetGroupAttachmentOutput) ToTargetGroupAttachmentOutput() TargetGroupAttachmentOutput {
	return o
}

func (o TargetGroupAttachmentOutput) ToTargetGroupAttachmentOutputWithContext(ctx context.Context) TargetGroupAttachmentOutput {
	return o
}

func (o TargetGroupAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[TargetGroupAttachment] {
	return pulumix.Output[TargetGroupAttachment]{
		OutputState: o.OutputState,
	}
}

// The target.
func (o TargetGroupAttachmentOutput) Target() pulumix.GPtrOutput[TargetGroupAttachmentTarget, TargetGroupAttachmentTargetOutput] {
	value := pulumix.Apply[TargetGroupAttachment](o, func(v TargetGroupAttachment) pulumix.GPtrOutput[TargetGroupAttachmentTarget, TargetGroupAttachmentTargetOutput] {
		return v.Target
	})
	unwrapped := pulumix.Flatten[*TargetGroupAttachmentTarget, pulumix.GPtrOutput[TargetGroupAttachmentTarget, TargetGroupAttachmentTargetOutput]](value)
	return pulumix.GPtrOutput[TargetGroupAttachmentTarget, TargetGroupAttachmentTargetOutput]{OutputState: unwrapped.OutputState}
}

// The ID or Amazon Resource Name (ARN) of the target group.
func (o TargetGroupAttachmentOutput) TargetGroupIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[TargetGroupAttachment](o, func(v TargetGroupAttachment) pulumix.Output[string] { return v.TargetGroupIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(TargetGroupAttachmentOutput{})
}
