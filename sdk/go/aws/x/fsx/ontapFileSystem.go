// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon FSx for NetApp ONTAP file system.
// See the [FSx ONTAP User Guide](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/what-is-fsx-ontap.html) for more information.
type OntapFileSystem struct {
	pulumi.CustomResourceState

	// Amazon Resource Name of the file system.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays pulumix.Output[*int] `pulumi:"automaticBackupRetentionDays"`
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime pulumix.Output[string] `pulumi:"dailyAutomaticBackupStartTime"`
	// The filesystem deployment type. Supports `MULTI_AZ_1` and `SINGLE_AZ_1`.
	DeploymentType pulumix.Output[string] `pulumi:"deploymentType"`
	// The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system. See Disk Iops Configuration Below.
	DiskIopsConfiguration pulumix.GPtrOutput[OntapFileSystemDiskIopsConfiguration, OntapFileSystemDiskIopsConfigurationOutput] `pulumi:"diskIopsConfiguration"`
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName pulumix.Output[string] `pulumi:"dnsName"`
	// Specifies the IP address range in which the endpoints to access your file system will be created. By default, Amazon FSx selects an unused IP address range for you from the 198.19.* range.
	EndpointIpAddressRange pulumix.Output[string] `pulumi:"endpointIpAddressRange"`
	// The endpoints that are used to access data or to manage the file system using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
	Endpoints pulumix.GArrayOutput[OntapFileSystemEndpoint, OntapFileSystemEndpointOutput] `pulumi:"endpoints"`
	// The ONTAP administrative password for the fsxadmin user that you can use to administer your file system using the ONTAP CLI and REST API.
	FsxAdminPassword pulumix.Output[*string] `pulumi:"fsxAdminPassword"`
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId pulumix.Output[string] `pulumi:"kmsKeyId"`
	// Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
	NetworkInterfaceIds pulumix.ArrayOutput[string] `pulumi:"networkInterfaceIds"`
	// AWS account identifier that created the file system.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).
	PreferredSubnetId pulumix.Output[string] `pulumi:"preferredSubnetId"`
	// Specifies the VPC route tables in which your file system's endpoints will be created. You should specify all VPC route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds pulumix.ArrayOutput[string] `pulumi:"routeTableIds"`
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"securityGroupIds"`
	// The storage capacity (GiB) of the file system. Valid values between `1024` and `196608`.
	StorageCapacity pulumix.Output[*int] `pulumi:"storageCapacity"`
	// The filesystem storage type. defaults to `SSD`.
	StorageType pulumix.Output[*string] `pulumi:"storageType"`
	// A list of IDs for the subnets that the file system will be accessible from. Upto 2 subnets can be provided.
	SubnetIds pulumix.ArrayOutput[string] `pulumi:"subnetIds"`
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Sets the throughput capacity (in MBps) for the file system that you're creating. Valid values are `128`, `256`, `512`, `1024`, `2048`, and `4096`.
	ThroughputCapacity pulumix.Output[int] `pulumi:"throughputCapacity"`
	// Identifier of the Virtual Private Cloud for the file system.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime pulumix.Output[string] `pulumi:"weeklyMaintenanceStartTime"`
}

// NewOntapFileSystem registers a new resource with the given unique name, arguments, and options.
func NewOntapFileSystem(ctx *pulumi.Context,
	name string, args *OntapFileSystemArgs, opts ...pulumi.ResourceOption) (*OntapFileSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeploymentType == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentType'")
	}
	if args.PreferredSubnetId == nil {
		return nil, errors.New("invalid value for required argument 'PreferredSubnetId'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	if args.ThroughputCapacity == nil {
		return nil, errors.New("invalid value for required argument 'ThroughputCapacity'")
	}
	if args.FsxAdminPassword != nil {
		untypedSecretValue := pulumi.ToSecret(args.FsxAdminPassword.ToOutput(ctx.Context()).Untyped())
		args.FsxAdminPassword = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"fsxAdminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OntapFileSystem
	err := ctx.RegisterResource("aws:fsx/ontapFileSystem:OntapFileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOntapFileSystem gets an existing OntapFileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOntapFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OntapFileSystemState, opts ...pulumi.ResourceOption) (*OntapFileSystem, error) {
	var resource OntapFileSystem
	err := ctx.ReadResource("aws:fsx/ontapFileSystem:OntapFileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OntapFileSystem resources.
type ontapFileSystemState struct {
	// Amazon Resource Name of the file system.
	Arn *string `pulumi:"arn"`
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays *int `pulumi:"automaticBackupRetentionDays"`
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime *string `pulumi:"dailyAutomaticBackupStartTime"`
	// The filesystem deployment type. Supports `MULTI_AZ_1` and `SINGLE_AZ_1`.
	DeploymentType *string `pulumi:"deploymentType"`
	// The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system. See Disk Iops Configuration Below.
	DiskIopsConfiguration *OntapFileSystemDiskIopsConfiguration `pulumi:"diskIopsConfiguration"`
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// Specifies the IP address range in which the endpoints to access your file system will be created. By default, Amazon FSx selects an unused IP address range for you from the 198.19.* range.
	EndpointIpAddressRange *string `pulumi:"endpointIpAddressRange"`
	// The endpoints that are used to access data or to manage the file system using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
	Endpoints []OntapFileSystemEndpoint `pulumi:"endpoints"`
	// The ONTAP administrative password for the fsxadmin user that you can use to administer your file system using the ONTAP CLI and REST API.
	FsxAdminPassword *string `pulumi:"fsxAdminPassword"`
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
	NetworkInterfaceIds []string `pulumi:"networkInterfaceIds"`
	// AWS account identifier that created the file system.
	OwnerId *string `pulumi:"ownerId"`
	// The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).
	PreferredSubnetId *string `pulumi:"preferredSubnetId"`
	// Specifies the VPC route tables in which your file system's endpoints will be created. You should specify all VPC route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds []string `pulumi:"routeTableIds"`
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The storage capacity (GiB) of the file system. Valid values between `1024` and `196608`.
	StorageCapacity *int `pulumi:"storageCapacity"`
	// The filesystem storage type. defaults to `SSD`.
	StorageType *string `pulumi:"storageType"`
	// A list of IDs for the subnets that the file system will be accessible from. Upto 2 subnets can be provided.
	SubnetIds []string `pulumi:"subnetIds"`
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Sets the throughput capacity (in MBps) for the file system that you're creating. Valid values are `128`, `256`, `512`, `1024`, `2048`, and `4096`.
	ThroughputCapacity *int `pulumi:"throughputCapacity"`
	// Identifier of the Virtual Private Cloud for the file system.
	VpcId *string `pulumi:"vpcId"`
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime *string `pulumi:"weeklyMaintenanceStartTime"`
}

type OntapFileSystemState struct {
	// Amazon Resource Name of the file system.
	Arn pulumix.Input[*string]
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays pulumix.Input[*int]
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime pulumix.Input[*string]
	// The filesystem deployment type. Supports `MULTI_AZ_1` and `SINGLE_AZ_1`.
	DeploymentType pulumix.Input[*string]
	// The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system. See Disk Iops Configuration Below.
	DiskIopsConfiguration pulumix.Input[*OntapFileSystemDiskIopsConfigurationArgs]
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName pulumix.Input[*string]
	// Specifies the IP address range in which the endpoints to access your file system will be created. By default, Amazon FSx selects an unused IP address range for you from the 198.19.* range.
	EndpointIpAddressRange pulumix.Input[*string]
	// The endpoints that are used to access data or to manage the file system using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
	Endpoints pulumix.Input[[]*OntapFileSystemEndpointArgs]
	// The ONTAP administrative password for the fsxadmin user that you can use to administer your file system using the ONTAP CLI and REST API.
	FsxAdminPassword pulumix.Input[*string]
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId pulumix.Input[*string]
	// Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
	NetworkInterfaceIds pulumix.Input[[]string]
	// AWS account identifier that created the file system.
	OwnerId pulumix.Input[*string]
	// The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).
	PreferredSubnetId pulumix.Input[*string]
	// Specifies the VPC route tables in which your file system's endpoints will be created. You should specify all VPC route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds pulumix.Input[[]string]
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds pulumix.Input[[]string]
	// The storage capacity (GiB) of the file system. Valid values between `1024` and `196608`.
	StorageCapacity pulumix.Input[*int]
	// The filesystem storage type. defaults to `SSD`.
	StorageType pulumix.Input[*string]
	// A list of IDs for the subnets that the file system will be accessible from. Upto 2 subnets can be provided.
	SubnetIds pulumix.Input[[]string]
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Sets the throughput capacity (in MBps) for the file system that you're creating. Valid values are `128`, `256`, `512`, `1024`, `2048`, and `4096`.
	ThroughputCapacity pulumix.Input[*int]
	// Identifier of the Virtual Private Cloud for the file system.
	VpcId pulumix.Input[*string]
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime pulumix.Input[*string]
}

func (OntapFileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*ontapFileSystemState)(nil)).Elem()
}

type ontapFileSystemArgs struct {
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays *int `pulumi:"automaticBackupRetentionDays"`
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime *string `pulumi:"dailyAutomaticBackupStartTime"`
	// The filesystem deployment type. Supports `MULTI_AZ_1` and `SINGLE_AZ_1`.
	DeploymentType string `pulumi:"deploymentType"`
	// The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system. See Disk Iops Configuration Below.
	DiskIopsConfiguration *OntapFileSystemDiskIopsConfiguration `pulumi:"diskIopsConfiguration"`
	// Specifies the IP address range in which the endpoints to access your file system will be created. By default, Amazon FSx selects an unused IP address range for you from the 198.19.* range.
	EndpointIpAddressRange *string `pulumi:"endpointIpAddressRange"`
	// The ONTAP administrative password for the fsxadmin user that you can use to administer your file system using the ONTAP CLI and REST API.
	FsxAdminPassword *string `pulumi:"fsxAdminPassword"`
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).
	PreferredSubnetId string `pulumi:"preferredSubnetId"`
	// Specifies the VPC route tables in which your file system's endpoints will be created. You should specify all VPC route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds []string `pulumi:"routeTableIds"`
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The storage capacity (GiB) of the file system. Valid values between `1024` and `196608`.
	StorageCapacity *int `pulumi:"storageCapacity"`
	// The filesystem storage type. defaults to `SSD`.
	StorageType *string `pulumi:"storageType"`
	// A list of IDs for the subnets that the file system will be accessible from. Upto 2 subnets can be provided.
	SubnetIds []string `pulumi:"subnetIds"`
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Sets the throughput capacity (in MBps) for the file system that you're creating. Valid values are `128`, `256`, `512`, `1024`, `2048`, and `4096`.
	ThroughputCapacity int `pulumi:"throughputCapacity"`
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime *string `pulumi:"weeklyMaintenanceStartTime"`
}

// The set of arguments for constructing a OntapFileSystem resource.
type OntapFileSystemArgs struct {
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays pulumix.Input[*int]
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime pulumix.Input[*string]
	// The filesystem deployment type. Supports `MULTI_AZ_1` and `SINGLE_AZ_1`.
	DeploymentType pulumix.Input[string]
	// The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system. See Disk Iops Configuration Below.
	DiskIopsConfiguration pulumix.Input[*OntapFileSystemDiskIopsConfigurationArgs]
	// Specifies the IP address range in which the endpoints to access your file system will be created. By default, Amazon FSx selects an unused IP address range for you from the 198.19.* range.
	EndpointIpAddressRange pulumix.Input[*string]
	// The ONTAP administrative password for the fsxadmin user that you can use to administer your file system using the ONTAP CLI and REST API.
	FsxAdminPassword pulumix.Input[*string]
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId pulumix.Input[*string]
	// The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).
	PreferredSubnetId pulumix.Input[string]
	// Specifies the VPC route tables in which your file system's endpoints will be created. You should specify all VPC route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds pulumix.Input[[]string]
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds pulumix.Input[[]string]
	// The storage capacity (GiB) of the file system. Valid values between `1024` and `196608`.
	StorageCapacity pulumix.Input[*int]
	// The filesystem storage type. defaults to `SSD`.
	StorageType pulumix.Input[*string]
	// A list of IDs for the subnets that the file system will be accessible from. Upto 2 subnets can be provided.
	SubnetIds pulumix.Input[[]string]
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Sets the throughput capacity (in MBps) for the file system that you're creating. Valid values are `128`, `256`, `512`, `1024`, `2048`, and `4096`.
	ThroughputCapacity pulumix.Input[int]
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime pulumix.Input[*string]
}

func (OntapFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ontapFileSystemArgs)(nil)).Elem()
}

type OntapFileSystemOutput struct{ *pulumi.OutputState }

func (OntapFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystem)(nil)).Elem()
}

func (o OntapFileSystemOutput) ToOntapFileSystemOutput() OntapFileSystemOutput {
	return o
}

func (o OntapFileSystemOutput) ToOntapFileSystemOutputWithContext(ctx context.Context) OntapFileSystemOutput {
	return o
}

func (o OntapFileSystemOutput) ToOutput(ctx context.Context) pulumix.Output[OntapFileSystem] {
	return pulumix.Output[OntapFileSystem]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name of the file system.
func (o OntapFileSystemOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
func (o OntapFileSystemOutput) AutomaticBackupRetentionDays() pulumix.Output[*int] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[*int] { return v.AutomaticBackupRetentionDays })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
func (o OntapFileSystemOutput) DailyAutomaticBackupStartTime() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.DailyAutomaticBackupStartTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The filesystem deployment type. Supports `MULTI_AZ_1` and `SINGLE_AZ_1`.
func (o OntapFileSystemOutput) DeploymentType() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.DeploymentType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The SSD IOPS configuration for the Amazon FSx for NetApp ONTAP file system. See Disk Iops Configuration Below.
func (o OntapFileSystemOutput) DiskIopsConfiguration() pulumix.GPtrOutput[OntapFileSystemDiskIopsConfiguration, OntapFileSystemDiskIopsConfigurationOutput] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.GPtrOutput[OntapFileSystemDiskIopsConfiguration, OntapFileSystemDiskIopsConfigurationOutput] {
		return v.DiskIopsConfiguration
	})
	unwrapped := pulumix.Flatten[*OntapFileSystemDiskIopsConfiguration, pulumix.GPtrOutput[OntapFileSystemDiskIopsConfiguration, OntapFileSystemDiskIopsConfigurationOutput]](value)
	return pulumix.GPtrOutput[OntapFileSystemDiskIopsConfiguration, OntapFileSystemDiskIopsConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
func (o OntapFileSystemOutput) DnsName() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.DnsName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the IP address range in which the endpoints to access your file system will be created. By default, Amazon FSx selects an unused IP address range for you from the 198.19.* range.
func (o OntapFileSystemOutput) EndpointIpAddressRange() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.EndpointIpAddressRange })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The endpoints that are used to access data or to manage the file system using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
func (o OntapFileSystemOutput) Endpoints() pulumix.GArrayOutput[OntapFileSystemEndpoint, OntapFileSystemEndpointOutput] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.GArrayOutput[OntapFileSystemEndpoint, OntapFileSystemEndpointOutput] {
		return v.Endpoints
	})
	unwrapped := pulumix.Flatten[[]OntapFileSystemEndpoint, pulumix.GArrayOutput[OntapFileSystemEndpoint, OntapFileSystemEndpointOutput]](value)
	return pulumix.GArrayOutput[OntapFileSystemEndpoint, OntapFileSystemEndpointOutput]{OutputState: unwrapped.OutputState}
}

// The ONTAP administrative password for the fsxadmin user that you can use to administer your file system using the ONTAP CLI and REST API.
func (o OntapFileSystemOutput) FsxAdminPassword() pulumix.Output[*string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[*string] { return v.FsxAdminPassword })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
func (o OntapFileSystemOutput) KmsKeyId() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.KmsKeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
func (o OntapFileSystemOutput) NetworkInterfaceIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.ArrayOutput[string] { return v.NetworkInterfaceIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// AWS account identifier that created the file system.
func (o OntapFileSystemOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).
func (o OntapFileSystemOutput) PreferredSubnetId() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.PreferredSubnetId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the VPC route tables in which your file system's endpoints will be created. You should specify all VPC route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
func (o OntapFileSystemOutput) RouteTableIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.ArrayOutput[string] { return v.RouteTableIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
func (o OntapFileSystemOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.ArrayOutput[string] { return v.SecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The storage capacity (GiB) of the file system. Valid values between `1024` and `196608`.
func (o OntapFileSystemOutput) StorageCapacity() pulumix.Output[*int] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[*int] { return v.StorageCapacity })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The filesystem storage type. defaults to `SSD`.
func (o OntapFileSystemOutput) StorageType() pulumix.Output[*string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[*string] { return v.StorageType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A list of IDs for the subnets that the file system will be accessible from. Upto 2 subnets can be provided.
func (o OntapFileSystemOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.ArrayOutput[string] { return v.SubnetIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o OntapFileSystemOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o OntapFileSystemOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Sets the throughput capacity (in MBps) for the file system that you're creating. Valid values are `128`, `256`, `512`, `1024`, `2048`, and `4096`.
func (o OntapFileSystemOutput) ThroughputCapacity() pulumix.Output[int] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[int] { return v.ThroughputCapacity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Identifier of the Virtual Private Cloud for the file system.
func (o OntapFileSystemOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
func (o OntapFileSystemOutput) WeeklyMaintenanceStartTime() pulumix.Output[string] {
	value := pulumix.Apply[OntapFileSystem](o, func(v OntapFileSystem) pulumix.Output[string] { return v.WeeklyMaintenanceStartTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(OntapFileSystemOutput{})
}
