// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an SNS topic resource
type Topic struct {
	pulumi.CustomResourceState

	// IAM role for failure feedback
	ApplicationFailureFeedbackRoleArn pulumix.Output[*string] `pulumi:"applicationFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	ApplicationSuccessFeedbackRoleArn pulumix.Output[*string] `pulumi:"applicationSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	ApplicationSuccessFeedbackSampleRate pulumix.Output[*int] `pulumi:"applicationSuccessFeedbackSampleRate"`
	// The ARN of the SNS topic, as a more obvious property (clone of id)
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Enables content-based deduplication for FIFO topics. For more information, see the [related documentation](https://docs.aws.amazon.com/sns/latest/dg/fifo-message-dedup.html)
	ContentBasedDeduplication pulumix.Output[*bool] `pulumi:"contentBasedDeduplication"`
	// The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
	DeliveryPolicy pulumix.Output[*string] `pulumi:"deliveryPolicy"`
	// The display name for the topic
	DisplayName pulumix.Output[*string] `pulumi:"displayName"`
	// Boolean indicating whether or not to create a FIFO (first-in-first-out) topic (default is `false`).
	FifoTopic pulumix.Output[*bool] `pulumi:"fifoTopic"`
	// IAM role for failure feedback
	FirehoseFailureFeedbackRoleArn pulumix.Output[*string] `pulumi:"firehoseFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	FirehoseSuccessFeedbackRoleArn pulumix.Output[*string] `pulumi:"firehoseSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	FirehoseSuccessFeedbackSampleRate pulumix.Output[*int] `pulumi:"firehoseSuccessFeedbackSampleRate"`
	// IAM role for failure feedback
	HttpFailureFeedbackRoleArn pulumix.Output[*string] `pulumi:"httpFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	HttpSuccessFeedbackRoleArn pulumix.Output[*string] `pulumi:"httpSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	HttpSuccessFeedbackSampleRate pulumix.Output[*int] `pulumi:"httpSuccessFeedbackSampleRate"`
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
	KmsMasterKeyId pulumix.Output[*string] `pulumi:"kmsMasterKeyId"`
	// IAM role for failure feedback
	LambdaFailureFeedbackRoleArn pulumix.Output[*string] `pulumi:"lambdaFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	LambdaSuccessFeedbackRoleArn pulumix.Output[*string] `pulumi:"lambdaSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	LambdaSuccessFeedbackSampleRate pulumix.Output[*int] `pulumi:"lambdaSuccessFeedbackSampleRate"`
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. For a FIFO (first-in-first-out) topic, the name must end with the `.fifo` suffix. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`
	Name pulumix.Output[string] `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`
	NamePrefix pulumix.Output[string] `pulumi:"namePrefix"`
	// The AWS Account ID of the SNS topic owner
	Owner pulumix.Output[string] `pulumi:"owner"`
	// The fully-formed AWS policy as JSON.
	Policy pulumix.Output[string] `pulumi:"policy"`
	// If `SignatureVersion` should be [1 (SHA1) or 2 (SHA256)](https://docs.aws.amazon.com/sns/latest/dg/sns-verify-signature-of-message.html). The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS.
	SignatureVersion pulumix.Output[int] `pulumi:"signatureVersion"`
	// IAM role for failure feedback
	SqsFailureFeedbackRoleArn pulumix.Output[*string] `pulumi:"sqsFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	SqsSuccessFeedbackRoleArn pulumix.Output[*string] `pulumi:"sqsSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	SqsSuccessFeedbackSampleRate pulumix.Output[*int] `pulumi:"sqsSuccessFeedbackSampleRate"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Tracing mode of an Amazon SNS topic. Valid values: `"PassThrough"`, `"Active"`.
	TracingConfig pulumix.Output[string] `pulumi:"tracingConfig"`
}

// NewTopic registers a new resource with the given unique name, arguments, and options.
func NewTopic(ctx *pulumi.Context,
	name string, args *TopicArgs, opts ...pulumi.ResourceOption) (*Topic, error) {
	if args == nil {
		args = &TopicArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Topic
	err := ctx.RegisterResource("aws:sns/topic:Topic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTopic gets an existing Topic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TopicState, opts ...pulumi.ResourceOption) (*Topic, error) {
	var resource Topic
	err := ctx.ReadResource("aws:sns/topic:Topic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Topic resources.
type topicState struct {
	// IAM role for failure feedback
	ApplicationFailureFeedbackRoleArn *string `pulumi:"applicationFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	ApplicationSuccessFeedbackRoleArn *string `pulumi:"applicationSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	ApplicationSuccessFeedbackSampleRate *int `pulumi:"applicationSuccessFeedbackSampleRate"`
	// The ARN of the SNS topic, as a more obvious property (clone of id)
	Arn *string `pulumi:"arn"`
	// Enables content-based deduplication for FIFO topics. For more information, see the [related documentation](https://docs.aws.amazon.com/sns/latest/dg/fifo-message-dedup.html)
	ContentBasedDeduplication *bool `pulumi:"contentBasedDeduplication"`
	// The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
	DeliveryPolicy *string `pulumi:"deliveryPolicy"`
	// The display name for the topic
	DisplayName *string `pulumi:"displayName"`
	// Boolean indicating whether or not to create a FIFO (first-in-first-out) topic (default is `false`).
	FifoTopic *bool `pulumi:"fifoTopic"`
	// IAM role for failure feedback
	FirehoseFailureFeedbackRoleArn *string `pulumi:"firehoseFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	FirehoseSuccessFeedbackRoleArn *string `pulumi:"firehoseSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	FirehoseSuccessFeedbackSampleRate *int `pulumi:"firehoseSuccessFeedbackSampleRate"`
	// IAM role for failure feedback
	HttpFailureFeedbackRoleArn *string `pulumi:"httpFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	HttpSuccessFeedbackRoleArn *string `pulumi:"httpSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	HttpSuccessFeedbackSampleRate *int `pulumi:"httpSuccessFeedbackSampleRate"`
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
	KmsMasterKeyId *string `pulumi:"kmsMasterKeyId"`
	// IAM role for failure feedback
	LambdaFailureFeedbackRoleArn *string `pulumi:"lambdaFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	LambdaSuccessFeedbackRoleArn *string `pulumi:"lambdaSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	LambdaSuccessFeedbackSampleRate *int `pulumi:"lambdaSuccessFeedbackSampleRate"`
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. For a FIFO (first-in-first-out) topic, the name must end with the `.fifo` suffix. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`
	NamePrefix *string `pulumi:"namePrefix"`
	// The AWS Account ID of the SNS topic owner
	Owner *string `pulumi:"owner"`
	// The fully-formed AWS policy as JSON.
	Policy *string `pulumi:"policy"`
	// If `SignatureVersion` should be [1 (SHA1) or 2 (SHA256)](https://docs.aws.amazon.com/sns/latest/dg/sns-verify-signature-of-message.html). The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS.
	SignatureVersion *int `pulumi:"signatureVersion"`
	// IAM role for failure feedback
	SqsFailureFeedbackRoleArn *string `pulumi:"sqsFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	SqsSuccessFeedbackRoleArn *string `pulumi:"sqsSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	SqsSuccessFeedbackSampleRate *int `pulumi:"sqsSuccessFeedbackSampleRate"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Tracing mode of an Amazon SNS topic. Valid values: `"PassThrough"`, `"Active"`.
	TracingConfig *string `pulumi:"tracingConfig"`
}

type TopicState struct {
	// IAM role for failure feedback
	ApplicationFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	ApplicationSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	ApplicationSuccessFeedbackSampleRate pulumix.Input[*int]
	// The ARN of the SNS topic, as a more obvious property (clone of id)
	Arn pulumix.Input[*string]
	// Enables content-based deduplication for FIFO topics. For more information, see the [related documentation](https://docs.aws.amazon.com/sns/latest/dg/fifo-message-dedup.html)
	ContentBasedDeduplication pulumix.Input[*bool]
	// The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
	DeliveryPolicy pulumix.Input[*string]
	// The display name for the topic
	DisplayName pulumix.Input[*string]
	// Boolean indicating whether or not to create a FIFO (first-in-first-out) topic (default is `false`).
	FifoTopic pulumix.Input[*bool]
	// IAM role for failure feedback
	FirehoseFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	FirehoseSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	FirehoseSuccessFeedbackSampleRate pulumix.Input[*int]
	// IAM role for failure feedback
	HttpFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	HttpSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	HttpSuccessFeedbackSampleRate pulumix.Input[*int]
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
	KmsMasterKeyId pulumix.Input[*string]
	// IAM role for failure feedback
	LambdaFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	LambdaSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	LambdaSuccessFeedbackSampleRate pulumix.Input[*int]
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. For a FIFO (first-in-first-out) topic, the name must end with the `.fifo` suffix. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`
	NamePrefix pulumix.Input[*string]
	// The AWS Account ID of the SNS topic owner
	Owner pulumix.Input[*string]
	// The fully-formed AWS policy as JSON.
	Policy pulumix.Input[*string]
	// If `SignatureVersion` should be [1 (SHA1) or 2 (SHA256)](https://docs.aws.amazon.com/sns/latest/dg/sns-verify-signature-of-message.html). The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS.
	SignatureVersion pulumix.Input[*int]
	// IAM role for failure feedback
	SqsFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	SqsSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	SqsSuccessFeedbackSampleRate pulumix.Input[*int]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Tracing mode of an Amazon SNS topic. Valid values: `"PassThrough"`, `"Active"`.
	TracingConfig pulumix.Input[*string]
}

func (TopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*topicState)(nil)).Elem()
}

type topicArgs struct {
	// IAM role for failure feedback
	ApplicationFailureFeedbackRoleArn *string `pulumi:"applicationFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	ApplicationSuccessFeedbackRoleArn *string `pulumi:"applicationSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	ApplicationSuccessFeedbackSampleRate *int `pulumi:"applicationSuccessFeedbackSampleRate"`
	// Enables content-based deduplication for FIFO topics. For more information, see the [related documentation](https://docs.aws.amazon.com/sns/latest/dg/fifo-message-dedup.html)
	ContentBasedDeduplication *bool `pulumi:"contentBasedDeduplication"`
	// The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
	DeliveryPolicy *string `pulumi:"deliveryPolicy"`
	// The display name for the topic
	DisplayName *string `pulumi:"displayName"`
	// Boolean indicating whether or not to create a FIFO (first-in-first-out) topic (default is `false`).
	FifoTopic *bool `pulumi:"fifoTopic"`
	// IAM role for failure feedback
	FirehoseFailureFeedbackRoleArn *string `pulumi:"firehoseFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	FirehoseSuccessFeedbackRoleArn *string `pulumi:"firehoseSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	FirehoseSuccessFeedbackSampleRate *int `pulumi:"firehoseSuccessFeedbackSampleRate"`
	// IAM role for failure feedback
	HttpFailureFeedbackRoleArn *string `pulumi:"httpFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	HttpSuccessFeedbackRoleArn *string `pulumi:"httpSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	HttpSuccessFeedbackSampleRate *int `pulumi:"httpSuccessFeedbackSampleRate"`
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
	KmsMasterKeyId *string `pulumi:"kmsMasterKeyId"`
	// IAM role for failure feedback
	LambdaFailureFeedbackRoleArn *string `pulumi:"lambdaFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	LambdaSuccessFeedbackRoleArn *string `pulumi:"lambdaSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	LambdaSuccessFeedbackSampleRate *int `pulumi:"lambdaSuccessFeedbackSampleRate"`
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. For a FIFO (first-in-first-out) topic, the name must end with the `.fifo` suffix. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`
	NamePrefix *string `pulumi:"namePrefix"`
	// The fully-formed AWS policy as JSON.
	Policy *string `pulumi:"policy"`
	// If `SignatureVersion` should be [1 (SHA1) or 2 (SHA256)](https://docs.aws.amazon.com/sns/latest/dg/sns-verify-signature-of-message.html). The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS.
	SignatureVersion *int `pulumi:"signatureVersion"`
	// IAM role for failure feedback
	SqsFailureFeedbackRoleArn *string `pulumi:"sqsFailureFeedbackRoleArn"`
	// The IAM role permitted to receive success feedback for this topic
	SqsSuccessFeedbackRoleArn *string `pulumi:"sqsSuccessFeedbackRoleArn"`
	// Percentage of success to sample
	SqsSuccessFeedbackSampleRate *int `pulumi:"sqsSuccessFeedbackSampleRate"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Tracing mode of an Amazon SNS topic. Valid values: `"PassThrough"`, `"Active"`.
	TracingConfig *string `pulumi:"tracingConfig"`
}

// The set of arguments for constructing a Topic resource.
type TopicArgs struct {
	// IAM role for failure feedback
	ApplicationFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	ApplicationSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	ApplicationSuccessFeedbackSampleRate pulumix.Input[*int]
	// Enables content-based deduplication for FIFO topics. For more information, see the [related documentation](https://docs.aws.amazon.com/sns/latest/dg/fifo-message-dedup.html)
	ContentBasedDeduplication pulumix.Input[*bool]
	// The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
	DeliveryPolicy pulumix.Input[*string]
	// The display name for the topic
	DisplayName pulumix.Input[*string]
	// Boolean indicating whether or not to create a FIFO (first-in-first-out) topic (default is `false`).
	FifoTopic pulumix.Input[*bool]
	// IAM role for failure feedback
	FirehoseFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	FirehoseSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	FirehoseSuccessFeedbackSampleRate pulumix.Input[*int]
	// IAM role for failure feedback
	HttpFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	HttpSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	HttpSuccessFeedbackSampleRate pulumix.Input[*int]
	// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
	KmsMasterKeyId pulumix.Input[*string]
	// IAM role for failure feedback
	LambdaFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	LambdaSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	LambdaSuccessFeedbackSampleRate pulumix.Input[*int]
	// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. For a FIFO (first-in-first-out) topic, the name must end with the `.fifo` suffix. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`
	NamePrefix pulumix.Input[*string]
	// The fully-formed AWS policy as JSON.
	Policy pulumix.Input[*string]
	// If `SignatureVersion` should be [1 (SHA1) or 2 (SHA256)](https://docs.aws.amazon.com/sns/latest/dg/sns-verify-signature-of-message.html). The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS.
	SignatureVersion pulumix.Input[*int]
	// IAM role for failure feedback
	SqsFailureFeedbackRoleArn pulumix.Input[*string]
	// The IAM role permitted to receive success feedback for this topic
	SqsSuccessFeedbackRoleArn pulumix.Input[*string]
	// Percentage of success to sample
	SqsSuccessFeedbackSampleRate pulumix.Input[*int]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Tracing mode of an Amazon SNS topic. Valid values: `"PassThrough"`, `"Active"`.
	TracingConfig pulumix.Input[*string]
}

func (TopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*topicArgs)(nil)).Elem()
}

type TopicOutput struct{ *pulumi.OutputState }

func (TopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Topic)(nil)).Elem()
}

func (o TopicOutput) ToTopicOutput() TopicOutput {
	return o
}

func (o TopicOutput) ToTopicOutputWithContext(ctx context.Context) TopicOutput {
	return o
}

func (o TopicOutput) ToOutput(ctx context.Context) pulumix.Output[Topic] {
	return pulumix.Output[Topic]{
		OutputState: o.OutputState,
	}
}

// IAM role for failure feedback
func (o TopicOutput) ApplicationFailureFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.ApplicationFailureFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The IAM role permitted to receive success feedback for this topic
func (o TopicOutput) ApplicationSuccessFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.ApplicationSuccessFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Percentage of success to sample
func (o TopicOutput) ApplicationSuccessFeedbackSampleRate() pulumix.Output[*int] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*int] { return v.ApplicationSuccessFeedbackSampleRate })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The ARN of the SNS topic, as a more obvious property (clone of id)
func (o TopicOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Enables content-based deduplication for FIFO topics. For more information, see the [related documentation](https://docs.aws.amazon.com/sns/latest/dg/fifo-message-dedup.html)
func (o TopicOutput) ContentBasedDeduplication() pulumix.Output[*bool] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*bool] { return v.ContentBasedDeduplication })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
func (o TopicOutput) DeliveryPolicy() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.DeliveryPolicy })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The display name for the topic
func (o TopicOutput) DisplayName() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.DisplayName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Boolean indicating whether or not to create a FIFO (first-in-first-out) topic (default is `false`).
func (o TopicOutput) FifoTopic() pulumix.Output[*bool] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*bool] { return v.FifoTopic })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// IAM role for failure feedback
func (o TopicOutput) FirehoseFailureFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.FirehoseFailureFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The IAM role permitted to receive success feedback for this topic
func (o TopicOutput) FirehoseSuccessFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.FirehoseSuccessFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Percentage of success to sample
func (o TopicOutput) FirehoseSuccessFeedbackSampleRate() pulumix.Output[*int] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*int] { return v.FirehoseSuccessFeedbackSampleRate })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// IAM role for failure feedback
func (o TopicOutput) HttpFailureFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.HttpFailureFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The IAM role permitted to receive success feedback for this topic
func (o TopicOutput) HttpSuccessFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.HttpSuccessFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Percentage of success to sample
func (o TopicOutput) HttpSuccessFeedbackSampleRate() pulumix.Output[*int] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*int] { return v.HttpSuccessFeedbackSampleRate })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
func (o TopicOutput) KmsMasterKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.KmsMasterKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// IAM role for failure feedback
func (o TopicOutput) LambdaFailureFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.LambdaFailureFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The IAM role permitted to receive success feedback for this topic
func (o TopicOutput) LambdaSuccessFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.LambdaSuccessFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Percentage of success to sample
func (o TopicOutput) LambdaSuccessFeedbackSampleRate() pulumix.Output[*int] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*int] { return v.LambdaSuccessFeedbackSampleRate })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. For a FIFO (first-in-first-out) topic, the name must end with the `.fifo` suffix. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`
func (o TopicOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique name beginning with the specified prefix. Conflicts with `name`
func (o TopicOutput) NamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[string] { return v.NamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS Account ID of the SNS topic owner
func (o TopicOutput) Owner() pulumix.Output[string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[string] { return v.Owner })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The fully-formed AWS policy as JSON.
func (o TopicOutput) Policy() pulumix.Output[string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[string] { return v.Policy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If `SignatureVersion` should be [1 (SHA1) or 2 (SHA256)](https://docs.aws.amazon.com/sns/latest/dg/sns-verify-signature-of-message.html). The signature version corresponds to the hashing algorithm used while creating the signature of the notifications, subscription confirmations, or unsubscribe confirmation messages sent by Amazon SNS.
func (o TopicOutput) SignatureVersion() pulumix.Output[int] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[int] { return v.SignatureVersion })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// IAM role for failure feedback
func (o TopicOutput) SqsFailureFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.SqsFailureFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The IAM role permitted to receive success feedback for this topic
func (o TopicOutput) SqsSuccessFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*string] { return v.SqsSuccessFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Percentage of success to sample
func (o TopicOutput) SqsSuccessFeedbackSampleRate() pulumix.Output[*int] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[*int] { return v.SqsSuccessFeedbackSampleRate })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TopicOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TopicOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Tracing mode of an Amazon SNS topic. Valid values: `"PassThrough"`, `"Active"`.
func (o TopicOutput) TracingConfig() pulumix.Output[string] {
	value := pulumix.Apply[Topic](o, func(v Topic) pulumix.Output[string] { return v.TracingConfig })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(TopicOutput{})
}
