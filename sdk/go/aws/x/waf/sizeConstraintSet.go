// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a WAF Size Constraint Set Resource
type SizeConstraintSet struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN)
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name or description of the Size Constraint Set.
	Name pulumix.Output[string] `pulumi:"name"`
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints pulumix.GArrayOutput[SizeConstraintSetSizeConstraint, SizeConstraintSetSizeConstraintOutput] `pulumi:"sizeConstraints"`
}

// NewSizeConstraintSet registers a new resource with the given unique name, arguments, and options.
func NewSizeConstraintSet(ctx *pulumi.Context,
	name string, args *SizeConstraintSetArgs, opts ...pulumi.ResourceOption) (*SizeConstraintSet, error) {
	if args == nil {
		args = &SizeConstraintSetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SizeConstraintSet
	err := ctx.RegisterResource("aws:waf/sizeConstraintSet:SizeConstraintSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSizeConstraintSet gets an existing SizeConstraintSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSizeConstraintSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SizeConstraintSetState, opts ...pulumi.ResourceOption) (*SizeConstraintSet, error) {
	var resource SizeConstraintSet
	err := ctx.ReadResource("aws:waf/sizeConstraintSet:SizeConstraintSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SizeConstraintSet resources.
type sizeConstraintSetState struct {
	// Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// The name or description of the Size Constraint Set.
	Name *string `pulumi:"name"`
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints []SizeConstraintSetSizeConstraint `pulumi:"sizeConstraints"`
}

type SizeConstraintSetState struct {
	// Amazon Resource Name (ARN)
	Arn pulumix.Input[*string]
	// The name or description of the Size Constraint Set.
	Name pulumix.Input[*string]
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints pulumix.Input[[]*SizeConstraintSetSizeConstraintArgs]
}

func (SizeConstraintSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*sizeConstraintSetState)(nil)).Elem()
}

type sizeConstraintSetArgs struct {
	// The name or description of the Size Constraint Set.
	Name *string `pulumi:"name"`
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints []SizeConstraintSetSizeConstraint `pulumi:"sizeConstraints"`
}

// The set of arguments for constructing a SizeConstraintSet resource.
type SizeConstraintSetArgs struct {
	// The name or description of the Size Constraint Set.
	Name pulumix.Input[*string]
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints pulumix.Input[[]*SizeConstraintSetSizeConstraintArgs]
}

func (SizeConstraintSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sizeConstraintSetArgs)(nil)).Elem()
}

type SizeConstraintSetOutput struct{ *pulumi.OutputState }

func (SizeConstraintSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConstraintSet)(nil)).Elem()
}

func (o SizeConstraintSetOutput) ToSizeConstraintSetOutput() SizeConstraintSetOutput {
	return o
}

func (o SizeConstraintSetOutput) ToSizeConstraintSetOutputWithContext(ctx context.Context) SizeConstraintSetOutput {
	return o
}

func (o SizeConstraintSetOutput) ToOutput(ctx context.Context) pulumix.Output[SizeConstraintSet] {
	return pulumix.Output[SizeConstraintSet]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN)
func (o SizeConstraintSetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[SizeConstraintSet](o, func(v SizeConstraintSet) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name or description of the Size Constraint Set.
func (o SizeConstraintSetOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[SizeConstraintSet](o, func(v SizeConstraintSet) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the parts of web requests that you want to inspect the size of.
func (o SizeConstraintSetOutput) SizeConstraints() pulumix.GArrayOutput[SizeConstraintSetSizeConstraint, SizeConstraintSetSizeConstraintOutput] {
	value := pulumix.Apply[SizeConstraintSet](o, func(v SizeConstraintSet) pulumix.GArrayOutput[SizeConstraintSetSizeConstraint, SizeConstraintSetSizeConstraintOutput] {
		return v.SizeConstraints
	})
	unwrapped := pulumix.Flatten[[]SizeConstraintSetSizeConstraint, pulumix.GArrayOutput[SizeConstraintSetSizeConstraint, SizeConstraintSetSizeConstraintOutput]](value)
	return pulumix.GArrayOutput[SizeConstraintSetSizeConstraint, SizeConstraintSetSizeConstraintOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(SizeConstraintSetOutput{})
}
