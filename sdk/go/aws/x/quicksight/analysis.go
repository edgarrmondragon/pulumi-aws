// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing a QuickSight Analysis.
type Analysis struct {
	pulumi.CustomResourceState

	// Identifier for the analysis.
	AnalysisId pulumix.Output[string] `pulumi:"analysisId"`
	// The Amazon Resource Name (ARN) of the resource.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId pulumix.Output[string] `pulumi:"awsAccountId"`
	// The time that the analysis was created.
	CreatedTime       pulumix.Output[string] `pulumi:"createdTime"`
	LastPublishedTime pulumix.Output[string] `pulumi:"lastPublishedTime"`
	// The time that the analysis was last updated.
	LastUpdatedTime pulumix.Output[string] `pulumi:"lastUpdatedTime"`
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name pulumix.Output[string] `pulumi:"name"`
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters pulumix.GPtrOutput[AnalysisParameters, AnalysisParametersOutput] `pulumi:"parameters"`
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions pulumix.GArrayOutput[AnalysisPermission, AnalysisPermissionOutput] `pulumi:"permissions"`
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays pulumix.Output[*int] `pulumi:"recoveryWindowInDays"`
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity pulumix.GPtrOutput[AnalysisSourceEntity, AnalysisSourceEntityOutput] `pulumi:"sourceEntity"`
	// The analysis creation status.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn pulumix.Output[*string] `pulumi:"themeArn"`
}

// NewAnalysis registers a new resource with the given unique name, arguments, and options.
func NewAnalysis(ctx *pulumi.Context,
	name string, args *AnalysisArgs, opts ...pulumi.ResourceOption) (*Analysis, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AnalysisId == nil {
		return nil, errors.New("invalid value for required argument 'AnalysisId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Analysis
	err := ctx.RegisterResource("aws:quicksight/analysis:Analysis", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnalysis gets an existing Analysis resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalysis(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnalysisState, opts ...pulumi.ResourceOption) (*Analysis, error) {
	var resource Analysis
	err := ctx.ReadResource("aws:quicksight/analysis:Analysis", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Analysis resources.
type analysisState struct {
	// Identifier for the analysis.
	AnalysisId *string `pulumi:"analysisId"`
	// The Amazon Resource Name (ARN) of the resource.
	Arn *string `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The time that the analysis was created.
	CreatedTime       *string `pulumi:"createdTime"`
	LastPublishedTime *string `pulumi:"lastPublishedTime"`
	// The time that the analysis was last updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters *AnalysisParameters `pulumi:"parameters"`
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions []AnalysisPermission `pulumi:"permissions"`
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays *int `pulumi:"recoveryWindowInDays"`
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity *AnalysisSourceEntity `pulumi:"sourceEntity"`
	// The analysis creation status.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn *string `pulumi:"themeArn"`
}

type AnalysisState struct {
	// Identifier for the analysis.
	AnalysisId pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the resource.
	Arn pulumix.Input[*string]
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// The time that the analysis was created.
	CreatedTime       pulumix.Input[*string]
	LastPublishedTime pulumix.Input[*string]
	// The time that the analysis was last updated.
	LastUpdatedTime pulumix.Input[*string]
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters pulumix.Input[*AnalysisParametersArgs]
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*AnalysisPermissionArgs]
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays pulumix.Input[*int]
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity pulumix.Input[*AnalysisSourceEntityArgs]
	// The analysis creation status.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn pulumix.Input[*string]
}

func (AnalysisState) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisState)(nil)).Elem()
}

type analysisArgs struct {
	// Identifier for the analysis.
	AnalysisId string `pulumi:"analysisId"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters *AnalysisParameters `pulumi:"parameters"`
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions []AnalysisPermission `pulumi:"permissions"`
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays *int `pulumi:"recoveryWindowInDays"`
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity *AnalysisSourceEntity `pulumi:"sourceEntity"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn *string `pulumi:"themeArn"`
}

// The set of arguments for constructing a Analysis resource.
type AnalysisArgs struct {
	// Identifier for the analysis.
	AnalysisId pulumix.Input[string]
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters pulumix.Input[*AnalysisParametersArgs]
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*AnalysisPermissionArgs]
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays pulumix.Input[*int]
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity pulumix.Input[*AnalysisSourceEntityArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn pulumix.Input[*string]
}

func (AnalysisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisArgs)(nil)).Elem()
}

type AnalysisOutput struct{ *pulumi.OutputState }

func (AnalysisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Analysis)(nil)).Elem()
}

func (o AnalysisOutput) ToAnalysisOutput() AnalysisOutput {
	return o
}

func (o AnalysisOutput) ToAnalysisOutputWithContext(ctx context.Context) AnalysisOutput {
	return o
}

func (o AnalysisOutput) ToOutput(ctx context.Context) pulumix.Output[Analysis] {
	return pulumix.Output[Analysis]{
		OutputState: o.OutputState,
	}
}

// Identifier for the analysis.
func (o AnalysisOutput) AnalysisId() pulumix.Output[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[string] { return v.AnalysisId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the resource.
func (o AnalysisOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS account ID.
func (o AnalysisOutput) AwsAccountId() pulumix.Output[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[string] { return v.AwsAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time that the analysis was created.
func (o AnalysisOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AnalysisOutput) LastPublishedTime() pulumix.Output[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[string] { return v.LastPublishedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time that the analysis was last updated.
func (o AnalysisOutput) LastUpdatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[string] { return v.LastUpdatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Display name for the analysis.
//
// The following arguments are optional:
func (o AnalysisOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
func (o AnalysisOutput) Parameters() pulumix.GPtrOutput[AnalysisParameters, AnalysisParametersOutput] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.GPtrOutput[AnalysisParameters, AnalysisParametersOutput] { return v.Parameters })
	unwrapped := pulumix.Flatten[*AnalysisParameters, pulumix.GPtrOutput[AnalysisParameters, AnalysisParametersOutput]](value)
	return pulumix.GPtrOutput[AnalysisParameters, AnalysisParametersOutput]{OutputState: unwrapped.OutputState}
}

// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
func (o AnalysisOutput) Permissions() pulumix.GArrayOutput[AnalysisPermission, AnalysisPermissionOutput] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.GArrayOutput[AnalysisPermission, AnalysisPermissionOutput] {
		return v.Permissions
	})
	unwrapped := pulumix.Flatten[[]AnalysisPermission, pulumix.GArrayOutput[AnalysisPermission, AnalysisPermissionOutput]](value)
	return pulumix.GArrayOutput[AnalysisPermission, AnalysisPermissionOutput]{OutputState: unwrapped.OutputState}
}

// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
func (o AnalysisOutput) RecoveryWindowInDays() pulumix.Output[*int] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[*int] { return v.RecoveryWindowInDays })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
func (o AnalysisOutput) SourceEntity() pulumix.GPtrOutput[AnalysisSourceEntity, AnalysisSourceEntityOutput] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.GPtrOutput[AnalysisSourceEntity, AnalysisSourceEntityOutput] {
		return v.SourceEntity
	})
	unwrapped := pulumix.Flatten[*AnalysisSourceEntity, pulumix.GPtrOutput[AnalysisSourceEntity, AnalysisSourceEntityOutput]](value)
	return pulumix.GPtrOutput[AnalysisSourceEntity, AnalysisSourceEntityOutput]{OutputState: unwrapped.OutputState}
}

// The analysis creation status.
func (o AnalysisOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AnalysisOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AnalysisOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
func (o AnalysisOutput) ThemeArn() pulumix.Output[*string] {
	value := pulumix.Apply[Analysis](o, func(v Analysis) pulumix.Output[*string] { return v.ThemeArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(AnalysisOutput{})
}
