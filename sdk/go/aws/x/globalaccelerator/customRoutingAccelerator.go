// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package globalaccelerator

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a Global Accelerator custom routing accelerator.
type CustomRoutingAccelerator struct {
	pulumi.CustomResourceState

	// The attributes of the accelerator. Fields documented below.
	Attributes pulumix.GPtrOutput[CustomRoutingAcceleratorAttributes, CustomRoutingAcceleratorAttributesOutput] `pulumi:"attributes"`
	// The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
	DnsName pulumix.Output[string] `pulumi:"dnsName"`
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled pulumix.Output[*bool] `pulumi:"enabled"`
	// -  The Global Accelerator Route 53 zone ID that can be used to
	//    route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
	//    is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
	HostedZoneId pulumix.Output[string] `pulumi:"hostedZoneId"`
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType pulumix.Output[*string] `pulumi:"ipAddressType"`
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses pulumix.ArrayOutput[string] `pulumi:"ipAddresses"`
	// IP address set associated with the accelerator.
	IpSets pulumix.GArrayOutput[CustomRoutingAcceleratorIpSet, CustomRoutingAcceleratorIpSetOutput] `pulumi:"ipSets"`
	// The name of a custom routing accelerator.
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewCustomRoutingAccelerator registers a new resource with the given unique name, arguments, and options.
func NewCustomRoutingAccelerator(ctx *pulumi.Context,
	name string, args *CustomRoutingAcceleratorArgs, opts ...pulumi.ResourceOption) (*CustomRoutingAccelerator, error) {
	if args == nil {
		args = &CustomRoutingAcceleratorArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomRoutingAccelerator
	err := ctx.RegisterResource("aws:globalaccelerator/customRoutingAccelerator:CustomRoutingAccelerator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomRoutingAccelerator gets an existing CustomRoutingAccelerator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomRoutingAccelerator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomRoutingAcceleratorState, opts ...pulumi.ResourceOption) (*CustomRoutingAccelerator, error) {
	var resource CustomRoutingAccelerator
	err := ctx.ReadResource("aws:globalaccelerator/customRoutingAccelerator:CustomRoutingAccelerator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomRoutingAccelerator resources.
type customRoutingAcceleratorState struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes *CustomRoutingAcceleratorAttributes `pulumi:"attributes"`
	// The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
	DnsName *string `pulumi:"dnsName"`
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled *bool `pulumi:"enabled"`
	// -  The Global Accelerator Route 53 zone ID that can be used to
	//    route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
	//    is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// IP address set associated with the accelerator.
	IpSets []CustomRoutingAcceleratorIpSet `pulumi:"ipSets"`
	// The name of a custom routing accelerator.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type CustomRoutingAcceleratorState struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes pulumix.Input[*CustomRoutingAcceleratorAttributesArgs]
	// The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
	DnsName pulumix.Input[*string]
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled pulumix.Input[*bool]
	// -  The Global Accelerator Route 53 zone ID that can be used to
	//    route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
	//    is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
	HostedZoneId pulumix.Input[*string]
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType pulumix.Input[*string]
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses pulumix.Input[[]string]
	// IP address set associated with the accelerator.
	IpSets pulumix.Input[[]*CustomRoutingAcceleratorIpSetArgs]
	// The name of a custom routing accelerator.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (CustomRoutingAcceleratorState) ElementType() reflect.Type {
	return reflect.TypeOf((*customRoutingAcceleratorState)(nil)).Elem()
}

type customRoutingAcceleratorArgs struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes *CustomRoutingAcceleratorAttributes `pulumi:"attributes"`
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled *bool `pulumi:"enabled"`
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The name of a custom routing accelerator.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CustomRoutingAccelerator resource.
type CustomRoutingAcceleratorArgs struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes pulumix.Input[*CustomRoutingAcceleratorAttributesArgs]
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled pulumix.Input[*bool]
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType pulumix.Input[*string]
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses pulumix.Input[[]string]
	// The name of a custom routing accelerator.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (CustomRoutingAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customRoutingAcceleratorArgs)(nil)).Elem()
}

type CustomRoutingAcceleratorOutput struct{ *pulumi.OutputState }

func (CustomRoutingAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRoutingAccelerator)(nil)).Elem()
}

func (o CustomRoutingAcceleratorOutput) ToCustomRoutingAcceleratorOutput() CustomRoutingAcceleratorOutput {
	return o
}

func (o CustomRoutingAcceleratorOutput) ToCustomRoutingAcceleratorOutputWithContext(ctx context.Context) CustomRoutingAcceleratorOutput {
	return o
}

func (o CustomRoutingAcceleratorOutput) ToOutput(ctx context.Context) pulumix.Output[CustomRoutingAccelerator] {
	return pulumix.Output[CustomRoutingAccelerator]{
		OutputState: o.OutputState,
	}
}

// The attributes of the accelerator. Fields documented below.
func (o CustomRoutingAcceleratorOutput) Attributes() pulumix.GPtrOutput[CustomRoutingAcceleratorAttributes, CustomRoutingAcceleratorAttributesOutput] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.GPtrOutput[CustomRoutingAcceleratorAttributes, CustomRoutingAcceleratorAttributesOutput] {
		return v.Attributes
	})
	unwrapped := pulumix.Flatten[*CustomRoutingAcceleratorAttributes, pulumix.GPtrOutput[CustomRoutingAcceleratorAttributes, CustomRoutingAcceleratorAttributesOutput]](value)
	return pulumix.GPtrOutput[CustomRoutingAcceleratorAttributes, CustomRoutingAcceleratorAttributesOutput]{OutputState: unwrapped.OutputState}
}

// The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
func (o CustomRoutingAcceleratorOutput) DnsName() pulumix.Output[string] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.Output[string] { return v.DnsName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
func (o CustomRoutingAcceleratorOutput) Enabled() pulumix.Output[*bool] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.Output[*bool] { return v.Enabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

//   - The Global Accelerator Route 53 zone ID that can be used to
//     route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
//     is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
func (o CustomRoutingAcceleratorOutput) HostedZoneId() pulumix.Output[string] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.Output[string] { return v.HostedZoneId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
func (o CustomRoutingAcceleratorOutput) IpAddressType() pulumix.Output[*string] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.Output[*string] { return v.IpAddressType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
func (o CustomRoutingAcceleratorOutput) IpAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.ArrayOutput[string] { return v.IpAddresses })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// IP address set associated with the accelerator.
func (o CustomRoutingAcceleratorOutput) IpSets() pulumix.GArrayOutput[CustomRoutingAcceleratorIpSet, CustomRoutingAcceleratorIpSetOutput] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.GArrayOutput[CustomRoutingAcceleratorIpSet, CustomRoutingAcceleratorIpSetOutput] {
		return v.IpSets
	})
	unwrapped := pulumix.Flatten[[]CustomRoutingAcceleratorIpSet, pulumix.GArrayOutput[CustomRoutingAcceleratorIpSet, CustomRoutingAcceleratorIpSetOutput]](value)
	return pulumix.GArrayOutput[CustomRoutingAcceleratorIpSet, CustomRoutingAcceleratorIpSetOutput]{OutputState: unwrapped.OutputState}
}

// The name of a custom routing accelerator.
func (o CustomRoutingAcceleratorOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CustomRoutingAcceleratorOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CustomRoutingAcceleratorOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[CustomRoutingAccelerator](o, func(v CustomRoutingAccelerator) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(CustomRoutingAcceleratorOutput{})
}
