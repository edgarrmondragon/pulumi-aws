// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker Domain resource.
type Domain struct {
	pulumi.CustomResourceState

	// Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
	AppNetworkAccessType pulumix.Output[*string] `pulumi:"appNetworkAccessType"`
	// The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
	AppSecurityGroupManagement pulumix.Output[*string] `pulumi:"appSecurityGroupManagement"`
	// The Amazon Resource Name (ARN) assigned by AWS to this Domain.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
	AuthMode pulumix.Output[string] `pulumi:"authMode"`
	// The default space settings. See Default Space Settings below.
	DefaultSpaceSettings pulumix.GPtrOutput[DomainDefaultSpaceSettings, DomainDefaultSpaceSettingsOutput] `pulumi:"defaultSpaceSettings"`
	// The default user settings. See Default User Settings below.* `domainName` - (Required) The domain name.
	DefaultUserSettings pulumix.GPtrOutput[DomainDefaultUserSettings, DomainDefaultUserSettingsOutput] `pulumi:"defaultUserSettings"`
	DomainName          pulumix.Output[string]                                                         `pulumi:"domainName"`
	// The domain's settings.
	DomainSettings pulumix.GPtrOutput[DomainDomainSettings, DomainDomainSettingsOutput] `pulumi:"domainSettings"`
	// The ID of the Amazon Elastic File System (EFS) managed by this Domain.
	HomeEfsFileSystemId pulumix.Output[string] `pulumi:"homeEfsFileSystemId"`
	// The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
	KmsKeyId pulumix.Output[*string] `pulumi:"kmsKeyId"`
	// The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
	RetentionPolicy pulumix.GPtrOutput[DomainRetentionPolicy, DomainRetentionPolicyOutput] `pulumi:"retentionPolicy"`
	// The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
	SecurityGroupIdForDomainBoundary pulumix.Output[string] `pulumi:"securityGroupIdForDomainBoundary"`
	// The SSO managed application instance ID.
	SingleSignOnManagedApplicationInstanceId pulumix.Output[string] `pulumi:"singleSignOnManagedApplicationInstanceId"`
	// The VPC subnets that Studio uses for communication.
	SubnetIds pulumix.ArrayOutput[string] `pulumi:"subnetIds"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The domain's URL.
	Url pulumix.Output[string] `pulumi:"url"`
	// The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	//
	// The following arguments are optional:
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthMode == nil {
		return nil, errors.New("invalid value for required argument 'AuthMode'")
	}
	if args.DefaultUserSettings == nil {
		return nil, errors.New("invalid value for required argument 'DefaultUserSettings'")
	}
	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Domain
	err := ctx.RegisterResource("aws:sagemaker/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("aws:sagemaker/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	// Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
	AppNetworkAccessType *string `pulumi:"appNetworkAccessType"`
	// The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
	AppSecurityGroupManagement *string `pulumi:"appSecurityGroupManagement"`
	// The Amazon Resource Name (ARN) assigned by AWS to this Domain.
	Arn *string `pulumi:"arn"`
	// The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
	AuthMode *string `pulumi:"authMode"`
	// The default space settings. See Default Space Settings below.
	DefaultSpaceSettings *DomainDefaultSpaceSettings `pulumi:"defaultSpaceSettings"`
	// The default user settings. See Default User Settings below.* `domainName` - (Required) The domain name.
	DefaultUserSettings *DomainDefaultUserSettings `pulumi:"defaultUserSettings"`
	DomainName          *string                    `pulumi:"domainName"`
	// The domain's settings.
	DomainSettings *DomainDomainSettings `pulumi:"domainSettings"`
	// The ID of the Amazon Elastic File System (EFS) managed by this Domain.
	HomeEfsFileSystemId *string `pulumi:"homeEfsFileSystemId"`
	// The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
	RetentionPolicy *DomainRetentionPolicy `pulumi:"retentionPolicy"`
	// The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
	SecurityGroupIdForDomainBoundary *string `pulumi:"securityGroupIdForDomainBoundary"`
	// The SSO managed application instance ID.
	SingleSignOnManagedApplicationInstanceId *string `pulumi:"singleSignOnManagedApplicationInstanceId"`
	// The VPC subnets that Studio uses for communication.
	SubnetIds []string `pulumi:"subnetIds"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The domain's URL.
	Url *string `pulumi:"url"`
	// The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	//
	// The following arguments are optional:
	VpcId *string `pulumi:"vpcId"`
}

type DomainState struct {
	// Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
	AppNetworkAccessType pulumix.Input[*string]
	// The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
	AppSecurityGroupManagement pulumix.Input[*string]
	// The Amazon Resource Name (ARN) assigned by AWS to this Domain.
	Arn pulumix.Input[*string]
	// The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
	AuthMode pulumix.Input[*string]
	// The default space settings. See Default Space Settings below.
	DefaultSpaceSettings pulumix.Input[*DomainDefaultSpaceSettingsArgs]
	// The default user settings. See Default User Settings below.* `domainName` - (Required) The domain name.
	DefaultUserSettings pulumix.Input[*DomainDefaultUserSettingsArgs]
	DomainName          pulumix.Input[*string]
	// The domain's settings.
	DomainSettings pulumix.Input[*DomainDomainSettingsArgs]
	// The ID of the Amazon Elastic File System (EFS) managed by this Domain.
	HomeEfsFileSystemId pulumix.Input[*string]
	// The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
	KmsKeyId pulumix.Input[*string]
	// The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
	RetentionPolicy pulumix.Input[*DomainRetentionPolicyArgs]
	// The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
	SecurityGroupIdForDomainBoundary pulumix.Input[*string]
	// The SSO managed application instance ID.
	SingleSignOnManagedApplicationInstanceId pulumix.Input[*string]
	// The VPC subnets that Studio uses for communication.
	SubnetIds pulumix.Input[[]string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The domain's URL.
	Url pulumix.Input[*string]
	// The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	//
	// The following arguments are optional:
	VpcId pulumix.Input[*string]
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	// Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
	AppNetworkAccessType *string `pulumi:"appNetworkAccessType"`
	// The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
	AppSecurityGroupManagement *string `pulumi:"appSecurityGroupManagement"`
	// The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
	AuthMode string `pulumi:"authMode"`
	// The default space settings. See Default Space Settings below.
	DefaultSpaceSettings *DomainDefaultSpaceSettings `pulumi:"defaultSpaceSettings"`
	// The default user settings. See Default User Settings below.* `domainName` - (Required) The domain name.
	DefaultUserSettings DomainDefaultUserSettings `pulumi:"defaultUserSettings"`
	DomainName          string                    `pulumi:"domainName"`
	// The domain's settings.
	DomainSettings *DomainDomainSettings `pulumi:"domainSettings"`
	// The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
	RetentionPolicy *DomainRetentionPolicy `pulumi:"retentionPolicy"`
	// The VPC subnets that Studio uses for communication.
	SubnetIds []string `pulumi:"subnetIds"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	//
	// The following arguments are optional:
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
	AppNetworkAccessType pulumix.Input[*string]
	// The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
	AppSecurityGroupManagement pulumix.Input[*string]
	// The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
	AuthMode pulumix.Input[string]
	// The default space settings. See Default Space Settings below.
	DefaultSpaceSettings pulumix.Input[*DomainDefaultSpaceSettingsArgs]
	// The default user settings. See Default User Settings below.* `domainName` - (Required) The domain name.
	DefaultUserSettings pulumix.Input[*DomainDefaultUserSettingsArgs]
	DomainName          pulumix.Input[string]
	// The domain's settings.
	DomainSettings pulumix.Input[*DomainDomainSettingsArgs]
	// The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
	KmsKeyId pulumix.Input[*string]
	// The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
	RetentionPolicy pulumix.Input[*DomainRetentionPolicyArgs]
	// The VPC subnets that Studio uses for communication.
	SubnetIds pulumix.Input[[]string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
	//
	// The following arguments are optional:
	VpcId pulumix.Input[string]
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainOutput struct{ *pulumi.OutputState }

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Domain)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

func (o DomainOutput) ToOutput(ctx context.Context) pulumix.Output[Domain] {
	return pulumix.Output[Domain]{
		OutputState: o.OutputState,
	}
}

// Specifies the VPC used for non-EFS traffic. The default value is `PublicInternetOnly`. Valid values are `PublicInternetOnly` and `VpcOnly`.
func (o DomainOutput) AppNetworkAccessType() pulumix.Output[*string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[*string] { return v.AppNetworkAccessType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The entity that creates and manages the required security groups for inter-app communication in `VPCOnly` mode. Valid values are `Service` and `Customer`.
func (o DomainOutput) AppSecurityGroupManagement() pulumix.Output[*string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[*string] { return v.AppSecurityGroupManagement })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Amazon Resource Name (ARN) assigned by AWS to this Domain.
func (o DomainOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.
func (o DomainOutput) AuthMode() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.AuthMode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The default space settings. See Default Space Settings below.
func (o DomainOutput) DefaultSpaceSettings() pulumix.GPtrOutput[DomainDefaultSpaceSettings, DomainDefaultSpaceSettingsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainDefaultSpaceSettings, DomainDefaultSpaceSettingsOutput] {
		return v.DefaultSpaceSettings
	})
	unwrapped := pulumix.Flatten[*DomainDefaultSpaceSettings, pulumix.GPtrOutput[DomainDefaultSpaceSettings, DomainDefaultSpaceSettingsOutput]](value)
	return pulumix.GPtrOutput[DomainDefaultSpaceSettings, DomainDefaultSpaceSettingsOutput]{OutputState: unwrapped.OutputState}
}

// The default user settings. See Default User Settings below.* `domainName` - (Required) The domain name.
func (o DomainOutput) DefaultUserSettings() pulumix.GPtrOutput[DomainDefaultUserSettings, DomainDefaultUserSettingsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainDefaultUserSettings, DomainDefaultUserSettingsOutput] {
		return v.DefaultUserSettings
	})
	unwrapped := pulumix.Flatten[*DomainDefaultUserSettings, pulumix.GPtrOutput[DomainDefaultUserSettings, DomainDefaultUserSettingsOutput]](value)
	return pulumix.GPtrOutput[DomainDefaultUserSettings, DomainDefaultUserSettingsOutput]{OutputState: unwrapped.OutputState}
}

func (o DomainOutput) DomainName() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.DomainName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The domain's settings.
func (o DomainOutput) DomainSettings() pulumix.GPtrOutput[DomainDomainSettings, DomainDomainSettingsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainDomainSettings, DomainDomainSettingsOutput] {
		return v.DomainSettings
	})
	unwrapped := pulumix.Flatten[*DomainDomainSettings, pulumix.GPtrOutput[DomainDomainSettings, DomainDomainSettingsOutput]](value)
	return pulumix.GPtrOutput[DomainDomainSettings, DomainDomainSettingsOutput]{OutputState: unwrapped.OutputState}
}

// The ID of the Amazon Elastic File System (EFS) managed by this Domain.
func (o DomainOutput) HomeEfsFileSystemId() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.HomeEfsFileSystemId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS KMS customer managed CMK used to encrypt the EFS volume attached to the domain.
func (o DomainOutput) KmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[*string] { return v.KmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The retention policy for this domain, which specifies whether resources will be retained after the Domain is deleted. By default, all resources are retained. See Retention Policy below.
func (o DomainOutput) RetentionPolicy() pulumix.GPtrOutput[DomainRetentionPolicy, DomainRetentionPolicyOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainRetentionPolicy, DomainRetentionPolicyOutput] {
		return v.RetentionPolicy
	})
	unwrapped := pulumix.Flatten[*DomainRetentionPolicy, pulumix.GPtrOutput[DomainRetentionPolicy, DomainRetentionPolicyOutput]](value)
	return pulumix.GPtrOutput[DomainRetentionPolicy, DomainRetentionPolicyOutput]{OutputState: unwrapped.OutputState}
}

// The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.
func (o DomainOutput) SecurityGroupIdForDomainBoundary() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.SecurityGroupIdForDomainBoundary })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The SSO managed application instance ID.
func (o DomainOutput) SingleSignOnManagedApplicationInstanceId() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.SingleSignOnManagedApplicationInstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The VPC subnets that Studio uses for communication.
func (o DomainOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.ArrayOutput[string] { return v.SubnetIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DomainOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DomainOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The domain's URL.
func (o DomainOutput) Url() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.Url })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
//
// The following arguments are optional:
func (o DomainOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(DomainOutput{})
}
