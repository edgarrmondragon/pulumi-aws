// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The CloudFormation Export data source allows access to stack
// exports specified in the [Output](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html) section of the Cloudformation Template using the optional Export Property.
//
//	> Note: If you are trying to use a value from a Cloudformation Stack in the same deployment please use normal interpolation or Cloudformation Outputs.
func GetExport(ctx *pulumi.Context, args *GetExportArgs, opts ...pulumi.InvokeOption) (*GetExportResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExportResult
	err := ctx.Invoke("aws:cloudformation/getExport:getExport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExport.
type GetExportArgs struct {
	// Name of the export as it appears in the console or from [list-exports](http://docs.aws.amazon.com/cli/latest/reference/cloudformation/list-exports.html)
	Name string `pulumi:"name"`
}

// A collection of values returned by getExport.
type GetExportResult struct {
	// ARN of stack that contains the exported output name and value.
	ExportingStackId string `pulumi:"exportingStackId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// Value from Cloudformation export identified by the export name found from [list-exports](http://docs.aws.amazon.com/cli/latest/reference/cloudformation/list-exports.html)
	Value string `pulumi:"value"`
}

func GetExportOutput(ctx *pulumi.Context, args GetExportOutputArgs, opts ...pulumi.InvokeOption) GetExportResultOutput {
	outputResult := pulumix.ApplyErr[*GetExportArgs](args.ToOutput(), func(plainArgs *GetExportArgs) (*GetExportResult, error) {
		return GetExport(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetExportResultOutput, *GetExportResult](outputResult)
}

// A collection of arguments for invoking getExport.
type GetExportOutputArgs struct {
	// Name of the export as it appears in the console or from [list-exports](http://docs.aws.amazon.com/cli/latest/reference/cloudformation/list-exports.html)
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args GetExportOutputArgs) ToOutput() pulumix.Output[*GetExportArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetExportArgs {
		return &GetExportArgs{
			Name: resolvedArgs[0].(string),
		}
	})
}

type GetExportResultOutput struct{ *pulumi.OutputState }

func (GetExportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExportResult)(nil)).Elem()
}

func (o GetExportResultOutput) ToOutput(context.Context) pulumix.Output[*GetExportResult] {
	return pulumix.Output[*GetExportResult]{
		OutputState: o.OutputState,
	}
}

func (o GetExportResultOutput) ExportingStackId() pulumix.Output[string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) string { return v.ExportingStackId })
}

func (o GetExportResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) string { return v.Id })
}

func (o GetExportResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) string { return v.Name })
}

func (o GetExportResultOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) string { return v.Value })
}
