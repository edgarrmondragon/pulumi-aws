// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an API Gateway Resource.
type Resource struct {
	pulumi.CustomResourceState

	// ID of the parent API resource
	ParentId pulumix.Output[string] `pulumi:"parentId"`
	// Complete path for this API resource, including all parent paths.
	Path pulumix.Output[string] `pulumi:"path"`
	// Last path segment of this API resource.
	PathPart pulumix.Output[string] `pulumi:"pathPart"`
	// ID of the associated REST API
	RestApi pulumix.Output[string] `pulumi:"restApi"`
}

// NewResource registers a new resource with the given unique name, arguments, and options.
func NewResource(ctx *pulumi.Context,
	name string, args *ResourceArgs, opts ...pulumi.ResourceOption) (*Resource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ParentId == nil {
		return nil, errors.New("invalid value for required argument 'ParentId'")
	}
	if args.PathPart == nil {
		return nil, errors.New("invalid value for required argument 'PathPart'")
	}
	if args.RestApi == nil {
		return nil, errors.New("invalid value for required argument 'RestApi'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Resource
	err := ctx.RegisterResource("aws:apigateway/resource:Resource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResource gets an existing Resource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceState, opts ...pulumi.ResourceOption) (*Resource, error) {
	var resource Resource
	err := ctx.ReadResource("aws:apigateway/resource:Resource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Resource resources.
type resourceState struct {
	// ID of the parent API resource
	ParentId *string `pulumi:"parentId"`
	// Complete path for this API resource, including all parent paths.
	Path *string `pulumi:"path"`
	// Last path segment of this API resource.
	PathPart *string `pulumi:"pathPart"`
	// ID of the associated REST API
	RestApi interface{} `pulumi:"restApi"`
}

type ResourceState struct {
	// ID of the parent API resource
	ParentId pulumix.Input[*string]
	// Complete path for this API resource, including all parent paths.
	Path pulumix.Input[*string]
	// Last path segment of this API resource.
	PathPart pulumix.Input[*string]
	// ID of the associated REST API
	RestApi pulumix.Input[*any]
}

func (ResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceState)(nil)).Elem()
}

type resourceArgs struct {
	// ID of the parent API resource
	ParentId string `pulumi:"parentId"`
	// Last path segment of this API resource.
	PathPart string `pulumi:"pathPart"`
	// ID of the associated REST API
	RestApi interface{} `pulumi:"restApi"`
}

// The set of arguments for constructing a Resource resource.
type ResourceArgs struct {
	// ID of the parent API resource
	ParentId pulumix.Input[string]
	// Last path segment of this API resource.
	PathPart pulumix.Input[string]
	// ID of the associated REST API
	RestApi pulumix.Input[any]
}

func (ResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceArgs)(nil)).Elem()
}

type ResourceOutput struct{ *pulumi.OutputState }

func (ResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Resource)(nil)).Elem()
}

func (o ResourceOutput) ToResourceOutput() ResourceOutput {
	return o
}

func (o ResourceOutput) ToResourceOutputWithContext(ctx context.Context) ResourceOutput {
	return o
}

func (o ResourceOutput) ToOutput(ctx context.Context) pulumix.Output[Resource] {
	return pulumix.Output[Resource]{
		OutputState: o.OutputState,
	}
}

// ID of the parent API resource
func (o ResourceOutput) ParentId() pulumix.Output[string] {
	value := pulumix.Apply[Resource](o, func(v Resource) pulumix.Output[string] { return v.ParentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Complete path for this API resource, including all parent paths.
func (o ResourceOutput) Path() pulumix.Output[string] {
	value := pulumix.Apply[Resource](o, func(v Resource) pulumix.Output[string] { return v.Path })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Last path segment of this API resource.
func (o ResourceOutput) PathPart() pulumix.Output[string] {
	value := pulumix.Apply[Resource](o, func(v Resource) pulumix.Output[string] { return v.PathPart })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the associated REST API
func (o ResourceOutput) RestApi() pulumix.Output[string] {
	value := pulumix.Apply[Resource](o, func(v Resource) pulumix.Output[string] { return v.RestApi })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ResourceOutput{})
}
