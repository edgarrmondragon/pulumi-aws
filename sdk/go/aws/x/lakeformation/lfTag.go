// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lakeformation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates an LF-Tag with the specified name and values. Each key must have at least one value. The maximum number of values permitted is 15.
type LfTag struct {
	pulumi.CustomResourceState

	// ID of the Data Catalog to create the tag in. If omitted, this defaults to the AWS Account ID.
	CatalogId pulumix.Output[string] `pulumi:"catalogId"`
	// Key-name for the tag.
	Key pulumix.Output[string] `pulumi:"key"`
	// List of possible values an attribute can take.
	Values pulumix.ArrayOutput[string] `pulumi:"values"`
}

// NewLfTag registers a new resource with the given unique name, arguments, and options.
func NewLfTag(ctx *pulumi.Context,
	name string, args *LfTagArgs, opts ...pulumi.ResourceOption) (*LfTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Values == nil {
		return nil, errors.New("invalid value for required argument 'Values'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LfTag
	err := ctx.RegisterResource("aws:lakeformation/lfTag:LfTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLfTag gets an existing LfTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLfTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LfTagState, opts ...pulumi.ResourceOption) (*LfTag, error) {
	var resource LfTag
	err := ctx.ReadResource("aws:lakeformation/lfTag:LfTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LfTag resources.
type lfTagState struct {
	// ID of the Data Catalog to create the tag in. If omitted, this defaults to the AWS Account ID.
	CatalogId *string `pulumi:"catalogId"`
	// Key-name for the tag.
	Key *string `pulumi:"key"`
	// List of possible values an attribute can take.
	Values []string `pulumi:"values"`
}

type LfTagState struct {
	// ID of the Data Catalog to create the tag in. If omitted, this defaults to the AWS Account ID.
	CatalogId pulumix.Input[*string]
	// Key-name for the tag.
	Key pulumix.Input[*string]
	// List of possible values an attribute can take.
	Values pulumix.Input[[]string]
}

func (LfTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*lfTagState)(nil)).Elem()
}

type lfTagArgs struct {
	// ID of the Data Catalog to create the tag in. If omitted, this defaults to the AWS Account ID.
	CatalogId *string `pulumi:"catalogId"`
	// Key-name for the tag.
	Key string `pulumi:"key"`
	// List of possible values an attribute can take.
	Values []string `pulumi:"values"`
}

// The set of arguments for constructing a LfTag resource.
type LfTagArgs struct {
	// ID of the Data Catalog to create the tag in. If omitted, this defaults to the AWS Account ID.
	CatalogId pulumix.Input[*string]
	// Key-name for the tag.
	Key pulumix.Input[string]
	// List of possible values an attribute can take.
	Values pulumix.Input[[]string]
}

func (LfTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lfTagArgs)(nil)).Elem()
}

type LfTagOutput struct{ *pulumi.OutputState }

func (LfTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LfTag)(nil)).Elem()
}

func (o LfTagOutput) ToLfTagOutput() LfTagOutput {
	return o
}

func (o LfTagOutput) ToLfTagOutputWithContext(ctx context.Context) LfTagOutput {
	return o
}

func (o LfTagOutput) ToOutput(ctx context.Context) pulumix.Output[LfTag] {
	return pulumix.Output[LfTag]{
		OutputState: o.OutputState,
	}
}

// ID of the Data Catalog to create the tag in. If omitted, this defaults to the AWS Account ID.
func (o LfTagOutput) CatalogId() pulumix.Output[string] {
	value := pulumix.Apply[LfTag](o, func(v LfTag) pulumix.Output[string] { return v.CatalogId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-name for the tag.
func (o LfTagOutput) Key() pulumix.Output[string] {
	value := pulumix.Apply[LfTag](o, func(v LfTag) pulumix.Output[string] { return v.Key })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of possible values an attribute can take.
func (o LfTagOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LfTag](o, func(v LfTag) pulumix.ArrayOutput[string] { return v.Values })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(LfTagOutput{})
}
