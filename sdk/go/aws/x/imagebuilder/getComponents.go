// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get the ARNs and names of Image Builder Components matching the specified criteria.
func GetComponents(ctx *pulumi.Context, args *GetComponentsArgs, opts ...pulumi.InvokeOption) (*GetComponentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetComponentsResult
	err := ctx.Invoke("aws:imagebuilder/getComponents:getComponents", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComponents.
type GetComponentsArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetComponentsFilter `pulumi:"filters"`
	// Owner of the image recipes. Valid values are `Self`, `Shared` and `Amazon`. Defaults to `Self`.
	Owner *string `pulumi:"owner"`
}

// A collection of values returned by getComponents.
type GetComponentsResult struct {
	// Set of ARNs of the matched Image Builder Components.
	Arns    []string              `pulumi:"arns"`
	Filters []GetComponentsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of names of the matched Image Builder Components.
	Names []string `pulumi:"names"`
	Owner *string  `pulumi:"owner"`
}

func GetComponentsOutput(ctx *pulumi.Context, args GetComponentsOutputArgs, opts ...pulumi.InvokeOption) GetComponentsResultOutput {
	outputResult := pulumix.ApplyErr[*GetComponentsArgs](args.ToOutput(), func(plainArgs *GetComponentsArgs) (*GetComponentsResult, error) {
		return GetComponents(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetComponentsResultOutput, *GetComponentsResult](outputResult)
}

// A collection of arguments for invoking getComponents.
type GetComponentsOutputArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters pulumix.Input[[]*GetComponentsFilterArgs] `pulumi:"filters"`
	// Owner of the image recipes. Valid values are `Self`, `Shared` and `Amazon`. Defaults to `Self`.
	Owner pulumix.Input[*string] `pulumi:"owner"`
}

func (args GetComponentsOutputArgs) ToOutput() pulumix.Output[*GetComponentsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Owner.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetComponentsArgs {
		return &GetComponentsArgs{
			Filters: resolvedArgs[0].([]GetComponentsFilter),
			Owner:   resolvedArgs[1].(*string),
		}
	})
}

type GetComponentsResultOutput struct{ *pulumi.OutputState }

func (GetComponentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsResult)(nil)).Elem()
}

func (o GetComponentsResultOutput) ToOutput(context.Context) pulumix.Output[*GetComponentsResult] {
	return pulumix.Output[*GetComponentsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetComponentsResultOutput) Arns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetComponentsResult](o, func(v *GetComponentsResult) []string { return v.Arns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetComponentsResultOutput) Filters() pulumix.GArrayOutput[GetComponentsFilter, GetComponentsFilterOutput] {
	value := pulumix.Apply[*GetComponentsResult](o, func(v *GetComponentsResult) []GetComponentsFilter { return v.Filters })
	return pulumix.GArrayOutput[GetComponentsFilter, GetComponentsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetComponentsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetComponentsResult](o, func(v *GetComponentsResult) string { return v.Id })
}

func (o GetComponentsResultOutput) Names() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetComponentsResult](o, func(v *GetComponentsResult) []string { return v.Names })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetComponentsResultOutput) Owner() pulumix.Output[*string] {
	return pulumix.Apply[*GetComponentsResult](o, func(v *GetComponentsResult) *string { return v.Owner })
}
