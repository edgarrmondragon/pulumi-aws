// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker Workforce resource.
type Workforce struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this Workforce.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidcConfig`. see Cognito Config details below.
	CognitoConfig pulumix.GPtrOutput[WorkforceCognitoConfig, WorkforceCognitoConfigOutput] `pulumi:"cognitoConfig"`
	// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognitoConfig`. see OIDC Config details below.
	OidcConfig pulumix.GPtrOutput[WorkforceOidcConfig, WorkforceOidcConfigOutput] `pulumi:"oidcConfig"`
	// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
	SourceIpConfig pulumix.GPtrOutput[WorkforceSourceIpConfig, WorkforceSourceIpConfigOutput] `pulumi:"sourceIpConfig"`
	// The subdomain for your OIDC Identity Provider.
	// * `workforce_vpc_config.0.vpc_endpoint_id` - The IDs for the VPC service endpoints of your VPC workforce.
	Subdomain pulumix.Output[string] `pulumi:"subdomain"`
	// The name of the Workforce (must be unique).
	WorkforceName pulumix.Output[string] `pulumi:"workforceName"`
	// configure a workforce using VPC. see Workforce VPC Config details below.
	WorkforceVpcConfig pulumix.GPtrOutput[WorkforceWorkforceVpcConfig, WorkforceWorkforceVpcConfigOutput] `pulumi:"workforceVpcConfig"`
}

// NewWorkforce registers a new resource with the given unique name, arguments, and options.
func NewWorkforce(ctx *pulumi.Context,
	name string, args *WorkforceArgs, opts ...pulumi.ResourceOption) (*Workforce, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WorkforceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkforceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Workforce
	err := ctx.RegisterResource("aws:sagemaker/workforce:Workforce", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkforce gets an existing Workforce resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkforce(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkforceState, opts ...pulumi.ResourceOption) (*Workforce, error) {
	var resource Workforce
	err := ctx.ReadResource("aws:sagemaker/workforce:Workforce", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workforce resources.
type workforceState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Workforce.
	Arn *string `pulumi:"arn"`
	// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidcConfig`. see Cognito Config details below.
	CognitoConfig *WorkforceCognitoConfig `pulumi:"cognitoConfig"`
	// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognitoConfig`. see OIDC Config details below.
	OidcConfig *WorkforceOidcConfig `pulumi:"oidcConfig"`
	// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
	SourceIpConfig *WorkforceSourceIpConfig `pulumi:"sourceIpConfig"`
	// The subdomain for your OIDC Identity Provider.
	// * `workforce_vpc_config.0.vpc_endpoint_id` - The IDs for the VPC service endpoints of your VPC workforce.
	Subdomain *string `pulumi:"subdomain"`
	// The name of the Workforce (must be unique).
	WorkforceName *string `pulumi:"workforceName"`
	// configure a workforce using VPC. see Workforce VPC Config details below.
	WorkforceVpcConfig *WorkforceWorkforceVpcConfig `pulumi:"workforceVpcConfig"`
}

type WorkforceState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Workforce.
	Arn pulumix.Input[*string]
	// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidcConfig`. see Cognito Config details below.
	CognitoConfig pulumix.Input[*WorkforceCognitoConfigArgs]
	// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognitoConfig`. see OIDC Config details below.
	OidcConfig pulumix.Input[*WorkforceOidcConfigArgs]
	// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
	SourceIpConfig pulumix.Input[*WorkforceSourceIpConfigArgs]
	// The subdomain for your OIDC Identity Provider.
	// * `workforce_vpc_config.0.vpc_endpoint_id` - The IDs for the VPC service endpoints of your VPC workforce.
	Subdomain pulumix.Input[*string]
	// The name of the Workforce (must be unique).
	WorkforceName pulumix.Input[*string]
	// configure a workforce using VPC. see Workforce VPC Config details below.
	WorkforceVpcConfig pulumix.Input[*WorkforceWorkforceVpcConfigArgs]
}

func (WorkforceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workforceState)(nil)).Elem()
}

type workforceArgs struct {
	// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidcConfig`. see Cognito Config details below.
	CognitoConfig *WorkforceCognitoConfig `pulumi:"cognitoConfig"`
	// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognitoConfig`. see OIDC Config details below.
	OidcConfig *WorkforceOidcConfig `pulumi:"oidcConfig"`
	// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
	SourceIpConfig *WorkforceSourceIpConfig `pulumi:"sourceIpConfig"`
	// The name of the Workforce (must be unique).
	WorkforceName string `pulumi:"workforceName"`
	// configure a workforce using VPC. see Workforce VPC Config details below.
	WorkforceVpcConfig *WorkforceWorkforceVpcConfig `pulumi:"workforceVpcConfig"`
}

// The set of arguments for constructing a Workforce resource.
type WorkforceArgs struct {
	// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidcConfig`. see Cognito Config details below.
	CognitoConfig pulumix.Input[*WorkforceCognitoConfigArgs]
	// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognitoConfig`. see OIDC Config details below.
	OidcConfig pulumix.Input[*WorkforceOidcConfigArgs]
	// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
	SourceIpConfig pulumix.Input[*WorkforceSourceIpConfigArgs]
	// The name of the Workforce (must be unique).
	WorkforceName pulumix.Input[string]
	// configure a workforce using VPC. see Workforce VPC Config details below.
	WorkforceVpcConfig pulumix.Input[*WorkforceWorkforceVpcConfigArgs]
}

func (WorkforceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workforceArgs)(nil)).Elem()
}

type WorkforceOutput struct{ *pulumi.OutputState }

func (WorkforceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Workforce)(nil)).Elem()
}

func (o WorkforceOutput) ToWorkforceOutput() WorkforceOutput {
	return o
}

func (o WorkforceOutput) ToWorkforceOutputWithContext(ctx context.Context) WorkforceOutput {
	return o
}

func (o WorkforceOutput) ToOutput(ctx context.Context) pulumix.Output[Workforce] {
	return pulumix.Output[Workforce]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) assigned by AWS to this Workforce.
func (o WorkforceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Workforce](o, func(v Workforce) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidcConfig`. see Cognito Config details below.
func (o WorkforceOutput) CognitoConfig() pulumix.GPtrOutput[WorkforceCognitoConfig, WorkforceCognitoConfigOutput] {
	value := pulumix.Apply[Workforce](o, func(v Workforce) pulumix.GPtrOutput[WorkforceCognitoConfig, WorkforceCognitoConfigOutput] {
		return v.CognitoConfig
	})
	unwrapped := pulumix.Flatten[*WorkforceCognitoConfig, pulumix.GPtrOutput[WorkforceCognitoConfig, WorkforceCognitoConfigOutput]](value)
	return pulumix.GPtrOutput[WorkforceCognitoConfig, WorkforceCognitoConfigOutput]{OutputState: unwrapped.OutputState}
}

// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognitoConfig`. see OIDC Config details below.
func (o WorkforceOutput) OidcConfig() pulumix.GPtrOutput[WorkforceOidcConfig, WorkforceOidcConfigOutput] {
	value := pulumix.Apply[Workforce](o, func(v Workforce) pulumix.GPtrOutput[WorkforceOidcConfig, WorkforceOidcConfigOutput] {
		return v.OidcConfig
	})
	unwrapped := pulumix.Flatten[*WorkforceOidcConfig, pulumix.GPtrOutput[WorkforceOidcConfig, WorkforceOidcConfigOutput]](value)
	return pulumix.GPtrOutput[WorkforceOidcConfig, WorkforceOidcConfigOutput]{OutputState: unwrapped.OutputState}
}

// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
func (o WorkforceOutput) SourceIpConfig() pulumix.GPtrOutput[WorkforceSourceIpConfig, WorkforceSourceIpConfigOutput] {
	value := pulumix.Apply[Workforce](o, func(v Workforce) pulumix.GPtrOutput[WorkforceSourceIpConfig, WorkforceSourceIpConfigOutput] {
		return v.SourceIpConfig
	})
	unwrapped := pulumix.Flatten[*WorkforceSourceIpConfig, pulumix.GPtrOutput[WorkforceSourceIpConfig, WorkforceSourceIpConfigOutput]](value)
	return pulumix.GPtrOutput[WorkforceSourceIpConfig, WorkforceSourceIpConfigOutput]{OutputState: unwrapped.OutputState}
}

// The subdomain for your OIDC Identity Provider.
// * `workforce_vpc_config.0.vpc_endpoint_id` - The IDs for the VPC service endpoints of your VPC workforce.
func (o WorkforceOutput) Subdomain() pulumix.Output[string] {
	value := pulumix.Apply[Workforce](o, func(v Workforce) pulumix.Output[string] { return v.Subdomain })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the Workforce (must be unique).
func (o WorkforceOutput) WorkforceName() pulumix.Output[string] {
	value := pulumix.Apply[Workforce](o, func(v Workforce) pulumix.Output[string] { return v.WorkforceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// configure a workforce using VPC. see Workforce VPC Config details below.
func (o WorkforceOutput) WorkforceVpcConfig() pulumix.GPtrOutput[WorkforceWorkforceVpcConfig, WorkforceWorkforceVpcConfigOutput] {
	value := pulumix.Apply[Workforce](o, func(v Workforce) pulumix.GPtrOutput[WorkforceWorkforceVpcConfig, WorkforceWorkforceVpcConfigOutput] {
		return v.WorkforceVpcConfig
	})
	unwrapped := pulumix.Flatten[*WorkforceWorkforceVpcConfig, pulumix.GPtrOutput[WorkforceWorkforceVpcConfig, WorkforceWorkforceVpcConfigOutput]](value)
	return pulumix.GPtrOutput[WorkforceWorkforceVpcConfig, WorkforceWorkforceVpcConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(WorkforceOutput{})
}
