// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for listing RDS Database Instances.
func GetInstances(ctx *pulumi.Context, args *GetInstancesArgs, opts ...pulumi.InvokeOption) (*GetInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstancesResult
	err := ctx.Invoke("aws:rds/getInstances:getInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstances.
type GetInstancesArgs struct {
	// Configuration block(s) used to filter instances with AWS supported attributes, such as `engine`, `db-cluster-id` or `db-instance-id` for example. Detailed below.
	Filters []GetInstancesFilter `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match a pair on the desired instances.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getInstances.
type GetInstancesResult struct {
	Filters []GetInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// ARNs of the matched RDS instances.
	InstanceArns []string `pulumi:"instanceArns"`
	// Identifiers of the matched RDS instances.
	InstanceIdentifiers []string          `pulumi:"instanceIdentifiers"`
	Tags                map[string]string `pulumi:"tags"`
}

func GetInstancesOutput(ctx *pulumi.Context, args GetInstancesOutputArgs, opts ...pulumi.InvokeOption) GetInstancesResultOutput {
	outputResult := pulumix.ApplyErr[*GetInstancesArgs](args.ToOutput(), func(plainArgs *GetInstancesArgs) (*GetInstancesResult, error) {
		return GetInstances(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetInstancesResultOutput, *GetInstancesResult](outputResult)
}

// A collection of arguments for invoking getInstances.
type GetInstancesOutputArgs struct {
	// Configuration block(s) used to filter instances with AWS supported attributes, such as `engine`, `db-cluster-id` or `db-instance-id` for example. Detailed below.
	Filters pulumix.Input[[]*GetInstancesFilterArgs] `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match a pair on the desired instances.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetInstancesOutputArgs) ToOutput() pulumix.Output[*GetInstancesArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetInstancesArgs {
		return &GetInstancesArgs{
			Filters: resolvedArgs[0].([]GetInstancesFilter),
			Tags:    resolvedArgs[1].(map[string]string),
		}
	})
}

type GetInstancesResultOutput struct{ *pulumi.OutputState }

func (GetInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesResult)(nil)).Elem()
}

func (o GetInstancesResultOutput) ToOutput(context.Context) pulumix.Output[*GetInstancesResult] {
	return pulumix.Output[*GetInstancesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesResultOutput) Filters() pulumix.GArrayOutput[GetInstancesFilter, GetInstancesFilterOutput] {
	value := pulumix.Apply[*GetInstancesResult](o, func(v *GetInstancesResult) []GetInstancesFilter { return v.Filters })
	return pulumix.GArrayOutput[GetInstancesFilter, GetInstancesFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetInstancesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetInstancesResult](o, func(v *GetInstancesResult) string { return v.Id })
}

func (o GetInstancesResultOutput) InstanceArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetInstancesResult](o, func(v *GetInstancesResult) []string { return v.InstanceArns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetInstancesResultOutput) InstanceIdentifiers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetInstancesResult](o, func(v *GetInstancesResult) []string { return v.InstanceIdentifiers })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetInstancesResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetInstancesResult](o, func(v *GetInstancesResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
