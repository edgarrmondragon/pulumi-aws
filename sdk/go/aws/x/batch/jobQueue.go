// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Batch Job Queue resource.
type JobQueue struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name of the job queue.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies the set of compute environments
	// mapped to a job queue and their order.  The position of the compute environments
	// in the list will dictate the order.
	ComputeEnvironments pulumix.ArrayOutput[string] `pulumi:"computeEnvironments"`
	// Specifies the name of the job queue.
	Name pulumix.Output[string] `pulumi:"name"`
	// The priority of the job queue. Job queues with a higher priority
	// are evaluated first when associated with the same compute environment.
	Priority pulumix.Output[int] `pulumi:"priority"`
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn pulumix.Output[*string] `pulumi:"schedulingPolicyArn"`
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State pulumix.Output[string] `pulumi:"state"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumix.MapOutput[string]                                    `pulumi:"tagsAll"`
	Timeouts pulumix.GPtrOutput[JobQueueTimeouts, JobQueueTimeoutsOutput] `pulumi:"timeouts"`
}

// NewJobQueue registers a new resource with the given unique name, arguments, and options.
func NewJobQueue(ctx *pulumi.Context,
	name string, args *JobQueueArgs, opts ...pulumi.ResourceOption) (*JobQueue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ComputeEnvironments == nil {
		return nil, errors.New("invalid value for required argument 'ComputeEnvironments'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.State == nil {
		return nil, errors.New("invalid value for required argument 'State'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JobQueue
	err := ctx.RegisterResource("aws:batch/jobQueue:JobQueue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobQueue gets an existing JobQueue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobQueueState, opts ...pulumi.ResourceOption) (*JobQueue, error) {
	var resource JobQueue
	err := ctx.ReadResource("aws:batch/jobQueue:JobQueue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobQueue resources.
type jobQueueState struct {
	// The Amazon Resource Name of the job queue.
	Arn *string `pulumi:"arn"`
	// Specifies the set of compute environments
	// mapped to a job queue and their order.  The position of the compute environments
	// in the list will dictate the order.
	ComputeEnvironments []string `pulumi:"computeEnvironments"`
	// Specifies the name of the job queue.
	Name *string `pulumi:"name"`
	// The priority of the job queue. Job queues with a higher priority
	// are evaluated first when associated with the same compute environment.
	Priority *int `pulumi:"priority"`
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn *string `pulumi:"schedulingPolicyArn"`
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State *string `pulumi:"state"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  map[string]string `pulumi:"tagsAll"`
	Timeouts *JobQueueTimeouts `pulumi:"timeouts"`
}

type JobQueueState struct {
	// The Amazon Resource Name of the job queue.
	Arn pulumix.Input[*string]
	// Specifies the set of compute environments
	// mapped to a job queue and their order.  The position of the compute environments
	// in the list will dictate the order.
	ComputeEnvironments pulumix.Input[[]string]
	// Specifies the name of the job queue.
	Name pulumix.Input[*string]
	// The priority of the job queue. Job queues with a higher priority
	// are evaluated first when associated with the same compute environment.
	Priority pulumix.Input[*int]
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn pulumix.Input[*string]
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumix.Input[map[string]string]
	Timeouts pulumix.Input[*JobQueueTimeoutsArgs]
}

func (JobQueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobQueueState)(nil)).Elem()
}

type jobQueueArgs struct {
	// Specifies the set of compute environments
	// mapped to a job queue and their order.  The position of the compute environments
	// in the list will dictate the order.
	ComputeEnvironments []string `pulumi:"computeEnvironments"`
	// Specifies the name of the job queue.
	Name *string `pulumi:"name"`
	// The priority of the job queue. Job queues with a higher priority
	// are evaluated first when associated with the same compute environment.
	Priority int `pulumi:"priority"`
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn *string `pulumi:"schedulingPolicyArn"`
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State string `pulumi:"state"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string `pulumi:"tags"`
	Timeouts *JobQueueTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a JobQueue resource.
type JobQueueArgs struct {
	// Specifies the set of compute environments
	// mapped to a job queue and their order.  The position of the compute environments
	// in the list will dictate the order.
	ComputeEnvironments pulumix.Input[[]string]
	// Specifies the name of the job queue.
	Name pulumix.Input[*string]
	// The priority of the job queue. Job queues with a higher priority
	// are evaluated first when associated with the same compute environment.
	Priority pulumix.Input[int]
	// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
	SchedulingPolicyArn pulumix.Input[*string]
	// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
	State pulumix.Input[string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumix.Input[map[string]string]
	Timeouts pulumix.Input[*JobQueueTimeoutsArgs]
}

func (JobQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobQueueArgs)(nil)).Elem()
}

type JobQueueOutput struct{ *pulumi.OutputState }

func (JobQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobQueue)(nil)).Elem()
}

func (o JobQueueOutput) ToJobQueueOutput() JobQueueOutput {
	return o
}

func (o JobQueueOutput) ToJobQueueOutputWithContext(ctx context.Context) JobQueueOutput {
	return o
}

func (o JobQueueOutput) ToOutput(ctx context.Context) pulumix.Output[JobQueue] {
	return pulumix.Output[JobQueue]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name of the job queue.
func (o JobQueueOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[JobQueue](o, func(v JobQueue) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the set of compute environments
// mapped to a job queue and their order.  The position of the compute environments
// in the list will dictate the order.
func (o JobQueueOutput) ComputeEnvironments() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[JobQueue](o, func(v JobQueue) pulumix.ArrayOutput[string] { return v.ComputeEnvironments })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Specifies the name of the job queue.
func (o JobQueueOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[JobQueue](o, func(v JobQueue) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The priority of the job queue. Job queues with a higher priority
// are evaluated first when associated with the same compute environment.
func (o JobQueueOutput) Priority() pulumix.Output[int] {
	value := pulumix.Apply[JobQueue](o, func(v JobQueue) pulumix.Output[int] { return v.Priority })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The ARN of the fair share scheduling policy. If this parameter is specified, the job queue uses a fair share scheduling policy. If this parameter isn't specified, the job queue uses a first in, first out (FIFO) scheduling policy. After a job queue is created, you can replace but can't remove the fair share scheduling policy.
func (o JobQueueOutput) SchedulingPolicyArn() pulumix.Output[*string] {
	value := pulumix.Apply[JobQueue](o, func(v JobQueue) pulumix.Output[*string] { return v.SchedulingPolicyArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The state of the job queue. Must be one of: `ENABLED` or `DISABLED`
func (o JobQueueOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[JobQueue](o, func(v JobQueue) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o JobQueueOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[JobQueue](o, func(v JobQueue) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o JobQueueOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[JobQueue](o, func(v JobQueue) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o JobQueueOutput) Timeouts() pulumix.GPtrOutput[JobQueueTimeouts, JobQueueTimeoutsOutput] {
	value := pulumix.Apply[JobQueue](o, func(v JobQueue) pulumix.GPtrOutput[JobQueueTimeouts, JobQueueTimeoutsOutput] { return v.Timeouts })
	unwrapped := pulumix.Flatten[*JobQueueTimeouts, pulumix.GPtrOutput[JobQueueTimeouts, JobQueueTimeoutsOutput]](value)
	return pulumix.GPtrOutput[JobQueueTimeouts, JobQueueTimeoutsOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(JobQueueOutput{})
}
