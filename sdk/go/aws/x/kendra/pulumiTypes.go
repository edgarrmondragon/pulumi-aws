// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DataSourceConfiguration struct {
	// A block that provides the configuration information to connect to an Amazon S3 bucket as your data source. Detailed below.
	S3Configuration *DataSourceConfigurationS3Configuration `pulumi:"s3Configuration"`
	// A block that provides the configuration information required for Amazon Kendra Web Crawler. Detailed below.
	WebCrawlerConfiguration *DataSourceConfigurationWebCrawlerConfiguration `pulumi:"webCrawlerConfiguration"`
}

type DataSourceConfigurationArgs struct {
	// A block that provides the configuration information to connect to an Amazon S3 bucket as your data source. Detailed below.
	S3Configuration pulumix.Input[*DataSourceConfigurationS3ConfigurationArgs] `pulumi:"s3Configuration"`
	// A block that provides the configuration information required for Amazon Kendra Web Crawler. Detailed below.
	WebCrawlerConfiguration pulumix.Input[*DataSourceConfigurationWebCrawlerConfigurationArgs] `pulumi:"webCrawlerConfiguration"`
}

func (DataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationArgs) ToDataSourceConfigurationOutput() DataSourceConfigurationOutput {
	return i.ToDataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationArgs) ToDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationOutput)
}

func (i *DataSourceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationOutput) ToDataSourceConfigurationOutput() DataSourceConfigurationOutput {
	return o
}

func (o DataSourceConfigurationOutput) ToDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationOutput {
	return o
}

func (o DataSourceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfiguration] {
	return pulumix.Output[DataSourceConfiguration]{
		OutputState: o.OutputState,
	}
}

// A block that provides the configuration information to connect to an Amazon S3 bucket as your data source. Detailed below.
func (o DataSourceConfigurationOutput) S3Configuration() pulumix.GPtrOutput[DataSourceConfigurationS3Configuration, DataSourceConfigurationS3ConfigurationOutput] {
	value := pulumix.Apply[DataSourceConfiguration](o, func(v DataSourceConfiguration) *DataSourceConfigurationS3Configuration { return v.S3Configuration })
	return pulumix.GPtrOutput[DataSourceConfigurationS3Configuration, DataSourceConfigurationS3ConfigurationOutput]{OutputState: value.OutputState}
}

// A block that provides the configuration information required for Amazon Kendra Web Crawler. Detailed below.
func (o DataSourceConfigurationOutput) WebCrawlerConfiguration() pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfiguration, DataSourceConfigurationWebCrawlerConfigurationOutput] {
	value := pulumix.Apply[DataSourceConfiguration](o, func(v DataSourceConfiguration) *DataSourceConfigurationWebCrawlerConfiguration {
		return v.WebCrawlerConfiguration
	})
	return pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfiguration, DataSourceConfigurationWebCrawlerConfigurationOutput]{OutputState: value.OutputState}
}

type DataSourceConfigurationS3Configuration struct {
	// A block that provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see [Access control for S3 data sources](https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html). Detailed below.
	AccessControlListConfiguration *DataSourceConfigurationS3ConfigurationAccessControlListConfiguration `pulumi:"accessControlListConfiguration"`
	// The name of the bucket that contains the documents.
	BucketName string `pulumi:"bucketName"`
	// A block that defines the Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document. Detailed below.
	DocumentsMetadataConfiguration *DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration `pulumi:"documentsMetadataConfiguration"`
	// A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Exclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-ExclusionPatterns).
	ExclusionPatterns []string `pulumi:"exclusionPatterns"`
	// A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Inclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-InclusionPatterns).
	InclusionPatterns []string `pulumi:"inclusionPatterns"`
	// A list of S3 prefixes for the documents that should be included in the index.
	InclusionPrefixes []string `pulumi:"inclusionPrefixes"`
}

type DataSourceConfigurationS3ConfigurationArgs struct {
	// A block that provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see [Access control for S3 data sources](https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html). Detailed below.
	AccessControlListConfiguration pulumix.Input[*DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs] `pulumi:"accessControlListConfiguration"`
	// The name of the bucket that contains the documents.
	BucketName pulumix.Input[string] `pulumi:"bucketName"`
	// A block that defines the Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document. Detailed below.
	DocumentsMetadataConfiguration pulumix.Input[*DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs] `pulumi:"documentsMetadataConfiguration"`
	// A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Exclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-ExclusionPatterns).
	ExclusionPatterns pulumix.Input[[]string] `pulumi:"exclusionPatterns"`
	// A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Inclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-InclusionPatterns).
	InclusionPatterns pulumix.Input[[]string] `pulumi:"inclusionPatterns"`
	// A list of S3 prefixes for the documents that should be included in the index.
	InclusionPrefixes pulumix.Input[[]string] `pulumi:"inclusionPrefixes"`
}

func (DataSourceConfigurationS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationS3Configuration)(nil)).Elem()
}

func (i DataSourceConfigurationS3ConfigurationArgs) ToDataSourceConfigurationS3ConfigurationOutput() DataSourceConfigurationS3ConfigurationOutput {
	return i.ToDataSourceConfigurationS3ConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationS3ConfigurationArgs) ToDataSourceConfigurationS3ConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationS3ConfigurationOutput)
}

func (i *DataSourceConfigurationS3ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationS3ConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationS3Configuration)(nil)).Elem()
}

func (o DataSourceConfigurationS3ConfigurationOutput) ToDataSourceConfigurationS3ConfigurationOutput() DataSourceConfigurationS3ConfigurationOutput {
	return o
}

func (o DataSourceConfigurationS3ConfigurationOutput) ToDataSourceConfigurationS3ConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationS3ConfigurationOutput {
	return o
}

func (o DataSourceConfigurationS3ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationS3Configuration] {
	return pulumix.Output[DataSourceConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

// A block that provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see [Access control for S3 data sources](https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html). Detailed below.
func (o DataSourceConfigurationS3ConfigurationOutput) AccessControlListConfiguration() pulumix.GPtrOutput[DataSourceConfigurationS3ConfigurationAccessControlListConfiguration, DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput] {
	value := pulumix.Apply[DataSourceConfigurationS3Configuration](o, func(v DataSourceConfigurationS3Configuration) *DataSourceConfigurationS3ConfigurationAccessControlListConfiguration {
		return v.AccessControlListConfiguration
	})
	return pulumix.GPtrOutput[DataSourceConfigurationS3ConfigurationAccessControlListConfiguration, DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput]{OutputState: value.OutputState}
}

// The name of the bucket that contains the documents.
func (o DataSourceConfigurationS3ConfigurationOutput) BucketName() pulumix.Output[string] {
	return pulumix.Apply[DataSourceConfigurationS3Configuration](o, func(v DataSourceConfigurationS3Configuration) string { return v.BucketName })
}

// A block that defines the Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document. Detailed below.
func (o DataSourceConfigurationS3ConfigurationOutput) DocumentsMetadataConfiguration() pulumix.GPtrOutput[DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration, DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput] {
	value := pulumix.Apply[DataSourceConfigurationS3Configuration](o, func(v DataSourceConfigurationS3Configuration) *DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration {
		return v.DocumentsMetadataConfiguration
	})
	return pulumix.GPtrOutput[DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration, DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput]{OutputState: value.OutputState}
}

// A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Exclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-ExclusionPatterns).
func (o DataSourceConfigurationS3ConfigurationOutput) ExclusionPatterns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceConfigurationS3Configuration](o, func(v DataSourceConfigurationS3Configuration) []string { return v.ExclusionPatterns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Inclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-InclusionPatterns).
func (o DataSourceConfigurationS3ConfigurationOutput) InclusionPatterns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceConfigurationS3Configuration](o, func(v DataSourceConfigurationS3Configuration) []string { return v.InclusionPatterns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A list of S3 prefixes for the documents that should be included in the index.
func (o DataSourceConfigurationS3ConfigurationOutput) InclusionPrefixes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceConfigurationS3Configuration](o, func(v DataSourceConfigurationS3Configuration) []string { return v.InclusionPrefixes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DataSourceConfigurationS3ConfigurationAccessControlListConfiguration struct {
	// Path to the AWS S3 bucket that contains the ACL files.
	KeyPath *string `pulumi:"keyPath"`
}

type DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs struct {
	// Path to the AWS S3 bucket that contains the ACL files.
	KeyPath pulumix.Input[*string] `pulumi:"keyPath"`
}

func (DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationS3ConfigurationAccessControlListConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs) ToDataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput() DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput {
	return i.ToDataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs) ToDataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput)
}

func (i *DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationS3ConfigurationAccessControlListConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationS3ConfigurationAccessControlListConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput) ToDataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput() DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput {
	return o
}

func (o DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput) ToDataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput {
	return o
}

func (o DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationS3ConfigurationAccessControlListConfiguration] {
	return pulumix.Output[DataSourceConfigurationS3ConfigurationAccessControlListConfiguration]{
		OutputState: o.OutputState,
	}
}

// Path to the AWS S3 bucket that contains the ACL files.
func (o DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput) KeyPath() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceConfigurationS3ConfigurationAccessControlListConfiguration](o, func(v DataSourceConfigurationS3ConfigurationAccessControlListConfiguration) *string { return v.KeyPath })
}

type DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration struct {
	// A prefix used to filter metadata configuration files in the AWS S3 bucket. The S3 bucket might contain multiple metadata files. Use `s3Prefix` to include only the desired metadata files.
	S3Prefix *string `pulumi:"s3Prefix"`
}

type DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs struct {
	// A prefix used to filter metadata configuration files in the AWS S3 bucket. The S3 bucket might contain multiple metadata files. Use `s3Prefix` to include only the desired metadata files.
	S3Prefix pulumix.Input[*string] `pulumi:"s3Prefix"`
}

func (DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs) ToDataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput() DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput {
	return i.ToDataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs) ToDataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput)
}

func (i *DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput) ToDataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput() DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput {
	return o
}

func (o DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput) ToDataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput {
	return o
}

func (o DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration] {
	return pulumix.Output[DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration]{
		OutputState: o.OutputState,
	}
}

// A prefix used to filter metadata configuration files in the AWS S3 bucket. The S3 bucket might contain multiple metadata files. Use `s3Prefix` to include only the desired metadata files.
func (o DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput) S3Prefix() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration](o, func(v DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration) *string {
		return v.S3Prefix
	})
}

type DataSourceConfigurationWebCrawlerConfiguration struct {
	// A block with the configuration information required to connect to websites using authentication. You can connect to websites using basic authentication of user name and password. You use a secret in AWS Secrets Manager to store your authentication credentials. You must provide the website host name and port number. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"` and the port is `443`, the standard port for HTTPS. Detailed below.
	AuthenticationConfiguration *DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	// Specifies the number of levels in a website that you want to crawl. The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1. The default crawl depth is set to `2`. Minimum value of `0`. Maximum value of `10`.
	CrawlDepth *int `pulumi:"crawlDepth"`
	// The maximum size (in MB) of a webpage or attachment to crawl. Files larger than this size (in MB) are skipped/not crawled. The default maximum size of a webpage or attachment is set to `50` MB. Minimum value of `1.0e-06`. Maximum value of `50`.
	MaxContentSizePerPageInMegaBytes *float64 `pulumi:"maxContentSizePerPageInMegaBytes"`
	// The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage. As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance. The default maximum links per page is `100`. Minimum value of `1`. Maximum value of `1000`.
	MaxLinksPerPage *int `pulumi:"maxLinksPerPage"`
	// The maximum number of URLs crawled per website host per minute. The default maximum number of URLs crawled per website host per minute is `300`. Minimum value of `1`. Maximum value of `300`.
	MaxUrlsPerMinuteCrawlRate *int `pulumi:"maxUrlsPerMinuteCrawlRate"`
	// Configuration information required to connect to your internal websites via a web proxy. You must provide the website host name and port number. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"` and the port is `443`, the standard port for HTTPS. Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in [AWS Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html). Detailed below.
	ProxyConfiguration *DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration `pulumi:"proxyConfiguration"`
	// A list of regular expression patterns to exclude certain URLs to crawl. URLs that match the patterns are excluded from the index. URLs that don't match the patterns are included in the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `150`.
	UrlExclusionPatterns []string `pulumi:"urlExclusionPatterns"`
	// A list of regular expression patterns to include certain URLs to crawl. URLs that match the patterns are included in the index. URLs that don't match the patterns are excluded from the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `150`.
	UrlInclusionPatterns []string `pulumi:"urlInclusionPatterns"`
	// A block that specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl. You can include website subdomains. You can list up to `100` seed URLs and up to `3` sitemap URLs. You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling. When selecting websites to index, you must adhere to the [Amazon Acceptable Use Policy](https://aws.amazon.com/aup/) and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own webpages, or webpages that you have authorization to index. Detailed below.
	Urls DataSourceConfigurationWebCrawlerConfigurationUrls `pulumi:"urls"`
}

type DataSourceConfigurationWebCrawlerConfigurationArgs struct {
	// A block with the configuration information required to connect to websites using authentication. You can connect to websites using basic authentication of user name and password. You use a secret in AWS Secrets Manager to store your authentication credentials. You must provide the website host name and port number. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"` and the port is `443`, the standard port for HTTPS. Detailed below.
	AuthenticationConfiguration pulumix.Input[*DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationArgs] `pulumi:"authenticationConfiguration"`
	// Specifies the number of levels in a website that you want to crawl. The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1. The default crawl depth is set to `2`. Minimum value of `0`. Maximum value of `10`.
	CrawlDepth pulumix.Input[*int] `pulumi:"crawlDepth"`
	// The maximum size (in MB) of a webpage or attachment to crawl. Files larger than this size (in MB) are skipped/not crawled. The default maximum size of a webpage or attachment is set to `50` MB. Minimum value of `1.0e-06`. Maximum value of `50`.
	MaxContentSizePerPageInMegaBytes pulumix.Input[*float64] `pulumi:"maxContentSizePerPageInMegaBytes"`
	// The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage. As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance. The default maximum links per page is `100`. Minimum value of `1`. Maximum value of `1000`.
	MaxLinksPerPage pulumix.Input[*int] `pulumi:"maxLinksPerPage"`
	// The maximum number of URLs crawled per website host per minute. The default maximum number of URLs crawled per website host per minute is `300`. Minimum value of `1`. Maximum value of `300`.
	MaxUrlsPerMinuteCrawlRate pulumix.Input[*int] `pulumi:"maxUrlsPerMinuteCrawlRate"`
	// Configuration information required to connect to your internal websites via a web proxy. You must provide the website host name and port number. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"` and the port is `443`, the standard port for HTTPS. Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in [AWS Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html). Detailed below.
	ProxyConfiguration pulumix.Input[*DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationArgs] `pulumi:"proxyConfiguration"`
	// A list of regular expression patterns to exclude certain URLs to crawl. URLs that match the patterns are excluded from the index. URLs that don't match the patterns are included in the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `150`.
	UrlExclusionPatterns pulumix.Input[[]string] `pulumi:"urlExclusionPatterns"`
	// A list of regular expression patterns to include certain URLs to crawl. URLs that match the patterns are included in the index. URLs that don't match the patterns are excluded from the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `150`.
	UrlInclusionPatterns pulumix.Input[[]string] `pulumi:"urlInclusionPatterns"`
	// A block that specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl. You can include website subdomains. You can list up to `100` seed URLs and up to `3` sitemap URLs. You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling. When selecting websites to index, you must adhere to the [Amazon Acceptable Use Policy](https://aws.amazon.com/aup/) and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own webpages, or webpages that you have authorization to index. Detailed below.
	Urls pulumix.Input[*DataSourceConfigurationWebCrawlerConfigurationUrlsArgs] `pulumi:"urls"`
}

func (DataSourceConfigurationWebCrawlerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationWebCrawlerConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationOutput {
	return i.ToDataSourceConfigurationWebCrawlerConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationWebCrawlerConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationWebCrawlerConfigurationOutput)
}

func (i *DataSourceConfigurationWebCrawlerConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationWebCrawlerConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationWebCrawlerConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationWebCrawlerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationWebCrawlerConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationWebCrawlerConfiguration] {
	return pulumix.Output[DataSourceConfigurationWebCrawlerConfiguration]{
		OutputState: o.OutputState,
	}
}

// A block with the configuration information required to connect to websites using authentication. You can connect to websites using basic authentication of user name and password. You use a secret in AWS Secrets Manager to store your authentication credentials. You must provide the website host name and port number. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"` and the port is `443`, the standard port for HTTPS. Detailed below.
func (o DataSourceConfigurationWebCrawlerConfigurationOutput) AuthenticationConfiguration() pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration, DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfiguration) *DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration {
		return v.AuthenticationConfiguration
	})
	return pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration, DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput]{OutputState: value.OutputState}
}

// Specifies the number of levels in a website that you want to crawl. The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1. The default crawl depth is set to `2`. Minimum value of `0`. Maximum value of `10`.
func (o DataSourceConfigurationWebCrawlerConfigurationOutput) CrawlDepth() pulumix.Output[*int] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfiguration) *int { return v.CrawlDepth })
}

// The maximum size (in MB) of a webpage or attachment to crawl. Files larger than this size (in MB) are skipped/not crawled. The default maximum size of a webpage or attachment is set to `50` MB. Minimum value of `1.0e-06`. Maximum value of `50`.
func (o DataSourceConfigurationWebCrawlerConfigurationOutput) MaxContentSizePerPageInMegaBytes() pulumix.Output[*float64] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfiguration) *float64 {
		return v.MaxContentSizePerPageInMegaBytes
	})
}

// The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage. As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance. The default maximum links per page is `100`. Minimum value of `1`. Maximum value of `1000`.
func (o DataSourceConfigurationWebCrawlerConfigurationOutput) MaxLinksPerPage() pulumix.Output[*int] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfiguration) *int { return v.MaxLinksPerPage })
}

// The maximum number of URLs crawled per website host per minute. The default maximum number of URLs crawled per website host per minute is `300`. Minimum value of `1`. Maximum value of `300`.
func (o DataSourceConfigurationWebCrawlerConfigurationOutput) MaxUrlsPerMinuteCrawlRate() pulumix.Output[*int] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfiguration) *int { return v.MaxUrlsPerMinuteCrawlRate })
}

// Configuration information required to connect to your internal websites via a web proxy. You must provide the website host name and port number. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"` and the port is `443`, the standard port for HTTPS. Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in [AWS Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html). Detailed below.
func (o DataSourceConfigurationWebCrawlerConfigurationOutput) ProxyConfiguration() pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration, DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfiguration) *DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration {
		return v.ProxyConfiguration
	})
	return pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration, DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput]{OutputState: value.OutputState}
}

// A list of regular expression patterns to exclude certain URLs to crawl. URLs that match the patterns are excluded from the index. URLs that don't match the patterns are included in the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `150`.
func (o DataSourceConfigurationWebCrawlerConfigurationOutput) UrlExclusionPatterns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfiguration) []string { return v.UrlExclusionPatterns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A list of regular expression patterns to include certain URLs to crawl. URLs that match the patterns are included in the index. URLs that don't match the patterns are excluded from the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `150`.
func (o DataSourceConfigurationWebCrawlerConfigurationOutput) UrlInclusionPatterns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfiguration) []string { return v.UrlInclusionPatterns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A block that specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl. You can include website subdomains. You can list up to `100` seed URLs and up to `3` sitemap URLs. You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling. When selecting websites to index, you must adhere to the [Amazon Acceptable Use Policy](https://aws.amazon.com/aup/) and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own webpages, or webpages that you have authorization to index. Detailed below.
func (o DataSourceConfigurationWebCrawlerConfigurationOutput) Urls() pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationUrls, DataSourceConfigurationWebCrawlerConfigurationUrlsOutput] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfiguration) DataSourceConfigurationWebCrawlerConfigurationUrls {
		return v.Urls
	})
	return pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationUrls, DataSourceConfigurationWebCrawlerConfigurationUrlsOutput]{OutputState: value.OutputState}
}

type DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration struct {
	// The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials. The list includes the name and port number of the website host. Detailed below.
	BasicAuthentications []DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication `pulumi:"basicAuthentications"`
}

type DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationArgs struct {
	// The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials. The list includes the name and port number of the website host. Detailed below.
	BasicAuthentications pulumix.Input[[]*DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationArgs] `pulumi:"basicAuthentications"`
}

func (DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput {
	return i.ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput)
}

func (i *DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration] {
	return pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials. The list includes the name and port number of the website host. Detailed below.
func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput) BasicAuthentications() pulumix.GArrayOutput[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication, DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfiguration) []DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication {
		return v.BasicAuthentications
	})
	return pulumix.GArrayOutput[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication, DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput]{OutputState: value.OutputState}
}

type DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication struct {
	// Your secret ARN, which you can create in AWS Secrets Manager. You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.
	Credentials string `pulumi:"credentials"`
	// The name of the website host you want to connect to using authentication credentials. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"`.
	Host string `pulumi:"host"`
	// The port number of the website host you want to connect to using authentication credentials. For example, the port for `https://a.example.com/page1.html` is `443`, the standard port for HTTPS.
	Port int `pulumi:"port"`
}

type DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationArgs struct {
	// Your secret ARN, which you can create in AWS Secrets Manager. You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.
	Credentials pulumix.Input[string] `pulumi:"credentials"`
	// The name of the website host you want to connect to using authentication credentials. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"`.
	Host pulumix.Input[string] `pulumi:"host"`
	// The port number of the website host you want to connect to using authentication credentials. For example, the port for `https://a.example.com/page1.html` is `443`, the standard port for HTTPS.
	Port pulumix.Input[int] `pulumi:"port"`
}

func (DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication)(nil)).Elem()
}

func (i DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationArgs) ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput() DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput {
	return i.ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationArgs) ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput)
}

func (i *DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication)(nil)).Elem()
}

func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput) ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput() DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput) ToDataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication] {
	return pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication]{
		OutputState: o.OutputState,
	}
}

// Your secret ARN, which you can create in AWS Secrets Manager. You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.
func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput) Credentials() pulumix.Output[string] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication](o, func(v DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication) string {
		return v.Credentials
	})
}

// The name of the website host you want to connect to using authentication credentials. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"`.
func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput) Host() pulumix.Output[string] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication](o, func(v DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication) string {
		return v.Host
	})
}

// The port number of the website host you want to connect to using authentication credentials. For example, the port for `https://a.example.com/page1.html` is `443`, the standard port for HTTPS.
func (o DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput) Port() pulumix.Output[int] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication](o, func(v DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthentication) int {
		return v.Port
	})
}

type DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration struct {
	// Your secret ARN, which you can create in AWS Secrets Manager. The credentials are optional. You use a secret if web proxy credentials are required to connect to a website host. Amazon Kendra currently support basic authentication to connect to a web proxy server. The secret stores your credentials.
	Credentials *string `pulumi:"credentials"`
	// The name of the website host you want to connect to via a web proxy server. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"`.
	Host string `pulumi:"host"`
	// The port number of the website host you want to connect to via a web proxy server. For example, the port for `https://a.example.com/page1.html` is `443`, the standard port for HTTPS.
	Port int `pulumi:"port"`
}

type DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationArgs struct {
	// Your secret ARN, which you can create in AWS Secrets Manager. The credentials are optional. You use a secret if web proxy credentials are required to connect to a website host. Amazon Kendra currently support basic authentication to connect to a web proxy server. The secret stores your credentials.
	Credentials pulumix.Input[*string] `pulumi:"credentials"`
	// The name of the website host you want to connect to via a web proxy server. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"`.
	Host pulumix.Input[string] `pulumi:"host"`
	// The port number of the website host you want to connect to via a web proxy server. For example, the port for `https://a.example.com/page1.html` is `443`, the standard port for HTTPS.
	Port pulumix.Input[int] `pulumi:"port"`
}

func (DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput {
	return i.ToDataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput)
}

func (i *DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration] {
	return pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration]{
		OutputState: o.OutputState,
	}
}

// Your secret ARN, which you can create in AWS Secrets Manager. The credentials are optional. You use a secret if web proxy credentials are required to connect to a website host. Amazon Kendra currently support basic authentication to connect to a web proxy server. The secret stores your credentials.
func (o DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput) Credentials() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration) *string { return v.Credentials })
}

// The name of the website host you want to connect to via a web proxy server. For example, the host name of `https://a.example.com/page1.html` is `"a.example.com"`.
func (o DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput) Host() pulumix.Output[string] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration) string { return v.Host })
}

// The port number of the website host you want to connect to via a web proxy server. For example, the port for `https://a.example.com/page1.html` is `443`, the standard port for HTTPS.
func (o DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput) Port() pulumix.Output[int] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfigurationProxyConfiguration) int { return v.Port })
}

type DataSourceConfigurationWebCrawlerConfigurationUrls struct {
	// A block that specifies the configuration of the seed or starting point URLs of the websites you want to crawl. You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to. You can list up to `100` seed URLs. Detailed below.
	SeedUrlConfiguration *DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration `pulumi:"seedUrlConfiguration"`
	// A block that specifies the configuration of the sitemap URLs of the websites you want to crawl. Only URLs belonging to the same website host names are crawled. You can list up to `3` sitemap URLs. Detailed below.
	SiteMapsConfiguration *DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration `pulumi:"siteMapsConfiguration"`
}

type DataSourceConfigurationWebCrawlerConfigurationUrlsArgs struct {
	// A block that specifies the configuration of the seed or starting point URLs of the websites you want to crawl. You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to. You can list up to `100` seed URLs. Detailed below.
	SeedUrlConfiguration pulumix.Input[*DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationArgs] `pulumi:"seedUrlConfiguration"`
	// A block that specifies the configuration of the sitemap URLs of the websites you want to crawl. Only URLs belonging to the same website host names are crawled. You can list up to `3` sitemap URLs. Detailed below.
	SiteMapsConfiguration pulumix.Input[*DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs] `pulumi:"siteMapsConfiguration"`
}

func (DataSourceConfigurationWebCrawlerConfigurationUrlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationUrls)(nil)).Elem()
}

func (i DataSourceConfigurationWebCrawlerConfigurationUrlsArgs) ToDataSourceConfigurationWebCrawlerConfigurationUrlsOutput() DataSourceConfigurationWebCrawlerConfigurationUrlsOutput {
	return i.ToDataSourceConfigurationWebCrawlerConfigurationUrlsOutputWithContext(context.Background())
}

func (i DataSourceConfigurationWebCrawlerConfigurationUrlsArgs) ToDataSourceConfigurationWebCrawlerConfigurationUrlsOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationUrlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationWebCrawlerConfigurationUrlsOutput)
}

func (i *DataSourceConfigurationWebCrawlerConfigurationUrlsArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationWebCrawlerConfigurationUrlsArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationWebCrawlerConfigurationUrlsOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationWebCrawlerConfigurationUrlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationUrls)(nil)).Elem()
}

func (o DataSourceConfigurationWebCrawlerConfigurationUrlsOutput) ToDataSourceConfigurationWebCrawlerConfigurationUrlsOutput() DataSourceConfigurationWebCrawlerConfigurationUrlsOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationUrlsOutput) ToDataSourceConfigurationWebCrawlerConfigurationUrlsOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationUrlsOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationUrlsOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationUrls] {
	return pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationUrls]{
		OutputState: o.OutputState,
	}
}

// A block that specifies the configuration of the seed or starting point URLs of the websites you want to crawl. You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to. You can list up to `100` seed URLs. Detailed below.
func (o DataSourceConfigurationWebCrawlerConfigurationUrlsOutput) SeedUrlConfiguration() pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration, DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationUrls](o, func(v DataSourceConfigurationWebCrawlerConfigurationUrls) *DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration {
		return v.SeedUrlConfiguration
	})
	return pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration, DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput]{OutputState: value.OutputState}
}

// A block that specifies the configuration of the sitemap URLs of the websites you want to crawl. Only URLs belonging to the same website host names are crawled. You can list up to `3` sitemap URLs. Detailed below.
func (o DataSourceConfigurationWebCrawlerConfigurationUrlsOutput) SiteMapsConfiguration() pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration, DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationUrls](o, func(v DataSourceConfigurationWebCrawlerConfigurationUrls) *DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration {
		return v.SiteMapsConfiguration
	})
	return pulumix.GPtrOutput[DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration, DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput]{OutputState: value.OutputState}
}

type DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration struct {
	// The list of seed or starting point URLs of the websites you want to crawl. The list can include a maximum of `100` seed URLs. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `2048`.
	SeedUrls []string `pulumi:"seedUrls"`
	// The default mode is set to `HOST_ONLY`. You can choose one of the following modes:
	WebCrawlerMode *string `pulumi:"webCrawlerMode"`
}

type DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationArgs struct {
	// The list of seed or starting point URLs of the websites you want to crawl. The list can include a maximum of `100` seed URLs. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `2048`.
	SeedUrls pulumix.Input[[]string] `pulumi:"seedUrls"`
	// The default mode is set to `HOST_ONLY`. You can choose one of the following modes:
	WebCrawlerMode pulumix.Input[*string] `pulumi:"webCrawlerMode"`
}

func (DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput {
	return i.ToDataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput)
}

func (i *DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration] {
	return pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration]{
		OutputState: o.OutputState,
	}
}

// The list of seed or starting point URLs of the websites you want to crawl. The list can include a maximum of `100` seed URLs. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `2048`.
func (o DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput) SeedUrls() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration) []string {
		return v.SeedUrls
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The default mode is set to `HOST_ONLY`. You can choose one of the following modes:
func (o DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput) WebCrawlerMode() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfiguration) *string {
		return v.WebCrawlerMode
	})
}

type DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration struct {
	// The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.
	SiteMaps []string `pulumi:"siteMaps"`
}

type DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs struct {
	// The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.
	SiteMaps pulumix.Input[[]string] `pulumi:"siteMaps"`
}

func (DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput {
	return i.ToDataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs) ToDataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput)
}

func (i *DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput() DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput) ToDataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput {
	return o
}

func (o DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration] {
	return pulumix.Output[DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration]{
		OutputState: o.OutputState,
	}
}

// The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.
func (o DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput) SiteMaps() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration](o, func(v DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfiguration) []string {
		return v.SiteMaps
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DataSourceCustomDocumentEnrichmentConfiguration struct {
	// Configuration information to alter document attributes or metadata fields and content when ingesting documents into Amazon Kendra. Minimum number of `0` items. Maximum number of `100` items. Detailed below.
	InlineConfigurations []DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration `pulumi:"inlineConfigurations"`
	// A block that specifies the configuration information for invoking a Lambda function in AWS Lambda on the structured documents with their metadata and text extracted. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
	PostExtractionHookConfiguration *DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration `pulumi:"postExtractionHookConfiguration"`
	// Configuration information for invoking a Lambda function in AWS Lambda on the original or raw documents before extracting their metadata and text. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
	PreExtractionHookConfiguration *DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration `pulumi:"preExtractionHookConfiguration"`
	// The Amazon Resource Name (ARN) of a role with permission to run `preExtractionHookConfiguration` and `postExtractionHookConfiguration` for altering document metadata and content during the document ingestion process. For more information, see [IAM roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
	RoleArn *string `pulumi:"roleArn"`
}

type DataSourceCustomDocumentEnrichmentConfigurationArgs struct {
	// Configuration information to alter document attributes or metadata fields and content when ingesting documents into Amazon Kendra. Minimum number of `0` items. Maximum number of `100` items. Detailed below.
	InlineConfigurations pulumix.Input[[]*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationArgs] `pulumi:"inlineConfigurations"`
	// A block that specifies the configuration information for invoking a Lambda function in AWS Lambda on the structured documents with their metadata and text extracted. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
	PostExtractionHookConfiguration pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationArgs] `pulumi:"postExtractionHookConfiguration"`
	// Configuration information for invoking a Lambda function in AWS Lambda on the original or raw documents before extracting their metadata and text. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
	PreExtractionHookConfiguration pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationArgs] `pulumi:"preExtractionHookConfiguration"`
	// The Amazon Resource Name (ARN) of a role with permission to run `preExtractionHookConfiguration` and `postExtractionHookConfiguration` for altering document metadata and content during the document ingestion process. For more information, see [IAM roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
	RoleArn pulumix.Input[*string] `pulumi:"roleArn"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfiguration)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationArgs) ToDataSourceCustomDocumentEnrichmentConfigurationOutput() DataSourceCustomDocumentEnrichmentConfigurationOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationArgs) ToDataSourceCustomDocumentEnrichmentConfigurationOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfiguration)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationOutput) ToDataSourceCustomDocumentEnrichmentConfigurationOutput() DataSourceCustomDocumentEnrichmentConfigurationOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationOutput) ToDataSourceCustomDocumentEnrichmentConfigurationOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfiguration] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfiguration]{
		OutputState: o.OutputState,
	}
}

// Configuration information to alter document attributes or metadata fields and content when ingesting documents into Amazon Kendra. Minimum number of `0` items. Maximum number of `100` items. Detailed below.
func (o DataSourceCustomDocumentEnrichmentConfigurationOutput) InlineConfigurations() pulumix.GArrayOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfiguration) []DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration {
		return v.InlineConfigurations
	})
	return pulumix.GArrayOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput]{OutputState: value.OutputState}
}

// A block that specifies the configuration information for invoking a Lambda function in AWS Lambda on the structured documents with their metadata and text extracted. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
func (o DataSourceCustomDocumentEnrichmentConfigurationOutput) PostExtractionHookConfiguration() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration, DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfiguration) *DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration {
		return v.PostExtractionHookConfiguration
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration, DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput]{OutputState: value.OutputState}
}

// Configuration information for invoking a Lambda function in AWS Lambda on the original or raw documents before extracting their metadata and text. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see [Advanced data manipulation](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation). Detailed below.
func (o DataSourceCustomDocumentEnrichmentConfigurationOutput) PreExtractionHookConfiguration() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration, DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfiguration) *DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration {
		return v.PreExtractionHookConfiguration
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration, DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of a role with permission to run `preExtractionHookConfiguration` and `postExtractionHookConfiguration` for altering document metadata and content during the document ingestion process. For more information, see [IAM roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
func (o DataSourceCustomDocumentEnrichmentConfigurationOutput) RoleArn() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfiguration) *string { return v.RoleArn })
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration struct {
	// Configuration of the condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. See condition.
	Condition *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition `pulumi:"condition"`
	// `TRUE` to delete content if the condition used for the target attribute is met.
	DocumentContentDeletion *bool `pulumi:"documentContentDeletion"`
	// Configuration of the target document attribute or metadata field when ingesting documents into Amazon Kendra. You can also include a value. Detailed below.
	Target *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget `pulumi:"target"`
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationArgs struct {
	// Configuration of the condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. See condition.
	Condition pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionArgs] `pulumi:"condition"`
	// `TRUE` to delete content if the condition used for the target attribute is met.
	DocumentContentDeletion pulumix.Input[*bool] `pulumi:"documentContentDeletion"`
	// Configuration of the target document attribute or metadata field when ingesting documents into Amazon Kendra. You can also include a value. Detailed below.
	Target pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs] `pulumi:"target"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration]{
		OutputState: o.OutputState,
	}
}

// Configuration of the condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. See condition.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput) Condition() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration) *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition {
		return v.Condition
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput]{OutputState: value.OutputState}
}

// `TRUE` to delete content if the condition used for the target attribute is met.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput) DocumentContentDeletion() pulumix.Output[*bool] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration) *bool {
		return v.DocumentContentDeletion
	})
}

// Configuration of the target document attribute or metadata field when ingesting documents into Amazon Kendra. You can also include a value. Detailed below.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput) Target() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfiguration) *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget {
		return v.Target
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput]{OutputState: value.OutputState}
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition struct {
	// The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
	ConditionDocumentAttributeKey string `pulumi:"conditionDocumentAttributeKey"`
	// The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See condition_on_value.
	ConditionOnValue *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue `pulumi:"conditionOnValue"`
	// The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
	Operator string `pulumi:"operator"`
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionArgs struct {
	// The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
	ConditionDocumentAttributeKey pulumix.Input[string] `pulumi:"conditionDocumentAttributeKey"`
	// The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See condition_on_value.
	ConditionOnValue pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueArgs] `pulumi:"conditionOnValue"`
	// The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
	Operator pulumix.Input[string] `pulumi:"operator"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition]{
		OutputState: o.OutputState,
	}
}

// The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput) ConditionDocumentAttributeKey() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition) string {
		return v.ConditionDocumentAttributeKey
	})
}

// The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See condition_on_value.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput) ConditionOnValue() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition) *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue {
		return v.ConditionOnValue
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput]{OutputState: value.OutputState}
}

// The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput) Operator() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationCondition) string {
		return v.Operator
	})
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue struct {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
	DateValue *string `pulumi:"dateValue"`
	// A long integer value.
	LongValue *int `pulumi:"longValue"`
	// A list of strings.
	StringListValues []string `pulumi:"stringListValues"`
	StringValue      *string  `pulumi:"stringValue"`
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueArgs struct {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
	DateValue pulumix.Input[*string] `pulumi:"dateValue"`
	// A long integer value.
	LongValue pulumix.Input[*int] `pulumi:"longValue"`
	// A list of strings.
	StringListValues pulumix.Input[[]string] `pulumi:"stringListValues"`
	StringValue      pulumix.Input[*string]  `pulumi:"stringValue"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue]{
		OutputState: o.OutputState,
	}
}

// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput) DateValue() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue) *string {
		return v.DateValue
	})
}

// A long integer value.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput) LongValue() pulumix.Output[*int] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue) *int {
		return v.LongValue
	})
}

// A list of strings.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput) StringListValues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue) []string {
		return v.StringListValues
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput) StringValue() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValue) *string {
		return v.StringValue
	})
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget struct {
	// The identifier of the target document attribute or metadata field. For example, 'Department' could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
	TargetDocumentAttributeKey *string `pulumi:"targetDocumentAttributeKey"`
	// The target value you want to create for the target attribute. For example, 'Finance' could be the target value for the target attribute key 'Department'. See target_document_attribute_value.
	TargetDocumentAttributeValue *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue `pulumi:"targetDocumentAttributeValue"`
	// `TRUE` to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to `TRUE`. To create a target value (`TargetDocumentAttributeValue`), set this to `FALSE`.
	TargetDocumentAttributeValueDeletion *bool `pulumi:"targetDocumentAttributeValueDeletion"`
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs struct {
	// The identifier of the target document attribute or metadata field. For example, 'Department' could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
	TargetDocumentAttributeKey pulumix.Input[*string] `pulumi:"targetDocumentAttributeKey"`
	// The target value you want to create for the target attribute. For example, 'Finance' could be the target value for the target attribute key 'Department'. See target_document_attribute_value.
	TargetDocumentAttributeValue pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs] `pulumi:"targetDocumentAttributeValue"`
	// `TRUE` to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to `TRUE`. To create a target value (`TargetDocumentAttributeValue`), set this to `FALSE`.
	TargetDocumentAttributeValueDeletion pulumix.Input[*bool] `pulumi:"targetDocumentAttributeValueDeletion"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget]{
		OutputState: o.OutputState,
	}
}

// The identifier of the target document attribute or metadata field. For example, 'Department' could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput) TargetDocumentAttributeKey() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget) *string {
		return v.TargetDocumentAttributeKey
	})
}

// The target value you want to create for the target attribute. For example, 'Finance' could be the target value for the target attribute key 'Department'. See target_document_attribute_value.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput) TargetDocumentAttributeValue() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget) *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue {
		return v.TargetDocumentAttributeValue
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue, DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput]{OutputState: value.OutputState}
}

// `TRUE` to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to `TRUE`. To create a target value (`TargetDocumentAttributeValue`), set this to `FALSE`.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput) TargetDocumentAttributeValueDeletion() pulumix.Output[*bool] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTarget) *bool {
		return v.TargetDocumentAttributeValueDeletion
	})
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue struct {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
	DateValue *string `pulumi:"dateValue"`
	// A long integer value.
	LongValue *int `pulumi:"longValue"`
	// A list of strings.
	StringListValues []string `pulumi:"stringListValues"`
	StringValue      *string  `pulumi:"stringValue"`
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs struct {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
	DateValue pulumix.Input[*string] `pulumi:"dateValue"`
	// A long integer value.
	LongValue pulumix.Input[*int] `pulumi:"longValue"`
	// A list of strings.
	StringListValues pulumix.Input[[]string] `pulumi:"stringListValues"`
	StringValue      pulumix.Input[*string]  `pulumi:"stringValue"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput() DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput) ToDataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue]{
		OutputState: o.OutputState,
	}
}

// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput) DateValue() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue) *string {
		return v.DateValue
	})
}

// A long integer value.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput) LongValue() pulumix.Output[*int] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue) *int {
		return v.LongValue
	})
}

// A list of strings.
func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput) StringListValues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue) []string {
		return v.StringListValues
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput) StringValue() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValue) *string {
		return v.StringValue
	})
}

type DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration struct {
	// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See invocation_condition.
	InvocationCondition *DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition `pulumi:"invocationCondition"`
	// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
	LambdaArn string `pulumi:"lambdaArn"`
	// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
	S3Bucket string `pulumi:"s3Bucket"`
}

type DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationArgs struct {
	// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See invocation_condition.
	InvocationCondition pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionArgs] `pulumi:"invocationCondition"`
	// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
	LambdaArn pulumix.Input[string] `pulumi:"lambdaArn"`
	// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
	S3Bucket pulumix.Input[string] `pulumi:"s3Bucket"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput() DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput() DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration]{
		OutputState: o.OutputState,
	}
}

// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See invocation_condition.
func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput) InvocationCondition() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition, DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration) *DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition {
		return v.InvocationCondition
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition, DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput) LambdaArn() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration) string {
		return v.LambdaArn
	})
}

// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput) S3Bucket() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfiguration) string {
		return v.S3Bucket
	})
}

type DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition struct {
	// The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
	ConditionDocumentAttributeKey string `pulumi:"conditionDocumentAttributeKey"`
	// The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See condition_on_value.
	ConditionOnValue *DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue `pulumi:"conditionOnValue"`
	// The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
	Operator string `pulumi:"operator"`
}

type DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionArgs struct {
	// The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
	ConditionDocumentAttributeKey pulumix.Input[string] `pulumi:"conditionDocumentAttributeKey"`
	// The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See condition_on_value.
	ConditionOnValue pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueArgs] `pulumi:"conditionOnValue"`
	// The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
	Operator pulumix.Input[string] `pulumi:"operator"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput() DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput() DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition]{
		OutputState: o.OutputState,
	}
}

// The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput) ConditionDocumentAttributeKey() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition) string {
		return v.ConditionDocumentAttributeKey
	})
}

// The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See condition_on_value.
func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput) ConditionOnValue() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue, DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition) *DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue {
		return v.ConditionOnValue
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue, DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput]{OutputState: value.OutputState}
}

// The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput) Operator() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationCondition) string {
		return v.Operator
	})
}

type DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue struct {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
	DateValue *string `pulumi:"dateValue"`
	// A long integer value.
	LongValue *int `pulumi:"longValue"`
	// A list of strings.
	StringListValues []string `pulumi:"stringListValues"`
	StringValue      *string  `pulumi:"stringValue"`
}

type DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueArgs struct {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
	DateValue pulumix.Input[*string] `pulumi:"dateValue"`
	// A long integer value.
	LongValue pulumix.Input[*int] `pulumi:"longValue"`
	// A list of strings.
	StringListValues pulumix.Input[[]string] `pulumi:"stringListValues"`
	StringValue      pulumix.Input[*string]  `pulumi:"stringValue"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput() DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput() DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue]{
		OutputState: o.OutputState,
	}
}

// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput) DateValue() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue) *string {
		return v.DateValue
	})
}

// A long integer value.
func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput) LongValue() pulumix.Output[*int] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue) *int {
		return v.LongValue
	})
}

// A list of strings.
func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput) StringListValues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue) []string {
		return v.StringListValues
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput) StringValue() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValue) *string {
		return v.StringValue
	})
}

type DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration struct {
	// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See invocation_condition.
	InvocationCondition *DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition `pulumi:"invocationCondition"`
	// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
	LambdaArn string `pulumi:"lambdaArn"`
	// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
	S3Bucket string `pulumi:"s3Bucket"`
}

type DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationArgs struct {
	// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See invocation_condition.
	InvocationCondition pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionArgs] `pulumi:"invocationCondition"`
	// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
	LambdaArn pulumix.Input[string] `pulumi:"lambdaArn"`
	// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
	S3Bucket pulumix.Input[string] `pulumi:"s3Bucket"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput() DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput() DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration]{
		OutputState: o.OutputState,
	}
}

// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See invocation_condition.
func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput) InvocationCondition() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition, DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration) *DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition {
		return v.InvocationCondition
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition, DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput]{OutputState: value.OutputState}
}

// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput) LambdaArn() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration) string {
		return v.LambdaArn
	})
}

// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda).
func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput) S3Bucket() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfiguration) string {
		return v.S3Bucket
	})
}

type DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition struct {
	// The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
	ConditionDocumentAttributeKey string `pulumi:"conditionDocumentAttributeKey"`
	// The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See condition_on_value.
	ConditionOnValue *DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue `pulumi:"conditionOnValue"`
	// The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
	Operator string `pulumi:"operator"`
}

type DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionArgs struct {
	// The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
	ConditionDocumentAttributeKey pulumix.Input[string] `pulumi:"conditionDocumentAttributeKey"`
	// The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See condition_on_value.
	ConditionOnValue pulumix.Input[*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueArgs] `pulumi:"conditionOnValue"`
	// The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
	Operator pulumix.Input[string] `pulumi:"operator"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput() DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput() DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition]{
		OutputState: o.OutputState,
	}
}

// The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.
func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput) ConditionDocumentAttributeKey() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition) string {
		return v.ConditionDocumentAttributeKey
	})
}

// The value used by the operator. For example, you can specify the value 'financial' for strings in the `_source_uri` field that partially match or contain this value. See condition_on_value.
func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput) ConditionOnValue() pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue, DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition) *DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue {
		return v.ConditionOnValue
	})
	return pulumix.GPtrOutput[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue, DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput]{OutputState: value.OutputState}
}

// The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.
func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput) Operator() pulumix.Output[string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationCondition) string {
		return v.Operator
	})
}

type DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue struct {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
	DateValue *string `pulumi:"dateValue"`
	// A long integer value.
	LongValue *int `pulumi:"longValue"`
	// A list of strings.
	StringListValues []string `pulumi:"stringListValues"`
	StringValue      *string  `pulumi:"stringValue"`
}

type DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueArgs struct {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
	DateValue pulumix.Input[*string] `pulumi:"dateValue"`
	// A long integer value.
	LongValue pulumix.Input[*int] `pulumi:"longValue"`
	// A list of strings.
	StringListValues pulumix.Input[[]string] `pulumi:"stringListValues"`
	StringValue      pulumix.Input[*string]  `pulumi:"stringValue"`
}

func (DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue)(nil)).Elem()
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput() DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput {
	return i.ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutputWithContext(context.Background())
}

func (i DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueArgs) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput)
}

func (i *DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueArgs) ToOutput(ctx context.Context) pulumix.Output[*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueArgs] {
	return pulumix.Val(i)
}

type DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput struct{ *pulumi.OutputState }

func (DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue)(nil)).Elem()
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput() DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput) ToDataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutputWithContext(ctx context.Context) DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput {
	return o
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput) ToOutput(ctx context.Context) pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue] {
	return pulumix.Output[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue]{
		OutputState: o.OutputState,
	}
}

// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, `2012-03-25T12:30:10+00:00`.
func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput) DateValue() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue) *string {
		return v.DateValue
	})
}

// A long integer value.
func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput) LongValue() pulumix.Output[*int] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue) *int {
		return v.LongValue
	})
}

// A list of strings.
func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput) StringListValues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue) []string {
		return v.StringListValues
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput) StringValue() pulumix.Output[*string] {
	return pulumix.Apply[DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue](o, func(v DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValue) *string {
		return v.StringValue
	})
}

type ExperienceConfiguration struct {
	// The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the `BatchPutDocument API`. The provider will only perform drift detection of its value when present in a configuration. Detailed below.
	ContentSourceConfiguration *ExperienceConfigurationContentSourceConfiguration `pulumi:"contentSourceConfiguration"`
	// The AWS SSO field name that contains the identifiers of your users, such as their emails. Detailed below.
	UserIdentityConfiguration *ExperienceConfigurationUserIdentityConfiguration `pulumi:"userIdentityConfiguration"`
}

type ExperienceConfigurationArgs struct {
	// The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the `BatchPutDocument API`. The provider will only perform drift detection of its value when present in a configuration. Detailed below.
	ContentSourceConfiguration pulumix.Input[*ExperienceConfigurationContentSourceConfigurationArgs] `pulumi:"contentSourceConfiguration"`
	// The AWS SSO field name that contains the identifiers of your users, such as their emails. Detailed below.
	UserIdentityConfiguration pulumix.Input[*ExperienceConfigurationUserIdentityConfigurationArgs] `pulumi:"userIdentityConfiguration"`
}

func (ExperienceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperienceConfiguration)(nil)).Elem()
}

func (i ExperienceConfigurationArgs) ToExperienceConfigurationOutput() ExperienceConfigurationOutput {
	return i.ToExperienceConfigurationOutputWithContext(context.Background())
}

func (i ExperienceConfigurationArgs) ToExperienceConfigurationOutputWithContext(ctx context.Context) ExperienceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperienceConfigurationOutput)
}

func (i *ExperienceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ExperienceConfigurationArgs] {
	return pulumix.Val(i)
}

type ExperienceConfigurationOutput struct{ *pulumi.OutputState }

func (ExperienceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperienceConfiguration)(nil)).Elem()
}

func (o ExperienceConfigurationOutput) ToExperienceConfigurationOutput() ExperienceConfigurationOutput {
	return o
}

func (o ExperienceConfigurationOutput) ToExperienceConfigurationOutputWithContext(ctx context.Context) ExperienceConfigurationOutput {
	return o
}

func (o ExperienceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ExperienceConfiguration] {
	return pulumix.Output[ExperienceConfiguration]{
		OutputState: o.OutputState,
	}
}

// The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the `BatchPutDocument API`. The provider will only perform drift detection of its value when present in a configuration. Detailed below.
func (o ExperienceConfigurationOutput) ContentSourceConfiguration() pulumix.GPtrOutput[ExperienceConfigurationContentSourceConfiguration, ExperienceConfigurationContentSourceConfigurationOutput] {
	value := pulumix.Apply[ExperienceConfiguration](o, func(v ExperienceConfiguration) *ExperienceConfigurationContentSourceConfiguration {
		return v.ContentSourceConfiguration
	})
	return pulumix.GPtrOutput[ExperienceConfigurationContentSourceConfiguration, ExperienceConfigurationContentSourceConfigurationOutput]{OutputState: value.OutputState}
}

// The AWS SSO field name that contains the identifiers of your users, such as their emails. Detailed below.
func (o ExperienceConfigurationOutput) UserIdentityConfiguration() pulumix.GPtrOutput[ExperienceConfigurationUserIdentityConfiguration, ExperienceConfigurationUserIdentityConfigurationOutput] {
	value := pulumix.Apply[ExperienceConfiguration](o, func(v ExperienceConfiguration) *ExperienceConfigurationUserIdentityConfiguration {
		return v.UserIdentityConfiguration
	})
	return pulumix.GPtrOutput[ExperienceConfigurationUserIdentityConfiguration, ExperienceConfigurationUserIdentityConfigurationOutput]{OutputState: value.OutputState}
}

type ExperienceConfigurationContentSourceConfiguration struct {
	// The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	DataSourceIds []string `pulumi:"dataSourceIds"`
	// Whether to use documents you indexed directly using the `BatchPutDocument API`. Defaults to `false`.
	DirectPutContent *bool `pulumi:"directPutContent"`
	// The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	FaqIds []string `pulumi:"faqIds"`
}

type ExperienceConfigurationContentSourceConfigurationArgs struct {
	// The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	DataSourceIds pulumix.Input[[]string] `pulumi:"dataSourceIds"`
	// Whether to use documents you indexed directly using the `BatchPutDocument API`. Defaults to `false`.
	DirectPutContent pulumix.Input[*bool] `pulumi:"directPutContent"`
	// The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.
	FaqIds pulumix.Input[[]string] `pulumi:"faqIds"`
}

func (ExperienceConfigurationContentSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperienceConfigurationContentSourceConfiguration)(nil)).Elem()
}

func (i ExperienceConfigurationContentSourceConfigurationArgs) ToExperienceConfigurationContentSourceConfigurationOutput() ExperienceConfigurationContentSourceConfigurationOutput {
	return i.ToExperienceConfigurationContentSourceConfigurationOutputWithContext(context.Background())
}

func (i ExperienceConfigurationContentSourceConfigurationArgs) ToExperienceConfigurationContentSourceConfigurationOutputWithContext(ctx context.Context) ExperienceConfigurationContentSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperienceConfigurationContentSourceConfigurationOutput)
}

func (i *ExperienceConfigurationContentSourceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ExperienceConfigurationContentSourceConfigurationArgs] {
	return pulumix.Val(i)
}

type ExperienceConfigurationContentSourceConfigurationOutput struct{ *pulumi.OutputState }

func (ExperienceConfigurationContentSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperienceConfigurationContentSourceConfiguration)(nil)).Elem()
}

func (o ExperienceConfigurationContentSourceConfigurationOutput) ToExperienceConfigurationContentSourceConfigurationOutput() ExperienceConfigurationContentSourceConfigurationOutput {
	return o
}

func (o ExperienceConfigurationContentSourceConfigurationOutput) ToExperienceConfigurationContentSourceConfigurationOutputWithContext(ctx context.Context) ExperienceConfigurationContentSourceConfigurationOutput {
	return o
}

func (o ExperienceConfigurationContentSourceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ExperienceConfigurationContentSourceConfiguration] {
	return pulumix.Output[ExperienceConfigurationContentSourceConfiguration]{
		OutputState: o.OutputState,
	}
}

// The identifiers of the data sources you want to use for your Amazon Kendra experience. Maximum number of 100 items.
func (o ExperienceConfigurationContentSourceConfigurationOutput) DataSourceIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ExperienceConfigurationContentSourceConfiguration](o, func(v ExperienceConfigurationContentSourceConfiguration) []string { return v.DataSourceIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Whether to use documents you indexed directly using the `BatchPutDocument API`. Defaults to `false`.
func (o ExperienceConfigurationContentSourceConfigurationOutput) DirectPutContent() pulumix.Output[*bool] {
	return pulumix.Apply[ExperienceConfigurationContentSourceConfiguration](o, func(v ExperienceConfigurationContentSourceConfiguration) *bool { return v.DirectPutContent })
}

// The identifier of the FAQs that you want to use for your Amazon Kendra experience. Maximum number of 100 items.
func (o ExperienceConfigurationContentSourceConfigurationOutput) FaqIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ExperienceConfigurationContentSourceConfiguration](o, func(v ExperienceConfigurationContentSourceConfiguration) []string { return v.FaqIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ExperienceConfigurationUserIdentityConfiguration struct {
	// The AWS SSO field name that contains the identifiers of your users, such as their emails.
	IdentityAttributeName string `pulumi:"identityAttributeName"`
}

type ExperienceConfigurationUserIdentityConfigurationArgs struct {
	// The AWS SSO field name that contains the identifiers of your users, such as their emails.
	IdentityAttributeName pulumix.Input[string] `pulumi:"identityAttributeName"`
}

func (ExperienceConfigurationUserIdentityConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperienceConfigurationUserIdentityConfiguration)(nil)).Elem()
}

func (i ExperienceConfigurationUserIdentityConfigurationArgs) ToExperienceConfigurationUserIdentityConfigurationOutput() ExperienceConfigurationUserIdentityConfigurationOutput {
	return i.ToExperienceConfigurationUserIdentityConfigurationOutputWithContext(context.Background())
}

func (i ExperienceConfigurationUserIdentityConfigurationArgs) ToExperienceConfigurationUserIdentityConfigurationOutputWithContext(ctx context.Context) ExperienceConfigurationUserIdentityConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperienceConfigurationUserIdentityConfigurationOutput)
}

func (i *ExperienceConfigurationUserIdentityConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ExperienceConfigurationUserIdentityConfigurationArgs] {
	return pulumix.Val(i)
}

type ExperienceConfigurationUserIdentityConfigurationOutput struct{ *pulumi.OutputState }

func (ExperienceConfigurationUserIdentityConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperienceConfigurationUserIdentityConfiguration)(nil)).Elem()
}

func (o ExperienceConfigurationUserIdentityConfigurationOutput) ToExperienceConfigurationUserIdentityConfigurationOutput() ExperienceConfigurationUserIdentityConfigurationOutput {
	return o
}

func (o ExperienceConfigurationUserIdentityConfigurationOutput) ToExperienceConfigurationUserIdentityConfigurationOutputWithContext(ctx context.Context) ExperienceConfigurationUserIdentityConfigurationOutput {
	return o
}

func (o ExperienceConfigurationUserIdentityConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ExperienceConfigurationUserIdentityConfiguration] {
	return pulumix.Output[ExperienceConfigurationUserIdentityConfiguration]{
		OutputState: o.OutputState,
	}
}

// The AWS SSO field name that contains the identifiers of your users, such as their emails.
func (o ExperienceConfigurationUserIdentityConfigurationOutput) IdentityAttributeName() pulumix.Output[string] {
	return pulumix.Apply[ExperienceConfigurationUserIdentityConfiguration](o, func(v ExperienceConfigurationUserIdentityConfiguration) string { return v.IdentityAttributeName })
}

type ExperienceEndpoint struct {
	// The endpoint of your Amazon Kendra experience.
	Endpoint *string `pulumi:"endpoint"`
	// The type of endpoint for your Amazon Kendra experience.
	EndpointType *string `pulumi:"endpointType"`
}

type ExperienceEndpointArgs struct {
	// The endpoint of your Amazon Kendra experience.
	Endpoint pulumix.Input[*string] `pulumi:"endpoint"`
	// The type of endpoint for your Amazon Kendra experience.
	EndpointType pulumix.Input[*string] `pulumi:"endpointType"`
}

func (ExperienceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperienceEndpoint)(nil)).Elem()
}

func (i ExperienceEndpointArgs) ToExperienceEndpointOutput() ExperienceEndpointOutput {
	return i.ToExperienceEndpointOutputWithContext(context.Background())
}

func (i ExperienceEndpointArgs) ToExperienceEndpointOutputWithContext(ctx context.Context) ExperienceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperienceEndpointOutput)
}

func (i *ExperienceEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[*ExperienceEndpointArgs] {
	return pulumix.Val(i)
}

type ExperienceEndpointOutput struct{ *pulumi.OutputState }

func (ExperienceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperienceEndpoint)(nil)).Elem()
}

func (o ExperienceEndpointOutput) ToExperienceEndpointOutput() ExperienceEndpointOutput {
	return o
}

func (o ExperienceEndpointOutput) ToExperienceEndpointOutputWithContext(ctx context.Context) ExperienceEndpointOutput {
	return o
}

func (o ExperienceEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[ExperienceEndpoint] {
	return pulumix.Output[ExperienceEndpoint]{
		OutputState: o.OutputState,
	}
}

// The endpoint of your Amazon Kendra experience.
func (o ExperienceEndpointOutput) Endpoint() pulumix.Output[*string] {
	return pulumix.Apply[ExperienceEndpoint](o, func(v ExperienceEndpoint) *string { return v.Endpoint })
}

// The type of endpoint for your Amazon Kendra experience.
func (o ExperienceEndpointOutput) EndpointType() pulumix.Output[*string] {
	return pulumix.Apply[ExperienceEndpoint](o, func(v ExperienceEndpoint) *string { return v.EndpointType })
}

type FaqS3Path struct {
	// The name of the S3 bucket that contains the file.
	Bucket string `pulumi:"bucket"`
	// The name of the file.
	//
	// The following arguments are optional:
	Key string `pulumi:"key"`
}

type FaqS3PathArgs struct {
	// The name of the S3 bucket that contains the file.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// The name of the file.
	//
	// The following arguments are optional:
	Key pulumix.Input[string] `pulumi:"key"`
}

func (FaqS3PathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FaqS3Path)(nil)).Elem()
}

func (i FaqS3PathArgs) ToFaqS3PathOutput() FaqS3PathOutput {
	return i.ToFaqS3PathOutputWithContext(context.Background())
}

func (i FaqS3PathArgs) ToFaqS3PathOutputWithContext(ctx context.Context) FaqS3PathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FaqS3PathOutput)
}

func (i *FaqS3PathArgs) ToOutput(ctx context.Context) pulumix.Output[*FaqS3PathArgs] {
	return pulumix.Val(i)
}

type FaqS3PathOutput struct{ *pulumi.OutputState }

func (FaqS3PathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FaqS3Path)(nil)).Elem()
}

func (o FaqS3PathOutput) ToFaqS3PathOutput() FaqS3PathOutput {
	return o
}

func (o FaqS3PathOutput) ToFaqS3PathOutputWithContext(ctx context.Context) FaqS3PathOutput {
	return o
}

func (o FaqS3PathOutput) ToOutput(ctx context.Context) pulumix.Output[FaqS3Path] {
	return pulumix.Output[FaqS3Path]{
		OutputState: o.OutputState,
	}
}

// The name of the S3 bucket that contains the file.
func (o FaqS3PathOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[FaqS3Path](o, func(v FaqS3Path) string { return v.Bucket })
}

// The name of the file.
//
// The following arguments are optional:
func (o FaqS3PathOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[FaqS3Path](o, func(v FaqS3Path) string { return v.Key })
}

type IndexCapacityUnits struct {
	// The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to [QueryCapacityUnits](https://docs.aws.amazon.com/kendra/latest/dg/API_CapacityUnitsConfiguration.html#Kendra-Type-CapacityUnitsConfiguration-QueryCapacityUnits).
	QueryCapacityUnits *int `pulumi:"queryCapacityUnits"`
	// The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
	StorageCapacityUnits *int `pulumi:"storageCapacityUnits"`
}

type IndexCapacityUnitsArgs struct {
	// The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to [QueryCapacityUnits](https://docs.aws.amazon.com/kendra/latest/dg/API_CapacityUnitsConfiguration.html#Kendra-Type-CapacityUnitsConfiguration-QueryCapacityUnits).
	QueryCapacityUnits pulumix.Input[*int] `pulumi:"queryCapacityUnits"`
	// The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
	StorageCapacityUnits pulumix.Input[*int] `pulumi:"storageCapacityUnits"`
}

func (IndexCapacityUnitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexCapacityUnits)(nil)).Elem()
}

func (i IndexCapacityUnitsArgs) ToIndexCapacityUnitsOutput() IndexCapacityUnitsOutput {
	return i.ToIndexCapacityUnitsOutputWithContext(context.Background())
}

func (i IndexCapacityUnitsArgs) ToIndexCapacityUnitsOutputWithContext(ctx context.Context) IndexCapacityUnitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexCapacityUnitsOutput)
}

func (i *IndexCapacityUnitsArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexCapacityUnitsArgs] {
	return pulumix.Val(i)
}

type IndexCapacityUnitsOutput struct{ *pulumi.OutputState }

func (IndexCapacityUnitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexCapacityUnits)(nil)).Elem()
}

func (o IndexCapacityUnitsOutput) ToIndexCapacityUnitsOutput() IndexCapacityUnitsOutput {
	return o
}

func (o IndexCapacityUnitsOutput) ToIndexCapacityUnitsOutputWithContext(ctx context.Context) IndexCapacityUnitsOutput {
	return o
}

func (o IndexCapacityUnitsOutput) ToOutput(ctx context.Context) pulumix.Output[IndexCapacityUnits] {
	return pulumix.Output[IndexCapacityUnits]{
		OutputState: o.OutputState,
	}
}

// The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to [QueryCapacityUnits](https://docs.aws.amazon.com/kendra/latest/dg/API_CapacityUnitsConfiguration.html#Kendra-Type-CapacityUnitsConfiguration-QueryCapacityUnits).
func (o IndexCapacityUnitsOutput) QueryCapacityUnits() pulumix.Output[*int] {
	return pulumix.Apply[IndexCapacityUnits](o, func(v IndexCapacityUnits) *int { return v.QueryCapacityUnits })
}

// The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
func (o IndexCapacityUnitsOutput) StorageCapacityUnits() pulumix.Output[*int] {
	return pulumix.Apply[IndexCapacityUnits](o, func(v IndexCapacityUnits) *int { return v.StorageCapacityUnits })
}

type IndexDocumentMetadataConfigurationUpdate struct {
	// The name of the index field. Minimum length of 1. Maximum length of 30.
	Name string `pulumi:"name"`
	// A block that provides manual tuning parameters to determine how the field affects the search results. Detailed below
	Relevance *IndexDocumentMetadataConfigurationUpdateRelevance `pulumi:"relevance"`
	// A block that provides information about how the field is used during a search. Documented below. Detailed below
	Search *IndexDocumentMetadataConfigurationUpdateSearch `pulumi:"search"`
	// The data type of the index field. Valid values are `STRING_VALUE`, `STRING_LIST_VALUE`, `LONG_VALUE`, `DATE_VALUE`.
	Type string `pulumi:"type"`
}

type IndexDocumentMetadataConfigurationUpdateArgs struct {
	// The name of the index field. Minimum length of 1. Maximum length of 30.
	Name pulumix.Input[string] `pulumi:"name"`
	// A block that provides manual tuning parameters to determine how the field affects the search results. Detailed below
	Relevance pulumix.Input[*IndexDocumentMetadataConfigurationUpdateRelevanceArgs] `pulumi:"relevance"`
	// A block that provides information about how the field is used during a search. Documented below. Detailed below
	Search pulumix.Input[*IndexDocumentMetadataConfigurationUpdateSearchArgs] `pulumi:"search"`
	// The data type of the index field. Valid values are `STRING_VALUE`, `STRING_LIST_VALUE`, `LONG_VALUE`, `DATE_VALUE`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (IndexDocumentMetadataConfigurationUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDocumentMetadataConfigurationUpdate)(nil)).Elem()
}

func (i IndexDocumentMetadataConfigurationUpdateArgs) ToIndexDocumentMetadataConfigurationUpdateOutput() IndexDocumentMetadataConfigurationUpdateOutput {
	return i.ToIndexDocumentMetadataConfigurationUpdateOutputWithContext(context.Background())
}

func (i IndexDocumentMetadataConfigurationUpdateArgs) ToIndexDocumentMetadataConfigurationUpdateOutputWithContext(ctx context.Context) IndexDocumentMetadataConfigurationUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexDocumentMetadataConfigurationUpdateOutput)
}

func (i *IndexDocumentMetadataConfigurationUpdateArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexDocumentMetadataConfigurationUpdateArgs] {
	return pulumix.Val(i)
}

type IndexDocumentMetadataConfigurationUpdateOutput struct{ *pulumi.OutputState }

func (IndexDocumentMetadataConfigurationUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDocumentMetadataConfigurationUpdate)(nil)).Elem()
}

func (o IndexDocumentMetadataConfigurationUpdateOutput) ToIndexDocumentMetadataConfigurationUpdateOutput() IndexDocumentMetadataConfigurationUpdateOutput {
	return o
}

func (o IndexDocumentMetadataConfigurationUpdateOutput) ToIndexDocumentMetadataConfigurationUpdateOutputWithContext(ctx context.Context) IndexDocumentMetadataConfigurationUpdateOutput {
	return o
}

func (o IndexDocumentMetadataConfigurationUpdateOutput) ToOutput(ctx context.Context) pulumix.Output[IndexDocumentMetadataConfigurationUpdate] {
	return pulumix.Output[IndexDocumentMetadataConfigurationUpdate]{
		OutputState: o.OutputState,
	}
}

// The name of the index field. Minimum length of 1. Maximum length of 30.
func (o IndexDocumentMetadataConfigurationUpdateOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdate](o, func(v IndexDocumentMetadataConfigurationUpdate) string { return v.Name })
}

// A block that provides manual tuning parameters to determine how the field affects the search results. Detailed below
func (o IndexDocumentMetadataConfigurationUpdateOutput) Relevance() pulumix.GPtrOutput[IndexDocumentMetadataConfigurationUpdateRelevance, IndexDocumentMetadataConfigurationUpdateRelevanceOutput] {
	value := pulumix.Apply[IndexDocumentMetadataConfigurationUpdate](o, func(v IndexDocumentMetadataConfigurationUpdate) *IndexDocumentMetadataConfigurationUpdateRelevance {
		return v.Relevance
	})
	return pulumix.GPtrOutput[IndexDocumentMetadataConfigurationUpdateRelevance, IndexDocumentMetadataConfigurationUpdateRelevanceOutput]{OutputState: value.OutputState}
}

// A block that provides information about how the field is used during a search. Documented below. Detailed below
func (o IndexDocumentMetadataConfigurationUpdateOutput) Search() pulumix.GPtrOutput[IndexDocumentMetadataConfigurationUpdateSearch, IndexDocumentMetadataConfigurationUpdateSearchOutput] {
	value := pulumix.Apply[IndexDocumentMetadataConfigurationUpdate](o, func(v IndexDocumentMetadataConfigurationUpdate) *IndexDocumentMetadataConfigurationUpdateSearch {
		return v.Search
	})
	return pulumix.GPtrOutput[IndexDocumentMetadataConfigurationUpdateSearch, IndexDocumentMetadataConfigurationUpdateSearchOutput]{OutputState: value.OutputState}
}

// The data type of the index field. Valid values are `STRING_VALUE`, `STRING_LIST_VALUE`, `LONG_VALUE`, `DATE_VALUE`.
func (o IndexDocumentMetadataConfigurationUpdateOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdate](o, func(v IndexDocumentMetadataConfigurationUpdate) string { return v.Type })
}

type IndexDocumentMetadataConfigurationUpdateRelevance struct {
	// Specifies the time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Duration).
	Duration *string `pulumi:"duration"`
	// Indicates that this field determines how "fresh" a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Freshness).
	Freshness *bool `pulumi:"freshness"`
	// The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
	Importance *int `pulumi:"importance"`
	// Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
	RankOrder *string `pulumi:"rankOrder"`
	// A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
	ValuesImportanceMap map[string]int `pulumi:"valuesImportanceMap"`
}

type IndexDocumentMetadataConfigurationUpdateRelevanceArgs struct {
	// Specifies the time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Duration).
	Duration pulumix.Input[*string] `pulumi:"duration"`
	// Indicates that this field determines how "fresh" a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Freshness).
	Freshness pulumix.Input[*bool] `pulumi:"freshness"`
	// The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
	Importance pulumix.Input[*int] `pulumi:"importance"`
	// Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
	RankOrder pulumix.Input[*string] `pulumi:"rankOrder"`
	// A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
	ValuesImportanceMap pulumix.Input[map[string]int] `pulumi:"valuesImportanceMap"`
}

func (IndexDocumentMetadataConfigurationUpdateRelevanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDocumentMetadataConfigurationUpdateRelevance)(nil)).Elem()
}

func (i IndexDocumentMetadataConfigurationUpdateRelevanceArgs) ToIndexDocumentMetadataConfigurationUpdateRelevanceOutput() IndexDocumentMetadataConfigurationUpdateRelevanceOutput {
	return i.ToIndexDocumentMetadataConfigurationUpdateRelevanceOutputWithContext(context.Background())
}

func (i IndexDocumentMetadataConfigurationUpdateRelevanceArgs) ToIndexDocumentMetadataConfigurationUpdateRelevanceOutputWithContext(ctx context.Context) IndexDocumentMetadataConfigurationUpdateRelevanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexDocumentMetadataConfigurationUpdateRelevanceOutput)
}

func (i *IndexDocumentMetadataConfigurationUpdateRelevanceArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexDocumentMetadataConfigurationUpdateRelevanceArgs] {
	return pulumix.Val(i)
}

type IndexDocumentMetadataConfigurationUpdateRelevanceOutput struct{ *pulumi.OutputState }

func (IndexDocumentMetadataConfigurationUpdateRelevanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDocumentMetadataConfigurationUpdateRelevance)(nil)).Elem()
}

func (o IndexDocumentMetadataConfigurationUpdateRelevanceOutput) ToIndexDocumentMetadataConfigurationUpdateRelevanceOutput() IndexDocumentMetadataConfigurationUpdateRelevanceOutput {
	return o
}

func (o IndexDocumentMetadataConfigurationUpdateRelevanceOutput) ToIndexDocumentMetadataConfigurationUpdateRelevanceOutputWithContext(ctx context.Context) IndexDocumentMetadataConfigurationUpdateRelevanceOutput {
	return o
}

func (o IndexDocumentMetadataConfigurationUpdateRelevanceOutput) ToOutput(ctx context.Context) pulumix.Output[IndexDocumentMetadataConfigurationUpdateRelevance] {
	return pulumix.Output[IndexDocumentMetadataConfigurationUpdateRelevance]{
		OutputState: o.OutputState,
	}
}

// Specifies the time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Duration).
func (o IndexDocumentMetadataConfigurationUpdateRelevanceOutput) Duration() pulumix.Output[*string] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdateRelevance](o, func(v IndexDocumentMetadataConfigurationUpdateRelevance) *string { return v.Duration })
}

// Indicates that this field determines how "fresh" a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-Freshness).
func (o IndexDocumentMetadataConfigurationUpdateRelevanceOutput) Freshness() pulumix.Output[*bool] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdateRelevance](o, func(v IndexDocumentMetadataConfigurationUpdateRelevance) *bool { return v.Freshness })
}

// The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
func (o IndexDocumentMetadataConfigurationUpdateRelevanceOutput) Importance() pulumix.Output[*int] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdateRelevance](o, func(v IndexDocumentMetadataConfigurationUpdateRelevance) *int { return v.Importance })
}

// Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
func (o IndexDocumentMetadataConfigurationUpdateRelevanceOutput) RankOrder() pulumix.Output[*string] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdateRelevance](o, func(v IndexDocumentMetadataConfigurationUpdateRelevance) *string { return v.RankOrder })
}

// A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/dg/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
func (o IndexDocumentMetadataConfigurationUpdateRelevanceOutput) ValuesImportanceMap() pulumix.MapOutput[int] {
	value := pulumix.Apply[IndexDocumentMetadataConfigurationUpdateRelevance](o, func(v IndexDocumentMetadataConfigurationUpdateRelevance) map[string]int { return v.ValuesImportanceMap })
	return pulumix.MapOutput[int]{OutputState: value.OutputState}
}

type IndexDocumentMetadataConfigurationUpdateSearch struct {
	// Determines whether the field is returned in the query response. The default is `true`.
	Displayable *bool `pulumi:"displayable"`
	// Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is `false`.
	Facetable *bool `pulumi:"facetable"`
	// Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.
	Searchable *bool `pulumi:"searchable"`
	// Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.
	Sortable *bool `pulumi:"sortable"`
}

type IndexDocumentMetadataConfigurationUpdateSearchArgs struct {
	// Determines whether the field is returned in the query response. The default is `true`.
	Displayable pulumix.Input[*bool] `pulumi:"displayable"`
	// Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is `false`.
	Facetable pulumix.Input[*bool] `pulumi:"facetable"`
	// Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.
	Searchable pulumix.Input[*bool] `pulumi:"searchable"`
	// Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.
	Sortable pulumix.Input[*bool] `pulumi:"sortable"`
}

func (IndexDocumentMetadataConfigurationUpdateSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDocumentMetadataConfigurationUpdateSearch)(nil)).Elem()
}

func (i IndexDocumentMetadataConfigurationUpdateSearchArgs) ToIndexDocumentMetadataConfigurationUpdateSearchOutput() IndexDocumentMetadataConfigurationUpdateSearchOutput {
	return i.ToIndexDocumentMetadataConfigurationUpdateSearchOutputWithContext(context.Background())
}

func (i IndexDocumentMetadataConfigurationUpdateSearchArgs) ToIndexDocumentMetadataConfigurationUpdateSearchOutputWithContext(ctx context.Context) IndexDocumentMetadataConfigurationUpdateSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexDocumentMetadataConfigurationUpdateSearchOutput)
}

func (i *IndexDocumentMetadataConfigurationUpdateSearchArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexDocumentMetadataConfigurationUpdateSearchArgs] {
	return pulumix.Val(i)
}

type IndexDocumentMetadataConfigurationUpdateSearchOutput struct{ *pulumi.OutputState }

func (IndexDocumentMetadataConfigurationUpdateSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDocumentMetadataConfigurationUpdateSearch)(nil)).Elem()
}

func (o IndexDocumentMetadataConfigurationUpdateSearchOutput) ToIndexDocumentMetadataConfigurationUpdateSearchOutput() IndexDocumentMetadataConfigurationUpdateSearchOutput {
	return o
}

func (o IndexDocumentMetadataConfigurationUpdateSearchOutput) ToIndexDocumentMetadataConfigurationUpdateSearchOutputWithContext(ctx context.Context) IndexDocumentMetadataConfigurationUpdateSearchOutput {
	return o
}

func (o IndexDocumentMetadataConfigurationUpdateSearchOutput) ToOutput(ctx context.Context) pulumix.Output[IndexDocumentMetadataConfigurationUpdateSearch] {
	return pulumix.Output[IndexDocumentMetadataConfigurationUpdateSearch]{
		OutputState: o.OutputState,
	}
}

// Determines whether the field is returned in the query response. The default is `true`.
func (o IndexDocumentMetadataConfigurationUpdateSearchOutput) Displayable() pulumix.Output[*bool] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdateSearch](o, func(v IndexDocumentMetadataConfigurationUpdateSearch) *bool { return v.Displayable })
}

// Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is `false`.
func (o IndexDocumentMetadataConfigurationUpdateSearchOutput) Facetable() pulumix.Output[*bool] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdateSearch](o, func(v IndexDocumentMetadataConfigurationUpdateSearch) *bool { return v.Facetable })
}

// Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.
func (o IndexDocumentMetadataConfigurationUpdateSearchOutput) Searchable() pulumix.Output[*bool] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdateSearch](o, func(v IndexDocumentMetadataConfigurationUpdateSearch) *bool { return v.Searchable })
}

// Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.
func (o IndexDocumentMetadataConfigurationUpdateSearchOutput) Sortable() pulumix.Output[*bool] {
	return pulumix.Apply[IndexDocumentMetadataConfigurationUpdateSearch](o, func(v IndexDocumentMetadataConfigurationUpdateSearch) *bool { return v.Sortable })
}

type IndexIndexStatistic struct {
	// A block that specifies the number of question and answer topics in the index. Detailed below.
	FaqStatistics []IndexIndexStatisticFaqStatistic `pulumi:"faqStatistics"`
	// A block that specifies the number of text documents indexed. Detailed below.
	TextDocumentStatistics []IndexIndexStatisticTextDocumentStatistic `pulumi:"textDocumentStatistics"`
}

type IndexIndexStatisticArgs struct {
	// A block that specifies the number of question and answer topics in the index. Detailed below.
	FaqStatistics pulumix.Input[[]*IndexIndexStatisticFaqStatisticArgs] `pulumi:"faqStatistics"`
	// A block that specifies the number of text documents indexed. Detailed below.
	TextDocumentStatistics pulumix.Input[[]*IndexIndexStatisticTextDocumentStatisticArgs] `pulumi:"textDocumentStatistics"`
}

func (IndexIndexStatisticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexIndexStatistic)(nil)).Elem()
}

func (i IndexIndexStatisticArgs) ToIndexIndexStatisticOutput() IndexIndexStatisticOutput {
	return i.ToIndexIndexStatisticOutputWithContext(context.Background())
}

func (i IndexIndexStatisticArgs) ToIndexIndexStatisticOutputWithContext(ctx context.Context) IndexIndexStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexIndexStatisticOutput)
}

func (i *IndexIndexStatisticArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexIndexStatisticArgs] {
	return pulumix.Val(i)
}

type IndexIndexStatisticOutput struct{ *pulumi.OutputState }

func (IndexIndexStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexIndexStatistic)(nil)).Elem()
}

func (o IndexIndexStatisticOutput) ToIndexIndexStatisticOutput() IndexIndexStatisticOutput {
	return o
}

func (o IndexIndexStatisticOutput) ToIndexIndexStatisticOutputWithContext(ctx context.Context) IndexIndexStatisticOutput {
	return o
}

func (o IndexIndexStatisticOutput) ToOutput(ctx context.Context) pulumix.Output[IndexIndexStatistic] {
	return pulumix.Output[IndexIndexStatistic]{
		OutputState: o.OutputState,
	}
}

// A block that specifies the number of question and answer topics in the index. Detailed below.
func (o IndexIndexStatisticOutput) FaqStatistics() pulumix.GArrayOutput[IndexIndexStatisticFaqStatistic, IndexIndexStatisticFaqStatisticOutput] {
	value := pulumix.Apply[IndexIndexStatistic](o, func(v IndexIndexStatistic) []IndexIndexStatisticFaqStatistic { return v.FaqStatistics })
	return pulumix.GArrayOutput[IndexIndexStatisticFaqStatistic, IndexIndexStatisticFaqStatisticOutput]{OutputState: value.OutputState}
}

// A block that specifies the number of text documents indexed. Detailed below.
func (o IndexIndexStatisticOutput) TextDocumentStatistics() pulumix.GArrayOutput[IndexIndexStatisticTextDocumentStatistic, IndexIndexStatisticTextDocumentStatisticOutput] {
	value := pulumix.Apply[IndexIndexStatistic](o, func(v IndexIndexStatistic) []IndexIndexStatisticTextDocumentStatistic {
		return v.TextDocumentStatistics
	})
	return pulumix.GArrayOutput[IndexIndexStatisticTextDocumentStatistic, IndexIndexStatisticTextDocumentStatisticOutput]{OutputState: value.OutputState}
}

type IndexIndexStatisticFaqStatistic struct {
	// The total number of FAQ questions and answers contained in the index.
	IndexedQuestionAnswersCount *int `pulumi:"indexedQuestionAnswersCount"`
}

type IndexIndexStatisticFaqStatisticArgs struct {
	// The total number of FAQ questions and answers contained in the index.
	IndexedQuestionAnswersCount pulumix.Input[*int] `pulumi:"indexedQuestionAnswersCount"`
}

func (IndexIndexStatisticFaqStatisticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexIndexStatisticFaqStatistic)(nil)).Elem()
}

func (i IndexIndexStatisticFaqStatisticArgs) ToIndexIndexStatisticFaqStatisticOutput() IndexIndexStatisticFaqStatisticOutput {
	return i.ToIndexIndexStatisticFaqStatisticOutputWithContext(context.Background())
}

func (i IndexIndexStatisticFaqStatisticArgs) ToIndexIndexStatisticFaqStatisticOutputWithContext(ctx context.Context) IndexIndexStatisticFaqStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexIndexStatisticFaqStatisticOutput)
}

func (i *IndexIndexStatisticFaqStatisticArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexIndexStatisticFaqStatisticArgs] {
	return pulumix.Val(i)
}

type IndexIndexStatisticFaqStatisticOutput struct{ *pulumi.OutputState }

func (IndexIndexStatisticFaqStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexIndexStatisticFaqStatistic)(nil)).Elem()
}

func (o IndexIndexStatisticFaqStatisticOutput) ToIndexIndexStatisticFaqStatisticOutput() IndexIndexStatisticFaqStatisticOutput {
	return o
}

func (o IndexIndexStatisticFaqStatisticOutput) ToIndexIndexStatisticFaqStatisticOutputWithContext(ctx context.Context) IndexIndexStatisticFaqStatisticOutput {
	return o
}

func (o IndexIndexStatisticFaqStatisticOutput) ToOutput(ctx context.Context) pulumix.Output[IndexIndexStatisticFaqStatistic] {
	return pulumix.Output[IndexIndexStatisticFaqStatistic]{
		OutputState: o.OutputState,
	}
}

// The total number of FAQ questions and answers contained in the index.
func (o IndexIndexStatisticFaqStatisticOutput) IndexedQuestionAnswersCount() pulumix.Output[*int] {
	return pulumix.Apply[IndexIndexStatisticFaqStatistic](o, func(v IndexIndexStatisticFaqStatistic) *int { return v.IndexedQuestionAnswersCount })
}

type IndexIndexStatisticTextDocumentStatistic struct {
	// The total size, in bytes, of the indexed documents.
	IndexedTextBytes *int `pulumi:"indexedTextBytes"`
	// The number of text documents indexed.
	IndexedTextDocumentsCount *int `pulumi:"indexedTextDocumentsCount"`
}

type IndexIndexStatisticTextDocumentStatisticArgs struct {
	// The total size, in bytes, of the indexed documents.
	IndexedTextBytes pulumix.Input[*int] `pulumi:"indexedTextBytes"`
	// The number of text documents indexed.
	IndexedTextDocumentsCount pulumix.Input[*int] `pulumi:"indexedTextDocumentsCount"`
}

func (IndexIndexStatisticTextDocumentStatisticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexIndexStatisticTextDocumentStatistic)(nil)).Elem()
}

func (i IndexIndexStatisticTextDocumentStatisticArgs) ToIndexIndexStatisticTextDocumentStatisticOutput() IndexIndexStatisticTextDocumentStatisticOutput {
	return i.ToIndexIndexStatisticTextDocumentStatisticOutputWithContext(context.Background())
}

func (i IndexIndexStatisticTextDocumentStatisticArgs) ToIndexIndexStatisticTextDocumentStatisticOutputWithContext(ctx context.Context) IndexIndexStatisticTextDocumentStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexIndexStatisticTextDocumentStatisticOutput)
}

func (i *IndexIndexStatisticTextDocumentStatisticArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexIndexStatisticTextDocumentStatisticArgs] {
	return pulumix.Val(i)
}

type IndexIndexStatisticTextDocumentStatisticOutput struct{ *pulumi.OutputState }

func (IndexIndexStatisticTextDocumentStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexIndexStatisticTextDocumentStatistic)(nil)).Elem()
}

func (o IndexIndexStatisticTextDocumentStatisticOutput) ToIndexIndexStatisticTextDocumentStatisticOutput() IndexIndexStatisticTextDocumentStatisticOutput {
	return o
}

func (o IndexIndexStatisticTextDocumentStatisticOutput) ToIndexIndexStatisticTextDocumentStatisticOutputWithContext(ctx context.Context) IndexIndexStatisticTextDocumentStatisticOutput {
	return o
}

func (o IndexIndexStatisticTextDocumentStatisticOutput) ToOutput(ctx context.Context) pulumix.Output[IndexIndexStatisticTextDocumentStatistic] {
	return pulumix.Output[IndexIndexStatisticTextDocumentStatistic]{
		OutputState: o.OutputState,
	}
}

// The total size, in bytes, of the indexed documents.
func (o IndexIndexStatisticTextDocumentStatisticOutput) IndexedTextBytes() pulumix.Output[*int] {
	return pulumix.Apply[IndexIndexStatisticTextDocumentStatistic](o, func(v IndexIndexStatisticTextDocumentStatistic) *int { return v.IndexedTextBytes })
}

// The number of text documents indexed.
func (o IndexIndexStatisticTextDocumentStatisticOutput) IndexedTextDocumentsCount() pulumix.Output[*int] {
	return pulumix.Apply[IndexIndexStatisticTextDocumentStatistic](o, func(v IndexIndexStatisticTextDocumentStatistic) *int { return v.IndexedTextDocumentsCount })
}

type IndexServerSideEncryptionConfiguration struct {
	// The identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

type IndexServerSideEncryptionConfigurationArgs struct {
	// The identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
}

func (IndexServerSideEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i IndexServerSideEncryptionConfigurationArgs) ToIndexServerSideEncryptionConfigurationOutput() IndexServerSideEncryptionConfigurationOutput {
	return i.ToIndexServerSideEncryptionConfigurationOutputWithContext(context.Background())
}

func (i IndexServerSideEncryptionConfigurationArgs) ToIndexServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) IndexServerSideEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexServerSideEncryptionConfigurationOutput)
}

func (i *IndexServerSideEncryptionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexServerSideEncryptionConfigurationArgs] {
	return pulumix.Val(i)
}

type IndexServerSideEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (IndexServerSideEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o IndexServerSideEncryptionConfigurationOutput) ToIndexServerSideEncryptionConfigurationOutput() IndexServerSideEncryptionConfigurationOutput {
	return o
}

func (o IndexServerSideEncryptionConfigurationOutput) ToIndexServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) IndexServerSideEncryptionConfigurationOutput {
	return o
}

func (o IndexServerSideEncryptionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[IndexServerSideEncryptionConfiguration] {
	return pulumix.Output[IndexServerSideEncryptionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
func (o IndexServerSideEncryptionConfigurationOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[IndexServerSideEncryptionConfiguration](o, func(v IndexServerSideEncryptionConfiguration) *string { return v.KmsKeyId })
}

type IndexUserGroupResolutionConfiguration struct {
	// The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
	UserGroupResolutionMode string `pulumi:"userGroupResolutionMode"`
}

type IndexUserGroupResolutionConfigurationArgs struct {
	// The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
	UserGroupResolutionMode pulumix.Input[string] `pulumi:"userGroupResolutionMode"`
}

func (IndexUserGroupResolutionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserGroupResolutionConfiguration)(nil)).Elem()
}

func (i IndexUserGroupResolutionConfigurationArgs) ToIndexUserGroupResolutionConfigurationOutput() IndexUserGroupResolutionConfigurationOutput {
	return i.ToIndexUserGroupResolutionConfigurationOutputWithContext(context.Background())
}

func (i IndexUserGroupResolutionConfigurationArgs) ToIndexUserGroupResolutionConfigurationOutputWithContext(ctx context.Context) IndexUserGroupResolutionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexUserGroupResolutionConfigurationOutput)
}

func (i *IndexUserGroupResolutionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexUserGroupResolutionConfigurationArgs] {
	return pulumix.Val(i)
}

type IndexUserGroupResolutionConfigurationOutput struct{ *pulumi.OutputState }

func (IndexUserGroupResolutionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserGroupResolutionConfiguration)(nil)).Elem()
}

func (o IndexUserGroupResolutionConfigurationOutput) ToIndexUserGroupResolutionConfigurationOutput() IndexUserGroupResolutionConfigurationOutput {
	return o
}

func (o IndexUserGroupResolutionConfigurationOutput) ToIndexUserGroupResolutionConfigurationOutputWithContext(ctx context.Context) IndexUserGroupResolutionConfigurationOutput {
	return o
}

func (o IndexUserGroupResolutionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[IndexUserGroupResolutionConfiguration] {
	return pulumix.Output[IndexUserGroupResolutionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
func (o IndexUserGroupResolutionConfigurationOutput) UserGroupResolutionMode() pulumix.Output[string] {
	return pulumix.Apply[IndexUserGroupResolutionConfiguration](o, func(v IndexUserGroupResolutionConfiguration) string { return v.UserGroupResolutionMode })
}

type IndexUserTokenConfigurations struct {
	// A block that specifies the information about the JSON token type configuration. Detailed below.
	JsonTokenTypeConfiguration *IndexUserTokenConfigurationsJsonTokenTypeConfiguration `pulumi:"jsonTokenTypeConfiguration"`
	// A block that specifies the information about the JWT token type configuration. Detailed below.
	JwtTokenTypeConfiguration *IndexUserTokenConfigurationsJwtTokenTypeConfiguration `pulumi:"jwtTokenTypeConfiguration"`
}

type IndexUserTokenConfigurationsArgs struct {
	// A block that specifies the information about the JSON token type configuration. Detailed below.
	JsonTokenTypeConfiguration pulumix.Input[*IndexUserTokenConfigurationsJsonTokenTypeConfigurationArgs] `pulumi:"jsonTokenTypeConfiguration"`
	// A block that specifies the information about the JWT token type configuration. Detailed below.
	JwtTokenTypeConfiguration pulumix.Input[*IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs] `pulumi:"jwtTokenTypeConfiguration"`
}

func (IndexUserTokenConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserTokenConfigurations)(nil)).Elem()
}

func (i IndexUserTokenConfigurationsArgs) ToIndexUserTokenConfigurationsOutput() IndexUserTokenConfigurationsOutput {
	return i.ToIndexUserTokenConfigurationsOutputWithContext(context.Background())
}

func (i IndexUserTokenConfigurationsArgs) ToIndexUserTokenConfigurationsOutputWithContext(ctx context.Context) IndexUserTokenConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexUserTokenConfigurationsOutput)
}

func (i *IndexUserTokenConfigurationsArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexUserTokenConfigurationsArgs] {
	return pulumix.Val(i)
}

type IndexUserTokenConfigurationsOutput struct{ *pulumi.OutputState }

func (IndexUserTokenConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserTokenConfigurations)(nil)).Elem()
}

func (o IndexUserTokenConfigurationsOutput) ToIndexUserTokenConfigurationsOutput() IndexUserTokenConfigurationsOutput {
	return o
}

func (o IndexUserTokenConfigurationsOutput) ToIndexUserTokenConfigurationsOutputWithContext(ctx context.Context) IndexUserTokenConfigurationsOutput {
	return o
}

func (o IndexUserTokenConfigurationsOutput) ToOutput(ctx context.Context) pulumix.Output[IndexUserTokenConfigurations] {
	return pulumix.Output[IndexUserTokenConfigurations]{
		OutputState: o.OutputState,
	}
}

// A block that specifies the information about the JSON token type configuration. Detailed below.
func (o IndexUserTokenConfigurationsOutput) JsonTokenTypeConfiguration() pulumix.GPtrOutput[IndexUserTokenConfigurationsJsonTokenTypeConfiguration, IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput] {
	value := pulumix.Apply[IndexUserTokenConfigurations](o, func(v IndexUserTokenConfigurations) *IndexUserTokenConfigurationsJsonTokenTypeConfiguration {
		return v.JsonTokenTypeConfiguration
	})
	return pulumix.GPtrOutput[IndexUserTokenConfigurationsJsonTokenTypeConfiguration, IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput]{OutputState: value.OutputState}
}

// A block that specifies the information about the JWT token type configuration. Detailed below.
func (o IndexUserTokenConfigurationsOutput) JwtTokenTypeConfiguration() pulumix.GPtrOutput[IndexUserTokenConfigurationsJwtTokenTypeConfiguration, IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput] {
	value := pulumix.Apply[IndexUserTokenConfigurations](o, func(v IndexUserTokenConfigurations) *IndexUserTokenConfigurationsJwtTokenTypeConfiguration {
		return v.JwtTokenTypeConfiguration
	})
	return pulumix.GPtrOutput[IndexUserTokenConfigurationsJwtTokenTypeConfiguration, IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput]{OutputState: value.OutputState}
}

type IndexUserTokenConfigurationsJsonTokenTypeConfiguration struct {
	// The group attribute field. Minimum length of 1. Maximum length of 2048.
	GroupAttributeField string `pulumi:"groupAttributeField"`
	// The user name attribute field. Minimum length of 1. Maximum length of 2048.
	UserNameAttributeField string `pulumi:"userNameAttributeField"`
}

type IndexUserTokenConfigurationsJsonTokenTypeConfigurationArgs struct {
	// The group attribute field. Minimum length of 1. Maximum length of 2048.
	GroupAttributeField pulumix.Input[string] `pulumi:"groupAttributeField"`
	// The user name attribute field. Minimum length of 1. Maximum length of 2048.
	UserNameAttributeField pulumix.Input[string] `pulumi:"userNameAttributeField"`
}

func (IndexUserTokenConfigurationsJsonTokenTypeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserTokenConfigurationsJsonTokenTypeConfiguration)(nil)).Elem()
}

func (i IndexUserTokenConfigurationsJsonTokenTypeConfigurationArgs) ToIndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput() IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput {
	return i.ToIndexUserTokenConfigurationsJsonTokenTypeConfigurationOutputWithContext(context.Background())
}

func (i IndexUserTokenConfigurationsJsonTokenTypeConfigurationArgs) ToIndexUserTokenConfigurationsJsonTokenTypeConfigurationOutputWithContext(ctx context.Context) IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput)
}

func (i *IndexUserTokenConfigurationsJsonTokenTypeConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexUserTokenConfigurationsJsonTokenTypeConfigurationArgs] {
	return pulumix.Val(i)
}

type IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput struct{ *pulumi.OutputState }

func (IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserTokenConfigurationsJsonTokenTypeConfiguration)(nil)).Elem()
}

func (o IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput) ToIndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput() IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput {
	return o
}

func (o IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput) ToIndexUserTokenConfigurationsJsonTokenTypeConfigurationOutputWithContext(ctx context.Context) IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput {
	return o
}

func (o IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[IndexUserTokenConfigurationsJsonTokenTypeConfiguration] {
	return pulumix.Output[IndexUserTokenConfigurationsJsonTokenTypeConfiguration]{
		OutputState: o.OutputState,
	}
}

// The group attribute field. Minimum length of 1. Maximum length of 2048.
func (o IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput) GroupAttributeField() pulumix.Output[string] {
	return pulumix.Apply[IndexUserTokenConfigurationsJsonTokenTypeConfiguration](o, func(v IndexUserTokenConfigurationsJsonTokenTypeConfiguration) string { return v.GroupAttributeField })
}

// The user name attribute field. Minimum length of 1. Maximum length of 2048.
func (o IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput) UserNameAttributeField() pulumix.Output[string] {
	return pulumix.Apply[IndexUserTokenConfigurationsJsonTokenTypeConfiguration](o, func(v IndexUserTokenConfigurationsJsonTokenTypeConfiguration) string { return v.UserNameAttributeField })
}

type IndexUserTokenConfigurationsJwtTokenTypeConfiguration struct {
	// The regular expression that identifies the claim. Minimum length of 1. Maximum length of 100.
	ClaimRegex *string `pulumi:"claimRegex"`
	// The group attribute field. Minimum length of 1. Maximum length of 100.
	GroupAttributeField *string `pulumi:"groupAttributeField"`
	// The issuer of the token. Minimum length of 1. Maximum length of 65.
	Issuer *string `pulumi:"issuer"`
	// The location of the key. Valid values are `URL` or `SECRET_MANAGER`
	KeyLocation string `pulumi:"keyLocation"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretsManagerArn *string `pulumi:"secretsManagerArn"`
	// The signing key URL. Valid pattern is `^(https?|ftp|file):\/\/([^\s]*)`
	Url *string `pulumi:"url"`
	// The user name attribute field. Minimum length of 1. Maximum length of 100.
	UserNameAttributeField *string `pulumi:"userNameAttributeField"`
}

type IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs struct {
	// The regular expression that identifies the claim. Minimum length of 1. Maximum length of 100.
	ClaimRegex pulumix.Input[*string] `pulumi:"claimRegex"`
	// The group attribute field. Minimum length of 1. Maximum length of 100.
	GroupAttributeField pulumix.Input[*string] `pulumi:"groupAttributeField"`
	// The issuer of the token. Minimum length of 1. Maximum length of 65.
	Issuer pulumix.Input[*string] `pulumi:"issuer"`
	// The location of the key. Valid values are `URL` or `SECRET_MANAGER`
	KeyLocation pulumix.Input[string] `pulumi:"keyLocation"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretsManagerArn pulumix.Input[*string] `pulumi:"secretsManagerArn"`
	// The signing key URL. Valid pattern is `^(https?|ftp|file):\/\/([^\s]*)`
	Url pulumix.Input[*string] `pulumi:"url"`
	// The user name attribute field. Minimum length of 1. Maximum length of 100.
	UserNameAttributeField pulumix.Input[*string] `pulumi:"userNameAttributeField"`
}

func (IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserTokenConfigurationsJwtTokenTypeConfiguration)(nil)).Elem()
}

func (i IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs) ToIndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput() IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput {
	return i.ToIndexUserTokenConfigurationsJwtTokenTypeConfigurationOutputWithContext(context.Background())
}

func (i IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs) ToIndexUserTokenConfigurationsJwtTokenTypeConfigurationOutputWithContext(ctx context.Context) IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput)
}

func (i *IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexUserTokenConfigurationsJwtTokenTypeConfigurationArgs] {
	return pulumix.Val(i)
}

type IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput struct{ *pulumi.OutputState }

func (IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserTokenConfigurationsJwtTokenTypeConfiguration)(nil)).Elem()
}

func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) ToIndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput() IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput {
	return o
}

func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) ToIndexUserTokenConfigurationsJwtTokenTypeConfigurationOutputWithContext(ctx context.Context) IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput {
	return o
}

func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[IndexUserTokenConfigurationsJwtTokenTypeConfiguration] {
	return pulumix.Output[IndexUserTokenConfigurationsJwtTokenTypeConfiguration]{
		OutputState: o.OutputState,
	}
}

// The regular expression that identifies the claim. Minimum length of 1. Maximum length of 100.
func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) ClaimRegex() pulumix.Output[*string] {
	return pulumix.Apply[IndexUserTokenConfigurationsJwtTokenTypeConfiguration](o, func(v IndexUserTokenConfigurationsJwtTokenTypeConfiguration) *string { return v.ClaimRegex })
}

// The group attribute field. Minimum length of 1. Maximum length of 100.
func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) GroupAttributeField() pulumix.Output[*string] {
	return pulumix.Apply[IndexUserTokenConfigurationsJwtTokenTypeConfiguration](o, func(v IndexUserTokenConfigurationsJwtTokenTypeConfiguration) *string { return v.GroupAttributeField })
}

// The issuer of the token. Minimum length of 1. Maximum length of 65.
func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) Issuer() pulumix.Output[*string] {
	return pulumix.Apply[IndexUserTokenConfigurationsJwtTokenTypeConfiguration](o, func(v IndexUserTokenConfigurationsJwtTokenTypeConfiguration) *string { return v.Issuer })
}

// The location of the key. Valid values are `URL` or `SECRET_MANAGER`
func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) KeyLocation() pulumix.Output[string] {
	return pulumix.Apply[IndexUserTokenConfigurationsJwtTokenTypeConfiguration](o, func(v IndexUserTokenConfigurationsJwtTokenTypeConfiguration) string { return v.KeyLocation })
}

// The Amazon Resource Name (ARN) of the secret.
func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) SecretsManagerArn() pulumix.Output[*string] {
	return pulumix.Apply[IndexUserTokenConfigurationsJwtTokenTypeConfiguration](o, func(v IndexUserTokenConfigurationsJwtTokenTypeConfiguration) *string { return v.SecretsManagerArn })
}

// The signing key URL. Valid pattern is `^(https?|ftp|file):\/\/([^\s]*)`
func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) Url() pulumix.Output[*string] {
	return pulumix.Apply[IndexUserTokenConfigurationsJwtTokenTypeConfiguration](o, func(v IndexUserTokenConfigurationsJwtTokenTypeConfiguration) *string { return v.Url })
}

// The user name attribute field. Minimum length of 1. Maximum length of 100.
func (o IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput) UserNameAttributeField() pulumix.Output[*string] {
	return pulumix.Apply[IndexUserTokenConfigurationsJwtTokenTypeConfiguration](o, func(v IndexUserTokenConfigurationsJwtTokenTypeConfiguration) *string { return v.UserNameAttributeField })
}

type QuerySuggestionsBlockListSourceS3Path struct {
	// Name of the S3 bucket that contains the file.
	Bucket string `pulumi:"bucket"`
	// Name of the file.
	//
	// The following arguments are optional:
	Key string `pulumi:"key"`
}

type QuerySuggestionsBlockListSourceS3PathArgs struct {
	// Name of the S3 bucket that contains the file.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// Name of the file.
	//
	// The following arguments are optional:
	Key pulumix.Input[string] `pulumi:"key"`
}

func (QuerySuggestionsBlockListSourceS3PathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuerySuggestionsBlockListSourceS3Path)(nil)).Elem()
}

func (i QuerySuggestionsBlockListSourceS3PathArgs) ToQuerySuggestionsBlockListSourceS3PathOutput() QuerySuggestionsBlockListSourceS3PathOutput {
	return i.ToQuerySuggestionsBlockListSourceS3PathOutputWithContext(context.Background())
}

func (i QuerySuggestionsBlockListSourceS3PathArgs) ToQuerySuggestionsBlockListSourceS3PathOutputWithContext(ctx context.Context) QuerySuggestionsBlockListSourceS3PathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuerySuggestionsBlockListSourceS3PathOutput)
}

func (i *QuerySuggestionsBlockListSourceS3PathArgs) ToOutput(ctx context.Context) pulumix.Output[*QuerySuggestionsBlockListSourceS3PathArgs] {
	return pulumix.Val(i)
}

type QuerySuggestionsBlockListSourceS3PathOutput struct{ *pulumi.OutputState }

func (QuerySuggestionsBlockListSourceS3PathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuerySuggestionsBlockListSourceS3Path)(nil)).Elem()
}

func (o QuerySuggestionsBlockListSourceS3PathOutput) ToQuerySuggestionsBlockListSourceS3PathOutput() QuerySuggestionsBlockListSourceS3PathOutput {
	return o
}

func (o QuerySuggestionsBlockListSourceS3PathOutput) ToQuerySuggestionsBlockListSourceS3PathOutputWithContext(ctx context.Context) QuerySuggestionsBlockListSourceS3PathOutput {
	return o
}

func (o QuerySuggestionsBlockListSourceS3PathOutput) ToOutput(ctx context.Context) pulumix.Output[QuerySuggestionsBlockListSourceS3Path] {
	return pulumix.Output[QuerySuggestionsBlockListSourceS3Path]{
		OutputState: o.OutputState,
	}
}

// Name of the S3 bucket that contains the file.
func (o QuerySuggestionsBlockListSourceS3PathOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[QuerySuggestionsBlockListSourceS3Path](o, func(v QuerySuggestionsBlockListSourceS3Path) string { return v.Bucket })
}

// Name of the file.
//
// The following arguments are optional:
func (o QuerySuggestionsBlockListSourceS3PathOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[QuerySuggestionsBlockListSourceS3Path](o, func(v QuerySuggestionsBlockListSourceS3Path) string { return v.Key })
}

type ThesaurusSourceS3Path struct {
	// The name of the S3 bucket that contains the file.
	Bucket string `pulumi:"bucket"`
	// The name of the file.
	//
	// The following arguments are optional:
	Key string `pulumi:"key"`
}

type ThesaurusSourceS3PathArgs struct {
	// The name of the S3 bucket that contains the file.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// The name of the file.
	//
	// The following arguments are optional:
	Key pulumix.Input[string] `pulumi:"key"`
}

func (ThesaurusSourceS3PathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThesaurusSourceS3Path)(nil)).Elem()
}

func (i ThesaurusSourceS3PathArgs) ToThesaurusSourceS3PathOutput() ThesaurusSourceS3PathOutput {
	return i.ToThesaurusSourceS3PathOutputWithContext(context.Background())
}

func (i ThesaurusSourceS3PathArgs) ToThesaurusSourceS3PathOutputWithContext(ctx context.Context) ThesaurusSourceS3PathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThesaurusSourceS3PathOutput)
}

func (i *ThesaurusSourceS3PathArgs) ToOutput(ctx context.Context) pulumix.Output[*ThesaurusSourceS3PathArgs] {
	return pulumix.Val(i)
}

type ThesaurusSourceS3PathOutput struct{ *pulumi.OutputState }

func (ThesaurusSourceS3PathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThesaurusSourceS3Path)(nil)).Elem()
}

func (o ThesaurusSourceS3PathOutput) ToThesaurusSourceS3PathOutput() ThesaurusSourceS3PathOutput {
	return o
}

func (o ThesaurusSourceS3PathOutput) ToThesaurusSourceS3PathOutputWithContext(ctx context.Context) ThesaurusSourceS3PathOutput {
	return o
}

func (o ThesaurusSourceS3PathOutput) ToOutput(ctx context.Context) pulumix.Output[ThesaurusSourceS3Path] {
	return pulumix.Output[ThesaurusSourceS3Path]{
		OutputState: o.OutputState,
	}
}

// The name of the S3 bucket that contains the file.
func (o ThesaurusSourceS3PathOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[ThesaurusSourceS3Path](o, func(v ThesaurusSourceS3Path) string { return v.Bucket })
}

// The name of the file.
//
// The following arguments are optional:
func (o ThesaurusSourceS3PathOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[ThesaurusSourceS3Path](o, func(v ThesaurusSourceS3Path) string { return v.Key })
}

type GetExperienceConfiguration struct {
	// The identifiers of your data sources and FAQs. This is the content you want to use for your Amazon Kendra Experience. Documented below.
	ContentSourceConfigurations []GetExperienceConfigurationContentSourceConfiguration `pulumi:"contentSourceConfigurations"`
	// The AWS SSO field name that contains the identifiers of your users, such as their emails. Documented below.
	UserIdentityConfigurations []GetExperienceConfigurationUserIdentityConfiguration `pulumi:"userIdentityConfigurations"`
}

type GetExperienceConfigurationArgs struct {
	// The identifiers of your data sources and FAQs. This is the content you want to use for your Amazon Kendra Experience. Documented below.
	ContentSourceConfigurations pulumix.Input[[]*GetExperienceConfigurationContentSourceConfigurationArgs] `pulumi:"contentSourceConfigurations"`
	// The AWS SSO field name that contains the identifiers of your users, such as their emails. Documented below.
	UserIdentityConfigurations pulumix.Input[[]*GetExperienceConfigurationUserIdentityConfigurationArgs] `pulumi:"userIdentityConfigurations"`
}

func (GetExperienceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperienceConfiguration)(nil)).Elem()
}

func (i GetExperienceConfigurationArgs) ToGetExperienceConfigurationOutput() GetExperienceConfigurationOutput {
	return i.ToGetExperienceConfigurationOutputWithContext(context.Background())
}

func (i GetExperienceConfigurationArgs) ToGetExperienceConfigurationOutputWithContext(ctx context.Context) GetExperienceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExperienceConfigurationOutput)
}

func (i *GetExperienceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetExperienceConfigurationArgs] {
	return pulumix.Val(i)
}

type GetExperienceConfigurationOutput struct{ *pulumi.OutputState }

func (GetExperienceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperienceConfiguration)(nil)).Elem()
}

func (o GetExperienceConfigurationOutput) ToGetExperienceConfigurationOutput() GetExperienceConfigurationOutput {
	return o
}

func (o GetExperienceConfigurationOutput) ToGetExperienceConfigurationOutputWithContext(ctx context.Context) GetExperienceConfigurationOutput {
	return o
}

func (o GetExperienceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetExperienceConfiguration] {
	return pulumix.Output[GetExperienceConfiguration]{
		OutputState: o.OutputState,
	}
}

// The identifiers of your data sources and FAQs. This is the content you want to use for your Amazon Kendra Experience. Documented below.
func (o GetExperienceConfigurationOutput) ContentSourceConfigurations() pulumix.GArrayOutput[GetExperienceConfigurationContentSourceConfiguration, GetExperienceConfigurationContentSourceConfigurationOutput] {
	value := pulumix.Apply[GetExperienceConfiguration](o, func(v GetExperienceConfiguration) []GetExperienceConfigurationContentSourceConfiguration {
		return v.ContentSourceConfigurations
	})
	return pulumix.GArrayOutput[GetExperienceConfigurationContentSourceConfiguration, GetExperienceConfigurationContentSourceConfigurationOutput]{OutputState: value.OutputState}
}

// The AWS SSO field name that contains the identifiers of your users, such as their emails. Documented below.
func (o GetExperienceConfigurationOutput) UserIdentityConfigurations() pulumix.GArrayOutput[GetExperienceConfigurationUserIdentityConfiguration, GetExperienceConfigurationUserIdentityConfigurationOutput] {
	value := pulumix.Apply[GetExperienceConfiguration](o, func(v GetExperienceConfiguration) []GetExperienceConfigurationUserIdentityConfiguration {
		return v.UserIdentityConfigurations
	})
	return pulumix.GArrayOutput[GetExperienceConfigurationUserIdentityConfiguration, GetExperienceConfigurationUserIdentityConfigurationOutput]{OutputState: value.OutputState}
}

type GetExperienceConfigurationContentSourceConfiguration struct {
	// Identifiers of the data sources you want to use for your Amazon Kendra Experience.
	DataSourceIds []string `pulumi:"dataSourceIds"`
	// Whether to use documents you indexed directly using the `BatchPutDocument API`.
	DirectPutContent bool `pulumi:"directPutContent"`
	// Identifier of the FAQs that you want to use for your Amazon Kendra Experience.
	FaqIds []string `pulumi:"faqIds"`
}

type GetExperienceConfigurationContentSourceConfigurationArgs struct {
	// Identifiers of the data sources you want to use for your Amazon Kendra Experience.
	DataSourceIds pulumix.Input[[]string] `pulumi:"dataSourceIds"`
	// Whether to use documents you indexed directly using the `BatchPutDocument API`.
	DirectPutContent pulumix.Input[bool] `pulumi:"directPutContent"`
	// Identifier of the FAQs that you want to use for your Amazon Kendra Experience.
	FaqIds pulumix.Input[[]string] `pulumi:"faqIds"`
}

func (GetExperienceConfigurationContentSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperienceConfigurationContentSourceConfiguration)(nil)).Elem()
}

func (i GetExperienceConfigurationContentSourceConfigurationArgs) ToGetExperienceConfigurationContentSourceConfigurationOutput() GetExperienceConfigurationContentSourceConfigurationOutput {
	return i.ToGetExperienceConfigurationContentSourceConfigurationOutputWithContext(context.Background())
}

func (i GetExperienceConfigurationContentSourceConfigurationArgs) ToGetExperienceConfigurationContentSourceConfigurationOutputWithContext(ctx context.Context) GetExperienceConfigurationContentSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExperienceConfigurationContentSourceConfigurationOutput)
}

func (i *GetExperienceConfigurationContentSourceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetExperienceConfigurationContentSourceConfigurationArgs] {
	return pulumix.Val(i)
}

type GetExperienceConfigurationContentSourceConfigurationOutput struct{ *pulumi.OutputState }

func (GetExperienceConfigurationContentSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperienceConfigurationContentSourceConfiguration)(nil)).Elem()
}

func (o GetExperienceConfigurationContentSourceConfigurationOutput) ToGetExperienceConfigurationContentSourceConfigurationOutput() GetExperienceConfigurationContentSourceConfigurationOutput {
	return o
}

func (o GetExperienceConfigurationContentSourceConfigurationOutput) ToGetExperienceConfigurationContentSourceConfigurationOutputWithContext(ctx context.Context) GetExperienceConfigurationContentSourceConfigurationOutput {
	return o
}

func (o GetExperienceConfigurationContentSourceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetExperienceConfigurationContentSourceConfiguration] {
	return pulumix.Output[GetExperienceConfigurationContentSourceConfiguration]{
		OutputState: o.OutputState,
	}
}

// Identifiers of the data sources you want to use for your Amazon Kendra Experience.
func (o GetExperienceConfigurationContentSourceConfigurationOutput) DataSourceIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetExperienceConfigurationContentSourceConfiguration](o, func(v GetExperienceConfigurationContentSourceConfiguration) []string { return v.DataSourceIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Whether to use documents you indexed directly using the `BatchPutDocument API`.
func (o GetExperienceConfigurationContentSourceConfigurationOutput) DirectPutContent() pulumix.Output[bool] {
	return pulumix.Apply[GetExperienceConfigurationContentSourceConfiguration](o, func(v GetExperienceConfigurationContentSourceConfiguration) bool { return v.DirectPutContent })
}

// Identifier of the FAQs that you want to use for your Amazon Kendra Experience.
func (o GetExperienceConfigurationContentSourceConfigurationOutput) FaqIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetExperienceConfigurationContentSourceConfiguration](o, func(v GetExperienceConfigurationContentSourceConfiguration) []string { return v.FaqIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetExperienceConfigurationUserIdentityConfiguration struct {
	// The AWS SSO field name that contains the identifiers of your users, such as their emails.
	IdentityAttributeName string `pulumi:"identityAttributeName"`
}

type GetExperienceConfigurationUserIdentityConfigurationArgs struct {
	// The AWS SSO field name that contains the identifiers of your users, such as their emails.
	IdentityAttributeName pulumix.Input[string] `pulumi:"identityAttributeName"`
}

func (GetExperienceConfigurationUserIdentityConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperienceConfigurationUserIdentityConfiguration)(nil)).Elem()
}

func (i GetExperienceConfigurationUserIdentityConfigurationArgs) ToGetExperienceConfigurationUserIdentityConfigurationOutput() GetExperienceConfigurationUserIdentityConfigurationOutput {
	return i.ToGetExperienceConfigurationUserIdentityConfigurationOutputWithContext(context.Background())
}

func (i GetExperienceConfigurationUserIdentityConfigurationArgs) ToGetExperienceConfigurationUserIdentityConfigurationOutputWithContext(ctx context.Context) GetExperienceConfigurationUserIdentityConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExperienceConfigurationUserIdentityConfigurationOutput)
}

func (i *GetExperienceConfigurationUserIdentityConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetExperienceConfigurationUserIdentityConfigurationArgs] {
	return pulumix.Val(i)
}

type GetExperienceConfigurationUserIdentityConfigurationOutput struct{ *pulumi.OutputState }

func (GetExperienceConfigurationUserIdentityConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperienceConfigurationUserIdentityConfiguration)(nil)).Elem()
}

func (o GetExperienceConfigurationUserIdentityConfigurationOutput) ToGetExperienceConfigurationUserIdentityConfigurationOutput() GetExperienceConfigurationUserIdentityConfigurationOutput {
	return o
}

func (o GetExperienceConfigurationUserIdentityConfigurationOutput) ToGetExperienceConfigurationUserIdentityConfigurationOutputWithContext(ctx context.Context) GetExperienceConfigurationUserIdentityConfigurationOutput {
	return o
}

func (o GetExperienceConfigurationUserIdentityConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetExperienceConfigurationUserIdentityConfiguration] {
	return pulumix.Output[GetExperienceConfigurationUserIdentityConfiguration]{
		OutputState: o.OutputState,
	}
}

// The AWS SSO field name that contains the identifiers of your users, such as their emails.
func (o GetExperienceConfigurationUserIdentityConfigurationOutput) IdentityAttributeName() pulumix.Output[string] {
	return pulumix.Apply[GetExperienceConfigurationUserIdentityConfiguration](o, func(v GetExperienceConfigurationUserIdentityConfiguration) string { return v.IdentityAttributeName })
}

type GetExperienceEndpoint struct {
	// Endpoint of your Amazon Kendra Experience.
	Endpoint string `pulumi:"endpoint"`
	// Type of endpoint for your Amazon Kendra Experience.
	EndpointType string `pulumi:"endpointType"`
}

type GetExperienceEndpointArgs struct {
	// Endpoint of your Amazon Kendra Experience.
	Endpoint pulumix.Input[string] `pulumi:"endpoint"`
	// Type of endpoint for your Amazon Kendra Experience.
	EndpointType pulumix.Input[string] `pulumi:"endpointType"`
}

func (GetExperienceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperienceEndpoint)(nil)).Elem()
}

func (i GetExperienceEndpointArgs) ToGetExperienceEndpointOutput() GetExperienceEndpointOutput {
	return i.ToGetExperienceEndpointOutputWithContext(context.Background())
}

func (i GetExperienceEndpointArgs) ToGetExperienceEndpointOutputWithContext(ctx context.Context) GetExperienceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExperienceEndpointOutput)
}

func (i *GetExperienceEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[*GetExperienceEndpointArgs] {
	return pulumix.Val(i)
}

type GetExperienceEndpointOutput struct{ *pulumi.OutputState }

func (GetExperienceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExperienceEndpoint)(nil)).Elem()
}

func (o GetExperienceEndpointOutput) ToGetExperienceEndpointOutput() GetExperienceEndpointOutput {
	return o
}

func (o GetExperienceEndpointOutput) ToGetExperienceEndpointOutputWithContext(ctx context.Context) GetExperienceEndpointOutput {
	return o
}

func (o GetExperienceEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetExperienceEndpoint] {
	return pulumix.Output[GetExperienceEndpoint]{
		OutputState: o.OutputState,
	}
}

// Endpoint of your Amazon Kendra Experience.
func (o GetExperienceEndpointOutput) Endpoint() pulumix.Output[string] {
	return pulumix.Apply[GetExperienceEndpoint](o, func(v GetExperienceEndpoint) string { return v.Endpoint })
}

// Type of endpoint for your Amazon Kendra Experience.
func (o GetExperienceEndpointOutput) EndpointType() pulumix.Output[string] {
	return pulumix.Apply[GetExperienceEndpoint](o, func(v GetExperienceEndpoint) string { return v.EndpointType })
}

type GetFaqS3Path struct {
	// Name of the S3 bucket that contains the file.
	Bucket string `pulumi:"bucket"`
	// Name of the file.
	Key string `pulumi:"key"`
}

type GetFaqS3PathArgs struct {
	// Name of the S3 bucket that contains the file.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// Name of the file.
	Key pulumix.Input[string] `pulumi:"key"`
}

func (GetFaqS3PathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFaqS3Path)(nil)).Elem()
}

func (i GetFaqS3PathArgs) ToGetFaqS3PathOutput() GetFaqS3PathOutput {
	return i.ToGetFaqS3PathOutputWithContext(context.Background())
}

func (i GetFaqS3PathArgs) ToGetFaqS3PathOutputWithContext(ctx context.Context) GetFaqS3PathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFaqS3PathOutput)
}

func (i *GetFaqS3PathArgs) ToOutput(ctx context.Context) pulumix.Output[*GetFaqS3PathArgs] {
	return pulumix.Val(i)
}

type GetFaqS3PathOutput struct{ *pulumi.OutputState }

func (GetFaqS3PathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFaqS3Path)(nil)).Elem()
}

func (o GetFaqS3PathOutput) ToGetFaqS3PathOutput() GetFaqS3PathOutput {
	return o
}

func (o GetFaqS3PathOutput) ToGetFaqS3PathOutputWithContext(ctx context.Context) GetFaqS3PathOutput {
	return o
}

func (o GetFaqS3PathOutput) ToOutput(ctx context.Context) pulumix.Output[GetFaqS3Path] {
	return pulumix.Output[GetFaqS3Path]{
		OutputState: o.OutputState,
	}
}

// Name of the S3 bucket that contains the file.
func (o GetFaqS3PathOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[GetFaqS3Path](o, func(v GetFaqS3Path) string { return v.Bucket })
}

// Name of the file.
func (o GetFaqS3PathOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[GetFaqS3Path](o, func(v GetFaqS3Path) string { return v.Key })
}

type GetIndexCapacityUnit struct {
	// The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to [QueryCapacityUnits](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CapacityUnitsConfiguration.html#Kendra-Type-CapacityUnitsConfiguration-QueryCapacityUnits).
	QueryCapacityUnits int `pulumi:"queryCapacityUnits"`
	// The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
	StorageCapacityUnits int `pulumi:"storageCapacityUnits"`
}

type GetIndexCapacityUnitArgs struct {
	// The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to [QueryCapacityUnits](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CapacityUnitsConfiguration.html#Kendra-Type-CapacityUnitsConfiguration-QueryCapacityUnits).
	QueryCapacityUnits pulumix.Input[int] `pulumi:"queryCapacityUnits"`
	// The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
	StorageCapacityUnits pulumix.Input[int] `pulumi:"storageCapacityUnits"`
}

func (GetIndexCapacityUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexCapacityUnit)(nil)).Elem()
}

func (i GetIndexCapacityUnitArgs) ToGetIndexCapacityUnitOutput() GetIndexCapacityUnitOutput {
	return i.ToGetIndexCapacityUnitOutputWithContext(context.Background())
}

func (i GetIndexCapacityUnitArgs) ToGetIndexCapacityUnitOutputWithContext(ctx context.Context) GetIndexCapacityUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexCapacityUnitOutput)
}

func (i *GetIndexCapacityUnitArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexCapacityUnitArgs] {
	return pulumix.Val(i)
}

type GetIndexCapacityUnitOutput struct{ *pulumi.OutputState }

func (GetIndexCapacityUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexCapacityUnit)(nil)).Elem()
}

func (o GetIndexCapacityUnitOutput) ToGetIndexCapacityUnitOutput() GetIndexCapacityUnitOutput {
	return o
}

func (o GetIndexCapacityUnitOutput) ToGetIndexCapacityUnitOutputWithContext(ctx context.Context) GetIndexCapacityUnitOutput {
	return o
}

func (o GetIndexCapacityUnitOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexCapacityUnit] {
	return pulumix.Output[GetIndexCapacityUnit]{
		OutputState: o.OutputState,
	}
}

// The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to [QueryCapacityUnits](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CapacityUnitsConfiguration.html#Kendra-Type-CapacityUnitsConfiguration-QueryCapacityUnits).
func (o GetIndexCapacityUnitOutput) QueryCapacityUnits() pulumix.Output[int] {
	return pulumix.Apply[GetIndexCapacityUnit](o, func(v GetIndexCapacityUnit) int { return v.QueryCapacityUnits })
}

// The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
func (o GetIndexCapacityUnitOutput) StorageCapacityUnits() pulumix.Output[int] {
	return pulumix.Apply[GetIndexCapacityUnit](o, func(v GetIndexCapacityUnit) int { return v.StorageCapacityUnits })
}

type GetIndexDocumentMetadataConfigurationUpdate struct {
	// Name of the index field. Minimum length of 1. Maximum length of 30.
	Name string `pulumi:"name"`
	// Block that provides manual tuning parameters to determine how the field affects the search results. Documented below.
	Relevances []GetIndexDocumentMetadataConfigurationUpdateRelevance `pulumi:"relevances"`
	// Block that provides information about how the field is used during a search. Documented below.
	Searches []GetIndexDocumentMetadataConfigurationUpdateSearch `pulumi:"searches"`
	// Data type of the index field. Valid values are `STRING_VALUE`, `STRING_LIST_VALUE`, `LONG_VALUE`, `DATE_VALUE`.
	Type string `pulumi:"type"`
}

type GetIndexDocumentMetadataConfigurationUpdateArgs struct {
	// Name of the index field. Minimum length of 1. Maximum length of 30.
	Name pulumix.Input[string] `pulumi:"name"`
	// Block that provides manual tuning parameters to determine how the field affects the search results. Documented below.
	Relevances pulumix.Input[[]*GetIndexDocumentMetadataConfigurationUpdateRelevanceArgs] `pulumi:"relevances"`
	// Block that provides information about how the field is used during a search. Documented below.
	Searches pulumix.Input[[]*GetIndexDocumentMetadataConfigurationUpdateSearchArgs] `pulumi:"searches"`
	// Data type of the index field. Valid values are `STRING_VALUE`, `STRING_LIST_VALUE`, `LONG_VALUE`, `DATE_VALUE`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetIndexDocumentMetadataConfigurationUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexDocumentMetadataConfigurationUpdate)(nil)).Elem()
}

func (i GetIndexDocumentMetadataConfigurationUpdateArgs) ToGetIndexDocumentMetadataConfigurationUpdateOutput() GetIndexDocumentMetadataConfigurationUpdateOutput {
	return i.ToGetIndexDocumentMetadataConfigurationUpdateOutputWithContext(context.Background())
}

func (i GetIndexDocumentMetadataConfigurationUpdateArgs) ToGetIndexDocumentMetadataConfigurationUpdateOutputWithContext(ctx context.Context) GetIndexDocumentMetadataConfigurationUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexDocumentMetadataConfigurationUpdateOutput)
}

func (i *GetIndexDocumentMetadataConfigurationUpdateArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexDocumentMetadataConfigurationUpdateArgs] {
	return pulumix.Val(i)
}

type GetIndexDocumentMetadataConfigurationUpdateOutput struct{ *pulumi.OutputState }

func (GetIndexDocumentMetadataConfigurationUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexDocumentMetadataConfigurationUpdate)(nil)).Elem()
}

func (o GetIndexDocumentMetadataConfigurationUpdateOutput) ToGetIndexDocumentMetadataConfigurationUpdateOutput() GetIndexDocumentMetadataConfigurationUpdateOutput {
	return o
}

func (o GetIndexDocumentMetadataConfigurationUpdateOutput) ToGetIndexDocumentMetadataConfigurationUpdateOutputWithContext(ctx context.Context) GetIndexDocumentMetadataConfigurationUpdateOutput {
	return o
}

func (o GetIndexDocumentMetadataConfigurationUpdateOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexDocumentMetadataConfigurationUpdate] {
	return pulumix.Output[GetIndexDocumentMetadataConfigurationUpdate]{
		OutputState: o.OutputState,
	}
}

// Name of the index field. Minimum length of 1. Maximum length of 30.
func (o GetIndexDocumentMetadataConfigurationUpdateOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdate](o, func(v GetIndexDocumentMetadataConfigurationUpdate) string { return v.Name })
}

// Block that provides manual tuning parameters to determine how the field affects the search results. Documented below.
func (o GetIndexDocumentMetadataConfigurationUpdateOutput) Relevances() pulumix.GArrayOutput[GetIndexDocumentMetadataConfigurationUpdateRelevance, GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput] {
	value := pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdate](o, func(v GetIndexDocumentMetadataConfigurationUpdate) []GetIndexDocumentMetadataConfigurationUpdateRelevance {
		return v.Relevances
	})
	return pulumix.GArrayOutput[GetIndexDocumentMetadataConfigurationUpdateRelevance, GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput]{OutputState: value.OutputState}
}

// Block that provides information about how the field is used during a search. Documented below.
func (o GetIndexDocumentMetadataConfigurationUpdateOutput) Searches() pulumix.GArrayOutput[GetIndexDocumentMetadataConfigurationUpdateSearch, GetIndexDocumentMetadataConfigurationUpdateSearchOutput] {
	value := pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdate](o, func(v GetIndexDocumentMetadataConfigurationUpdate) []GetIndexDocumentMetadataConfigurationUpdateSearch {
		return v.Searches
	})
	return pulumix.GArrayOutput[GetIndexDocumentMetadataConfigurationUpdateSearch, GetIndexDocumentMetadataConfigurationUpdateSearchOutput]{OutputState: value.OutputState}
}

// Data type of the index field. Valid values are `STRING_VALUE`, `STRING_LIST_VALUE`, `LONG_VALUE`, `DATE_VALUE`.
func (o GetIndexDocumentMetadataConfigurationUpdateOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdate](o, func(v GetIndexDocumentMetadataConfigurationUpdate) string { return v.Type })
}

type GetIndexDocumentMetadataConfigurationUpdateRelevance struct {
	// Time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-Duration).
	Duration string `pulumi:"duration"`
	// How "fresh" a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-Freshness).
	Freshness bool `pulumi:"freshness"`
	// Relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
	Importance int `pulumi:"importance"`
	// Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
	RankOrder string `pulumi:"rankOrder"`
	// A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
	ValuesImportanceMap map[string]int `pulumi:"valuesImportanceMap"`
}

type GetIndexDocumentMetadataConfigurationUpdateRelevanceArgs struct {
	// Time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-Duration).
	Duration pulumix.Input[string] `pulumi:"duration"`
	// How "fresh" a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-Freshness).
	Freshness pulumix.Input[bool] `pulumi:"freshness"`
	// Relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
	Importance pulumix.Input[int] `pulumi:"importance"`
	// Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
	RankOrder pulumix.Input[string] `pulumi:"rankOrder"`
	// A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
	ValuesImportanceMap pulumix.Input[map[string]int] `pulumi:"valuesImportanceMap"`
}

func (GetIndexDocumentMetadataConfigurationUpdateRelevanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexDocumentMetadataConfigurationUpdateRelevance)(nil)).Elem()
}

func (i GetIndexDocumentMetadataConfigurationUpdateRelevanceArgs) ToGetIndexDocumentMetadataConfigurationUpdateRelevanceOutput() GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput {
	return i.ToGetIndexDocumentMetadataConfigurationUpdateRelevanceOutputWithContext(context.Background())
}

func (i GetIndexDocumentMetadataConfigurationUpdateRelevanceArgs) ToGetIndexDocumentMetadataConfigurationUpdateRelevanceOutputWithContext(ctx context.Context) GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput)
}

func (i *GetIndexDocumentMetadataConfigurationUpdateRelevanceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexDocumentMetadataConfigurationUpdateRelevanceArgs] {
	return pulumix.Val(i)
}

type GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput struct{ *pulumi.OutputState }

func (GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexDocumentMetadataConfigurationUpdateRelevance)(nil)).Elem()
}

func (o GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput) ToGetIndexDocumentMetadataConfigurationUpdateRelevanceOutput() GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput {
	return o
}

func (o GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput) ToGetIndexDocumentMetadataConfigurationUpdateRelevanceOutputWithContext(ctx context.Context) GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput {
	return o
}

func (o GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexDocumentMetadataConfigurationUpdateRelevance] {
	return pulumix.Output[GetIndexDocumentMetadataConfigurationUpdateRelevance]{
		OutputState: o.OutputState,
	}
}

// Time period that the boost applies to. For more information, refer to [Duration](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-Duration).
func (o GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput) Duration() pulumix.Output[string] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdateRelevance](o, func(v GetIndexDocumentMetadataConfigurationUpdateRelevance) string { return v.Duration })
}

// How "fresh" a document is. For more information, refer to [Freshness](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-Freshness).
func (o GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput) Freshness() pulumix.Output[bool] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdateRelevance](o, func(v GetIndexDocumentMetadataConfigurationUpdateRelevance) bool { return v.Freshness })
}

// Relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
func (o GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput) Importance() pulumix.Output[int] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdateRelevance](o, func(v GetIndexDocumentMetadataConfigurationUpdateRelevance) int { return v.Importance })
}

// Determines how values should be interpreted. For more information, refer to [RankOrder](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-RankOrder).
func (o GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput) RankOrder() pulumix.Output[string] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdateRelevance](o, func(v GetIndexDocumentMetadataConfigurationUpdateRelevance) string { return v.RankOrder })
}

// A list of values that should be given a different boost when they appear in the result list. For more information, refer to [ValueImportanceMap](https://docs.aws.amazon.com/kendra/latest/APIReference/API_Relevance.html#Kendra-Type-Relevance-ValueImportanceMap).
func (o GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput) ValuesImportanceMap() pulumix.MapOutput[int] {
	value := pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdateRelevance](o, func(v GetIndexDocumentMetadataConfigurationUpdateRelevance) map[string]int {
		return v.ValuesImportanceMap
	})
	return pulumix.MapOutput[int]{OutputState: value.OutputState}
}

type GetIndexDocumentMetadataConfigurationUpdateSearch struct {
	// Determines whether the field is returned in the query response. The default is `true`.
	Displayable bool `pulumi:"displayable"`
	// Whether the field can be used to create search facets, a count of results for each value in the field. The default is `false`.
	Facetable bool `pulumi:"facetable"`
	// Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.
	Searchable bool `pulumi:"searchable"`
	// Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.
	Sortable bool `pulumi:"sortable"`
}

type GetIndexDocumentMetadataConfigurationUpdateSearchArgs struct {
	// Determines whether the field is returned in the query response. The default is `true`.
	Displayable pulumix.Input[bool] `pulumi:"displayable"`
	// Whether the field can be used to create search facets, a count of results for each value in the field. The default is `false`.
	Facetable pulumix.Input[bool] `pulumi:"facetable"`
	// Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.
	Searchable pulumix.Input[bool] `pulumi:"searchable"`
	// Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.
	Sortable pulumix.Input[bool] `pulumi:"sortable"`
}

func (GetIndexDocumentMetadataConfigurationUpdateSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexDocumentMetadataConfigurationUpdateSearch)(nil)).Elem()
}

func (i GetIndexDocumentMetadataConfigurationUpdateSearchArgs) ToGetIndexDocumentMetadataConfigurationUpdateSearchOutput() GetIndexDocumentMetadataConfigurationUpdateSearchOutput {
	return i.ToGetIndexDocumentMetadataConfigurationUpdateSearchOutputWithContext(context.Background())
}

func (i GetIndexDocumentMetadataConfigurationUpdateSearchArgs) ToGetIndexDocumentMetadataConfigurationUpdateSearchOutputWithContext(ctx context.Context) GetIndexDocumentMetadataConfigurationUpdateSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexDocumentMetadataConfigurationUpdateSearchOutput)
}

func (i *GetIndexDocumentMetadataConfigurationUpdateSearchArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexDocumentMetadataConfigurationUpdateSearchArgs] {
	return pulumix.Val(i)
}

type GetIndexDocumentMetadataConfigurationUpdateSearchOutput struct{ *pulumi.OutputState }

func (GetIndexDocumentMetadataConfigurationUpdateSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexDocumentMetadataConfigurationUpdateSearch)(nil)).Elem()
}

func (o GetIndexDocumentMetadataConfigurationUpdateSearchOutput) ToGetIndexDocumentMetadataConfigurationUpdateSearchOutput() GetIndexDocumentMetadataConfigurationUpdateSearchOutput {
	return o
}

func (o GetIndexDocumentMetadataConfigurationUpdateSearchOutput) ToGetIndexDocumentMetadataConfigurationUpdateSearchOutputWithContext(ctx context.Context) GetIndexDocumentMetadataConfigurationUpdateSearchOutput {
	return o
}

func (o GetIndexDocumentMetadataConfigurationUpdateSearchOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexDocumentMetadataConfigurationUpdateSearch] {
	return pulumix.Output[GetIndexDocumentMetadataConfigurationUpdateSearch]{
		OutputState: o.OutputState,
	}
}

// Determines whether the field is returned in the query response. The default is `true`.
func (o GetIndexDocumentMetadataConfigurationUpdateSearchOutput) Displayable() pulumix.Output[bool] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdateSearch](o, func(v GetIndexDocumentMetadataConfigurationUpdateSearch) bool { return v.Displayable })
}

// Whether the field can be used to create search facets, a count of results for each value in the field. The default is `false`.
func (o GetIndexDocumentMetadataConfigurationUpdateSearchOutput) Facetable() pulumix.Output[bool] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdateSearch](o, func(v GetIndexDocumentMetadataConfigurationUpdateSearch) bool { return v.Facetable })
}

// Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.
func (o GetIndexDocumentMetadataConfigurationUpdateSearchOutput) Searchable() pulumix.Output[bool] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdateSearch](o, func(v GetIndexDocumentMetadataConfigurationUpdateSearch) bool { return v.Searchable })
}

// Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.
func (o GetIndexDocumentMetadataConfigurationUpdateSearchOutput) Sortable() pulumix.Output[bool] {
	return pulumix.Apply[GetIndexDocumentMetadataConfigurationUpdateSearch](o, func(v GetIndexDocumentMetadataConfigurationUpdateSearch) bool { return v.Sortable })
}

type GetIndexIndexStatistic struct {
	// Block that specifies the number of question and answer topics in the index. Documented below.
	FaqStatistics []GetIndexIndexStatisticFaqStatistic `pulumi:"faqStatistics"`
	// A block that specifies the number of text documents indexed.
	TextDocumentStatistics []GetIndexIndexStatisticTextDocumentStatistic `pulumi:"textDocumentStatistics"`
}

type GetIndexIndexStatisticArgs struct {
	// Block that specifies the number of question and answer topics in the index. Documented below.
	FaqStatistics pulumix.Input[[]*GetIndexIndexStatisticFaqStatisticArgs] `pulumi:"faqStatistics"`
	// A block that specifies the number of text documents indexed.
	TextDocumentStatistics pulumix.Input[[]*GetIndexIndexStatisticTextDocumentStatisticArgs] `pulumi:"textDocumentStatistics"`
}

func (GetIndexIndexStatisticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexIndexStatistic)(nil)).Elem()
}

func (i GetIndexIndexStatisticArgs) ToGetIndexIndexStatisticOutput() GetIndexIndexStatisticOutput {
	return i.ToGetIndexIndexStatisticOutputWithContext(context.Background())
}

func (i GetIndexIndexStatisticArgs) ToGetIndexIndexStatisticOutputWithContext(ctx context.Context) GetIndexIndexStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexIndexStatisticOutput)
}

func (i *GetIndexIndexStatisticArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexIndexStatisticArgs] {
	return pulumix.Val(i)
}

type GetIndexIndexStatisticOutput struct{ *pulumi.OutputState }

func (GetIndexIndexStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexIndexStatistic)(nil)).Elem()
}

func (o GetIndexIndexStatisticOutput) ToGetIndexIndexStatisticOutput() GetIndexIndexStatisticOutput {
	return o
}

func (o GetIndexIndexStatisticOutput) ToGetIndexIndexStatisticOutputWithContext(ctx context.Context) GetIndexIndexStatisticOutput {
	return o
}

func (o GetIndexIndexStatisticOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexIndexStatistic] {
	return pulumix.Output[GetIndexIndexStatistic]{
		OutputState: o.OutputState,
	}
}

// Block that specifies the number of question and answer topics in the index. Documented below.
func (o GetIndexIndexStatisticOutput) FaqStatistics() pulumix.GArrayOutput[GetIndexIndexStatisticFaqStatistic, GetIndexIndexStatisticFaqStatisticOutput] {
	value := pulumix.Apply[GetIndexIndexStatistic](o, func(v GetIndexIndexStatistic) []GetIndexIndexStatisticFaqStatistic { return v.FaqStatistics })
	return pulumix.GArrayOutput[GetIndexIndexStatisticFaqStatistic, GetIndexIndexStatisticFaqStatisticOutput]{OutputState: value.OutputState}
}

// A block that specifies the number of text documents indexed.
func (o GetIndexIndexStatisticOutput) TextDocumentStatistics() pulumix.GArrayOutput[GetIndexIndexStatisticTextDocumentStatistic, GetIndexIndexStatisticTextDocumentStatisticOutput] {
	value := pulumix.Apply[GetIndexIndexStatistic](o, func(v GetIndexIndexStatistic) []GetIndexIndexStatisticTextDocumentStatistic {
		return v.TextDocumentStatistics
	})
	return pulumix.GArrayOutput[GetIndexIndexStatisticTextDocumentStatistic, GetIndexIndexStatisticTextDocumentStatisticOutput]{OutputState: value.OutputState}
}

type GetIndexIndexStatisticFaqStatistic struct {
	// The total number of FAQ questions and answers contained in the index.
	IndexedQuestionAnswersCount int `pulumi:"indexedQuestionAnswersCount"`
}

type GetIndexIndexStatisticFaqStatisticArgs struct {
	// The total number of FAQ questions and answers contained in the index.
	IndexedQuestionAnswersCount pulumix.Input[int] `pulumi:"indexedQuestionAnswersCount"`
}

func (GetIndexIndexStatisticFaqStatisticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexIndexStatisticFaqStatistic)(nil)).Elem()
}

func (i GetIndexIndexStatisticFaqStatisticArgs) ToGetIndexIndexStatisticFaqStatisticOutput() GetIndexIndexStatisticFaqStatisticOutput {
	return i.ToGetIndexIndexStatisticFaqStatisticOutputWithContext(context.Background())
}

func (i GetIndexIndexStatisticFaqStatisticArgs) ToGetIndexIndexStatisticFaqStatisticOutputWithContext(ctx context.Context) GetIndexIndexStatisticFaqStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexIndexStatisticFaqStatisticOutput)
}

func (i *GetIndexIndexStatisticFaqStatisticArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexIndexStatisticFaqStatisticArgs] {
	return pulumix.Val(i)
}

type GetIndexIndexStatisticFaqStatisticOutput struct{ *pulumi.OutputState }

func (GetIndexIndexStatisticFaqStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexIndexStatisticFaqStatistic)(nil)).Elem()
}

func (o GetIndexIndexStatisticFaqStatisticOutput) ToGetIndexIndexStatisticFaqStatisticOutput() GetIndexIndexStatisticFaqStatisticOutput {
	return o
}

func (o GetIndexIndexStatisticFaqStatisticOutput) ToGetIndexIndexStatisticFaqStatisticOutputWithContext(ctx context.Context) GetIndexIndexStatisticFaqStatisticOutput {
	return o
}

func (o GetIndexIndexStatisticFaqStatisticOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexIndexStatisticFaqStatistic] {
	return pulumix.Output[GetIndexIndexStatisticFaqStatistic]{
		OutputState: o.OutputState,
	}
}

// The total number of FAQ questions and answers contained in the index.
func (o GetIndexIndexStatisticFaqStatisticOutput) IndexedQuestionAnswersCount() pulumix.Output[int] {
	return pulumix.Apply[GetIndexIndexStatisticFaqStatistic](o, func(v GetIndexIndexStatisticFaqStatistic) int { return v.IndexedQuestionAnswersCount })
}

type GetIndexIndexStatisticTextDocumentStatistic struct {
	// Total size, in bytes, of the indexed documents.
	IndexedTextBytes int `pulumi:"indexedTextBytes"`
	// The number of text documents indexed.
	IndexedTextDocumentsCount int `pulumi:"indexedTextDocumentsCount"`
}

type GetIndexIndexStatisticTextDocumentStatisticArgs struct {
	// Total size, in bytes, of the indexed documents.
	IndexedTextBytes pulumix.Input[int] `pulumi:"indexedTextBytes"`
	// The number of text documents indexed.
	IndexedTextDocumentsCount pulumix.Input[int] `pulumi:"indexedTextDocumentsCount"`
}

func (GetIndexIndexStatisticTextDocumentStatisticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexIndexStatisticTextDocumentStatistic)(nil)).Elem()
}

func (i GetIndexIndexStatisticTextDocumentStatisticArgs) ToGetIndexIndexStatisticTextDocumentStatisticOutput() GetIndexIndexStatisticTextDocumentStatisticOutput {
	return i.ToGetIndexIndexStatisticTextDocumentStatisticOutputWithContext(context.Background())
}

func (i GetIndexIndexStatisticTextDocumentStatisticArgs) ToGetIndexIndexStatisticTextDocumentStatisticOutputWithContext(ctx context.Context) GetIndexIndexStatisticTextDocumentStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexIndexStatisticTextDocumentStatisticOutput)
}

func (i *GetIndexIndexStatisticTextDocumentStatisticArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexIndexStatisticTextDocumentStatisticArgs] {
	return pulumix.Val(i)
}

type GetIndexIndexStatisticTextDocumentStatisticOutput struct{ *pulumi.OutputState }

func (GetIndexIndexStatisticTextDocumentStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexIndexStatisticTextDocumentStatistic)(nil)).Elem()
}

func (o GetIndexIndexStatisticTextDocumentStatisticOutput) ToGetIndexIndexStatisticTextDocumentStatisticOutput() GetIndexIndexStatisticTextDocumentStatisticOutput {
	return o
}

func (o GetIndexIndexStatisticTextDocumentStatisticOutput) ToGetIndexIndexStatisticTextDocumentStatisticOutputWithContext(ctx context.Context) GetIndexIndexStatisticTextDocumentStatisticOutput {
	return o
}

func (o GetIndexIndexStatisticTextDocumentStatisticOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexIndexStatisticTextDocumentStatistic] {
	return pulumix.Output[GetIndexIndexStatisticTextDocumentStatistic]{
		OutputState: o.OutputState,
	}
}

// Total size, in bytes, of the indexed documents.
func (o GetIndexIndexStatisticTextDocumentStatisticOutput) IndexedTextBytes() pulumix.Output[int] {
	return pulumix.Apply[GetIndexIndexStatisticTextDocumentStatistic](o, func(v GetIndexIndexStatisticTextDocumentStatistic) int { return v.IndexedTextBytes })
}

// The number of text documents indexed.
func (o GetIndexIndexStatisticTextDocumentStatisticOutput) IndexedTextDocumentsCount() pulumix.Output[int] {
	return pulumix.Apply[GetIndexIndexStatisticTextDocumentStatistic](o, func(v GetIndexIndexStatisticTextDocumentStatistic) int { return v.IndexedTextDocumentsCount })
}

type GetIndexServerSideEncryptionConfiguration struct {
	// Identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

type GetIndexServerSideEncryptionConfigurationArgs struct {
	// Identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
	KmsKeyId pulumix.Input[string] `pulumi:"kmsKeyId"`
}

func (GetIndexServerSideEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i GetIndexServerSideEncryptionConfigurationArgs) ToGetIndexServerSideEncryptionConfigurationOutput() GetIndexServerSideEncryptionConfigurationOutput {
	return i.ToGetIndexServerSideEncryptionConfigurationOutputWithContext(context.Background())
}

func (i GetIndexServerSideEncryptionConfigurationArgs) ToGetIndexServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) GetIndexServerSideEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexServerSideEncryptionConfigurationOutput)
}

func (i *GetIndexServerSideEncryptionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexServerSideEncryptionConfigurationArgs] {
	return pulumix.Val(i)
}

type GetIndexServerSideEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (GetIndexServerSideEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o GetIndexServerSideEncryptionConfigurationOutput) ToGetIndexServerSideEncryptionConfigurationOutput() GetIndexServerSideEncryptionConfigurationOutput {
	return o
}

func (o GetIndexServerSideEncryptionConfigurationOutput) ToGetIndexServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) GetIndexServerSideEncryptionConfigurationOutput {
	return o
}

func (o GetIndexServerSideEncryptionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexServerSideEncryptionConfiguration] {
	return pulumix.Output[GetIndexServerSideEncryptionConfiguration]{
		OutputState: o.OutputState,
	}
}

// Identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
func (o GetIndexServerSideEncryptionConfigurationOutput) KmsKeyId() pulumix.Output[string] {
	return pulumix.Apply[GetIndexServerSideEncryptionConfiguration](o, func(v GetIndexServerSideEncryptionConfiguration) string { return v.KmsKeyId })
}

type GetIndexUserGroupResolutionConfiguration struct {
	// The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
	UserGroupResolutionMode string `pulumi:"userGroupResolutionMode"`
}

type GetIndexUserGroupResolutionConfigurationArgs struct {
	// The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
	UserGroupResolutionMode pulumix.Input[string] `pulumi:"userGroupResolutionMode"`
}

func (GetIndexUserGroupResolutionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexUserGroupResolutionConfiguration)(nil)).Elem()
}

func (i GetIndexUserGroupResolutionConfigurationArgs) ToGetIndexUserGroupResolutionConfigurationOutput() GetIndexUserGroupResolutionConfigurationOutput {
	return i.ToGetIndexUserGroupResolutionConfigurationOutputWithContext(context.Background())
}

func (i GetIndexUserGroupResolutionConfigurationArgs) ToGetIndexUserGroupResolutionConfigurationOutputWithContext(ctx context.Context) GetIndexUserGroupResolutionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexUserGroupResolutionConfigurationOutput)
}

func (i *GetIndexUserGroupResolutionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexUserGroupResolutionConfigurationArgs] {
	return pulumix.Val(i)
}

type GetIndexUserGroupResolutionConfigurationOutput struct{ *pulumi.OutputState }

func (GetIndexUserGroupResolutionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexUserGroupResolutionConfiguration)(nil)).Elem()
}

func (o GetIndexUserGroupResolutionConfigurationOutput) ToGetIndexUserGroupResolutionConfigurationOutput() GetIndexUserGroupResolutionConfigurationOutput {
	return o
}

func (o GetIndexUserGroupResolutionConfigurationOutput) ToGetIndexUserGroupResolutionConfigurationOutputWithContext(ctx context.Context) GetIndexUserGroupResolutionConfigurationOutput {
	return o
}

func (o GetIndexUserGroupResolutionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexUserGroupResolutionConfiguration] {
	return pulumix.Output[GetIndexUserGroupResolutionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.
func (o GetIndexUserGroupResolutionConfigurationOutput) UserGroupResolutionMode() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserGroupResolutionConfiguration](o, func(v GetIndexUserGroupResolutionConfiguration) string { return v.UserGroupResolutionMode })
}

type GetIndexUserTokenConfiguration struct {
	// A block that specifies the information about the JSON token type configuration.
	JsonTokenTypeConfigurations []GetIndexUserTokenConfigurationJsonTokenTypeConfiguration `pulumi:"jsonTokenTypeConfigurations"`
	// A block that specifies the information about the JWT token type configuration.
	JwtTokenTypeConfigurations []GetIndexUserTokenConfigurationJwtTokenTypeConfiguration `pulumi:"jwtTokenTypeConfigurations"`
}

type GetIndexUserTokenConfigurationArgs struct {
	// A block that specifies the information about the JSON token type configuration.
	JsonTokenTypeConfigurations pulumix.Input[[]*GetIndexUserTokenConfigurationJsonTokenTypeConfigurationArgs] `pulumi:"jsonTokenTypeConfigurations"`
	// A block that specifies the information about the JWT token type configuration.
	JwtTokenTypeConfigurations pulumix.Input[[]*GetIndexUserTokenConfigurationJwtTokenTypeConfigurationArgs] `pulumi:"jwtTokenTypeConfigurations"`
}

func (GetIndexUserTokenConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexUserTokenConfiguration)(nil)).Elem()
}

func (i GetIndexUserTokenConfigurationArgs) ToGetIndexUserTokenConfigurationOutput() GetIndexUserTokenConfigurationOutput {
	return i.ToGetIndexUserTokenConfigurationOutputWithContext(context.Background())
}

func (i GetIndexUserTokenConfigurationArgs) ToGetIndexUserTokenConfigurationOutputWithContext(ctx context.Context) GetIndexUserTokenConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexUserTokenConfigurationOutput)
}

func (i *GetIndexUserTokenConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexUserTokenConfigurationArgs] {
	return pulumix.Val(i)
}

type GetIndexUserTokenConfigurationOutput struct{ *pulumi.OutputState }

func (GetIndexUserTokenConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexUserTokenConfiguration)(nil)).Elem()
}

func (o GetIndexUserTokenConfigurationOutput) ToGetIndexUserTokenConfigurationOutput() GetIndexUserTokenConfigurationOutput {
	return o
}

func (o GetIndexUserTokenConfigurationOutput) ToGetIndexUserTokenConfigurationOutputWithContext(ctx context.Context) GetIndexUserTokenConfigurationOutput {
	return o
}

func (o GetIndexUserTokenConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexUserTokenConfiguration] {
	return pulumix.Output[GetIndexUserTokenConfiguration]{
		OutputState: o.OutputState,
	}
}

// A block that specifies the information about the JSON token type configuration.
func (o GetIndexUserTokenConfigurationOutput) JsonTokenTypeConfigurations() pulumix.GArrayOutput[GetIndexUserTokenConfigurationJsonTokenTypeConfiguration, GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput] {
	value := pulumix.Apply[GetIndexUserTokenConfiguration](o, func(v GetIndexUserTokenConfiguration) []GetIndexUserTokenConfigurationJsonTokenTypeConfiguration {
		return v.JsonTokenTypeConfigurations
	})
	return pulumix.GArrayOutput[GetIndexUserTokenConfigurationJsonTokenTypeConfiguration, GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput]{OutputState: value.OutputState}
}

// A block that specifies the information about the JWT token type configuration.
func (o GetIndexUserTokenConfigurationOutput) JwtTokenTypeConfigurations() pulumix.GArrayOutput[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration, GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput] {
	value := pulumix.Apply[GetIndexUserTokenConfiguration](o, func(v GetIndexUserTokenConfiguration) []GetIndexUserTokenConfigurationJwtTokenTypeConfiguration {
		return v.JwtTokenTypeConfigurations
	})
	return pulumix.GArrayOutput[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration, GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput]{OutputState: value.OutputState}
}

type GetIndexUserTokenConfigurationJsonTokenTypeConfiguration struct {
	// The group attribute field.
	GroupAttributeField string `pulumi:"groupAttributeField"`
	// The user name attribute field.
	UserNameAttributeField string `pulumi:"userNameAttributeField"`
}

type GetIndexUserTokenConfigurationJsonTokenTypeConfigurationArgs struct {
	// The group attribute field.
	GroupAttributeField pulumix.Input[string] `pulumi:"groupAttributeField"`
	// The user name attribute field.
	UserNameAttributeField pulumix.Input[string] `pulumi:"userNameAttributeField"`
}

func (GetIndexUserTokenConfigurationJsonTokenTypeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexUserTokenConfigurationJsonTokenTypeConfiguration)(nil)).Elem()
}

func (i GetIndexUserTokenConfigurationJsonTokenTypeConfigurationArgs) ToGetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput() GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput {
	return i.ToGetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutputWithContext(context.Background())
}

func (i GetIndexUserTokenConfigurationJsonTokenTypeConfigurationArgs) ToGetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutputWithContext(ctx context.Context) GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput)
}

func (i *GetIndexUserTokenConfigurationJsonTokenTypeConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexUserTokenConfigurationJsonTokenTypeConfigurationArgs] {
	return pulumix.Val(i)
}

type GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput struct{ *pulumi.OutputState }

func (GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexUserTokenConfigurationJsonTokenTypeConfiguration)(nil)).Elem()
}

func (o GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput) ToGetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput() GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput {
	return o
}

func (o GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput) ToGetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutputWithContext(ctx context.Context) GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput {
	return o
}

func (o GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexUserTokenConfigurationJsonTokenTypeConfiguration] {
	return pulumix.Output[GetIndexUserTokenConfigurationJsonTokenTypeConfiguration]{
		OutputState: o.OutputState,
	}
}

// The group attribute field.
func (o GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput) GroupAttributeField() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserTokenConfigurationJsonTokenTypeConfiguration](o, func(v GetIndexUserTokenConfigurationJsonTokenTypeConfiguration) string { return v.GroupAttributeField })
}

// The user name attribute field.
func (o GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput) UserNameAttributeField() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserTokenConfigurationJsonTokenTypeConfiguration](o, func(v GetIndexUserTokenConfigurationJsonTokenTypeConfiguration) string {
		return v.UserNameAttributeField
	})
}

type GetIndexUserTokenConfigurationJwtTokenTypeConfiguration struct {
	// Regular expression that identifies the claim.
	ClaimRegex string `pulumi:"claimRegex"`
	// The group attribute field.
	GroupAttributeField string `pulumi:"groupAttributeField"`
	// Issuer of the token.
	Issuer string `pulumi:"issuer"`
	// Location of the key. Valid values are `URL` or `SECRET_MANAGER`
	KeyLocation string `pulumi:"keyLocation"`
	// ARN of the secret.
	SecretsManagerArn string `pulumi:"secretsManagerArn"`
	// Signing key URL.
	Url string `pulumi:"url"`
	// The user name attribute field.
	UserNameAttributeField string `pulumi:"userNameAttributeField"`
}

type GetIndexUserTokenConfigurationJwtTokenTypeConfigurationArgs struct {
	// Regular expression that identifies the claim.
	ClaimRegex pulumix.Input[string] `pulumi:"claimRegex"`
	// The group attribute field.
	GroupAttributeField pulumix.Input[string] `pulumi:"groupAttributeField"`
	// Issuer of the token.
	Issuer pulumix.Input[string] `pulumi:"issuer"`
	// Location of the key. Valid values are `URL` or `SECRET_MANAGER`
	KeyLocation pulumix.Input[string] `pulumi:"keyLocation"`
	// ARN of the secret.
	SecretsManagerArn pulumix.Input[string] `pulumi:"secretsManagerArn"`
	// Signing key URL.
	Url pulumix.Input[string] `pulumi:"url"`
	// The user name attribute field.
	UserNameAttributeField pulumix.Input[string] `pulumi:"userNameAttributeField"`
}

func (GetIndexUserTokenConfigurationJwtTokenTypeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexUserTokenConfigurationJwtTokenTypeConfiguration)(nil)).Elem()
}

func (i GetIndexUserTokenConfigurationJwtTokenTypeConfigurationArgs) ToGetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput() GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput {
	return i.ToGetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutputWithContext(context.Background())
}

func (i GetIndexUserTokenConfigurationJwtTokenTypeConfigurationArgs) ToGetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutputWithContext(ctx context.Context) GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput)
}

func (i *GetIndexUserTokenConfigurationJwtTokenTypeConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetIndexUserTokenConfigurationJwtTokenTypeConfigurationArgs] {
	return pulumix.Val(i)
}

type GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput struct{ *pulumi.OutputState }

func (GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIndexUserTokenConfigurationJwtTokenTypeConfiguration)(nil)).Elem()
}

func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) ToGetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput() GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput {
	return o
}

func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) ToGetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutputWithContext(ctx context.Context) GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput {
	return o
}

func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration] {
	return pulumix.Output[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration]{
		OutputState: o.OutputState,
	}
}

// Regular expression that identifies the claim.
func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) ClaimRegex() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration](o, func(v GetIndexUserTokenConfigurationJwtTokenTypeConfiguration) string { return v.ClaimRegex })
}

// The group attribute field.
func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) GroupAttributeField() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration](o, func(v GetIndexUserTokenConfigurationJwtTokenTypeConfiguration) string { return v.GroupAttributeField })
}

// Issuer of the token.
func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) Issuer() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration](o, func(v GetIndexUserTokenConfigurationJwtTokenTypeConfiguration) string { return v.Issuer })
}

// Location of the key. Valid values are `URL` or `SECRET_MANAGER`
func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) KeyLocation() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration](o, func(v GetIndexUserTokenConfigurationJwtTokenTypeConfiguration) string { return v.KeyLocation })
}

// ARN of the secret.
func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) SecretsManagerArn() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration](o, func(v GetIndexUserTokenConfigurationJwtTokenTypeConfiguration) string { return v.SecretsManagerArn })
}

// Signing key URL.
func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) Url() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration](o, func(v GetIndexUserTokenConfigurationJwtTokenTypeConfiguration) string { return v.Url })
}

// The user name attribute field.
func (o GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput) UserNameAttributeField() pulumix.Output[string] {
	return pulumix.Apply[GetIndexUserTokenConfigurationJwtTokenTypeConfiguration](o, func(v GetIndexUserTokenConfigurationJwtTokenTypeConfiguration) string {
		return v.UserNameAttributeField
	})
}

type GetQuerySuggestionsBlockListSourceS3Path struct {
	// Name of the S3 bucket that contains the file.
	Bucket string `pulumi:"bucket"`
	// Name of the file.
	Key string `pulumi:"key"`
}

type GetQuerySuggestionsBlockListSourceS3PathArgs struct {
	// Name of the S3 bucket that contains the file.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// Name of the file.
	Key pulumix.Input[string] `pulumi:"key"`
}

func (GetQuerySuggestionsBlockListSourceS3PathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuerySuggestionsBlockListSourceS3Path)(nil)).Elem()
}

func (i GetQuerySuggestionsBlockListSourceS3PathArgs) ToGetQuerySuggestionsBlockListSourceS3PathOutput() GetQuerySuggestionsBlockListSourceS3PathOutput {
	return i.ToGetQuerySuggestionsBlockListSourceS3PathOutputWithContext(context.Background())
}

func (i GetQuerySuggestionsBlockListSourceS3PathArgs) ToGetQuerySuggestionsBlockListSourceS3PathOutputWithContext(ctx context.Context) GetQuerySuggestionsBlockListSourceS3PathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuerySuggestionsBlockListSourceS3PathOutput)
}

func (i *GetQuerySuggestionsBlockListSourceS3PathArgs) ToOutput(ctx context.Context) pulumix.Output[*GetQuerySuggestionsBlockListSourceS3PathArgs] {
	return pulumix.Val(i)
}

type GetQuerySuggestionsBlockListSourceS3PathOutput struct{ *pulumi.OutputState }

func (GetQuerySuggestionsBlockListSourceS3PathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuerySuggestionsBlockListSourceS3Path)(nil)).Elem()
}

func (o GetQuerySuggestionsBlockListSourceS3PathOutput) ToGetQuerySuggestionsBlockListSourceS3PathOutput() GetQuerySuggestionsBlockListSourceS3PathOutput {
	return o
}

func (o GetQuerySuggestionsBlockListSourceS3PathOutput) ToGetQuerySuggestionsBlockListSourceS3PathOutputWithContext(ctx context.Context) GetQuerySuggestionsBlockListSourceS3PathOutput {
	return o
}

func (o GetQuerySuggestionsBlockListSourceS3PathOutput) ToOutput(ctx context.Context) pulumix.Output[GetQuerySuggestionsBlockListSourceS3Path] {
	return pulumix.Output[GetQuerySuggestionsBlockListSourceS3Path]{
		OutputState: o.OutputState,
	}
}

// Name of the S3 bucket that contains the file.
func (o GetQuerySuggestionsBlockListSourceS3PathOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[GetQuerySuggestionsBlockListSourceS3Path](o, func(v GetQuerySuggestionsBlockListSourceS3Path) string { return v.Bucket })
}

// Name of the file.
func (o GetQuerySuggestionsBlockListSourceS3PathOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[GetQuerySuggestionsBlockListSourceS3Path](o, func(v GetQuerySuggestionsBlockListSourceS3Path) string { return v.Key })
}

type GetThesaurusSourceS3Path struct {
	// Name of the S3 bucket that contains the file.
	Bucket string `pulumi:"bucket"`
	// Name of the file.
	Key string `pulumi:"key"`
}

type GetThesaurusSourceS3PathArgs struct {
	// Name of the S3 bucket that contains the file.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// Name of the file.
	Key pulumix.Input[string] `pulumi:"key"`
}

func (GetThesaurusSourceS3PathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThesaurusSourceS3Path)(nil)).Elem()
}

func (i GetThesaurusSourceS3PathArgs) ToGetThesaurusSourceS3PathOutput() GetThesaurusSourceS3PathOutput {
	return i.ToGetThesaurusSourceS3PathOutputWithContext(context.Background())
}

func (i GetThesaurusSourceS3PathArgs) ToGetThesaurusSourceS3PathOutputWithContext(ctx context.Context) GetThesaurusSourceS3PathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetThesaurusSourceS3PathOutput)
}

func (i *GetThesaurusSourceS3PathArgs) ToOutput(ctx context.Context) pulumix.Output[*GetThesaurusSourceS3PathArgs] {
	return pulumix.Val(i)
}

type GetThesaurusSourceS3PathOutput struct{ *pulumi.OutputState }

func (GetThesaurusSourceS3PathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThesaurusSourceS3Path)(nil)).Elem()
}

func (o GetThesaurusSourceS3PathOutput) ToGetThesaurusSourceS3PathOutput() GetThesaurusSourceS3PathOutput {
	return o
}

func (o GetThesaurusSourceS3PathOutput) ToGetThesaurusSourceS3PathOutputWithContext(ctx context.Context) GetThesaurusSourceS3PathOutput {
	return o
}

func (o GetThesaurusSourceS3PathOutput) ToOutput(ctx context.Context) pulumix.Output[GetThesaurusSourceS3Path] {
	return pulumix.Output[GetThesaurusSourceS3Path]{
		OutputState: o.OutputState,
	}
}

// Name of the S3 bucket that contains the file.
func (o GetThesaurusSourceS3PathOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[GetThesaurusSourceS3Path](o, func(v GetThesaurusSourceS3Path) string { return v.Bucket })
}

// Name of the file.
func (o GetThesaurusSourceS3PathOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[GetThesaurusSourceS3Path](o, func(v GetThesaurusSourceS3Path) string { return v.Key })
}

func init() {
	pulumi.RegisterOutputType(DataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationS3ConfigurationAccessControlListConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationS3ConfigurationDocumentsMetadataConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationWebCrawlerConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationWebCrawlerConfigurationAuthenticationConfigurationBasicAuthenticationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationWebCrawlerConfigurationProxyConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationWebCrawlerConfigurationUrlsOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationWebCrawlerConfigurationUrlsSeedUrlConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationWebCrawlerConfigurationUrlsSiteMapsConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationConditionConditionOnValueOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationInlineConfigurationTargetTargetDocumentAttributeValueOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationPostExtractionHookConfigurationInvocationConditionConditionOnValueOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionOutput{})
	pulumi.RegisterOutputType(DataSourceCustomDocumentEnrichmentConfigurationPreExtractionHookConfigurationInvocationConditionConditionOnValueOutput{})
	pulumi.RegisterOutputType(ExperienceConfigurationOutput{})
	pulumi.RegisterOutputType(ExperienceConfigurationContentSourceConfigurationOutput{})
	pulumi.RegisterOutputType(ExperienceConfigurationUserIdentityConfigurationOutput{})
	pulumi.RegisterOutputType(ExperienceEndpointOutput{})
	pulumi.RegisterOutputType(FaqS3PathOutput{})
	pulumi.RegisterOutputType(IndexCapacityUnitsOutput{})
	pulumi.RegisterOutputType(IndexDocumentMetadataConfigurationUpdateOutput{})
	pulumi.RegisterOutputType(IndexDocumentMetadataConfigurationUpdateRelevanceOutput{})
	pulumi.RegisterOutputType(IndexDocumentMetadataConfigurationUpdateSearchOutput{})
	pulumi.RegisterOutputType(IndexIndexStatisticOutput{})
	pulumi.RegisterOutputType(IndexIndexStatisticFaqStatisticOutput{})
	pulumi.RegisterOutputType(IndexIndexStatisticTextDocumentStatisticOutput{})
	pulumi.RegisterOutputType(IndexServerSideEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(IndexUserGroupResolutionConfigurationOutput{})
	pulumi.RegisterOutputType(IndexUserTokenConfigurationsOutput{})
	pulumi.RegisterOutputType(IndexUserTokenConfigurationsJsonTokenTypeConfigurationOutput{})
	pulumi.RegisterOutputType(IndexUserTokenConfigurationsJwtTokenTypeConfigurationOutput{})
	pulumi.RegisterOutputType(QuerySuggestionsBlockListSourceS3PathOutput{})
	pulumi.RegisterOutputType(ThesaurusSourceS3PathOutput{})
	pulumi.RegisterOutputType(GetExperienceConfigurationOutput{})
	pulumi.RegisterOutputType(GetExperienceConfigurationContentSourceConfigurationOutput{})
	pulumi.RegisterOutputType(GetExperienceConfigurationUserIdentityConfigurationOutput{})
	pulumi.RegisterOutputType(GetExperienceEndpointOutput{})
	pulumi.RegisterOutputType(GetFaqS3PathOutput{})
	pulumi.RegisterOutputType(GetIndexCapacityUnitOutput{})
	pulumi.RegisterOutputType(GetIndexDocumentMetadataConfigurationUpdateOutput{})
	pulumi.RegisterOutputType(GetIndexDocumentMetadataConfigurationUpdateRelevanceOutput{})
	pulumi.RegisterOutputType(GetIndexDocumentMetadataConfigurationUpdateSearchOutput{})
	pulumi.RegisterOutputType(GetIndexIndexStatisticOutput{})
	pulumi.RegisterOutputType(GetIndexIndexStatisticFaqStatisticOutput{})
	pulumi.RegisterOutputType(GetIndexIndexStatisticTextDocumentStatisticOutput{})
	pulumi.RegisterOutputType(GetIndexServerSideEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(GetIndexUserGroupResolutionConfigurationOutput{})
	pulumi.RegisterOutputType(GetIndexUserTokenConfigurationOutput{})
	pulumi.RegisterOutputType(GetIndexUserTokenConfigurationJsonTokenTypeConfigurationOutput{})
	pulumi.RegisterOutputType(GetIndexUserTokenConfigurationJwtTokenTypeConfigurationOutput{})
	pulumi.RegisterOutputType(GetQuerySuggestionsBlockListSourceS3PathOutput{})
	pulumi.RegisterOutputType(GetThesaurusSourceS3PathOutput{})
}
