// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type AmiCopyEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// ARN of the Outpost on which the snapshot is stored.
	//
	// > **Note:** You can specify `encrypted` or `snapshotId` but not both.
	OutpostArn *string `pulumi:"outpostArn"`
	// ID of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// Throughput that the EBS volume supports, in MiB/s. Only valid for `volumeType` of `gp3`.
	Throughput *int `pulumi:"throughput"`
	// Size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
	VolumeType *string `pulumi:"volumeType"`
}

type AmiCopyEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumix.Input[*bool] `pulumi:"deleteOnTermination"`
	// Path at which the device is exposed to created instances.
	DeviceName pulumix.Input[*string] `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumix.Input[*bool] `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumix.Input[*int] `pulumi:"iops"`
	// ARN of the Outpost on which the snapshot is stored.
	//
	// > **Note:** You can specify `encrypted` or `snapshotId` but not both.
	OutpostArn pulumix.Input[*string] `pulumi:"outpostArn"`
	// ID of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumix.Input[*string] `pulumi:"snapshotId"`
	// Throughput that the EBS volume supports, in MiB/s. Only valid for `volumeType` of `gp3`.
	Throughput pulumix.Input[*int] `pulumi:"throughput"`
	// Size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumix.Input[*int] `pulumi:"volumeSize"`
	// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
	VolumeType pulumix.Input[*string] `pulumi:"volumeType"`
}

func (AmiCopyEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceArgs) ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput {
	return i.ToAmiCopyEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceArgs) ToAmiCopyEbsBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceOutput)
}

func (i *AmiCopyEbsBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*AmiCopyEbsBlockDeviceArgs] {
	return pulumix.Val(i)
}

type AmiCopyEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceOutput) ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceOutput) ToAmiCopyEbsBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[AmiCopyEbsBlockDevice] {
	return pulumix.Output[AmiCopyEbsBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiCopyEbsBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[AmiCopyEbsBlockDevice](o, func(v AmiCopyEbsBlockDevice) *bool { return v.DeleteOnTermination })
}

// Path at which the device is exposed to created instances.
func (o AmiCopyEbsBlockDeviceOutput) DeviceName() pulumix.Output[*string] {
	return pulumix.Apply[AmiCopyEbsBlockDevice](o, func(v AmiCopyEbsBlockDevice) *string { return v.DeviceName })
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiCopyEbsBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[AmiCopyEbsBlockDevice](o, func(v AmiCopyEbsBlockDevice) *bool { return v.Encrypted })
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiCopyEbsBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[AmiCopyEbsBlockDevice](o, func(v AmiCopyEbsBlockDevice) *int { return v.Iops })
}

// ARN of the Outpost on which the snapshot is stored.
//
// > **Note:** You can specify `encrypted` or `snapshotId` but not both.
func (o AmiCopyEbsBlockDeviceOutput) OutpostArn() pulumix.Output[*string] {
	return pulumix.Apply[AmiCopyEbsBlockDevice](o, func(v AmiCopyEbsBlockDevice) *string { return v.OutpostArn })
}

// ID of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiCopyEbsBlockDeviceOutput) SnapshotId() pulumix.Output[*string] {
	return pulumix.Apply[AmiCopyEbsBlockDevice](o, func(v AmiCopyEbsBlockDevice) *string { return v.SnapshotId })
}

// Throughput that the EBS volume supports, in MiB/s. Only valid for `volumeType` of `gp3`.
func (o AmiCopyEbsBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[AmiCopyEbsBlockDevice](o, func(v AmiCopyEbsBlockDevice) *int { return v.Throughput })
}

// Size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiCopyEbsBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[AmiCopyEbsBlockDevice](o, func(v AmiCopyEbsBlockDevice) *int { return v.VolumeSize })
}

// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
func (o AmiCopyEbsBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[AmiCopyEbsBlockDevice](o, func(v AmiCopyEbsBlockDevice) *string { return v.VolumeType })
}

type AmiCopyEphemeralBlockDevice struct {
	// Path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

type AmiCopyEphemeralBlockDeviceArgs struct {
	// Path at which the device is exposed to created instances.
	DeviceName pulumix.Input[*string] `pulumi:"deviceName"`
	// Name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumix.Input[*string] `pulumi:"virtualName"`
}

func (AmiCopyEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceArgs) ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput {
	return i.ToAmiCopyEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceArgs) ToAmiCopyEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceOutput)
}

func (i *AmiCopyEphemeralBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*AmiCopyEphemeralBlockDeviceArgs] {
	return pulumix.Val(i)
}

type AmiCopyEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceOutput) ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceOutput) ToAmiCopyEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[AmiCopyEphemeralBlockDevice] {
	return pulumix.Output[AmiCopyEphemeralBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Path at which the device is exposed to created instances.
func (o AmiCopyEphemeralBlockDeviceOutput) DeviceName() pulumix.Output[*string] {
	return pulumix.Apply[AmiCopyEphemeralBlockDevice](o, func(v AmiCopyEphemeralBlockDevice) *string { return v.DeviceName })
}

// Name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiCopyEphemeralBlockDeviceOutput) VirtualName() pulumix.Output[*string] {
	return pulumix.Apply[AmiCopyEphemeralBlockDevice](o, func(v AmiCopyEphemeralBlockDevice) *string { return v.VirtualName })
}

type AmiEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// ARN of the Outpost on which the snapshot is stored.
	//
	// > **Note:** You can specify `encrypted` or `snapshotId` but not both.
	OutpostArn *string `pulumi:"outpostArn"`
	// ID of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// Throughput that the EBS volume supports, in MiB/s. Only valid for `volumeType` of `gp3`.
	Throughput *int `pulumi:"throughput"`
	// Size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
	VolumeType *string `pulumi:"volumeType"`
}

type AmiEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumix.Input[*bool] `pulumi:"deleteOnTermination"`
	// Path at which the device is exposed to created instances.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumix.Input[*bool] `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumix.Input[*int] `pulumi:"iops"`
	// ARN of the Outpost on which the snapshot is stored.
	//
	// > **Note:** You can specify `encrypted` or `snapshotId` but not both.
	OutpostArn pulumix.Input[*string] `pulumi:"outpostArn"`
	// ID of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumix.Input[*string] `pulumi:"snapshotId"`
	// Throughput that the EBS volume supports, in MiB/s. Only valid for `volumeType` of `gp3`.
	Throughput pulumix.Input[*int] `pulumi:"throughput"`
	// Size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumix.Input[*int] `pulumi:"volumeSize"`
	// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
	VolumeType pulumix.Input[*string] `pulumi:"volumeType"`
}

func (AmiEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return i.ToAmiEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceOutput)
}

func (i *AmiEbsBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*AmiEbsBlockDeviceArgs] {
	return pulumix.Val(i)
}

type AmiEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return o
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return o
}

func (o AmiEbsBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[AmiEbsBlockDevice] {
	return pulumix.Output[AmiEbsBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiEbsBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[AmiEbsBlockDevice](o, func(v AmiEbsBlockDevice) *bool { return v.DeleteOnTermination })
}

// Path at which the device is exposed to created instances.
func (o AmiEbsBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[AmiEbsBlockDevice](o, func(v AmiEbsBlockDevice) string { return v.DeviceName })
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiEbsBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[AmiEbsBlockDevice](o, func(v AmiEbsBlockDevice) *bool { return v.Encrypted })
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiEbsBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[AmiEbsBlockDevice](o, func(v AmiEbsBlockDevice) *int { return v.Iops })
}

// ARN of the Outpost on which the snapshot is stored.
//
// > **Note:** You can specify `encrypted` or `snapshotId` but not both.
func (o AmiEbsBlockDeviceOutput) OutpostArn() pulumix.Output[*string] {
	return pulumix.Apply[AmiEbsBlockDevice](o, func(v AmiEbsBlockDevice) *string { return v.OutpostArn })
}

// ID of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiEbsBlockDeviceOutput) SnapshotId() pulumix.Output[*string] {
	return pulumix.Apply[AmiEbsBlockDevice](o, func(v AmiEbsBlockDevice) *string { return v.SnapshotId })
}

// Throughput that the EBS volume supports, in MiB/s. Only valid for `volumeType` of `gp3`.
func (o AmiEbsBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[AmiEbsBlockDevice](o, func(v AmiEbsBlockDevice) *int { return v.Throughput })
}

// Size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiEbsBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[AmiEbsBlockDevice](o, func(v AmiEbsBlockDevice) *int { return v.VolumeSize })
}

// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
func (o AmiEbsBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[AmiEbsBlockDevice](o, func(v AmiEbsBlockDevice) *string { return v.VolumeType })
}

type AmiEphemeralBlockDevice struct {
	// Path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// Name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName string `pulumi:"virtualName"`
}

type AmiEphemeralBlockDeviceArgs struct {
	// Path at which the device is exposed to created instances.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumix.Input[string] `pulumi:"virtualName"`
}

func (AmiEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceArgs) ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput {
	return i.ToAmiEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceArgs) ToAmiEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceOutput)
}

func (i *AmiEphemeralBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*AmiEphemeralBlockDeviceArgs] {
	return pulumix.Val(i)
}

type AmiEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceOutput) ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput {
	return o
}

func (o AmiEphemeralBlockDeviceOutput) ToAmiEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceOutput {
	return o
}

func (o AmiEphemeralBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[AmiEphemeralBlockDevice] {
	return pulumix.Output[AmiEphemeralBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Path at which the device is exposed to created instances.
func (o AmiEphemeralBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[AmiEphemeralBlockDevice](o, func(v AmiEphemeralBlockDevice) string { return v.DeviceName })
}

// Name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiEphemeralBlockDeviceOutput) VirtualName() pulumix.Output[string] {
	return pulumix.Apply[AmiEphemeralBlockDevice](o, func(v AmiEphemeralBlockDevice) string { return v.VirtualName })
}

type AmiFromInstanceEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// ARN of the Outpost on which the snapshot is stored.
	//
	// > **Note:** You can specify `encrypted` or `snapshotId` but not both.
	OutpostArn *string `pulumi:"outpostArn"`
	// ID of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// Throughput that the EBS volume supports, in MiB/s. Only valid for `volumeType` of `gp3`.
	Throughput *int `pulumi:"throughput"`
	// Size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
	VolumeType *string `pulumi:"volumeType"`
}

type AmiFromInstanceEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumix.Input[*bool] `pulumi:"deleteOnTermination"`
	// Path at which the device is exposed to created instances.
	DeviceName pulumix.Input[*string] `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumix.Input[*bool] `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumix.Input[*int] `pulumi:"iops"`
	// ARN of the Outpost on which the snapshot is stored.
	//
	// > **Note:** You can specify `encrypted` or `snapshotId` but not both.
	OutpostArn pulumix.Input[*string] `pulumi:"outpostArn"`
	// ID of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumix.Input[*string] `pulumi:"snapshotId"`
	// Throughput that the EBS volume supports, in MiB/s. Only valid for `volumeType` of `gp3`.
	Throughput pulumix.Input[*int] `pulumi:"throughput"`
	// Size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumix.Input[*int] `pulumi:"volumeSize"`
	// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
	VolumeType pulumix.Input[*string] `pulumi:"volumeType"`
}

func (AmiFromInstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceOutput)
}

func (i *AmiFromInstanceEbsBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*AmiFromInstanceEbsBlockDeviceArgs] {
	return pulumix.Val(i)
}

type AmiFromInstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[AmiFromInstanceEbsBlockDevice] {
	return pulumix.Output[AmiFromInstanceEbsBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiFromInstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[AmiFromInstanceEbsBlockDevice](o, func(v AmiFromInstanceEbsBlockDevice) *bool { return v.DeleteOnTermination })
}

// Path at which the device is exposed to created instances.
func (o AmiFromInstanceEbsBlockDeviceOutput) DeviceName() pulumix.Output[*string] {
	return pulumix.Apply[AmiFromInstanceEbsBlockDevice](o, func(v AmiFromInstanceEbsBlockDevice) *string { return v.DeviceName })
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiFromInstanceEbsBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[AmiFromInstanceEbsBlockDevice](o, func(v AmiFromInstanceEbsBlockDevice) *bool { return v.Encrypted })
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiFromInstanceEbsBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[AmiFromInstanceEbsBlockDevice](o, func(v AmiFromInstanceEbsBlockDevice) *int { return v.Iops })
}

// ARN of the Outpost on which the snapshot is stored.
//
// > **Note:** You can specify `encrypted` or `snapshotId` but not both.
func (o AmiFromInstanceEbsBlockDeviceOutput) OutpostArn() pulumix.Output[*string] {
	return pulumix.Apply[AmiFromInstanceEbsBlockDevice](o, func(v AmiFromInstanceEbsBlockDevice) *string { return v.OutpostArn })
}

// ID of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiFromInstanceEbsBlockDeviceOutput) SnapshotId() pulumix.Output[*string] {
	return pulumix.Apply[AmiFromInstanceEbsBlockDevice](o, func(v AmiFromInstanceEbsBlockDevice) *string { return v.SnapshotId })
}

// Throughput that the EBS volume supports, in MiB/s. Only valid for `volumeType` of `gp3`.
func (o AmiFromInstanceEbsBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[AmiFromInstanceEbsBlockDevice](o, func(v AmiFromInstanceEbsBlockDevice) *int { return v.Throughput })
}

// Size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[AmiFromInstanceEbsBlockDevice](o, func(v AmiFromInstanceEbsBlockDevice) *int { return v.VolumeSize })
}

// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[AmiFromInstanceEbsBlockDevice](o, func(v AmiFromInstanceEbsBlockDevice) *string { return v.VolumeType })
}

type AmiFromInstanceEphemeralBlockDevice struct {
	// Path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

type AmiFromInstanceEphemeralBlockDeviceArgs struct {
	// Path at which the device is exposed to created instances.
	DeviceName pulumix.Input[*string] `pulumi:"deviceName"`
	// Name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumix.Input[*string] `pulumi:"virtualName"`
}

func (AmiFromInstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceArgs) ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceArgs) ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceOutput)
}

func (i *AmiFromInstanceEphemeralBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*AmiFromInstanceEphemeralBlockDeviceArgs] {
	return pulumix.Val(i)
}

type AmiFromInstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceOutput) ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceOutput) ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[AmiFromInstanceEphemeralBlockDevice] {
	return pulumix.Output[AmiFromInstanceEphemeralBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Path at which the device is exposed to created instances.
func (o AmiFromInstanceEphemeralBlockDeviceOutput) DeviceName() pulumix.Output[*string] {
	return pulumix.Apply[AmiFromInstanceEphemeralBlockDevice](o, func(v AmiFromInstanceEphemeralBlockDevice) *string { return v.DeviceName })
}

// Name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiFromInstanceEphemeralBlockDeviceOutput) VirtualName() pulumix.Output[*string] {
	return pulumix.Apply[AmiFromInstanceEphemeralBlockDevice](o, func(v AmiFromInstanceEphemeralBlockDevice) *string { return v.VirtualName })
}

type DefaultNetworkAclEgress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	//
	// > For more information on ICMP types and codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all' protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	//
	// The following arguments are optional:
	ToPort int `pulumi:"toPort"`
}

type DefaultNetworkAclEgressArgs struct {
	// The action to take.
	Action pulumix.Input[string] `pulumi:"action"`
	// The CIDR block to match. This must be a valid network mask.
	CidrBlock pulumix.Input[*string] `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumix.Input[*int] `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumix.Input[*int] `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	//
	// > For more information on ICMP types and codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
	Ipv6CidrBlock pulumix.Input[*string] `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all' protocol, you must specify a from and to port of 0.
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumix.Input[int] `pulumi:"ruleNo"`
	// The to port to match.
	//
	// The following arguments are optional:
	ToPort pulumix.Input[int] `pulumi:"toPort"`
}

func (DefaultNetworkAclEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return i.ToDefaultNetworkAclEgressOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressOutput)
}

func (i *DefaultNetworkAclEgressArgs) ToOutput(ctx context.Context) pulumix.Output[*DefaultNetworkAclEgressArgs] {
	return pulumix.Val(i)
}

type DefaultNetworkAclEgressOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return o
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return o
}

func (o DefaultNetworkAclEgressOutput) ToOutput(ctx context.Context) pulumix.Output[DefaultNetworkAclEgress] {
	return pulumix.Output[DefaultNetworkAclEgress]{
		OutputState: o.OutputState,
	}
}

// The action to take.
func (o DefaultNetworkAclEgressOutput) Action() pulumix.Output[string] {
	return pulumix.Apply[DefaultNetworkAclEgress](o, func(v DefaultNetworkAclEgress) string { return v.Action })
}

// The CIDR block to match. This must be a valid network mask.
func (o DefaultNetworkAclEgressOutput) CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[DefaultNetworkAclEgress](o, func(v DefaultNetworkAclEgress) *string { return v.CidrBlock })
}

// The from port to match.
func (o DefaultNetworkAclEgressOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[DefaultNetworkAclEgress](o, func(v DefaultNetworkAclEgress) int { return v.FromPort })
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpCode() pulumix.Output[*int] {
	return pulumix.Apply[DefaultNetworkAclEgress](o, func(v DefaultNetworkAclEgress) *int { return v.IcmpCode })
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpType() pulumix.Output[*int] {
	return pulumix.Apply[DefaultNetworkAclEgress](o, func(v DefaultNetworkAclEgress) *int { return v.IcmpType })
}

// The IPv6 CIDR block.
//
// > For more information on ICMP types and codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
func (o DefaultNetworkAclEgressOutput) Ipv6CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[DefaultNetworkAclEgress](o, func(v DefaultNetworkAclEgress) *string { return v.Ipv6CidrBlock })
}

// The protocol to match. If using the -1 'all' protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclEgressOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[DefaultNetworkAclEgress](o, func(v DefaultNetworkAclEgress) string { return v.Protocol })
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclEgressOutput) RuleNo() pulumix.Output[int] {
	return pulumix.Apply[DefaultNetworkAclEgress](o, func(v DefaultNetworkAclEgress) int { return v.RuleNo })
}

// The to port to match.
//
// The following arguments are optional:
func (o DefaultNetworkAclEgressOutput) ToPort() pulumix.Output[int] {
	return pulumix.Apply[DefaultNetworkAclEgress](o, func(v DefaultNetworkAclEgress) int { return v.ToPort })
}

type DefaultNetworkAclIngress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	//
	// > For more information on ICMP types and codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all' protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	//
	// The following arguments are optional:
	ToPort int `pulumi:"toPort"`
}

type DefaultNetworkAclIngressArgs struct {
	// The action to take.
	Action pulumix.Input[string] `pulumi:"action"`
	// The CIDR block to match. This must be a valid network mask.
	CidrBlock pulumix.Input[*string] `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumix.Input[*int] `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumix.Input[*int] `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	//
	// > For more information on ICMP types and codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
	Ipv6CidrBlock pulumix.Input[*string] `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all' protocol, you must specify a from and to port of 0.
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumix.Input[int] `pulumi:"ruleNo"`
	// The to port to match.
	//
	// The following arguments are optional:
	ToPort pulumix.Input[int] `pulumi:"toPort"`
}

func (DefaultNetworkAclIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngress)(nil)).Elem()
}

func (i DefaultNetworkAclIngressArgs) ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput {
	return i.ToDefaultNetworkAclIngressOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressArgs) ToDefaultNetworkAclIngressOutputWithContext(ctx context.Context) DefaultNetworkAclIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressOutput)
}

func (i *DefaultNetworkAclIngressArgs) ToOutput(ctx context.Context) pulumix.Output[*DefaultNetworkAclIngressArgs] {
	return pulumix.Val(i)
}

type DefaultNetworkAclIngressOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngress)(nil)).Elem()
}

func (o DefaultNetworkAclIngressOutput) ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput {
	return o
}

func (o DefaultNetworkAclIngressOutput) ToDefaultNetworkAclIngressOutputWithContext(ctx context.Context) DefaultNetworkAclIngressOutput {
	return o
}

func (o DefaultNetworkAclIngressOutput) ToOutput(ctx context.Context) pulumix.Output[DefaultNetworkAclIngress] {
	return pulumix.Output[DefaultNetworkAclIngress]{
		OutputState: o.OutputState,
	}
}

// The action to take.
func (o DefaultNetworkAclIngressOutput) Action() pulumix.Output[string] {
	return pulumix.Apply[DefaultNetworkAclIngress](o, func(v DefaultNetworkAclIngress) string { return v.Action })
}

// The CIDR block to match. This must be a valid network mask.
func (o DefaultNetworkAclIngressOutput) CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[DefaultNetworkAclIngress](o, func(v DefaultNetworkAclIngress) *string { return v.CidrBlock })
}

// The from port to match.
func (o DefaultNetworkAclIngressOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[DefaultNetworkAclIngress](o, func(v DefaultNetworkAclIngress) int { return v.FromPort })
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclIngressOutput) IcmpCode() pulumix.Output[*int] {
	return pulumix.Apply[DefaultNetworkAclIngress](o, func(v DefaultNetworkAclIngress) *int { return v.IcmpCode })
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclIngressOutput) IcmpType() pulumix.Output[*int] {
	return pulumix.Apply[DefaultNetworkAclIngress](o, func(v DefaultNetworkAclIngress) *int { return v.IcmpType })
}

// The IPv6 CIDR block.
//
// > For more information on ICMP types and codes, see [Internet Control Message Protocol (ICMP) Parameters](https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
func (o DefaultNetworkAclIngressOutput) Ipv6CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[DefaultNetworkAclIngress](o, func(v DefaultNetworkAclIngress) *string { return v.Ipv6CidrBlock })
}

// The protocol to match. If using the -1 'all' protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclIngressOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[DefaultNetworkAclIngress](o, func(v DefaultNetworkAclIngress) string { return v.Protocol })
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclIngressOutput) RuleNo() pulumix.Output[int] {
	return pulumix.Apply[DefaultNetworkAclIngress](o, func(v DefaultNetworkAclIngress) int { return v.RuleNo })
}

// The to port to match.
//
// The following arguments are optional:
func (o DefaultNetworkAclIngressOutput) ToPort() pulumix.Output[int] {
	return pulumix.Apply[DefaultNetworkAclIngress](o, func(v DefaultNetworkAclIngress) int { return v.ToPort })
}

type DefaultRouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The Amazon Resource Name (ARN) of a core network.
	CoreNetworkArn *string `pulumi:"coreNetworkArn"`
	// The ID of a managed prefix list destination of the route.
	//
	// One of the following target arguments must be supplied:
	DestinationPrefixListId *string `pulumi:"destinationPrefixListId"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC Endpoint. This route must be removed prior to VPC Endpoint deletion.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
	// Identifier of a VPC peering connection.
	//
	// Note that the default route, mapping the VPC's CIDR block to "local", is created implicitly and cannot be specified.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

type DefaultRouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumix.Input[*string] `pulumi:"cidrBlock"`
	// The Amazon Resource Name (ARN) of a core network.
	CoreNetworkArn pulumix.Input[*string] `pulumi:"coreNetworkArn"`
	// The ID of a managed prefix list destination of the route.
	//
	// One of the following target arguments must be supplied:
	DestinationPrefixListId pulumix.Input[*string] `pulumi:"destinationPrefixListId"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumix.Input[*string] `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumix.Input[*string] `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumix.Input[*string] `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock pulumix.Input[*string] `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumix.Input[*string] `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumix.Input[*string] `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumix.Input[*string] `pulumi:"transitGatewayId"`
	// Identifier of a VPC Endpoint. This route must be removed prior to VPC Endpoint deletion.
	VpcEndpointId pulumix.Input[*string] `pulumi:"vpcEndpointId"`
	// Identifier of a VPC peering connection.
	//
	// Note that the default route, mapping the VPC's CIDR block to "local", is created implicitly and cannot be specified.
	VpcPeeringConnectionId pulumix.Input[*string] `pulumi:"vpcPeeringConnectionId"`
}

func (DefaultRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRoute)(nil)).Elem()
}

func (i DefaultRouteTableRouteArgs) ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput {
	return i.ToDefaultRouteTableRouteOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteArgs) ToDefaultRouteTableRouteOutputWithContext(ctx context.Context) DefaultRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteOutput)
}

func (i *DefaultRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*DefaultRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type DefaultRouteTableRouteOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRoute)(nil)).Elem()
}

func (o DefaultRouteTableRouteOutput) ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput {
	return o
}

func (o DefaultRouteTableRouteOutput) ToDefaultRouteTableRouteOutputWithContext(ctx context.Context) DefaultRouteTableRouteOutput {
	return o
}

func (o DefaultRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[DefaultRouteTableRoute] {
	return pulumix.Output[DefaultRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

// The CIDR block of the route.
func (o DefaultRouteTableRouteOutput) CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.CidrBlock })
}

// The Amazon Resource Name (ARN) of a core network.
func (o DefaultRouteTableRouteOutput) CoreNetworkArn() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.CoreNetworkArn })
}

// The ID of a managed prefix list destination of the route.
//
// One of the following target arguments must be supplied:
func (o DefaultRouteTableRouteOutput) DestinationPrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.DestinationPrefixListId })
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o DefaultRouteTableRouteOutput) EgressOnlyGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.EgressOnlyGatewayId })
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o DefaultRouteTableRouteOutput) GatewayId() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.GatewayId })
}

// Identifier of an EC2 instance.
func (o DefaultRouteTableRouteOutput) InstanceId() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.InstanceId })
}

// The Ipv6 CIDR block of the route
func (o DefaultRouteTableRouteOutput) Ipv6CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.Ipv6CidrBlock })
}

// Identifier of a VPC NAT gateway.
func (o DefaultRouteTableRouteOutput) NatGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.NatGatewayId })
}

// Identifier of an EC2 network interface.
func (o DefaultRouteTableRouteOutput) NetworkInterfaceId() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.NetworkInterfaceId })
}

// Identifier of an EC2 Transit Gateway.
func (o DefaultRouteTableRouteOutput) TransitGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.TransitGatewayId })
}

// Identifier of a VPC Endpoint. This route must be removed prior to VPC Endpoint deletion.
func (o DefaultRouteTableRouteOutput) VpcEndpointId() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.VpcEndpointId })
}

// Identifier of a VPC peering connection.
//
// Note that the default route, mapping the VPC's CIDR block to "local", is created implicitly and cannot be specified.
func (o DefaultRouteTableRouteOutput) VpcPeeringConnectionId() pulumix.Output[*string] {
	return pulumix.Apply[DefaultRouteTableRoute](o, func(v DefaultRouteTableRoute) *string { return v.VpcPeeringConnectionId })
}

type DefaultSecurityGroupEgress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this rule.
	Description *string `pulumi:"description"`
	// Start port (or ICMP type number if protocol is `icmp`)
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// Protocol. If you select a protocol of "-1" (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to `0`. If not `icmp`, `tcp`, `udp`, or `-1` use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	Protocol string `pulumi:"protocol"`
	// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Whether the security group itself will be added as a source to this egress rule.
	Self *bool `pulumi:"self"`
	// End range port (or ICMP code if protocol is `icmp`).
	ToPort int `pulumi:"toPort"`
}

type DefaultSecurityGroupEgressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumix.Input[[]string] `pulumi:"cidrBlocks"`
	// Description of this rule.
	Description pulumix.Input[*string] `pulumi:"description"`
	// Start port (or ICMP type number if protocol is `icmp`)
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumix.Input[[]string] `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumix.Input[[]string] `pulumi:"prefixListIds"`
	// Protocol. If you select a protocol of "-1" (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to `0`. If not `icmp`, `tcp`, `udp`, or `-1` use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
	SecurityGroups pulumix.Input[[]string] `pulumi:"securityGroups"`
	// Whether the security group itself will be added as a source to this egress rule.
	Self pulumix.Input[*bool] `pulumi:"self"`
	// End range port (or ICMP code if protocol is `icmp`).
	ToPort pulumix.Input[int] `pulumi:"toPort"`
}

func (DefaultSecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgress)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressArgs) ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput {
	return i.ToDefaultSecurityGroupEgressOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressArgs) ToDefaultSecurityGroupEgressOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressOutput)
}

func (i *DefaultSecurityGroupEgressArgs) ToOutput(ctx context.Context) pulumix.Output[*DefaultSecurityGroupEgressArgs] {
	return pulumix.Val(i)
}

type DefaultSecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgress)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressOutput) ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput {
	return o
}

func (o DefaultSecurityGroupEgressOutput) ToDefaultSecurityGroupEgressOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressOutput {
	return o
}

func (o DefaultSecurityGroupEgressOutput) ToOutput(ctx context.Context) pulumix.Output[DefaultSecurityGroupEgress] {
	return pulumix.Output[DefaultSecurityGroupEgress]{
		OutputState: o.OutputState,
	}
}

// List of CIDR blocks.
func (o DefaultSecurityGroupEgressOutput) CidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DefaultSecurityGroupEgress](o, func(v DefaultSecurityGroupEgress) []string { return v.CidrBlocks })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Description of this rule.
func (o DefaultSecurityGroupEgressOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[DefaultSecurityGroupEgress](o, func(v DefaultSecurityGroupEgress) *string { return v.Description })
}

// Start port (or ICMP type number if protocol is `icmp`)
func (o DefaultSecurityGroupEgressOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[DefaultSecurityGroupEgress](o, func(v DefaultSecurityGroupEgress) int { return v.FromPort })
}

// List of IPv6 CIDR blocks.
func (o DefaultSecurityGroupEgressOutput) Ipv6CidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DefaultSecurityGroupEgress](o, func(v DefaultSecurityGroupEgress) []string { return v.Ipv6CidrBlocks })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o DefaultSecurityGroupEgressOutput) PrefixListIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DefaultSecurityGroupEgress](o, func(v DefaultSecurityGroupEgress) []string { return v.PrefixListIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Protocol. If you select a protocol of "-1" (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to `0`. If not `icmp`, `tcp`, `udp`, or `-1` use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
func (o DefaultSecurityGroupEgressOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[DefaultSecurityGroupEgress](o, func(v DefaultSecurityGroupEgress) string { return v.Protocol })
}

// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
func (o DefaultSecurityGroupEgressOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DefaultSecurityGroupEgress](o, func(v DefaultSecurityGroupEgress) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Whether the security group itself will be added as a source to this egress rule.
func (o DefaultSecurityGroupEgressOutput) Self() pulumix.Output[*bool] {
	return pulumix.Apply[DefaultSecurityGroupEgress](o, func(v DefaultSecurityGroupEgress) *bool { return v.Self })
}

// End range port (or ICMP code if protocol is `icmp`).
func (o DefaultSecurityGroupEgressOutput) ToPort() pulumix.Output[int] {
	return pulumix.Apply[DefaultSecurityGroupEgress](o, func(v DefaultSecurityGroupEgress) int { return v.ToPort })
}

type DefaultSecurityGroupIngress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this rule.
	Description *string `pulumi:"description"`
	// Start port (or ICMP type number if protocol is `icmp`)
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// Protocol. If you select a protocol of "-1" (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to `0`. If not `icmp`, `tcp`, `udp`, or `-1` use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	Protocol string `pulumi:"protocol"`
	// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Whether the security group itself will be added as a source to this egress rule.
	Self *bool `pulumi:"self"`
	// End range port (or ICMP code if protocol is `icmp`).
	ToPort int `pulumi:"toPort"`
}

type DefaultSecurityGroupIngressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumix.Input[[]string] `pulumi:"cidrBlocks"`
	// Description of this rule.
	Description pulumix.Input[*string] `pulumi:"description"`
	// Start port (or ICMP type number if protocol is `icmp`)
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumix.Input[[]string] `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumix.Input[[]string] `pulumi:"prefixListIds"`
	// Protocol. If you select a protocol of "-1" (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to `0`. If not `icmp`, `tcp`, `udp`, or `-1` use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
	SecurityGroups pulumix.Input[[]string] `pulumi:"securityGroups"`
	// Whether the security group itself will be added as a source to this egress rule.
	Self pulumix.Input[*bool] `pulumi:"self"`
	// End range port (or ICMP code if protocol is `icmp`).
	ToPort pulumix.Input[int] `pulumi:"toPort"`
}

func (DefaultSecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngress)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressArgs) ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput {
	return i.ToDefaultSecurityGroupIngressOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressArgs) ToDefaultSecurityGroupIngressOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressOutput)
}

func (i *DefaultSecurityGroupIngressArgs) ToOutput(ctx context.Context) pulumix.Output[*DefaultSecurityGroupIngressArgs] {
	return pulumix.Val(i)
}

type DefaultSecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngress)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressOutput) ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput {
	return o
}

func (o DefaultSecurityGroupIngressOutput) ToDefaultSecurityGroupIngressOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressOutput {
	return o
}

func (o DefaultSecurityGroupIngressOutput) ToOutput(ctx context.Context) pulumix.Output[DefaultSecurityGroupIngress] {
	return pulumix.Output[DefaultSecurityGroupIngress]{
		OutputState: o.OutputState,
	}
}

// List of CIDR blocks.
func (o DefaultSecurityGroupIngressOutput) CidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DefaultSecurityGroupIngress](o, func(v DefaultSecurityGroupIngress) []string { return v.CidrBlocks })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Description of this rule.
func (o DefaultSecurityGroupIngressOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[DefaultSecurityGroupIngress](o, func(v DefaultSecurityGroupIngress) *string { return v.Description })
}

// Start port (or ICMP type number if protocol is `icmp`)
func (o DefaultSecurityGroupIngressOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[DefaultSecurityGroupIngress](o, func(v DefaultSecurityGroupIngress) int { return v.FromPort })
}

// List of IPv6 CIDR blocks.
func (o DefaultSecurityGroupIngressOutput) Ipv6CidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DefaultSecurityGroupIngress](o, func(v DefaultSecurityGroupIngress) []string { return v.Ipv6CidrBlocks })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o DefaultSecurityGroupIngressOutput) PrefixListIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DefaultSecurityGroupIngress](o, func(v DefaultSecurityGroupIngress) []string { return v.PrefixListIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Protocol. If you select a protocol of "-1" (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to `0`. If not `icmp`, `tcp`, `udp`, or `-1` use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
func (o DefaultSecurityGroupIngressOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[DefaultSecurityGroupIngress](o, func(v DefaultSecurityGroupIngress) string { return v.Protocol })
}

// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
func (o DefaultSecurityGroupIngressOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DefaultSecurityGroupIngress](o, func(v DefaultSecurityGroupIngress) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Whether the security group itself will be added as a source to this egress rule.
func (o DefaultSecurityGroupIngressOutput) Self() pulumix.Output[*bool] {
	return pulumix.Apply[DefaultSecurityGroupIngress](o, func(v DefaultSecurityGroupIngress) *bool { return v.Self })
}

// End range port (or ICMP code if protocol is `icmp`).
func (o DefaultSecurityGroupIngressOutput) ToPort() pulumix.Output[int] {
	return pulumix.Apply[DefaultSecurityGroupIngress](o, func(v DefaultSecurityGroupIngress) int { return v.ToPort })
}

type FleetFleetInstanceSet struct {
	// The IDs of the instances.
	InstanceIds []string `pulumi:"instanceIds"`
	// Instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
	Lifecycle *string `pulumi:"lifecycle"`
	// The value is `Windows` for Windows instances. Otherwise, the value is blank.
	Platform *string `pulumi:"platform"`
}

type FleetFleetInstanceSetArgs struct {
	// The IDs of the instances.
	InstanceIds pulumix.Input[[]string] `pulumi:"instanceIds"`
	// Instance type.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
	Lifecycle pulumix.Input[*string] `pulumi:"lifecycle"`
	// The value is `Windows` for Windows instances. Otherwise, the value is blank.
	Platform pulumix.Input[*string] `pulumi:"platform"`
}

func (FleetFleetInstanceSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetFleetInstanceSet)(nil)).Elem()
}

func (i FleetFleetInstanceSetArgs) ToFleetFleetInstanceSetOutput() FleetFleetInstanceSetOutput {
	return i.ToFleetFleetInstanceSetOutputWithContext(context.Background())
}

func (i FleetFleetInstanceSetArgs) ToFleetFleetInstanceSetOutputWithContext(ctx context.Context) FleetFleetInstanceSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetFleetInstanceSetOutput)
}

func (i *FleetFleetInstanceSetArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetFleetInstanceSetArgs] {
	return pulumix.Val(i)
}

type FleetFleetInstanceSetOutput struct{ *pulumi.OutputState }

func (FleetFleetInstanceSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetFleetInstanceSet)(nil)).Elem()
}

func (o FleetFleetInstanceSetOutput) ToFleetFleetInstanceSetOutput() FleetFleetInstanceSetOutput {
	return o
}

func (o FleetFleetInstanceSetOutput) ToFleetFleetInstanceSetOutputWithContext(ctx context.Context) FleetFleetInstanceSetOutput {
	return o
}

func (o FleetFleetInstanceSetOutput) ToOutput(ctx context.Context) pulumix.Output[FleetFleetInstanceSet] {
	return pulumix.Output[FleetFleetInstanceSet]{
		OutputState: o.OutputState,
	}
}

// The IDs of the instances.
func (o FleetFleetInstanceSetOutput) InstanceIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FleetFleetInstanceSet](o, func(v FleetFleetInstanceSet) []string { return v.InstanceIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Instance type.
func (o FleetFleetInstanceSetOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[FleetFleetInstanceSet](o, func(v FleetFleetInstanceSet) *string { return v.InstanceType })
}

// Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
func (o FleetFleetInstanceSetOutput) Lifecycle() pulumix.Output[*string] {
	return pulumix.Apply[FleetFleetInstanceSet](o, func(v FleetFleetInstanceSet) *string { return v.Lifecycle })
}

// The value is `Windows` for Windows instances. Otherwise, the value is blank.
func (o FleetFleetInstanceSetOutput) Platform() pulumix.Output[*string] {
	return pulumix.Apply[FleetFleetInstanceSet](o, func(v FleetFleetInstanceSet) *string { return v.Platform })
}

type FleetLaunchTemplateConfig struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification *FleetLaunchTemplateConfigLaunchTemplateSpecification `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides []FleetLaunchTemplateConfigOverride `pulumi:"overrides"`
}

type FleetLaunchTemplateConfigArgs struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification pulumix.Input[*FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs] `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides pulumix.Input[[]*FleetLaunchTemplateConfigOverrideArgs] `pulumi:"overrides"`
}

func (FleetLaunchTemplateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfig)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput {
	return i.ToFleetLaunchTemplateConfigOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOutput)
}

func (i *FleetLaunchTemplateConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfig)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput {
	return o
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOutput {
	return o
}

func (o FleetLaunchTemplateConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfig] {
	return pulumix.Output[FleetLaunchTemplateConfig]{
		OutputState: o.OutputState,
	}
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigOutput) LaunchTemplateSpecification() pulumix.GPtrOutput[FleetLaunchTemplateConfigLaunchTemplateSpecification, FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfig](o, func(v FleetLaunchTemplateConfig) *FleetLaunchTemplateConfigLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigLaunchTemplateSpecification, FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput]{OutputState: value.OutputState}
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigOutput) Overrides() pulumix.GArrayOutput[FleetLaunchTemplateConfigOverride, FleetLaunchTemplateConfigOverrideOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfig](o, func(v FleetLaunchTemplateConfig) []FleetLaunchTemplateConfigOverride { return v.Overrides })
	return pulumix.GArrayOutput[FleetLaunchTemplateConfigOverride, FleetLaunchTemplateConfigOverrideOutput]{OutputState: value.OutputState}
}

type FleetLaunchTemplateConfigLaunchTemplateSpecification struct {
	// The ID of the launch template.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// The name of the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// The launch template version number, `$Latest`, or `$Default.`
	Version string `pulumi:"version"`
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs struct {
	// The ID of the launch template.
	LaunchTemplateId pulumix.Input[*string] `pulumi:"launchTemplateId"`
	// The name of the launch template.
	LaunchTemplateName pulumix.Input[*string] `pulumi:"launchTemplateName"`
	// The launch template version number, `$Latest`, or `$Default.`
	Version pulumix.Input[string] `pulumi:"version"`
}

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return i.ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

func (i *FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigLaunchTemplateSpecification] {
	return pulumix.Output[FleetLaunchTemplateConfigLaunchTemplateSpecification]{
		OutputState: o.OutputState,
	}
}

// The ID of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) LaunchTemplateId() pulumix.Output[*string] {
	return pulumix.Apply[FleetLaunchTemplateConfigLaunchTemplateSpecification](o, func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.LaunchTemplateId })
}

// The name of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) LaunchTemplateName() pulumix.Output[*string] {
	return pulumix.Apply[FleetLaunchTemplateConfigLaunchTemplateSpecification](o, func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.LaunchTemplateName })
}

// The launch template version number, `$Latest`, or `$Default.`
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) Version() pulumix.Output[string] {
	return pulumix.Apply[FleetLaunchTemplateConfigLaunchTemplateSpecification](o, func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) string { return v.Version })
}

type FleetLaunchTemplateConfigOverride struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Override the instance type in the Launch Template with instance types that satisfy the requirements.
	InstanceRequirements *FleetLaunchTemplateConfigOverrideInstanceRequirements `pulumi:"instanceRequirements"`
	// Instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice *string `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority *float64 `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId *string `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity *float64 `pulumi:"weightedCapacity"`
}

type FleetLaunchTemplateConfigOverrideArgs struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone pulumix.Input[*string] `pulumi:"availabilityZone"`
	// Override the instance type in the Launch Template with instance types that satisfy the requirements.
	InstanceRequirements pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs] `pulumi:"instanceRequirements"`
	// Instance type.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice pulumix.Input[*string] `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority pulumix.Input[*float64] `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId pulumix.Input[*string] `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity pulumix.Input[*float64] `pulumi:"weightedCapacity"`
}

func (FleetLaunchTemplateConfigOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideArgs) ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput {
	return i.ToFleetLaunchTemplateConfigOverrideOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideArgs) ToFleetLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideOutput)
}

func (i *FleetLaunchTemplateConfigOverrideArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideOutput) ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideOutput) ToFleetLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverride] {
	return pulumix.Output[FleetLaunchTemplateConfigOverride]{
		OutputState: o.OutputState,
	}
}

// Availability Zone in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideOutput) AvailabilityZone() pulumix.Output[*string] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverride](o, func(v FleetLaunchTemplateConfigOverride) *string { return v.AvailabilityZone })
}

// Override the instance type in the Launch Template with instance types that satisfy the requirements.
func (o FleetLaunchTemplateConfigOverrideOutput) InstanceRequirements() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirements, FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverride](o, func(v FleetLaunchTemplateConfigOverride) *FleetLaunchTemplateConfigOverrideInstanceRequirements {
		return v.InstanceRequirements
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirements, FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput]{OutputState: value.OutputState}
}

// Instance type.
func (o FleetLaunchTemplateConfigOverrideOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverride](o, func(v FleetLaunchTemplateConfigOverride) *string { return v.InstanceType })
}

// Maximum price per unit hour that you are willing to pay for a Spot Instance.
func (o FleetLaunchTemplateConfigOverrideOutput) MaxPrice() pulumix.Output[*string] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverride](o, func(v FleetLaunchTemplateConfigOverride) *string { return v.MaxPrice })
}

// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
func (o FleetLaunchTemplateConfigOverrideOutput) Priority() pulumix.Output[*float64] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverride](o, func(v FleetLaunchTemplateConfigOverride) *float64 { return v.Priority })
}

// ID of the subnet in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideOutput) SubnetId() pulumix.Output[*string] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverride](o, func(v FleetLaunchTemplateConfigOverride) *string { return v.SubnetId })
}

// Number of units provided by the specified instance type.
func (o FleetLaunchTemplateConfigOverrideOutput) WeightedCapacity() pulumix.Output[*float64] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverride](o, func(v FleetLaunchTemplateConfigOverride) *float64 { return v.WeightedCapacity })
}

type FleetLaunchTemplateConfigOverrideInstanceRequirements struct {
	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum limits.
	AcceleratorCount *FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount `pulumi:"acceleratorCount"`
	// List of accelerator manufacturer names. Default is any manufacturer.
	AcceleratorManufacturers []string `pulumi:"acceleratorManufacturers"`
	// List of accelerator names. Default is any acclerator.
	AcceleratorNames []string `pulumi:"acceleratorNames"`
	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	AcceleratorTotalMemoryMib *FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib `pulumi:"acceleratorTotalMemoryMib"`
	// The accelerator types that must be on the instance type. Default is any accelerator type.
	AcceleratorTypes []string `pulumi:"acceleratorTypes"`
	// The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards,represented by an asterisk (\*). The following are examples: `c5*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types. Default is any instance type.
	//
	// If you specify `AllowedInstanceTypes`, you can't specify `ExcludedInstanceTypes`.
	AllowedInstanceTypes []string `pulumi:"allowedInstanceTypes"`
	// Indicate whether bare metal instace types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BareMetal *string `pulumi:"bareMetal"`
	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	BaselineEbsBandwidthMbps *FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps `pulumi:"baselineEbsBandwidthMbps"`
	// Indicates whether burstable performance T instance types are `included`, `excluded`, or `required`. Default is `excluded`.
	BurstablePerformance *string `pulumi:"burstablePerformance"`
	// The CPU manufacturers to include. Default is any manufacturer.
	// > **NOTE:** Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
	CpuManufacturers []string `pulumi:"cpuManufacturers"`
	// The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (\*). The following are examples: `c5*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	//
	// If you specify `AllowedInstanceTypes`, you can't specify `ExcludedInstanceTypes`.
	ExcludedInstanceTypes []string `pulumi:"excludedInstanceTypes"`
	// Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Valid values are `current` and `previous`. Default is `current` and `previous` generation instance types.
	InstanceGenerations []string `pulumi:"instanceGenerations"`
	// Indicate whether instance types with local storage volumes are `included`, `excluded`, or `required`. Default is `included`.
	LocalStorage *string `pulumi:"localStorage"`
	// List of local storage type names. Valid values are `hdd` and `ssd`. Default any storage type.
	LocalStorageTypes []string `pulumi:"localStorageTypes"`
	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	MemoryGibPerVcpu *FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu `pulumi:"memoryGibPerVcpu"`
	// The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.
	MemoryMib FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib `pulumi:"memoryMib"`
	// The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is No minimum or maximum.
	NetworkBandwidthGbps *FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps `pulumi:"networkBandwidthGbps"`
	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	NetworkInterfaceCount *FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount `pulumi:"networkInterfaceCount"`
	// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	//
	// If you set `targetCapacityUnitType` to `vcpu` or `memory-mib`, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.
	OnDemandMaxPricePercentageOverLowestPrice *int `pulumi:"onDemandMaxPricePercentageOverLowestPrice"`
	// Indicate whether instance types must support On-Demand Instance Hibernation, either `true` or `false`. Default is `false`.
	RequireHibernateSupport *bool `pulumi:"requireHibernateSupport"`
	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	SpotMaxPricePercentageOverLowestPrice *int `pulumi:"spotMaxPricePercentageOverLowestPrice"`
	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	TotalLocalStorageGb *FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb `pulumi:"totalLocalStorageGb"`
	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	VcpuCount FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount `pulumi:"vcpuCount"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs struct {
	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum limits.
	AcceleratorCount pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs] `pulumi:"acceleratorCount"`
	// List of accelerator manufacturer names. Default is any manufacturer.
	AcceleratorManufacturers pulumix.Input[[]string] `pulumi:"acceleratorManufacturers"`
	// List of accelerator names. Default is any acclerator.
	AcceleratorNames pulumix.Input[[]string] `pulumi:"acceleratorNames"`
	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	AcceleratorTotalMemoryMib pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs] `pulumi:"acceleratorTotalMemoryMib"`
	// The accelerator types that must be on the instance type. Default is any accelerator type.
	AcceleratorTypes pulumix.Input[[]string] `pulumi:"acceleratorTypes"`
	// The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards,represented by an asterisk (\*). The following are examples: `c5*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types. Default is any instance type.
	//
	// If you specify `AllowedInstanceTypes`, you can't specify `ExcludedInstanceTypes`.
	AllowedInstanceTypes pulumix.Input[[]string] `pulumi:"allowedInstanceTypes"`
	// Indicate whether bare metal instace types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BareMetal pulumix.Input[*string] `pulumi:"bareMetal"`
	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	BaselineEbsBandwidthMbps pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs] `pulumi:"baselineEbsBandwidthMbps"`
	// Indicates whether burstable performance T instance types are `included`, `excluded`, or `required`. Default is `excluded`.
	BurstablePerformance pulumix.Input[*string] `pulumi:"burstablePerformance"`
	// The CPU manufacturers to include. Default is any manufacturer.
	// > **NOTE:** Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
	CpuManufacturers pulumix.Input[[]string] `pulumi:"cpuManufacturers"`
	// The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (\*). The following are examples: `c5*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	//
	// If you specify `AllowedInstanceTypes`, you can't specify `ExcludedInstanceTypes`.
	ExcludedInstanceTypes pulumix.Input[[]string] `pulumi:"excludedInstanceTypes"`
	// Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Valid values are `current` and `previous`. Default is `current` and `previous` generation instance types.
	InstanceGenerations pulumix.Input[[]string] `pulumi:"instanceGenerations"`
	// Indicate whether instance types with local storage volumes are `included`, `excluded`, or `required`. Default is `included`.
	LocalStorage pulumix.Input[*string] `pulumi:"localStorage"`
	// List of local storage type names. Valid values are `hdd` and `ssd`. Default any storage type.
	LocalStorageTypes pulumix.Input[[]string] `pulumi:"localStorageTypes"`
	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	MemoryGibPerVcpu pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs] `pulumi:"memoryGibPerVcpu"`
	// The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.
	MemoryMib pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs] `pulumi:"memoryMib"`
	// The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is No minimum or maximum.
	NetworkBandwidthGbps pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs] `pulumi:"networkBandwidthGbps"`
	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	NetworkInterfaceCount pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs] `pulumi:"networkInterfaceCount"`
	// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	//
	// If you set `targetCapacityUnitType` to `vcpu` or `memory-mib`, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.
	OnDemandMaxPricePercentageOverLowestPrice pulumix.Input[*int] `pulumi:"onDemandMaxPricePercentageOverLowestPrice"`
	// Indicate whether instance types must support On-Demand Instance Hibernation, either `true` or `false`. Default is `false`.
	RequireHibernateSupport pulumix.Input[*bool] `pulumi:"requireHibernateSupport"`
	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	SpotMaxPricePercentageOverLowestPrice pulumix.Input[*int] `pulumi:"spotMaxPricePercentageOverLowestPrice"`
	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	TotalLocalStorageGb pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs] `pulumi:"totalLocalStorageGb"`
	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	VcpuCount pulumix.Input[*FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs] `pulumi:"vcpuCount"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirements)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirements)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirements] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirements]{
		OutputState: o.OutputState,
	}
}

// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum limits.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorCount() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount, FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount {
		return v.AcceleratorCount
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount, FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput]{OutputState: value.OutputState}
}

// List of accelerator manufacturer names. Default is any manufacturer.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorManufacturers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) []string {
		return v.AcceleratorManufacturers
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of accelerator names. Default is any acclerator.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) []string { return v.AcceleratorNames })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorTotalMemoryMib() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib, FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib {
		return v.AcceleratorTotalMemoryMib
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib, FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput]{OutputState: value.OutputState}
}

// The accelerator types that must be on the instance type. Default is any accelerator type.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) []string { return v.AcceleratorTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards,represented by an asterisk (\*). The following are examples: `c5*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types. Default is any instance type.
//
// If you specify `AllowedInstanceTypes`, you can't specify `ExcludedInstanceTypes`.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) AllowedInstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) []string { return v.AllowedInstanceTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Indicate whether bare metal instace types should be `included`, `excluded`, or `required`. Default is `excluded`.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) BareMetal() pulumix.Output[*string] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *string { return v.BareMetal })
}

// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) BaselineEbsBandwidthMbps() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps, FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps {
		return v.BaselineEbsBandwidthMbps
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps, FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput]{OutputState: value.OutputState}
}

// Indicates whether burstable performance T instance types are `included`, `excluded`, or `required`. Default is `excluded`.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) BurstablePerformance() pulumix.Output[*string] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *string { return v.BurstablePerformance })
}

// The CPU manufacturers to include. Default is any manufacturer.
// > **NOTE:** Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) CpuManufacturers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) []string { return v.CpuManufacturers })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (\*). The following are examples: `c5*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
//
// If you specify `AllowedInstanceTypes`, you can't specify `ExcludedInstanceTypes`.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) ExcludedInstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) []string { return v.ExcludedInstanceTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Valid values are `current` and `previous`. Default is `current` and `previous` generation instance types.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) InstanceGenerations() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) []string { return v.InstanceGenerations })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Indicate whether instance types with local storage volumes are `included`, `excluded`, or `required`. Default is `included`.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) LocalStorage() pulumix.Output[*string] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *string { return v.LocalStorage })
}

// List of local storage type names. Valid values are `hdd` and `ssd`. Default any storage type.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) LocalStorageTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) []string { return v.LocalStorageTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) MemoryGibPerVcpu() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu, FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu {
		return v.MemoryGibPerVcpu
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu, FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput]{OutputState: value.OutputState}
}

// The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) MemoryMib() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib, FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib {
		return v.MemoryMib
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib, FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput]{OutputState: value.OutputState}
}

// The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is No minimum or maximum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) NetworkBandwidthGbps() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps, FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps {
		return v.NetworkBandwidthGbps
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps, FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) NetworkInterfaceCount() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount, FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount {
		return v.NetworkInterfaceCount
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount, FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput]{OutputState: value.OutputState}
}

// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
//
// If you set `targetCapacityUnitType` to `vcpu` or `memory-mib`, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) OnDemandMaxPricePercentageOverLowestPrice() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *int {
		return v.OnDemandMaxPricePercentageOverLowestPrice
	})
}

// Indicate whether instance types must support On-Demand Instance Hibernation, either `true` or `false`. Default is `false`.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) RequireHibernateSupport() pulumix.Output[*bool] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *bool { return v.RequireHibernateSupport })
}

// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
//
// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) SpotMaxPricePercentageOverLowestPrice() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *int {
		return v.SpotMaxPricePercentageOverLowestPrice
	})
}

// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) TotalLocalStorageGb() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb, FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) *FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb {
		return v.TotalLocalStorageGb
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb, FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput) VcpuCount() pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount, FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput] {
	value := pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirements](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirements) FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount {
		return v.VcpuCount
	})
	return pulumix.GPtrOutput[FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount, FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput]{OutputState: value.OutputState}
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount) *int { return v.Max })
}

// Minimum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount) *int { return v.Min })
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib) *int {
		return v.Max
	})
}

// Minimum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib) *int {
		return v.Min
	})
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps) *int {
		return v.Max
	})
}

// Minimum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps) *int {
		return v.Min
	})
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *float64 `pulumi:"max"`
	// Minimum.
	Min *float64 `pulumi:"min"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*float64] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*float64] `pulumi:"min"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) Max() pulumix.Output[*float64] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu) *float64 { return v.Max })
}

// Minimum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) Min() pulumix.Output[*float64] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu) *float64 { return v.Min })
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min int `pulumi:"min"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[int] `pulumi:"min"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib) *int { return v.Max })
}

// Minimum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib) int { return v.Min })
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *float64 `pulumi:"max"`
	// Minimum.
	Min *float64 `pulumi:"min"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*float64] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*float64] `pulumi:"min"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) Max() pulumix.Output[*float64] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps) *float64 {
		return v.Max
	})
}

// Minimum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) Min() pulumix.Output[*float64] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps) *float64 {
		return v.Min
	})
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount) *int { return v.Max })
}

// Minimum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount) *int { return v.Min })
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *float64 `pulumi:"max"`
	// Minimum.
	Min *float64 `pulumi:"min"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*float64] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*float64] `pulumi:"min"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) Max() pulumix.Output[*float64] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb) *float64 {
		return v.Max
	})
}

// Minimum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) Min() pulumix.Output[*float64] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb) *float64 {
		return v.Min
	})
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min int `pulumi:"min"`
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[int] `pulumi:"min"`
}

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput {
	return i.ToFleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput)
}

func (i *FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs] {
	return pulumix.Val(i)
}

type FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput() FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) ToFleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) ToOutput(ctx context.Context) pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount] {
	return pulumix.Output[FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount) *int { return v.Max })
}

// Minimum.
func (o FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount](o, func(v FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount) int { return v.Min })
}

type FleetOnDemandOptions struct {
	// The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: `lowestPrice`, `prioritized`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// The maximum amount per hour for On-Demand Instances that you're willing to pay.
	MaxTotalPrice *string `pulumi:"maxTotalPrice"`
	// The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type `instant`.
	// If you specify `minTargetCapacity`, at least one of the following must be specified: `singleAvailabilityZone` or `singleInstanceType`.
	MinTargetCapacity *int `pulumi:"minTargetCapacity"`
	// Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type `instant`.
	SingleAvailabilityZone *bool `pulumi:"singleAvailabilityZone"`
	// Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type `instant`.
	SingleInstanceType *bool `pulumi:"singleInstanceType"`
}

type FleetOnDemandOptionsArgs struct {
	// The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: `lowestPrice`, `prioritized`. Default: `lowestPrice`.
	AllocationStrategy pulumix.Input[*string] `pulumi:"allocationStrategy"`
	// The maximum amount per hour for On-Demand Instances that you're willing to pay.
	MaxTotalPrice pulumix.Input[*string] `pulumi:"maxTotalPrice"`
	// The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type `instant`.
	// If you specify `minTargetCapacity`, at least one of the following must be specified: `singleAvailabilityZone` or `singleInstanceType`.
	MinTargetCapacity pulumix.Input[*int] `pulumi:"minTargetCapacity"`
	// Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type `instant`.
	SingleAvailabilityZone pulumix.Input[*bool] `pulumi:"singleAvailabilityZone"`
	// Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type `instant`.
	SingleInstanceType pulumix.Input[*bool] `pulumi:"singleInstanceType"`
}

func (FleetOnDemandOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptions)(nil)).Elem()
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput {
	return i.ToFleetOnDemandOptionsOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsOutputWithContext(ctx context.Context) FleetOnDemandOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsOutput)
}

func (i *FleetOnDemandOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetOnDemandOptionsArgs] {
	return pulumix.Val(i)
}

type FleetOnDemandOptionsOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptions)(nil)).Elem()
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput {
	return o
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsOutputWithContext(ctx context.Context) FleetOnDemandOptionsOutput {
	return o
}

func (o FleetOnDemandOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FleetOnDemandOptions] {
	return pulumix.Output[FleetOnDemandOptions]{
		OutputState: o.OutputState,
	}
}

// The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: `lowestPrice`, `prioritized`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsOutput) AllocationStrategy() pulumix.Output[*string] {
	return pulumix.Apply[FleetOnDemandOptions](o, func(v FleetOnDemandOptions) *string { return v.AllocationStrategy })
}

// The maximum amount per hour for On-Demand Instances that you're willing to pay.
func (o FleetOnDemandOptionsOutput) MaxTotalPrice() pulumix.Output[*string] {
	return pulumix.Apply[FleetOnDemandOptions](o, func(v FleetOnDemandOptions) *string { return v.MaxTotalPrice })
}

// The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type `instant`.
// If you specify `minTargetCapacity`, at least one of the following must be specified: `singleAvailabilityZone` or `singleInstanceType`.
func (o FleetOnDemandOptionsOutput) MinTargetCapacity() pulumix.Output[*int] {
	return pulumix.Apply[FleetOnDemandOptions](o, func(v FleetOnDemandOptions) *int { return v.MinTargetCapacity })
}

// Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type `instant`.
func (o FleetOnDemandOptionsOutput) SingleAvailabilityZone() pulumix.Output[*bool] {
	return pulumix.Apply[FleetOnDemandOptions](o, func(v FleetOnDemandOptions) *bool { return v.SingleAvailabilityZone })
}

// Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type `instant`.
func (o FleetOnDemandOptionsOutput) SingleInstanceType() pulumix.Output[*bool] {
	return pulumix.Apply[FleetOnDemandOptions](o, func(v FleetOnDemandOptions) *bool { return v.SingleInstanceType })
}

type FleetSpotOptions struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`, `capacity-optimized`, `capacity-optimized-prioritized` and `price-capacity-optimized`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount *int `pulumi:"instancePoolsToUseCount"`
	// Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
	MaintenanceStrategies *FleetSpotOptionsMaintenanceStrategies `pulumi:"maintenanceStrategies"`
}

type FleetSpotOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`, `capacity-optimized`, `capacity-optimized-prioritized` and `price-capacity-optimized`. Default: `lowestPrice`.
	AllocationStrategy pulumix.Input[*string] `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior pulumix.Input[*string] `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount pulumix.Input[*int] `pulumi:"instancePoolsToUseCount"`
	// Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
	MaintenanceStrategies pulumix.Input[*FleetSpotOptionsMaintenanceStrategiesArgs] `pulumi:"maintenanceStrategies"`
}

func (FleetSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return i.ToFleetSpotOptionsOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsOutput)
}

func (i *FleetSpotOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetSpotOptionsArgs] {
	return pulumix.Val(i)
}

type FleetSpotOptionsOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FleetSpotOptions] {
	return pulumix.Output[FleetSpotOptions]{
		OutputState: o.OutputState,
	}
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`, `capacity-optimized`, `capacity-optimized-prioritized` and `price-capacity-optimized`. Default: `lowestPrice`.
func (o FleetSpotOptionsOutput) AllocationStrategy() pulumix.Output[*string] {
	return pulumix.Apply[FleetSpotOptions](o, func(v FleetSpotOptions) *string { return v.AllocationStrategy })
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsOutput) InstanceInterruptionBehavior() pulumix.Output[*string] {
	return pulumix.Apply[FleetSpotOptions](o, func(v FleetSpotOptions) *string { return v.InstanceInterruptionBehavior })
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsOutput) InstancePoolsToUseCount() pulumix.Output[*int] {
	return pulumix.Apply[FleetSpotOptions](o, func(v FleetSpotOptions) *int { return v.InstancePoolsToUseCount })
}

// Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
func (o FleetSpotOptionsOutput) MaintenanceStrategies() pulumix.GPtrOutput[FleetSpotOptionsMaintenanceStrategies, FleetSpotOptionsMaintenanceStrategiesOutput] {
	value := pulumix.Apply[FleetSpotOptions](o, func(v FleetSpotOptions) *FleetSpotOptionsMaintenanceStrategies { return v.MaintenanceStrategies })
	return pulumix.GPtrOutput[FleetSpotOptionsMaintenanceStrategies, FleetSpotOptionsMaintenanceStrategiesOutput]{OutputState: value.OutputState}
}

type FleetSpotOptionsMaintenanceStrategies struct {
	// Nested argument containing the capacity rebalance for your fleet request. Defined below.
	CapacityRebalance *FleetSpotOptionsMaintenanceStrategiesCapacityRebalance `pulumi:"capacityRebalance"`
}

type FleetSpotOptionsMaintenanceStrategiesArgs struct {
	// Nested argument containing the capacity rebalance for your fleet request. Defined below.
	CapacityRebalance pulumix.Input[*FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceArgs] `pulumi:"capacityRebalance"`
}

func (FleetSpotOptionsMaintenanceStrategiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptionsMaintenanceStrategies)(nil)).Elem()
}

func (i FleetSpotOptionsMaintenanceStrategiesArgs) ToFleetSpotOptionsMaintenanceStrategiesOutput() FleetSpotOptionsMaintenanceStrategiesOutput {
	return i.ToFleetSpotOptionsMaintenanceStrategiesOutputWithContext(context.Background())
}

func (i FleetSpotOptionsMaintenanceStrategiesArgs) ToFleetSpotOptionsMaintenanceStrategiesOutputWithContext(ctx context.Context) FleetSpotOptionsMaintenanceStrategiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsMaintenanceStrategiesOutput)
}

func (i *FleetSpotOptionsMaintenanceStrategiesArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetSpotOptionsMaintenanceStrategiesArgs] {
	return pulumix.Val(i)
}

type FleetSpotOptionsMaintenanceStrategiesOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsMaintenanceStrategiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptionsMaintenanceStrategies)(nil)).Elem()
}

func (o FleetSpotOptionsMaintenanceStrategiesOutput) ToFleetSpotOptionsMaintenanceStrategiesOutput() FleetSpotOptionsMaintenanceStrategiesOutput {
	return o
}

func (o FleetSpotOptionsMaintenanceStrategiesOutput) ToFleetSpotOptionsMaintenanceStrategiesOutputWithContext(ctx context.Context) FleetSpotOptionsMaintenanceStrategiesOutput {
	return o
}

func (o FleetSpotOptionsMaintenanceStrategiesOutput) ToOutput(ctx context.Context) pulumix.Output[FleetSpotOptionsMaintenanceStrategies] {
	return pulumix.Output[FleetSpotOptionsMaintenanceStrategies]{
		OutputState: o.OutputState,
	}
}

// Nested argument containing the capacity rebalance for your fleet request. Defined below.
func (o FleetSpotOptionsMaintenanceStrategiesOutput) CapacityRebalance() pulumix.GPtrOutput[FleetSpotOptionsMaintenanceStrategiesCapacityRebalance, FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput] {
	value := pulumix.Apply[FleetSpotOptionsMaintenanceStrategies](o, func(v FleetSpotOptionsMaintenanceStrategies) *FleetSpotOptionsMaintenanceStrategiesCapacityRebalance {
		return v.CapacityRebalance
	})
	return pulumix.GPtrOutput[FleetSpotOptionsMaintenanceStrategiesCapacityRebalance, FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput]{OutputState: value.OutputState}
}

type FleetSpotOptionsMaintenanceStrategiesCapacityRebalance struct {
	// The replacement strategy to use. Only available for fleets of `type` set to `maintain`. Valid values: `launch`.
	ReplacementStrategy *string `pulumi:"replacementStrategy"`
	TerminationDelay    *int    `pulumi:"terminationDelay"`
}

type FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceArgs struct {
	// The replacement strategy to use. Only available for fleets of `type` set to `maintain`. Valid values: `launch`.
	ReplacementStrategy pulumix.Input[*string] `pulumi:"replacementStrategy"`
	TerminationDelay    pulumix.Input[*int]    `pulumi:"terminationDelay"`
}

func (FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptionsMaintenanceStrategiesCapacityRebalance)(nil)).Elem()
}

func (i FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceArgs) ToFleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput() FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput {
	return i.ToFleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutputWithContext(context.Background())
}

func (i FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceArgs) ToFleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutputWithContext(ctx context.Context) FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput)
}

func (i *FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceArgs] {
	return pulumix.Val(i)
}

type FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptionsMaintenanceStrategiesCapacityRebalance)(nil)).Elem()
}

func (o FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput) ToFleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput() FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput {
	return o
}

func (o FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput) ToFleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutputWithContext(ctx context.Context) FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput {
	return o
}

func (o FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput) ToOutput(ctx context.Context) pulumix.Output[FleetSpotOptionsMaintenanceStrategiesCapacityRebalance] {
	return pulumix.Output[FleetSpotOptionsMaintenanceStrategiesCapacityRebalance]{
		OutputState: o.OutputState,
	}
}

// The replacement strategy to use. Only available for fleets of `type` set to `maintain`. Valid values: `launch`.
func (o FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput) ReplacementStrategy() pulumix.Output[*string] {
	return pulumix.Apply[FleetSpotOptionsMaintenanceStrategiesCapacityRebalance](o, func(v FleetSpotOptionsMaintenanceStrategiesCapacityRebalance) *string { return v.ReplacementStrategy })
}

func (o FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput) TerminationDelay() pulumix.Output[*int] {
	return pulumix.Apply[FleetSpotOptionsMaintenanceStrategiesCapacityRebalance](o, func(v FleetSpotOptionsMaintenanceStrategiesCapacityRebalance) *int { return v.TerminationDelay })
}

type FleetTargetCapacitySpecification struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType string `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity *int `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity *int `pulumi:"spotTargetCapacity"`
	// The unit for the target capacity.
	// If you specify `targetCapacityUnitType`, `instanceRequirements` must be specified.
	TargetCapacityUnitType *string `pulumi:"targetCapacityUnitType"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity int `pulumi:"totalTargetCapacity"`
}

type FleetTargetCapacitySpecificationArgs struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType pulumix.Input[string] `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity pulumix.Input[*int] `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity pulumix.Input[*int] `pulumi:"spotTargetCapacity"`
	// The unit for the target capacity.
	// If you specify `targetCapacityUnitType`, `instanceRequirements` must be specified.
	TargetCapacityUnitType pulumix.Input[*string] `pulumi:"targetCapacityUnitType"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity pulumix.Input[int] `pulumi:"totalTargetCapacity"`
}

func (FleetTargetCapacitySpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecification)(nil)).Elem()
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput {
	return i.ToFleetTargetCapacitySpecificationOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationOutput)
}

func (i *FleetTargetCapacitySpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*FleetTargetCapacitySpecificationArgs] {
	return pulumix.Val(i)
}

type FleetTargetCapacitySpecificationOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecification)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput {
	return o
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationOutput {
	return o
}

func (o FleetTargetCapacitySpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[FleetTargetCapacitySpecification] {
	return pulumix.Output[FleetTargetCapacitySpecification]{
		OutputState: o.OutputState,
	}
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationOutput) DefaultTargetCapacityType() pulumix.Output[string] {
	return pulumix.Apply[FleetTargetCapacitySpecification](o, func(v FleetTargetCapacitySpecification) string { return v.DefaultTargetCapacityType })
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationOutput) OnDemandTargetCapacity() pulumix.Output[*int] {
	return pulumix.Apply[FleetTargetCapacitySpecification](o, func(v FleetTargetCapacitySpecification) *int { return v.OnDemandTargetCapacity })
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationOutput) SpotTargetCapacity() pulumix.Output[*int] {
	return pulumix.Apply[FleetTargetCapacitySpecification](o, func(v FleetTargetCapacitySpecification) *int { return v.SpotTargetCapacity })
}

// The unit for the target capacity.
// If you specify `targetCapacityUnitType`, `instanceRequirements` must be specified.
func (o FleetTargetCapacitySpecificationOutput) TargetCapacityUnitType() pulumix.Output[*string] {
	return pulumix.Apply[FleetTargetCapacitySpecification](o, func(v FleetTargetCapacitySpecification) *string { return v.TargetCapacityUnitType })
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationOutput) TotalTargetCapacity() pulumix.Output[int] {
	return pulumix.Apply[FleetTargetCapacitySpecification](o, func(v FleetTargetCapacitySpecification) int { return v.TotalTargetCapacity })
}

type FlowLogDestinationOptions struct {
	// The format for the flow log. Default value: `plain-text`. Valid values: `plain-text`, `parquet`.
	FileFormat *string `pulumi:"fileFormat"`
	// Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3. Default value: `false`.
	HiveCompatiblePartitions *bool `pulumi:"hiveCompatiblePartitions"`
	// Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. Default value: `false`.
	PerHourPartition *bool `pulumi:"perHourPartition"`
}

type FlowLogDestinationOptionsArgs struct {
	// The format for the flow log. Default value: `plain-text`. Valid values: `plain-text`, `parquet`.
	FileFormat pulumix.Input[*string] `pulumi:"fileFormat"`
	// Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3. Default value: `false`.
	HiveCompatiblePartitions pulumix.Input[*bool] `pulumi:"hiveCompatiblePartitions"`
	// Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. Default value: `false`.
	PerHourPartition pulumix.Input[*bool] `pulumi:"perHourPartition"`
}

func (FlowLogDestinationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogDestinationOptions)(nil)).Elem()
}

func (i FlowLogDestinationOptionsArgs) ToFlowLogDestinationOptionsOutput() FlowLogDestinationOptionsOutput {
	return i.ToFlowLogDestinationOptionsOutputWithContext(context.Background())
}

func (i FlowLogDestinationOptionsArgs) ToFlowLogDestinationOptionsOutputWithContext(ctx context.Context) FlowLogDestinationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogDestinationOptionsOutput)
}

func (i *FlowLogDestinationOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*FlowLogDestinationOptionsArgs] {
	return pulumix.Val(i)
}

type FlowLogDestinationOptionsOutput struct{ *pulumi.OutputState }

func (FlowLogDestinationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogDestinationOptions)(nil)).Elem()
}

func (o FlowLogDestinationOptionsOutput) ToFlowLogDestinationOptionsOutput() FlowLogDestinationOptionsOutput {
	return o
}

func (o FlowLogDestinationOptionsOutput) ToFlowLogDestinationOptionsOutputWithContext(ctx context.Context) FlowLogDestinationOptionsOutput {
	return o
}

func (o FlowLogDestinationOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FlowLogDestinationOptions] {
	return pulumix.Output[FlowLogDestinationOptions]{
		OutputState: o.OutputState,
	}
}

// The format for the flow log. Default value: `plain-text`. Valid values: `plain-text`, `parquet`.
func (o FlowLogDestinationOptionsOutput) FileFormat() pulumix.Output[*string] {
	return pulumix.Apply[FlowLogDestinationOptions](o, func(v FlowLogDestinationOptions) *string { return v.FileFormat })
}

// Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3. Default value: `false`.
func (o FlowLogDestinationOptionsOutput) HiveCompatiblePartitions() pulumix.Output[*bool] {
	return pulumix.Apply[FlowLogDestinationOptions](o, func(v FlowLogDestinationOptions) *bool { return v.HiveCompatiblePartitions })
}

// Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. Default value: `false`.
func (o FlowLogDestinationOptionsOutput) PerHourPartition() pulumix.Output[*bool] {
	return pulumix.Apply[FlowLogDestinationOptions](o, func(v FlowLogDestinationOptions) *bool { return v.PerHourPartition })
}

type InstanceCapacityReservationSpecification struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `"open"` or `"none"`. (Default: `"open"`).
	CapacityReservationPreference *string `pulumi:"capacityReservationPreference"`
	// Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
	//
	// For more information, see the documentation on [Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-using.html).
	CapacityReservationTarget *InstanceCapacityReservationSpecificationCapacityReservationTarget `pulumi:"capacityReservationTarget"`
}

type InstanceCapacityReservationSpecificationArgs struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `"open"` or `"none"`. (Default: `"open"`).
	CapacityReservationPreference pulumix.Input[*string] `pulumi:"capacityReservationPreference"`
	// Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
	//
	// For more information, see the documentation on [Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-using.html).
	CapacityReservationTarget pulumix.Input[*InstanceCapacityReservationSpecificationCapacityReservationTargetArgs] `pulumi:"capacityReservationTarget"`
}

func (InstanceCapacityReservationSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCapacityReservationSpecification)(nil)).Elem()
}

func (i InstanceCapacityReservationSpecificationArgs) ToInstanceCapacityReservationSpecificationOutput() InstanceCapacityReservationSpecificationOutput {
	return i.ToInstanceCapacityReservationSpecificationOutputWithContext(context.Background())
}

func (i InstanceCapacityReservationSpecificationArgs) ToInstanceCapacityReservationSpecificationOutputWithContext(ctx context.Context) InstanceCapacityReservationSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCapacityReservationSpecificationOutput)
}

func (i *InstanceCapacityReservationSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceCapacityReservationSpecificationArgs] {
	return pulumix.Val(i)
}

type InstanceCapacityReservationSpecificationOutput struct{ *pulumi.OutputState }

func (InstanceCapacityReservationSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCapacityReservationSpecification)(nil)).Elem()
}

func (o InstanceCapacityReservationSpecificationOutput) ToInstanceCapacityReservationSpecificationOutput() InstanceCapacityReservationSpecificationOutput {
	return o
}

func (o InstanceCapacityReservationSpecificationOutput) ToInstanceCapacityReservationSpecificationOutputWithContext(ctx context.Context) InstanceCapacityReservationSpecificationOutput {
	return o
}

func (o InstanceCapacityReservationSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceCapacityReservationSpecification] {
	return pulumix.Output[InstanceCapacityReservationSpecification]{
		OutputState: o.OutputState,
	}
}

// Indicates the instance's Capacity Reservation preferences. Can be `"open"` or `"none"`. (Default: `"open"`).
func (o InstanceCapacityReservationSpecificationOutput) CapacityReservationPreference() pulumix.Output[*string] {
	return pulumix.Apply[InstanceCapacityReservationSpecification](o, func(v InstanceCapacityReservationSpecification) *string { return v.CapacityReservationPreference })
}

// Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
//
// For more information, see the documentation on [Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-using.html).
func (o InstanceCapacityReservationSpecificationOutput) CapacityReservationTarget() pulumix.GPtrOutput[InstanceCapacityReservationSpecificationCapacityReservationTarget, InstanceCapacityReservationSpecificationCapacityReservationTargetOutput] {
	value := pulumix.Apply[InstanceCapacityReservationSpecification](o, func(v InstanceCapacityReservationSpecification) *InstanceCapacityReservationSpecificationCapacityReservationTarget {
		return v.CapacityReservationTarget
	})
	return pulumix.GPtrOutput[InstanceCapacityReservationSpecificationCapacityReservationTarget, InstanceCapacityReservationSpecificationCapacityReservationTargetOutput]{OutputState: value.OutputState}
}

type InstanceCapacityReservationSpecificationCapacityReservationTarget struct {
	// ID of the Capacity Reservation in which to run the instance.
	CapacityReservationId *string `pulumi:"capacityReservationId"`
	// ARN of the Capacity Reservation resource group in which to run the instance.
	CapacityReservationResourceGroupArn *string `pulumi:"capacityReservationResourceGroupArn"`
}

type InstanceCapacityReservationSpecificationCapacityReservationTargetArgs struct {
	// ID of the Capacity Reservation in which to run the instance.
	CapacityReservationId pulumix.Input[*string] `pulumi:"capacityReservationId"`
	// ARN of the Capacity Reservation resource group in which to run the instance.
	CapacityReservationResourceGroupArn pulumix.Input[*string] `pulumi:"capacityReservationResourceGroupArn"`
}

func (InstanceCapacityReservationSpecificationCapacityReservationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i InstanceCapacityReservationSpecificationCapacityReservationTargetArgs) ToInstanceCapacityReservationSpecificationCapacityReservationTargetOutput() InstanceCapacityReservationSpecificationCapacityReservationTargetOutput {
	return i.ToInstanceCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Background())
}

func (i InstanceCapacityReservationSpecificationCapacityReservationTargetArgs) ToInstanceCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) InstanceCapacityReservationSpecificationCapacityReservationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCapacityReservationSpecificationCapacityReservationTargetOutput)
}

func (i *InstanceCapacityReservationSpecificationCapacityReservationTargetArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceCapacityReservationSpecificationCapacityReservationTargetArgs] {
	return pulumix.Val(i)
}

type InstanceCapacityReservationSpecificationCapacityReservationTargetOutput struct{ *pulumi.OutputState }

func (InstanceCapacityReservationSpecificationCapacityReservationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o InstanceCapacityReservationSpecificationCapacityReservationTargetOutput) ToInstanceCapacityReservationSpecificationCapacityReservationTargetOutput() InstanceCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o InstanceCapacityReservationSpecificationCapacityReservationTargetOutput) ToInstanceCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) InstanceCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o InstanceCapacityReservationSpecificationCapacityReservationTargetOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceCapacityReservationSpecificationCapacityReservationTarget] {
	return pulumix.Output[InstanceCapacityReservationSpecificationCapacityReservationTarget]{
		OutputState: o.OutputState,
	}
}

// ID of the Capacity Reservation in which to run the instance.
func (o InstanceCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationId() pulumix.Output[*string] {
	return pulumix.Apply[InstanceCapacityReservationSpecificationCapacityReservationTarget](o, func(v InstanceCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationId
	})
}

// ARN of the Capacity Reservation resource group in which to run the instance.
func (o InstanceCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationResourceGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[InstanceCapacityReservationSpecificationCapacityReservationTarget](o, func(v InstanceCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationResourceGroupArn
	})
}

type InstanceCpuOptions struct {
	// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
	AmdSevSnp *string `pulumi:"amdSevSnp"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	CoreCount *int `pulumi:"coreCount"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// For more information, see the documentation on [Optimizing CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html).
	ThreadsPerCore *int `pulumi:"threadsPerCore"`
}

type InstanceCpuOptionsArgs struct {
	// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
	AmdSevSnp pulumix.Input[*string] `pulumi:"amdSevSnp"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	CoreCount pulumix.Input[*int] `pulumi:"coreCount"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// For more information, see the documentation on [Optimizing CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html).
	ThreadsPerCore pulumix.Input[*int] `pulumi:"threadsPerCore"`
}

func (InstanceCpuOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCpuOptions)(nil)).Elem()
}

func (i InstanceCpuOptionsArgs) ToInstanceCpuOptionsOutput() InstanceCpuOptionsOutput {
	return i.ToInstanceCpuOptionsOutputWithContext(context.Background())
}

func (i InstanceCpuOptionsArgs) ToInstanceCpuOptionsOutputWithContext(ctx context.Context) InstanceCpuOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCpuOptionsOutput)
}

func (i *InstanceCpuOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceCpuOptionsArgs] {
	return pulumix.Val(i)
}

type InstanceCpuOptionsOutput struct{ *pulumi.OutputState }

func (InstanceCpuOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCpuOptions)(nil)).Elem()
}

func (o InstanceCpuOptionsOutput) ToInstanceCpuOptionsOutput() InstanceCpuOptionsOutput {
	return o
}

func (o InstanceCpuOptionsOutput) ToInstanceCpuOptionsOutputWithContext(ctx context.Context) InstanceCpuOptionsOutput {
	return o
}

func (o InstanceCpuOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceCpuOptions] {
	return pulumix.Output[InstanceCpuOptions]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
func (o InstanceCpuOptionsOutput) AmdSevSnp() pulumix.Output[*string] {
	return pulumix.Apply[InstanceCpuOptions](o, func(v InstanceCpuOptions) *string { return v.AmdSevSnp })
}

// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
func (o InstanceCpuOptionsOutput) CoreCount() pulumix.Output[*int] {
	return pulumix.Apply[InstanceCpuOptions](o, func(v InstanceCpuOptions) *int { return v.CoreCount })
}

// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
//
// For more information, see the documentation on [Optimizing CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html).
func (o InstanceCpuOptionsOutput) ThreadsPerCore() pulumix.Output[*int] {
	return pulumix.Apply[InstanceCpuOptions](o, func(v InstanceCpuOptions) *int { return v.ThreadsPerCore })
}

type InstanceCreditSpecification struct {
	// Credit option for CPU usage. Valid values include `standard` or `unlimited`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type InstanceCreditSpecificationArgs struct {
	// Credit option for CPU usage. Valid values include `standard` or `unlimited`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumix.Input[*string] `pulumi:"cpuCredits"`
}

func (InstanceCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecification)(nil)).Elem()
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput {
	return i.ToInstanceCreditSpecificationOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationOutputWithContext(ctx context.Context) InstanceCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationOutput)
}

func (i *InstanceCreditSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceCreditSpecificationArgs] {
	return pulumix.Val(i)
}

type InstanceCreditSpecificationOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecification)(nil)).Elem()
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput {
	return o
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationOutputWithContext(ctx context.Context) InstanceCreditSpecificationOutput {
	return o
}

func (o InstanceCreditSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceCreditSpecification] {
	return pulumix.Output[InstanceCreditSpecification]{
		OutputState: o.OutputState,
	}
}

// Credit option for CPU usage. Valid values include `standard` or `unlimited`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationOutput) CpuCredits() pulumix.Output[*string] {
	return pulumix.Apply[InstanceCreditSpecification](o, func(v InstanceCreditSpecification) *string { return v.CpuCredits })
}

type InstanceEbsBlockDevice struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `true`.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume. Defaults to `false`. Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	// Map of tags to assign to the device.
	Tags map[string]string `pulumi:"tags"`
	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
	Throughput *int `pulumi:"throughput"`
	// ID of the volume. For example, the ID can be accessed like this, `aws_instance.web.root_block_device.0.volume_id`.
	VolumeId *string `pulumi:"volumeId"`
	// Size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
	//
	// > **NOTE:** Currently, changes to the `ebsBlockDevice` configuration of _existing_ resources cannot be automatically detected by this provider. To manage changes and attachments of an EBS block to an instance, use the `ebs.Volume` and `ec2.VolumeAttachment` resources instead. If you use `ebsBlockDevice` on an `ec2.Instance`, this provider will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebsBlockDevice` cannot be mixed with external `ebs.Volume` and `ec2.VolumeAttachment` resources for a given instance.
	VolumeType *string `pulumi:"volumeType"`
}

type InstanceEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `true`.
	DeleteOnTermination pulumix.Input[*bool] `pulumi:"deleteOnTermination"`
	// Name of the device to mount.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume. Defaults to `false`. Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumix.Input[*bool] `pulumi:"encrypted"`
	// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
	Iops pulumix.Input[*int] `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// Snapshot ID to mount.
	SnapshotId pulumix.Input[*string] `pulumi:"snapshotId"`
	// Map of tags to assign to the device.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
	Throughput pulumix.Input[*int] `pulumi:"throughput"`
	// ID of the volume. For example, the ID can be accessed like this, `aws_instance.web.root_block_device.0.volume_id`.
	VolumeId pulumix.Input[*string] `pulumi:"volumeId"`
	// Size of the volume in gibibytes (GiB).
	VolumeSize pulumix.Input[*int] `pulumi:"volumeSize"`
	// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
	//
	// > **NOTE:** Currently, changes to the `ebsBlockDevice` configuration of _existing_ resources cannot be automatically detected by this provider. To manage changes and attachments of an EBS block to an instance, use the `ebs.Volume` and `ec2.VolumeAttachment` resources instead. If you use `ebsBlockDevice` on an `ec2.Instance`, this provider will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebsBlockDevice` cannot be mixed with external `ebs.Volume` and `ec2.VolumeAttachment` resources for a given instance.
	VolumeType pulumix.Input[*string] `pulumi:"volumeType"`
}

func (InstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return i.ToInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceOutput)
}

func (i *InstanceEbsBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceEbsBlockDeviceArgs] {
	return pulumix.Val(i)
}

type InstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceEbsBlockDevice] {
	return pulumix.Output[InstanceEbsBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Whether the volume should be destroyed on instance termination. Defaults to `true`.
func (o InstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) *bool { return v.DeleteOnTermination })
}

// Name of the device to mount.
func (o InstanceEbsBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) string { return v.DeviceName })
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume. Defaults to `false`. Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) *bool { return v.Encrypted })
}

// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
func (o InstanceEbsBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) *int { return v.Iops })
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) *string { return v.KmsKeyId })
}

// Snapshot ID to mount.
func (o InstanceEbsBlockDeviceOutput) SnapshotId() pulumix.Output[*string] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) *string { return v.SnapshotId })
}

// Map of tags to assign to the device.
func (o InstanceEbsBlockDeviceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
func (o InstanceEbsBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) *int { return v.Throughput })
}

// ID of the volume. For example, the ID can be accessed like this, `aws_instance.web.root_block_device.0.volume_id`.
func (o InstanceEbsBlockDeviceOutput) VolumeId() pulumix.Output[*string] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) *string { return v.VolumeId })
}

// Size of the volume in gibibytes (GiB).
func (o InstanceEbsBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) *int { return v.VolumeSize })
}

// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
//
// > **NOTE:** Currently, changes to the `ebsBlockDevice` configuration of _existing_ resources cannot be automatically detected by this provider. To manage changes and attachments of an EBS block to an instance, use the `ebs.Volume` and `ec2.VolumeAttachment` resources instead. If you use `ebsBlockDevice` on an `ec2.Instance`, this provider will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebsBlockDevice` cannot be mixed with external `ebs.Volume` and `ec2.VolumeAttachment` resources for a given instance.
func (o InstanceEbsBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[InstanceEbsBlockDevice](o, func(v InstanceEbsBlockDevice) *string { return v.VolumeType })
}

type InstanceEnclaveOptions struct {
	// Whether Nitro Enclaves will be enabled on the instance. Defaults to `false`.
	//
	// For more information, see the documentation on [Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html).
	Enabled *bool `pulumi:"enabled"`
}

type InstanceEnclaveOptionsArgs struct {
	// Whether Nitro Enclaves will be enabled on the instance. Defaults to `false`.
	//
	// For more information, see the documentation on [Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html).
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (InstanceEnclaveOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEnclaveOptions)(nil)).Elem()
}

func (i InstanceEnclaveOptionsArgs) ToInstanceEnclaveOptionsOutput() InstanceEnclaveOptionsOutput {
	return i.ToInstanceEnclaveOptionsOutputWithContext(context.Background())
}

func (i InstanceEnclaveOptionsArgs) ToInstanceEnclaveOptionsOutputWithContext(ctx context.Context) InstanceEnclaveOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEnclaveOptionsOutput)
}

func (i *InstanceEnclaveOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceEnclaveOptionsArgs] {
	return pulumix.Val(i)
}

type InstanceEnclaveOptionsOutput struct{ *pulumi.OutputState }

func (InstanceEnclaveOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEnclaveOptions)(nil)).Elem()
}

func (o InstanceEnclaveOptionsOutput) ToInstanceEnclaveOptionsOutput() InstanceEnclaveOptionsOutput {
	return o
}

func (o InstanceEnclaveOptionsOutput) ToInstanceEnclaveOptionsOutputWithContext(ctx context.Context) InstanceEnclaveOptionsOutput {
	return o
}

func (o InstanceEnclaveOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceEnclaveOptions] {
	return pulumix.Output[InstanceEnclaveOptions]{
		OutputState: o.OutputState,
	}
}

// Whether Nitro Enclaves will be enabled on the instance. Defaults to `false`.
//
// For more information, see the documentation on [Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html).
func (o InstanceEnclaveOptionsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[InstanceEnclaveOptions](o, func(v InstanceEnclaveOptions) *bool { return v.Enabled })
}

type InstanceEphemeralBlockDevice struct {
	// Name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// [Instance Store Device Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames) (e.g., `ephemeral0`).
	//
	// Each AWS Instance type has a different set of Instance Store block devices available for attachment. AWS [publishes a list](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes) of which ephemeral devices are available on each type. The devices are always identified by the `virtualName` in the format `ephemeral{0..N}`.
	VirtualName *string `pulumi:"virtualName"`
}

type InstanceEphemeralBlockDeviceArgs struct {
	// Name of the block device to mount on the instance.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumix.Input[*bool] `pulumi:"noDevice"`
	// [Instance Store Device Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames) (e.g., `ephemeral0`).
	//
	// Each AWS Instance type has a different set of Instance Store block devices available for attachment. AWS [publishes a list](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes) of which ephemeral devices are available on each type. The devices are always identified by the `virtualName` in the format `ephemeral{0..N}`.
	VirtualName pulumix.Input[*string] `pulumi:"virtualName"`
}

func (InstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return i.ToInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceOutput)
}

func (i *InstanceEphemeralBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceEphemeralBlockDeviceArgs] {
	return pulumix.Val(i)
}

type InstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceEphemeralBlockDevice] {
	return pulumix.Output[InstanceEphemeralBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Name of the block device to mount on the instance.
func (o InstanceEphemeralBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[InstanceEphemeralBlockDevice](o, func(v InstanceEphemeralBlockDevice) string { return v.DeviceName })
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o InstanceEphemeralBlockDeviceOutput) NoDevice() pulumix.Output[*bool] {
	return pulumix.Apply[InstanceEphemeralBlockDevice](o, func(v InstanceEphemeralBlockDevice) *bool { return v.NoDevice })
}

// [Instance Store Device Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames) (e.g., `ephemeral0`).
//
// Each AWS Instance type has a different set of Instance Store block devices available for attachment. AWS [publishes a list](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes) of which ephemeral devices are available on each type. The devices are always identified by the `virtualName` in the format `ephemeral{0..N}`.
func (o InstanceEphemeralBlockDeviceOutput) VirtualName() pulumix.Output[*string] {
	return pulumix.Apply[InstanceEphemeralBlockDevice](o, func(v InstanceEphemeralBlockDevice) *string { return v.VirtualName })
}

type InstanceInstanceMarketOptions struct {
	// Type of market for the instance. Valid value is `spot`. Defaults to `spot`.
	MarketType *string `pulumi:"marketType"`
	// Block to configure the options for Spot Instances. See Spot Options below for details on attributes.
	SpotOptions *InstanceInstanceMarketOptionsSpotOptions `pulumi:"spotOptions"`
}

type InstanceInstanceMarketOptionsArgs struct {
	// Type of market for the instance. Valid value is `spot`. Defaults to `spot`.
	MarketType pulumix.Input[*string] `pulumi:"marketType"`
	// Block to configure the options for Spot Instances. See Spot Options below for details on attributes.
	SpotOptions pulumix.Input[*InstanceInstanceMarketOptionsSpotOptionsArgs] `pulumi:"spotOptions"`
}

func (InstanceInstanceMarketOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInstanceMarketOptions)(nil)).Elem()
}

func (i InstanceInstanceMarketOptionsArgs) ToInstanceInstanceMarketOptionsOutput() InstanceInstanceMarketOptionsOutput {
	return i.ToInstanceInstanceMarketOptionsOutputWithContext(context.Background())
}

func (i InstanceInstanceMarketOptionsArgs) ToInstanceInstanceMarketOptionsOutputWithContext(ctx context.Context) InstanceInstanceMarketOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceInstanceMarketOptionsOutput)
}

func (i *InstanceInstanceMarketOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceInstanceMarketOptionsArgs] {
	return pulumix.Val(i)
}

type InstanceInstanceMarketOptionsOutput struct{ *pulumi.OutputState }

func (InstanceInstanceMarketOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInstanceMarketOptions)(nil)).Elem()
}

func (o InstanceInstanceMarketOptionsOutput) ToInstanceInstanceMarketOptionsOutput() InstanceInstanceMarketOptionsOutput {
	return o
}

func (o InstanceInstanceMarketOptionsOutput) ToInstanceInstanceMarketOptionsOutputWithContext(ctx context.Context) InstanceInstanceMarketOptionsOutput {
	return o
}

func (o InstanceInstanceMarketOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceInstanceMarketOptions] {
	return pulumix.Output[InstanceInstanceMarketOptions]{
		OutputState: o.OutputState,
	}
}

// Type of market for the instance. Valid value is `spot`. Defaults to `spot`.
func (o InstanceInstanceMarketOptionsOutput) MarketType() pulumix.Output[*string] {
	return pulumix.Apply[InstanceInstanceMarketOptions](o, func(v InstanceInstanceMarketOptions) *string { return v.MarketType })
}

// Block to configure the options for Spot Instances. See Spot Options below for details on attributes.
func (o InstanceInstanceMarketOptionsOutput) SpotOptions() pulumix.GPtrOutput[InstanceInstanceMarketOptionsSpotOptions, InstanceInstanceMarketOptionsSpotOptionsOutput] {
	value := pulumix.Apply[InstanceInstanceMarketOptions](o, func(v InstanceInstanceMarketOptions) *InstanceInstanceMarketOptionsSpotOptions { return v.SpotOptions })
	return pulumix.GPtrOutput[InstanceInstanceMarketOptionsSpotOptions, InstanceInstanceMarketOptionsSpotOptionsOutput]{OutputState: value.OutputState}
}

type InstanceInstanceMarketOptionsSpotOptions struct {
	// The behavior when a Spot Instance is interrupted. Valid values include `hibernate`, `stop`, `terminate` . The default is `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price that you're willing to pay for a Spot Instance.
	MaxPrice *string `pulumi:"maxPrice"`
	// The Spot Instance request type. Valid values include `one-time`, `persistent`. Persistent Spot Instance requests are only supported when the instance interruption behavior is either hibernate or stop. The default is `one-time`.
	SpotInstanceType *string `pulumi:"spotInstanceType"`
	// The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.
	ValidUntil *string `pulumi:"validUntil"`
}

type InstanceInstanceMarketOptionsSpotOptionsArgs struct {
	// The behavior when a Spot Instance is interrupted. Valid values include `hibernate`, `stop`, `terminate` . The default is `terminate`.
	InstanceInterruptionBehavior pulumix.Input[*string] `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price that you're willing to pay for a Spot Instance.
	MaxPrice pulumix.Input[*string] `pulumi:"maxPrice"`
	// The Spot Instance request type. Valid values include `one-time`, `persistent`. Persistent Spot Instance requests are only supported when the instance interruption behavior is either hibernate or stop. The default is `one-time`.
	SpotInstanceType pulumix.Input[*string] `pulumi:"spotInstanceType"`
	// The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.
	ValidUntil pulumix.Input[*string] `pulumi:"validUntil"`
}

func (InstanceInstanceMarketOptionsSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (i InstanceInstanceMarketOptionsSpotOptionsArgs) ToInstanceInstanceMarketOptionsSpotOptionsOutput() InstanceInstanceMarketOptionsSpotOptionsOutput {
	return i.ToInstanceInstanceMarketOptionsSpotOptionsOutputWithContext(context.Background())
}

func (i InstanceInstanceMarketOptionsSpotOptionsArgs) ToInstanceInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) InstanceInstanceMarketOptionsSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceInstanceMarketOptionsSpotOptionsOutput)
}

func (i *InstanceInstanceMarketOptionsSpotOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceInstanceMarketOptionsSpotOptionsArgs] {
	return pulumix.Val(i)
}

type InstanceInstanceMarketOptionsSpotOptionsOutput struct{ *pulumi.OutputState }

func (InstanceInstanceMarketOptionsSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (o InstanceInstanceMarketOptionsSpotOptionsOutput) ToInstanceInstanceMarketOptionsSpotOptionsOutput() InstanceInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o InstanceInstanceMarketOptionsSpotOptionsOutput) ToInstanceInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) InstanceInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o InstanceInstanceMarketOptionsSpotOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceInstanceMarketOptionsSpotOptions] {
	return pulumix.Output[InstanceInstanceMarketOptionsSpotOptions]{
		OutputState: o.OutputState,
	}
}

// The behavior when a Spot Instance is interrupted. Valid values include `hibernate`, `stop`, `terminate` . The default is `terminate`.
func (o InstanceInstanceMarketOptionsSpotOptionsOutput) InstanceInterruptionBehavior() pulumix.Output[*string] {
	return pulumix.Apply[InstanceInstanceMarketOptionsSpotOptions](o, func(v InstanceInstanceMarketOptionsSpotOptions) *string { return v.InstanceInterruptionBehavior })
}

// The maximum hourly price that you're willing to pay for a Spot Instance.
func (o InstanceInstanceMarketOptionsSpotOptionsOutput) MaxPrice() pulumix.Output[*string] {
	return pulumix.Apply[InstanceInstanceMarketOptionsSpotOptions](o, func(v InstanceInstanceMarketOptionsSpotOptions) *string { return v.MaxPrice })
}

// The Spot Instance request type. Valid values include `one-time`, `persistent`. Persistent Spot Instance requests are only supported when the instance interruption behavior is either hibernate or stop. The default is `one-time`.
func (o InstanceInstanceMarketOptionsSpotOptionsOutput) SpotInstanceType() pulumix.Output[*string] {
	return pulumix.Apply[InstanceInstanceMarketOptionsSpotOptions](o, func(v InstanceInstanceMarketOptionsSpotOptions) *string { return v.SpotInstanceType })
}

// The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.
func (o InstanceInstanceMarketOptionsSpotOptionsOutput) ValidUntil() pulumix.Output[*string] {
	return pulumix.Apply[InstanceInstanceMarketOptionsSpotOptions](o, func(v InstanceInstanceMarketOptionsSpotOptions) *string { return v.ValidUntil })
}

type InstanceLaunchTemplate struct {
	// ID of the launch template. Conflicts with `name`.
	Id *string `pulumi:"id"`
	// Name of the launch template. Conflicts with `id`.
	Name *string `pulumi:"name"`
	// Template version. Can be a specific version number, `$Latest` or `$Default`. The default value is `$Default`.
	Version *string `pulumi:"version"`
}

type InstanceLaunchTemplateArgs struct {
	// ID of the launch template. Conflicts with `name`.
	Id pulumix.Input[*string] `pulumi:"id"`
	// Name of the launch template. Conflicts with `id`.
	Name pulumix.Input[*string] `pulumi:"name"`
	// Template version. Can be a specific version number, `$Latest` or `$Default`. The default value is `$Default`.
	Version pulumix.Input[*string] `pulumi:"version"`
}

func (InstanceLaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceLaunchTemplate)(nil)).Elem()
}

func (i InstanceLaunchTemplateArgs) ToInstanceLaunchTemplateOutput() InstanceLaunchTemplateOutput {
	return i.ToInstanceLaunchTemplateOutputWithContext(context.Background())
}

func (i InstanceLaunchTemplateArgs) ToInstanceLaunchTemplateOutputWithContext(ctx context.Context) InstanceLaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceLaunchTemplateOutput)
}

func (i *InstanceLaunchTemplateArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceLaunchTemplateArgs] {
	return pulumix.Val(i)
}

type InstanceLaunchTemplateOutput struct{ *pulumi.OutputState }

func (InstanceLaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceLaunchTemplate)(nil)).Elem()
}

func (o InstanceLaunchTemplateOutput) ToInstanceLaunchTemplateOutput() InstanceLaunchTemplateOutput {
	return o
}

func (o InstanceLaunchTemplateOutput) ToInstanceLaunchTemplateOutputWithContext(ctx context.Context) InstanceLaunchTemplateOutput {
	return o
}

func (o InstanceLaunchTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceLaunchTemplate] {
	return pulumix.Output[InstanceLaunchTemplate]{
		OutputState: o.OutputState,
	}
}

// ID of the launch template. Conflicts with `name`.
func (o InstanceLaunchTemplateOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[InstanceLaunchTemplate](o, func(v InstanceLaunchTemplate) *string { return v.Id })
}

// Name of the launch template. Conflicts with `id`.
func (o InstanceLaunchTemplateOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[InstanceLaunchTemplate](o, func(v InstanceLaunchTemplate) *string { return v.Name })
}

// Template version. Can be a specific version number, `$Latest` or `$Default`. The default value is `$Default`.
func (o InstanceLaunchTemplateOutput) Version() pulumix.Output[*string] {
	return pulumix.Apply[InstanceLaunchTemplate](o, func(v InstanceLaunchTemplate) *string { return v.Version })
}

type InstanceMaintenanceOptions struct {
	// Automatic recovery behavior of the Instance. Can be `"default"` or `"disabled"`. See [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html) for more details.
	AutoRecovery *string `pulumi:"autoRecovery"`
}

type InstanceMaintenanceOptionsArgs struct {
	// Automatic recovery behavior of the Instance. Can be `"default"` or `"disabled"`. See [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html) for more details.
	AutoRecovery pulumix.Input[*string] `pulumi:"autoRecovery"`
}

func (InstanceMaintenanceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceOptions)(nil)).Elem()
}

func (i InstanceMaintenanceOptionsArgs) ToInstanceMaintenanceOptionsOutput() InstanceMaintenanceOptionsOutput {
	return i.ToInstanceMaintenanceOptionsOutputWithContext(context.Background())
}

func (i InstanceMaintenanceOptionsArgs) ToInstanceMaintenanceOptionsOutputWithContext(ctx context.Context) InstanceMaintenanceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMaintenanceOptionsOutput)
}

func (i *InstanceMaintenanceOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceMaintenanceOptionsArgs] {
	return pulumix.Val(i)
}

type InstanceMaintenanceOptionsOutput struct{ *pulumi.OutputState }

func (InstanceMaintenanceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMaintenanceOptions)(nil)).Elem()
}

func (o InstanceMaintenanceOptionsOutput) ToInstanceMaintenanceOptionsOutput() InstanceMaintenanceOptionsOutput {
	return o
}

func (o InstanceMaintenanceOptionsOutput) ToInstanceMaintenanceOptionsOutputWithContext(ctx context.Context) InstanceMaintenanceOptionsOutput {
	return o
}

func (o InstanceMaintenanceOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceMaintenanceOptions] {
	return pulumix.Output[InstanceMaintenanceOptions]{
		OutputState: o.OutputState,
	}
}

// Automatic recovery behavior of the Instance. Can be `"default"` or `"disabled"`. See [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html) for more details.
func (o InstanceMaintenanceOptionsOutput) AutoRecovery() pulumix.Output[*string] {
	return pulumix.Apply[InstanceMaintenanceOptions](o, func(v InstanceMaintenanceOptions) *string { return v.AutoRecovery })
}

type InstanceMetadataOptions struct {
	// Whether the metadata service is available. Valid values include `enabled` or `disabled`. Defaults to `enabled`.
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to `disabled`.
	HttpProtocolIpv6 *string `pulumi:"httpProtocolIpv6"`
	// Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from `1` to `64`. Defaults to `1`.
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Valid values include `optional` or `required`. Defaults to `optional`.
	HttpTokens *string `pulumi:"httpTokens"`
	// Enables or disables access to instance tags from the instance metadata service. Valid values include `enabled` or `disabled`. Defaults to `disabled`.
	//
	// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
	InstanceMetadataTags *string `pulumi:"instanceMetadataTags"`
}

type InstanceMetadataOptionsArgs struct {
	// Whether the metadata service is available. Valid values include `enabled` or `disabled`. Defaults to `enabled`.
	HttpEndpoint pulumix.Input[*string] `pulumi:"httpEndpoint"`
	// Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to `disabled`.
	HttpProtocolIpv6 pulumix.Input[*string] `pulumi:"httpProtocolIpv6"`
	// Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from `1` to `64`. Defaults to `1`.
	HttpPutResponseHopLimit pulumix.Input[*int] `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Valid values include `optional` or `required`. Defaults to `optional`.
	HttpTokens pulumix.Input[*string] `pulumi:"httpTokens"`
	// Enables or disables access to instance tags from the instance metadata service. Valid values include `enabled` or `disabled`. Defaults to `disabled`.
	//
	// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
	InstanceMetadataTags pulumix.Input[*string] `pulumi:"instanceMetadataTags"`
}

func (InstanceMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptions)(nil)).Elem()
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput {
	return i.ToInstanceMetadataOptionsOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsOutputWithContext(ctx context.Context) InstanceMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsOutput)
}

func (i *InstanceMetadataOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceMetadataOptionsArgs] {
	return pulumix.Val(i)
}

type InstanceMetadataOptionsOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptions)(nil)).Elem()
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput {
	return o
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsOutputWithContext(ctx context.Context) InstanceMetadataOptionsOutput {
	return o
}

func (o InstanceMetadataOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceMetadataOptions] {
	return pulumix.Output[InstanceMetadataOptions]{
		OutputState: o.OutputState,
	}
}

// Whether the metadata service is available. Valid values include `enabled` or `disabled`. Defaults to `enabled`.
func (o InstanceMetadataOptionsOutput) HttpEndpoint() pulumix.Output[*string] {
	return pulumix.Apply[InstanceMetadataOptions](o, func(v InstanceMetadataOptions) *string { return v.HttpEndpoint })
}

// Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to `disabled`.
func (o InstanceMetadataOptionsOutput) HttpProtocolIpv6() pulumix.Output[*string] {
	return pulumix.Apply[InstanceMetadataOptions](o, func(v InstanceMetadataOptions) *string { return v.HttpProtocolIpv6 })
}

// Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from `1` to `64`. Defaults to `1`.
func (o InstanceMetadataOptionsOutput) HttpPutResponseHopLimit() pulumix.Output[*int] {
	return pulumix.Apply[InstanceMetadataOptions](o, func(v InstanceMetadataOptions) *int { return v.HttpPutResponseHopLimit })
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Valid values include `optional` or `required`. Defaults to `optional`.
func (o InstanceMetadataOptionsOutput) HttpTokens() pulumix.Output[*string] {
	return pulumix.Apply[InstanceMetadataOptions](o, func(v InstanceMetadataOptions) *string { return v.HttpTokens })
}

// Enables or disables access to instance tags from the instance metadata service. Valid values include `enabled` or `disabled`. Defaults to `disabled`.
//
// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
func (o InstanceMetadataOptionsOutput) InstanceMetadataTags() pulumix.Output[*string] {
	return pulumix.Apply[InstanceMetadataOptions](o, func(v InstanceMetadataOptions) *string { return v.InstanceMetadataTags })
}

type InstanceNetworkInterface struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// Integer index of the network card. Limited by instance type. The default index is `0`.
	NetworkCardIndex *int `pulumi:"networkCardIndex"`
	// ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type InstanceNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumix.Input[*bool] `pulumi:"deleteOnTermination"`
	// Integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumix.Input[int] `pulumi:"deviceIndex"`
	// Integer index of the network card. Limited by instance type. The default index is `0`.
	NetworkCardIndex pulumix.Input[*int] `pulumi:"networkCardIndex"`
	// ID of the network interface to attach.
	NetworkInterfaceId pulumix.Input[string] `pulumi:"networkInterfaceId"`
}

func (InstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return i.ToInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceOutput)
}

func (i *InstanceNetworkInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceNetworkInterfaceArgs] {
	return pulumix.Val(i)
}

type InstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return o
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return o
}

func (o InstanceNetworkInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceNetworkInterface] {
	return pulumix.Output[InstanceNetworkInterface]{
		OutputState: o.OutputState,
	}
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o InstanceNetworkInterfaceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[InstanceNetworkInterface](o, func(v InstanceNetworkInterface) *bool { return v.DeleteOnTermination })
}

// Integer index of the network interface attachment. Limited by instance type.
func (o InstanceNetworkInterfaceOutput) DeviceIndex() pulumix.Output[int] {
	return pulumix.Apply[InstanceNetworkInterface](o, func(v InstanceNetworkInterface) int { return v.DeviceIndex })
}

// Integer index of the network card. Limited by instance type. The default index is `0`.
func (o InstanceNetworkInterfaceOutput) NetworkCardIndex() pulumix.Output[*int] {
	return pulumix.Apply[InstanceNetworkInterface](o, func(v InstanceNetworkInterface) *int { return v.NetworkCardIndex })
}

// ID of the network interface to attach.
func (o InstanceNetworkInterfaceOutput) NetworkInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[InstanceNetworkInterface](o, func(v InstanceNetworkInterface) string { return v.NetworkInterfaceId })
}

type InstancePrivateDnsNameOptions struct {
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	EnableResourceNameDnsARecord *bool `pulumi:"enableResourceNameDnsARecord"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	EnableResourceNameDnsAaaaRecord *bool `pulumi:"enableResourceNameDnsAaaaRecord"`
	// Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
	HostnameType *string `pulumi:"hostnameType"`
}

type InstancePrivateDnsNameOptionsArgs struct {
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	EnableResourceNameDnsARecord pulumix.Input[*bool] `pulumi:"enableResourceNameDnsARecord"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	EnableResourceNameDnsAaaaRecord pulumix.Input[*bool] `pulumi:"enableResourceNameDnsAaaaRecord"`
	// Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
	HostnameType pulumix.Input[*string] `pulumi:"hostnameType"`
}

func (InstancePrivateDnsNameOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateDnsNameOptions)(nil)).Elem()
}

func (i InstancePrivateDnsNameOptionsArgs) ToInstancePrivateDnsNameOptionsOutput() InstancePrivateDnsNameOptionsOutput {
	return i.ToInstancePrivateDnsNameOptionsOutputWithContext(context.Background())
}

func (i InstancePrivateDnsNameOptionsArgs) ToInstancePrivateDnsNameOptionsOutputWithContext(ctx context.Context) InstancePrivateDnsNameOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateDnsNameOptionsOutput)
}

func (i *InstancePrivateDnsNameOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*InstancePrivateDnsNameOptionsArgs] {
	return pulumix.Val(i)
}

type InstancePrivateDnsNameOptionsOutput struct{ *pulumi.OutputState }

func (InstancePrivateDnsNameOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateDnsNameOptions)(nil)).Elem()
}

func (o InstancePrivateDnsNameOptionsOutput) ToInstancePrivateDnsNameOptionsOutput() InstancePrivateDnsNameOptionsOutput {
	return o
}

func (o InstancePrivateDnsNameOptionsOutput) ToInstancePrivateDnsNameOptionsOutputWithContext(ctx context.Context) InstancePrivateDnsNameOptionsOutput {
	return o
}

func (o InstancePrivateDnsNameOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[InstancePrivateDnsNameOptions] {
	return pulumix.Output[InstancePrivateDnsNameOptions]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
func (o InstancePrivateDnsNameOptionsOutput) EnableResourceNameDnsARecord() pulumix.Output[*bool] {
	return pulumix.Apply[InstancePrivateDnsNameOptions](o, func(v InstancePrivateDnsNameOptions) *bool { return v.EnableResourceNameDnsARecord })
}

// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
func (o InstancePrivateDnsNameOptionsOutput) EnableResourceNameDnsAaaaRecord() pulumix.Output[*bool] {
	return pulumix.Apply[InstancePrivateDnsNameOptions](o, func(v InstancePrivateDnsNameOptions) *bool { return v.EnableResourceNameDnsAaaaRecord })
}

// Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
func (o InstancePrivateDnsNameOptionsOutput) HostnameType() pulumix.Output[*string] {
	return pulumix.Apply[InstancePrivateDnsNameOptions](o, func(v InstancePrivateDnsNameOptions) *string { return v.HostnameType })
}

type InstanceRootBlockDevice struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `true`.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Whether to enable volume encryption. Defaults to `false`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Map of tags to assign to the device.
	Tags map[string]string `pulumi:"tags"`
	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
	Throughput *int `pulumi:"throughput"`
	// ID of the volume. For example, the ID can be accessed like this, `aws_instance.web.root_block_device.0.volume_id`.
	VolumeId *string `pulumi:"volumeId"`
	// Size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
	//
	// Modifying the `encrypted` or `kmsKeyId` settings of the `rootBlockDevice` requires resource replacement.
	VolumeType *string `pulumi:"volumeType"`
}

type InstanceRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `true`.
	DeleteOnTermination pulumix.Input[*bool] `pulumi:"deleteOnTermination"`
	// Name of the device to mount.
	DeviceName pulumix.Input[*string] `pulumi:"deviceName"`
	// Whether to enable volume encryption. Defaults to `false`. Must be configured to perform drift detection.
	Encrypted pulumix.Input[*bool] `pulumi:"encrypted"`
	// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
	Iops pulumix.Input[*int] `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// Map of tags to assign to the device.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
	Throughput pulumix.Input[*int] `pulumi:"throughput"`
	// ID of the volume. For example, the ID can be accessed like this, `aws_instance.web.root_block_device.0.volume_id`.
	VolumeId pulumix.Input[*string] `pulumi:"volumeId"`
	// Size of the volume in gibibytes (GiB).
	VolumeSize pulumix.Input[*int] `pulumi:"volumeSize"`
	// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
	//
	// Modifying the `encrypted` or `kmsKeyId` settings of the `rootBlockDevice` requires resource replacement.
	VolumeType pulumix.Input[*string] `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return i.ToInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput)
}

func (i *InstanceRootBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceRootBlockDeviceArgs] {
	return pulumix.Val(i)
}

type InstanceRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceRootBlockDevice] {
	return pulumix.Output[InstanceRootBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Whether the volume should be destroyed on instance termination. Defaults to `true`.
func (o InstanceRootBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination })
}

// Name of the device to mount.
func (o InstanceRootBlockDeviceOutput) DeviceName() pulumix.Output[*string] {
	return pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) *string { return v.DeviceName })
}

// Whether to enable volume encryption. Defaults to `false`. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) *bool { return v.Encrypted })
}

// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
func (o InstanceRootBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) *int { return v.Iops })
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) *string { return v.KmsKeyId })
}

// Map of tags to assign to the device.
func (o InstanceRootBlockDeviceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
func (o InstanceRootBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) *int { return v.Throughput })
}

// ID of the volume. For example, the ID can be accessed like this, `aws_instance.web.root_block_device.0.volume_id`.
func (o InstanceRootBlockDeviceOutput) VolumeId() pulumix.Output[*string] {
	return pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) *string { return v.VolumeId })
}

// Size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) *int { return v.VolumeSize })
}

// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
//
// Modifying the `encrypted` or `kmsKeyId` settings of the `rootBlockDevice` requires resource replacement.
func (o InstanceRootBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[InstanceRootBlockDevice](o, func(v InstanceRootBlockDevice) *string { return v.VolumeType })
}

type LaunchConfigurationEbsBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	NoDevice            *bool   `pulumi:"noDevice"`
	SnapshotId          *string `pulumi:"snapshotId"`
	Throughput          *int    `pulumi:"throughput"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type LaunchConfigurationEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumix.Input[*bool]   `pulumi:"deleteOnTermination"`
	DeviceName          pulumix.Input[string]  `pulumi:"deviceName"`
	Encrypted           pulumix.Input[*bool]   `pulumi:"encrypted"`
	Iops                pulumix.Input[*int]    `pulumi:"iops"`
	NoDevice            pulumix.Input[*bool]   `pulumi:"noDevice"`
	SnapshotId          pulumix.Input[*string] `pulumi:"snapshotId"`
	Throughput          pulumix.Input[*int]    `pulumi:"throughput"`
	VolumeSize          pulumix.Input[*int]    `pulumi:"volumeSize"`
	VolumeType          pulumix.Input[*string] `pulumi:"volumeType"`
}

func (LaunchConfigurationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceArgs) ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceArgs) ToLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceOutput)
}

func (i *LaunchConfigurationEbsBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchConfigurationEbsBlockDeviceArgs] {
	return pulumix.Val(i)
}

type LaunchConfigurationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceOutput) ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceOutput) ToLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchConfigurationEbsBlockDevice] {
	return pulumix.Output[LaunchConfigurationEbsBlockDevice]{
		OutputState: o.OutputState,
	}
}

func (o LaunchConfigurationEbsBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchConfigurationEbsBlockDevice](o, func(v LaunchConfigurationEbsBlockDevice) *bool { return v.DeleteOnTermination })
}

func (o LaunchConfigurationEbsBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[LaunchConfigurationEbsBlockDevice](o, func(v LaunchConfigurationEbsBlockDevice) string { return v.DeviceName })
}

func (o LaunchConfigurationEbsBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchConfigurationEbsBlockDevice](o, func(v LaunchConfigurationEbsBlockDevice) *bool { return v.Encrypted })
}

func (o LaunchConfigurationEbsBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[LaunchConfigurationEbsBlockDevice](o, func(v LaunchConfigurationEbsBlockDevice) *int { return v.Iops })
}

func (o LaunchConfigurationEbsBlockDeviceOutput) NoDevice() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchConfigurationEbsBlockDevice](o, func(v LaunchConfigurationEbsBlockDevice) *bool { return v.NoDevice })
}

func (o LaunchConfigurationEbsBlockDeviceOutput) SnapshotId() pulumix.Output[*string] {
	return pulumix.Apply[LaunchConfigurationEbsBlockDevice](o, func(v LaunchConfigurationEbsBlockDevice) *string { return v.SnapshotId })
}

func (o LaunchConfigurationEbsBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[LaunchConfigurationEbsBlockDevice](o, func(v LaunchConfigurationEbsBlockDevice) *int { return v.Throughput })
}

func (o LaunchConfigurationEbsBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[LaunchConfigurationEbsBlockDevice](o, func(v LaunchConfigurationEbsBlockDevice) *int { return v.VolumeSize })
}

func (o LaunchConfigurationEbsBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[LaunchConfigurationEbsBlockDevice](o, func(v LaunchConfigurationEbsBlockDevice) *string { return v.VolumeType })
}

type LaunchConfigurationEphemeralBlockDevice struct {
	DeviceName  string  `pulumi:"deviceName"`
	NoDevice    *bool   `pulumi:"noDevice"`
	VirtualName *string `pulumi:"virtualName"`
}

type LaunchConfigurationEphemeralBlockDeviceArgs struct {
	DeviceName  pulumix.Input[string]  `pulumi:"deviceName"`
	NoDevice    pulumix.Input[*bool]   `pulumi:"noDevice"`
	VirtualName pulumix.Input[*string] `pulumi:"virtualName"`
}

func (LaunchConfigurationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceArgs) ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceArgs) ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceOutput)
}

func (i *LaunchConfigurationEphemeralBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchConfigurationEphemeralBlockDeviceArgs] {
	return pulumix.Val(i)
}

type LaunchConfigurationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchConfigurationEphemeralBlockDevice] {
	return pulumix.Output[LaunchConfigurationEphemeralBlockDevice]{
		OutputState: o.OutputState,
	}
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[LaunchConfigurationEphemeralBlockDevice](o, func(v LaunchConfigurationEphemeralBlockDevice) string { return v.DeviceName })
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) NoDevice() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchConfigurationEphemeralBlockDevice](o, func(v LaunchConfigurationEphemeralBlockDevice) *bool { return v.NoDevice })
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) VirtualName() pulumix.Output[*string] {
	return pulumix.Apply[LaunchConfigurationEphemeralBlockDevice](o, func(v LaunchConfigurationEphemeralBlockDevice) *string { return v.VirtualName })
}

type LaunchConfigurationMetadataOptions struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens *string `pulumi:"httpTokens"`
}

type LaunchConfigurationMetadataOptionsArgs struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint pulumix.Input[*string] `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit pulumix.Input[*int] `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens pulumix.Input[*string] `pulumi:"httpTokens"`
}

func (LaunchConfigurationMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationMetadataOptions)(nil)).Elem()
}

func (i LaunchConfigurationMetadataOptionsArgs) ToLaunchConfigurationMetadataOptionsOutput() LaunchConfigurationMetadataOptionsOutput {
	return i.ToLaunchConfigurationMetadataOptionsOutputWithContext(context.Background())
}

func (i LaunchConfigurationMetadataOptionsArgs) ToLaunchConfigurationMetadataOptionsOutputWithContext(ctx context.Context) LaunchConfigurationMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationMetadataOptionsOutput)
}

func (i *LaunchConfigurationMetadataOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchConfigurationMetadataOptionsArgs] {
	return pulumix.Val(i)
}

type LaunchConfigurationMetadataOptionsOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationMetadataOptions)(nil)).Elem()
}

func (o LaunchConfigurationMetadataOptionsOutput) ToLaunchConfigurationMetadataOptionsOutput() LaunchConfigurationMetadataOptionsOutput {
	return o
}

func (o LaunchConfigurationMetadataOptionsOutput) ToLaunchConfigurationMetadataOptionsOutputWithContext(ctx context.Context) LaunchConfigurationMetadataOptionsOutput {
	return o
}

func (o LaunchConfigurationMetadataOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchConfigurationMetadataOptions] {
	return pulumix.Output[LaunchConfigurationMetadataOptions]{
		OutputState: o.OutputState,
	}
}

// The state of the metadata service: `enabled`, `disabled`.
func (o LaunchConfigurationMetadataOptionsOutput) HttpEndpoint() pulumix.Output[*string] {
	return pulumix.Apply[LaunchConfigurationMetadataOptions](o, func(v LaunchConfigurationMetadataOptions) *string { return v.HttpEndpoint })
}

// The desired HTTP PUT response hop limit for instance metadata requests.
func (o LaunchConfigurationMetadataOptionsOutput) HttpPutResponseHopLimit() pulumix.Output[*int] {
	return pulumix.Apply[LaunchConfigurationMetadataOptions](o, func(v LaunchConfigurationMetadataOptions) *int { return v.HttpPutResponseHopLimit })
}

// If session tokens are required: `optional`, `required`.
func (o LaunchConfigurationMetadataOptionsOutput) HttpTokens() pulumix.Output[*string] {
	return pulumix.Apply[LaunchConfigurationMetadataOptions](o, func(v LaunchConfigurationMetadataOptions) *string { return v.HttpTokens })
}

type LaunchConfigurationRootBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	Throughput          *int    `pulumi:"throughput"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type LaunchConfigurationRootBlockDeviceArgs struct {
	DeleteOnTermination pulumix.Input[*bool]   `pulumi:"deleteOnTermination"`
	Encrypted           pulumix.Input[*bool]   `pulumi:"encrypted"`
	Iops                pulumix.Input[*int]    `pulumi:"iops"`
	Throughput          pulumix.Input[*int]    `pulumi:"throughput"`
	VolumeSize          pulumix.Input[*int]    `pulumi:"volumeSize"`
	VolumeType          pulumix.Input[*string] `pulumi:"volumeType"`
}

func (LaunchConfigurationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput {
	return i.ToLaunchConfigurationRootBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceOutput)
}

func (i *LaunchConfigurationRootBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchConfigurationRootBlockDeviceArgs] {
	return pulumix.Val(i)
}

type LaunchConfigurationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchConfigurationRootBlockDevice] {
	return pulumix.Output[LaunchConfigurationRootBlockDevice]{
		OutputState: o.OutputState,
	}
}

func (o LaunchConfigurationRootBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchConfigurationRootBlockDevice](o, func(v LaunchConfigurationRootBlockDevice) *bool { return v.DeleteOnTermination })
}

func (o LaunchConfigurationRootBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchConfigurationRootBlockDevice](o, func(v LaunchConfigurationRootBlockDevice) *bool { return v.Encrypted })
}

func (o LaunchConfigurationRootBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[LaunchConfigurationRootBlockDevice](o, func(v LaunchConfigurationRootBlockDevice) *int { return v.Iops })
}

func (o LaunchConfigurationRootBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[LaunchConfigurationRootBlockDevice](o, func(v LaunchConfigurationRootBlockDevice) *int { return v.Throughput })
}

func (o LaunchConfigurationRootBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[LaunchConfigurationRootBlockDevice](o, func(v LaunchConfigurationRootBlockDevice) *int { return v.VolumeSize })
}

func (o LaunchConfigurationRootBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[LaunchConfigurationRootBlockDevice](o, func(v LaunchConfigurationRootBlockDevice) *string { return v.VolumeType })
}

type LaunchTemplateBlockDeviceMapping struct {
	// The name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs *LaunchTemplateBlockDeviceMappingEbs `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *string `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g., `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type LaunchTemplateBlockDeviceMappingArgs struct {
	// The name of the device to mount.
	DeviceName pulumix.Input[*string] `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs pulumix.Input[*LaunchTemplateBlockDeviceMappingEbsArgs] `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumix.Input[*string] `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g., `"ephemeral0"`).
	VirtualName pulumix.Input[*string] `pulumi:"virtualName"`
}

func (LaunchTemplateBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingArgs) ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput {
	return i.ToLaunchTemplateBlockDeviceMappingOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingArgs) ToLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingOutput)
}

func (i *LaunchTemplateBlockDeviceMappingArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateBlockDeviceMappingArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingOutput) ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingOutput) ToLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateBlockDeviceMapping] {
	return pulumix.Output[LaunchTemplateBlockDeviceMapping]{
		OutputState: o.OutputState,
	}
}

// The name of the device to mount.
func (o LaunchTemplateBlockDeviceMappingOutput) DeviceName() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMapping](o, func(v LaunchTemplateBlockDeviceMapping) *string { return v.DeviceName })
}

// Configure EBS volume properties.
func (o LaunchTemplateBlockDeviceMappingOutput) Ebs() pulumix.GPtrOutput[LaunchTemplateBlockDeviceMappingEbs, LaunchTemplateBlockDeviceMappingEbsOutput] {
	value := pulumix.Apply[LaunchTemplateBlockDeviceMapping](o, func(v LaunchTemplateBlockDeviceMapping) *LaunchTemplateBlockDeviceMappingEbs { return v.Ebs })
	return pulumix.GPtrOutput[LaunchTemplateBlockDeviceMappingEbs, LaunchTemplateBlockDeviceMappingEbsOutput]{OutputState: value.OutputState}
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o LaunchTemplateBlockDeviceMappingOutput) NoDevice() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMapping](o, func(v LaunchTemplateBlockDeviceMapping) *string { return v.NoDevice })
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g., `"ephemeral0"`).
func (o LaunchTemplateBlockDeviceMappingOutput) VirtualName() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMapping](o, func(v LaunchTemplateBlockDeviceMapping) *string { return v.VirtualName })
}

type LaunchTemplateBlockDeviceMappingEbs struct {
	// Whether the volume should be destroyed on instance termination.
	// See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.
	// Cannot be used with `snapshotId`.
	Encrypted *string `pulumi:"encrypted"`
	// The amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1/io2/gp3"`.
	Iops *int `pulumi:"iops"`
	// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	// The throughput to provision for a `gp3` volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
	Throughput *int `pulumi:"throughput"`
	// The size of the volume in gigabytes.
	VolumeSize *int `pulumi:"volumeSize"`
	// The volume type.
	// Can be one of `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1`.
	VolumeType *string `pulumi:"volumeType"`
}

type LaunchTemplateBlockDeviceMappingEbsArgs struct {
	// Whether the volume should be destroyed on instance termination.
	// See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination pulumix.Input[*string] `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.
	// Cannot be used with `snapshotId`.
	Encrypted pulumix.Input[*string] `pulumi:"encrypted"`
	// The amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1/io2/gp3"`.
	Iops pulumix.Input[*int] `pulumi:"iops"`
	// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumix.Input[*string] `pulumi:"snapshotId"`
	// The throughput to provision for a `gp3` volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
	Throughput pulumix.Input[*int] `pulumi:"throughput"`
	// The size of the volume in gigabytes.
	VolumeSize pulumix.Input[*int] `pulumi:"volumeSize"`
	// The volume type.
	// Can be one of `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1`.
	VolumeType pulumix.Input[*string] `pulumi:"volumeType"`
}

func (LaunchTemplateBlockDeviceMappingEbsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsOutput)
}

func (i *LaunchTemplateBlockDeviceMappingEbsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateBlockDeviceMappingEbsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateBlockDeviceMappingEbsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingEbsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateBlockDeviceMappingEbs] {
	return pulumix.Output[LaunchTemplateBlockDeviceMappingEbs]{
		OutputState: o.OutputState,
	}
}

// Whether the volume should be destroyed on instance termination.
// See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) DeleteOnTermination() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMappingEbs](o, func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.DeleteOnTermination })
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.
// Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) Encrypted() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMappingEbs](o, func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.Encrypted })
}

// The amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1/io2/gp3"`.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMappingEbs](o, func(v LaunchTemplateBlockDeviceMappingEbs) *int { return v.Iops })
}

// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMappingEbs](o, func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.KmsKeyId })
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) SnapshotId() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMappingEbs](o, func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.SnapshotId })
}

// The throughput to provision for a `gp3` volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMappingEbs](o, func(v LaunchTemplateBlockDeviceMappingEbs) *int { return v.Throughput })
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMappingEbs](o, func(v LaunchTemplateBlockDeviceMappingEbs) *int { return v.VolumeSize })
}

// The volume type.
// Can be one of `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1`.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateBlockDeviceMappingEbs](o, func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.VolumeType })
}

type LaunchTemplateCapacityReservationSpecification struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference *string `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget `pulumi:"capacityReservationTarget"`
}

type LaunchTemplateCapacityReservationSpecificationArgs struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference pulumix.Input[*string] `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget pulumix.Input[*LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs] `pulumi:"capacityReservationTarget"`
}

func (LaunchTemplateCapacityReservationSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationOutput)
}

func (i *LaunchTemplateCapacityReservationSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateCapacityReservationSpecificationArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateCapacityReservationSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateCapacityReservationSpecification] {
	return pulumix.Output[LaunchTemplateCapacityReservationSpecification]{
		OutputState: o.OutputState,
	}
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationPreference() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateCapacityReservationSpecification](o, func(v LaunchTemplateCapacityReservationSpecification) *string { return v.CapacityReservationPreference })
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationTarget() pulumix.GPtrOutput[LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget, LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput] {
	value := pulumix.Apply[LaunchTemplateCapacityReservationSpecification](o, func(v LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return v.CapacityReservationTarget
	})
	return pulumix.GPtrOutput[LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget, LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput]{OutputState: value.OutputState}
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget struct {
	// The ID of the Capacity Reservation in which to run the instance.
	CapacityReservationId *string `pulumi:"capacityReservationId"`
	// The ARN of the Capacity Reservation resource group in which to run the instance.
	CapacityReservationResourceGroupArn *string `pulumi:"capacityReservationResourceGroupArn"`
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs struct {
	// The ID of the Capacity Reservation in which to run the instance.
	CapacityReservationId pulumix.Input[*string] `pulumi:"capacityReservationId"`
	// The ARN of the Capacity Reservation resource group in which to run the instance.
	CapacityReservationResourceGroupArn pulumix.Input[*string] `pulumi:"capacityReservationResourceGroupArn"`
}

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput)
}

func (i *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget] {
	return pulumix.Output[LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget]{
		OutputState: o.OutputState,
	}
}

// The ID of the Capacity Reservation in which to run the instance.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationId() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget](o, func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationId
	})
}

// The ARN of the Capacity Reservation resource group in which to run the instance.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationResourceGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget](o, func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationResourceGroupArn
	})
}

type LaunchTemplateCpuOptions struct {
	// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
	AmdSevSnp *string `pulumi:"amdSevSnp"`
	// The number of CPU cores for the instance.
	CoreCount *int `pulumi:"coreCount"`
	// The number of threads per CPU core.
	// To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	//
	// Both number of CPU cores and threads per core must be specified. Valid number of CPU cores and threads per core for the instance type can be found in the [CPU Options Documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html?shortFooter=true#cpu-options-supported-instances-values)
	ThreadsPerCore *int `pulumi:"threadsPerCore"`
}

type LaunchTemplateCpuOptionsArgs struct {
	// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
	AmdSevSnp pulumix.Input[*string] `pulumi:"amdSevSnp"`
	// The number of CPU cores for the instance.
	CoreCount pulumix.Input[*int] `pulumi:"coreCount"`
	// The number of threads per CPU core.
	// To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	//
	// Both number of CPU cores and threads per core must be specified. Valid number of CPU cores and threads per core for the instance type can be found in the [CPU Options Documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html?shortFooter=true#cpu-options-supported-instances-values)
	ThreadsPerCore pulumix.Input[*int] `pulumi:"threadsPerCore"`
}

func (LaunchTemplateCpuOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptions)(nil)).Elem()
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput {
	return i.ToLaunchTemplateCpuOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsOutput)
}

func (i *LaunchTemplateCpuOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateCpuOptionsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateCpuOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptions)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateCpuOptions] {
	return pulumix.Output[LaunchTemplateCpuOptions]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
func (o LaunchTemplateCpuOptionsOutput) AmdSevSnp() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateCpuOptions](o, func(v LaunchTemplateCpuOptions) *string { return v.AmdSevSnp })
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsOutput) CoreCount() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateCpuOptions](o, func(v LaunchTemplateCpuOptions) *int { return v.CoreCount })
}

// The number of threads per CPU core.
// To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
//
// Both number of CPU cores and threads per core must be specified. Valid number of CPU cores and threads per core for the instance type can be found in the [CPU Options Documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html?shortFooter=true#cpu-options-supported-instances-values)
func (o LaunchTemplateCpuOptionsOutput) ThreadsPerCore() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateCpuOptions](o, func(v LaunchTemplateCpuOptions) *int { return v.ThreadsPerCore })
}

type LaunchTemplateCreditSpecification struct {
	// The credit option for CPU usage.
	// Can be `standard` or `unlimited`.
	// T3 instances are launched as `unlimited` by default.
	// T2 instances are launched as `standard` by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type LaunchTemplateCreditSpecificationArgs struct {
	// The credit option for CPU usage.
	// Can be `standard` or `unlimited`.
	// T3 instances are launched as `unlimited` by default.
	// T2 instances are launched as `standard` by default.
	CpuCredits pulumix.Input[*string] `pulumi:"cpuCredits"`
}

func (LaunchTemplateCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput {
	return i.ToLaunchTemplateCreditSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationOutput)
}

func (i *LaunchTemplateCreditSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateCreditSpecificationArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateCreditSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateCreditSpecification] {
	return pulumix.Output[LaunchTemplateCreditSpecification]{
		OutputState: o.OutputState,
	}
}

// The credit option for CPU usage.
// Can be `standard` or `unlimited`.
// T3 instances are launched as `unlimited` by default.
// T2 instances are launched as `standard` by default.
func (o LaunchTemplateCreditSpecificationOutput) CpuCredits() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateCreditSpecification](o, func(v LaunchTemplateCreditSpecification) *string { return v.CpuCredits })
}

type LaunchTemplateElasticGpuSpecification struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type string `pulumi:"type"`
}

type LaunchTemplateElasticGpuSpecificationArgs struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type pulumix.Input[string] `pulumi:"type"`
}

func (LaunchTemplateElasticGpuSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationArgs) ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationArgs) ToLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationOutput)
}

func (i *LaunchTemplateElasticGpuSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateElasticGpuSpecificationArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateElasticGpuSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationOutput) ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationOutput) ToLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateElasticGpuSpecification] {
	return pulumix.Output[LaunchTemplateElasticGpuSpecification]{
		OutputState: o.OutputState,
	}
}

// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
func (o LaunchTemplateElasticGpuSpecificationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[LaunchTemplateElasticGpuSpecification](o, func(v LaunchTemplateElasticGpuSpecification) string { return v.Type })
}

type LaunchTemplateElasticInferenceAccelerator struct {
	// Accelerator type.
	Type string `pulumi:"type"`
}

type LaunchTemplateElasticInferenceAcceleratorArgs struct {
	// Accelerator type.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (LaunchTemplateElasticInferenceAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorOutput)
}

func (i *LaunchTemplateElasticInferenceAcceleratorArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateElasticInferenceAcceleratorArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateElasticInferenceAcceleratorOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateElasticInferenceAccelerator] {
	return pulumix.Output[LaunchTemplateElasticInferenceAccelerator]{
		OutputState: o.OutputState,
	}
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[LaunchTemplateElasticInferenceAccelerator](o, func(v LaunchTemplateElasticInferenceAccelerator) string { return v.Type })
}

type LaunchTemplateEnclaveOptions struct {
	// If set to `true`, Nitro Enclaves will be enabled on the instance.
	//
	// For more information, see the documentation on [Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html).
	Enabled *bool `pulumi:"enabled"`
}

type LaunchTemplateEnclaveOptionsArgs struct {
	// If set to `true`, Nitro Enclaves will be enabled on the instance.
	//
	// For more information, see the documentation on [Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html).
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (LaunchTemplateEnclaveOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateEnclaveOptions)(nil)).Elem()
}

func (i LaunchTemplateEnclaveOptionsArgs) ToLaunchTemplateEnclaveOptionsOutput() LaunchTemplateEnclaveOptionsOutput {
	return i.ToLaunchTemplateEnclaveOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateEnclaveOptionsArgs) ToLaunchTemplateEnclaveOptionsOutputWithContext(ctx context.Context) LaunchTemplateEnclaveOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateEnclaveOptionsOutput)
}

func (i *LaunchTemplateEnclaveOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateEnclaveOptionsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateEnclaveOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateEnclaveOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateEnclaveOptions)(nil)).Elem()
}

func (o LaunchTemplateEnclaveOptionsOutput) ToLaunchTemplateEnclaveOptionsOutput() LaunchTemplateEnclaveOptionsOutput {
	return o
}

func (o LaunchTemplateEnclaveOptionsOutput) ToLaunchTemplateEnclaveOptionsOutputWithContext(ctx context.Context) LaunchTemplateEnclaveOptionsOutput {
	return o
}

func (o LaunchTemplateEnclaveOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateEnclaveOptions] {
	return pulumix.Output[LaunchTemplateEnclaveOptions]{
		OutputState: o.OutputState,
	}
}

// If set to `true`, Nitro Enclaves will be enabled on the instance.
//
// For more information, see the documentation on [Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html).
func (o LaunchTemplateEnclaveOptionsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchTemplateEnclaveOptions](o, func(v LaunchTemplateEnclaveOptions) *bool { return v.Enabled })
}

type LaunchTemplateHibernationOptions struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured bool `pulumi:"configured"`
}

type LaunchTemplateHibernationOptionsArgs struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured pulumix.Input[bool] `pulumi:"configured"`
}

func (LaunchTemplateHibernationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput {
	return i.ToLaunchTemplateHibernationOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsOutput)
}

func (i *LaunchTemplateHibernationOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateHibernationOptionsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateHibernationOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateHibernationOptions] {
	return pulumix.Output[LaunchTemplateHibernationOptions]{
		OutputState: o.OutputState,
	}
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsOutput) Configured() pulumix.Output[bool] {
	return pulumix.Apply[LaunchTemplateHibernationOptions](o, func(v LaunchTemplateHibernationOptions) bool { return v.Configured })
}

type LaunchTemplateIamInstanceProfile struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn *string `pulumi:"arn"`
	// The name of the instance profile.
	Name *string `pulumi:"name"`
}

type LaunchTemplateIamInstanceProfileArgs struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// The name of the instance profile.
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (LaunchTemplateIamInstanceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput {
	return i.ToLaunchTemplateIamInstanceProfileOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileOutput)
}

func (i *LaunchTemplateIamInstanceProfileArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateIamInstanceProfileArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateIamInstanceProfileOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateIamInstanceProfile] {
	return pulumix.Output[LaunchTemplateIamInstanceProfile]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfileOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateIamInstanceProfile](o, func(v LaunchTemplateIamInstanceProfile) *string { return v.Arn })
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfileOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateIamInstanceProfile](o, func(v LaunchTemplateIamInstanceProfile) *string { return v.Name })
}

type LaunchTemplateInstanceMarketOptions struct {
	// The market type. Can be `spot`.
	MarketType *string `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions *LaunchTemplateInstanceMarketOptionsSpotOptions `pulumi:"spotOptions"`
}

type LaunchTemplateInstanceMarketOptionsArgs struct {
	// The market type. Can be `spot`.
	MarketType pulumix.Input[*string] `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions pulumix.Input[*LaunchTemplateInstanceMarketOptionsSpotOptionsArgs] `pulumi:"spotOptions"`
}

func (LaunchTemplateInstanceMarketOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsOutput)
}

func (i *LaunchTemplateInstanceMarketOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceMarketOptionsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceMarketOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceMarketOptions] {
	return pulumix.Output[LaunchTemplateInstanceMarketOptions]{
		OutputState: o.OutputState,
	}
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsOutput) MarketType() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateInstanceMarketOptions](o, func(v LaunchTemplateInstanceMarketOptions) *string { return v.MarketType })
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsOutput) SpotOptions() pulumix.GPtrOutput[LaunchTemplateInstanceMarketOptionsSpotOptions, LaunchTemplateInstanceMarketOptionsSpotOptionsOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceMarketOptions](o, func(v LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		return v.SpotOptions
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceMarketOptionsSpotOptions, LaunchTemplateInstanceMarketOptionsSpotOptionsOutput]{OutputState: value.OutputState}
}

type LaunchTemplateInstanceMarketOptionsSpotOptions struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes *int `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice *string `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType *string `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil *string `pulumi:"validUntil"`
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgs struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes pulumix.Input[*int] `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior pulumix.Input[*string] `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice pulumix.Input[*string] `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType pulumix.Input[*string] `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil pulumix.Input[*string] `pulumi:"validUntil"`
}

func (LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput)
}

func (i *LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceMarketOptionsSpotOptionsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceMarketOptionsSpotOptions] {
	return pulumix.Output[LaunchTemplateInstanceMarketOptionsSpotOptions]{
		OutputState: o.OutputState,
	}
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) BlockDurationMinutes() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceMarketOptionsSpotOptions](o, func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *int { return v.BlockDurationMinutes })
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) InstanceInterruptionBehavior() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateInstanceMarketOptionsSpotOptions](o, func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.InstanceInterruptionBehavior })
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) MaxPrice() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateInstanceMarketOptionsSpotOptions](o, func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.MaxPrice })
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) SpotInstanceType() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateInstanceMarketOptionsSpotOptions](o, func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.SpotInstanceType })
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ValidUntil() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateInstanceMarketOptionsSpotOptions](o, func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.ValidUntil })
}

type LaunchTemplateInstanceRequirements struct {
	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
	AcceleratorCount *LaunchTemplateInstanceRequirementsAcceleratorCount `pulumi:"acceleratorCount"`
	// List of accelerator manufacturer names. Default is any manufacturer.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorManufacturers []string `pulumi:"acceleratorManufacturers"`
	// List of accelerator names. Default is any acclerator.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorNames []string `pulumi:"acceleratorNames"`
	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	AcceleratorTotalMemoryMib *LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib `pulumi:"acceleratorTotalMemoryMib"`
	// List of accelerator types. Default is any accelerator type.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorTypes []string `pulumi:"acceleratorTypes"`
	// List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (\*), to allow an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
	//
	// > **NOTE:** If you specify `allowedInstanceTypes`, you can't specify `excludedInstanceTypes`.
	AllowedInstanceTypes []string `pulumi:"allowedInstanceTypes"`
	// Indicate whether bare metal instace types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BareMetal *string `pulumi:"bareMetal"`
	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	BaselineEbsBandwidthMbps *LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps `pulumi:"baselineEbsBandwidthMbps"`
	// Indicate whether burstable performance instance types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BurstablePerformance *string `pulumi:"burstablePerformance"`
	// List of CPU manufacturer names. Default is any manufacturer.
	//
	// > **NOTE:** Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	CpuManufacturers []string `pulumi:"cpuManufacturers"`
	// List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (\*), to exclude an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	//
	// > **NOTE:** If you specify `excludedInstanceTypes`, you can't specify `allowedInstanceTypes`.
	ExcludedInstanceTypes []string `pulumi:"excludedInstanceTypes"`
	// List of instance generation names. Default is any generation.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	InstanceGenerations []string `pulumi:"instanceGenerations"`
	// Indicate whether instance types with local storage volumes are `included`, `excluded`, or `required`. Default is `included`.
	LocalStorage *string `pulumi:"localStorage"`
	// List of local storage type names. Default any storage type.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	LocalStorageTypes []string `pulumi:"localStorageTypes"`
	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	MemoryGibPerVcpu *LaunchTemplateInstanceRequirementsMemoryGibPerVcpu `pulumi:"memoryGibPerVcpu"`
	// Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
	MemoryMib LaunchTemplateInstanceRequirementsMemoryMib `pulumi:"memoryMib"`
	// Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.
	NetworkBandwidthGbps *LaunchTemplateInstanceRequirementsNetworkBandwidthGbps `pulumi:"networkBandwidthGbps"`
	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	NetworkInterfaceCount *LaunchTemplateInstanceRequirementsNetworkInterfaceCount `pulumi:"networkInterfaceCount"`
	// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	OnDemandMaxPricePercentageOverLowestPrice *int `pulumi:"onDemandMaxPricePercentageOverLowestPrice"`
	// Indicate whether instance types must support On-Demand Instance Hibernation, either `true` or `false`. Default is `false`.
	RequireHibernateSupport *bool `pulumi:"requireHibernateSupport"`
	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	SpotMaxPricePercentageOverLowestPrice *int `pulumi:"spotMaxPricePercentageOverLowestPrice"`
	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	TotalLocalStorageGb *LaunchTemplateInstanceRequirementsTotalLocalStorageGb `pulumi:"totalLocalStorageGb"`
	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	VcpuCount LaunchTemplateInstanceRequirementsVcpuCount `pulumi:"vcpuCount"`
}

type LaunchTemplateInstanceRequirementsArgs struct {
	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
	AcceleratorCount pulumix.Input[*LaunchTemplateInstanceRequirementsAcceleratorCountArgs] `pulumi:"acceleratorCount"`
	// List of accelerator manufacturer names. Default is any manufacturer.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorManufacturers pulumix.Input[[]string] `pulumi:"acceleratorManufacturers"`
	// List of accelerator names. Default is any acclerator.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorNames pulumix.Input[[]string] `pulumi:"acceleratorNames"`
	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	AcceleratorTotalMemoryMib pulumix.Input[*LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs] `pulumi:"acceleratorTotalMemoryMib"`
	// List of accelerator types. Default is any accelerator type.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorTypes pulumix.Input[[]string] `pulumi:"acceleratorTypes"`
	// List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (\*), to allow an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
	//
	// > **NOTE:** If you specify `allowedInstanceTypes`, you can't specify `excludedInstanceTypes`.
	AllowedInstanceTypes pulumix.Input[[]string] `pulumi:"allowedInstanceTypes"`
	// Indicate whether bare metal instace types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BareMetal pulumix.Input[*string] `pulumi:"bareMetal"`
	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	BaselineEbsBandwidthMbps pulumix.Input[*LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs] `pulumi:"baselineEbsBandwidthMbps"`
	// Indicate whether burstable performance instance types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BurstablePerformance pulumix.Input[*string] `pulumi:"burstablePerformance"`
	// List of CPU manufacturer names. Default is any manufacturer.
	//
	// > **NOTE:** Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	CpuManufacturers pulumix.Input[[]string] `pulumi:"cpuManufacturers"`
	// List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (\*), to exclude an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	//
	// > **NOTE:** If you specify `excludedInstanceTypes`, you can't specify `allowedInstanceTypes`.
	ExcludedInstanceTypes pulumix.Input[[]string] `pulumi:"excludedInstanceTypes"`
	// List of instance generation names. Default is any generation.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	InstanceGenerations pulumix.Input[[]string] `pulumi:"instanceGenerations"`
	// Indicate whether instance types with local storage volumes are `included`, `excluded`, or `required`. Default is `included`.
	LocalStorage pulumix.Input[*string] `pulumi:"localStorage"`
	// List of local storage type names. Default any storage type.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	LocalStorageTypes pulumix.Input[[]string] `pulumi:"localStorageTypes"`
	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	MemoryGibPerVcpu pulumix.Input[*LaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs] `pulumi:"memoryGibPerVcpu"`
	// Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
	MemoryMib pulumix.Input[*LaunchTemplateInstanceRequirementsMemoryMibArgs] `pulumi:"memoryMib"`
	// Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.
	NetworkBandwidthGbps pulumix.Input[*LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs] `pulumi:"networkBandwidthGbps"`
	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	NetworkInterfaceCount pulumix.Input[*LaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs] `pulumi:"networkInterfaceCount"`
	// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	OnDemandMaxPricePercentageOverLowestPrice pulumix.Input[*int] `pulumi:"onDemandMaxPricePercentageOverLowestPrice"`
	// Indicate whether instance types must support On-Demand Instance Hibernation, either `true` or `false`. Default is `false`.
	RequireHibernateSupport pulumix.Input[*bool] `pulumi:"requireHibernateSupport"`
	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	SpotMaxPricePercentageOverLowestPrice pulumix.Input[*int] `pulumi:"spotMaxPricePercentageOverLowestPrice"`
	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	TotalLocalStorageGb pulumix.Input[*LaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs] `pulumi:"totalLocalStorageGb"`
	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	VcpuCount pulumix.Input[*LaunchTemplateInstanceRequirementsVcpuCountArgs] `pulumi:"vcpuCount"`
}

func (LaunchTemplateInstanceRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirements)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsArgs) ToLaunchTemplateInstanceRequirementsOutput() LaunchTemplateInstanceRequirementsOutput {
	return i.ToLaunchTemplateInstanceRequirementsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsArgs) ToLaunchTemplateInstanceRequirementsOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsOutput)
}

func (i *LaunchTemplateInstanceRequirementsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirements)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsOutput) ToLaunchTemplateInstanceRequirementsOutput() LaunchTemplateInstanceRequirementsOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsOutput) ToLaunchTemplateInstanceRequirementsOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirements] {
	return pulumix.Output[LaunchTemplateInstanceRequirements]{
		OutputState: o.OutputState,
	}
}

// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
func (o LaunchTemplateInstanceRequirementsOutput) AcceleratorCount() pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsAcceleratorCount, LaunchTemplateInstanceRequirementsAcceleratorCountOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *LaunchTemplateInstanceRequirementsAcceleratorCount {
		return v.AcceleratorCount
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsAcceleratorCount, LaunchTemplateInstanceRequirementsAcceleratorCountOutput]{OutputState: value.OutputState}
}

// List of accelerator manufacturer names. Default is any manufacturer.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o LaunchTemplateInstanceRequirementsOutput) AcceleratorManufacturers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) []string { return v.AcceleratorManufacturers })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of accelerator names. Default is any acclerator.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o LaunchTemplateInstanceRequirementsOutput) AcceleratorNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) []string { return v.AcceleratorNames })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
func (o LaunchTemplateInstanceRequirementsOutput) AcceleratorTotalMemoryMib() pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib, LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib {
		return v.AcceleratorTotalMemoryMib
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib, LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput]{OutputState: value.OutputState}
}

// List of accelerator types. Default is any accelerator type.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o LaunchTemplateInstanceRequirementsOutput) AcceleratorTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) []string { return v.AcceleratorTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (\*), to allow an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
//
// > **NOTE:** If you specify `allowedInstanceTypes`, you can't specify `excludedInstanceTypes`.
func (o LaunchTemplateInstanceRequirementsOutput) AllowedInstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) []string { return v.AllowedInstanceTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Indicate whether bare metal instace types should be `included`, `excluded`, or `required`. Default is `excluded`.
func (o LaunchTemplateInstanceRequirementsOutput) BareMetal() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *string { return v.BareMetal })
}

// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
func (o LaunchTemplateInstanceRequirementsOutput) BaselineEbsBandwidthMbps() pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps, LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps {
		return v.BaselineEbsBandwidthMbps
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps, LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput]{OutputState: value.OutputState}
}

// Indicate whether burstable performance instance types should be `included`, `excluded`, or `required`. Default is `excluded`.
func (o LaunchTemplateInstanceRequirementsOutput) BurstablePerformance() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *string { return v.BurstablePerformance })
}

// List of CPU manufacturer names. Default is any manufacturer.
//
// > **NOTE:** Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o LaunchTemplateInstanceRequirementsOutput) CpuManufacturers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) []string { return v.CpuManufacturers })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (\*), to exclude an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
//
// > **NOTE:** If you specify `excludedInstanceTypes`, you can't specify `allowedInstanceTypes`.
func (o LaunchTemplateInstanceRequirementsOutput) ExcludedInstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) []string { return v.ExcludedInstanceTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of instance generation names. Default is any generation.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o LaunchTemplateInstanceRequirementsOutput) InstanceGenerations() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) []string { return v.InstanceGenerations })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Indicate whether instance types with local storage volumes are `included`, `excluded`, or `required`. Default is `included`.
func (o LaunchTemplateInstanceRequirementsOutput) LocalStorage() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *string { return v.LocalStorage })
}

// List of local storage type names. Default any storage type.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o LaunchTemplateInstanceRequirementsOutput) LocalStorageTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) []string { return v.LocalStorageTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
func (o LaunchTemplateInstanceRequirementsOutput) MemoryGibPerVcpu() pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsMemoryGibPerVcpu, LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *LaunchTemplateInstanceRequirementsMemoryGibPerVcpu {
		return v.MemoryGibPerVcpu
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsMemoryGibPerVcpu, LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
func (o LaunchTemplateInstanceRequirementsOutput) MemoryMib() pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsMemoryMib, LaunchTemplateInstanceRequirementsMemoryMibOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) LaunchTemplateInstanceRequirementsMemoryMib {
		return v.MemoryMib
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsMemoryMib, LaunchTemplateInstanceRequirementsMemoryMibOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.
func (o LaunchTemplateInstanceRequirementsOutput) NetworkBandwidthGbps() pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsNetworkBandwidthGbps, LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *LaunchTemplateInstanceRequirementsNetworkBandwidthGbps {
		return v.NetworkBandwidthGbps
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsNetworkBandwidthGbps, LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
func (o LaunchTemplateInstanceRequirementsOutput) NetworkInterfaceCount() pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsNetworkInterfaceCount, LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *LaunchTemplateInstanceRequirementsNetworkInterfaceCount {
		return v.NetworkInterfaceCount
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsNetworkInterfaceCount, LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput]{OutputState: value.OutputState}
}

// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
//
// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
func (o LaunchTemplateInstanceRequirementsOutput) OnDemandMaxPricePercentageOverLowestPrice() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *int { return v.OnDemandMaxPricePercentageOverLowestPrice })
}

// Indicate whether instance types must support On-Demand Instance Hibernation, either `true` or `false`. Default is `false`.
func (o LaunchTemplateInstanceRequirementsOutput) RequireHibernateSupport() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *bool { return v.RequireHibernateSupport })
}

// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
//
// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
func (o LaunchTemplateInstanceRequirementsOutput) SpotMaxPricePercentageOverLowestPrice() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *int { return v.SpotMaxPricePercentageOverLowestPrice })
}

// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
func (o LaunchTemplateInstanceRequirementsOutput) TotalLocalStorageGb() pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsTotalLocalStorageGb, LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) *LaunchTemplateInstanceRequirementsTotalLocalStorageGb {
		return v.TotalLocalStorageGb
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsTotalLocalStorageGb, LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
func (o LaunchTemplateInstanceRequirementsOutput) VcpuCount() pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsVcpuCount, LaunchTemplateInstanceRequirementsVcpuCountOutput] {
	value := pulumix.Apply[LaunchTemplateInstanceRequirements](o, func(v LaunchTemplateInstanceRequirements) LaunchTemplateInstanceRequirementsVcpuCount {
		return v.VcpuCount
	})
	return pulumix.GPtrOutput[LaunchTemplateInstanceRequirementsVcpuCount, LaunchTemplateInstanceRequirementsVcpuCountOutput]{OutputState: value.OutputState}
}

type LaunchTemplateInstanceRequirementsAcceleratorCount struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type LaunchTemplateInstanceRequirementsAcceleratorCountArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (LaunchTemplateInstanceRequirementsAcceleratorCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsAcceleratorCount)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsAcceleratorCountArgs) ToLaunchTemplateInstanceRequirementsAcceleratorCountOutput() LaunchTemplateInstanceRequirementsAcceleratorCountOutput {
	return i.ToLaunchTemplateInstanceRequirementsAcceleratorCountOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsAcceleratorCountArgs) ToLaunchTemplateInstanceRequirementsAcceleratorCountOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsAcceleratorCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsAcceleratorCountOutput)
}

func (i *LaunchTemplateInstanceRequirementsAcceleratorCountArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsAcceleratorCountArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsAcceleratorCountOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsAcceleratorCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsAcceleratorCount)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsAcceleratorCountOutput) ToLaunchTemplateInstanceRequirementsAcceleratorCountOutput() LaunchTemplateInstanceRequirementsAcceleratorCountOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsAcceleratorCountOutput) ToLaunchTemplateInstanceRequirementsAcceleratorCountOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsAcceleratorCountOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsAcceleratorCountOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirementsAcceleratorCount] {
	return pulumix.Output[LaunchTemplateInstanceRequirementsAcceleratorCount]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o LaunchTemplateInstanceRequirementsAcceleratorCountOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsAcceleratorCount](o, func(v LaunchTemplateInstanceRequirementsAcceleratorCount) *int { return v.Max })
}

// Minimum.
func (o LaunchTemplateInstanceRequirementsAcceleratorCountOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsAcceleratorCount](o, func(v LaunchTemplateInstanceRequirementsAcceleratorCount) *int { return v.Min })
}

type LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs) ToLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput() LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return i.ToLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs) ToLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput)
}

func (i *LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput) ToLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput() LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput) ToLaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib] {
	return pulumix.Output[LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib](o, func(v LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib) *int { return v.Max })
}

// Minimum.
func (o LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib](o, func(v LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMib) *int { return v.Min })
}

type LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ToLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput() LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return i.ToLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ToLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput)
}

func (i *LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ToLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput() LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ToLaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps] {
	return pulumix.Output[LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps](o, func(v LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps) *int { return v.Max })
}

// Minimum.
func (o LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps](o, func(v LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbps) *int { return v.Min })
}

type LaunchTemplateInstanceRequirementsMemoryGibPerVcpu struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *float64 `pulumi:"max"`
	// Minimum.
	Min *float64 `pulumi:"min"`
}

type LaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*float64] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*float64] `pulumi:"min"`
}

func (LaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsMemoryGibPerVcpu)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs) ToLaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput() LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput {
	return i.ToLaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs) ToLaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput)
}

func (i *LaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsMemoryGibPerVcpuArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsMemoryGibPerVcpu)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput) ToLaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput() LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput) ToLaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirementsMemoryGibPerVcpu] {
	return pulumix.Output[LaunchTemplateInstanceRequirementsMemoryGibPerVcpu]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput) Max() pulumix.Output[*float64] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsMemoryGibPerVcpu](o, func(v LaunchTemplateInstanceRequirementsMemoryGibPerVcpu) *float64 { return v.Max })
}

// Minimum.
func (o LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput) Min() pulumix.Output[*float64] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsMemoryGibPerVcpu](o, func(v LaunchTemplateInstanceRequirementsMemoryGibPerVcpu) *float64 { return v.Min })
}

type LaunchTemplateInstanceRequirementsMemoryMib struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min int `pulumi:"min"`
}

type LaunchTemplateInstanceRequirementsMemoryMibArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[int] `pulumi:"min"`
}

func (LaunchTemplateInstanceRequirementsMemoryMibArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsMemoryMib)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsMemoryMibArgs) ToLaunchTemplateInstanceRequirementsMemoryMibOutput() LaunchTemplateInstanceRequirementsMemoryMibOutput {
	return i.ToLaunchTemplateInstanceRequirementsMemoryMibOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsMemoryMibArgs) ToLaunchTemplateInstanceRequirementsMemoryMibOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsMemoryMibOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsMemoryMibOutput)
}

func (i *LaunchTemplateInstanceRequirementsMemoryMibArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsMemoryMibArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsMemoryMibOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsMemoryMibOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsMemoryMib)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsMemoryMibOutput) ToLaunchTemplateInstanceRequirementsMemoryMibOutput() LaunchTemplateInstanceRequirementsMemoryMibOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsMemoryMibOutput) ToLaunchTemplateInstanceRequirementsMemoryMibOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsMemoryMibOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsMemoryMibOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirementsMemoryMib] {
	return pulumix.Output[LaunchTemplateInstanceRequirementsMemoryMib]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o LaunchTemplateInstanceRequirementsMemoryMibOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsMemoryMib](o, func(v LaunchTemplateInstanceRequirementsMemoryMib) *int { return v.Max })
}

// Minimum.
func (o LaunchTemplateInstanceRequirementsMemoryMibOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsMemoryMib](o, func(v LaunchTemplateInstanceRequirementsMemoryMib) int { return v.Min })
}

type LaunchTemplateInstanceRequirementsNetworkBandwidthGbps struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *float64 `pulumi:"max"`
	// Minimum.
	Min *float64 `pulumi:"min"`
}

type LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*float64] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*float64] `pulumi:"min"`
}

func (LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsNetworkBandwidthGbps)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs) ToLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput() LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput {
	return i.ToLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs) ToLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput)
}

func (i *LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsNetworkBandwidthGbps)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput) ToLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput() LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput) ToLaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirementsNetworkBandwidthGbps] {
	return pulumix.Output[LaunchTemplateInstanceRequirementsNetworkBandwidthGbps]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput) Max() pulumix.Output[*float64] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsNetworkBandwidthGbps](o, func(v LaunchTemplateInstanceRequirementsNetworkBandwidthGbps) *float64 { return v.Max })
}

// Minimum.
func (o LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput) Min() pulumix.Output[*float64] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsNetworkBandwidthGbps](o, func(v LaunchTemplateInstanceRequirementsNetworkBandwidthGbps) *float64 { return v.Min })
}

type LaunchTemplateInstanceRequirementsNetworkInterfaceCount struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type LaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (LaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsNetworkInterfaceCount)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs) ToLaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput() LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput {
	return i.ToLaunchTemplateInstanceRequirementsNetworkInterfaceCountOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs) ToLaunchTemplateInstanceRequirementsNetworkInterfaceCountOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput)
}

func (i *LaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsNetworkInterfaceCountArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsNetworkInterfaceCount)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput) ToLaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput() LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput) ToLaunchTemplateInstanceRequirementsNetworkInterfaceCountOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirementsNetworkInterfaceCount] {
	return pulumix.Output[LaunchTemplateInstanceRequirementsNetworkInterfaceCount]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsNetworkInterfaceCount](o, func(v LaunchTemplateInstanceRequirementsNetworkInterfaceCount) *int { return v.Max })
}

// Minimum.
func (o LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsNetworkInterfaceCount](o, func(v LaunchTemplateInstanceRequirementsNetworkInterfaceCount) *int { return v.Min })
}

type LaunchTemplateInstanceRequirementsTotalLocalStorageGb struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *float64 `pulumi:"max"`
	// Minimum.
	Min *float64 `pulumi:"min"`
}

type LaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*float64] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*float64] `pulumi:"min"`
}

func (LaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsTotalLocalStorageGb)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs) ToLaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput() LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput {
	return i.ToLaunchTemplateInstanceRequirementsTotalLocalStorageGbOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs) ToLaunchTemplateInstanceRequirementsTotalLocalStorageGbOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput)
}

func (i *LaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsTotalLocalStorageGbArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsTotalLocalStorageGb)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput) ToLaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput() LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput) ToLaunchTemplateInstanceRequirementsTotalLocalStorageGbOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirementsTotalLocalStorageGb] {
	return pulumix.Output[LaunchTemplateInstanceRequirementsTotalLocalStorageGb]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput) Max() pulumix.Output[*float64] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsTotalLocalStorageGb](o, func(v LaunchTemplateInstanceRequirementsTotalLocalStorageGb) *float64 { return v.Max })
}

// Minimum.
func (o LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput) Min() pulumix.Output[*float64] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsTotalLocalStorageGb](o, func(v LaunchTemplateInstanceRequirementsTotalLocalStorageGb) *float64 { return v.Min })
}

type LaunchTemplateInstanceRequirementsVcpuCount struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min int `pulumi:"min"`
}

type LaunchTemplateInstanceRequirementsVcpuCountArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[int] `pulumi:"min"`
}

func (LaunchTemplateInstanceRequirementsVcpuCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsVcpuCount)(nil)).Elem()
}

func (i LaunchTemplateInstanceRequirementsVcpuCountArgs) ToLaunchTemplateInstanceRequirementsVcpuCountOutput() LaunchTemplateInstanceRequirementsVcpuCountOutput {
	return i.ToLaunchTemplateInstanceRequirementsVcpuCountOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceRequirementsVcpuCountArgs) ToLaunchTemplateInstanceRequirementsVcpuCountOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsVcpuCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceRequirementsVcpuCountOutput)
}

func (i *LaunchTemplateInstanceRequirementsVcpuCountArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateInstanceRequirementsVcpuCountArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateInstanceRequirementsVcpuCountOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceRequirementsVcpuCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceRequirementsVcpuCount)(nil)).Elem()
}

func (o LaunchTemplateInstanceRequirementsVcpuCountOutput) ToLaunchTemplateInstanceRequirementsVcpuCountOutput() LaunchTemplateInstanceRequirementsVcpuCountOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsVcpuCountOutput) ToLaunchTemplateInstanceRequirementsVcpuCountOutputWithContext(ctx context.Context) LaunchTemplateInstanceRequirementsVcpuCountOutput {
	return o
}

func (o LaunchTemplateInstanceRequirementsVcpuCountOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateInstanceRequirementsVcpuCount] {
	return pulumix.Output[LaunchTemplateInstanceRequirementsVcpuCount]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o LaunchTemplateInstanceRequirementsVcpuCountOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsVcpuCount](o, func(v LaunchTemplateInstanceRequirementsVcpuCount) *int { return v.Max })
}

// Minimum.
func (o LaunchTemplateInstanceRequirementsVcpuCountOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[LaunchTemplateInstanceRequirementsVcpuCount](o, func(v LaunchTemplateInstanceRequirementsVcpuCount) int { return v.Min })
}

type LaunchTemplateLicenseSpecification struct {
	// ARN of the license configuration.
	LicenseConfigurationArn string `pulumi:"licenseConfigurationArn"`
}

type LaunchTemplateLicenseSpecificationArgs struct {
	// ARN of the license configuration.
	LicenseConfigurationArn pulumix.Input[string] `pulumi:"licenseConfigurationArn"`
}

func (LaunchTemplateLicenseSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return i.ToLaunchTemplateLicenseSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationOutput)
}

func (i *LaunchTemplateLicenseSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateLicenseSpecificationArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateLicenseSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateLicenseSpecification] {
	return pulumix.Output[LaunchTemplateLicenseSpecification]{
		OutputState: o.OutputState,
	}
}

// ARN of the license configuration.
func (o LaunchTemplateLicenseSpecificationOutput) LicenseConfigurationArn() pulumix.Output[string] {
	return pulumix.Apply[LaunchTemplateLicenseSpecification](o, func(v LaunchTemplateLicenseSpecification) string { return v.LicenseConfigurationArn })
}

type LaunchTemplateMaintenanceOptions struct {
	// Disables the automatic recovery behavior of your instance or sets it to default. Can be `"default"` or `"disabled"`. See [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html) for more details.
	AutoRecovery *string `pulumi:"autoRecovery"`
}

type LaunchTemplateMaintenanceOptionsArgs struct {
	// Disables the automatic recovery behavior of your instance or sets it to default. Can be `"default"` or `"disabled"`. See [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html) for more details.
	AutoRecovery pulumix.Input[*string] `pulumi:"autoRecovery"`
}

func (LaunchTemplateMaintenanceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMaintenanceOptions)(nil)).Elem()
}

func (i LaunchTemplateMaintenanceOptionsArgs) ToLaunchTemplateMaintenanceOptionsOutput() LaunchTemplateMaintenanceOptionsOutput {
	return i.ToLaunchTemplateMaintenanceOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateMaintenanceOptionsArgs) ToLaunchTemplateMaintenanceOptionsOutputWithContext(ctx context.Context) LaunchTemplateMaintenanceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMaintenanceOptionsOutput)
}

func (i *LaunchTemplateMaintenanceOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateMaintenanceOptionsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateMaintenanceOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMaintenanceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMaintenanceOptions)(nil)).Elem()
}

func (o LaunchTemplateMaintenanceOptionsOutput) ToLaunchTemplateMaintenanceOptionsOutput() LaunchTemplateMaintenanceOptionsOutput {
	return o
}

func (o LaunchTemplateMaintenanceOptionsOutput) ToLaunchTemplateMaintenanceOptionsOutputWithContext(ctx context.Context) LaunchTemplateMaintenanceOptionsOutput {
	return o
}

func (o LaunchTemplateMaintenanceOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateMaintenanceOptions] {
	return pulumix.Output[LaunchTemplateMaintenanceOptions]{
		OutputState: o.OutputState,
	}
}

// Disables the automatic recovery behavior of your instance or sets it to default. Can be `"default"` or `"disabled"`. See [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html) for more details.
func (o LaunchTemplateMaintenanceOptionsOutput) AutoRecovery() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateMaintenanceOptions](o, func(v LaunchTemplateMaintenanceOptions) *string { return v.AutoRecovery })
}

type LaunchTemplateMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// Enables or disables the IPv6 endpoint for the instance metadata service. Can be `"enabled"` or `"disabled"`.
	HttpProtocolIpv6 *string `pulumi:"httpProtocolIpv6"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
	// Enables or disables access to instance tags from the instance metadata service. Can be `"enabled"` or `"disabled"`.
	//
	// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
	InstanceMetadataTags *string `pulumi:"instanceMetadataTags"`
}

type LaunchTemplateMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumix.Input[*string] `pulumi:"httpEndpoint"`
	// Enables or disables the IPv6 endpoint for the instance metadata service. Can be `"enabled"` or `"disabled"`.
	HttpProtocolIpv6 pulumix.Input[*string] `pulumi:"httpProtocolIpv6"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumix.Input[*int] `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumix.Input[*string] `pulumi:"httpTokens"`
	// Enables or disables access to instance tags from the instance metadata service. Can be `"enabled"` or `"disabled"`.
	//
	// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
	InstanceMetadataTags pulumix.Input[*string] `pulumi:"instanceMetadataTags"`
}

func (LaunchTemplateMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput {
	return i.ToLaunchTemplateMetadataOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsOutput)
}

func (i *LaunchTemplateMetadataOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateMetadataOptionsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateMetadataOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateMetadataOptions] {
	return pulumix.Output[LaunchTemplateMetadataOptions]{
		OutputState: o.OutputState,
	}
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsOutput) HttpEndpoint() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateMetadataOptions](o, func(v LaunchTemplateMetadataOptions) *string { return v.HttpEndpoint })
}

// Enables or disables the IPv6 endpoint for the instance metadata service. Can be `"enabled"` or `"disabled"`.
func (o LaunchTemplateMetadataOptionsOutput) HttpProtocolIpv6() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateMetadataOptions](o, func(v LaunchTemplateMetadataOptions) *string { return v.HttpProtocolIpv6 })
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsOutput) HttpPutResponseHopLimit() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateMetadataOptions](o, func(v LaunchTemplateMetadataOptions) *int { return v.HttpPutResponseHopLimit })
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsOutput) HttpTokens() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateMetadataOptions](o, func(v LaunchTemplateMetadataOptions) *string { return v.HttpTokens })
}

// Enables or disables access to instance tags from the instance metadata service. Can be `"enabled"` or `"disabled"`.
//
// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
func (o LaunchTemplateMetadataOptionsOutput) InstanceMetadataTags() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateMetadataOptions](o, func(v LaunchTemplateMetadataOptions) *string { return v.InstanceMetadataTags })
}

type LaunchTemplateMonitoring struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled *bool `pulumi:"enabled"`
}

type LaunchTemplateMonitoringArgs struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (LaunchTemplateMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoring)(nil)).Elem()
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput {
	return i.ToLaunchTemplateMonitoringOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringOutputWithContext(ctx context.Context) LaunchTemplateMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringOutput)
}

func (i *LaunchTemplateMonitoringArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateMonitoringArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateMonitoringOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoring)(nil)).Elem()
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput {
	return o
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringOutputWithContext(ctx context.Context) LaunchTemplateMonitoringOutput {
	return o
}

func (o LaunchTemplateMonitoringOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateMonitoring] {
	return pulumix.Output[LaunchTemplateMonitoring]{
		OutputState: o.OutputState,
	}
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchTemplateMonitoring](o, func(v LaunchTemplateMonitoring) *bool { return v.Enabled })
}

type LaunchTemplateNetworkInterface struct {
	// Associate a Carrier IP address with `eth0` for a new network interface.
	// Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface.
	// Boolean value, can be left unset.
	AssociateCarrierIpAddress *string `pulumi:"associateCarrierIpAddress"`
	// Associate a public ip address with the network interface.
	// Boolean value, can be left unset.
	AssociatePublicIpAddress *string `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description *string `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex *int `pulumi:"deviceIndex"`
	// The type of network interface. To create an Elastic Fabric Adapter (EFA), specify `efa`.
	InterfaceType *string `pulumi:"interfaceType"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount *int `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses []string `pulumi:"ipv4Addresses"`
	// The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with `ipv4Prefixes`
	Ipv4PrefixCount *int `pulumi:"ipv4PrefixCount"`
	// One or more IPv4 prefixes to be assigned to the network interface. Conflicts with `ipv4PrefixCount`
	Ipv4Prefixes []string `pulumi:"ipv4Prefixes"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with `ipv6Prefixes`
	Ipv6PrefixCount *int `pulumi:"ipv6PrefixCount"`
	// One or more IPv6 prefixes to be assigned to the network interface. Conflicts with `ipv6PrefixCount`
	Ipv6Prefixes []string `pulumi:"ipv6Prefixes"`
	// The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
	NetworkCardIndex *int `pulumi:"networkCardIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId *string `pulumi:"subnetId"`
}

type LaunchTemplateNetworkInterfaceArgs struct {
	// Associate a Carrier IP address with `eth0` for a new network interface.
	// Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface.
	// Boolean value, can be left unset.
	AssociateCarrierIpAddress pulumix.Input[*string] `pulumi:"associateCarrierIpAddress"`
	// Associate a public ip address with the network interface.
	// Boolean value, can be left unset.
	AssociatePublicIpAddress pulumix.Input[*string] `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination pulumix.Input[*string] `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description pulumix.Input[*string] `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex pulumix.Input[*int] `pulumi:"deviceIndex"`
	// The type of network interface. To create an Elastic Fabric Adapter (EFA), specify `efa`.
	InterfaceType pulumix.Input[*string] `pulumi:"interfaceType"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount pulumix.Input[*int] `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses pulumix.Input[[]string] `pulumi:"ipv4Addresses"`
	// The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with `ipv4Prefixes`
	Ipv4PrefixCount pulumix.Input[*int] `pulumi:"ipv4PrefixCount"`
	// One or more IPv4 prefixes to be assigned to the network interface. Conflicts with `ipv4PrefixCount`
	Ipv4Prefixes pulumix.Input[[]string] `pulumi:"ipv4Prefixes"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount pulumix.Input[*int] `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses pulumix.Input[[]string] `pulumi:"ipv6Addresses"`
	// The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with `ipv6Prefixes`
	Ipv6PrefixCount pulumix.Input[*int] `pulumi:"ipv6PrefixCount"`
	// One or more IPv6 prefixes to be assigned to the network interface. Conflicts with `ipv6PrefixCount`
	Ipv6Prefixes pulumix.Input[[]string] `pulumi:"ipv6Prefixes"`
	// The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
	NetworkCardIndex pulumix.Input[*int] `pulumi:"networkCardIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumix.Input[*string] `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress pulumix.Input[*string] `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups pulumix.Input[[]string] `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId pulumix.Input[*string] `pulumi:"subnetId"`
}

func (LaunchTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceArgs) ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput {
	return i.ToLaunchTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceArgs) ToLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceOutput)
}

func (i *LaunchTemplateNetworkInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateNetworkInterfaceArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceOutput) ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceOutput) ToLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateNetworkInterface] {
	return pulumix.Output[LaunchTemplateNetworkInterface]{
		OutputState: o.OutputState,
	}
}

// Associate a Carrier IP address with `eth0` for a new network interface.
// Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface.
// Boolean value, can be left unset.
func (o LaunchTemplateNetworkInterfaceOutput) AssociateCarrierIpAddress() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *string { return v.AssociateCarrierIpAddress })
}

// Associate a public ip address with the network interface.
// Boolean value, can be left unset.
func (o LaunchTemplateNetworkInterfaceOutput) AssociatePublicIpAddress() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *string { return v.AssociatePublicIpAddress })
}

// Whether the network interface should be destroyed on instance termination.
func (o LaunchTemplateNetworkInterfaceOutput) DeleteOnTermination() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *string { return v.DeleteOnTermination })
}

// Description of the network interface.
func (o LaunchTemplateNetworkInterfaceOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *string { return v.Description })
}

// The integer index of the network interface attachment.
func (o LaunchTemplateNetworkInterfaceOutput) DeviceIndex() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *int { return v.DeviceIndex })
}

// The type of network interface. To create an Elastic Fabric Adapter (EFA), specify `efa`.
func (o LaunchTemplateNetworkInterfaceOutput) InterfaceType() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *string { return v.InterfaceType })
}

// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4AddressCount() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *int { return v.Ipv4AddressCount })
}

// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) []string { return v.Ipv4Addresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with `ipv4Prefixes`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4PrefixCount() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *int { return v.Ipv4PrefixCount })
}

// One or more IPv4 prefixes to be assigned to the network interface. Conflicts with `ipv4PrefixCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4Prefixes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) []string { return v.Ipv4Prefixes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6AddressCount() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *int { return v.Ipv6AddressCount })
}

// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) []string { return v.Ipv6Addresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with `ipv6Prefixes`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6PrefixCount() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *int { return v.Ipv6PrefixCount })
}

// One or more IPv6 prefixes to be assigned to the network interface. Conflicts with `ipv6PrefixCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6Prefixes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) []string { return v.Ipv6Prefixes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
func (o LaunchTemplateNetworkInterfaceOutput) NetworkCardIndex() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *int { return v.NetworkCardIndex })
}

// The ID of the network interface to attach.
func (o LaunchTemplateNetworkInterfaceOutput) NetworkInterfaceId() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *string { return v.NetworkInterfaceId })
}

// The primary private IPv4 address.
func (o LaunchTemplateNetworkInterfaceOutput) PrivateIpAddress() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *string { return v.PrivateIpAddress })
}

// A list of security group IDs to associate.
func (o LaunchTemplateNetworkInterfaceOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The VPC Subnet ID to associate.
func (o LaunchTemplateNetworkInterfaceOutput) SubnetId() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateNetworkInterface](o, func(v LaunchTemplateNetworkInterface) *string { return v.SubnetId })
}

type LaunchTemplatePlacement struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity *string `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName *string `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId *string `pulumi:"hostId"`
	// The ARN of the Host Resource Group in which to launch instances.
	HostResourceGroupArn *string `pulumi:"hostResourceGroupArn"`
	// The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
	PartitionNumber *int `pulumi:"partitionNumber"`
	// Reserved for future use.
	SpreadDomain *string `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy *string `pulumi:"tenancy"`
}

type LaunchTemplatePlacementArgs struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity pulumix.Input[*string] `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone pulumix.Input[*string] `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName pulumix.Input[*string] `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId pulumix.Input[*string] `pulumi:"hostId"`
	// The ARN of the Host Resource Group in which to launch instances.
	HostResourceGroupArn pulumix.Input[*string] `pulumi:"hostResourceGroupArn"`
	// The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
	PartitionNumber pulumix.Input[*int] `pulumi:"partitionNumber"`
	// Reserved for future use.
	SpreadDomain pulumix.Input[*string] `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy pulumix.Input[*string] `pulumi:"tenancy"`
}

func (LaunchTemplatePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacement)(nil)).Elem()
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput {
	return i.ToLaunchTemplatePlacementOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementOutputWithContext(ctx context.Context) LaunchTemplatePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementOutput)
}

func (i *LaunchTemplatePlacementArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplatePlacementArgs] {
	return pulumix.Val(i)
}

type LaunchTemplatePlacementOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacement)(nil)).Elem()
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput {
	return o
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementOutputWithContext(ctx context.Context) LaunchTemplatePlacementOutput {
	return o
}

func (o LaunchTemplatePlacementOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplatePlacement] {
	return pulumix.Output[LaunchTemplatePlacement]{
		OutputState: o.OutputState,
	}
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementOutput) Affinity() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplatePlacement](o, func(v LaunchTemplatePlacement) *string { return v.Affinity })
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementOutput) AvailabilityZone() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplatePlacement](o, func(v LaunchTemplatePlacement) *string { return v.AvailabilityZone })
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementOutput) GroupName() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplatePlacement](o, func(v LaunchTemplatePlacement) *string { return v.GroupName })
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementOutput) HostId() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplatePlacement](o, func(v LaunchTemplatePlacement) *string { return v.HostId })
}

// The ARN of the Host Resource Group in which to launch instances.
func (o LaunchTemplatePlacementOutput) HostResourceGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplatePlacement](o, func(v LaunchTemplatePlacement) *string { return v.HostResourceGroupArn })
}

// The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
func (o LaunchTemplatePlacementOutput) PartitionNumber() pulumix.Output[*int] {
	return pulumix.Apply[LaunchTemplatePlacement](o, func(v LaunchTemplatePlacement) *int { return v.PartitionNumber })
}

// Reserved for future use.
func (o LaunchTemplatePlacementOutput) SpreadDomain() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplatePlacement](o, func(v LaunchTemplatePlacement) *string { return v.SpreadDomain })
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementOutput) Tenancy() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplatePlacement](o, func(v LaunchTemplatePlacement) *string { return v.Tenancy })
}

type LaunchTemplatePrivateDnsNameOptions struct {
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	EnableResourceNameDnsARecord *bool `pulumi:"enableResourceNameDnsARecord"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	EnableResourceNameDnsAaaaRecord *bool `pulumi:"enableResourceNameDnsAaaaRecord"`
	// The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
	HostnameType *string `pulumi:"hostnameType"`
}

type LaunchTemplatePrivateDnsNameOptionsArgs struct {
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	EnableResourceNameDnsARecord pulumix.Input[*bool] `pulumi:"enableResourceNameDnsARecord"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	EnableResourceNameDnsAaaaRecord pulumix.Input[*bool] `pulumi:"enableResourceNameDnsAaaaRecord"`
	// The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
	HostnameType pulumix.Input[*string] `pulumi:"hostnameType"`
}

func (LaunchTemplatePrivateDnsNameOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePrivateDnsNameOptions)(nil)).Elem()
}

func (i LaunchTemplatePrivateDnsNameOptionsArgs) ToLaunchTemplatePrivateDnsNameOptionsOutput() LaunchTemplatePrivateDnsNameOptionsOutput {
	return i.ToLaunchTemplatePrivateDnsNameOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplatePrivateDnsNameOptionsArgs) ToLaunchTemplatePrivateDnsNameOptionsOutputWithContext(ctx context.Context) LaunchTemplatePrivateDnsNameOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePrivateDnsNameOptionsOutput)
}

func (i *LaunchTemplatePrivateDnsNameOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplatePrivateDnsNameOptionsArgs] {
	return pulumix.Val(i)
}

type LaunchTemplatePrivateDnsNameOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePrivateDnsNameOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePrivateDnsNameOptions)(nil)).Elem()
}

func (o LaunchTemplatePrivateDnsNameOptionsOutput) ToLaunchTemplatePrivateDnsNameOptionsOutput() LaunchTemplatePrivateDnsNameOptionsOutput {
	return o
}

func (o LaunchTemplatePrivateDnsNameOptionsOutput) ToLaunchTemplatePrivateDnsNameOptionsOutputWithContext(ctx context.Context) LaunchTemplatePrivateDnsNameOptionsOutput {
	return o
}

func (o LaunchTemplatePrivateDnsNameOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplatePrivateDnsNameOptions] {
	return pulumix.Output[LaunchTemplatePrivateDnsNameOptions]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
func (o LaunchTemplatePrivateDnsNameOptionsOutput) EnableResourceNameDnsARecord() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchTemplatePrivateDnsNameOptions](o, func(v LaunchTemplatePrivateDnsNameOptions) *bool { return v.EnableResourceNameDnsARecord })
}

// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
func (o LaunchTemplatePrivateDnsNameOptionsOutput) EnableResourceNameDnsAaaaRecord() pulumix.Output[*bool] {
	return pulumix.Apply[LaunchTemplatePrivateDnsNameOptions](o, func(v LaunchTemplatePrivateDnsNameOptions) *bool { return v.EnableResourceNameDnsAaaaRecord })
}

// The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
func (o LaunchTemplatePrivateDnsNameOptionsOutput) HostnameType() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplatePrivateDnsNameOptions](o, func(v LaunchTemplatePrivateDnsNameOptions) *string { return v.HostnameType })
}

type LaunchTemplateTagSpecification struct {
	// The type of resource to tag.
	ResourceType *string `pulumi:"resourceType"`
	// A map of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type LaunchTemplateTagSpecificationArgs struct {
	// The type of resource to tag.
	ResourceType pulumix.Input[*string] `pulumi:"resourceType"`
	// A map of tags to assign to the resource.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (LaunchTemplateTagSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecification)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationArgs) ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput {
	return i.ToLaunchTemplateTagSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationArgs) ToLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationOutput)
}

func (i *LaunchTemplateTagSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*LaunchTemplateTagSpecificationArgs] {
	return pulumix.Val(i)
}

type LaunchTemplateTagSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecification)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationOutput) ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput {
	return o
}

func (o LaunchTemplateTagSpecificationOutput) ToLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationOutput {
	return o
}

func (o LaunchTemplateTagSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[LaunchTemplateTagSpecification] {
	return pulumix.Output[LaunchTemplateTagSpecification]{
		OutputState: o.OutputState,
	}
}

// The type of resource to tag.
func (o LaunchTemplateTagSpecificationOutput) ResourceType() pulumix.Output[*string] {
	return pulumix.Apply[LaunchTemplateTagSpecification](o, func(v LaunchTemplateTagSpecification) *string { return v.ResourceType })
}

// A map of tags to assign to the resource.
func (o LaunchTemplateTagSpecificationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[LaunchTemplateTagSpecification](o, func(v LaunchTemplateTagSpecification) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type ManagedPrefixListEntryType struct {
	// CIDR block of this entry.
	Cidr string `pulumi:"cidr"`
	// Description of this entry. Due to API limitations, updating only the description of an existing entry requires temporarily removing and re-adding the entry.
	Description *string `pulumi:"description"`
}

type ManagedPrefixListEntryTypeArgs struct {
	// CIDR block of this entry.
	Cidr pulumix.Input[string] `pulumi:"cidr"`
	// Description of this entry. Due to API limitations, updating only the description of an existing entry requires temporarily removing and re-adding the entry.
	Description pulumix.Input[*string] `pulumi:"description"`
}

func (ManagedPrefixListEntryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedPrefixListEntryType)(nil)).Elem()
}

func (i ManagedPrefixListEntryTypeArgs) ToManagedPrefixListEntryTypeOutput() ManagedPrefixListEntryTypeOutput {
	return i.ToManagedPrefixListEntryTypeOutputWithContext(context.Background())
}

func (i ManagedPrefixListEntryTypeArgs) ToManagedPrefixListEntryTypeOutputWithContext(ctx context.Context) ManagedPrefixListEntryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedPrefixListEntryTypeOutput)
}

func (i *ManagedPrefixListEntryTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*ManagedPrefixListEntryTypeArgs] {
	return pulumix.Val(i)
}

type ManagedPrefixListEntryTypeOutput struct{ *pulumi.OutputState }

func (ManagedPrefixListEntryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedPrefixListEntryType)(nil)).Elem()
}

func (o ManagedPrefixListEntryTypeOutput) ToManagedPrefixListEntryTypeOutput() ManagedPrefixListEntryTypeOutput {
	return o
}

func (o ManagedPrefixListEntryTypeOutput) ToManagedPrefixListEntryTypeOutputWithContext(ctx context.Context) ManagedPrefixListEntryTypeOutput {
	return o
}

func (o ManagedPrefixListEntryTypeOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedPrefixListEntryType] {
	return pulumix.Output[ManagedPrefixListEntryType]{
		OutputState: o.OutputState,
	}
}

// CIDR block of this entry.
func (o ManagedPrefixListEntryTypeOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[ManagedPrefixListEntryType](o, func(v ManagedPrefixListEntryType) string { return v.Cidr })
}

// Description of this entry. Due to API limitations, updating only the description of an existing entry requires temporarily removing and re-adding the entry.
func (o ManagedPrefixListEntryTypeOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[ManagedPrefixListEntryType](o, func(v ManagedPrefixListEntryType) *string { return v.Description })
}

type NetworkAclEgress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	//
	// > Note: For more information on ICMP types and codes, see here: https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type NetworkAclEgressArgs struct {
	// The action to take.
	Action pulumix.Input[string] `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumix.Input[*string] `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	//
	// > Note: For more information on ICMP types and codes, see here: https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
	IcmpCode pulumix.Input[*int] `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumix.Input[*int] `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumix.Input[*string] `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumix.Input[int] `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumix.Input[int] `pulumi:"toPort"`
}

func (NetworkAclEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgress)(nil)).Elem()
}

func (i NetworkAclEgressArgs) ToNetworkAclEgressOutput() NetworkAclEgressOutput {
	return i.ToNetworkAclEgressOutputWithContext(context.Background())
}

func (i NetworkAclEgressArgs) ToNetworkAclEgressOutputWithContext(ctx context.Context) NetworkAclEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressOutput)
}

func (i *NetworkAclEgressArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkAclEgressArgs] {
	return pulumix.Val(i)
}

type NetworkAclEgressOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgress)(nil)).Elem()
}

func (o NetworkAclEgressOutput) ToNetworkAclEgressOutput() NetworkAclEgressOutput {
	return o
}

func (o NetworkAclEgressOutput) ToNetworkAclEgressOutputWithContext(ctx context.Context) NetworkAclEgressOutput {
	return o
}

func (o NetworkAclEgressOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkAclEgress] {
	return pulumix.Output[NetworkAclEgress]{
		OutputState: o.OutputState,
	}
}

// The action to take.
func (o NetworkAclEgressOutput) Action() pulumix.Output[string] {
	return pulumix.Apply[NetworkAclEgress](o, func(v NetworkAclEgress) string { return v.Action })
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclEgressOutput) CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[NetworkAclEgress](o, func(v NetworkAclEgress) *string { return v.CidrBlock })
}

// The from port to match.
func (o NetworkAclEgressOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[NetworkAclEgress](o, func(v NetworkAclEgress) int { return v.FromPort })
}

// The ICMP type code to be used. Default 0.
//
// > Note: For more information on ICMP types and codes, see here: https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
func (o NetworkAclEgressOutput) IcmpCode() pulumix.Output[*int] {
	return pulumix.Apply[NetworkAclEgress](o, func(v NetworkAclEgress) *int { return v.IcmpCode })
}

// The ICMP type to be used. Default 0.
func (o NetworkAclEgressOutput) IcmpType() pulumix.Output[*int] {
	return pulumix.Apply[NetworkAclEgress](o, func(v NetworkAclEgress) *int { return v.IcmpType })
}

// The IPv6 CIDR block.
func (o NetworkAclEgressOutput) Ipv6CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[NetworkAclEgress](o, func(v NetworkAclEgress) *string { return v.Ipv6CidrBlock })
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclEgressOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[NetworkAclEgress](o, func(v NetworkAclEgress) string { return v.Protocol })
}

// The rule number. Used for ordering.
func (o NetworkAclEgressOutput) RuleNo() pulumix.Output[int] {
	return pulumix.Apply[NetworkAclEgress](o, func(v NetworkAclEgress) int { return v.RuleNo })
}

// The to port to match.
func (o NetworkAclEgressOutput) ToPort() pulumix.Output[int] {
	return pulumix.Apply[NetworkAclEgress](o, func(v NetworkAclEgress) int { return v.ToPort })
}

type NetworkAclIngress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	//
	// > Note: For more information on ICMP types and codes, see here: https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type NetworkAclIngressArgs struct {
	// The action to take.
	Action pulumix.Input[string] `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumix.Input[*string] `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	//
	// > Note: For more information on ICMP types and codes, see here: https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
	IcmpCode pulumix.Input[*int] `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumix.Input[*int] `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumix.Input[*string] `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumix.Input[int] `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumix.Input[int] `pulumi:"toPort"`
}

func (NetworkAclIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngress)(nil)).Elem()
}

func (i NetworkAclIngressArgs) ToNetworkAclIngressOutput() NetworkAclIngressOutput {
	return i.ToNetworkAclIngressOutputWithContext(context.Background())
}

func (i NetworkAclIngressArgs) ToNetworkAclIngressOutputWithContext(ctx context.Context) NetworkAclIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressOutput)
}

func (i *NetworkAclIngressArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkAclIngressArgs] {
	return pulumix.Val(i)
}

type NetworkAclIngressOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngress)(nil)).Elem()
}

func (o NetworkAclIngressOutput) ToNetworkAclIngressOutput() NetworkAclIngressOutput {
	return o
}

func (o NetworkAclIngressOutput) ToNetworkAclIngressOutputWithContext(ctx context.Context) NetworkAclIngressOutput {
	return o
}

func (o NetworkAclIngressOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkAclIngress] {
	return pulumix.Output[NetworkAclIngress]{
		OutputState: o.OutputState,
	}
}

// The action to take.
func (o NetworkAclIngressOutput) Action() pulumix.Output[string] {
	return pulumix.Apply[NetworkAclIngress](o, func(v NetworkAclIngress) string { return v.Action })
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclIngressOutput) CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[NetworkAclIngress](o, func(v NetworkAclIngress) *string { return v.CidrBlock })
}

// The from port to match.
func (o NetworkAclIngressOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[NetworkAclIngress](o, func(v NetworkAclIngress) int { return v.FromPort })
}

// The ICMP type code to be used. Default 0.
//
// > Note: For more information on ICMP types and codes, see here: https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
func (o NetworkAclIngressOutput) IcmpCode() pulumix.Output[*int] {
	return pulumix.Apply[NetworkAclIngress](o, func(v NetworkAclIngress) *int { return v.IcmpCode })
}

// The ICMP type to be used. Default 0.
func (o NetworkAclIngressOutput) IcmpType() pulumix.Output[*int] {
	return pulumix.Apply[NetworkAclIngress](o, func(v NetworkAclIngress) *int { return v.IcmpType })
}

// The IPv6 CIDR block.
func (o NetworkAclIngressOutput) Ipv6CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[NetworkAclIngress](o, func(v NetworkAclIngress) *string { return v.Ipv6CidrBlock })
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclIngressOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[NetworkAclIngress](o, func(v NetworkAclIngress) string { return v.Protocol })
}

// The rule number. Used for ordering.
func (o NetworkAclIngressOutput) RuleNo() pulumix.Output[int] {
	return pulumix.Apply[NetworkAclIngress](o, func(v NetworkAclIngress) int { return v.RuleNo })
}

// The to port to match.
func (o NetworkAclIngressOutput) ToPort() pulumix.Output[int] {
	return pulumix.Apply[NetworkAclIngress](o, func(v NetworkAclIngress) int { return v.ToPort })
}

type NetworkInsightsAnalysisAlternatePathHint struct {
	// The Amazon Resource Name (ARN) of the component.
	ComponentArn *string `pulumi:"componentArn"`
	// The ID of the component.
	ComponentId *string `pulumi:"componentId"`
}

type NetworkInsightsAnalysisAlternatePathHintArgs struct {
	// The Amazon Resource Name (ARN) of the component.
	ComponentArn pulumix.Input[*string] `pulumi:"componentArn"`
	// The ID of the component.
	ComponentId pulumix.Input[*string] `pulumi:"componentId"`
}

func (NetworkInsightsAnalysisAlternatePathHintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisAlternatePathHint)(nil)).Elem()
}

func (i NetworkInsightsAnalysisAlternatePathHintArgs) ToNetworkInsightsAnalysisAlternatePathHintOutput() NetworkInsightsAnalysisAlternatePathHintOutput {
	return i.ToNetworkInsightsAnalysisAlternatePathHintOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisAlternatePathHintArgs) ToNetworkInsightsAnalysisAlternatePathHintOutputWithContext(ctx context.Context) NetworkInsightsAnalysisAlternatePathHintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisAlternatePathHintOutput)
}

func (i *NetworkInsightsAnalysisAlternatePathHintArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisAlternatePathHintArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisAlternatePathHintOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisAlternatePathHintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisAlternatePathHint)(nil)).Elem()
}

func (o NetworkInsightsAnalysisAlternatePathHintOutput) ToNetworkInsightsAnalysisAlternatePathHintOutput() NetworkInsightsAnalysisAlternatePathHintOutput {
	return o
}

func (o NetworkInsightsAnalysisAlternatePathHintOutput) ToNetworkInsightsAnalysisAlternatePathHintOutputWithContext(ctx context.Context) NetworkInsightsAnalysisAlternatePathHintOutput {
	return o
}

func (o NetworkInsightsAnalysisAlternatePathHintOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisAlternatePathHint] {
	return pulumix.Output[NetworkInsightsAnalysisAlternatePathHint]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the component.
func (o NetworkInsightsAnalysisAlternatePathHintOutput) ComponentArn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisAlternatePathHint](o, func(v NetworkInsightsAnalysisAlternatePathHint) *string { return v.ComponentArn })
}

// The ID of the component.
func (o NetworkInsightsAnalysisAlternatePathHintOutput) ComponentId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisAlternatePathHint](o, func(v NetworkInsightsAnalysisAlternatePathHint) *string { return v.ComponentId })
}

type NetworkInsightsAnalysisExplanation struct {
	AclRules                       []NetworkInsightsAnalysisExplanationAclRule                       `pulumi:"aclRules"`
	Acls                           []NetworkInsightsAnalysisExplanationAcl                           `pulumi:"acls"`
	Address                        *string                                                           `pulumi:"address"`
	Addresses                      []string                                                          `pulumi:"addresses"`
	AttachedTos                    []NetworkInsightsAnalysisExplanationAttachedTo                    `pulumi:"attachedTos"`
	AvailabilityZones              []string                                                          `pulumi:"availabilityZones"`
	Cidrs                          []string                                                          `pulumi:"cidrs"`
	ClassicLoadBalancerListeners   []NetworkInsightsAnalysisExplanationClassicLoadBalancerListener   `pulumi:"classicLoadBalancerListeners"`
	Components                     []NetworkInsightsAnalysisExplanationComponent                     `pulumi:"components"`
	CustomerGateways               []NetworkInsightsAnalysisExplanationCustomerGateway               `pulumi:"customerGateways"`
	DestinationVpcs                []NetworkInsightsAnalysisExplanationDestinationVpc                `pulumi:"destinationVpcs"`
	Destinations                   []NetworkInsightsAnalysisExplanationDestination                   `pulumi:"destinations"`
	Direction                      *string                                                           `pulumi:"direction"`
	ElasticLoadBalancerListeners   []NetworkInsightsAnalysisExplanationElasticLoadBalancerListener   `pulumi:"elasticLoadBalancerListeners"`
	ExplanationCode                *string                                                           `pulumi:"explanationCode"`
	IngressRouteTables             []NetworkInsightsAnalysisExplanationIngressRouteTable             `pulumi:"ingressRouteTables"`
	InternetGateways               []NetworkInsightsAnalysisExplanationInternetGateway               `pulumi:"internetGateways"`
	LoadBalancerArn                *string                                                           `pulumi:"loadBalancerArn"`
	LoadBalancerListenerPort       *int                                                              `pulumi:"loadBalancerListenerPort"`
	LoadBalancerTargetGroup        []NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup       `pulumi:"loadBalancerTargetGroup"`
	LoadBalancerTargetGroups       []NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup       `pulumi:"loadBalancerTargetGroups"`
	LoadBalancerTargetPort         *int                                                              `pulumi:"loadBalancerTargetPort"`
	MissingComponent               *string                                                           `pulumi:"missingComponent"`
	NatGateways                    []NetworkInsightsAnalysisExplanationNatGateway                    `pulumi:"natGateways"`
	NetworkInterfaces              []NetworkInsightsAnalysisExplanationNetworkInterface              `pulumi:"networkInterfaces"`
	PacketField                    *string                                                           `pulumi:"packetField"`
	Port                           *int                                                              `pulumi:"port"`
	PortRanges                     []NetworkInsightsAnalysisExplanationPortRange                     `pulumi:"portRanges"`
	PrefixLists                    []NetworkInsightsAnalysisExplanationPrefixList                    `pulumi:"prefixLists"`
	Protocols                      []string                                                          `pulumi:"protocols"`
	RouteTableRoutes               []NetworkInsightsAnalysisExplanationRouteTableRoute               `pulumi:"routeTableRoutes"`
	RouteTables                    []NetworkInsightsAnalysisExplanationRouteTable                    `pulumi:"routeTables"`
	SecurityGroup                  []NetworkInsightsAnalysisExplanationSecurityGroup                 `pulumi:"securityGroup"`
	SecurityGroupRules             []NetworkInsightsAnalysisExplanationSecurityGroupRule             `pulumi:"securityGroupRules"`
	SecurityGroups                 []NetworkInsightsAnalysisExplanationSecurityGroup                 `pulumi:"securityGroups"`
	SourceVpcs                     []NetworkInsightsAnalysisExplanationSourceVpc                     `pulumi:"sourceVpcs"`
	State                          *string                                                           `pulumi:"state"`
	SubnetRouteTables              []NetworkInsightsAnalysisExplanationSubnetRouteTable              `pulumi:"subnetRouteTables"`
	Subnets                        []NetworkInsightsAnalysisExplanationSubnet                        `pulumi:"subnets"`
	TransitGatewayAttachments      []NetworkInsightsAnalysisExplanationTransitGatewayAttachment      `pulumi:"transitGatewayAttachments"`
	TransitGatewayRouteTableRoutes []NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGatewayRouteTables      []NetworkInsightsAnalysisExplanationTransitGatewayRouteTable      `pulumi:"transitGatewayRouteTables"`
	TransitGateways                []NetworkInsightsAnalysisExplanationTransitGateway                `pulumi:"transitGateways"`
	VpcEndpoints                   []NetworkInsightsAnalysisExplanationVpcEndpoint                   `pulumi:"vpcEndpoints"`
	VpcPeeringConnections          []NetworkInsightsAnalysisExplanationVpcPeeringConnection          `pulumi:"vpcPeeringConnections"`
	Vpcs                           []NetworkInsightsAnalysisExplanationVpc                           `pulumi:"vpcs"`
	VpnConnections                 []NetworkInsightsAnalysisExplanationVpnConnection                 `pulumi:"vpnConnections"`
	VpnGateways                    []NetworkInsightsAnalysisExplanationVpnGateway                    `pulumi:"vpnGateways"`
}

type NetworkInsightsAnalysisExplanationArgs struct {
	AclRules                       pulumix.Input[[]*NetworkInsightsAnalysisExplanationAclRuleArgs]                       `pulumi:"aclRules"`
	Acls                           pulumix.Input[[]*NetworkInsightsAnalysisExplanationAclArgs]                           `pulumi:"acls"`
	Address                        pulumix.Input[*string]                                                                `pulumi:"address"`
	Addresses                      pulumix.Input[[]string]                                                               `pulumi:"addresses"`
	AttachedTos                    pulumix.Input[[]*NetworkInsightsAnalysisExplanationAttachedToArgs]                    `pulumi:"attachedTos"`
	AvailabilityZones              pulumix.Input[[]string]                                                               `pulumi:"availabilityZones"`
	Cidrs                          pulumix.Input[[]string]                                                               `pulumi:"cidrs"`
	ClassicLoadBalancerListeners   pulumix.Input[[]*NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs]   `pulumi:"classicLoadBalancerListeners"`
	Components                     pulumix.Input[[]*NetworkInsightsAnalysisExplanationComponentArgs]                     `pulumi:"components"`
	CustomerGateways               pulumix.Input[[]*NetworkInsightsAnalysisExplanationCustomerGatewayArgs]               `pulumi:"customerGateways"`
	DestinationVpcs                pulumix.Input[[]*NetworkInsightsAnalysisExplanationDestinationVpcArgs]                `pulumi:"destinationVpcs"`
	Destinations                   pulumix.Input[[]*NetworkInsightsAnalysisExplanationDestinationArgs]                   `pulumi:"destinations"`
	Direction                      pulumix.Input[*string]                                                                `pulumi:"direction"`
	ElasticLoadBalancerListeners   pulumix.Input[[]*NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs]   `pulumi:"elasticLoadBalancerListeners"`
	ExplanationCode                pulumix.Input[*string]                                                                `pulumi:"explanationCode"`
	IngressRouteTables             pulumix.Input[[]*NetworkInsightsAnalysisExplanationIngressRouteTableArgs]             `pulumi:"ingressRouteTables"`
	InternetGateways               pulumix.Input[[]*NetworkInsightsAnalysisExplanationInternetGatewayArgs]               `pulumi:"internetGateways"`
	LoadBalancerArn                pulumix.Input[*string]                                                                `pulumi:"loadBalancerArn"`
	LoadBalancerListenerPort       pulumix.Input[*int]                                                                   `pulumi:"loadBalancerListenerPort"`
	LoadBalancerTargetGroup        pulumix.Input[[]*NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs]       `pulumi:"loadBalancerTargetGroup"`
	LoadBalancerTargetGroups       pulumix.Input[[]*NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs]       `pulumi:"loadBalancerTargetGroups"`
	LoadBalancerTargetPort         pulumix.Input[*int]                                                                   `pulumi:"loadBalancerTargetPort"`
	MissingComponent               pulumix.Input[*string]                                                                `pulumi:"missingComponent"`
	NatGateways                    pulumix.Input[[]*NetworkInsightsAnalysisExplanationNatGatewayArgs]                    `pulumi:"natGateways"`
	NetworkInterfaces              pulumix.Input[[]*NetworkInsightsAnalysisExplanationNetworkInterfaceArgs]              `pulumi:"networkInterfaces"`
	PacketField                    pulumix.Input[*string]                                                                `pulumi:"packetField"`
	Port                           pulumix.Input[*int]                                                                   `pulumi:"port"`
	PortRanges                     pulumix.Input[[]*NetworkInsightsAnalysisExplanationPortRangeArgs]                     `pulumi:"portRanges"`
	PrefixLists                    pulumix.Input[[]*NetworkInsightsAnalysisExplanationPrefixListArgs]                    `pulumi:"prefixLists"`
	Protocols                      pulumix.Input[[]string]                                                               `pulumi:"protocols"`
	RouteTableRoutes               pulumix.Input[[]*NetworkInsightsAnalysisExplanationRouteTableRouteArgs]               `pulumi:"routeTableRoutes"`
	RouteTables                    pulumix.Input[[]*NetworkInsightsAnalysisExplanationRouteTableArgs]                    `pulumi:"routeTables"`
	SecurityGroup                  pulumix.Input[[]*NetworkInsightsAnalysisExplanationSecurityGroupArgs]                 `pulumi:"securityGroup"`
	SecurityGroupRules             pulumix.Input[[]*NetworkInsightsAnalysisExplanationSecurityGroupRuleArgs]             `pulumi:"securityGroupRules"`
	SecurityGroups                 pulumix.Input[[]*NetworkInsightsAnalysisExplanationSecurityGroupArgs]                 `pulumi:"securityGroups"`
	SourceVpcs                     pulumix.Input[[]*NetworkInsightsAnalysisExplanationSourceVpcArgs]                     `pulumi:"sourceVpcs"`
	State                          pulumix.Input[*string]                                                                `pulumi:"state"`
	SubnetRouteTables              pulumix.Input[[]*NetworkInsightsAnalysisExplanationSubnetRouteTableArgs]              `pulumi:"subnetRouteTables"`
	Subnets                        pulumix.Input[[]*NetworkInsightsAnalysisExplanationSubnetArgs]                        `pulumi:"subnets"`
	TransitGatewayAttachments      pulumix.Input[[]*NetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs]      `pulumi:"transitGatewayAttachments"`
	TransitGatewayRouteTableRoutes pulumix.Input[[]*NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs] `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGatewayRouteTables      pulumix.Input[[]*NetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs]      `pulumi:"transitGatewayRouteTables"`
	TransitGateways                pulumix.Input[[]*NetworkInsightsAnalysisExplanationTransitGatewayArgs]                `pulumi:"transitGateways"`
	VpcEndpoints                   pulumix.Input[[]*NetworkInsightsAnalysisExplanationVpcEndpointArgs]                   `pulumi:"vpcEndpoints"`
	VpcPeeringConnections          pulumix.Input[[]*NetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs]          `pulumi:"vpcPeeringConnections"`
	Vpcs                           pulumix.Input[[]*NetworkInsightsAnalysisExplanationVpcArgs]                           `pulumi:"vpcs"`
	VpnConnections                 pulumix.Input[[]*NetworkInsightsAnalysisExplanationVpnConnectionArgs]                 `pulumi:"vpnConnections"`
	VpnGateways                    pulumix.Input[[]*NetworkInsightsAnalysisExplanationVpnGatewayArgs]                    `pulumi:"vpnGateways"`
}

func (NetworkInsightsAnalysisExplanationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanation)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationArgs) ToNetworkInsightsAnalysisExplanationOutput() NetworkInsightsAnalysisExplanationOutput {
	return i.ToNetworkInsightsAnalysisExplanationOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationArgs) ToNetworkInsightsAnalysisExplanationOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationOutput)
}

func (i *NetworkInsightsAnalysisExplanationArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanation)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationOutput) ToNetworkInsightsAnalysisExplanationOutput() NetworkInsightsAnalysisExplanationOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationOutput) ToNetworkInsightsAnalysisExplanationOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanation] {
	return pulumix.Output[NetworkInsightsAnalysisExplanation]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisExplanationOutput) AclRules() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationAclRule, NetworkInsightsAnalysisExplanationAclRuleOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationAclRule {
		return v.AclRules
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationAclRule, NetworkInsightsAnalysisExplanationAclRuleOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) Acls() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationAcl, NetworkInsightsAnalysisExplanationAclOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationAcl { return v.Acls })
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationAcl, NetworkInsightsAnalysisExplanationAclOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) Address() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *string { return v.Address })
}

func (o NetworkInsightsAnalysisExplanationOutput) Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []string { return v.Addresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) AttachedTos() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationAttachedTo, NetworkInsightsAnalysisExplanationAttachedToOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationAttachedTo {
		return v.AttachedTos
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationAttachedTo, NetworkInsightsAnalysisExplanationAttachedToOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) AvailabilityZones() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []string { return v.AvailabilityZones })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) Cidrs() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []string { return v.Cidrs })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) ClassicLoadBalancerListeners() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationClassicLoadBalancerListener, NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationClassicLoadBalancerListener {
		return v.ClassicLoadBalancerListeners
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationClassicLoadBalancerListener, NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) Components() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationComponent, NetworkInsightsAnalysisExplanationComponentOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationComponent, NetworkInsightsAnalysisExplanationComponentOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) CustomerGateways() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationCustomerGateway, NetworkInsightsAnalysisExplanationCustomerGatewayOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationCustomerGateway {
		return v.CustomerGateways
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationCustomerGateway, NetworkInsightsAnalysisExplanationCustomerGatewayOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) DestinationVpcs() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationDestinationVpc, NetworkInsightsAnalysisExplanationDestinationVpcOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationDestinationVpc {
		return v.DestinationVpcs
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationDestinationVpc, NetworkInsightsAnalysisExplanationDestinationVpcOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) Destinations() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationDestination, NetworkInsightsAnalysisExplanationDestinationOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationDestination {
		return v.Destinations
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationDestination, NetworkInsightsAnalysisExplanationDestinationOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) Direction() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *string { return v.Direction })
}

func (o NetworkInsightsAnalysisExplanationOutput) ElasticLoadBalancerListeners() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationElasticLoadBalancerListener, NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationElasticLoadBalancerListener {
		return v.ElasticLoadBalancerListeners
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationElasticLoadBalancerListener, NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) ExplanationCode() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *string { return v.ExplanationCode })
}

func (o NetworkInsightsAnalysisExplanationOutput) IngressRouteTables() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationIngressRouteTable, NetworkInsightsAnalysisExplanationIngressRouteTableOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationIngressRouteTable {
		return v.IngressRouteTables
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationIngressRouteTable, NetworkInsightsAnalysisExplanationIngressRouteTableOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) InternetGateways() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationInternetGateway, NetworkInsightsAnalysisExplanationInternetGatewayOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationInternetGateway {
		return v.InternetGateways
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationInternetGateway, NetworkInsightsAnalysisExplanationInternetGatewayOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) LoadBalancerArn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *string { return v.LoadBalancerArn })
}

func (o NetworkInsightsAnalysisExplanationOutput) LoadBalancerListenerPort() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *int { return v.LoadBalancerListenerPort })
}

func (o NetworkInsightsAnalysisExplanationOutput) LoadBalancerTargetGroup() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup, NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup {
		return v.LoadBalancerTargetGroup
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup, NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) LoadBalancerTargetGroups() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup, NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup {
		return v.LoadBalancerTargetGroups
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup, NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) LoadBalancerTargetPort() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *int { return v.LoadBalancerTargetPort })
}

func (o NetworkInsightsAnalysisExplanationOutput) MissingComponent() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *string { return v.MissingComponent })
}

func (o NetworkInsightsAnalysisExplanationOutput) NatGateways() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationNatGateway, NetworkInsightsAnalysisExplanationNatGatewayOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationNatGateway {
		return v.NatGateways
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationNatGateway, NetworkInsightsAnalysisExplanationNatGatewayOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) NetworkInterfaces() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationNetworkInterface, NetworkInsightsAnalysisExplanationNetworkInterfaceOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationNetworkInterface {
		return v.NetworkInterfaces
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationNetworkInterface, NetworkInsightsAnalysisExplanationNetworkInterfaceOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) PacketField() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *string { return v.PacketField })
}

func (o NetworkInsightsAnalysisExplanationOutput) Port() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *int { return v.Port })
}

func (o NetworkInsightsAnalysisExplanationOutput) PortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationPortRange, NetworkInsightsAnalysisExplanationPortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationPortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationPortRange, NetworkInsightsAnalysisExplanationPortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) PrefixLists() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationPrefixList, NetworkInsightsAnalysisExplanationPrefixListOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationPrefixList {
		return v.PrefixLists
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationPrefixList, NetworkInsightsAnalysisExplanationPrefixListOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) Protocols() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []string { return v.Protocols })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) RouteTableRoutes() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationRouteTableRoute, NetworkInsightsAnalysisExplanationRouteTableRouteOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationRouteTableRoute {
		return v.RouteTableRoutes
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationRouteTableRoute, NetworkInsightsAnalysisExplanationRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) RouteTables() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationRouteTable, NetworkInsightsAnalysisExplanationRouteTableOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationRouteTable {
		return v.RouteTables
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationRouteTable, NetworkInsightsAnalysisExplanationRouteTableOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) SecurityGroup() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSecurityGroup, NetworkInsightsAnalysisExplanationSecurityGroupOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationSecurityGroup {
		return v.SecurityGroup
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSecurityGroup, NetworkInsightsAnalysisExplanationSecurityGroupOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) SecurityGroupRules() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSecurityGroupRule, NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationSecurityGroupRule {
		return v.SecurityGroupRules
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSecurityGroupRule, NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) SecurityGroups() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSecurityGroup, NetworkInsightsAnalysisExplanationSecurityGroupOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationSecurityGroup {
		return v.SecurityGroups
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSecurityGroup, NetworkInsightsAnalysisExplanationSecurityGroupOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) SourceVpcs() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSourceVpc, NetworkInsightsAnalysisExplanationSourceVpcOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationSourceVpc {
		return v.SourceVpcs
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSourceVpc, NetworkInsightsAnalysisExplanationSourceVpcOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) State() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) *string { return v.State })
}

func (o NetworkInsightsAnalysisExplanationOutput) SubnetRouteTables() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSubnetRouteTable, NetworkInsightsAnalysisExplanationSubnetRouteTableOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationSubnetRouteTable {
		return v.SubnetRouteTables
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSubnetRouteTable, NetworkInsightsAnalysisExplanationSubnetRouteTableOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) Subnets() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSubnet, NetworkInsightsAnalysisExplanationSubnetOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationSubnet {
		return v.Subnets
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSubnet, NetworkInsightsAnalysisExplanationSubnetOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) TransitGatewayAttachments() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationTransitGatewayAttachment, NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationTransitGatewayAttachment {
		return v.TransitGatewayAttachments
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationTransitGatewayAttachment, NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) TransitGatewayRouteTableRoutes() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute, NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute {
		return v.TransitGatewayRouteTableRoutes
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute, NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) TransitGatewayRouteTables() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationTransitGatewayRouteTable, NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationTransitGatewayRouteTable {
		return v.TransitGatewayRouteTables
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationTransitGatewayRouteTable, NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) TransitGateways() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationTransitGateway, NetworkInsightsAnalysisExplanationTransitGatewayOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationTransitGateway {
		return v.TransitGateways
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationTransitGateway, NetworkInsightsAnalysisExplanationTransitGatewayOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) VpcEndpoints() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpcEndpoint, NetworkInsightsAnalysisExplanationVpcEndpointOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationVpcEndpoint {
		return v.VpcEndpoints
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpcEndpoint, NetworkInsightsAnalysisExplanationVpcEndpointOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) VpcPeeringConnections() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpcPeeringConnection, NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationVpcPeeringConnection {
		return v.VpcPeeringConnections
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpcPeeringConnection, NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) Vpcs() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpc, NetworkInsightsAnalysisExplanationVpcOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationVpc { return v.Vpcs })
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpc, NetworkInsightsAnalysisExplanationVpcOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) VpnConnections() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpnConnection, NetworkInsightsAnalysisExplanationVpnConnectionOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationVpnConnection {
		return v.VpnConnections
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpnConnection, NetworkInsightsAnalysisExplanationVpnConnectionOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationOutput) VpnGateways() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpnGateway, NetworkInsightsAnalysisExplanationVpnGatewayOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanation](o, func(v NetworkInsightsAnalysisExplanation) []NetworkInsightsAnalysisExplanationVpnGateway {
		return v.VpnGateways
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationVpnGateway, NetworkInsightsAnalysisExplanationVpnGatewayOutput]{OutputState: value.OutputState}
}

type NetworkInsightsAnalysisExplanationAcl struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationAclArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationAcl)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationAclArgs) ToNetworkInsightsAnalysisExplanationAclOutput() NetworkInsightsAnalysisExplanationAclOutput {
	return i.ToNetworkInsightsAnalysisExplanationAclOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationAclArgs) ToNetworkInsightsAnalysisExplanationAclOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationAclOutput)
}

func (i *NetworkInsightsAnalysisExplanationAclArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationAclArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationAclOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationAcl)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationAclOutput) ToNetworkInsightsAnalysisExplanationAclOutput() NetworkInsightsAnalysisExplanationAclOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationAclOutput) ToNetworkInsightsAnalysisExplanationAclOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationAclOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationAclOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationAcl] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationAcl]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationAclOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAcl](o, func(v NetworkInsightsAnalysisExplanationAcl) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationAclOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAcl](o, func(v NetworkInsightsAnalysisExplanationAcl) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationAclOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAcl](o, func(v NetworkInsightsAnalysisExplanationAcl) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationAclRule struct {
	Cidr       *string                                              `pulumi:"cidr"`
	Egress     *bool                                                `pulumi:"egress"`
	PortRanges []NetworkInsightsAnalysisExplanationAclRulePortRange `pulumi:"portRanges"`
	Protocol   *string                                              `pulumi:"protocol"`
	RuleAction *string                                              `pulumi:"ruleAction"`
	RuleNumber *int                                                 `pulumi:"ruleNumber"`
}

type NetworkInsightsAnalysisExplanationAclRuleArgs struct {
	Cidr       pulumix.Input[*string]                                                   `pulumi:"cidr"`
	Egress     pulumix.Input[*bool]                                                     `pulumi:"egress"`
	PortRanges pulumix.Input[[]*NetworkInsightsAnalysisExplanationAclRulePortRangeArgs] `pulumi:"portRanges"`
	Protocol   pulumix.Input[*string]                                                   `pulumi:"protocol"`
	RuleAction pulumix.Input[*string]                                                   `pulumi:"ruleAction"`
	RuleNumber pulumix.Input[*int]                                                      `pulumi:"ruleNumber"`
}

func (NetworkInsightsAnalysisExplanationAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationAclRule)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationAclRuleArgs) ToNetworkInsightsAnalysisExplanationAclRuleOutput() NetworkInsightsAnalysisExplanationAclRuleOutput {
	return i.ToNetworkInsightsAnalysisExplanationAclRuleOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationAclRuleArgs) ToNetworkInsightsAnalysisExplanationAclRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationAclRuleOutput)
}

func (i *NetworkInsightsAnalysisExplanationAclRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationAclRuleArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationAclRuleOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationAclRule)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationAclRuleOutput) ToNetworkInsightsAnalysisExplanationAclRuleOutput() NetworkInsightsAnalysisExplanationAclRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationAclRuleOutput) ToNetworkInsightsAnalysisExplanationAclRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationAclRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationAclRuleOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationAclRule] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationAclRule]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisExplanationAclRuleOutput) Cidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAclRule](o, func(v NetworkInsightsAnalysisExplanationAclRule) *string { return v.Cidr })
}

func (o NetworkInsightsAnalysisExplanationAclRuleOutput) Egress() pulumix.Output[*bool] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAclRule](o, func(v NetworkInsightsAnalysisExplanationAclRule) *bool { return v.Egress })
}

func (o NetworkInsightsAnalysisExplanationAclRuleOutput) PortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationAclRulePortRange, NetworkInsightsAnalysisExplanationAclRulePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanationAclRule](o, func(v NetworkInsightsAnalysisExplanationAclRule) []NetworkInsightsAnalysisExplanationAclRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationAclRulePortRange, NetworkInsightsAnalysisExplanationAclRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationAclRuleOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAclRule](o, func(v NetworkInsightsAnalysisExplanationAclRule) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisExplanationAclRuleOutput) RuleAction() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAclRule](o, func(v NetworkInsightsAnalysisExplanationAclRule) *string { return v.RuleAction })
}

func (o NetworkInsightsAnalysisExplanationAclRuleOutput) RuleNumber() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAclRule](o, func(v NetworkInsightsAnalysisExplanationAclRule) *int { return v.RuleNumber })
}

type NetworkInsightsAnalysisExplanationAclRulePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisExplanationAclRulePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisExplanationAclRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationAclRulePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationAclRulePortRangeArgs) ToNetworkInsightsAnalysisExplanationAclRulePortRangeOutput() NetworkInsightsAnalysisExplanationAclRulePortRangeOutput {
	return i.ToNetworkInsightsAnalysisExplanationAclRulePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationAclRulePortRangeArgs) ToNetworkInsightsAnalysisExplanationAclRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationAclRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationAclRulePortRangeOutput)
}

func (i *NetworkInsightsAnalysisExplanationAclRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationAclRulePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationAclRulePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationAclRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationAclRulePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationAclRulePortRangeOutput) ToNetworkInsightsAnalysisExplanationAclRulePortRangeOutput() NetworkInsightsAnalysisExplanationAclRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationAclRulePortRangeOutput) ToNetworkInsightsAnalysisExplanationAclRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationAclRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationAclRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationAclRulePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationAclRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisExplanationAclRulePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAclRulePortRange](o, func(v NetworkInsightsAnalysisExplanationAclRulePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisExplanationAclRulePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAclRulePortRange](o, func(v NetworkInsightsAnalysisExplanationAclRulePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisExplanationAttachedTo struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationAttachedToArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationAttachedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationAttachedTo)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationAttachedToArgs) ToNetworkInsightsAnalysisExplanationAttachedToOutput() NetworkInsightsAnalysisExplanationAttachedToOutput {
	return i.ToNetworkInsightsAnalysisExplanationAttachedToOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationAttachedToArgs) ToNetworkInsightsAnalysisExplanationAttachedToOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationAttachedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationAttachedToOutput)
}

func (i *NetworkInsightsAnalysisExplanationAttachedToArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationAttachedToArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationAttachedToOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationAttachedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationAttachedTo)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationAttachedToOutput) ToNetworkInsightsAnalysisExplanationAttachedToOutput() NetworkInsightsAnalysisExplanationAttachedToOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationAttachedToOutput) ToNetworkInsightsAnalysisExplanationAttachedToOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationAttachedToOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationAttachedToOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationAttachedTo] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationAttachedTo]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationAttachedToOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAttachedTo](o, func(v NetworkInsightsAnalysisExplanationAttachedTo) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationAttachedToOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAttachedTo](o, func(v NetworkInsightsAnalysisExplanationAttachedTo) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationAttachedToOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationAttachedTo](o, func(v NetworkInsightsAnalysisExplanationAttachedTo) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationClassicLoadBalancerListener struct {
	InstancePort     *int `pulumi:"instancePort"`
	LoadBalancerPort *int `pulumi:"loadBalancerPort"`
}

type NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs struct {
	InstancePort     pulumix.Input[*int] `pulumi:"instancePort"`
	LoadBalancerPort pulumix.Input[*int] `pulumi:"loadBalancerPort"`
}

func (NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationClassicLoadBalancerListener)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs) ToNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput() NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput {
	return i.ToNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs) ToNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput)
}

func (i *NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationClassicLoadBalancerListener)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) ToNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput() NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) ToNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationClassicLoadBalancerListener] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationClassicLoadBalancerListener]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) InstancePort() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationClassicLoadBalancerListener](o, func(v NetworkInsightsAnalysisExplanationClassicLoadBalancerListener) *int { return v.InstancePort })
}

func (o NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) LoadBalancerPort() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationClassicLoadBalancerListener](o, func(v NetworkInsightsAnalysisExplanationClassicLoadBalancerListener) *int { return v.LoadBalancerPort })
}

type NetworkInsightsAnalysisExplanationComponent struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationComponentArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationComponent)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationComponentArgs) ToNetworkInsightsAnalysisExplanationComponentOutput() NetworkInsightsAnalysisExplanationComponentOutput {
	return i.ToNetworkInsightsAnalysisExplanationComponentOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationComponentArgs) ToNetworkInsightsAnalysisExplanationComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationComponentOutput)
}

func (i *NetworkInsightsAnalysisExplanationComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationComponentArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationComponentOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationComponent)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationComponentOutput) ToNetworkInsightsAnalysisExplanationComponentOutput() NetworkInsightsAnalysisExplanationComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationComponentOutput) ToNetworkInsightsAnalysisExplanationComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationComponentOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationComponent] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationComponentOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationComponent](o, func(v NetworkInsightsAnalysisExplanationComponent) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationComponentOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationComponent](o, func(v NetworkInsightsAnalysisExplanationComponent) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationComponentOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationComponent](o, func(v NetworkInsightsAnalysisExplanationComponent) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationCustomerGateway struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationCustomerGatewayArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationCustomerGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationCustomerGateway)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationCustomerGatewayArgs) ToNetworkInsightsAnalysisExplanationCustomerGatewayOutput() NetworkInsightsAnalysisExplanationCustomerGatewayOutput {
	return i.ToNetworkInsightsAnalysisExplanationCustomerGatewayOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationCustomerGatewayArgs) ToNetworkInsightsAnalysisExplanationCustomerGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationCustomerGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationCustomerGatewayOutput)
}

func (i *NetworkInsightsAnalysisExplanationCustomerGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationCustomerGatewayArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationCustomerGatewayOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationCustomerGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationCustomerGateway)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationCustomerGatewayOutput) ToNetworkInsightsAnalysisExplanationCustomerGatewayOutput() NetworkInsightsAnalysisExplanationCustomerGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationCustomerGatewayOutput) ToNetworkInsightsAnalysisExplanationCustomerGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationCustomerGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationCustomerGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationCustomerGateway] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationCustomerGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationCustomerGatewayOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationCustomerGateway](o, func(v NetworkInsightsAnalysisExplanationCustomerGateway) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationCustomerGatewayOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationCustomerGateway](o, func(v NetworkInsightsAnalysisExplanationCustomerGateway) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationCustomerGatewayOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationCustomerGateway](o, func(v NetworkInsightsAnalysisExplanationCustomerGateway) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationDestination struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationDestinationArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationDestination)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationDestinationArgs) ToNetworkInsightsAnalysisExplanationDestinationOutput() NetworkInsightsAnalysisExplanationDestinationOutput {
	return i.ToNetworkInsightsAnalysisExplanationDestinationOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationDestinationArgs) ToNetworkInsightsAnalysisExplanationDestinationOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationDestinationOutput)
}

func (i *NetworkInsightsAnalysisExplanationDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationDestinationArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationDestinationOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationDestination)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationDestinationOutput) ToNetworkInsightsAnalysisExplanationDestinationOutput() NetworkInsightsAnalysisExplanationDestinationOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationDestinationOutput) ToNetworkInsightsAnalysisExplanationDestinationOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationDestinationOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationDestination] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationDestination]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationDestinationOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationDestination](o, func(v NetworkInsightsAnalysisExplanationDestination) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationDestinationOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationDestination](o, func(v NetworkInsightsAnalysisExplanationDestination) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationDestinationOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationDestination](o, func(v NetworkInsightsAnalysisExplanationDestination) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationDestinationVpc struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationDestinationVpcArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationDestinationVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationDestinationVpc)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationDestinationVpcArgs) ToNetworkInsightsAnalysisExplanationDestinationVpcOutput() NetworkInsightsAnalysisExplanationDestinationVpcOutput {
	return i.ToNetworkInsightsAnalysisExplanationDestinationVpcOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationDestinationVpcArgs) ToNetworkInsightsAnalysisExplanationDestinationVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationDestinationVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationDestinationVpcOutput)
}

func (i *NetworkInsightsAnalysisExplanationDestinationVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationDestinationVpcArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationDestinationVpcOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationDestinationVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationDestinationVpc)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationDestinationVpcOutput) ToNetworkInsightsAnalysisExplanationDestinationVpcOutput() NetworkInsightsAnalysisExplanationDestinationVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationDestinationVpcOutput) ToNetworkInsightsAnalysisExplanationDestinationVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationDestinationVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationDestinationVpcOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationDestinationVpc] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationDestinationVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationDestinationVpcOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationDestinationVpc](o, func(v NetworkInsightsAnalysisExplanationDestinationVpc) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationDestinationVpcOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationDestinationVpc](o, func(v NetworkInsightsAnalysisExplanationDestinationVpc) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationDestinationVpcOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationDestinationVpc](o, func(v NetworkInsightsAnalysisExplanationDestinationVpc) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationElasticLoadBalancerListener struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationElasticLoadBalancerListener)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs) ToNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput() NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput {
	return i.ToNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs) ToNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput)
}

func (i *NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationElasticLoadBalancerListener)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) ToNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput() NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) ToNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationElasticLoadBalancerListener] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationElasticLoadBalancerListener]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationElasticLoadBalancerListener](o, func(v NetworkInsightsAnalysisExplanationElasticLoadBalancerListener) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationElasticLoadBalancerListener](o, func(v NetworkInsightsAnalysisExplanationElasticLoadBalancerListener) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationElasticLoadBalancerListener](o, func(v NetworkInsightsAnalysisExplanationElasticLoadBalancerListener) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationIngressRouteTable struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationIngressRouteTableArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationIngressRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationIngressRouteTable)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationIngressRouteTableArgs) ToNetworkInsightsAnalysisExplanationIngressRouteTableOutput() NetworkInsightsAnalysisExplanationIngressRouteTableOutput {
	return i.ToNetworkInsightsAnalysisExplanationIngressRouteTableOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationIngressRouteTableArgs) ToNetworkInsightsAnalysisExplanationIngressRouteTableOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationIngressRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationIngressRouteTableOutput)
}

func (i *NetworkInsightsAnalysisExplanationIngressRouteTableArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationIngressRouteTableArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationIngressRouteTableOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationIngressRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationIngressRouteTable)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationIngressRouteTableOutput) ToNetworkInsightsAnalysisExplanationIngressRouteTableOutput() NetworkInsightsAnalysisExplanationIngressRouteTableOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationIngressRouteTableOutput) ToNetworkInsightsAnalysisExplanationIngressRouteTableOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationIngressRouteTableOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationIngressRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationIngressRouteTable] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationIngressRouteTable]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationIngressRouteTableOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationIngressRouteTable](o, func(v NetworkInsightsAnalysisExplanationIngressRouteTable) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationIngressRouteTableOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationIngressRouteTable](o, func(v NetworkInsightsAnalysisExplanationIngressRouteTable) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationIngressRouteTableOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationIngressRouteTable](o, func(v NetworkInsightsAnalysisExplanationIngressRouteTable) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationInternetGateway struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationInternetGatewayArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationInternetGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationInternetGateway)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationInternetGatewayArgs) ToNetworkInsightsAnalysisExplanationInternetGatewayOutput() NetworkInsightsAnalysisExplanationInternetGatewayOutput {
	return i.ToNetworkInsightsAnalysisExplanationInternetGatewayOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationInternetGatewayArgs) ToNetworkInsightsAnalysisExplanationInternetGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationInternetGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationInternetGatewayOutput)
}

func (i *NetworkInsightsAnalysisExplanationInternetGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationInternetGatewayArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationInternetGatewayOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationInternetGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationInternetGateway)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationInternetGatewayOutput) ToNetworkInsightsAnalysisExplanationInternetGatewayOutput() NetworkInsightsAnalysisExplanationInternetGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationInternetGatewayOutput) ToNetworkInsightsAnalysisExplanationInternetGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationInternetGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationInternetGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationInternetGateway] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationInternetGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationInternetGatewayOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationInternetGateway](o, func(v NetworkInsightsAnalysisExplanationInternetGateway) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationInternetGatewayOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationInternetGateway](o, func(v NetworkInsightsAnalysisExplanationInternetGateway) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationInternetGatewayOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationInternetGateway](o, func(v NetworkInsightsAnalysisExplanationInternetGateway) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs) ToNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput() NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput {
	return i.ToNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs) ToNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput)
}

func (i *NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) ToNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput() NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) ToNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup](o, func(v NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup](o, func(v NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup](o, func(v NetworkInsightsAnalysisExplanationLoadBalancerTargetGroup) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationNatGateway struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationNatGatewayArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationNatGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationNatGateway)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationNatGatewayArgs) ToNetworkInsightsAnalysisExplanationNatGatewayOutput() NetworkInsightsAnalysisExplanationNatGatewayOutput {
	return i.ToNetworkInsightsAnalysisExplanationNatGatewayOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationNatGatewayArgs) ToNetworkInsightsAnalysisExplanationNatGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationNatGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationNatGatewayOutput)
}

func (i *NetworkInsightsAnalysisExplanationNatGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationNatGatewayArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationNatGatewayOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationNatGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationNatGateway)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationNatGatewayOutput) ToNetworkInsightsAnalysisExplanationNatGatewayOutput() NetworkInsightsAnalysisExplanationNatGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationNatGatewayOutput) ToNetworkInsightsAnalysisExplanationNatGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationNatGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationNatGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationNatGateway] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationNatGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationNatGatewayOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationNatGateway](o, func(v NetworkInsightsAnalysisExplanationNatGateway) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationNatGatewayOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationNatGateway](o, func(v NetworkInsightsAnalysisExplanationNatGateway) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationNatGatewayOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationNatGateway](o, func(v NetworkInsightsAnalysisExplanationNatGateway) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationNetworkInterface struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationNetworkInterfaceArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationNetworkInterface)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationNetworkInterfaceArgs) ToNetworkInsightsAnalysisExplanationNetworkInterfaceOutput() NetworkInsightsAnalysisExplanationNetworkInterfaceOutput {
	return i.ToNetworkInsightsAnalysisExplanationNetworkInterfaceOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationNetworkInterfaceArgs) ToNetworkInsightsAnalysisExplanationNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationNetworkInterfaceOutput)
}

func (i *NetworkInsightsAnalysisExplanationNetworkInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationNetworkInterfaceArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationNetworkInterface)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationNetworkInterfaceOutput) ToNetworkInsightsAnalysisExplanationNetworkInterfaceOutput() NetworkInsightsAnalysisExplanationNetworkInterfaceOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationNetworkInterfaceOutput) ToNetworkInsightsAnalysisExplanationNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationNetworkInterfaceOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationNetworkInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationNetworkInterface] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationNetworkInterface]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationNetworkInterfaceOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationNetworkInterface](o, func(v NetworkInsightsAnalysisExplanationNetworkInterface) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationNetworkInterfaceOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationNetworkInterface](o, func(v NetworkInsightsAnalysisExplanationNetworkInterface) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationNetworkInterfaceOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationNetworkInterface](o, func(v NetworkInsightsAnalysisExplanationNetworkInterface) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationPortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisExplanationPortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisExplanationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationPortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationPortRangeArgs) ToNetworkInsightsAnalysisExplanationPortRangeOutput() NetworkInsightsAnalysisExplanationPortRangeOutput {
	return i.ToNetworkInsightsAnalysisExplanationPortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationPortRangeArgs) ToNetworkInsightsAnalysisExplanationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationPortRangeOutput)
}

func (i *NetworkInsightsAnalysisExplanationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationPortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationPortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationPortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationPortRangeOutput) ToNetworkInsightsAnalysisExplanationPortRangeOutput() NetworkInsightsAnalysisExplanationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationPortRangeOutput) ToNetworkInsightsAnalysisExplanationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationPortRange] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisExplanationPortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationPortRange](o, func(v NetworkInsightsAnalysisExplanationPortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisExplanationPortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationPortRange](o, func(v NetworkInsightsAnalysisExplanationPortRange) *int { return v.To })
}

type NetworkInsightsAnalysisExplanationPrefixList struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationPrefixListArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationPrefixList)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationPrefixListArgs) ToNetworkInsightsAnalysisExplanationPrefixListOutput() NetworkInsightsAnalysisExplanationPrefixListOutput {
	return i.ToNetworkInsightsAnalysisExplanationPrefixListOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationPrefixListArgs) ToNetworkInsightsAnalysisExplanationPrefixListOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationPrefixListOutput)
}

func (i *NetworkInsightsAnalysisExplanationPrefixListArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationPrefixListArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationPrefixListOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationPrefixList)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationPrefixListOutput) ToNetworkInsightsAnalysisExplanationPrefixListOutput() NetworkInsightsAnalysisExplanationPrefixListOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationPrefixListOutput) ToNetworkInsightsAnalysisExplanationPrefixListOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationPrefixListOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationPrefixListOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationPrefixList] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationPrefixList]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationPrefixListOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationPrefixList](o, func(v NetworkInsightsAnalysisExplanationPrefixList) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationPrefixListOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationPrefixList](o, func(v NetworkInsightsAnalysisExplanationPrefixList) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationPrefixListOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationPrefixList](o, func(v NetworkInsightsAnalysisExplanationPrefixList) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationRouteTable struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationRouteTableArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationRouteTable)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationRouteTableArgs) ToNetworkInsightsAnalysisExplanationRouteTableOutput() NetworkInsightsAnalysisExplanationRouteTableOutput {
	return i.ToNetworkInsightsAnalysisExplanationRouteTableOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationRouteTableArgs) ToNetworkInsightsAnalysisExplanationRouteTableOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationRouteTableOutput)
}

func (i *NetworkInsightsAnalysisExplanationRouteTableArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationRouteTableArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationRouteTableOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationRouteTable)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationRouteTableOutput) ToNetworkInsightsAnalysisExplanationRouteTableOutput() NetworkInsightsAnalysisExplanationRouteTableOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationRouteTableOutput) ToNetworkInsightsAnalysisExplanationRouteTableOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationRouteTableOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationRouteTable] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationRouteTable]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationRouteTableOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTable](o, func(v NetworkInsightsAnalysisExplanationRouteTable) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationRouteTableOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTable](o, func(v NetworkInsightsAnalysisExplanationRouteTable) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationRouteTableOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTable](o, func(v NetworkInsightsAnalysisExplanationRouteTable) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationRouteTableRoute struct {
	DestinationCidr             *string `pulumi:"destinationCidr"`
	DestinationPrefixListId     *string `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId *string `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   *string `pulumi:"gatewayId"`
	InstanceId                  *string `pulumi:"instanceId"`
	NatGatewayId                *string `pulumi:"natGatewayId"`
	NetworkInterfaceId          *string `pulumi:"networkInterfaceId"`
	Origin                      *string `pulumi:"origin"`
	TransitGatewayId            *string `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      *string `pulumi:"vpcPeeringConnectionId"`
}

type NetworkInsightsAnalysisExplanationRouteTableRouteArgs struct {
	DestinationCidr             pulumix.Input[*string] `pulumi:"destinationCidr"`
	DestinationPrefixListId     pulumix.Input[*string] `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId pulumix.Input[*string] `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   pulumix.Input[*string] `pulumi:"gatewayId"`
	InstanceId                  pulumix.Input[*string] `pulumi:"instanceId"`
	NatGatewayId                pulumix.Input[*string] `pulumi:"natGatewayId"`
	NetworkInterfaceId          pulumix.Input[*string] `pulumi:"networkInterfaceId"`
	Origin                      pulumix.Input[*string] `pulumi:"origin"`
	TransitGatewayId            pulumix.Input[*string] `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      pulumix.Input[*string] `pulumi:"vpcPeeringConnectionId"`
}

func (NetworkInsightsAnalysisExplanationRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationRouteTableRoute)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationRouteTableRouteArgs) ToNetworkInsightsAnalysisExplanationRouteTableRouteOutput() NetworkInsightsAnalysisExplanationRouteTableRouteOutput {
	return i.ToNetworkInsightsAnalysisExplanationRouteTableRouteOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationRouteTableRouteArgs) ToNetworkInsightsAnalysisExplanationRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationRouteTableRouteOutput)
}

func (i *NetworkInsightsAnalysisExplanationRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationRouteTableRouteOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationRouteTableRoute)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) ToNetworkInsightsAnalysisExplanationRouteTableRouteOutput() NetworkInsightsAnalysisExplanationRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) ToNetworkInsightsAnalysisExplanationRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationRouteTableRoute] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) DestinationCidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string { return v.DestinationCidr })
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) DestinationPrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string { return v.DestinationPrefixListId })
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) EgressOnlyInternetGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string {
		return v.EgressOnlyInternetGatewayId
	})
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) GatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string { return v.GatewayId })
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) InstanceId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string { return v.InstanceId })
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) NatGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string { return v.NatGatewayId })
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) NetworkInterfaceId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string { return v.NetworkInterfaceId })
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) Origin() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string { return v.Origin })
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) TransitGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string { return v.TransitGatewayId })
}

func (o NetworkInsightsAnalysisExplanationRouteTableRouteOutput) VpcPeeringConnectionId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationRouteTableRoute) *string { return v.VpcPeeringConnectionId })
}

type NetworkInsightsAnalysisExplanationSecurityGroup struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationSecurityGroupArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSecurityGroup)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationSecurityGroupArgs) ToNetworkInsightsAnalysisExplanationSecurityGroupOutput() NetworkInsightsAnalysisExplanationSecurityGroupOutput {
	return i.ToNetworkInsightsAnalysisExplanationSecurityGroupOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationSecurityGroupArgs) ToNetworkInsightsAnalysisExplanationSecurityGroupOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationSecurityGroupOutput)
}

func (i *NetworkInsightsAnalysisExplanationSecurityGroupArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationSecurityGroupArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationSecurityGroupOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSecurityGroup)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupOutput) ToNetworkInsightsAnalysisExplanationSecurityGroupOutput() NetworkInsightsAnalysisExplanationSecurityGroupOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupOutput) ToNetworkInsightsAnalysisExplanationSecurityGroupOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSecurityGroupOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationSecurityGroup] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationSecurityGroup]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationSecurityGroupOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroup](o, func(v NetworkInsightsAnalysisExplanationSecurityGroup) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationSecurityGroupOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroup](o, func(v NetworkInsightsAnalysisExplanationSecurityGroup) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroup](o, func(v NetworkInsightsAnalysisExplanationSecurityGroup) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationSecurityGroupRule struct {
	Cidr            *string                                                        `pulumi:"cidr"`
	Direction       *string                                                        `pulumi:"direction"`
	PortRanges      []NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange `pulumi:"portRanges"`
	PrefixListId    *string                                                        `pulumi:"prefixListId"`
	Protocol        *string                                                        `pulumi:"protocol"`
	SecurityGroupId *string                                                        `pulumi:"securityGroupId"`
}

type NetworkInsightsAnalysisExplanationSecurityGroupRuleArgs struct {
	Cidr            pulumix.Input[*string]                                                             `pulumi:"cidr"`
	Direction       pulumix.Input[*string]                                                             `pulumi:"direction"`
	PortRanges      pulumix.Input[[]*NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs] `pulumi:"portRanges"`
	PrefixListId    pulumix.Input[*string]                                                             `pulumi:"prefixListId"`
	Protocol        pulumix.Input[*string]                                                             `pulumi:"protocol"`
	SecurityGroupId pulumix.Input[*string]                                                             `pulumi:"securityGroupId"`
}

func (NetworkInsightsAnalysisExplanationSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSecurityGroupRule)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationSecurityGroupRuleArgs) ToNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput() NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput {
	return i.ToNetworkInsightsAnalysisExplanationSecurityGroupRuleOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationSecurityGroupRuleArgs) ToNetworkInsightsAnalysisExplanationSecurityGroupRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput)
}

func (i *NetworkInsightsAnalysisExplanationSecurityGroupRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationSecurityGroupRuleArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSecurityGroupRule)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) ToNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput() NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) ToNetworkInsightsAnalysisExplanationSecurityGroupRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationSecurityGroupRule] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationSecurityGroupRule]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) Cidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v NetworkInsightsAnalysisExplanationSecurityGroupRule) *string { return v.Cidr })
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) Direction() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v NetworkInsightsAnalysisExplanationSecurityGroupRule) *string { return v.Direction })
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) PortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange, NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v NetworkInsightsAnalysisExplanationSecurityGroupRule) []NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange, NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) PrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v NetworkInsightsAnalysisExplanationSecurityGroupRule) *string { return v.PrefixListId })
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v NetworkInsightsAnalysisExplanationSecurityGroupRule) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) SecurityGroupId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v NetworkInsightsAnalysisExplanationSecurityGroupRule) *string { return v.SecurityGroupId })
}

type NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs) ToNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput() NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput {
	return i.ToNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs) ToNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput)
}

func (i *NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) ToNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput() NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) ToNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange](o, func(v NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange](o, func(v NetworkInsightsAnalysisExplanationSecurityGroupRulePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisExplanationSourceVpc struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationSourceVpcArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationSourceVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSourceVpc)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationSourceVpcArgs) ToNetworkInsightsAnalysisExplanationSourceVpcOutput() NetworkInsightsAnalysisExplanationSourceVpcOutput {
	return i.ToNetworkInsightsAnalysisExplanationSourceVpcOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationSourceVpcArgs) ToNetworkInsightsAnalysisExplanationSourceVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSourceVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationSourceVpcOutput)
}

func (i *NetworkInsightsAnalysisExplanationSourceVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationSourceVpcArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationSourceVpcOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationSourceVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSourceVpc)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationSourceVpcOutput) ToNetworkInsightsAnalysisExplanationSourceVpcOutput() NetworkInsightsAnalysisExplanationSourceVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSourceVpcOutput) ToNetworkInsightsAnalysisExplanationSourceVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSourceVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSourceVpcOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationSourceVpc] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationSourceVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationSourceVpcOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSourceVpc](o, func(v NetworkInsightsAnalysisExplanationSourceVpc) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationSourceVpcOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSourceVpc](o, func(v NetworkInsightsAnalysisExplanationSourceVpc) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationSourceVpcOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSourceVpc](o, func(v NetworkInsightsAnalysisExplanationSourceVpc) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationSubnet struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationSubnetArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSubnet)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationSubnetArgs) ToNetworkInsightsAnalysisExplanationSubnetOutput() NetworkInsightsAnalysisExplanationSubnetOutput {
	return i.ToNetworkInsightsAnalysisExplanationSubnetOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationSubnetArgs) ToNetworkInsightsAnalysisExplanationSubnetOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationSubnetOutput)
}

func (i *NetworkInsightsAnalysisExplanationSubnetArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationSubnetArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationSubnetOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSubnet)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationSubnetOutput) ToNetworkInsightsAnalysisExplanationSubnetOutput() NetworkInsightsAnalysisExplanationSubnetOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSubnetOutput) ToNetworkInsightsAnalysisExplanationSubnetOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSubnetOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSubnetOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationSubnet] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationSubnet]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationSubnetOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSubnet](o, func(v NetworkInsightsAnalysisExplanationSubnet) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationSubnetOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSubnet](o, func(v NetworkInsightsAnalysisExplanationSubnet) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationSubnetOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSubnet](o, func(v NetworkInsightsAnalysisExplanationSubnet) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationSubnetRouteTable struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationSubnetRouteTableArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationSubnetRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSubnetRouteTable)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationSubnetRouteTableArgs) ToNetworkInsightsAnalysisExplanationSubnetRouteTableOutput() NetworkInsightsAnalysisExplanationSubnetRouteTableOutput {
	return i.ToNetworkInsightsAnalysisExplanationSubnetRouteTableOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationSubnetRouteTableArgs) ToNetworkInsightsAnalysisExplanationSubnetRouteTableOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSubnetRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationSubnetRouteTableOutput)
}

func (i *NetworkInsightsAnalysisExplanationSubnetRouteTableArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationSubnetRouteTableArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationSubnetRouteTableOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationSubnetRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationSubnetRouteTable)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationSubnetRouteTableOutput) ToNetworkInsightsAnalysisExplanationSubnetRouteTableOutput() NetworkInsightsAnalysisExplanationSubnetRouteTableOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSubnetRouteTableOutput) ToNetworkInsightsAnalysisExplanationSubnetRouteTableOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationSubnetRouteTableOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationSubnetRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationSubnetRouteTable] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationSubnetRouteTable]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationSubnetRouteTableOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSubnetRouteTable](o, func(v NetworkInsightsAnalysisExplanationSubnetRouteTable) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationSubnetRouteTableOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSubnetRouteTable](o, func(v NetworkInsightsAnalysisExplanationSubnetRouteTable) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationSubnetRouteTableOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationSubnetRouteTable](o, func(v NetworkInsightsAnalysisExplanationSubnetRouteTable) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationTransitGateway struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationTransitGatewayArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationTransitGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationTransitGateway)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationTransitGatewayArgs) ToNetworkInsightsAnalysisExplanationTransitGatewayOutput() NetworkInsightsAnalysisExplanationTransitGatewayOutput {
	return i.ToNetworkInsightsAnalysisExplanationTransitGatewayOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationTransitGatewayArgs) ToNetworkInsightsAnalysisExplanationTransitGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationTransitGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationTransitGatewayOutput)
}

func (i *NetworkInsightsAnalysisExplanationTransitGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationTransitGatewayArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationTransitGatewayOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationTransitGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationTransitGateway)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayOutput) ToNetworkInsightsAnalysisExplanationTransitGatewayOutput() NetworkInsightsAnalysisExplanationTransitGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayOutput) ToNetworkInsightsAnalysisExplanationTransitGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationTransitGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationTransitGateway] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationTransitGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationTransitGatewayOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGateway](o, func(v NetworkInsightsAnalysisExplanationTransitGateway) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationTransitGatewayOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGateway](o, func(v NetworkInsightsAnalysisExplanationTransitGateway) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGateway](o, func(v NetworkInsightsAnalysisExplanationTransitGateway) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationTransitGatewayAttachment struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationTransitGatewayAttachment)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs) ToNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput() NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput {
	return i.ToNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs) ToNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput)
}

func (i *NetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationTransitGatewayAttachment)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) ToNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput() NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) ToNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationTransitGatewayAttachment] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationTransitGatewayAttachment]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayAttachment](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayAttachment) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayAttachment](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayAttachment) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayAttachment](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayAttachment) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationTransitGatewayRouteTable struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationTransitGatewayRouteTable)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs) ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput() NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput {
	return i.ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs) ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput)
}

func (i *NetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationTransitGatewayRouteTable)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput() NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationTransitGatewayRouteTable] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationTransitGatewayRouteTable]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTable](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTable) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTable](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTable) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTable](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTable) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute struct {
	AttachmentId    *string `pulumi:"attachmentId"`
	DestinationCidr *string `pulumi:"destinationCidr"`
	PrefixListId    *string `pulumi:"prefixListId"`
	ResourceId      *string `pulumi:"resourceId"`
	ResourceType    *string `pulumi:"resourceType"`
	RouteOrigin     *string `pulumi:"routeOrigin"`
	State           *string `pulumi:"state"`
}

type NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs struct {
	AttachmentId    pulumix.Input[*string] `pulumi:"attachmentId"`
	DestinationCidr pulumix.Input[*string] `pulumi:"destinationCidr"`
	PrefixListId    pulumix.Input[*string] `pulumi:"prefixListId"`
	ResourceId      pulumix.Input[*string] `pulumi:"resourceId"`
	ResourceType    pulumix.Input[*string] `pulumi:"resourceType"`
	RouteOrigin     pulumix.Input[*string] `pulumi:"routeOrigin"`
	State           pulumix.Input[*string] `pulumi:"state"`
}

func (NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs) ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput() NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput {
	return i.ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs) ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput)
}

func (i *NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput() NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ToNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) AttachmentId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) *string { return v.AttachmentId })
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) DestinationCidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) *string {
		return v.DestinationCidr
	})
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) PrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) *string { return v.PrefixListId })
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ResourceId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) *string { return v.ResourceId })
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ResourceType() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) *string { return v.ResourceType })
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) RouteOrigin() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) *string { return v.RouteOrigin })
}

func (o NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) State() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) *string { return v.State })
}

type NetworkInsightsAnalysisExplanationVpc struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationVpcArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpc)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationVpcArgs) ToNetworkInsightsAnalysisExplanationVpcOutput() NetworkInsightsAnalysisExplanationVpcOutput {
	return i.ToNetworkInsightsAnalysisExplanationVpcOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationVpcArgs) ToNetworkInsightsAnalysisExplanationVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationVpcOutput)
}

func (i *NetworkInsightsAnalysisExplanationVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationVpcArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationVpcOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpc)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationVpcOutput) ToNetworkInsightsAnalysisExplanationVpcOutput() NetworkInsightsAnalysisExplanationVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpcOutput) ToNetworkInsightsAnalysisExplanationVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpcOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationVpc] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpcOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpc](o, func(v NetworkInsightsAnalysisExplanationVpc) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpcOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpc](o, func(v NetworkInsightsAnalysisExplanationVpc) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationVpcOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpc](o, func(v NetworkInsightsAnalysisExplanationVpc) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationVpcEndpoint struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationVpcEndpointArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationVpcEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpcEndpoint)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationVpcEndpointArgs) ToNetworkInsightsAnalysisExplanationVpcEndpointOutput() NetworkInsightsAnalysisExplanationVpcEndpointOutput {
	return i.ToNetworkInsightsAnalysisExplanationVpcEndpointOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationVpcEndpointArgs) ToNetworkInsightsAnalysisExplanationVpcEndpointOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpcEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationVpcEndpointOutput)
}

func (i *NetworkInsightsAnalysisExplanationVpcEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationVpcEndpointArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationVpcEndpointOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationVpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpcEndpoint)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationVpcEndpointOutput) ToNetworkInsightsAnalysisExplanationVpcEndpointOutput() NetworkInsightsAnalysisExplanationVpcEndpointOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpcEndpointOutput) ToNetworkInsightsAnalysisExplanationVpcEndpointOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpcEndpointOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpcEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationVpcEndpoint] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationVpcEndpoint]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpcEndpointOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpcEndpoint](o, func(v NetworkInsightsAnalysisExplanationVpcEndpoint) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpcEndpointOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpcEndpoint](o, func(v NetworkInsightsAnalysisExplanationVpcEndpoint) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationVpcEndpointOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpcEndpoint](o, func(v NetworkInsightsAnalysisExplanationVpcEndpoint) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationVpcPeeringConnection struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpcPeeringConnection)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs) ToNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput() NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput {
	return i.ToNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs) ToNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput)
}

func (i *NetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpcPeeringConnection)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) ToNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput() NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) ToNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationVpcPeeringConnection] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationVpcPeeringConnection]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpcPeeringConnection](o, func(v NetworkInsightsAnalysisExplanationVpcPeeringConnection) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpcPeeringConnection](o, func(v NetworkInsightsAnalysisExplanationVpcPeeringConnection) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpcPeeringConnection](o, func(v NetworkInsightsAnalysisExplanationVpcPeeringConnection) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationVpnConnection struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationVpnConnectionArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationVpnConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpnConnection)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationVpnConnectionArgs) ToNetworkInsightsAnalysisExplanationVpnConnectionOutput() NetworkInsightsAnalysisExplanationVpnConnectionOutput {
	return i.ToNetworkInsightsAnalysisExplanationVpnConnectionOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationVpnConnectionArgs) ToNetworkInsightsAnalysisExplanationVpnConnectionOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpnConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationVpnConnectionOutput)
}

func (i *NetworkInsightsAnalysisExplanationVpnConnectionArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationVpnConnectionArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationVpnConnectionOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationVpnConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpnConnection)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationVpnConnectionOutput) ToNetworkInsightsAnalysisExplanationVpnConnectionOutput() NetworkInsightsAnalysisExplanationVpnConnectionOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpnConnectionOutput) ToNetworkInsightsAnalysisExplanationVpnConnectionOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpnConnectionOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpnConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationVpnConnection] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationVpnConnection]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpnConnectionOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpnConnection](o, func(v NetworkInsightsAnalysisExplanationVpnConnection) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpnConnectionOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpnConnection](o, func(v NetworkInsightsAnalysisExplanationVpnConnection) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationVpnConnectionOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpnConnection](o, func(v NetworkInsightsAnalysisExplanationVpnConnection) *string { return v.Name })
}

type NetworkInsightsAnalysisExplanationVpnGateway struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisExplanationVpnGatewayArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisExplanationVpnGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpnGateway)(nil)).Elem()
}

func (i NetworkInsightsAnalysisExplanationVpnGatewayArgs) ToNetworkInsightsAnalysisExplanationVpnGatewayOutput() NetworkInsightsAnalysisExplanationVpnGatewayOutput {
	return i.ToNetworkInsightsAnalysisExplanationVpnGatewayOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisExplanationVpnGatewayArgs) ToNetworkInsightsAnalysisExplanationVpnGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpnGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisExplanationVpnGatewayOutput)
}

func (i *NetworkInsightsAnalysisExplanationVpnGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisExplanationVpnGatewayArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisExplanationVpnGatewayOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisExplanationVpnGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisExplanationVpnGateway)(nil)).Elem()
}

func (o NetworkInsightsAnalysisExplanationVpnGatewayOutput) ToNetworkInsightsAnalysisExplanationVpnGatewayOutput() NetworkInsightsAnalysisExplanationVpnGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpnGatewayOutput) ToNetworkInsightsAnalysisExplanationVpnGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisExplanationVpnGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisExplanationVpnGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisExplanationVpnGateway] {
	return pulumix.Output[NetworkInsightsAnalysisExplanationVpnGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpnGatewayOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpnGateway](o, func(v NetworkInsightsAnalysisExplanationVpnGateway) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisExplanationVpnGatewayOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpnGateway](o, func(v NetworkInsightsAnalysisExplanationVpnGateway) *string { return v.Id })
}

func (o NetworkInsightsAnalysisExplanationVpnGatewayOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisExplanationVpnGateway](o, func(v NetworkInsightsAnalysisExplanationVpnGateway) *string { return v.Name })
}

type NetworkInsightsAnalysisForwardPathComponent struct {
	AclRules                       []NetworkInsightsAnalysisForwardPathComponentAclRule                       `pulumi:"aclRules"`
	AdditionalDetails              []NetworkInsightsAnalysisForwardPathComponentAdditionalDetail              `pulumi:"additionalDetails"`
	AttachedTos                    []NetworkInsightsAnalysisForwardPathComponentAttachedTo                    `pulumi:"attachedTos"`
	Components                     []NetworkInsightsAnalysisForwardPathComponentComponent                     `pulumi:"components"`
	DestinationVpcs                []NetworkInsightsAnalysisForwardPathComponentDestinationVpc                `pulumi:"destinationVpcs"`
	InboundHeaders                 []NetworkInsightsAnalysisForwardPathComponentInboundHeader                 `pulumi:"inboundHeaders"`
	OutboundHeaders                []NetworkInsightsAnalysisForwardPathComponentOutboundHeader                `pulumi:"outboundHeaders"`
	RouteTableRoutes               []NetworkInsightsAnalysisForwardPathComponentRouteTableRoute               `pulumi:"routeTableRoutes"`
	SecurityGroupRules             []NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule             `pulumi:"securityGroupRules"`
	SequenceNumber                 *int                                                                       `pulumi:"sequenceNumber"`
	SourceVpcs                     []NetworkInsightsAnalysisForwardPathComponentSourceVpc                     `pulumi:"sourceVpcs"`
	Subnets                        []NetworkInsightsAnalysisForwardPathComponentSubnet                        `pulumi:"subnets"`
	TransitGatewayRouteTableRoutes []NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGateways                []NetworkInsightsAnalysisForwardPathComponentTransitGateway                `pulumi:"transitGateways"`
	Vpcs                           []NetworkInsightsAnalysisForwardPathComponentVpc                           `pulumi:"vpcs"`
}

type NetworkInsightsAnalysisForwardPathComponentArgs struct {
	AclRules                       pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentAclRuleArgs]                       `pulumi:"aclRules"`
	AdditionalDetails              pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs]              `pulumi:"additionalDetails"`
	AttachedTos                    pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentAttachedToArgs]                    `pulumi:"attachedTos"`
	Components                     pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentComponentArgs]                     `pulumi:"components"`
	DestinationVpcs                pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs]                `pulumi:"destinationVpcs"`
	InboundHeaders                 pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs]                 `pulumi:"inboundHeaders"`
	OutboundHeaders                pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs]                `pulumi:"outboundHeaders"`
	RouteTableRoutes               pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs]               `pulumi:"routeTableRoutes"`
	SecurityGroupRules             pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs]             `pulumi:"securityGroupRules"`
	SequenceNumber                 pulumix.Input[*int]                                                                            `pulumi:"sequenceNumber"`
	SourceVpcs                     pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentSourceVpcArgs]                     `pulumi:"sourceVpcs"`
	Subnets                        pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentSubnetArgs]                        `pulumi:"subnets"`
	TransitGatewayRouteTableRoutes pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs] `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGateways                pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs]                `pulumi:"transitGateways"`
	Vpcs                           pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentVpcArgs]                           `pulumi:"vpcs"`
}

func (NetworkInsightsAnalysisForwardPathComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponent)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentArgs) ToNetworkInsightsAnalysisForwardPathComponentOutput() NetworkInsightsAnalysisForwardPathComponentOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentArgs) ToNetworkInsightsAnalysisForwardPathComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponent)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) ToNetworkInsightsAnalysisForwardPathComponentOutput() NetworkInsightsAnalysisForwardPathComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) ToNetworkInsightsAnalysisForwardPathComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponent] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponent]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) AclRules() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAclRule, NetworkInsightsAnalysisForwardPathComponentAclRuleOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentAclRule {
		return v.AclRules
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAclRule, NetworkInsightsAnalysisForwardPathComponentAclRuleOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) AdditionalDetails() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAdditionalDetail, NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentAdditionalDetail {
		return v.AdditionalDetails
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAdditionalDetail, NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) AttachedTos() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAttachedTo, NetworkInsightsAnalysisForwardPathComponentAttachedToOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentAttachedTo {
		return v.AttachedTos
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAttachedTo, NetworkInsightsAnalysisForwardPathComponentAttachedToOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) Components() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentComponent, NetworkInsightsAnalysisForwardPathComponentComponentOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentComponent, NetworkInsightsAnalysisForwardPathComponentComponentOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) DestinationVpcs() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentDestinationVpc, NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentDestinationVpc {
		return v.DestinationVpcs
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentDestinationVpc, NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) InboundHeaders() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentInboundHeader, NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentInboundHeader {
		return v.InboundHeaders
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentInboundHeader, NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) OutboundHeaders() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentOutboundHeader, NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentOutboundHeader {
		return v.OutboundHeaders
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentOutboundHeader, NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) RouteTableRoutes() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute, NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentRouteTableRoute {
		return v.RouteTableRoutes
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute, NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) SecurityGroupRules() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule, NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule {
		return v.SecurityGroupRules
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule, NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) SequenceNumber() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) *int { return v.SequenceNumber })
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) SourceVpcs() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentSourceVpc, NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentSourceVpc {
		return v.SourceVpcs
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentSourceVpc, NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) Subnets() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentSubnet, NetworkInsightsAnalysisForwardPathComponentSubnetOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentSubnet {
		return v.Subnets
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentSubnet, NetworkInsightsAnalysisForwardPathComponentSubnetOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) TransitGatewayRouteTableRoutes() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute, NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute {
		return v.TransitGatewayRouteTableRoutes
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute, NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) TransitGateways() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentTransitGateway, NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentTransitGateway {
		return v.TransitGateways
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentTransitGateway, NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutput) Vpcs() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentVpc, NetworkInsightsAnalysisForwardPathComponentVpcOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponent](o, func(v NetworkInsightsAnalysisForwardPathComponent) []NetworkInsightsAnalysisForwardPathComponentVpc {
		return v.Vpcs
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentVpc, NetworkInsightsAnalysisForwardPathComponentVpcOutput]{OutputState: value.OutputState}
}

type NetworkInsightsAnalysisForwardPathComponentAclRule struct {
	Cidr       *string                                                       `pulumi:"cidr"`
	Egress     *bool                                                         `pulumi:"egress"`
	PortRanges []NetworkInsightsAnalysisForwardPathComponentAclRulePortRange `pulumi:"portRanges"`
	Protocol   *string                                                       `pulumi:"protocol"`
	RuleAction *string                                                       `pulumi:"ruleAction"`
	RuleNumber *int                                                          `pulumi:"ruleNumber"`
}

type NetworkInsightsAnalysisForwardPathComponentAclRuleArgs struct {
	Cidr       pulumix.Input[*string]                                                            `pulumi:"cidr"`
	Egress     pulumix.Input[*bool]                                                              `pulumi:"egress"`
	PortRanges pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs] `pulumi:"portRanges"`
	Protocol   pulumix.Input[*string]                                                            `pulumi:"protocol"`
	RuleAction pulumix.Input[*string]                                                            `pulumi:"ruleAction"`
	RuleNumber pulumix.Input[*int]                                                               `pulumi:"ruleNumber"`
}

func (NetworkInsightsAnalysisForwardPathComponentAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAclRule)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentAclRuleArgs) ToNetworkInsightsAnalysisForwardPathComponentAclRuleOutput() NetworkInsightsAnalysisForwardPathComponentAclRuleOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentAclRuleOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentAclRuleArgs) ToNetworkInsightsAnalysisForwardPathComponentAclRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentAclRuleOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentAclRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentAclRuleArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentAclRuleOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAclRule)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) ToNetworkInsightsAnalysisForwardPathComponentAclRuleOutput() NetworkInsightsAnalysisForwardPathComponentAclRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) ToNetworkInsightsAnalysisForwardPathComponentAclRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAclRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAclRule] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAclRule]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) Cidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v NetworkInsightsAnalysisForwardPathComponentAclRule) *string { return v.Cidr })
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) Egress() pulumix.Output[*bool] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v NetworkInsightsAnalysisForwardPathComponentAclRule) *bool { return v.Egress })
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) PortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAclRulePortRange, NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v NetworkInsightsAnalysisForwardPathComponentAclRule) []NetworkInsightsAnalysisForwardPathComponentAclRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAclRulePortRange, NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v NetworkInsightsAnalysisForwardPathComponentAclRule) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) RuleAction() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v NetworkInsightsAnalysisForwardPathComponentAclRule) *string { return v.RuleAction })
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRuleOutput) RuleNumber() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v NetworkInsightsAnalysisForwardPathComponentAclRule) *int { return v.RuleNumber })
}

type NetworkInsightsAnalysisForwardPathComponentAclRulePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAclRulePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput() NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAclRulePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput() NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAclRulePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAclRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAclRulePortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentAclRulePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAclRulePortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentAclRulePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisForwardPathComponentAdditionalDetail struct {
	AdditionalDetailType *string                                                                `pulumi:"additionalDetailType"`
	Components           []NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent `pulumi:"components"`
}

type NetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs struct {
	AdditionalDetailType pulumix.Input[*string]                                                                     `pulumi:"additionalDetailType"`
	Components           pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs] `pulumi:"components"`
}

func (NetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAdditionalDetail)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs) ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput() NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs) ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAdditionalDetail)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput() NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAdditionalDetail] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAdditionalDetail]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) AdditionalDetailType() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAdditionalDetail](o, func(v NetworkInsightsAnalysisForwardPathComponentAdditionalDetail) *string {
		return v.AdditionalDetailType
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) Components() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent, NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAdditionalDetail](o, func(v NetworkInsightsAnalysisForwardPathComponentAdditionalDetail) []NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent, NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput]{OutputState: value.OutputState}
}

type NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs) ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput() NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs) ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput() NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) ToNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent](o, func(v NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent](o, func(v NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent) *string { return v.Id })
}

func (o NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent](o, func(v NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent) *string { return v.Name })
}

type NetworkInsightsAnalysisForwardPathComponentAttachedTo struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisForwardPathComponentAttachedToArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisForwardPathComponentAttachedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAttachedTo)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentAttachedToArgs) ToNetworkInsightsAnalysisForwardPathComponentAttachedToOutput() NetworkInsightsAnalysisForwardPathComponentAttachedToOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentAttachedToOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentAttachedToArgs) ToNetworkInsightsAnalysisForwardPathComponentAttachedToOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAttachedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentAttachedToOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentAttachedToArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentAttachedToArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentAttachedToOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentAttachedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentAttachedTo)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentAttachedToOutput) ToNetworkInsightsAnalysisForwardPathComponentAttachedToOutput() NetworkInsightsAnalysisForwardPathComponentAttachedToOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAttachedToOutput) ToNetworkInsightsAnalysisForwardPathComponentAttachedToOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentAttachedToOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentAttachedToOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAttachedTo] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentAttachedTo]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentAttachedToOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAttachedTo](o, func(v NetworkInsightsAnalysisForwardPathComponentAttachedTo) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentAttachedToOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAttachedTo](o, func(v NetworkInsightsAnalysisForwardPathComponentAttachedTo) *string { return v.Id })
}

func (o NetworkInsightsAnalysisForwardPathComponentAttachedToOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentAttachedTo](o, func(v NetworkInsightsAnalysisForwardPathComponentAttachedTo) *string { return v.Name })
}

type NetworkInsightsAnalysisForwardPathComponentComponent struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisForwardPathComponentComponentArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisForwardPathComponentComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentComponent)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentComponentArgs) ToNetworkInsightsAnalysisForwardPathComponentComponentOutput() NetworkInsightsAnalysisForwardPathComponentComponentOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentComponentOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentComponentArgs) ToNetworkInsightsAnalysisForwardPathComponentComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentComponentOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentComponentArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentComponentOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentComponent)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentComponentOutput) ToNetworkInsightsAnalysisForwardPathComponentComponentOutput() NetworkInsightsAnalysisForwardPathComponentComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentComponentOutput) ToNetworkInsightsAnalysisForwardPathComponentComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentComponentOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentComponent] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentComponentOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentComponent](o, func(v NetworkInsightsAnalysisForwardPathComponentComponent) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentComponentOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentComponent](o, func(v NetworkInsightsAnalysisForwardPathComponentComponent) *string { return v.Id })
}

func (o NetworkInsightsAnalysisForwardPathComponentComponentOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentComponent](o, func(v NetworkInsightsAnalysisForwardPathComponentComponent) *string { return v.Name })
}

type NetworkInsightsAnalysisForwardPathComponentDestinationVpc struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentDestinationVpc)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs) ToNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput() NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs) ToNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentDestinationVpc)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) ToNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput() NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) ToNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentDestinationVpc] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentDestinationVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentDestinationVpc](o, func(v NetworkInsightsAnalysisForwardPathComponentDestinationVpc) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentDestinationVpc](o, func(v NetworkInsightsAnalysisForwardPathComponentDestinationVpc) *string { return v.Id })
}

func (o NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentDestinationVpc](o, func(v NetworkInsightsAnalysisForwardPathComponentDestinationVpc) *string { return v.Name })
}

type NetworkInsightsAnalysisForwardPathComponentInboundHeader struct {
	DestinationAddresses  []string                                                                       `pulumi:"destinationAddresses"`
	DestinationPortRanges []NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange `pulumi:"destinationPortRanges"`
	Protocol              *string                                                                        `pulumi:"protocol"`
	SourceAddresses       []string                                                                       `pulumi:"sourceAddresses"`
	SourcePortRanges      []NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange      `pulumi:"sourcePortRanges"`
}

type NetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs struct {
	DestinationAddresses  pulumix.Input[[]string]                                                                            `pulumi:"destinationAddresses"`
	DestinationPortRanges pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs] `pulumi:"destinationPortRanges"`
	Protocol              pulumix.Input[*string]                                                                             `pulumi:"protocol"`
	SourceAddresses       pulumix.Input[[]string]                                                                            `pulumi:"sourceAddresses"`
	SourcePortRanges      pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs]      `pulumi:"sourcePortRanges"`
}

func (NetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentInboundHeader)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput() NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentInboundHeader)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput() NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentInboundHeader] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentInboundHeader]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) DestinationAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentInboundHeader) []string {
		return v.DestinationAddresses
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) DestinationPortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange, NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentInboundHeader) []NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange {
		return v.DestinationPortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange, NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentInboundHeader) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) SourceAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentInboundHeader) []string { return v.SourceAddresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) SourcePortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange, NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentInboundHeader) []NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange {
		return v.SourcePortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange, NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput]{OutputState: value.OutputState}
}

type NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput() NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput() NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange) *int {
		return v.From
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange) *int { return v.To })
}

type NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput() NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput() NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisForwardPathComponentOutboundHeader struct {
	DestinationAddresses  []string                                                                        `pulumi:"destinationAddresses"`
	DestinationPortRanges []NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange `pulumi:"destinationPortRanges"`
	Protocol              *string                                                                         `pulumi:"protocol"`
	SourceAddresses       []string                                                                        `pulumi:"sourceAddresses"`
	SourcePortRanges      []NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange      `pulumi:"sourcePortRanges"`
}

type NetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs struct {
	DestinationAddresses  pulumix.Input[[]string]                                                                             `pulumi:"destinationAddresses"`
	DestinationPortRanges pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs] `pulumi:"destinationPortRanges"`
	Protocol              pulumix.Input[*string]                                                                              `pulumi:"protocol"`
	SourceAddresses       pulumix.Input[[]string]                                                                             `pulumi:"sourceAddresses"`
	SourcePortRanges      pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs]      `pulumi:"sourcePortRanges"`
}

func (NetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentOutboundHeader)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput() NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentOutboundHeader)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput() NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentOutboundHeader] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentOutboundHeader]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) DestinationAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentOutboundHeader) []string {
		return v.DestinationAddresses
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) DestinationPortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange, NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentOutboundHeader) []NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange {
		return v.DestinationPortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange, NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentOutboundHeader) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) SourceAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentOutboundHeader) []string { return v.SourceAddresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) SourcePortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange, NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisForwardPathComponentOutboundHeader) []NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange {
		return v.SourcePortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange, NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput]{OutputState: value.OutputState}
}

type NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput() NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput() NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange) *int {
		return v.From
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange) *int {
		return v.To
	})
}

type NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput() NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput() NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisForwardPathComponentRouteTableRoute struct {
	DestinationCidr             *string `pulumi:"destinationCidr"`
	DestinationPrefixListId     *string `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId *string `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   *string `pulumi:"gatewayId"`
	InstanceId                  *string `pulumi:"instanceId"`
	NatGatewayId                *string `pulumi:"natGatewayId"`
	NetworkInterfaceId          *string `pulumi:"networkInterfaceId"`
	Origin                      *string `pulumi:"origin"`
	TransitGatewayId            *string `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      *string `pulumi:"vpcPeeringConnectionId"`
}

type NetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs struct {
	DestinationCidr             pulumix.Input[*string] `pulumi:"destinationCidr"`
	DestinationPrefixListId     pulumix.Input[*string] `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId pulumix.Input[*string] `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   pulumix.Input[*string] `pulumi:"gatewayId"`
	InstanceId                  pulumix.Input[*string] `pulumi:"instanceId"`
	NatGatewayId                pulumix.Input[*string] `pulumi:"natGatewayId"`
	NetworkInterfaceId          pulumix.Input[*string] `pulumi:"networkInterfaceId"`
	Origin                      pulumix.Input[*string] `pulumi:"origin"`
	TransitGatewayId            pulumix.Input[*string] `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      pulumix.Input[*string] `pulumi:"vpcPeeringConnectionId"`
}

func (NetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentRouteTableRoute)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs) ToNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput() NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs) ToNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentRouteTableRoute)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) ToNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput() NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) ToNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) DestinationCidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string { return v.DestinationCidr })
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) DestinationPrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string {
		return v.DestinationPrefixListId
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) EgressOnlyInternetGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string {
		return v.EgressOnlyInternetGatewayId
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) GatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string { return v.GatewayId })
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) InstanceId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string { return v.InstanceId })
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) NatGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string { return v.NatGatewayId })
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) NetworkInterfaceId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string {
		return v.NetworkInterfaceId
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) Origin() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string { return v.Origin })
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) TransitGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string { return v.TransitGatewayId })
}

func (o NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) VpcPeeringConnectionId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentRouteTableRoute) *string {
		return v.VpcPeeringConnectionId
	})
}

type NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule struct {
	Cidr            *string                                                                 `pulumi:"cidr"`
	Direction       *string                                                                 `pulumi:"direction"`
	PortRanges      []NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange `pulumi:"portRanges"`
	PrefixListId    *string                                                                 `pulumi:"prefixListId"`
	Protocol        *string                                                                 `pulumi:"protocol"`
	SecurityGroupId *string                                                                 `pulumi:"securityGroupId"`
}

type NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs struct {
	Cidr            pulumix.Input[*string]                                                                      `pulumi:"cidr"`
	Direction       pulumix.Input[*string]                                                                      `pulumi:"direction"`
	PortRanges      pulumix.Input[[]*NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs] `pulumi:"portRanges"`
	PrefixListId    pulumix.Input[*string]                                                                      `pulumi:"prefixListId"`
	Protocol        pulumix.Input[*string]                                                                      `pulumi:"protocol"`
	SecurityGroupId pulumix.Input[*string]                                                                      `pulumi:"securityGroupId"`
}

func (NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs) ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput() NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs) ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput() NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) Cidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) *string { return v.Cidr })
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) Direction() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) *string { return v.Direction })
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) PortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange, NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) []NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange, NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) PrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) *string { return v.PrefixListId })
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) SecurityGroupId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) *string { return v.SecurityGroupId })
}

type NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput() NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs) ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput() NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) ToNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange](o, func(v NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisForwardPathComponentSourceVpc struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisForwardPathComponentSourceVpcArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisForwardPathComponentSourceVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentSourceVpc)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentSourceVpcArgs) ToNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput() NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentSourceVpcOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentSourceVpcArgs) ToNetworkInsightsAnalysisForwardPathComponentSourceVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentSourceVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentSourceVpcArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentSourceVpc)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) ToNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput() NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) ToNetworkInsightsAnalysisForwardPathComponentSourceVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentSourceVpc] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentSourceVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSourceVpc](o, func(v NetworkInsightsAnalysisForwardPathComponentSourceVpc) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSourceVpc](o, func(v NetworkInsightsAnalysisForwardPathComponentSourceVpc) *string { return v.Id })
}

func (o NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSourceVpc](o, func(v NetworkInsightsAnalysisForwardPathComponentSourceVpc) *string { return v.Name })
}

type NetworkInsightsAnalysisForwardPathComponentSubnet struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisForwardPathComponentSubnetArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisForwardPathComponentSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentSubnet)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentSubnetArgs) ToNetworkInsightsAnalysisForwardPathComponentSubnetOutput() NetworkInsightsAnalysisForwardPathComponentSubnetOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentSubnetOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentSubnetArgs) ToNetworkInsightsAnalysisForwardPathComponentSubnetOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentSubnetOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentSubnetArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentSubnetArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentSubnetOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentSubnet)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentSubnetOutput) ToNetworkInsightsAnalysisForwardPathComponentSubnetOutput() NetworkInsightsAnalysisForwardPathComponentSubnetOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentSubnetOutput) ToNetworkInsightsAnalysisForwardPathComponentSubnetOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentSubnetOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentSubnetOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentSubnet] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentSubnet]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentSubnetOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSubnet](o, func(v NetworkInsightsAnalysisForwardPathComponentSubnet) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentSubnetOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSubnet](o, func(v NetworkInsightsAnalysisForwardPathComponentSubnet) *string { return v.Id })
}

func (o NetworkInsightsAnalysisForwardPathComponentSubnetOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentSubnet](o, func(v NetworkInsightsAnalysisForwardPathComponentSubnet) *string { return v.Name })
}

type NetworkInsightsAnalysisForwardPathComponentTransitGateway struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentTransitGateway)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs) ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput() NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs) ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentTransitGateway)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput() NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentTransitGateway] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentTransitGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGateway](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGateway) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGateway](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGateway) *string { return v.Id })
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGateway](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGateway) *string { return v.Name })
}

type NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute struct {
	AttachmentId    *string `pulumi:"attachmentId"`
	DestinationCidr *string `pulumi:"destinationCidr"`
	PrefixListId    *string `pulumi:"prefixListId"`
	ResourceId      *string `pulumi:"resourceId"`
	ResourceType    *string `pulumi:"resourceType"`
	RouteOrigin     *string `pulumi:"routeOrigin"`
	State           *string `pulumi:"state"`
}

type NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs struct {
	AttachmentId    pulumix.Input[*string] `pulumi:"attachmentId"`
	DestinationCidr pulumix.Input[*string] `pulumi:"destinationCidr"`
	PrefixListId    pulumix.Input[*string] `pulumi:"prefixListId"`
	ResourceId      pulumix.Input[*string] `pulumi:"resourceId"`
	ResourceType    pulumix.Input[*string] `pulumi:"resourceType"`
	RouteOrigin     pulumix.Input[*string] `pulumi:"routeOrigin"`
	State           pulumix.Input[*string] `pulumi:"state"`
}

func (NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs) ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput() NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs) ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput() NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ToNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) AttachmentId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) *string {
		return v.AttachmentId
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) DestinationCidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) *string {
		return v.DestinationCidr
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) PrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) *string {
		return v.PrefixListId
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ResourceId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) *string {
		return v.ResourceId
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ResourceType() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) *string {
		return v.ResourceType
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) RouteOrigin() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) *string {
		return v.RouteOrigin
	})
}

func (o NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) State() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) *string {
		return v.State
	})
}

type NetworkInsightsAnalysisForwardPathComponentVpc struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisForwardPathComponentVpcArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisForwardPathComponentVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentVpc)(nil)).Elem()
}

func (i NetworkInsightsAnalysisForwardPathComponentVpcArgs) ToNetworkInsightsAnalysisForwardPathComponentVpcOutput() NetworkInsightsAnalysisForwardPathComponentVpcOutput {
	return i.ToNetworkInsightsAnalysisForwardPathComponentVpcOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisForwardPathComponentVpcArgs) ToNetworkInsightsAnalysisForwardPathComponentVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisForwardPathComponentVpcOutput)
}

func (i *NetworkInsightsAnalysisForwardPathComponentVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisForwardPathComponentVpcArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisForwardPathComponentVpcOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisForwardPathComponentVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisForwardPathComponentVpc)(nil)).Elem()
}

func (o NetworkInsightsAnalysisForwardPathComponentVpcOutput) ToNetworkInsightsAnalysisForwardPathComponentVpcOutput() NetworkInsightsAnalysisForwardPathComponentVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentVpcOutput) ToNetworkInsightsAnalysisForwardPathComponentVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisForwardPathComponentVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisForwardPathComponentVpcOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisForwardPathComponentVpc] {
	return pulumix.Output[NetworkInsightsAnalysisForwardPathComponentVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentVpcOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentVpc](o, func(v NetworkInsightsAnalysisForwardPathComponentVpc) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisForwardPathComponentVpcOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentVpc](o, func(v NetworkInsightsAnalysisForwardPathComponentVpc) *string { return v.Id })
}

func (o NetworkInsightsAnalysisForwardPathComponentVpcOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisForwardPathComponentVpc](o, func(v NetworkInsightsAnalysisForwardPathComponentVpc) *string { return v.Name })
}

type NetworkInsightsAnalysisReturnPathComponent struct {
	AclRules                       []NetworkInsightsAnalysisReturnPathComponentAclRule                       `pulumi:"aclRules"`
	AdditionalDetails              []NetworkInsightsAnalysisReturnPathComponentAdditionalDetail              `pulumi:"additionalDetails"`
	AttachedTos                    []NetworkInsightsAnalysisReturnPathComponentAttachedTo                    `pulumi:"attachedTos"`
	Components                     []NetworkInsightsAnalysisReturnPathComponentComponent                     `pulumi:"components"`
	DestinationVpcs                []NetworkInsightsAnalysisReturnPathComponentDestinationVpc                `pulumi:"destinationVpcs"`
	InboundHeaders                 []NetworkInsightsAnalysisReturnPathComponentInboundHeader                 `pulumi:"inboundHeaders"`
	OutboundHeaders                []NetworkInsightsAnalysisReturnPathComponentOutboundHeader                `pulumi:"outboundHeaders"`
	RouteTableRoutes               []NetworkInsightsAnalysisReturnPathComponentRouteTableRoute               `pulumi:"routeTableRoutes"`
	SecurityGroupRules             []NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule             `pulumi:"securityGroupRules"`
	SequenceNumber                 *int                                                                      `pulumi:"sequenceNumber"`
	SourceVpcs                     []NetworkInsightsAnalysisReturnPathComponentSourceVpc                     `pulumi:"sourceVpcs"`
	Subnets                        []NetworkInsightsAnalysisReturnPathComponentSubnet                        `pulumi:"subnets"`
	TransitGatewayRouteTableRoutes []NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGateways                []NetworkInsightsAnalysisReturnPathComponentTransitGateway                `pulumi:"transitGateways"`
	Vpcs                           []NetworkInsightsAnalysisReturnPathComponentVpc                           `pulumi:"vpcs"`
}

type NetworkInsightsAnalysisReturnPathComponentArgs struct {
	AclRules                       pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentAclRuleArgs]                       `pulumi:"aclRules"`
	AdditionalDetails              pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs]              `pulumi:"additionalDetails"`
	AttachedTos                    pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentAttachedToArgs]                    `pulumi:"attachedTos"`
	Components                     pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentComponentArgs]                     `pulumi:"components"`
	DestinationVpcs                pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs]                `pulumi:"destinationVpcs"`
	InboundHeaders                 pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs]                 `pulumi:"inboundHeaders"`
	OutboundHeaders                pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs]                `pulumi:"outboundHeaders"`
	RouteTableRoutes               pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs]               `pulumi:"routeTableRoutes"`
	SecurityGroupRules             pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs]             `pulumi:"securityGroupRules"`
	SequenceNumber                 pulumix.Input[*int]                                                                           `pulumi:"sequenceNumber"`
	SourceVpcs                     pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentSourceVpcArgs]                     `pulumi:"sourceVpcs"`
	Subnets                        pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentSubnetArgs]                        `pulumi:"subnets"`
	TransitGatewayRouteTableRoutes pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs] `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGateways                pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs]                `pulumi:"transitGateways"`
	Vpcs                           pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentVpcArgs]                           `pulumi:"vpcs"`
}

func (NetworkInsightsAnalysisReturnPathComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponent)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentArgs) ToNetworkInsightsAnalysisReturnPathComponentOutput() NetworkInsightsAnalysisReturnPathComponentOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentArgs) ToNetworkInsightsAnalysisReturnPathComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponent)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) ToNetworkInsightsAnalysisReturnPathComponentOutput() NetworkInsightsAnalysisReturnPathComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) ToNetworkInsightsAnalysisReturnPathComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponent] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponent]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) AclRules() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAclRule, NetworkInsightsAnalysisReturnPathComponentAclRuleOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentAclRule {
		return v.AclRules
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAclRule, NetworkInsightsAnalysisReturnPathComponentAclRuleOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) AdditionalDetails() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAdditionalDetail, NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentAdditionalDetail {
		return v.AdditionalDetails
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAdditionalDetail, NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) AttachedTos() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAttachedTo, NetworkInsightsAnalysisReturnPathComponentAttachedToOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentAttachedTo {
		return v.AttachedTos
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAttachedTo, NetworkInsightsAnalysisReturnPathComponentAttachedToOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) Components() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentComponent, NetworkInsightsAnalysisReturnPathComponentComponentOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentComponent, NetworkInsightsAnalysisReturnPathComponentComponentOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) DestinationVpcs() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentDestinationVpc, NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentDestinationVpc {
		return v.DestinationVpcs
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentDestinationVpc, NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) InboundHeaders() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentInboundHeader, NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentInboundHeader {
		return v.InboundHeaders
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentInboundHeader, NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) OutboundHeaders() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentOutboundHeader, NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentOutboundHeader {
		return v.OutboundHeaders
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentOutboundHeader, NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) RouteTableRoutes() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute, NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentRouteTableRoute {
		return v.RouteTableRoutes
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute, NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) SecurityGroupRules() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule, NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule {
		return v.SecurityGroupRules
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule, NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) SequenceNumber() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) *int { return v.SequenceNumber })
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) SourceVpcs() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentSourceVpc, NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentSourceVpc {
		return v.SourceVpcs
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentSourceVpc, NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) Subnets() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentSubnet, NetworkInsightsAnalysisReturnPathComponentSubnetOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentSubnet {
		return v.Subnets
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentSubnet, NetworkInsightsAnalysisReturnPathComponentSubnetOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) TransitGatewayRouteTableRoutes() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute, NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute {
		return v.TransitGatewayRouteTableRoutes
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute, NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) TransitGateways() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentTransitGateway, NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentTransitGateway {
		return v.TransitGateways
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentTransitGateway, NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutput) Vpcs() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentVpc, NetworkInsightsAnalysisReturnPathComponentVpcOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponent](o, func(v NetworkInsightsAnalysisReturnPathComponent) []NetworkInsightsAnalysisReturnPathComponentVpc {
		return v.Vpcs
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentVpc, NetworkInsightsAnalysisReturnPathComponentVpcOutput]{OutputState: value.OutputState}
}

type NetworkInsightsAnalysisReturnPathComponentAclRule struct {
	Cidr       *string                                                      `pulumi:"cidr"`
	Egress     *bool                                                        `pulumi:"egress"`
	PortRanges []NetworkInsightsAnalysisReturnPathComponentAclRulePortRange `pulumi:"portRanges"`
	Protocol   *string                                                      `pulumi:"protocol"`
	RuleAction *string                                                      `pulumi:"ruleAction"`
	RuleNumber *int                                                         `pulumi:"ruleNumber"`
}

type NetworkInsightsAnalysisReturnPathComponentAclRuleArgs struct {
	Cidr       pulumix.Input[*string]                                                           `pulumi:"cidr"`
	Egress     pulumix.Input[*bool]                                                             `pulumi:"egress"`
	PortRanges pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs] `pulumi:"portRanges"`
	Protocol   pulumix.Input[*string]                                                           `pulumi:"protocol"`
	RuleAction pulumix.Input[*string]                                                           `pulumi:"ruleAction"`
	RuleNumber pulumix.Input[*int]                                                              `pulumi:"ruleNumber"`
}

func (NetworkInsightsAnalysisReturnPathComponentAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAclRule)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentAclRuleArgs) ToNetworkInsightsAnalysisReturnPathComponentAclRuleOutput() NetworkInsightsAnalysisReturnPathComponentAclRuleOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentAclRuleOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentAclRuleArgs) ToNetworkInsightsAnalysisReturnPathComponentAclRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentAclRuleOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentAclRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentAclRuleArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentAclRuleOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAclRule)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) ToNetworkInsightsAnalysisReturnPathComponentAclRuleOutput() NetworkInsightsAnalysisReturnPathComponentAclRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) ToNetworkInsightsAnalysisReturnPathComponentAclRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAclRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAclRule] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAclRule]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) Cidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v NetworkInsightsAnalysisReturnPathComponentAclRule) *string { return v.Cidr })
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) Egress() pulumix.Output[*bool] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v NetworkInsightsAnalysisReturnPathComponentAclRule) *bool { return v.Egress })
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) PortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAclRulePortRange, NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v NetworkInsightsAnalysisReturnPathComponentAclRule) []NetworkInsightsAnalysisReturnPathComponentAclRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAclRulePortRange, NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v NetworkInsightsAnalysisReturnPathComponentAclRule) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) RuleAction() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v NetworkInsightsAnalysisReturnPathComponentAclRule) *string { return v.RuleAction })
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRuleOutput) RuleNumber() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v NetworkInsightsAnalysisReturnPathComponentAclRule) *int { return v.RuleNumber })
}

type NetworkInsightsAnalysisReturnPathComponentAclRulePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAclRulePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput() NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAclRulePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput() NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAclRulePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAclRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAclRulePortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentAclRulePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAclRulePortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentAclRulePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisReturnPathComponentAdditionalDetail struct {
	AdditionalDetailType *string                                                               `pulumi:"additionalDetailType"`
	Components           []NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent `pulumi:"components"`
}

type NetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs struct {
	AdditionalDetailType pulumix.Input[*string]                                                                    `pulumi:"additionalDetailType"`
	Components           pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs] `pulumi:"components"`
}

func (NetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAdditionalDetail)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs) ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput() NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs) ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAdditionalDetail)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput() NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAdditionalDetail] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAdditionalDetail]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) AdditionalDetailType() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAdditionalDetail](o, func(v NetworkInsightsAnalysisReturnPathComponentAdditionalDetail) *string {
		return v.AdditionalDetailType
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) Components() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent, NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAdditionalDetail](o, func(v NetworkInsightsAnalysisReturnPathComponentAdditionalDetail) []NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent, NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput]{OutputState: value.OutputState}
}

type NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs) ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput() NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs) ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput() NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) ToNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent](o, func(v NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent](o, func(v NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent) *string { return v.Id })
}

func (o NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent](o, func(v NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent) *string { return v.Name })
}

type NetworkInsightsAnalysisReturnPathComponentAttachedTo struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisReturnPathComponentAttachedToArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisReturnPathComponentAttachedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAttachedTo)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentAttachedToArgs) ToNetworkInsightsAnalysisReturnPathComponentAttachedToOutput() NetworkInsightsAnalysisReturnPathComponentAttachedToOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentAttachedToOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentAttachedToArgs) ToNetworkInsightsAnalysisReturnPathComponentAttachedToOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAttachedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentAttachedToOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentAttachedToArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentAttachedToArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentAttachedToOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentAttachedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentAttachedTo)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentAttachedToOutput) ToNetworkInsightsAnalysisReturnPathComponentAttachedToOutput() NetworkInsightsAnalysisReturnPathComponentAttachedToOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAttachedToOutput) ToNetworkInsightsAnalysisReturnPathComponentAttachedToOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentAttachedToOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentAttachedToOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAttachedTo] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentAttachedTo]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentAttachedToOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAttachedTo](o, func(v NetworkInsightsAnalysisReturnPathComponentAttachedTo) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentAttachedToOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAttachedTo](o, func(v NetworkInsightsAnalysisReturnPathComponentAttachedTo) *string { return v.Id })
}

func (o NetworkInsightsAnalysisReturnPathComponentAttachedToOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentAttachedTo](o, func(v NetworkInsightsAnalysisReturnPathComponentAttachedTo) *string { return v.Name })
}

type NetworkInsightsAnalysisReturnPathComponentComponent struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisReturnPathComponentComponentArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisReturnPathComponentComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentComponent)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentComponentArgs) ToNetworkInsightsAnalysisReturnPathComponentComponentOutput() NetworkInsightsAnalysisReturnPathComponentComponentOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentComponentOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentComponentArgs) ToNetworkInsightsAnalysisReturnPathComponentComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentComponentOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentComponentArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentComponentOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentComponent)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentComponentOutput) ToNetworkInsightsAnalysisReturnPathComponentComponentOutput() NetworkInsightsAnalysisReturnPathComponentComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentComponentOutput) ToNetworkInsightsAnalysisReturnPathComponentComponentOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentComponentOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentComponentOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentComponent] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentComponentOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentComponent](o, func(v NetworkInsightsAnalysisReturnPathComponentComponent) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentComponentOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentComponent](o, func(v NetworkInsightsAnalysisReturnPathComponentComponent) *string { return v.Id })
}

func (o NetworkInsightsAnalysisReturnPathComponentComponentOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentComponent](o, func(v NetworkInsightsAnalysisReturnPathComponentComponent) *string { return v.Name })
}

type NetworkInsightsAnalysisReturnPathComponentDestinationVpc struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentDestinationVpc)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs) ToNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput() NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs) ToNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentDestinationVpc)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) ToNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput() NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) ToNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentDestinationVpc] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentDestinationVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentDestinationVpc](o, func(v NetworkInsightsAnalysisReturnPathComponentDestinationVpc) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentDestinationVpc](o, func(v NetworkInsightsAnalysisReturnPathComponentDestinationVpc) *string { return v.Id })
}

func (o NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentDestinationVpc](o, func(v NetworkInsightsAnalysisReturnPathComponentDestinationVpc) *string { return v.Name })
}

type NetworkInsightsAnalysisReturnPathComponentInboundHeader struct {
	DestinationAddresses  []string                                                                      `pulumi:"destinationAddresses"`
	DestinationPortRanges []NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange `pulumi:"destinationPortRanges"`
	Protocol              *string                                                                       `pulumi:"protocol"`
	SourceAddresses       []string                                                                      `pulumi:"sourceAddresses"`
	SourcePortRanges      []NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange      `pulumi:"sourcePortRanges"`
}

type NetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs struct {
	DestinationAddresses  pulumix.Input[[]string]                                                                           `pulumi:"destinationAddresses"`
	DestinationPortRanges pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs] `pulumi:"destinationPortRanges"`
	Protocol              pulumix.Input[*string]                                                                            `pulumi:"protocol"`
	SourceAddresses       pulumix.Input[[]string]                                                                           `pulumi:"sourceAddresses"`
	SourcePortRanges      pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs]      `pulumi:"sourcePortRanges"`
}

func (NetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentInboundHeader)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput() NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentInboundHeader)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput() NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentInboundHeader] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentInboundHeader]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) DestinationAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentInboundHeader) []string {
		return v.DestinationAddresses
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) DestinationPortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange, NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentInboundHeader) []NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange {
		return v.DestinationPortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange, NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentInboundHeader) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) SourceAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentInboundHeader) []string { return v.SourceAddresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) SourcePortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange, NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentInboundHeader) []NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange {
		return v.SourcePortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange, NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput]{OutputState: value.OutputState}
}

type NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput() NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput() NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange) *int {
		return v.From
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange) *int { return v.To })
}

type NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput() NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput() NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisReturnPathComponentOutboundHeader struct {
	DestinationAddresses  []string                                                                       `pulumi:"destinationAddresses"`
	DestinationPortRanges []NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange `pulumi:"destinationPortRanges"`
	Protocol              *string                                                                        `pulumi:"protocol"`
	SourceAddresses       []string                                                                       `pulumi:"sourceAddresses"`
	SourcePortRanges      []NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange      `pulumi:"sourcePortRanges"`
}

type NetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs struct {
	DestinationAddresses  pulumix.Input[[]string]                                                                            `pulumi:"destinationAddresses"`
	DestinationPortRanges pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs] `pulumi:"destinationPortRanges"`
	Protocol              pulumix.Input[*string]                                                                             `pulumi:"protocol"`
	SourceAddresses       pulumix.Input[[]string]                                                                            `pulumi:"sourceAddresses"`
	SourcePortRanges      pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs]      `pulumi:"sourcePortRanges"`
}

func (NetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentOutboundHeader)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput() NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentOutboundHeader)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput() NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentOutboundHeader] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentOutboundHeader]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) DestinationAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentOutboundHeader) []string {
		return v.DestinationAddresses
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) DestinationPortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange, NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentOutboundHeader) []NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange {
		return v.DestinationPortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange, NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentOutboundHeader) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) SourceAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentOutboundHeader) []string { return v.SourceAddresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) SourcePortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange, NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v NetworkInsightsAnalysisReturnPathComponentOutboundHeader) []NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange {
		return v.SourcePortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange, NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput]{OutputState: value.OutputState}
}

type NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput() NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput() NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange) *int {
		return v.From
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange) *int { return v.To })
}

type NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput() NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput() NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisReturnPathComponentRouteTableRoute struct {
	DestinationCidr             *string `pulumi:"destinationCidr"`
	DestinationPrefixListId     *string `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId *string `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   *string `pulumi:"gatewayId"`
	InstanceId                  *string `pulumi:"instanceId"`
	NatGatewayId                *string `pulumi:"natGatewayId"`
	NetworkInterfaceId          *string `pulumi:"networkInterfaceId"`
	Origin                      *string `pulumi:"origin"`
	TransitGatewayId            *string `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      *string `pulumi:"vpcPeeringConnectionId"`
}

type NetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs struct {
	DestinationCidr             pulumix.Input[*string] `pulumi:"destinationCidr"`
	DestinationPrefixListId     pulumix.Input[*string] `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId pulumix.Input[*string] `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   pulumix.Input[*string] `pulumi:"gatewayId"`
	InstanceId                  pulumix.Input[*string] `pulumi:"instanceId"`
	NatGatewayId                pulumix.Input[*string] `pulumi:"natGatewayId"`
	NetworkInterfaceId          pulumix.Input[*string] `pulumi:"networkInterfaceId"`
	Origin                      pulumix.Input[*string] `pulumi:"origin"`
	TransitGatewayId            pulumix.Input[*string] `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      pulumix.Input[*string] `pulumi:"vpcPeeringConnectionId"`
}

func (NetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentRouteTableRoute)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs) ToNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput() NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs) ToNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentRouteTableRoute)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) ToNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput() NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) ToNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) DestinationCidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string { return v.DestinationCidr })
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) DestinationPrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string {
		return v.DestinationPrefixListId
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) EgressOnlyInternetGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string {
		return v.EgressOnlyInternetGatewayId
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) GatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string { return v.GatewayId })
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) InstanceId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string { return v.InstanceId })
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) NatGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string { return v.NatGatewayId })
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) NetworkInterfaceId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string { return v.NetworkInterfaceId })
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) Origin() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string { return v.Origin })
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) TransitGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string { return v.TransitGatewayId })
}

func (o NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) VpcPeeringConnectionId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentRouteTableRoute) *string {
		return v.VpcPeeringConnectionId
	})
}

type NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule struct {
	Cidr            *string                                                                `pulumi:"cidr"`
	Direction       *string                                                                `pulumi:"direction"`
	PortRanges      []NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange `pulumi:"portRanges"`
	PrefixListId    *string                                                                `pulumi:"prefixListId"`
	Protocol        *string                                                                `pulumi:"protocol"`
	SecurityGroupId *string                                                                `pulumi:"securityGroupId"`
}

type NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs struct {
	Cidr            pulumix.Input[*string]                                                                     `pulumi:"cidr"`
	Direction       pulumix.Input[*string]                                                                     `pulumi:"direction"`
	PortRanges      pulumix.Input[[]*NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs] `pulumi:"portRanges"`
	PrefixListId    pulumix.Input[*string]                                                                     `pulumi:"prefixListId"`
	Protocol        pulumix.Input[*string]                                                                     `pulumi:"protocol"`
	SecurityGroupId pulumix.Input[*string]                                                                     `pulumi:"securityGroupId"`
}

func (NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs) ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput() NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs) ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput() NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) Cidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) *string { return v.Cidr })
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) Direction() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) *string { return v.Direction })
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) PortRanges() pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange, NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput] {
	value := pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) []NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange, NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) PrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) *string { return v.PrefixListId })
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) Protocol() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) *string { return v.Protocol })
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) SecurityGroupId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) *string { return v.SecurityGroupId })
}

type NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange struct {
	From *int `pulumi:"from"`
	To   *int `pulumi:"to"`
}

type NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs struct {
	From pulumix.Input[*int] `pulumi:"from"`
	To   pulumix.Input[*int] `pulumi:"to"`
}

func (NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput() NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs) ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput() NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) ToNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) From() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange) *int { return v.From })
}

func (o NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) To() pulumix.Output[*int] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange](o, func(v NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange) *int { return v.To })
}

type NetworkInsightsAnalysisReturnPathComponentSourceVpc struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisReturnPathComponentSourceVpcArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisReturnPathComponentSourceVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentSourceVpc)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentSourceVpcArgs) ToNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput() NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentSourceVpcOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentSourceVpcArgs) ToNetworkInsightsAnalysisReturnPathComponentSourceVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentSourceVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentSourceVpcArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentSourceVpc)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) ToNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput() NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) ToNetworkInsightsAnalysisReturnPathComponentSourceVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentSourceVpc] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentSourceVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSourceVpc](o, func(v NetworkInsightsAnalysisReturnPathComponentSourceVpc) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSourceVpc](o, func(v NetworkInsightsAnalysisReturnPathComponentSourceVpc) *string { return v.Id })
}

func (o NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSourceVpc](o, func(v NetworkInsightsAnalysisReturnPathComponentSourceVpc) *string { return v.Name })
}

type NetworkInsightsAnalysisReturnPathComponentSubnet struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisReturnPathComponentSubnetArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisReturnPathComponentSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentSubnet)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentSubnetArgs) ToNetworkInsightsAnalysisReturnPathComponentSubnetOutput() NetworkInsightsAnalysisReturnPathComponentSubnetOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentSubnetOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentSubnetArgs) ToNetworkInsightsAnalysisReturnPathComponentSubnetOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentSubnetOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentSubnetArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentSubnetArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentSubnetOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentSubnet)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentSubnetOutput) ToNetworkInsightsAnalysisReturnPathComponentSubnetOutput() NetworkInsightsAnalysisReturnPathComponentSubnetOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentSubnetOutput) ToNetworkInsightsAnalysisReturnPathComponentSubnetOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentSubnetOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentSubnetOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentSubnet] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentSubnet]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentSubnetOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSubnet](o, func(v NetworkInsightsAnalysisReturnPathComponentSubnet) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentSubnetOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSubnet](o, func(v NetworkInsightsAnalysisReturnPathComponentSubnet) *string { return v.Id })
}

func (o NetworkInsightsAnalysisReturnPathComponentSubnetOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentSubnet](o, func(v NetworkInsightsAnalysisReturnPathComponentSubnet) *string { return v.Name })
}

type NetworkInsightsAnalysisReturnPathComponentTransitGateway struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentTransitGateway)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs) ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput() NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs) ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentTransitGateway)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput() NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentTransitGateway] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentTransitGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGateway](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGateway) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGateway](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGateway) *string { return v.Id })
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGateway](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGateway) *string { return v.Name })
}

type NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute struct {
	AttachmentId    *string `pulumi:"attachmentId"`
	DestinationCidr *string `pulumi:"destinationCidr"`
	PrefixListId    *string `pulumi:"prefixListId"`
	ResourceId      *string `pulumi:"resourceId"`
	ResourceType    *string `pulumi:"resourceType"`
	RouteOrigin     *string `pulumi:"routeOrigin"`
	State           *string `pulumi:"state"`
}

type NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs struct {
	AttachmentId    pulumix.Input[*string] `pulumi:"attachmentId"`
	DestinationCidr pulumix.Input[*string] `pulumi:"destinationCidr"`
	PrefixListId    pulumix.Input[*string] `pulumi:"prefixListId"`
	ResourceId      pulumix.Input[*string] `pulumi:"resourceId"`
	ResourceType    pulumix.Input[*string] `pulumi:"resourceType"`
	RouteOrigin     pulumix.Input[*string] `pulumi:"routeOrigin"`
	State           pulumix.Input[*string] `pulumi:"state"`
}

func (NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs) ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput() NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs) ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput() NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ToNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) AttachmentId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) *string {
		return v.AttachmentId
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) DestinationCidr() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) *string {
		return v.DestinationCidr
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) PrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) *string {
		return v.PrefixListId
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ResourceId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) *string {
		return v.ResourceId
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ResourceType() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) *string {
		return v.ResourceType
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) RouteOrigin() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) *string {
		return v.RouteOrigin
	})
}

func (o NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) State() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) *string {
		return v.State
	})
}

type NetworkInsightsAnalysisReturnPathComponentVpc struct {
	// ARN of the Network Insights Analysis.
	Arn *string `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

type NetworkInsightsAnalysisReturnPathComponentVpcArgs struct {
	// ARN of the Network Insights Analysis.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// ID of the Network Insights Analysis.
	Id   pulumix.Input[*string] `pulumi:"id"`
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (NetworkInsightsAnalysisReturnPathComponentVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentVpc)(nil)).Elem()
}

func (i NetworkInsightsAnalysisReturnPathComponentVpcArgs) ToNetworkInsightsAnalysisReturnPathComponentVpcOutput() NetworkInsightsAnalysisReturnPathComponentVpcOutput {
	return i.ToNetworkInsightsAnalysisReturnPathComponentVpcOutputWithContext(context.Background())
}

func (i NetworkInsightsAnalysisReturnPathComponentVpcArgs) ToNetworkInsightsAnalysisReturnPathComponentVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAnalysisReturnPathComponentVpcOutput)
}

func (i *NetworkInsightsAnalysisReturnPathComponentVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInsightsAnalysisReturnPathComponentVpcArgs] {
	return pulumix.Val(i)
}

type NetworkInsightsAnalysisReturnPathComponentVpcOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAnalysisReturnPathComponentVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsAnalysisReturnPathComponentVpc)(nil)).Elem()
}

func (o NetworkInsightsAnalysisReturnPathComponentVpcOutput) ToNetworkInsightsAnalysisReturnPathComponentVpcOutput() NetworkInsightsAnalysisReturnPathComponentVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentVpcOutput) ToNetworkInsightsAnalysisReturnPathComponentVpcOutputWithContext(ctx context.Context) NetworkInsightsAnalysisReturnPathComponentVpcOutput {
	return o
}

func (o NetworkInsightsAnalysisReturnPathComponentVpcOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInsightsAnalysisReturnPathComponentVpc] {
	return pulumix.Output[NetworkInsightsAnalysisReturnPathComponentVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentVpcOutput) Arn() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentVpc](o, func(v NetworkInsightsAnalysisReturnPathComponentVpc) *string { return v.Arn })
}

// ID of the Network Insights Analysis.
func (o NetworkInsightsAnalysisReturnPathComponentVpcOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentVpc](o, func(v NetworkInsightsAnalysisReturnPathComponentVpc) *string { return v.Id })
}

func (o NetworkInsightsAnalysisReturnPathComponentVpcOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInsightsAnalysisReturnPathComponentVpc](o, func(v NetworkInsightsAnalysisReturnPathComponentVpc) *string { return v.Name })
}

type NetworkInterfaceAttachmentType struct {
	AttachmentId *string `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex int `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance string `pulumi:"instance"`
}

type NetworkInterfaceAttachmentTypeArgs struct {
	AttachmentId pulumix.Input[*string] `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex pulumix.Input[int] `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance pulumix.Input[string] `pulumi:"instance"`
}

func (NetworkInterfaceAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentTypeArgs) ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput {
	return i.ToNetworkInterfaceAttachmentTypeOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentTypeArgs) ToNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentTypeOutput)
}

func (i *NetworkInterfaceAttachmentTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*NetworkInterfaceAttachmentTypeArgs] {
	return pulumix.Val(i)
}

type NetworkInterfaceAttachmentTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentTypeOutput) ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeOutput) ToNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkInterfaceAttachmentType] {
	return pulumix.Output[NetworkInterfaceAttachmentType]{
		OutputState: o.OutputState,
	}
}

func (o NetworkInterfaceAttachmentTypeOutput) AttachmentId() pulumix.Output[*string] {
	return pulumix.Apply[NetworkInterfaceAttachmentType](o, func(v NetworkInterfaceAttachmentType) *string { return v.AttachmentId })
}

// Integer to define the devices index.
func (o NetworkInterfaceAttachmentTypeOutput) DeviceIndex() pulumix.Output[int] {
	return pulumix.Apply[NetworkInterfaceAttachmentType](o, func(v NetworkInterfaceAttachmentType) int { return v.DeviceIndex })
}

// ID of the instance to attach to.
func (o NetworkInterfaceAttachmentTypeOutput) Instance() pulumix.Output[string] {
	return pulumix.Apply[NetworkInterfaceAttachmentType](o, func(v NetworkInterfaceAttachmentType) string { return v.Instance })
}

type PeeringConnectionOptionsAccepter struct {
	// Allow a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
}

type PeeringConnectionOptionsAccepterArgs struct {
	// Allow a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumix.Input[*bool] `pulumi:"allowRemoteVpcDnsResolution"`
}

func (PeeringConnectionOptionsAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return i.ToPeeringConnectionOptionsAccepterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterOutput)
}

func (i *PeeringConnectionOptionsAccepterArgs) ToOutput(ctx context.Context) pulumix.Output[*PeeringConnectionOptionsAccepterArgs] {
	return pulumix.Val(i)
}

type PeeringConnectionOptionsAccepterOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToOutput(ctx context.Context) pulumix.Output[PeeringConnectionOptionsAccepter] {
	return pulumix.Output[PeeringConnectionOptionsAccepter]{
		OutputState: o.OutputState,
	}
}

// Allow a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterOutput) AllowRemoteVpcDnsResolution() pulumix.Output[*bool] {
	return pulumix.Apply[PeeringConnectionOptionsAccepter](o, func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowRemoteVpcDnsResolution })
}

type PeeringConnectionOptionsRequester struct {
	// Allow a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
}

type PeeringConnectionOptionsRequesterArgs struct {
	// Allow a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumix.Input[*bool] `pulumi:"allowRemoteVpcDnsResolution"`
}

func (PeeringConnectionOptionsRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return i.ToPeeringConnectionOptionsRequesterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterOutput)
}

func (i *PeeringConnectionOptionsRequesterArgs) ToOutput(ctx context.Context) pulumix.Output[*PeeringConnectionOptionsRequesterArgs] {
	return pulumix.Val(i)
}

type PeeringConnectionOptionsRequesterOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToOutput(ctx context.Context) pulumix.Output[PeeringConnectionOptionsRequester] {
	return pulumix.Output[PeeringConnectionOptionsRequester]{
		OutputState: o.OutputState,
	}
}

// Allow a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterOutput) AllowRemoteVpcDnsResolution() pulumix.Output[*bool] {
	return pulumix.Apply[PeeringConnectionOptionsRequester](o, func(v PeeringConnectionOptionsRequester) *bool { return v.AllowRemoteVpcDnsResolution })
}

type RouteTableRoute struct {
	// Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.
	CarrierGatewayId *string `pulumi:"carrierGatewayId"`
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The Amazon Resource Name (ARN) of a core network.
	CoreNetworkArn *string `pulumi:"coreNetworkArn"`
	// The ID of a managed prefix list destination of the route.
	//
	// One of the following target arguments must be supplied:
	DestinationPrefixListId *string `pulumi:"destinationPrefixListId"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway, virtual private gateway, or `local`. `local` routes cannot be created but can be adopted or imported. See the example above.
	GatewayId *string `pulumi:"gatewayId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a Outpost local gateway.
	LocalGatewayId *string `pulumi:"localGatewayId"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC Endpoint.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
	// Identifier of a VPC peering connection.
	//
	// Note that the default route, mapping the VPC's CIDR block to "local", is created implicitly and cannot be specified.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

type RouteTableRouteArgs struct {
	// Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.
	CarrierGatewayId pulumix.Input[*string] `pulumi:"carrierGatewayId"`
	// The CIDR block of the route.
	CidrBlock pulumix.Input[*string] `pulumi:"cidrBlock"`
	// The Amazon Resource Name (ARN) of a core network.
	CoreNetworkArn pulumix.Input[*string] `pulumi:"coreNetworkArn"`
	// The ID of a managed prefix list destination of the route.
	//
	// One of the following target arguments must be supplied:
	DestinationPrefixListId pulumix.Input[*string] `pulumi:"destinationPrefixListId"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumix.Input[*string] `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway, virtual private gateway, or `local`. `local` routes cannot be created but can be adopted or imported. See the example above.
	GatewayId pulumix.Input[*string] `pulumi:"gatewayId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock pulumix.Input[*string] `pulumi:"ipv6CidrBlock"`
	// Identifier of a Outpost local gateway.
	LocalGatewayId pulumix.Input[*string] `pulumi:"localGatewayId"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumix.Input[*string] `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumix.Input[*string] `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumix.Input[*string] `pulumi:"transitGatewayId"`
	// Identifier of a VPC Endpoint.
	VpcEndpointId pulumix.Input[*string] `pulumi:"vpcEndpointId"`
	// Identifier of a VPC peering connection.
	//
	// Note that the default route, mapping the VPC's CIDR block to "local", is created implicitly and cannot be specified.
	VpcPeeringConnectionId pulumix.Input[*string] `pulumi:"vpcPeeringConnectionId"`
}

func (RouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return i.ToRouteTableRouteOutputWithContext(context.Background())
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteOutput)
}

func (i *RouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*RouteTableRouteArgs] {
	return pulumix.Val(i)
}

type RouteTableRouteOutput struct{ *pulumi.OutputState }

func (RouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return o
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return o
}

func (o RouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[RouteTableRoute] {
	return pulumix.Output[RouteTableRoute]{
		OutputState: o.OutputState,
	}
}

// Identifier of a carrier gateway. This attribute can only be used when the VPC contains a subnet which is associated with a Wavelength Zone.
func (o RouteTableRouteOutput) CarrierGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.CarrierGatewayId })
}

// The CIDR block of the route.
func (o RouteTableRouteOutput) CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.CidrBlock })
}

// The Amazon Resource Name (ARN) of a core network.
func (o RouteTableRouteOutput) CoreNetworkArn() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.CoreNetworkArn })
}

// The ID of a managed prefix list destination of the route.
//
// One of the following target arguments must be supplied:
func (o RouteTableRouteOutput) DestinationPrefixListId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.DestinationPrefixListId })
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o RouteTableRouteOutput) EgressOnlyGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.EgressOnlyGatewayId })
}

// Identifier of a VPC internet gateway, virtual private gateway, or `local`. `local` routes cannot be created but can be adopted or imported. See the example above.
func (o RouteTableRouteOutput) GatewayId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.GatewayId })
}

// The Ipv6 CIDR block of the route.
func (o RouteTableRouteOutput) Ipv6CidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.Ipv6CidrBlock })
}

// Identifier of a Outpost local gateway.
func (o RouteTableRouteOutput) LocalGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.LocalGatewayId })
}

// Identifier of a VPC NAT gateway.
func (o RouteTableRouteOutput) NatGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.NatGatewayId })
}

// Identifier of an EC2 network interface.
func (o RouteTableRouteOutput) NetworkInterfaceId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.NetworkInterfaceId })
}

// Identifier of an EC2 Transit Gateway.
func (o RouteTableRouteOutput) TransitGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.TransitGatewayId })
}

// Identifier of a VPC Endpoint.
func (o RouteTableRouteOutput) VpcEndpointId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.VpcEndpointId })
}

// Identifier of a VPC peering connection.
//
// Note that the default route, mapping the VPC's CIDR block to "local", is created implicitly and cannot be specified.
func (o RouteTableRouteOutput) VpcPeeringConnectionId() pulumix.Output[*string] {
	return pulumix.Apply[RouteTableRoute](o, func(v RouteTableRoute) *string { return v.VpcPeeringConnectionId })
}

type SecurityGroupEgress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// Start port (or ICMP type number if protocol is `icmp`)
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of Prefix List IDs.
	PrefixListIds []string `pulumi:"prefixListIds"`
	// Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to 0.  The supported values are defined in the `IpProtocol` argument in the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference.
	Protocol string `pulumi:"protocol"`
	// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Whether the security group itself will be added as a source to this egress rule.
	Self *bool `pulumi:"self"`
	// End range port (or ICMP code if protocol is `icmp`).
	//
	// The following arguments are optional:
	//
	// > **Note** Although `cidrBlocks`, `ipv6CidrBlocks`, `prefixListIds`, and `securityGroups` are all marked as optional, you _must_ provide one of them in order to configure the destination of the traffic.
	ToPort int `pulumi:"toPort"`
}

type SecurityGroupEgressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumix.Input[[]string] `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumix.Input[*string] `pulumi:"description"`
	// Start port (or ICMP type number if protocol is `icmp`)
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumix.Input[[]string] `pulumi:"ipv6CidrBlocks"`
	// List of Prefix List IDs.
	PrefixListIds pulumix.Input[[]string] `pulumi:"prefixListIds"`
	// Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to 0.  The supported values are defined in the `IpProtocol` argument in the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference.
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
	SecurityGroups pulumix.Input[[]string] `pulumi:"securityGroups"`
	// Whether the security group itself will be added as a source to this egress rule.
	Self pulumix.Input[*bool] `pulumi:"self"`
	// End range port (or ICMP code if protocol is `icmp`).
	//
	// The following arguments are optional:
	//
	// > **Note** Although `cidrBlocks`, `ipv6CidrBlocks`, `prefixListIds`, and `securityGroups` are all marked as optional, you _must_ provide one of them in order to configure the destination of the traffic.
	ToPort pulumix.Input[int] `pulumi:"toPort"`
}

func (SecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgress)(nil)).Elem()
}

func (i SecurityGroupEgressArgs) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return i.ToSecurityGroupEgressOutputWithContext(context.Background())
}

func (i SecurityGroupEgressArgs) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressOutput)
}

func (i *SecurityGroupEgressArgs) ToOutput(ctx context.Context) pulumix.Output[*SecurityGroupEgressArgs] {
	return pulumix.Val(i)
}

type SecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgress)(nil)).Elem()
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return o
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return o
}

func (o SecurityGroupEgressOutput) ToOutput(ctx context.Context) pulumix.Output[SecurityGroupEgress] {
	return pulumix.Output[SecurityGroupEgress]{
		OutputState: o.OutputState,
	}
}

// List of CIDR blocks.
func (o SecurityGroupEgressOutput) CidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SecurityGroupEgress](o, func(v SecurityGroupEgress) []string { return v.CidrBlocks })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Description of this egress rule.
func (o SecurityGroupEgressOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[SecurityGroupEgress](o, func(v SecurityGroupEgress) *string { return v.Description })
}

// Start port (or ICMP type number if protocol is `icmp`)
func (o SecurityGroupEgressOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[SecurityGroupEgress](o, func(v SecurityGroupEgress) int { return v.FromPort })
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupEgressOutput) Ipv6CidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SecurityGroupEgress](o, func(v SecurityGroupEgress) []string { return v.Ipv6CidrBlocks })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of Prefix List IDs.
func (o SecurityGroupEgressOutput) PrefixListIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SecurityGroupEgress](o, func(v SecurityGroupEgress) []string { return v.PrefixListIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to 0.  The supported values are defined in the `IpProtocol` argument in the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference.
func (o SecurityGroupEgressOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[SecurityGroupEgress](o, func(v SecurityGroupEgress) string { return v.Protocol })
}

// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
func (o SecurityGroupEgressOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SecurityGroupEgress](o, func(v SecurityGroupEgress) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Whether the security group itself will be added as a source to this egress rule.
func (o SecurityGroupEgressOutput) Self() pulumix.Output[*bool] {
	return pulumix.Apply[SecurityGroupEgress](o, func(v SecurityGroupEgress) *bool { return v.Self })
}

// End range port (or ICMP code if protocol is `icmp`).
//
// The following arguments are optional:
//
// > **Note** Although `cidrBlocks`, `ipv6CidrBlocks`, `prefixListIds`, and `securityGroups` are all marked as optional, you _must_ provide one of them in order to configure the destination of the traffic.
func (o SecurityGroupEgressOutput) ToPort() pulumix.Output[int] {
	return pulumix.Apply[SecurityGroupEgress](o, func(v SecurityGroupEgress) int { return v.ToPort })
}

type SecurityGroupIngress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this ingress rule.
	Description *string `pulumi:"description"`
	// Start port (or ICMP type number if protocol is `icmp` or `icmpv6`).
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of Prefix List IDs.
	PrefixListIds []string `pulumi:"prefixListIds"`
	// Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to 0.  The supported values are defined in the `IpProtocol` argument on the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference.
	//
	// The following arguments are optional:
	//
	// > **Note** Although `cidrBlocks`, `ipv6CidrBlocks`, `prefixListIds`, and `securityGroups` are all marked as optional, you _must_ provide one of them in order to configure the source of the traffic.
	Protocol string `pulumi:"protocol"`
	// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Whether the security group itself will be added as a source to this ingress rule.
	Self *bool `pulumi:"self"`
	// End range port (or ICMP code if protocol is `icmp`).
	ToPort int `pulumi:"toPort"`
}

type SecurityGroupIngressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumix.Input[[]string] `pulumi:"cidrBlocks"`
	// Description of this ingress rule.
	Description pulumix.Input[*string] `pulumi:"description"`
	// Start port (or ICMP type number if protocol is `icmp` or `icmpv6`).
	FromPort pulumix.Input[int] `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumix.Input[[]string] `pulumi:"ipv6CidrBlocks"`
	// List of Prefix List IDs.
	PrefixListIds pulumix.Input[[]string] `pulumi:"prefixListIds"`
	// Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to 0.  The supported values are defined in the `IpProtocol` argument on the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference.
	//
	// The following arguments are optional:
	//
	// > **Note** Although `cidrBlocks`, `ipv6CidrBlocks`, `prefixListIds`, and `securityGroups` are all marked as optional, you _must_ provide one of them in order to configure the source of the traffic.
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
	SecurityGroups pulumix.Input[[]string] `pulumi:"securityGroups"`
	// Whether the security group itself will be added as a source to this ingress rule.
	Self pulumix.Input[*bool] `pulumi:"self"`
	// End range port (or ICMP code if protocol is `icmp`).
	ToPort pulumix.Input[int] `pulumi:"toPort"`
}

func (SecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngress)(nil)).Elem()
}

func (i SecurityGroupIngressArgs) ToSecurityGroupIngressOutput() SecurityGroupIngressOutput {
	return i.ToSecurityGroupIngressOutputWithContext(context.Background())
}

func (i SecurityGroupIngressArgs) ToSecurityGroupIngressOutputWithContext(ctx context.Context) SecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressOutput)
}

func (i *SecurityGroupIngressArgs) ToOutput(ctx context.Context) pulumix.Output[*SecurityGroupIngressArgs] {
	return pulumix.Val(i)
}

type SecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngress)(nil)).Elem()
}

func (o SecurityGroupIngressOutput) ToSecurityGroupIngressOutput() SecurityGroupIngressOutput {
	return o
}

func (o SecurityGroupIngressOutput) ToSecurityGroupIngressOutputWithContext(ctx context.Context) SecurityGroupIngressOutput {
	return o
}

func (o SecurityGroupIngressOutput) ToOutput(ctx context.Context) pulumix.Output[SecurityGroupIngress] {
	return pulumix.Output[SecurityGroupIngress]{
		OutputState: o.OutputState,
	}
}

// List of CIDR blocks.
func (o SecurityGroupIngressOutput) CidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SecurityGroupIngress](o, func(v SecurityGroupIngress) []string { return v.CidrBlocks })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Description of this ingress rule.
func (o SecurityGroupIngressOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[SecurityGroupIngress](o, func(v SecurityGroupIngress) *string { return v.Description })
}

// Start port (or ICMP type number if protocol is `icmp` or `icmpv6`).
func (o SecurityGroupIngressOutput) FromPort() pulumix.Output[int] {
	return pulumix.Apply[SecurityGroupIngress](o, func(v SecurityGroupIngress) int { return v.FromPort })
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupIngressOutput) Ipv6CidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SecurityGroupIngress](o, func(v SecurityGroupIngress) []string { return v.Ipv6CidrBlocks })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of Prefix List IDs.
func (o SecurityGroupIngressOutput) PrefixListIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SecurityGroupIngress](o, func(v SecurityGroupIngress) []string { return v.PrefixListIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `fromPort` and `toPort` equal to 0.  The supported values are defined in the `IpProtocol` argument on the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference.
//
// The following arguments are optional:
//
// > **Note** Although `cidrBlocks`, `ipv6CidrBlocks`, `prefixListIds`, and `securityGroups` are all marked as optional, you _must_ provide one of them in order to configure the source of the traffic.
func (o SecurityGroupIngressOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[SecurityGroupIngress](o, func(v SecurityGroupIngress) string { return v.Protocol })
}

// List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
func (o SecurityGroupIngressOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SecurityGroupIngress](o, func(v SecurityGroupIngress) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Whether the security group itself will be added as a source to this ingress rule.
func (o SecurityGroupIngressOutput) Self() pulumix.Output[*bool] {
	return pulumix.Apply[SecurityGroupIngress](o, func(v SecurityGroupIngress) *bool { return v.Self })
}

// End range port (or ICMP code if protocol is `icmp`).
func (o SecurityGroupIngressOutput) ToPort() pulumix.Output[int] {
	return pulumix.Apply[SecurityGroupIngress](o, func(v SecurityGroupIngress) int { return v.ToPort })
}

type SpotFleetRequestLaunchSpecification struct {
	Ami                      string `pulumi:"ami"`
	AssociatePublicIpAddress *bool  `pulumi:"associatePublicIpAddress"`
	// The availability zone in which to place the request.
	AvailabilityZone      *string                                                   `pulumi:"availabilityZone"`
	EbsBlockDevices       []SpotFleetRequestLaunchSpecificationEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EbsOptimized          *bool                                                     `pulumi:"ebsOptimized"`
	EphemeralBlockDevices []SpotFleetRequestLaunchSpecificationEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile    *string                                                   `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn *string                                                   `pulumi:"iamInstanceProfileArn"`
	// The type of instance to request.
	InstanceType     string                                               `pulumi:"instanceType"`
	KeyName          *string                                              `pulumi:"keyName"`
	Monitoring       *bool                                                `pulumi:"monitoring"`
	PlacementGroup   *string                                              `pulumi:"placementGroup"`
	PlacementTenancy *string                                              `pulumi:"placementTenancy"`
	RootBlockDevices []SpotFleetRequestLaunchSpecificationRootBlockDevice `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice *string `pulumi:"spotPrice"`
	// The subnet in which to launch the requested instance.
	SubnetId *string `pulumi:"subnetId"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags                map[string]string `pulumi:"tags"`
	UserData            *string           `pulumi:"userData"`
	VpcSecurityGroupIds []string          `pulumi:"vpcSecurityGroupIds"`
	// The capacity added to the fleet by a fulfilled request.
	WeightedCapacity *string `pulumi:"weightedCapacity"`
}

type SpotFleetRequestLaunchSpecificationArgs struct {
	Ami                      pulumix.Input[string] `pulumi:"ami"`
	AssociatePublicIpAddress pulumix.Input[*bool]  `pulumi:"associatePublicIpAddress"`
	// The availability zone in which to place the request.
	AvailabilityZone      pulumix.Input[*string]                                                        `pulumi:"availabilityZone"`
	EbsBlockDevices       pulumix.Input[[]*SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs]       `pulumi:"ebsBlockDevices"`
	EbsOptimized          pulumix.Input[*bool]                                                          `pulumi:"ebsOptimized"`
	EphemeralBlockDevices pulumix.Input[[]*SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs] `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile    pulumix.Input[*string]                                                        `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn pulumix.Input[*string]                                                        `pulumi:"iamInstanceProfileArn"`
	// The type of instance to request.
	InstanceType     pulumix.Input[string]                                                    `pulumi:"instanceType"`
	KeyName          pulumix.Input[*string]                                                   `pulumi:"keyName"`
	Monitoring       pulumix.Input[*bool]                                                     `pulumi:"monitoring"`
	PlacementGroup   pulumix.Input[*string]                                                   `pulumi:"placementGroup"`
	PlacementTenancy pulumix.Input[*string]                                                   `pulumi:"placementTenancy"`
	RootBlockDevices pulumix.Input[[]*SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs] `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice pulumix.Input[*string] `pulumi:"spotPrice"`
	// The subnet in which to launch the requested instance.
	SubnetId pulumix.Input[*string] `pulumi:"subnetId"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags                pulumix.Input[map[string]string] `pulumi:"tags"`
	UserData            pulumix.Input[*string]           `pulumi:"userData"`
	VpcSecurityGroupIds pulumix.Input[[]string]          `pulumi:"vpcSecurityGroupIds"`
	// The capacity added to the fleet by a fulfilled request.
	WeightedCapacity pulumix.Input[*string] `pulumi:"weightedCapacity"`
}

func (SpotFleetRequestLaunchSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationArgs) ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput {
	return i.ToSpotFleetRequestLaunchSpecificationOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationArgs) ToSpotFleetRequestLaunchSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationOutput)
}

func (i *SpotFleetRequestLaunchSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchSpecificationArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchSpecificationOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationOutput) ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationOutput) ToSpotFleetRequestLaunchSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchSpecification] {
	return pulumix.Output[SpotFleetRequestLaunchSpecification]{
		OutputState: o.OutputState,
	}
}

func (o SpotFleetRequestLaunchSpecificationOutput) Ami() pulumix.Output[string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) string { return v.Ami })
}

func (o SpotFleetRequestLaunchSpecificationOutput) AssociatePublicIpAddress() pulumix.Output[*bool] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *bool { return v.AssociatePublicIpAddress })
}

// The availability zone in which to place the request.
func (o SpotFleetRequestLaunchSpecificationOutput) AvailabilityZone() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.AvailabilityZone })
}

func (o SpotFleetRequestLaunchSpecificationOutput) EbsBlockDevices() pulumix.GArrayOutput[SpotFleetRequestLaunchSpecificationEbsBlockDevice, SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationEbsBlockDevice {
		return v.EbsBlockDevices
	})
	return pulumix.GArrayOutput[SpotFleetRequestLaunchSpecificationEbsBlockDevice, SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput]{OutputState: value.OutputState}
}

func (o SpotFleetRequestLaunchSpecificationOutput) EbsOptimized() pulumix.Output[*bool] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *bool { return v.EbsOptimized })
}

func (o SpotFleetRequestLaunchSpecificationOutput) EphemeralBlockDevices() pulumix.GArrayOutput[SpotFleetRequestLaunchSpecificationEphemeralBlockDevice, SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationEphemeralBlockDevice {
		return v.EphemeralBlockDevices
	})
	return pulumix.GArrayOutput[SpotFleetRequestLaunchSpecificationEphemeralBlockDevice, SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput]{OutputState: value.OutputState}
}

func (o SpotFleetRequestLaunchSpecificationOutput) IamInstanceProfile() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.IamInstanceProfile })
}

func (o SpotFleetRequestLaunchSpecificationOutput) IamInstanceProfileArn() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.IamInstanceProfileArn })
}

// The type of instance to request.
func (o SpotFleetRequestLaunchSpecificationOutput) InstanceType() pulumix.Output[string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) string { return v.InstanceType })
}

func (o SpotFleetRequestLaunchSpecificationOutput) KeyName() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.KeyName })
}

func (o SpotFleetRequestLaunchSpecificationOutput) Monitoring() pulumix.Output[*bool] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *bool { return v.Monitoring })
}

func (o SpotFleetRequestLaunchSpecificationOutput) PlacementGroup() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.PlacementGroup })
}

func (o SpotFleetRequestLaunchSpecificationOutput) PlacementTenancy() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.PlacementTenancy })
}

func (o SpotFleetRequestLaunchSpecificationOutput) RootBlockDevices() pulumix.GArrayOutput[SpotFleetRequestLaunchSpecificationRootBlockDevice, SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationRootBlockDevice {
		return v.RootBlockDevices
	})
	return pulumix.GArrayOutput[SpotFleetRequestLaunchSpecificationRootBlockDevice, SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput]{OutputState: value.OutputState}
}

// The maximum bid price per unit hour.
func (o SpotFleetRequestLaunchSpecificationOutput) SpotPrice() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.SpotPrice })
}

// The subnet in which to launch the requested instance.
func (o SpotFleetRequestLaunchSpecificationOutput) SubnetId() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.SubnetId })
}

// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o SpotFleetRequestLaunchSpecificationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

func (o SpotFleetRequestLaunchSpecificationOutput) UserData() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.UserData })
}

func (o SpotFleetRequestLaunchSpecificationOutput) VpcSecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) []string { return v.VpcSecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The capacity added to the fleet by a fulfilled request.
func (o SpotFleetRequestLaunchSpecificationOutput) WeightedCapacity() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecification](o, func(v SpotFleetRequestLaunchSpecification) *string { return v.WeightedCapacity })
}

type SpotFleetRequestLaunchSpecificationEbsBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	SnapshotId          *string `pulumi:"snapshotId"`
	Throughput          *int    `pulumi:"throughput"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumix.Input[*bool]   `pulumi:"deleteOnTermination"`
	DeviceName          pulumix.Input[string]  `pulumi:"deviceName"`
	Encrypted           pulumix.Input[*bool]   `pulumi:"encrypted"`
	Iops                pulumix.Input[*int]    `pulumi:"iops"`
	KmsKeyId            pulumix.Input[*string] `pulumi:"kmsKeyId"`
	SnapshotId          pulumix.Input[*string] `pulumi:"snapshotId"`
	Throughput          pulumix.Input[*int]    `pulumi:"throughput"`
	VolumeSize          pulumix.Input[*int]    `pulumi:"volumeSize"`
	VolumeType          pulumix.Input[*string] `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput)
}

func (i *SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchSpecificationEbsBlockDevice] {
	return pulumix.Output[SpotFleetRequestLaunchSpecificationEbsBlockDevice]{
		OutputState: o.OutputState,
	}
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEbsBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *bool { return v.DeleteOnTermination })
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEbsBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) string { return v.DeviceName })
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEbsBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *bool { return v.Encrypted })
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEbsBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *int { return v.Iops })
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEbsBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *string { return v.KmsKeyId })
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) SnapshotId() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEbsBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *string { return v.SnapshotId })
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEbsBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *int { return v.Throughput })
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEbsBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *int { return v.VolumeSize })
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEbsBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *string { return v.VolumeType })
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs struct {
	DeviceName  pulumix.Input[string] `pulumi:"deviceName"`
	VirtualName pulumix.Input[string] `pulumi:"virtualName"`
}

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput)
}

func (i *SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchSpecificationEphemeralBlockDevice] {
	return pulumix.Output[SpotFleetRequestLaunchSpecificationEphemeralBlockDevice]{
		OutputState: o.OutputState,
	}
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEphemeralBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDevice) string { return v.DeviceName })
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) VirtualName() pulumix.Output[string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationEphemeralBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDevice) string { return v.VirtualName })
}

type SpotFleetRequestLaunchSpecificationRootBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	Throughput          *int    `pulumi:"throughput"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs struct {
	DeleteOnTermination pulumix.Input[*bool]   `pulumi:"deleteOnTermination"`
	Encrypted           pulumix.Input[*bool]   `pulumi:"encrypted"`
	Iops                pulumix.Input[*int]    `pulumi:"iops"`
	KmsKeyId            pulumix.Input[*string] `pulumi:"kmsKeyId"`
	Throughput          pulumix.Input[*int]    `pulumi:"throughput"`
	VolumeSize          pulumix.Input[*int]    `pulumi:"volumeSize"`
	VolumeType          pulumix.Input[*string] `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput)
}

func (i *SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchSpecificationRootBlockDevice] {
	return pulumix.Output[SpotFleetRequestLaunchSpecificationRootBlockDevice]{
		OutputState: o.OutputState,
	}
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationRootBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *bool { return v.DeleteOnTermination })
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationRootBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *bool { return v.Encrypted })
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationRootBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *int { return v.Iops })
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationRootBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *string { return v.KmsKeyId })
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationRootBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *int { return v.Throughput })
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationRootBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *int { return v.VolumeSize })
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchSpecificationRootBlockDevice](o, func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *string { return v.VolumeType })
}

type SpotFleetRequestLaunchTemplateConfig struct {
	// Launch template specification. See Launch Template Specification below for more details.
	LaunchTemplateSpecification SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification `pulumi:"launchTemplateSpecification"`
	// One or more override configurations. See Overrides below for more details.
	Overrides []SpotFleetRequestLaunchTemplateConfigOverride `pulumi:"overrides"`
}

type SpotFleetRequestLaunchTemplateConfigArgs struct {
	// Launch template specification. See Launch Template Specification below for more details.
	LaunchTemplateSpecification pulumix.Input[*SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs] `pulumi:"launchTemplateSpecification"`
	// One or more override configurations. See Overrides below for more details.
	Overrides pulumix.Input[[]*SpotFleetRequestLaunchTemplateConfigOverrideArgs] `pulumi:"overrides"`
}

func (SpotFleetRequestLaunchTemplateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfig)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigArgs) ToSpotFleetRequestLaunchTemplateConfigOutput() SpotFleetRequestLaunchTemplateConfigOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigArgs) ToSpotFleetRequestLaunchTemplateConfigOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfig)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOutput) ToSpotFleetRequestLaunchTemplateConfigOutput() SpotFleetRequestLaunchTemplateConfigOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOutput) ToSpotFleetRequestLaunchTemplateConfigOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfig] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfig]{
		OutputState: o.OutputState,
	}
}

// Launch template specification. See Launch Template Specification below for more details.
func (o SpotFleetRequestLaunchTemplateConfigOutput) LaunchTemplateSpecification() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification, SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfig](o, func(v SpotFleetRequestLaunchTemplateConfig) SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification, SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput]{OutputState: value.OutputState}
}

// One or more override configurations. See Overrides below for more details.
func (o SpotFleetRequestLaunchTemplateConfigOutput) Overrides() pulumix.GArrayOutput[SpotFleetRequestLaunchTemplateConfigOverride, SpotFleetRequestLaunchTemplateConfigOverrideOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfig](o, func(v SpotFleetRequestLaunchTemplateConfig) []SpotFleetRequestLaunchTemplateConfigOverride {
		return v.Overrides
	})
	return pulumix.GArrayOutput[SpotFleetRequestLaunchTemplateConfigOverride, SpotFleetRequestLaunchTemplateConfigOverrideOutput]{OutputState: value.OutputState}
}

type SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification struct {
	// The ID of the launch template. Conflicts with `name`.
	Id *string `pulumi:"id"`
	// The name of the launch template. Conflicts with `id`.
	Name *string `pulumi:"name"`
	// Template version. Unlike the autoscaling equivalent, does not support `$Latest` or `$Default`, so use the launchTemplate resource's attribute, e.g., `"${aws_launch_template.foo.latest_version}"`. It will use the default version if omitted.
	//
	// **Note:** The specified launch template can specify only a subset of the
	// inputs of `ec2.LaunchTemplate`.  There are limitations on
	// what you can specify as spot fleet does not support all the attributes that are supported by autoscaling groups. [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#launch-templates-spot-fleet) is currently sparse, but at least `instanceInitiatedShutdownBehavior` is confirmed unsupported.
	Version *string `pulumi:"version"`
}

type SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs struct {
	// The ID of the launch template. Conflicts with `name`.
	Id pulumix.Input[*string] `pulumi:"id"`
	// The name of the launch template. Conflicts with `id`.
	Name pulumix.Input[*string] `pulumi:"name"`
	// Template version. Unlike the autoscaling equivalent, does not support `$Latest` or `$Default`, so use the launchTemplate resource's attribute, e.g., `"${aws_launch_template.foo.latest_version}"`. It will use the default version if omitted.
	//
	// **Note:** The specified launch template can specify only a subset of the
	// inputs of `ec2.LaunchTemplate`.  There are limitations on
	// what you can specify as spot fleet does not support all the attributes that are supported by autoscaling groups. [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#launch-templates-spot-fleet) is currently sparse, but at least `instanceInitiatedShutdownBehavior` is confirmed unsupported.
	Version pulumix.Input[*string] `pulumi:"version"`
}

func (SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput() SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput() SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification]{
		OutputState: o.OutputState,
	}
}

// The ID of the launch template. Conflicts with `name`.
func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification](o, func(v SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.Id })
}

// The name of the launch template. Conflicts with `id`.
func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification](o, func(v SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.Name })
}

// Template version. Unlike the autoscaling equivalent, does not support `$Latest` or `$Default`, so use the launchTemplate resource's attribute, e.g., `"${aws_launch_template.foo.latest_version}"`. It will use the default version if omitted.
//
// **Note:** The specified launch template can specify only a subset of the
// inputs of `ec2.LaunchTemplate`.  There are limitations on
// what you can specify as spot fleet does not support all the attributes that are supported by autoscaling groups. [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#launch-templates-spot-fleet) is currently sparse, but at least `instanceInitiatedShutdownBehavior` is confirmed unsupported.
func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) Version() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification](o, func(v SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.Version })
}

type SpotFleetRequestLaunchTemplateConfigOverride struct {
	// The availability zone in which to place the request.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The instance requirements. See below.
	InstanceRequirements *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements `pulumi:"instanceRequirements"`
	// The type of instance to request.
	InstanceType *string `pulumi:"instanceType"`
	// The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
	Priority *float64 `pulumi:"priority"`
	// The maximum spot bid for this override request.
	SpotPrice *string `pulumi:"spotPrice"`
	// The subnet in which to launch the requested instance.
	SubnetId *string `pulumi:"subnetId"`
	// The capacity added to the fleet by a fulfilled request.
	WeightedCapacity *float64 `pulumi:"weightedCapacity"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideArgs struct {
	// The availability zone in which to place the request.
	AvailabilityZone pulumix.Input[*string] `pulumi:"availabilityZone"`
	// The instance requirements. See below.
	InstanceRequirements pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsArgs] `pulumi:"instanceRequirements"`
	// The type of instance to request.
	InstanceType pulumix.Input[*string] `pulumi:"instanceType"`
	// The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
	Priority pulumix.Input[*float64] `pulumi:"priority"`
	// The maximum spot bid for this override request.
	SpotPrice pulumix.Input[*string] `pulumi:"spotPrice"`
	// The subnet in which to launch the requested instance.
	SubnetId pulumix.Input[*string] `pulumi:"subnetId"`
	// The capacity added to the fleet by a fulfilled request.
	WeightedCapacity pulumix.Input[*float64] `pulumi:"weightedCapacity"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideOutput() SpotFleetRequestLaunchTemplateConfigOverrideOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideOutput() SpotFleetRequestLaunchTemplateConfigOverrideOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverride] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverride]{
		OutputState: o.OutputState,
	}
}

// The availability zone in which to place the request.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) AvailabilityZone() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverride](o, func(v SpotFleetRequestLaunchTemplateConfigOverride) *string { return v.AvailabilityZone })
}

// The instance requirements. See below.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) InstanceRequirements() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverride](o, func(v SpotFleetRequestLaunchTemplateConfigOverride) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements {
		return v.InstanceRequirements
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput]{OutputState: value.OutputState}
}

// The type of instance to request.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) InstanceType() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverride](o, func(v SpotFleetRequestLaunchTemplateConfigOverride) *string { return v.InstanceType })
}

// The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) Priority() pulumix.Output[*float64] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverride](o, func(v SpotFleetRequestLaunchTemplateConfigOverride) *float64 { return v.Priority })
}

// The maximum spot bid for this override request.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) SpotPrice() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverride](o, func(v SpotFleetRequestLaunchTemplateConfigOverride) *string { return v.SpotPrice })
}

// The subnet in which to launch the requested instance.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) SubnetId() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverride](o, func(v SpotFleetRequestLaunchTemplateConfigOverride) *string { return v.SubnetId })
}

// The capacity added to the fleet by a fulfilled request.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) WeightedCapacity() pulumix.Output[*float64] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverride](o, func(v SpotFleetRequestLaunchTemplateConfigOverride) *float64 { return v.WeightedCapacity })
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements struct {
	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
	AcceleratorCount *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount `pulumi:"acceleratorCount"`
	// List of accelerator manufacturer names. Default is any manufacturer.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorManufacturers []string `pulumi:"acceleratorManufacturers"`
	// List of accelerator names. Default is any acclerator.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorNames []string `pulumi:"acceleratorNames"`
	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	AcceleratorTotalMemoryMib *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib `pulumi:"acceleratorTotalMemoryMib"`
	// List of accelerator types. Default is any accelerator type.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorTypes []string `pulumi:"acceleratorTypes"`
	// List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (\*), to allow an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
	//
	// > **NOTE:** If you specify `allowedInstanceTypes`, you can't specify `excludedInstanceTypes`.
	AllowedInstanceTypes []string `pulumi:"allowedInstanceTypes"`
	// Indicate whether bare metal instace types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BareMetal *string `pulumi:"bareMetal"`
	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	BaselineEbsBandwidthMbps *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps `pulumi:"baselineEbsBandwidthMbps"`
	// Indicate whether burstable performance instance types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BurstablePerformance *string `pulumi:"burstablePerformance"`
	// List of CPU manufacturer names. Default is any manufacturer.
	//
	// > **NOTE:** Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	CpuManufacturers []string `pulumi:"cpuManufacturers"`
	// List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (\*), to exclude an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	//
	// > **NOTE:** If you specify `excludedInstanceTypes`, you can't specify `allowedInstanceTypes`.
	ExcludedInstanceTypes []string `pulumi:"excludedInstanceTypes"`
	// List of instance generation names. Default is any generation.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	InstanceGenerations []string `pulumi:"instanceGenerations"`
	// Indicate whether instance types with local storage volumes are `included`, `excluded`, or `required`. Default is `included`.
	LocalStorage *string `pulumi:"localStorage"`
	// List of local storage type names. Default any storage type.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	LocalStorageTypes []string `pulumi:"localStorageTypes"`
	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	MemoryGibPerVcpu *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu `pulumi:"memoryGibPerVcpu"`
	// Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
	MemoryMib *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib `pulumi:"memoryMib"`
	// Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.
	NetworkBandwidthGbps *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps `pulumi:"networkBandwidthGbps"`
	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	NetworkInterfaceCount *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount `pulumi:"networkInterfaceCount"`
	// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	OnDemandMaxPricePercentageOverLowestPrice *int `pulumi:"onDemandMaxPricePercentageOverLowestPrice"`
	// Indicate whether instance types must support On-Demand Instance Hibernation, either `true` or `false`. Default is `false`.
	RequireHibernateSupport *bool `pulumi:"requireHibernateSupport"`
	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	SpotMaxPricePercentageOverLowestPrice *int `pulumi:"spotMaxPricePercentageOverLowestPrice"`
	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	TotalLocalStorageGb *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb `pulumi:"totalLocalStorageGb"`
	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	VcpuCount *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount `pulumi:"vcpuCount"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsArgs struct {
	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
	AcceleratorCount pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs] `pulumi:"acceleratorCount"`
	// List of accelerator manufacturer names. Default is any manufacturer.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorManufacturers pulumix.Input[[]string] `pulumi:"acceleratorManufacturers"`
	// List of accelerator names. Default is any acclerator.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorNames pulumix.Input[[]string] `pulumi:"acceleratorNames"`
	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	AcceleratorTotalMemoryMib pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs] `pulumi:"acceleratorTotalMemoryMib"`
	// List of accelerator types. Default is any accelerator type.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	AcceleratorTypes pulumix.Input[[]string] `pulumi:"acceleratorTypes"`
	// List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (\*), to allow an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
	//
	// > **NOTE:** If you specify `allowedInstanceTypes`, you can't specify `excludedInstanceTypes`.
	AllowedInstanceTypes pulumix.Input[[]string] `pulumi:"allowedInstanceTypes"`
	// Indicate whether bare metal instace types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BareMetal pulumix.Input[*string] `pulumi:"bareMetal"`
	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	BaselineEbsBandwidthMbps pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs] `pulumi:"baselineEbsBandwidthMbps"`
	// Indicate whether burstable performance instance types should be `included`, `excluded`, or `required`. Default is `excluded`.
	BurstablePerformance pulumix.Input[*string] `pulumi:"burstablePerformance"`
	// List of CPU manufacturer names. Default is any manufacturer.
	//
	// > **NOTE:** Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	CpuManufacturers pulumix.Input[[]string] `pulumi:"cpuManufacturers"`
	// List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (\*), to exclude an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	//
	// > **NOTE:** If you specify `excludedInstanceTypes`, you can't specify `allowedInstanceTypes`.
	ExcludedInstanceTypes pulumix.Input[[]string] `pulumi:"excludedInstanceTypes"`
	// List of instance generation names. Default is any generation.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	InstanceGenerations pulumix.Input[[]string] `pulumi:"instanceGenerations"`
	// Indicate whether instance types with local storage volumes are `included`, `excluded`, or `required`. Default is `included`.
	LocalStorage pulumix.Input[*string] `pulumi:"localStorage"`
	// List of local storage type names. Default any storage type.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	LocalStorageTypes pulumix.Input[[]string] `pulumi:"localStorageTypes"`
	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	MemoryGibPerVcpu pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs] `pulumi:"memoryGibPerVcpu"`
	// Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
	MemoryMib pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs] `pulumi:"memoryMib"`
	// Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.
	NetworkBandwidthGbps pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs] `pulumi:"networkBandwidthGbps"`
	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	NetworkInterfaceCount pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs] `pulumi:"networkInterfaceCount"`
	// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	OnDemandMaxPricePercentageOverLowestPrice pulumix.Input[*int] `pulumi:"onDemandMaxPricePercentageOverLowestPrice"`
	// Indicate whether instance types must support On-Demand Instance Hibernation, either `true` or `false`. Default is `false`.
	RequireHibernateSupport pulumix.Input[*bool] `pulumi:"requireHibernateSupport"`
	// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
	//
	// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
	SpotMaxPricePercentageOverLowestPrice pulumix.Input[*int] `pulumi:"spotMaxPricePercentageOverLowestPrice"`
	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	TotalLocalStorageGb pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs] `pulumi:"totalLocalStorageGb"`
	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	VcpuCount pulumix.Input[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs] `pulumi:"vcpuCount"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements]{
		OutputState: o.OutputState,
	}
}

// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorCount() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount {
		return v.AcceleratorCount
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput]{OutputState: value.OutputState}
}

// List of accelerator manufacturer names. Default is any manufacturer.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorManufacturers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) []string {
		return v.AcceleratorManufacturers
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of accelerator names. Default is any acclerator.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) []string {
		return v.AcceleratorNames
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorTotalMemoryMib() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib {
		return v.AcceleratorTotalMemoryMib
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput]{OutputState: value.OutputState}
}

// List of accelerator types. Default is any accelerator type.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) AcceleratorTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) []string {
		return v.AcceleratorTypes
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (\*), to allow an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
//
// > **NOTE:** If you specify `allowedInstanceTypes`, you can't specify `excludedInstanceTypes`.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) AllowedInstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) []string {
		return v.AllowedInstanceTypes
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Indicate whether bare metal instace types should be `included`, `excluded`, or `required`. Default is `excluded`.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) BareMetal() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *string { return v.BareMetal })
}

// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) BaselineEbsBandwidthMbps() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps {
		return v.BaselineEbsBandwidthMbps
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput]{OutputState: value.OutputState}
}

// Indicate whether burstable performance instance types should be `included`, `excluded`, or `required`. Default is `excluded`.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) BurstablePerformance() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *string {
		return v.BurstablePerformance
	})
}

// List of CPU manufacturer names. Default is any manufacturer.
//
// > **NOTE:** Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) CpuManufacturers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) []string {
		return v.CpuManufacturers
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (\*), to exclude an instance type, size, or generation. The following are examples: `m5.8xlarge`, `c5*.*`, `m5a.*`, `r*`, `*3*`. For example, if you specify `c5*`, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*`, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
//
// > **NOTE:** If you specify `excludedInstanceTypes`, you can't specify `allowedInstanceTypes`.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) ExcludedInstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) []string {
		return v.ExcludedInstanceTypes
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of instance generation names. Default is any generation.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) InstanceGenerations() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) []string {
		return v.InstanceGenerations
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Indicate whether instance types with local storage volumes are `included`, `excluded`, or `required`. Default is `included`.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) LocalStorage() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *string {
		return v.LocalStorage
	})
}

// List of local storage type names. Default any storage type.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) LocalStorageTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) []string {
		return v.LocalStorageTypes
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) MemoryGibPerVcpu() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu {
		return v.MemoryGibPerVcpu
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) MemoryMib() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib {
		return v.MemoryMib
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) NetworkBandwidthGbps() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps {
		return v.NetworkBandwidthGbps
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) NetworkInterfaceCount() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount {
		return v.NetworkInterfaceCount
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput]{OutputState: value.OutputState}
}

// The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
//
// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) OnDemandMaxPricePercentageOverLowestPrice() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *int {
		return v.OnDemandMaxPricePercentageOverLowestPrice
	})
}

// Indicate whether instance types must support On-Demand Instance Hibernation, either `true` or `false`. Default is `false`.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) RequireHibernateSupport() pulumix.Output[*bool] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *bool {
		return v.RequireHibernateSupport
	})
}

// The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
//
// If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) SpotMaxPricePercentageOverLowestPrice() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *int {
		return v.SpotMaxPricePercentageOverLowestPrice
	})
}

// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) TotalLocalStorageGb() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb {
		return v.TotalLocalStorageGb
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput]{OutputState: value.OutputState}
}

// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput) VcpuCount() pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput] {
	value := pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements) *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount {
		return v.VcpuCount
	})
	return pulumix.GPtrOutput[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount, SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput]{OutputState: value.OutputState}
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount) *int {
		return v.Max
	})
}

// Minimum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCount) *int {
		return v.Min
	})
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib) *int {
		return v.Max
	})
}

// Minimum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMib) *int {
		return v.Min
	})
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps) *int {
		return v.Max
	})
}

// Minimum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbps) *int {
		return v.Min
	})
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *float64 `pulumi:"max"`
	// Minimum.
	Min *float64 `pulumi:"min"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*float64] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*float64] `pulumi:"min"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) Max() pulumix.Output[*float64] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu) *float64 {
		return v.Max
	})
}

// Minimum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput) Min() pulumix.Output[*float64] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpu) *float64 {
		return v.Min
	})
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib) *int { return v.Max })
}

// Minimum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMib) *int { return v.Min })
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *float64 `pulumi:"max"`
	// Minimum.
	Min *float64 `pulumi:"min"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*float64] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*float64] `pulumi:"min"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) Max() pulumix.Output[*float64] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps) *float64 {
		return v.Max
	})
}

// Minimum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput) Min() pulumix.Output[*float64] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbps) *float64 {
		return v.Min
	})
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount) *int {
		return v.Max
	})
}

// Minimum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCount) *int {
		return v.Min
	})
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *float64 `pulumi:"max"`
	// Minimum.
	Min *float64 `pulumi:"min"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*float64] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*float64] `pulumi:"min"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) Max() pulumix.Output[*float64] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb) *float64 {
		return v.Max
	})
}

// Minimum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput) Min() pulumix.Output[*float64] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGb) *float64 {
		return v.Min
	})
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max *int `pulumi:"max"`
	// Minimum.
	Min *int `pulumi:"min"`
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs struct {
	// Maximum. Set to `0` to exclude instance types with accelerators.
	Max pulumix.Input[*int] `pulumi:"max"`
	// Minimum.
	Min pulumix.Input[*int] `pulumi:"min"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput)
}

func (i *SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput() SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount] {
	return pulumix.Output[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount]{
		OutputState: o.OutputState,
	}
}

// Maximum. Set to `0` to exclude instance types with accelerators.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) Max() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount) *int { return v.Max })
}

// Minimum.
func (o SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput) Min() pulumix.Output[*int] {
	return pulumix.Apply[SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount](o, func(v SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCount) *int { return v.Min })
}

type SpotFleetRequestSpotMaintenanceStrategies struct {
	// Nested argument containing the capacity rebalance for your fleet request. Defined below.
	CapacityRebalance *SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance `pulumi:"capacityRebalance"`
}

type SpotFleetRequestSpotMaintenanceStrategiesArgs struct {
	// Nested argument containing the capacity rebalance for your fleet request. Defined below.
	CapacityRebalance pulumix.Input[*SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceArgs] `pulumi:"capacityRebalance"`
}

func (SpotFleetRequestSpotMaintenanceStrategiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestSpotMaintenanceStrategies)(nil)).Elem()
}

func (i SpotFleetRequestSpotMaintenanceStrategiesArgs) ToSpotFleetRequestSpotMaintenanceStrategiesOutput() SpotFleetRequestSpotMaintenanceStrategiesOutput {
	return i.ToSpotFleetRequestSpotMaintenanceStrategiesOutputWithContext(context.Background())
}

func (i SpotFleetRequestSpotMaintenanceStrategiesArgs) ToSpotFleetRequestSpotMaintenanceStrategiesOutputWithContext(ctx context.Context) SpotFleetRequestSpotMaintenanceStrategiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestSpotMaintenanceStrategiesOutput)
}

func (i *SpotFleetRequestSpotMaintenanceStrategiesArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestSpotMaintenanceStrategiesArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestSpotMaintenanceStrategiesOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestSpotMaintenanceStrategiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestSpotMaintenanceStrategies)(nil)).Elem()
}

func (o SpotFleetRequestSpotMaintenanceStrategiesOutput) ToSpotFleetRequestSpotMaintenanceStrategiesOutput() SpotFleetRequestSpotMaintenanceStrategiesOutput {
	return o
}

func (o SpotFleetRequestSpotMaintenanceStrategiesOutput) ToSpotFleetRequestSpotMaintenanceStrategiesOutputWithContext(ctx context.Context) SpotFleetRequestSpotMaintenanceStrategiesOutput {
	return o
}

func (o SpotFleetRequestSpotMaintenanceStrategiesOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestSpotMaintenanceStrategies] {
	return pulumix.Output[SpotFleetRequestSpotMaintenanceStrategies]{
		OutputState: o.OutputState,
	}
}

// Nested argument containing the capacity rebalance for your fleet request. Defined below.
func (o SpotFleetRequestSpotMaintenanceStrategiesOutput) CapacityRebalance() pulumix.GPtrOutput[SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance, SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput] {
	value := pulumix.Apply[SpotFleetRequestSpotMaintenanceStrategies](o, func(v SpotFleetRequestSpotMaintenanceStrategies) *SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance {
		return v.CapacityRebalance
	})
	return pulumix.GPtrOutput[SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance, SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput]{OutputState: value.OutputState}
}

type SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance struct {
	// The replacement strategy to use. Only available for spot fleets with `fleetType` set to `maintain`. Valid values: `launch`.
	ReplacementStrategy *string `pulumi:"replacementStrategy"`
}

type SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceArgs struct {
	// The replacement strategy to use. Only available for spot fleets with `fleetType` set to `maintain`. Valid values: `launch`.
	ReplacementStrategy pulumix.Input[*string] `pulumi:"replacementStrategy"`
}

func (SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance)(nil)).Elem()
}

func (i SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceArgs) ToSpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput() SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput {
	return i.ToSpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutputWithContext(context.Background())
}

func (i SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceArgs) ToSpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutputWithContext(ctx context.Context) SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput)
}

func (i *SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceArgs] {
	return pulumix.Val(i)
}

type SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance)(nil)).Elem()
}

func (o SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput) ToSpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput() SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput {
	return o
}

func (o SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput) ToSpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutputWithContext(ctx context.Context) SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput {
	return o
}

func (o SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput) ToOutput(ctx context.Context) pulumix.Output[SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance] {
	return pulumix.Output[SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance]{
		OutputState: o.OutputState,
	}
}

// The replacement strategy to use. Only available for spot fleets with `fleetType` set to `maintain`. Valid values: `launch`.
func (o SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput) ReplacementStrategy() pulumix.Output[*string] {
	return pulumix.Apply[SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance](o, func(v SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalance) *string {
		return v.ReplacementStrategy
	})
}

type SpotInstanceRequestCapacityReservationSpecification struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `"open"` or `"none"`. (Default: `"open"`).
	CapacityReservationPreference *string `pulumi:"capacityReservationPreference"`
	// Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
	//
	// For more information, see the documentation on [Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-using.html).
	CapacityReservationTarget *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget `pulumi:"capacityReservationTarget"`
}

type SpotInstanceRequestCapacityReservationSpecificationArgs struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `"open"` or `"none"`. (Default: `"open"`).
	CapacityReservationPreference pulumix.Input[*string] `pulumi:"capacityReservationPreference"`
	// Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
	//
	// For more information, see the documentation on [Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-using.html).
	CapacityReservationTarget pulumix.Input[*SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetArgs] `pulumi:"capacityReservationTarget"`
}

func (SpotInstanceRequestCapacityReservationSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCapacityReservationSpecification)(nil)).Elem()
}

func (i SpotInstanceRequestCapacityReservationSpecificationArgs) ToSpotInstanceRequestCapacityReservationSpecificationOutput() SpotInstanceRequestCapacityReservationSpecificationOutput {
	return i.ToSpotInstanceRequestCapacityReservationSpecificationOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCapacityReservationSpecificationArgs) ToSpotInstanceRequestCapacityReservationSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCapacityReservationSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCapacityReservationSpecificationOutput)
}

func (i *SpotInstanceRequestCapacityReservationSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestCapacityReservationSpecificationArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestCapacityReservationSpecificationOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCapacityReservationSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCapacityReservationSpecification)(nil)).Elem()
}

func (o SpotInstanceRequestCapacityReservationSpecificationOutput) ToSpotInstanceRequestCapacityReservationSpecificationOutput() SpotInstanceRequestCapacityReservationSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCapacityReservationSpecificationOutput) ToSpotInstanceRequestCapacityReservationSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCapacityReservationSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCapacityReservationSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestCapacityReservationSpecification] {
	return pulumix.Output[SpotInstanceRequestCapacityReservationSpecification]{
		OutputState: o.OutputState,
	}
}

// Indicates the instance's Capacity Reservation preferences. Can be `"open"` or `"none"`. (Default: `"open"`).
func (o SpotInstanceRequestCapacityReservationSpecificationOutput) CapacityReservationPreference() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestCapacityReservationSpecification](o, func(v SpotInstanceRequestCapacityReservationSpecification) *string {
		return v.CapacityReservationPreference
	})
}

// Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
//
// For more information, see the documentation on [Capacity Reservations](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-using.html).
func (o SpotInstanceRequestCapacityReservationSpecificationOutput) CapacityReservationTarget() pulumix.GPtrOutput[SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget, SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput] {
	value := pulumix.Apply[SpotInstanceRequestCapacityReservationSpecification](o, func(v SpotInstanceRequestCapacityReservationSpecification) *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget {
		return v.CapacityReservationTarget
	})
	return pulumix.GPtrOutput[SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget, SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput]{OutputState: value.OutputState}
}

type SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget struct {
	// ID of the Capacity Reservation in which to run the instance.
	CapacityReservationId *string `pulumi:"capacityReservationId"`
	// ARN of the Capacity Reservation resource group in which to run the instance.
	CapacityReservationResourceGroupArn *string `pulumi:"capacityReservationResourceGroupArn"`
}

type SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetArgs struct {
	// ID of the Capacity Reservation in which to run the instance.
	CapacityReservationId pulumix.Input[*string] `pulumi:"capacityReservationId"`
	// ARN of the Capacity Reservation resource group in which to run the instance.
	CapacityReservationResourceGroupArn pulumix.Input[*string] `pulumi:"capacityReservationResourceGroupArn"`
}

func (SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetArgs) ToSpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput() SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput {
	return i.ToSpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetArgs) ToSpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput)
}

func (i *SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput) ToSpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput() SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput) ToSpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget] {
	return pulumix.Output[SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget]{
		OutputState: o.OutputState,
	}
}

// ID of the Capacity Reservation in which to run the instance.
func (o SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationId() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget](o, func(v SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationId
	})
}

// ARN of the Capacity Reservation resource group in which to run the instance.
func (o SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationResourceGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget](o, func(v SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationResourceGroupArn
	})
}

type SpotInstanceRequestCpuOptions struct {
	// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
	AmdSevSnp *string `pulumi:"amdSevSnp"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	CoreCount *int `pulumi:"coreCount"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// For more information, see the documentation on [Optimizing CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html).
	ThreadsPerCore *int `pulumi:"threadsPerCore"`
}

type SpotInstanceRequestCpuOptionsArgs struct {
	// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
	AmdSevSnp pulumix.Input[*string] `pulumi:"amdSevSnp"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	CoreCount pulumix.Input[*int] `pulumi:"coreCount"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// For more information, see the documentation on [Optimizing CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html).
	ThreadsPerCore pulumix.Input[*int] `pulumi:"threadsPerCore"`
}

func (SpotInstanceRequestCpuOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCpuOptions)(nil)).Elem()
}

func (i SpotInstanceRequestCpuOptionsArgs) ToSpotInstanceRequestCpuOptionsOutput() SpotInstanceRequestCpuOptionsOutput {
	return i.ToSpotInstanceRequestCpuOptionsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCpuOptionsArgs) ToSpotInstanceRequestCpuOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestCpuOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCpuOptionsOutput)
}

func (i *SpotInstanceRequestCpuOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestCpuOptionsArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestCpuOptionsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCpuOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCpuOptions)(nil)).Elem()
}

func (o SpotInstanceRequestCpuOptionsOutput) ToSpotInstanceRequestCpuOptionsOutput() SpotInstanceRequestCpuOptionsOutput {
	return o
}

func (o SpotInstanceRequestCpuOptionsOutput) ToSpotInstanceRequestCpuOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestCpuOptionsOutput {
	return o
}

func (o SpotInstanceRequestCpuOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestCpuOptions] {
	return pulumix.Output[SpotInstanceRequestCpuOptions]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
func (o SpotInstanceRequestCpuOptionsOutput) AmdSevSnp() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestCpuOptions](o, func(v SpotInstanceRequestCpuOptions) *string { return v.AmdSevSnp })
}

// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
func (o SpotInstanceRequestCpuOptionsOutput) CoreCount() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestCpuOptions](o, func(v SpotInstanceRequestCpuOptions) *int { return v.CoreCount })
}

// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
//
// For more information, see the documentation on [Optimizing CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html).
func (o SpotInstanceRequestCpuOptionsOutput) ThreadsPerCore() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestCpuOptions](o, func(v SpotInstanceRequestCpuOptions) *int { return v.ThreadsPerCore })
}

type SpotInstanceRequestCreditSpecification struct {
	// Credit option for CPU usage. Valid values include `standard` or `unlimited`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type SpotInstanceRequestCreditSpecificationArgs struct {
	// Credit option for CPU usage. Valid values include `standard` or `unlimited`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumix.Input[*string] `pulumi:"cpuCredits"`
}

func (SpotInstanceRequestCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput {
	return i.ToSpotInstanceRequestCreditSpecificationOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationOutput)
}

func (i *SpotInstanceRequestCreditSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestCreditSpecificationArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestCreditSpecificationOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestCreditSpecification] {
	return pulumix.Output[SpotInstanceRequestCreditSpecification]{
		OutputState: o.OutputState,
	}
}

// Credit option for CPU usage. Valid values include `standard` or `unlimited`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationOutput) CpuCredits() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestCreditSpecification](o, func(v SpotInstanceRequestCreditSpecification) *string { return v.CpuCredits })
}

type SpotInstanceRequestEbsBlockDevice struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `true`.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume. Defaults to `false`. Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	// Map of tags to assign to the device.
	Tags map[string]string `pulumi:"tags"`
	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
	Throughput *int    `pulumi:"throughput"`
	VolumeId   *string `pulumi:"volumeId"`
	// Size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
	//
	// > **NOTE:** Currently, changes to the `ebsBlockDevice` configuration of _existing_ resources cannot be automatically detected by this provider. To manage changes and attachments of an EBS block to an instance, use the `ebs.Volume` and `ec2.VolumeAttachment` resources instead. If you use `ebsBlockDevice` on an `ec2.Instance`, this provider will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebsBlockDevice` cannot be mixed with external `ebs.Volume` and `ec2.VolumeAttachment` resources for a given instance.
	VolumeType *string `pulumi:"volumeType"`
}

type SpotInstanceRequestEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `true`.
	DeleteOnTermination pulumix.Input[*bool] `pulumi:"deleteOnTermination"`
	// Name of the device to mount.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume. Defaults to `false`. Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumix.Input[*bool] `pulumi:"encrypted"`
	// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
	Iops pulumix.Input[*int] `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// Snapshot ID to mount.
	SnapshotId pulumix.Input[*string] `pulumi:"snapshotId"`
	// Map of tags to assign to the device.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
	Throughput pulumix.Input[*int]    `pulumi:"throughput"`
	VolumeId   pulumix.Input[*string] `pulumi:"volumeId"`
	// Size of the volume in gibibytes (GiB).
	VolumeSize pulumix.Input[*int] `pulumi:"volumeSize"`
	// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
	//
	// > **NOTE:** Currently, changes to the `ebsBlockDevice` configuration of _existing_ resources cannot be automatically detected by this provider. To manage changes and attachments of an EBS block to an instance, use the `ebs.Volume` and `ec2.VolumeAttachment` resources instead. If you use `ebsBlockDevice` on an `ec2.Instance`, this provider will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebsBlockDevice` cannot be mixed with external `ebs.Volume` and `ec2.VolumeAttachment` resources for a given instance.
	VolumeType pulumix.Input[*string] `pulumi:"volumeType"`
}

func (SpotInstanceRequestEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceOutput)
}

func (i *SpotInstanceRequestEbsBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestEbsBlockDeviceArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestEbsBlockDevice] {
	return pulumix.Output[SpotInstanceRequestEbsBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Whether the volume should be destroyed on instance termination. Defaults to `true`.
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) *bool { return v.DeleteOnTermination })
}

// Name of the device to mount.
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) string { return v.DeviceName })
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume. Defaults to `false`. Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) *bool { return v.Encrypted })
}

// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) *int { return v.Iops })
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) *string { return v.KmsKeyId })
}

// Snapshot ID to mount.
func (o SpotInstanceRequestEbsBlockDeviceOutput) SnapshotId() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) *string { return v.SnapshotId })
}

// Map of tags to assign to the device.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) *int { return v.Throughput })
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeId() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) *string { return v.VolumeId })
}

// Size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) *int { return v.VolumeSize })
}

// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
//
// > **NOTE:** Currently, changes to the `ebsBlockDevice` configuration of _existing_ resources cannot be automatically detected by this provider. To manage changes and attachments of an EBS block to an instance, use the `ebs.Volume` and `ec2.VolumeAttachment` resources instead. If you use `ebsBlockDevice` on an `ec2.Instance`, this provider will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebsBlockDevice` cannot be mixed with external `ebs.Volume` and `ec2.VolumeAttachment` resources for a given instance.
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestEbsBlockDevice](o, func(v SpotInstanceRequestEbsBlockDevice) *string { return v.VolumeType })
}

type SpotInstanceRequestEnclaveOptions struct {
	// Whether Nitro Enclaves will be enabled on the instance. Defaults to `false`.
	//
	// For more information, see the documentation on [Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html).
	Enabled *bool `pulumi:"enabled"`
}

type SpotInstanceRequestEnclaveOptionsArgs struct {
	// Whether Nitro Enclaves will be enabled on the instance. Defaults to `false`.
	//
	// For more information, see the documentation on [Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html).
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (SpotInstanceRequestEnclaveOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEnclaveOptions)(nil)).Elem()
}

func (i SpotInstanceRequestEnclaveOptionsArgs) ToSpotInstanceRequestEnclaveOptionsOutput() SpotInstanceRequestEnclaveOptionsOutput {
	return i.ToSpotInstanceRequestEnclaveOptionsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEnclaveOptionsArgs) ToSpotInstanceRequestEnclaveOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestEnclaveOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEnclaveOptionsOutput)
}

func (i *SpotInstanceRequestEnclaveOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestEnclaveOptionsArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestEnclaveOptionsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEnclaveOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEnclaveOptions)(nil)).Elem()
}

func (o SpotInstanceRequestEnclaveOptionsOutput) ToSpotInstanceRequestEnclaveOptionsOutput() SpotInstanceRequestEnclaveOptionsOutput {
	return o
}

func (o SpotInstanceRequestEnclaveOptionsOutput) ToSpotInstanceRequestEnclaveOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestEnclaveOptionsOutput {
	return o
}

func (o SpotInstanceRequestEnclaveOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestEnclaveOptions] {
	return pulumix.Output[SpotInstanceRequestEnclaveOptions]{
		OutputState: o.OutputState,
	}
}

// Whether Nitro Enclaves will be enabled on the instance. Defaults to `false`.
//
// For more information, see the documentation on [Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html).
func (o SpotInstanceRequestEnclaveOptionsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[SpotInstanceRequestEnclaveOptions](o, func(v SpotInstanceRequestEnclaveOptions) *bool { return v.Enabled })
}

type SpotInstanceRequestEphemeralBlockDevice struct {
	// Name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// [Instance Store Device Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames) (e.g., `ephemeral0`).
	//
	// Each AWS Instance type has a different set of Instance Store block devices available for attachment. AWS [publishes a list](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes) of which ephemeral devices are available on each type. The devices are always identified by the `virtualName` in the format `ephemeral{0..N}`.
	VirtualName *string `pulumi:"virtualName"`
}

type SpotInstanceRequestEphemeralBlockDeviceArgs struct {
	// Name of the block device to mount on the instance.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumix.Input[*bool] `pulumi:"noDevice"`
	// [Instance Store Device Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames) (e.g., `ephemeral0`).
	//
	// Each AWS Instance type has a different set of Instance Store block devices available for attachment. AWS [publishes a list](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes) of which ephemeral devices are available on each type. The devices are always identified by the `virtualName` in the format `ephemeral{0..N}`.
	VirtualName pulumix.Input[*string] `pulumi:"virtualName"`
}

func (SpotInstanceRequestEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgs) ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgs) ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceOutput)
}

func (i *SpotInstanceRequestEphemeralBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestEphemeralBlockDeviceArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceOutput) ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceOutput) ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestEphemeralBlockDevice] {
	return pulumix.Output[SpotInstanceRequestEphemeralBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Name of the block device to mount on the instance.
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[SpotInstanceRequestEphemeralBlockDevice](o, func(v SpotInstanceRequestEphemeralBlockDevice) string { return v.DeviceName })
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) NoDevice() pulumix.Output[*bool] {
	return pulumix.Apply[SpotInstanceRequestEphemeralBlockDevice](o, func(v SpotInstanceRequestEphemeralBlockDevice) *bool { return v.NoDevice })
}

// [Instance Store Device Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames) (e.g., `ephemeral0`).
//
// Each AWS Instance type has a different set of Instance Store block devices available for attachment. AWS [publishes a list](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes) of which ephemeral devices are available on each type. The devices are always identified by the `virtualName` in the format `ephemeral{0..N}`.
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) VirtualName() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestEphemeralBlockDevice](o, func(v SpotInstanceRequestEphemeralBlockDevice) *string { return v.VirtualName })
}

type SpotInstanceRequestLaunchTemplate struct {
	// ID of the launch template. Conflicts with `name`.
	Id *string `pulumi:"id"`
	// Name of the launch template. Conflicts with `id`.
	Name *string `pulumi:"name"`
	// Template version. Can be a specific version number, `$Latest` or `$Default`. The default value is `$Default`.
	Version *string `pulumi:"version"`
}

type SpotInstanceRequestLaunchTemplateArgs struct {
	// ID of the launch template. Conflicts with `name`.
	Id pulumix.Input[*string] `pulumi:"id"`
	// Name of the launch template. Conflicts with `id`.
	Name pulumix.Input[*string] `pulumi:"name"`
	// Template version. Can be a specific version number, `$Latest` or `$Default`. The default value is `$Default`.
	Version pulumix.Input[*string] `pulumi:"version"`
}

func (SpotInstanceRequestLaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestLaunchTemplate)(nil)).Elem()
}

func (i SpotInstanceRequestLaunchTemplateArgs) ToSpotInstanceRequestLaunchTemplateOutput() SpotInstanceRequestLaunchTemplateOutput {
	return i.ToSpotInstanceRequestLaunchTemplateOutputWithContext(context.Background())
}

func (i SpotInstanceRequestLaunchTemplateArgs) ToSpotInstanceRequestLaunchTemplateOutputWithContext(ctx context.Context) SpotInstanceRequestLaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestLaunchTemplateOutput)
}

func (i *SpotInstanceRequestLaunchTemplateArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestLaunchTemplateArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestLaunchTemplateOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestLaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestLaunchTemplate)(nil)).Elem()
}

func (o SpotInstanceRequestLaunchTemplateOutput) ToSpotInstanceRequestLaunchTemplateOutput() SpotInstanceRequestLaunchTemplateOutput {
	return o
}

func (o SpotInstanceRequestLaunchTemplateOutput) ToSpotInstanceRequestLaunchTemplateOutputWithContext(ctx context.Context) SpotInstanceRequestLaunchTemplateOutput {
	return o
}

func (o SpotInstanceRequestLaunchTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestLaunchTemplate] {
	return pulumix.Output[SpotInstanceRequestLaunchTemplate]{
		OutputState: o.OutputState,
	}
}

// ID of the launch template. Conflicts with `name`.
func (o SpotInstanceRequestLaunchTemplateOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestLaunchTemplate](o, func(v SpotInstanceRequestLaunchTemplate) *string { return v.Id })
}

// Name of the launch template. Conflicts with `id`.
func (o SpotInstanceRequestLaunchTemplateOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestLaunchTemplate](o, func(v SpotInstanceRequestLaunchTemplate) *string { return v.Name })
}

// Template version. Can be a specific version number, `$Latest` or `$Default`. The default value is `$Default`.
func (o SpotInstanceRequestLaunchTemplateOutput) Version() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestLaunchTemplate](o, func(v SpotInstanceRequestLaunchTemplate) *string { return v.Version })
}

type SpotInstanceRequestMaintenanceOptions struct {
	// Automatic recovery behavior of the Instance. Can be `"default"` or `"disabled"`. See [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html) for more details.
	AutoRecovery *string `pulumi:"autoRecovery"`
}

type SpotInstanceRequestMaintenanceOptionsArgs struct {
	// Automatic recovery behavior of the Instance. Can be `"default"` or `"disabled"`. See [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html) for more details.
	AutoRecovery pulumix.Input[*string] `pulumi:"autoRecovery"`
}

func (SpotInstanceRequestMaintenanceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMaintenanceOptions)(nil)).Elem()
}

func (i SpotInstanceRequestMaintenanceOptionsArgs) ToSpotInstanceRequestMaintenanceOptionsOutput() SpotInstanceRequestMaintenanceOptionsOutput {
	return i.ToSpotInstanceRequestMaintenanceOptionsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMaintenanceOptionsArgs) ToSpotInstanceRequestMaintenanceOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMaintenanceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMaintenanceOptionsOutput)
}

func (i *SpotInstanceRequestMaintenanceOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestMaintenanceOptionsArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestMaintenanceOptionsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMaintenanceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMaintenanceOptions)(nil)).Elem()
}

func (o SpotInstanceRequestMaintenanceOptionsOutput) ToSpotInstanceRequestMaintenanceOptionsOutput() SpotInstanceRequestMaintenanceOptionsOutput {
	return o
}

func (o SpotInstanceRequestMaintenanceOptionsOutput) ToSpotInstanceRequestMaintenanceOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMaintenanceOptionsOutput {
	return o
}

func (o SpotInstanceRequestMaintenanceOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestMaintenanceOptions] {
	return pulumix.Output[SpotInstanceRequestMaintenanceOptions]{
		OutputState: o.OutputState,
	}
}

// Automatic recovery behavior of the Instance. Can be `"default"` or `"disabled"`. See [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html) for more details.
func (o SpotInstanceRequestMaintenanceOptionsOutput) AutoRecovery() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestMaintenanceOptions](o, func(v SpotInstanceRequestMaintenanceOptions) *string { return v.AutoRecovery })
}

type SpotInstanceRequestMetadataOptions struct {
	// Whether the metadata service is available. Valid values include `enabled` or `disabled`. Defaults to `enabled`.
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to `disabled`.
	HttpProtocolIpv6 *string `pulumi:"httpProtocolIpv6"`
	// Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from `1` to `64`. Defaults to `1`.
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Valid values include `optional` or `required`. Defaults to `optional`.
	HttpTokens *string `pulumi:"httpTokens"`
	// Enables or disables access to instance tags from the instance metadata service. Valid values include `enabled` or `disabled`. Defaults to `disabled`.
	//
	// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
	InstanceMetadataTags *string `pulumi:"instanceMetadataTags"`
}

type SpotInstanceRequestMetadataOptionsArgs struct {
	// Whether the metadata service is available. Valid values include `enabled` or `disabled`. Defaults to `enabled`.
	HttpEndpoint pulumix.Input[*string] `pulumi:"httpEndpoint"`
	// Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to `disabled`.
	HttpProtocolIpv6 pulumix.Input[*string] `pulumi:"httpProtocolIpv6"`
	// Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from `1` to `64`. Defaults to `1`.
	HttpPutResponseHopLimit pulumix.Input[*int] `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Valid values include `optional` or `required`. Defaults to `optional`.
	HttpTokens pulumix.Input[*string] `pulumi:"httpTokens"`
	// Enables or disables access to instance tags from the instance metadata service. Valid values include `enabled` or `disabled`. Defaults to `disabled`.
	//
	// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
	InstanceMetadataTags pulumix.Input[*string] `pulumi:"instanceMetadataTags"`
}

func (SpotInstanceRequestMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput {
	return i.ToSpotInstanceRequestMetadataOptionsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsOutput)
}

func (i *SpotInstanceRequestMetadataOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestMetadataOptionsArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestMetadataOptionsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestMetadataOptions] {
	return pulumix.Output[SpotInstanceRequestMetadataOptions]{
		OutputState: o.OutputState,
	}
}

// Whether the metadata service is available. Valid values include `enabled` or `disabled`. Defaults to `enabled`.
func (o SpotInstanceRequestMetadataOptionsOutput) HttpEndpoint() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestMetadataOptions](o, func(v SpotInstanceRequestMetadataOptions) *string { return v.HttpEndpoint })
}

// Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to `disabled`.
func (o SpotInstanceRequestMetadataOptionsOutput) HttpProtocolIpv6() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestMetadataOptions](o, func(v SpotInstanceRequestMetadataOptions) *string { return v.HttpProtocolIpv6 })
}

// Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from `1` to `64`. Defaults to `1`.
func (o SpotInstanceRequestMetadataOptionsOutput) HttpPutResponseHopLimit() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestMetadataOptions](o, func(v SpotInstanceRequestMetadataOptions) *int { return v.HttpPutResponseHopLimit })
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Valid values include `optional` or `required`. Defaults to `optional`.
func (o SpotInstanceRequestMetadataOptionsOutput) HttpTokens() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestMetadataOptions](o, func(v SpotInstanceRequestMetadataOptions) *string { return v.HttpTokens })
}

// Enables or disables access to instance tags from the instance metadata service. Valid values include `enabled` or `disabled`. Defaults to `disabled`.
//
// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
func (o SpotInstanceRequestMetadataOptionsOutput) InstanceMetadataTags() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestMetadataOptions](o, func(v SpotInstanceRequestMetadataOptions) *string { return v.InstanceMetadataTags })
}

type SpotInstanceRequestNetworkInterface struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// Integer index of the network card. Limited by instance type. The default index is `0`.
	NetworkCardIndex *int `pulumi:"networkCardIndex"`
	// ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type SpotInstanceRequestNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumix.Input[*bool] `pulumi:"deleteOnTermination"`
	// Integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumix.Input[int] `pulumi:"deviceIndex"`
	// Integer index of the network card. Limited by instance type. The default index is `0`.
	NetworkCardIndex pulumix.Input[*int] `pulumi:"networkCardIndex"`
	// ID of the network interface to attach.
	NetworkInterfaceId pulumix.Input[string] `pulumi:"networkInterfaceId"`
}

func (SpotInstanceRequestNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceArgs) ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceArgs) ToSpotInstanceRequestNetworkInterfaceOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceOutput)
}

func (i *SpotInstanceRequestNetworkInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestNetworkInterfaceArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceOutput) ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceOutput) ToSpotInstanceRequestNetworkInterfaceOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestNetworkInterface] {
	return pulumix.Output[SpotInstanceRequestNetworkInterface]{
		OutputState: o.OutputState,
	}
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o SpotInstanceRequestNetworkInterfaceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[SpotInstanceRequestNetworkInterface](o, func(v SpotInstanceRequestNetworkInterface) *bool { return v.DeleteOnTermination })
}

// Integer index of the network interface attachment. Limited by instance type.
func (o SpotInstanceRequestNetworkInterfaceOutput) DeviceIndex() pulumix.Output[int] {
	return pulumix.Apply[SpotInstanceRequestNetworkInterface](o, func(v SpotInstanceRequestNetworkInterface) int { return v.DeviceIndex })
}

// Integer index of the network card. Limited by instance type. The default index is `0`.
func (o SpotInstanceRequestNetworkInterfaceOutput) NetworkCardIndex() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestNetworkInterface](o, func(v SpotInstanceRequestNetworkInterface) *int { return v.NetworkCardIndex })
}

// ID of the network interface to attach.
func (o SpotInstanceRequestNetworkInterfaceOutput) NetworkInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[SpotInstanceRequestNetworkInterface](o, func(v SpotInstanceRequestNetworkInterface) string { return v.NetworkInterfaceId })
}

type SpotInstanceRequestPrivateDnsNameOptions struct {
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	EnableResourceNameDnsARecord *bool `pulumi:"enableResourceNameDnsARecord"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	EnableResourceNameDnsAaaaRecord *bool `pulumi:"enableResourceNameDnsAaaaRecord"`
	// Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
	HostnameType *string `pulumi:"hostnameType"`
}

type SpotInstanceRequestPrivateDnsNameOptionsArgs struct {
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	EnableResourceNameDnsARecord pulumix.Input[*bool] `pulumi:"enableResourceNameDnsARecord"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	EnableResourceNameDnsAaaaRecord pulumix.Input[*bool] `pulumi:"enableResourceNameDnsAaaaRecord"`
	// Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
	HostnameType pulumix.Input[*string] `pulumi:"hostnameType"`
}

func (SpotInstanceRequestPrivateDnsNameOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestPrivateDnsNameOptions)(nil)).Elem()
}

func (i SpotInstanceRequestPrivateDnsNameOptionsArgs) ToSpotInstanceRequestPrivateDnsNameOptionsOutput() SpotInstanceRequestPrivateDnsNameOptionsOutput {
	return i.ToSpotInstanceRequestPrivateDnsNameOptionsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestPrivateDnsNameOptionsArgs) ToSpotInstanceRequestPrivateDnsNameOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestPrivateDnsNameOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestPrivateDnsNameOptionsOutput)
}

func (i *SpotInstanceRequestPrivateDnsNameOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestPrivateDnsNameOptionsArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestPrivateDnsNameOptionsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestPrivateDnsNameOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestPrivateDnsNameOptions)(nil)).Elem()
}

func (o SpotInstanceRequestPrivateDnsNameOptionsOutput) ToSpotInstanceRequestPrivateDnsNameOptionsOutput() SpotInstanceRequestPrivateDnsNameOptionsOutput {
	return o
}

func (o SpotInstanceRequestPrivateDnsNameOptionsOutput) ToSpotInstanceRequestPrivateDnsNameOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestPrivateDnsNameOptionsOutput {
	return o
}

func (o SpotInstanceRequestPrivateDnsNameOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestPrivateDnsNameOptions] {
	return pulumix.Output[SpotInstanceRequestPrivateDnsNameOptions]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
func (o SpotInstanceRequestPrivateDnsNameOptionsOutput) EnableResourceNameDnsARecord() pulumix.Output[*bool] {
	return pulumix.Apply[SpotInstanceRequestPrivateDnsNameOptions](o, func(v SpotInstanceRequestPrivateDnsNameOptions) *bool { return v.EnableResourceNameDnsARecord })
}

// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
func (o SpotInstanceRequestPrivateDnsNameOptionsOutput) EnableResourceNameDnsAaaaRecord() pulumix.Output[*bool] {
	return pulumix.Apply[SpotInstanceRequestPrivateDnsNameOptions](o, func(v SpotInstanceRequestPrivateDnsNameOptions) *bool { return v.EnableResourceNameDnsAaaaRecord })
}

// Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
func (o SpotInstanceRequestPrivateDnsNameOptionsOutput) HostnameType() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestPrivateDnsNameOptions](o, func(v SpotInstanceRequestPrivateDnsNameOptions) *string { return v.HostnameType })
}

type SpotInstanceRequestRootBlockDevice struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `true`.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Whether to enable volume encryption. Defaults to `false`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Map of tags to assign to the device.
	Tags map[string]string `pulumi:"tags"`
	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
	Throughput *int    `pulumi:"throughput"`
	VolumeId   *string `pulumi:"volumeId"`
	// Size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
	//
	// Modifying the `encrypted` or `kmsKeyId` settings of the `rootBlockDevice` requires resource replacement.
	VolumeType *string `pulumi:"volumeType"`
}

type SpotInstanceRequestRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `true`.
	DeleteOnTermination pulumix.Input[*bool] `pulumi:"deleteOnTermination"`
	// Name of the device to mount.
	DeviceName pulumix.Input[*string] `pulumi:"deviceName"`
	// Whether to enable volume encryption. Defaults to `false`. Must be configured to perform drift detection.
	Encrypted pulumix.Input[*bool] `pulumi:"encrypted"`
	// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
	Iops pulumix.Input[*int] `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumix.Input[*string] `pulumi:"kmsKeyId"`
	// Map of tags to assign to the device.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
	Throughput pulumix.Input[*int]    `pulumi:"throughput"`
	VolumeId   pulumix.Input[*string] `pulumi:"volumeId"`
	// Size of the volume in gibibytes (GiB).
	VolumeSize pulumix.Input[*int] `pulumi:"volumeSize"`
	// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
	//
	// Modifying the `encrypted` or `kmsKeyId` settings of the `rootBlockDevice` requires resource replacement.
	VolumeType pulumix.Input[*string] `pulumi:"volumeType"`
}

func (SpotInstanceRequestRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput {
	return i.ToSpotInstanceRequestRootBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceOutput)
}

func (i *SpotInstanceRequestRootBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*SpotInstanceRequestRootBlockDeviceArgs] {
	return pulumix.Val(i)
}

type SpotInstanceRequestRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[SpotInstanceRequestRootBlockDevice] {
	return pulumix.Output[SpotInstanceRequestRootBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Whether the volume should be destroyed on instance termination. Defaults to `true`.
func (o SpotInstanceRequestRootBlockDeviceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) *bool { return v.DeleteOnTermination })
}

// Name of the device to mount.
func (o SpotInstanceRequestRootBlockDeviceOutput) DeviceName() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) *string { return v.DeviceName })
}

// Whether to enable volume encryption. Defaults to `false`. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceOutput) Encrypted() pulumix.Output[*bool] {
	return pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) *bool { return v.Encrypted })
}

// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volumeType of `io1`, `io2` or `gp3`.
func (o SpotInstanceRequestRootBlockDeviceOutput) Iops() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) *int { return v.Iops })
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceOutput) KmsKeyId() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) *string { return v.KmsKeyId })
}

// Map of tags to assign to the device.
func (o SpotInstanceRequestRootBlockDeviceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volumeType` of `gp3`.
func (o SpotInstanceRequestRootBlockDeviceOutput) Throughput() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) *int { return v.Throughput })
}

func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeId() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) *string { return v.VolumeId })
}

// Size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeSize() pulumix.Output[*int] {
	return pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) *int { return v.VolumeSize })
}

// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
//
// Modifying the `encrypted` or `kmsKeyId` settings of the `rootBlockDevice` requires resource replacement.
func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeType() pulumix.Output[*string] {
	return pulumix.Apply[SpotInstanceRequestRootBlockDevice](o, func(v SpotInstanceRequestRootBlockDevice) *string { return v.VolumeType })
}

type TrafficMirrorFilterRuleDestinationPortRange struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

type TrafficMirrorFilterRuleDestinationPortRangeArgs struct {
	// Starting port of the range
	FromPort pulumix.Input[*int] `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumix.Input[*int] `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeOutput)
}

func (i *TrafficMirrorFilterRuleDestinationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*TrafficMirrorFilterRuleDestinationPortRangeArgs] {
	return pulumix.Val(i)
}

type TrafficMirrorFilterRuleDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[TrafficMirrorFilterRuleDestinationPortRange] {
	return pulumix.Output[TrafficMirrorFilterRuleDestinationPortRange]{
		OutputState: o.OutputState,
	}
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) FromPort() pulumix.Output[*int] {
	return pulumix.Apply[TrafficMirrorFilterRuleDestinationPortRange](o, func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.FromPort })
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToPort() pulumix.Output[*int] {
	return pulumix.Apply[TrafficMirrorFilterRuleDestinationPortRange](o, func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.ToPort })
}

type TrafficMirrorFilterRuleSourcePortRange struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

type TrafficMirrorFilterRuleSourcePortRangeArgs struct {
	// Starting port of the range
	FromPort pulumix.Input[*int] `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumix.Input[*int] `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeOutput)
}

func (i *TrafficMirrorFilterRuleSourcePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*TrafficMirrorFilterRuleSourcePortRangeArgs] {
	return pulumix.Val(i)
}

type TrafficMirrorFilterRuleSourcePortRangeOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[TrafficMirrorFilterRuleSourcePortRange] {
	return pulumix.Output[TrafficMirrorFilterRuleSourcePortRange]{
		OutputState: o.OutputState,
	}
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeOutput) FromPort() pulumix.Output[*int] {
	return pulumix.Apply[TrafficMirrorFilterRuleSourcePortRange](o, func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.FromPort })
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToPort() pulumix.Output[*int] {
	return pulumix.Apply[TrafficMirrorFilterRuleSourcePortRange](o, func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.ToPort })
}

type VpcEndpointDnsEntry struct {
	// The DNS name.
	DnsName *string `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId *string `pulumi:"hostedZoneId"`
}

type VpcEndpointDnsEntryArgs struct {
	// The DNS name.
	DnsName pulumix.Input[*string] `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId pulumix.Input[*string] `pulumi:"hostedZoneId"`
}

func (VpcEndpointDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntry)(nil)).Elem()
}

func (i VpcEndpointDnsEntryArgs) ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput {
	return i.ToVpcEndpointDnsEntryOutputWithContext(context.Background())
}

func (i VpcEndpointDnsEntryArgs) ToVpcEndpointDnsEntryOutputWithContext(ctx context.Context) VpcEndpointDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsEntryOutput)
}

func (i *VpcEndpointDnsEntryArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcEndpointDnsEntryArgs] {
	return pulumix.Val(i)
}

type VpcEndpointDnsEntryOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntry)(nil)).Elem()
}

func (o VpcEndpointDnsEntryOutput) ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput {
	return o
}

func (o VpcEndpointDnsEntryOutput) ToVpcEndpointDnsEntryOutputWithContext(ctx context.Context) VpcEndpointDnsEntryOutput {
	return o
}

func (o VpcEndpointDnsEntryOutput) ToOutput(ctx context.Context) pulumix.Output[VpcEndpointDnsEntry] {
	return pulumix.Output[VpcEndpointDnsEntry]{
		OutputState: o.OutputState,
	}
}

// The DNS name.
func (o VpcEndpointDnsEntryOutput) DnsName() pulumix.Output[*string] {
	return pulumix.Apply[VpcEndpointDnsEntry](o, func(v VpcEndpointDnsEntry) *string { return v.DnsName })
}

// The ID of the private hosted zone.
func (o VpcEndpointDnsEntryOutput) HostedZoneId() pulumix.Output[*string] {
	return pulumix.Apply[VpcEndpointDnsEntry](o, func(v VpcEndpointDnsEntry) *string { return v.HostedZoneId })
}

type VpcEndpointDnsOptions struct {
	// The DNS records created for the endpoint. Valid values are `ipv4`, `dualstack`, `service-defined`, and `ipv6`.
	DnsRecordIpType *string `pulumi:"dnsRecordIpType"`
	// Indicates whether to enable private DNS only for inbound endpoints. This option is available only for services that support both gateway and interface endpoints. It routes traffic that originates from the VPC to the gateway endpoint and traffic that originates from on-premises to the interface endpoint. Default is `false`. Can only be specified if privateDnsEnabled is `true`.
	PrivateDnsOnlyForInboundResolverEndpoint *bool `pulumi:"privateDnsOnlyForInboundResolverEndpoint"`
}

type VpcEndpointDnsOptionsArgs struct {
	// The DNS records created for the endpoint. Valid values are `ipv4`, `dualstack`, `service-defined`, and `ipv6`.
	DnsRecordIpType pulumix.Input[*string] `pulumi:"dnsRecordIpType"`
	// Indicates whether to enable private DNS only for inbound endpoints. This option is available only for services that support both gateway and interface endpoints. It routes traffic that originates from the VPC to the gateway endpoint and traffic that originates from on-premises to the interface endpoint. Default is `false`. Can only be specified if privateDnsEnabled is `true`.
	PrivateDnsOnlyForInboundResolverEndpoint pulumix.Input[*bool] `pulumi:"privateDnsOnlyForInboundResolverEndpoint"`
}

func (VpcEndpointDnsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsOptions)(nil)).Elem()
}

func (i VpcEndpointDnsOptionsArgs) ToVpcEndpointDnsOptionsOutput() VpcEndpointDnsOptionsOutput {
	return i.ToVpcEndpointDnsOptionsOutputWithContext(context.Background())
}

func (i VpcEndpointDnsOptionsArgs) ToVpcEndpointDnsOptionsOutputWithContext(ctx context.Context) VpcEndpointDnsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsOptionsOutput)
}

func (i *VpcEndpointDnsOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcEndpointDnsOptionsArgs] {
	return pulumix.Val(i)
}

type VpcEndpointDnsOptionsOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsOptions)(nil)).Elem()
}

func (o VpcEndpointDnsOptionsOutput) ToVpcEndpointDnsOptionsOutput() VpcEndpointDnsOptionsOutput {
	return o
}

func (o VpcEndpointDnsOptionsOutput) ToVpcEndpointDnsOptionsOutputWithContext(ctx context.Context) VpcEndpointDnsOptionsOutput {
	return o
}

func (o VpcEndpointDnsOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[VpcEndpointDnsOptions] {
	return pulumix.Output[VpcEndpointDnsOptions]{
		OutputState: o.OutputState,
	}
}

// The DNS records created for the endpoint. Valid values are `ipv4`, `dualstack`, `service-defined`, and `ipv6`.
func (o VpcEndpointDnsOptionsOutput) DnsRecordIpType() pulumix.Output[*string] {
	return pulumix.Apply[VpcEndpointDnsOptions](o, func(v VpcEndpointDnsOptions) *string { return v.DnsRecordIpType })
}

// Indicates whether to enable private DNS only for inbound endpoints. This option is available only for services that support both gateway and interface endpoints. It routes traffic that originates from the VPC to the gateway endpoint and traffic that originates from on-premises to the interface endpoint. Default is `false`. Can only be specified if privateDnsEnabled is `true`.
func (o VpcEndpointDnsOptionsOutput) PrivateDnsOnlyForInboundResolverEndpoint() pulumix.Output[*bool] {
	return pulumix.Apply[VpcEndpointDnsOptions](o, func(v VpcEndpointDnsOptions) *bool { return v.PrivateDnsOnlyForInboundResolverEndpoint })
}

type VpcEndpointServicePrivateDnsNameConfiguration struct {
	// Name of the record subdomain the service provider needs to create.
	Name *string `pulumi:"name"`
	// Verification state of the VPC endpoint service. Consumers of the endpoint service can use the private name only when the state is `verified`.
	State *string `pulumi:"state"`
	// Endpoint service verification type, for example `TXT`.
	Type *string `pulumi:"type"`
	// Value the service provider adds to the private DNS name domain record before verification.
	Value *string `pulumi:"value"`
}

type VpcEndpointServicePrivateDnsNameConfigurationArgs struct {
	// Name of the record subdomain the service provider needs to create.
	Name pulumix.Input[*string] `pulumi:"name"`
	// Verification state of the VPC endpoint service. Consumers of the endpoint service can use the private name only when the state is `verified`.
	State pulumix.Input[*string] `pulumi:"state"`
	// Endpoint service verification type, for example `TXT`.
	Type pulumix.Input[*string] `pulumi:"type"`
	// Value the service provider adds to the private DNS name domain record before verification.
	Value pulumix.Input[*string] `pulumi:"value"`
}

func (VpcEndpointServicePrivateDnsNameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointServicePrivateDnsNameConfiguration)(nil)).Elem()
}

func (i VpcEndpointServicePrivateDnsNameConfigurationArgs) ToVpcEndpointServicePrivateDnsNameConfigurationOutput() VpcEndpointServicePrivateDnsNameConfigurationOutput {
	return i.ToVpcEndpointServicePrivateDnsNameConfigurationOutputWithContext(context.Background())
}

func (i VpcEndpointServicePrivateDnsNameConfigurationArgs) ToVpcEndpointServicePrivateDnsNameConfigurationOutputWithContext(ctx context.Context) VpcEndpointServicePrivateDnsNameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointServicePrivateDnsNameConfigurationOutput)
}

func (i *VpcEndpointServicePrivateDnsNameConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcEndpointServicePrivateDnsNameConfigurationArgs] {
	return pulumix.Val(i)
}

type VpcEndpointServicePrivateDnsNameConfigurationOutput struct{ *pulumi.OutputState }

func (VpcEndpointServicePrivateDnsNameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointServicePrivateDnsNameConfiguration)(nil)).Elem()
}

func (o VpcEndpointServicePrivateDnsNameConfigurationOutput) ToVpcEndpointServicePrivateDnsNameConfigurationOutput() VpcEndpointServicePrivateDnsNameConfigurationOutput {
	return o
}

func (o VpcEndpointServicePrivateDnsNameConfigurationOutput) ToVpcEndpointServicePrivateDnsNameConfigurationOutputWithContext(ctx context.Context) VpcEndpointServicePrivateDnsNameConfigurationOutput {
	return o
}

func (o VpcEndpointServicePrivateDnsNameConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[VpcEndpointServicePrivateDnsNameConfiguration] {
	return pulumix.Output[VpcEndpointServicePrivateDnsNameConfiguration]{
		OutputState: o.OutputState,
	}
}

// Name of the record subdomain the service provider needs to create.
func (o VpcEndpointServicePrivateDnsNameConfigurationOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[VpcEndpointServicePrivateDnsNameConfiguration](o, func(v VpcEndpointServicePrivateDnsNameConfiguration) *string { return v.Name })
}

// Verification state of the VPC endpoint service. Consumers of the endpoint service can use the private name only when the state is `verified`.
func (o VpcEndpointServicePrivateDnsNameConfigurationOutput) State() pulumix.Output[*string] {
	return pulumix.Apply[VpcEndpointServicePrivateDnsNameConfiguration](o, func(v VpcEndpointServicePrivateDnsNameConfiguration) *string { return v.State })
}

// Endpoint service verification type, for example `TXT`.
func (o VpcEndpointServicePrivateDnsNameConfigurationOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[VpcEndpointServicePrivateDnsNameConfiguration](o, func(v VpcEndpointServicePrivateDnsNameConfiguration) *string { return v.Type })
}

// Value the service provider adds to the private DNS name domain record before verification.
func (o VpcEndpointServicePrivateDnsNameConfigurationOutput) Value() pulumix.Output[*string] {
	return pulumix.Apply[VpcEndpointServicePrivateDnsNameConfiguration](o, func(v VpcEndpointServicePrivateDnsNameConfiguration) *string { return v.Value })
}

type VpcIpamOperatingRegion struct {
	// The name of the Region you want to add to the IPAM.
	RegionName string `pulumi:"regionName"`
}

type VpcIpamOperatingRegionArgs struct {
	// The name of the Region you want to add to the IPAM.
	RegionName pulumix.Input[string] `pulumi:"regionName"`
}

func (VpcIpamOperatingRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIpamOperatingRegion)(nil)).Elem()
}

func (i VpcIpamOperatingRegionArgs) ToVpcIpamOperatingRegionOutput() VpcIpamOperatingRegionOutput {
	return i.ToVpcIpamOperatingRegionOutputWithContext(context.Background())
}

func (i VpcIpamOperatingRegionArgs) ToVpcIpamOperatingRegionOutputWithContext(ctx context.Context) VpcIpamOperatingRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamOperatingRegionOutput)
}

func (i *VpcIpamOperatingRegionArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcIpamOperatingRegionArgs] {
	return pulumix.Val(i)
}

type VpcIpamOperatingRegionOutput struct{ *pulumi.OutputState }

func (VpcIpamOperatingRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIpamOperatingRegion)(nil)).Elem()
}

func (o VpcIpamOperatingRegionOutput) ToVpcIpamOperatingRegionOutput() VpcIpamOperatingRegionOutput {
	return o
}

func (o VpcIpamOperatingRegionOutput) ToVpcIpamOperatingRegionOutputWithContext(ctx context.Context) VpcIpamOperatingRegionOutput {
	return o
}

func (o VpcIpamOperatingRegionOutput) ToOutput(ctx context.Context) pulumix.Output[VpcIpamOperatingRegion] {
	return pulumix.Output[VpcIpamOperatingRegion]{
		OutputState: o.OutputState,
	}
}

// The name of the Region you want to add to the IPAM.
func (o VpcIpamOperatingRegionOutput) RegionName() pulumix.Output[string] {
	return pulumix.Apply[VpcIpamOperatingRegion](o, func(v VpcIpamOperatingRegion) string { return v.RegionName })
}

type VpcIpamPoolCidrCidrAuthorizationContext struct {
	// The plain-text authorization message for the prefix and account.
	Message *string `pulumi:"message"`
	// The signed authorization message for the prefix and account.
	Signature *string `pulumi:"signature"`
}

type VpcIpamPoolCidrCidrAuthorizationContextArgs struct {
	// The plain-text authorization message for the prefix and account.
	Message pulumix.Input[*string] `pulumi:"message"`
	// The signed authorization message for the prefix and account.
	Signature pulumix.Input[*string] `pulumi:"signature"`
}

func (VpcIpamPoolCidrCidrAuthorizationContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIpamPoolCidrCidrAuthorizationContext)(nil)).Elem()
}

func (i VpcIpamPoolCidrCidrAuthorizationContextArgs) ToVpcIpamPoolCidrCidrAuthorizationContextOutput() VpcIpamPoolCidrCidrAuthorizationContextOutput {
	return i.ToVpcIpamPoolCidrCidrAuthorizationContextOutputWithContext(context.Background())
}

func (i VpcIpamPoolCidrCidrAuthorizationContextArgs) ToVpcIpamPoolCidrCidrAuthorizationContextOutputWithContext(ctx context.Context) VpcIpamPoolCidrCidrAuthorizationContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamPoolCidrCidrAuthorizationContextOutput)
}

func (i *VpcIpamPoolCidrCidrAuthorizationContextArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcIpamPoolCidrCidrAuthorizationContextArgs] {
	return pulumix.Val(i)
}

type VpcIpamPoolCidrCidrAuthorizationContextOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolCidrCidrAuthorizationContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIpamPoolCidrCidrAuthorizationContext)(nil)).Elem()
}

func (o VpcIpamPoolCidrCidrAuthorizationContextOutput) ToVpcIpamPoolCidrCidrAuthorizationContextOutput() VpcIpamPoolCidrCidrAuthorizationContextOutput {
	return o
}

func (o VpcIpamPoolCidrCidrAuthorizationContextOutput) ToVpcIpamPoolCidrCidrAuthorizationContextOutputWithContext(ctx context.Context) VpcIpamPoolCidrCidrAuthorizationContextOutput {
	return o
}

func (o VpcIpamPoolCidrCidrAuthorizationContextOutput) ToOutput(ctx context.Context) pulumix.Output[VpcIpamPoolCidrCidrAuthorizationContext] {
	return pulumix.Output[VpcIpamPoolCidrCidrAuthorizationContext]{
		OutputState: o.OutputState,
	}
}

// The plain-text authorization message for the prefix and account.
func (o VpcIpamPoolCidrCidrAuthorizationContextOutput) Message() pulumix.Output[*string] {
	return pulumix.Apply[VpcIpamPoolCidrCidrAuthorizationContext](o, func(v VpcIpamPoolCidrCidrAuthorizationContext) *string { return v.Message })
}

// The signed authorization message for the prefix and account.
func (o VpcIpamPoolCidrCidrAuthorizationContextOutput) Signature() pulumix.Output[*string] {
	return pulumix.Apply[VpcIpamPoolCidrCidrAuthorizationContext](o, func(v VpcIpamPoolCidrCidrAuthorizationContext) *string { return v.Signature })
}

type VpcIpamResourceDiscoveryOperatingRegion struct {
	// The name of the Region you want to add to the IPAM.
	RegionName string `pulumi:"regionName"`
}

type VpcIpamResourceDiscoveryOperatingRegionArgs struct {
	// The name of the Region you want to add to the IPAM.
	RegionName pulumix.Input[string] `pulumi:"regionName"`
}

func (VpcIpamResourceDiscoveryOperatingRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIpamResourceDiscoveryOperatingRegion)(nil)).Elem()
}

func (i VpcIpamResourceDiscoveryOperatingRegionArgs) ToVpcIpamResourceDiscoveryOperatingRegionOutput() VpcIpamResourceDiscoveryOperatingRegionOutput {
	return i.ToVpcIpamResourceDiscoveryOperatingRegionOutputWithContext(context.Background())
}

func (i VpcIpamResourceDiscoveryOperatingRegionArgs) ToVpcIpamResourceDiscoveryOperatingRegionOutputWithContext(ctx context.Context) VpcIpamResourceDiscoveryOperatingRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIpamResourceDiscoveryOperatingRegionOutput)
}

func (i *VpcIpamResourceDiscoveryOperatingRegionArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcIpamResourceDiscoveryOperatingRegionArgs] {
	return pulumix.Val(i)
}

type VpcIpamResourceDiscoveryOperatingRegionOutput struct{ *pulumi.OutputState }

func (VpcIpamResourceDiscoveryOperatingRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIpamResourceDiscoveryOperatingRegion)(nil)).Elem()
}

func (o VpcIpamResourceDiscoveryOperatingRegionOutput) ToVpcIpamResourceDiscoveryOperatingRegionOutput() VpcIpamResourceDiscoveryOperatingRegionOutput {
	return o
}

func (o VpcIpamResourceDiscoveryOperatingRegionOutput) ToVpcIpamResourceDiscoveryOperatingRegionOutputWithContext(ctx context.Context) VpcIpamResourceDiscoveryOperatingRegionOutput {
	return o
}

func (o VpcIpamResourceDiscoveryOperatingRegionOutput) ToOutput(ctx context.Context) pulumix.Output[VpcIpamResourceDiscoveryOperatingRegion] {
	return pulumix.Output[VpcIpamResourceDiscoveryOperatingRegion]{
		OutputState: o.OutputState,
	}
}

// The name of the Region you want to add to the IPAM.
func (o VpcIpamResourceDiscoveryOperatingRegionOutput) RegionName() pulumix.Output[string] {
	return pulumix.Apply[VpcIpamResourceDiscoveryOperatingRegion](o, func(v VpcIpamResourceDiscoveryOperatingRegion) string { return v.RegionName })
}

type VpcPeeringConnectionAccepterType struct {
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
}

type VpcPeeringConnectionAccepterTypeArgs struct {
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumix.Input[*bool] `pulumi:"allowRemoteVpcDnsResolution"`
}

func (VpcPeeringConnectionAccepterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput {
	return i.ToVpcPeeringConnectionAccepterTypeOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypeOutput)
}

func (i *VpcPeeringConnectionAccepterTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcPeeringConnectionAccepterTypeArgs] {
	return pulumix.Val(i)
}

type VpcPeeringConnectionAccepterTypeOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToOutput(ctx context.Context) pulumix.Output[VpcPeeringConnectionAccepterType] {
	return pulumix.Output[VpcPeeringConnectionAccepterType]{
		OutputState: o.OutputState,
	}
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowRemoteVpcDnsResolution() pulumix.Output[*bool] {
	return pulumix.Apply[VpcPeeringConnectionAccepterType](o, func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowRemoteVpcDnsResolution })
}

type VpcPeeringConnectionAccepterAccepter struct {
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
}

type VpcPeeringConnectionAccepterAccepterArgs struct {
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumix.Input[*bool] `pulumi:"allowRemoteVpcDnsResolution"`
}

func (VpcPeeringConnectionAccepterAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterOutput)
}

func (i *VpcPeeringConnectionAccepterAccepterArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcPeeringConnectionAccepterAccepterArgs] {
	return pulumix.Val(i)
}

type VpcPeeringConnectionAccepterAccepterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToOutput(ctx context.Context) pulumix.Output[VpcPeeringConnectionAccepterAccepter] {
	return pulumix.Output[VpcPeeringConnectionAccepterAccepter]{
		OutputState: o.OutputState,
	}
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowRemoteVpcDnsResolution() pulumix.Output[*bool] {
	return pulumix.Apply[VpcPeeringConnectionAccepterAccepter](o, func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowRemoteVpcDnsResolution })
}

type VpcPeeringConnectionAccepterRequester struct {
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
}

type VpcPeeringConnectionAccepterRequesterArgs struct {
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumix.Input[*bool] `pulumi:"allowRemoteVpcDnsResolution"`
}

func (VpcPeeringConnectionAccepterRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterOutput)
}

func (i *VpcPeeringConnectionAccepterRequesterArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcPeeringConnectionAccepterRequesterArgs] {
	return pulumix.Val(i)
}

type VpcPeeringConnectionAccepterRequesterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToOutput(ctx context.Context) pulumix.Output[VpcPeeringConnectionAccepterRequester] {
	return pulumix.Output[VpcPeeringConnectionAccepterRequester]{
		OutputState: o.OutputState,
	}
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowRemoteVpcDnsResolution() pulumix.Output[*bool] {
	return pulumix.Apply[VpcPeeringConnectionAccepterRequester](o, func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowRemoteVpcDnsResolution })
}

type VpcPeeringConnectionRequester struct {
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
}

type VpcPeeringConnectionRequesterArgs struct {
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumix.Input[*bool] `pulumi:"allowRemoteVpcDnsResolution"`
}

func (VpcPeeringConnectionRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequester)(nil)).Elem()
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput {
	return i.ToVpcPeeringConnectionRequesterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterOutput)
}

func (i *VpcPeeringConnectionRequesterArgs) ToOutput(ctx context.Context) pulumix.Output[*VpcPeeringConnectionRequesterArgs] {
	return pulumix.Val(i)
}

type VpcPeeringConnectionRequesterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput {
	return o
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterOutput {
	return o
}

func (o VpcPeeringConnectionRequesterOutput) ToOutput(ctx context.Context) pulumix.Output[VpcPeeringConnectionRequester] {
	return pulumix.Output[VpcPeeringConnectionRequester]{
		OutputState: o.OutputState,
	}
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o VpcPeeringConnectionRequesterOutput) AllowRemoteVpcDnsResolution() pulumix.Output[*bool] {
	return pulumix.Apply[VpcPeeringConnectionRequester](o, func(v VpcPeeringConnectionRequester) *bool { return v.AllowRemoteVpcDnsResolution })
}

type VpnConnectionRouteType struct {
	// The CIDR block associated with the local subnet of the customer data center.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// Indicates how the routes were provided.
	Source *string `pulumi:"source"`
	// The current state of the static route.
	State *string `pulumi:"state"`
}

type VpnConnectionRouteTypeArgs struct {
	// The CIDR block associated with the local subnet of the customer data center.
	DestinationCidrBlock pulumix.Input[*string] `pulumi:"destinationCidrBlock"`
	// Indicates how the routes were provided.
	Source pulumix.Input[*string] `pulumi:"source"`
	// The current state of the static route.
	State pulumix.Input[*string] `pulumi:"state"`
}

func (VpnConnectionRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return i.ToVpnConnectionRouteTypeOutputWithContext(context.Background())
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteTypeOutput)
}

func (i *VpnConnectionRouteTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*VpnConnectionRouteTypeArgs] {
	return pulumix.Val(i)
}

type VpnConnectionRouteTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return o
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return o
}

func (o VpnConnectionRouteTypeOutput) ToOutput(ctx context.Context) pulumix.Output[VpnConnectionRouteType] {
	return pulumix.Output[VpnConnectionRouteType]{
		OutputState: o.OutputState,
	}
}

// The CIDR block associated with the local subnet of the customer data center.
func (o VpnConnectionRouteTypeOutput) DestinationCidrBlock() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionRouteType](o, func(v VpnConnectionRouteType) *string { return v.DestinationCidrBlock })
}

// Indicates how the routes were provided.
func (o VpnConnectionRouteTypeOutput) Source() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionRouteType](o, func(v VpnConnectionRouteType) *string { return v.Source })
}

// The current state of the static route.
func (o VpnConnectionRouteTypeOutput) State() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionRouteType](o, func(v VpnConnectionRouteType) *string { return v.State })
}

type VpnConnectionTunnel1LogOptions struct {
	// Options for sending VPN tunnel logs to CloudWatch. See CloudWatch Log Options below for more details.
	CloudwatchLogOptions *VpnConnectionTunnel1LogOptionsCloudwatchLogOptions `pulumi:"cloudwatchLogOptions"`
}

type VpnConnectionTunnel1LogOptionsArgs struct {
	// Options for sending VPN tunnel logs to CloudWatch. See CloudWatch Log Options below for more details.
	CloudwatchLogOptions pulumix.Input[*VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsArgs] `pulumi:"cloudwatchLogOptions"`
}

func (VpnConnectionTunnel1LogOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel1LogOptions)(nil)).Elem()
}

func (i VpnConnectionTunnel1LogOptionsArgs) ToVpnConnectionTunnel1LogOptionsOutput() VpnConnectionTunnel1LogOptionsOutput {
	return i.ToVpnConnectionTunnel1LogOptionsOutputWithContext(context.Background())
}

func (i VpnConnectionTunnel1LogOptionsArgs) ToVpnConnectionTunnel1LogOptionsOutputWithContext(ctx context.Context) VpnConnectionTunnel1LogOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTunnel1LogOptionsOutput)
}

func (i *VpnConnectionTunnel1LogOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*VpnConnectionTunnel1LogOptionsArgs] {
	return pulumix.Val(i)
}

type VpnConnectionTunnel1LogOptionsOutput struct{ *pulumi.OutputState }

func (VpnConnectionTunnel1LogOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel1LogOptions)(nil)).Elem()
}

func (o VpnConnectionTunnel1LogOptionsOutput) ToVpnConnectionTunnel1LogOptionsOutput() VpnConnectionTunnel1LogOptionsOutput {
	return o
}

func (o VpnConnectionTunnel1LogOptionsOutput) ToVpnConnectionTunnel1LogOptionsOutputWithContext(ctx context.Context) VpnConnectionTunnel1LogOptionsOutput {
	return o
}

func (o VpnConnectionTunnel1LogOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[VpnConnectionTunnel1LogOptions] {
	return pulumix.Output[VpnConnectionTunnel1LogOptions]{
		OutputState: o.OutputState,
	}
}

// Options for sending VPN tunnel logs to CloudWatch. See CloudWatch Log Options below for more details.
func (o VpnConnectionTunnel1LogOptionsOutput) CloudwatchLogOptions() pulumix.GPtrOutput[VpnConnectionTunnel1LogOptionsCloudwatchLogOptions, VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput] {
	value := pulumix.Apply[VpnConnectionTunnel1LogOptions](o, func(v VpnConnectionTunnel1LogOptions) *VpnConnectionTunnel1LogOptionsCloudwatchLogOptions {
		return v.CloudwatchLogOptions
	})
	return pulumix.GPtrOutput[VpnConnectionTunnel1LogOptionsCloudwatchLogOptions, VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput]{OutputState: value.OutputState}
}

type VpnConnectionTunnel1LogOptionsCloudwatchLogOptions struct {
	// Enable or disable VPN tunnel logging feature. The default is `false`.
	LogEnabled *bool `pulumi:"logEnabled"`
	// The Amazon Resource Name (ARN) of the CloudWatch log group to send logs to.
	LogGroupArn *string `pulumi:"logGroupArn"`
	// Set log format. Default format is json. Possible values are: `json` and `text`. The default is `json`.
	LogOutputFormat *string `pulumi:"logOutputFormat"`
}

type VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsArgs struct {
	// Enable or disable VPN tunnel logging feature. The default is `false`.
	LogEnabled pulumix.Input[*bool] `pulumi:"logEnabled"`
	// The Amazon Resource Name (ARN) of the CloudWatch log group to send logs to.
	LogGroupArn pulumix.Input[*string] `pulumi:"logGroupArn"`
	// Set log format. Default format is json. Possible values are: `json` and `text`. The default is `json`.
	LogOutputFormat pulumix.Input[*string] `pulumi:"logOutputFormat"`
}

func (VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel1LogOptionsCloudwatchLogOptions)(nil)).Elem()
}

func (i VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsArgs) ToVpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput() VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput {
	return i.ToVpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutputWithContext(context.Background())
}

func (i VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsArgs) ToVpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutputWithContext(ctx context.Context) VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput)
}

func (i *VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsArgs] {
	return pulumix.Val(i)
}

type VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput struct{ *pulumi.OutputState }

func (VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel1LogOptionsCloudwatchLogOptions)(nil)).Elem()
}

func (o VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput) ToVpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput() VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput {
	return o
}

func (o VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput) ToVpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutputWithContext(ctx context.Context) VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput {
	return o
}

func (o VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[VpnConnectionTunnel1LogOptionsCloudwatchLogOptions] {
	return pulumix.Output[VpnConnectionTunnel1LogOptionsCloudwatchLogOptions]{
		OutputState: o.OutputState,
	}
}

// Enable or disable VPN tunnel logging feature. The default is `false`.
func (o VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput) LogEnabled() pulumix.Output[*bool] {
	return pulumix.Apply[VpnConnectionTunnel1LogOptionsCloudwatchLogOptions](o, func(v VpnConnectionTunnel1LogOptionsCloudwatchLogOptions) *bool { return v.LogEnabled })
}

// The Amazon Resource Name (ARN) of the CloudWatch log group to send logs to.
func (o VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput) LogGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionTunnel1LogOptionsCloudwatchLogOptions](o, func(v VpnConnectionTunnel1LogOptionsCloudwatchLogOptions) *string { return v.LogGroupArn })
}

// Set log format. Default format is json. Possible values are: `json` and `text`. The default is `json`.
func (o VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput) LogOutputFormat() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionTunnel1LogOptionsCloudwatchLogOptions](o, func(v VpnConnectionTunnel1LogOptionsCloudwatchLogOptions) *string { return v.LogOutputFormat })
}

type VpnConnectionTunnel2LogOptions struct {
	// Options for sending VPN tunnel logs to CloudWatch. See CloudWatch Log Options below for more details.
	CloudwatchLogOptions *VpnConnectionTunnel2LogOptionsCloudwatchLogOptions `pulumi:"cloudwatchLogOptions"`
}

type VpnConnectionTunnel2LogOptionsArgs struct {
	// Options for sending VPN tunnel logs to CloudWatch. See CloudWatch Log Options below for more details.
	CloudwatchLogOptions pulumix.Input[*VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsArgs] `pulumi:"cloudwatchLogOptions"`
}

func (VpnConnectionTunnel2LogOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel2LogOptions)(nil)).Elem()
}

func (i VpnConnectionTunnel2LogOptionsArgs) ToVpnConnectionTunnel2LogOptionsOutput() VpnConnectionTunnel2LogOptionsOutput {
	return i.ToVpnConnectionTunnel2LogOptionsOutputWithContext(context.Background())
}

func (i VpnConnectionTunnel2LogOptionsArgs) ToVpnConnectionTunnel2LogOptionsOutputWithContext(ctx context.Context) VpnConnectionTunnel2LogOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTunnel2LogOptionsOutput)
}

func (i *VpnConnectionTunnel2LogOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*VpnConnectionTunnel2LogOptionsArgs] {
	return pulumix.Val(i)
}

type VpnConnectionTunnel2LogOptionsOutput struct{ *pulumi.OutputState }

func (VpnConnectionTunnel2LogOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel2LogOptions)(nil)).Elem()
}

func (o VpnConnectionTunnel2LogOptionsOutput) ToVpnConnectionTunnel2LogOptionsOutput() VpnConnectionTunnel2LogOptionsOutput {
	return o
}

func (o VpnConnectionTunnel2LogOptionsOutput) ToVpnConnectionTunnel2LogOptionsOutputWithContext(ctx context.Context) VpnConnectionTunnel2LogOptionsOutput {
	return o
}

func (o VpnConnectionTunnel2LogOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[VpnConnectionTunnel2LogOptions] {
	return pulumix.Output[VpnConnectionTunnel2LogOptions]{
		OutputState: o.OutputState,
	}
}

// Options for sending VPN tunnel logs to CloudWatch. See CloudWatch Log Options below for more details.
func (o VpnConnectionTunnel2LogOptionsOutput) CloudwatchLogOptions() pulumix.GPtrOutput[VpnConnectionTunnel2LogOptionsCloudwatchLogOptions, VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput] {
	value := pulumix.Apply[VpnConnectionTunnel2LogOptions](o, func(v VpnConnectionTunnel2LogOptions) *VpnConnectionTunnel2LogOptionsCloudwatchLogOptions {
		return v.CloudwatchLogOptions
	})
	return pulumix.GPtrOutput[VpnConnectionTunnel2LogOptionsCloudwatchLogOptions, VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput]{OutputState: value.OutputState}
}

type VpnConnectionTunnel2LogOptionsCloudwatchLogOptions struct {
	// Enable or disable VPN tunnel logging feature. The default is `false`.
	LogEnabled *bool `pulumi:"logEnabled"`
	// The Amazon Resource Name (ARN) of the CloudWatch log group to send logs to.
	LogGroupArn *string `pulumi:"logGroupArn"`
	// Set log format. Default format is json. Possible values are: `json` and `text`. The default is `json`.
	LogOutputFormat *string `pulumi:"logOutputFormat"`
}

type VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsArgs struct {
	// Enable or disable VPN tunnel logging feature. The default is `false`.
	LogEnabled pulumix.Input[*bool] `pulumi:"logEnabled"`
	// The Amazon Resource Name (ARN) of the CloudWatch log group to send logs to.
	LogGroupArn pulumix.Input[*string] `pulumi:"logGroupArn"`
	// Set log format. Default format is json. Possible values are: `json` and `text`. The default is `json`.
	LogOutputFormat pulumix.Input[*string] `pulumi:"logOutputFormat"`
}

func (VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel2LogOptionsCloudwatchLogOptions)(nil)).Elem()
}

func (i VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsArgs) ToVpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput() VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput {
	return i.ToVpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutputWithContext(context.Background())
}

func (i VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsArgs) ToVpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutputWithContext(ctx context.Context) VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput)
}

func (i *VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsArgs] {
	return pulumix.Val(i)
}

type VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput struct{ *pulumi.OutputState }

func (VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionTunnel2LogOptionsCloudwatchLogOptions)(nil)).Elem()
}

func (o VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput) ToVpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput() VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput {
	return o
}

func (o VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput) ToVpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutputWithContext(ctx context.Context) VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput {
	return o
}

func (o VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[VpnConnectionTunnel2LogOptionsCloudwatchLogOptions] {
	return pulumix.Output[VpnConnectionTunnel2LogOptionsCloudwatchLogOptions]{
		OutputState: o.OutputState,
	}
}

// Enable or disable VPN tunnel logging feature. The default is `false`.
func (o VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput) LogEnabled() pulumix.Output[*bool] {
	return pulumix.Apply[VpnConnectionTunnel2LogOptionsCloudwatchLogOptions](o, func(v VpnConnectionTunnel2LogOptionsCloudwatchLogOptions) *bool { return v.LogEnabled })
}

// The Amazon Resource Name (ARN) of the CloudWatch log group to send logs to.
func (o VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput) LogGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionTunnel2LogOptionsCloudwatchLogOptions](o, func(v VpnConnectionTunnel2LogOptionsCloudwatchLogOptions) *string { return v.LogGroupArn })
}

// Set log format. Default format is json. Possible values are: `json` and `text`. The default is `json`.
func (o VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput) LogOutputFormat() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionTunnel2LogOptionsCloudwatchLogOptions](o, func(v VpnConnectionTunnel2LogOptionsCloudwatchLogOptions) *string { return v.LogOutputFormat })
}

type VpnConnectionVgwTelemetry struct {
	// The number of accepted routes.
	AcceptedRouteCount *int `pulumi:"acceptedRouteCount"`
	// The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.
	CertificateArn *string `pulumi:"certificateArn"`
	// The date and time of the last change in status.
	LastStatusChange *string `pulumi:"lastStatusChange"`
	// The Internet-routable IP address of the virtual private gateway's outside interface.
	OutsideIpAddress *string `pulumi:"outsideIpAddress"`
	// The status of the VPN tunnel.
	Status *string `pulumi:"status"`
	// If an error occurs, a description of the error.
	StatusMessage *string `pulumi:"statusMessage"`
}

type VpnConnectionVgwTelemetryArgs struct {
	// The number of accepted routes.
	AcceptedRouteCount pulumix.Input[*int] `pulumi:"acceptedRouteCount"`
	// The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.
	CertificateArn pulumix.Input[*string] `pulumi:"certificateArn"`
	// The date and time of the last change in status.
	LastStatusChange pulumix.Input[*string] `pulumi:"lastStatusChange"`
	// The Internet-routable IP address of the virtual private gateway's outside interface.
	OutsideIpAddress pulumix.Input[*string] `pulumi:"outsideIpAddress"`
	// The status of the VPN tunnel.
	Status pulumix.Input[*string] `pulumi:"status"`
	// If an error occurs, a description of the error.
	StatusMessage pulumix.Input[*string] `pulumi:"statusMessage"`
}

func (VpnConnectionVgwTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return i.ToVpnConnectionVgwTelemetryOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryOutput)
}

func (i *VpnConnectionVgwTelemetryArgs) ToOutput(ctx context.Context) pulumix.Output[*VpnConnectionVgwTelemetryArgs] {
	return pulumix.Val(i)
}

type VpnConnectionVgwTelemetryOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return o
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return o
}

func (o VpnConnectionVgwTelemetryOutput) ToOutput(ctx context.Context) pulumix.Output[VpnConnectionVgwTelemetry] {
	return pulumix.Output[VpnConnectionVgwTelemetry]{
		OutputState: o.OutputState,
	}
}

// The number of accepted routes.
func (o VpnConnectionVgwTelemetryOutput) AcceptedRouteCount() pulumix.Output[*int] {
	return pulumix.Apply[VpnConnectionVgwTelemetry](o, func(v VpnConnectionVgwTelemetry) *int { return v.AcceptedRouteCount })
}

// The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.
func (o VpnConnectionVgwTelemetryOutput) CertificateArn() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionVgwTelemetry](o, func(v VpnConnectionVgwTelemetry) *string { return v.CertificateArn })
}

// The date and time of the last change in status.
func (o VpnConnectionVgwTelemetryOutput) LastStatusChange() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionVgwTelemetry](o, func(v VpnConnectionVgwTelemetry) *string { return v.LastStatusChange })
}

// The Internet-routable IP address of the virtual private gateway's outside interface.
func (o VpnConnectionVgwTelemetryOutput) OutsideIpAddress() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionVgwTelemetry](o, func(v VpnConnectionVgwTelemetry) *string { return v.OutsideIpAddress })
}

// The status of the VPN tunnel.
func (o VpnConnectionVgwTelemetryOutput) Status() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionVgwTelemetry](o, func(v VpnConnectionVgwTelemetry) *string { return v.Status })
}

// If an error occurs, a description of the error.
func (o VpnConnectionVgwTelemetryOutput) StatusMessage() pulumix.Output[*string] {
	return pulumix.Apply[VpnConnectionVgwTelemetry](o, func(v VpnConnectionVgwTelemetry) *string { return v.StatusMessage })
}

type GetAmiBlockDeviceMapping struct {
	// Physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Map containing EBS information, if the device is EBS based. Unlike most object attributes, these are accessed directly (e.g., `ebs.volume_size` or `ebs["volumeSize"]`) rather than accessed through the first element of a list (e.g., `ebs[0].volume_size`).
	Ebs map[string]string `pulumi:"ebs"`
	// Suppresses the specified device included in the block device mapping of the AMI.
	NoDevice string `pulumi:"noDevice"`
	// Virtual device name (for instance stores).
	VirtualName string `pulumi:"virtualName"`
}

type GetAmiBlockDeviceMappingArgs struct {
	// Physical name of the device.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Map containing EBS information, if the device is EBS based. Unlike most object attributes, these are accessed directly (e.g., `ebs.volume_size` or `ebs["volumeSize"]`) rather than accessed through the first element of a list (e.g., `ebs[0].volume_size`).
	Ebs pulumix.Input[map[string]string] `pulumi:"ebs"`
	// Suppresses the specified device included in the block device mapping of the AMI.
	NoDevice pulumix.Input[string] `pulumi:"noDevice"`
	// Virtual device name (for instance stores).
	VirtualName pulumix.Input[string] `pulumi:"virtualName"`
}

func (GetAmiBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAmiBlockDeviceMapping)(nil)).Elem()
}

func (i GetAmiBlockDeviceMappingArgs) ToGetAmiBlockDeviceMappingOutput() GetAmiBlockDeviceMappingOutput {
	return i.ToGetAmiBlockDeviceMappingOutputWithContext(context.Background())
}

func (i GetAmiBlockDeviceMappingArgs) ToGetAmiBlockDeviceMappingOutputWithContext(ctx context.Context) GetAmiBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAmiBlockDeviceMappingOutput)
}

func (i *GetAmiBlockDeviceMappingArgs) ToOutput(ctx context.Context) pulumix.Output[*GetAmiBlockDeviceMappingArgs] {
	return pulumix.Val(i)
}

type GetAmiBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetAmiBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAmiBlockDeviceMapping)(nil)).Elem()
}

func (o GetAmiBlockDeviceMappingOutput) ToGetAmiBlockDeviceMappingOutput() GetAmiBlockDeviceMappingOutput {
	return o
}

func (o GetAmiBlockDeviceMappingOutput) ToGetAmiBlockDeviceMappingOutputWithContext(ctx context.Context) GetAmiBlockDeviceMappingOutput {
	return o
}

func (o GetAmiBlockDeviceMappingOutput) ToOutput(ctx context.Context) pulumix.Output[GetAmiBlockDeviceMapping] {
	return pulumix.Output[GetAmiBlockDeviceMapping]{
		OutputState: o.OutputState,
	}
}

// Physical name of the device.
func (o GetAmiBlockDeviceMappingOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[GetAmiBlockDeviceMapping](o, func(v GetAmiBlockDeviceMapping) string { return v.DeviceName })
}

// Map containing EBS information, if the device is EBS based. Unlike most object attributes, these are accessed directly (e.g., `ebs.volume_size` or `ebs["volumeSize"]`) rather than accessed through the first element of a list (e.g., `ebs[0].volume_size`).
func (o GetAmiBlockDeviceMappingOutput) Ebs() pulumix.MapOutput[string] {
	value := pulumix.Apply[GetAmiBlockDeviceMapping](o, func(v GetAmiBlockDeviceMapping) map[string]string { return v.Ebs })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// Suppresses the specified device included in the block device mapping of the AMI.
func (o GetAmiBlockDeviceMappingOutput) NoDevice() pulumix.Output[string] {
	return pulumix.Apply[GetAmiBlockDeviceMapping](o, func(v GetAmiBlockDeviceMapping) string { return v.NoDevice })
}

// Virtual device name (for instance stores).
func (o GetAmiBlockDeviceMappingOutput) VirtualName() pulumix.Output[string] {
	return pulumix.Apply[GetAmiBlockDeviceMapping](o, func(v GetAmiBlockDeviceMapping) string { return v.VirtualName })
}

type GetAmiFilter struct {
	// Name of the AMI that was provided during image creation.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetAmiFilterArgs struct {
	// Name of the AMI that was provided during image creation.
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetAmiFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAmiFilter)(nil)).Elem()
}

func (i GetAmiFilterArgs) ToGetAmiFilterOutput() GetAmiFilterOutput {
	return i.ToGetAmiFilterOutputWithContext(context.Background())
}

func (i GetAmiFilterArgs) ToGetAmiFilterOutputWithContext(ctx context.Context) GetAmiFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAmiFilterOutput)
}

func (i *GetAmiFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetAmiFilterArgs] {
	return pulumix.Val(i)
}

type GetAmiFilterOutput struct{ *pulumi.OutputState }

func (GetAmiFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAmiFilter)(nil)).Elem()
}

func (o GetAmiFilterOutput) ToGetAmiFilterOutput() GetAmiFilterOutput {
	return o
}

func (o GetAmiFilterOutput) ToGetAmiFilterOutputWithContext(ctx context.Context) GetAmiFilterOutput {
	return o
}

func (o GetAmiFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAmiFilter] {
	return pulumix.Output[GetAmiFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the AMI that was provided during image creation.
func (o GetAmiFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetAmiFilter](o, func(v GetAmiFilter) string { return v.Name })
}

func (o GetAmiFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetAmiFilter](o, func(v GetAmiFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetAmiIdsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetAmiIdsFilterArgs struct {
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetAmiIdsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAmiIdsFilter)(nil)).Elem()
}

func (i GetAmiIdsFilterArgs) ToGetAmiIdsFilterOutput() GetAmiIdsFilterOutput {
	return i.ToGetAmiIdsFilterOutputWithContext(context.Background())
}

func (i GetAmiIdsFilterArgs) ToGetAmiIdsFilterOutputWithContext(ctx context.Context) GetAmiIdsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAmiIdsFilterOutput)
}

func (i *GetAmiIdsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetAmiIdsFilterArgs] {
	return pulumix.Val(i)
}

type GetAmiIdsFilterOutput struct{ *pulumi.OutputState }

func (GetAmiIdsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAmiIdsFilter)(nil)).Elem()
}

func (o GetAmiIdsFilterOutput) ToGetAmiIdsFilterOutput() GetAmiIdsFilterOutput {
	return o
}

func (o GetAmiIdsFilterOutput) ToGetAmiIdsFilterOutputWithContext(ctx context.Context) GetAmiIdsFilterOutput {
	return o
}

func (o GetAmiIdsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAmiIdsFilter] {
	return pulumix.Output[GetAmiIdsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetAmiIdsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetAmiIdsFilter](o, func(v GetAmiIdsFilter) string { return v.Name })
}

func (o GetAmiIdsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetAmiIdsFilter](o, func(v GetAmiIdsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetAmiProductCode struct {
	ProductCodeId   string `pulumi:"productCodeId"`
	ProductCodeType string `pulumi:"productCodeType"`
}

type GetAmiProductCodeArgs struct {
	ProductCodeId   pulumix.Input[string] `pulumi:"productCodeId"`
	ProductCodeType pulumix.Input[string] `pulumi:"productCodeType"`
}

func (GetAmiProductCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAmiProductCode)(nil)).Elem()
}

func (i GetAmiProductCodeArgs) ToGetAmiProductCodeOutput() GetAmiProductCodeOutput {
	return i.ToGetAmiProductCodeOutputWithContext(context.Background())
}

func (i GetAmiProductCodeArgs) ToGetAmiProductCodeOutputWithContext(ctx context.Context) GetAmiProductCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAmiProductCodeOutput)
}

func (i *GetAmiProductCodeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetAmiProductCodeArgs] {
	return pulumix.Val(i)
}

type GetAmiProductCodeOutput struct{ *pulumi.OutputState }

func (GetAmiProductCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAmiProductCode)(nil)).Elem()
}

func (o GetAmiProductCodeOutput) ToGetAmiProductCodeOutput() GetAmiProductCodeOutput {
	return o
}

func (o GetAmiProductCodeOutput) ToGetAmiProductCodeOutputWithContext(ctx context.Context) GetAmiProductCodeOutput {
	return o
}

func (o GetAmiProductCodeOutput) ToOutput(ctx context.Context) pulumix.Output[GetAmiProductCode] {
	return pulumix.Output[GetAmiProductCode]{
		OutputState: o.OutputState,
	}
}

func (o GetAmiProductCodeOutput) ProductCodeId() pulumix.Output[string] {
	return pulumix.Apply[GetAmiProductCode](o, func(v GetAmiProductCode) string { return v.ProductCodeId })
}

func (o GetAmiProductCodeOutput) ProductCodeType() pulumix.Output[string] {
	return pulumix.Apply[GetAmiProductCode](o, func(v GetAmiProductCode) string { return v.ProductCodeType })
}

type GetCoipPoolFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A COIP Pool will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetCoipPoolFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A COIP Pool will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetCoipPoolFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCoipPoolFilter)(nil)).Elem()
}

func (i GetCoipPoolFilterArgs) ToGetCoipPoolFilterOutput() GetCoipPoolFilterOutput {
	return i.ToGetCoipPoolFilterOutputWithContext(context.Background())
}

func (i GetCoipPoolFilterArgs) ToGetCoipPoolFilterOutputWithContext(ctx context.Context) GetCoipPoolFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCoipPoolFilterOutput)
}

func (i *GetCoipPoolFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCoipPoolFilterArgs] {
	return pulumix.Val(i)
}

type GetCoipPoolFilterOutput struct{ *pulumi.OutputState }

func (GetCoipPoolFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCoipPoolFilter)(nil)).Elem()
}

func (o GetCoipPoolFilterOutput) ToGetCoipPoolFilterOutput() GetCoipPoolFilterOutput {
	return o
}

func (o GetCoipPoolFilterOutput) ToGetCoipPoolFilterOutputWithContext(ctx context.Context) GetCoipPoolFilterOutput {
	return o
}

func (o GetCoipPoolFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetCoipPoolFilter] {
	return pulumix.Output[GetCoipPoolFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
func (o GetCoipPoolFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetCoipPoolFilter](o, func(v GetCoipPoolFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A COIP Pool will be selected if any one of the given values matches.
func (o GetCoipPoolFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetCoipPoolFilter](o, func(v GetCoipPoolFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetCoipPoolsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A COIP Pool will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetCoipPoolsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A COIP Pool will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetCoipPoolsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCoipPoolsFilter)(nil)).Elem()
}

func (i GetCoipPoolsFilterArgs) ToGetCoipPoolsFilterOutput() GetCoipPoolsFilterOutput {
	return i.ToGetCoipPoolsFilterOutputWithContext(context.Background())
}

func (i GetCoipPoolsFilterArgs) ToGetCoipPoolsFilterOutputWithContext(ctx context.Context) GetCoipPoolsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCoipPoolsFilterOutput)
}

func (i *GetCoipPoolsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCoipPoolsFilterArgs] {
	return pulumix.Val(i)
}

type GetCoipPoolsFilterOutput struct{ *pulumi.OutputState }

func (GetCoipPoolsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCoipPoolsFilter)(nil)).Elem()
}

func (o GetCoipPoolsFilterOutput) ToGetCoipPoolsFilterOutput() GetCoipPoolsFilterOutput {
	return o
}

func (o GetCoipPoolsFilterOutput) ToGetCoipPoolsFilterOutputWithContext(ctx context.Context) GetCoipPoolsFilterOutput {
	return o
}

func (o GetCoipPoolsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetCoipPoolsFilter] {
	return pulumix.Output[GetCoipPoolsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
func (o GetCoipPoolsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetCoipPoolsFilter](o, func(v GetCoipPoolsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A COIP Pool will be selected if any one of the given values matches.
func (o GetCoipPoolsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetCoipPoolsFilter](o, func(v GetCoipPoolsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetCustomerGatewayFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetCustomerGatewayFilterArgs struct {
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetCustomerGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewayFilter)(nil)).Elem()
}

func (i GetCustomerGatewayFilterArgs) ToGetCustomerGatewayFilterOutput() GetCustomerGatewayFilterOutput {
	return i.ToGetCustomerGatewayFilterOutputWithContext(context.Background())
}

func (i GetCustomerGatewayFilterArgs) ToGetCustomerGatewayFilterOutputWithContext(ctx context.Context) GetCustomerGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewayFilterOutput)
}

func (i *GetCustomerGatewayFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCustomerGatewayFilterArgs] {
	return pulumix.Val(i)
}

type GetCustomerGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewayFilter)(nil)).Elem()
}

func (o GetCustomerGatewayFilterOutput) ToGetCustomerGatewayFilterOutput() GetCustomerGatewayFilterOutput {
	return o
}

func (o GetCustomerGatewayFilterOutput) ToGetCustomerGatewayFilterOutputWithContext(ctx context.Context) GetCustomerGatewayFilterOutput {
	return o
}

func (o GetCustomerGatewayFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetCustomerGatewayFilter] {
	return pulumix.Output[GetCustomerGatewayFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomerGatewayFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetCustomerGatewayFilter](o, func(v GetCustomerGatewayFilter) string { return v.Name })
}

func (o GetCustomerGatewayFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetCustomerGatewayFilter](o, func(v GetCustomerGatewayFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetDedicatedHostFilter struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHosts.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field. A host will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetDedicatedHostFilterArgs struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHosts.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field. A host will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetDedicatedHostFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostFilter)(nil)).Elem()
}

func (i GetDedicatedHostFilterArgs) ToGetDedicatedHostFilterOutput() GetDedicatedHostFilterOutput {
	return i.ToGetDedicatedHostFilterOutputWithContext(context.Background())
}

func (i GetDedicatedHostFilterArgs) ToGetDedicatedHostFilterOutputWithContext(ctx context.Context) GetDedicatedHostFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedHostFilterOutput)
}

func (i *GetDedicatedHostFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetDedicatedHostFilterArgs] {
	return pulumix.Val(i)
}

type GetDedicatedHostFilterOutput struct{ *pulumi.OutputState }

func (GetDedicatedHostFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostFilter)(nil)).Elem()
}

func (o GetDedicatedHostFilterOutput) ToGetDedicatedHostFilterOutput() GetDedicatedHostFilterOutput {
	return o
}

func (o GetDedicatedHostFilterOutput) ToGetDedicatedHostFilterOutputWithContext(ctx context.Context) GetDedicatedHostFilterOutput {
	return o
}

func (o GetDedicatedHostFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetDedicatedHostFilter] {
	return pulumix.Output[GetDedicatedHostFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHosts.html).
func (o GetDedicatedHostFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetDedicatedHostFilter](o, func(v GetDedicatedHostFilter) string { return v.Name })
}

// Set of values that are accepted for the given field. A host will be selected if any one of the given values matches.
func (o GetDedicatedHostFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetDedicatedHostFilter](o, func(v GetDedicatedHostFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetEipsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddresses.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field. An Elastic IP will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetEipsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddresses.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field. An Elastic IP will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetEipsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEipsFilter)(nil)).Elem()
}

func (i GetEipsFilterArgs) ToGetEipsFilterOutput() GetEipsFilterOutput {
	return i.ToGetEipsFilterOutputWithContext(context.Background())
}

func (i GetEipsFilterArgs) ToGetEipsFilterOutputWithContext(ctx context.Context) GetEipsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEipsFilterOutput)
}

func (i *GetEipsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetEipsFilterArgs] {
	return pulumix.Val(i)
}

type GetEipsFilterOutput struct{ *pulumi.OutputState }

func (GetEipsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEipsFilter)(nil)).Elem()
}

func (o GetEipsFilterOutput) ToGetEipsFilterOutput() GetEipsFilterOutput {
	return o
}

func (o GetEipsFilterOutput) ToGetEipsFilterOutputWithContext(ctx context.Context) GetEipsFilterOutput {
	return o
}

func (o GetEipsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetEipsFilter] {
	return pulumix.Output[GetEipsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddresses.html).
func (o GetEipsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetEipsFilter](o, func(v GetEipsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field. An Elastic IP will be selected if any one of the given values matches.
func (o GetEipsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetEipsFilter](o, func(v GetEipsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetElasticIpFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetElasticIpFilterArgs struct {
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetElasticIpFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticIpFilter)(nil)).Elem()
}

func (i GetElasticIpFilterArgs) ToGetElasticIpFilterOutput() GetElasticIpFilterOutput {
	return i.ToGetElasticIpFilterOutputWithContext(context.Background())
}

func (i GetElasticIpFilterArgs) ToGetElasticIpFilterOutputWithContext(ctx context.Context) GetElasticIpFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticIpFilterOutput)
}

func (i *GetElasticIpFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetElasticIpFilterArgs] {
	return pulumix.Val(i)
}

type GetElasticIpFilterOutput struct{ *pulumi.OutputState }

func (GetElasticIpFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticIpFilter)(nil)).Elem()
}

func (o GetElasticIpFilterOutput) ToGetElasticIpFilterOutput() GetElasticIpFilterOutput {
	return o
}

func (o GetElasticIpFilterOutput) ToGetElasticIpFilterOutputWithContext(ctx context.Context) GetElasticIpFilterOutput {
	return o
}

func (o GetElasticIpFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetElasticIpFilter] {
	return pulumix.Output[GetElasticIpFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetElasticIpFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetElasticIpFilter](o, func(v GetElasticIpFilter) string { return v.Name })
}

func (o GetElasticIpFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetElasticIpFilter](o, func(v GetElasticIpFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetInstanceCreditSpecification struct {
	CpuCredits string `pulumi:"cpuCredits"`
}

type GetInstanceCreditSpecificationArgs struct {
	CpuCredits pulumix.Input[string] `pulumi:"cpuCredits"`
}

func (GetInstanceCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCreditSpecification)(nil)).Elem()
}

func (i GetInstanceCreditSpecificationArgs) ToGetInstanceCreditSpecificationOutput() GetInstanceCreditSpecificationOutput {
	return i.ToGetInstanceCreditSpecificationOutputWithContext(context.Background())
}

func (i GetInstanceCreditSpecificationArgs) ToGetInstanceCreditSpecificationOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceCreditSpecificationOutput)
}

func (i *GetInstanceCreditSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceCreditSpecificationArgs] {
	return pulumix.Val(i)
}

type GetInstanceCreditSpecificationOutput struct{ *pulumi.OutputState }

func (GetInstanceCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCreditSpecification)(nil)).Elem()
}

func (o GetInstanceCreditSpecificationOutput) ToGetInstanceCreditSpecificationOutput() GetInstanceCreditSpecificationOutput {
	return o
}

func (o GetInstanceCreditSpecificationOutput) ToGetInstanceCreditSpecificationOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationOutput {
	return o
}

func (o GetInstanceCreditSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceCreditSpecification] {
	return pulumix.Output[GetInstanceCreditSpecification]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceCreditSpecificationOutput) CpuCredits() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceCreditSpecification](o, func(v GetInstanceCreditSpecification) string { return v.CpuCredits })
}

type GetInstanceEbsBlockDevice struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     int    `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	// ID of the snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	// Map of tags assigned to the Instance.
	Tags map[string]string `pulumi:"tags"`
	// Throughput of the volume, in MiB/s.
	Throughput int    `pulumi:"throughput"`
	VolumeId   string `pulumi:"volumeId"`
	// Size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetInstanceEbsBlockDeviceArgs struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination pulumix.Input[bool] `pulumi:"deleteOnTermination"`
	// Physical name of the device.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted pulumix.Input[bool] `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     pulumix.Input[int]    `pulumi:"iops"`
	KmsKeyId pulumix.Input[string] `pulumi:"kmsKeyId"`
	// ID of the snapshot.
	SnapshotId pulumix.Input[string] `pulumi:"snapshotId"`
	// Map of tags assigned to the Instance.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Throughput of the volume, in MiB/s.
	Throughput pulumix.Input[int]    `pulumi:"throughput"`
	VolumeId   pulumix.Input[string] `pulumi:"volumeId"`
	// Size of the volume, in GiB.
	VolumeSize pulumix.Input[int] `pulumi:"volumeSize"`
	// Type of the volume.
	VolumeType pulumix.Input[string] `pulumi:"volumeType"`
}

func (GetInstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (i GetInstanceEbsBlockDeviceArgs) ToGetInstanceEbsBlockDeviceOutput() GetInstanceEbsBlockDeviceOutput {
	return i.ToGetInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceEbsBlockDeviceArgs) ToGetInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEbsBlockDeviceOutput)
}

func (i *GetInstanceEbsBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceEbsBlockDeviceArgs] {
	return pulumix.Val(i)
}

type GetInstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetInstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (o GetInstanceEbsBlockDeviceOutput) ToGetInstanceEbsBlockDeviceOutput() GetInstanceEbsBlockDeviceOutput {
	return o
}

func (o GetInstanceEbsBlockDeviceOutput) ToGetInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceOutput {
	return o
}

func (o GetInstanceEbsBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceEbsBlockDevice] {
	return pulumix.Output[GetInstanceEbsBlockDevice]{
		OutputState: o.OutputState,
	}
}

// If the root block device will be deleted on termination.
func (o GetInstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumix.Output[bool] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) bool { return v.DeleteOnTermination })
}

// Physical name of the device.
func (o GetInstanceEbsBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) string { return v.DeviceName })
}

// If the EBS volume is encrypted.
func (o GetInstanceEbsBlockDeviceOutput) Encrypted() pulumix.Output[bool] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) bool { return v.Encrypted })
}

// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
func (o GetInstanceEbsBlockDeviceOutput) Iops() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) int { return v.Iops })
}

func (o GetInstanceEbsBlockDeviceOutput) KmsKeyId() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) string { return v.KmsKeyId })
}

// ID of the snapshot.
func (o GetInstanceEbsBlockDeviceOutput) SnapshotId() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) string { return v.SnapshotId })
}

// Map of tags assigned to the Instance.
func (o GetInstanceEbsBlockDeviceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// Throughput of the volume, in MiB/s.
func (o GetInstanceEbsBlockDeviceOutput) Throughput() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) int { return v.Throughput })
}

func (o GetInstanceEbsBlockDeviceOutput) VolumeId() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) string { return v.VolumeId })
}

// Size of the volume, in GiB.
func (o GetInstanceEbsBlockDeviceOutput) VolumeSize() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) int { return v.VolumeSize })
}

// Type of the volume.
func (o GetInstanceEbsBlockDeviceOutput) VolumeType() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceEbsBlockDevice](o, func(v GetInstanceEbsBlockDevice) string { return v.VolumeType })
}

type GetInstanceEnclaveOption struct {
	// Whether Nitro Enclaves are enabled.
	Enabled bool `pulumi:"enabled"`
}

type GetInstanceEnclaveOptionArgs struct {
	// Whether Nitro Enclaves are enabled.
	Enabled pulumix.Input[bool] `pulumi:"enabled"`
}

func (GetInstanceEnclaveOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnclaveOption)(nil)).Elem()
}

func (i GetInstanceEnclaveOptionArgs) ToGetInstanceEnclaveOptionOutput() GetInstanceEnclaveOptionOutput {
	return i.ToGetInstanceEnclaveOptionOutputWithContext(context.Background())
}

func (i GetInstanceEnclaveOptionArgs) ToGetInstanceEnclaveOptionOutputWithContext(ctx context.Context) GetInstanceEnclaveOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEnclaveOptionOutput)
}

func (i *GetInstanceEnclaveOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceEnclaveOptionArgs] {
	return pulumix.Val(i)
}

type GetInstanceEnclaveOptionOutput struct{ *pulumi.OutputState }

func (GetInstanceEnclaveOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEnclaveOption)(nil)).Elem()
}

func (o GetInstanceEnclaveOptionOutput) ToGetInstanceEnclaveOptionOutput() GetInstanceEnclaveOptionOutput {
	return o
}

func (o GetInstanceEnclaveOptionOutput) ToGetInstanceEnclaveOptionOutputWithContext(ctx context.Context) GetInstanceEnclaveOptionOutput {
	return o
}

func (o GetInstanceEnclaveOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceEnclaveOption] {
	return pulumix.Output[GetInstanceEnclaveOption]{
		OutputState: o.OutputState,
	}
}

// Whether Nitro Enclaves are enabled.
func (o GetInstanceEnclaveOptionOutput) Enabled() pulumix.Output[bool] {
	return pulumix.Apply[GetInstanceEnclaveOption](o, func(v GetInstanceEnclaveOption) bool { return v.Enabled })
}

type GetInstanceEphemeralBlockDevice struct {
	// Physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice *bool `pulumi:"noDevice"`
	// Virtual device name.
	VirtualName *string `pulumi:"virtualName"`
}

type GetInstanceEphemeralBlockDeviceArgs struct {
	// Physical name of the device.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice pulumix.Input[*bool] `pulumi:"noDevice"`
	// Virtual device name.
	VirtualName pulumix.Input[*string] `pulumi:"virtualName"`
}

func (GetInstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i GetInstanceEphemeralBlockDeviceArgs) ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput {
	return i.ToGetInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceEphemeralBlockDeviceArgs) ToGetInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEphemeralBlockDeviceOutput)
}

func (i *GetInstanceEphemeralBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceEphemeralBlockDeviceArgs] {
	return pulumix.Val(i)
}

type GetInstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetInstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o GetInstanceEphemeralBlockDeviceOutput) ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceOutput) ToGetInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceEphemeralBlockDevice] {
	return pulumix.Output[GetInstanceEphemeralBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Physical name of the device.
func (o GetInstanceEphemeralBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceEphemeralBlockDevice](o, func(v GetInstanceEphemeralBlockDevice) string { return v.DeviceName })
}

// Whether the specified device included in the device mapping was suppressed or not (Boolean).
func (o GetInstanceEphemeralBlockDeviceOutput) NoDevice() pulumix.Output[*bool] {
	return pulumix.Apply[GetInstanceEphemeralBlockDevice](o, func(v GetInstanceEphemeralBlockDevice) *bool { return v.NoDevice })
}

// Virtual device name.
func (o GetInstanceEphemeralBlockDeviceOutput) VirtualName() pulumix.Output[*string] {
	return pulumix.Apply[GetInstanceEphemeralBlockDevice](o, func(v GetInstanceEphemeralBlockDevice) *string { return v.VirtualName })
}

type GetInstanceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInstanceFilterArgs struct {
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetInstanceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceFilter)(nil)).Elem()
}

func (i GetInstanceFilterArgs) ToGetInstanceFilterOutput() GetInstanceFilterOutput {
	return i.ToGetInstanceFilterOutputWithContext(context.Background())
}

func (i GetInstanceFilterArgs) ToGetInstanceFilterOutputWithContext(ctx context.Context) GetInstanceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceFilterOutput)
}

func (i *GetInstanceFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceFilterArgs] {
	return pulumix.Val(i)
}

type GetInstanceFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceFilter)(nil)).Elem()
}

func (o GetInstanceFilterOutput) ToGetInstanceFilterOutput() GetInstanceFilterOutput {
	return o
}

func (o GetInstanceFilterOutput) ToGetInstanceFilterOutputWithContext(ctx context.Context) GetInstanceFilterOutput {
	return o
}

func (o GetInstanceFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceFilter] {
	return pulumix.Output[GetInstanceFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceFilter](o, func(v GetInstanceFilter) string { return v.Name })
}

func (o GetInstanceFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetInstanceFilter](o, func(v GetInstanceFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetInstanceMaintenanceOption struct {
	// Automatic recovery behavior of the instance.
	AutoRecovery string `pulumi:"autoRecovery"`
}

type GetInstanceMaintenanceOptionArgs struct {
	// Automatic recovery behavior of the instance.
	AutoRecovery pulumix.Input[string] `pulumi:"autoRecovery"`
}

func (GetInstanceMaintenanceOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenanceOption)(nil)).Elem()
}

func (i GetInstanceMaintenanceOptionArgs) ToGetInstanceMaintenanceOptionOutput() GetInstanceMaintenanceOptionOutput {
	return i.ToGetInstanceMaintenanceOptionOutputWithContext(context.Background())
}

func (i GetInstanceMaintenanceOptionArgs) ToGetInstanceMaintenanceOptionOutputWithContext(ctx context.Context) GetInstanceMaintenanceOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMaintenanceOptionOutput)
}

func (i *GetInstanceMaintenanceOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceMaintenanceOptionArgs] {
	return pulumix.Val(i)
}

type GetInstanceMaintenanceOptionOutput struct{ *pulumi.OutputState }

func (GetInstanceMaintenanceOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMaintenanceOption)(nil)).Elem()
}

func (o GetInstanceMaintenanceOptionOutput) ToGetInstanceMaintenanceOptionOutput() GetInstanceMaintenanceOptionOutput {
	return o
}

func (o GetInstanceMaintenanceOptionOutput) ToGetInstanceMaintenanceOptionOutputWithContext(ctx context.Context) GetInstanceMaintenanceOptionOutput {
	return o
}

func (o GetInstanceMaintenanceOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceMaintenanceOption] {
	return pulumix.Output[GetInstanceMaintenanceOption]{
		OutputState: o.OutputState,
	}
}

// Automatic recovery behavior of the instance.
func (o GetInstanceMaintenanceOptionOutput) AutoRecovery() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceMaintenanceOption](o, func(v GetInstanceMaintenanceOption) string { return v.AutoRecovery })
}

type GetInstanceMetadataOption struct {
	// State of the metadata service: `enabled`, `disabled`.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// Whether the IPv6 endpoint for the instance metadata service is `enabled` or `disabled`
	HttpProtocolIpv6 string `pulumi:"httpProtocolIpv6"`
	// Desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens string `pulumi:"httpTokens"`
	// If access to instance tags is allowed from the metadata service: `enabled`, `disabled`.
	InstanceMetadataTags string `pulumi:"instanceMetadataTags"`
}

type GetInstanceMetadataOptionArgs struct {
	// State of the metadata service: `enabled`, `disabled`.
	HttpEndpoint pulumix.Input[string] `pulumi:"httpEndpoint"`
	// Whether the IPv6 endpoint for the instance metadata service is `enabled` or `disabled`
	HttpProtocolIpv6 pulumix.Input[string] `pulumi:"httpProtocolIpv6"`
	// Desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit pulumix.Input[int] `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens pulumix.Input[string] `pulumi:"httpTokens"`
	// If access to instance tags is allowed from the metadata service: `enabled`, `disabled`.
	InstanceMetadataTags pulumix.Input[string] `pulumi:"instanceMetadataTags"`
}

func (GetInstanceMetadataOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMetadataOption)(nil)).Elem()
}

func (i GetInstanceMetadataOptionArgs) ToGetInstanceMetadataOptionOutput() GetInstanceMetadataOptionOutput {
	return i.ToGetInstanceMetadataOptionOutputWithContext(context.Background())
}

func (i GetInstanceMetadataOptionArgs) ToGetInstanceMetadataOptionOutputWithContext(ctx context.Context) GetInstanceMetadataOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMetadataOptionOutput)
}

func (i *GetInstanceMetadataOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceMetadataOptionArgs] {
	return pulumix.Val(i)
}

type GetInstanceMetadataOptionOutput struct{ *pulumi.OutputState }

func (GetInstanceMetadataOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMetadataOption)(nil)).Elem()
}

func (o GetInstanceMetadataOptionOutput) ToGetInstanceMetadataOptionOutput() GetInstanceMetadataOptionOutput {
	return o
}

func (o GetInstanceMetadataOptionOutput) ToGetInstanceMetadataOptionOutputWithContext(ctx context.Context) GetInstanceMetadataOptionOutput {
	return o
}

func (o GetInstanceMetadataOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceMetadataOption] {
	return pulumix.Output[GetInstanceMetadataOption]{
		OutputState: o.OutputState,
	}
}

// State of the metadata service: `enabled`, `disabled`.
func (o GetInstanceMetadataOptionOutput) HttpEndpoint() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceMetadataOption](o, func(v GetInstanceMetadataOption) string { return v.HttpEndpoint })
}

// Whether the IPv6 endpoint for the instance metadata service is `enabled` or `disabled`
func (o GetInstanceMetadataOptionOutput) HttpProtocolIpv6() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceMetadataOption](o, func(v GetInstanceMetadataOption) string { return v.HttpProtocolIpv6 })
}

// Desired HTTP PUT response hop limit for instance metadata requests.
func (o GetInstanceMetadataOptionOutput) HttpPutResponseHopLimit() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceMetadataOption](o, func(v GetInstanceMetadataOption) int { return v.HttpPutResponseHopLimit })
}

// If session tokens are required: `optional`, `required`.
func (o GetInstanceMetadataOptionOutput) HttpTokens() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceMetadataOption](o, func(v GetInstanceMetadataOption) string { return v.HttpTokens })
}

// If access to instance tags is allowed from the metadata service: `enabled`, `disabled`.
func (o GetInstanceMetadataOptionOutput) InstanceMetadataTags() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceMetadataOption](o, func(v GetInstanceMetadataOption) string { return v.InstanceMetadataTags })
}

type GetInstancePrivateDnsNameOption struct {
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	EnableResourceNameDnsARecord bool `pulumi:"enableResourceNameDnsARecord"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	EnableResourceNameDnsAaaaRecord bool `pulumi:"enableResourceNameDnsAaaaRecord"`
	// Type of hostname for EC2 instances.
	HostnameType string `pulumi:"hostnameType"`
}

type GetInstancePrivateDnsNameOptionArgs struct {
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	EnableResourceNameDnsARecord pulumix.Input[bool] `pulumi:"enableResourceNameDnsARecord"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	EnableResourceNameDnsAaaaRecord pulumix.Input[bool] `pulumi:"enableResourceNameDnsAaaaRecord"`
	// Type of hostname for EC2 instances.
	HostnameType pulumix.Input[string] `pulumi:"hostnameType"`
}

func (GetInstancePrivateDnsNameOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePrivateDnsNameOption)(nil)).Elem()
}

func (i GetInstancePrivateDnsNameOptionArgs) ToGetInstancePrivateDnsNameOptionOutput() GetInstancePrivateDnsNameOptionOutput {
	return i.ToGetInstancePrivateDnsNameOptionOutputWithContext(context.Background())
}

func (i GetInstancePrivateDnsNameOptionArgs) ToGetInstancePrivateDnsNameOptionOutputWithContext(ctx context.Context) GetInstancePrivateDnsNameOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePrivateDnsNameOptionOutput)
}

func (i *GetInstancePrivateDnsNameOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstancePrivateDnsNameOptionArgs] {
	return pulumix.Val(i)
}

type GetInstancePrivateDnsNameOptionOutput struct{ *pulumi.OutputState }

func (GetInstancePrivateDnsNameOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePrivateDnsNameOption)(nil)).Elem()
}

func (o GetInstancePrivateDnsNameOptionOutput) ToGetInstancePrivateDnsNameOptionOutput() GetInstancePrivateDnsNameOptionOutput {
	return o
}

func (o GetInstancePrivateDnsNameOptionOutput) ToGetInstancePrivateDnsNameOptionOutputWithContext(ctx context.Context) GetInstancePrivateDnsNameOptionOutput {
	return o
}

func (o GetInstancePrivateDnsNameOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancePrivateDnsNameOption] {
	return pulumix.Output[GetInstancePrivateDnsNameOption]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
func (o GetInstancePrivateDnsNameOptionOutput) EnableResourceNameDnsARecord() pulumix.Output[bool] {
	return pulumix.Apply[GetInstancePrivateDnsNameOption](o, func(v GetInstancePrivateDnsNameOption) bool { return v.EnableResourceNameDnsARecord })
}

// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
func (o GetInstancePrivateDnsNameOptionOutput) EnableResourceNameDnsAaaaRecord() pulumix.Output[bool] {
	return pulumix.Apply[GetInstancePrivateDnsNameOption](o, func(v GetInstancePrivateDnsNameOption) bool { return v.EnableResourceNameDnsAaaaRecord })
}

// Type of hostname for EC2 instances.
func (o GetInstancePrivateDnsNameOptionOutput) HostnameType() pulumix.Output[string] {
	return pulumix.Apply[GetInstancePrivateDnsNameOption](o, func(v GetInstancePrivateDnsNameOption) string { return v.HostnameType })
}

type GetInstanceRootBlockDevice struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     int    `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	// Map of tags assigned to the Instance.
	Tags map[string]string `pulumi:"tags"`
	// Throughput of the volume, in MiB/s.
	Throughput int    `pulumi:"throughput"`
	VolumeId   string `pulumi:"volumeId"`
	// Size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetInstanceRootBlockDeviceArgs struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination pulumix.Input[bool] `pulumi:"deleteOnTermination"`
	// Physical name of the device.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted pulumix.Input[bool] `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     pulumix.Input[int]    `pulumi:"iops"`
	KmsKeyId pulumix.Input[string] `pulumi:"kmsKeyId"`
	// Map of tags assigned to the Instance.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Throughput of the volume, in MiB/s.
	Throughput pulumix.Input[int]    `pulumi:"throughput"`
	VolumeId   pulumix.Input[string] `pulumi:"volumeId"`
	// Size of the volume, in GiB.
	VolumeSize pulumix.Input[int] `pulumi:"volumeSize"`
	// Type of the volume.
	VolumeType pulumix.Input[string] `pulumi:"volumeType"`
}

func (GetInstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceRootBlockDevice)(nil)).Elem()
}

func (i GetInstanceRootBlockDeviceArgs) ToGetInstanceRootBlockDeviceOutput() GetInstanceRootBlockDeviceOutput {
	return i.ToGetInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceRootBlockDeviceArgs) ToGetInstanceRootBlockDeviceOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceRootBlockDeviceOutput)
}

func (i *GetInstanceRootBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceRootBlockDeviceArgs] {
	return pulumix.Val(i)
}

type GetInstanceRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetInstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceRootBlockDevice)(nil)).Elem()
}

func (o GetInstanceRootBlockDeviceOutput) ToGetInstanceRootBlockDeviceOutput() GetInstanceRootBlockDeviceOutput {
	return o
}

func (o GetInstanceRootBlockDeviceOutput) ToGetInstanceRootBlockDeviceOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceOutput {
	return o
}

func (o GetInstanceRootBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceRootBlockDevice] {
	return pulumix.Output[GetInstanceRootBlockDevice]{
		OutputState: o.OutputState,
	}
}

// If the root block device will be deleted on termination.
func (o GetInstanceRootBlockDeviceOutput) DeleteOnTermination() pulumix.Output[bool] {
	return pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) bool { return v.DeleteOnTermination })
}

// Physical name of the device.
func (o GetInstanceRootBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) string { return v.DeviceName })
}

// If the EBS volume is encrypted.
func (o GetInstanceRootBlockDeviceOutput) Encrypted() pulumix.Output[bool] {
	return pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) bool { return v.Encrypted })
}

// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
func (o GetInstanceRootBlockDeviceOutput) Iops() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) int { return v.Iops })
}

func (o GetInstanceRootBlockDeviceOutput) KmsKeyId() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) string { return v.KmsKeyId })
}

// Map of tags assigned to the Instance.
func (o GetInstanceRootBlockDeviceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// Throughput of the volume, in MiB/s.
func (o GetInstanceRootBlockDeviceOutput) Throughput() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) int { return v.Throughput })
}

func (o GetInstanceRootBlockDeviceOutput) VolumeId() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) string { return v.VolumeId })
}

// Size of the volume, in GiB.
func (o GetInstanceRootBlockDeviceOutput) VolumeSize() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) int { return v.VolumeSize })
}

// Type of the volume.
func (o GetInstanceRootBlockDeviceOutput) VolumeType() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceRootBlockDevice](o, func(v GetInstanceRootBlockDevice) string { return v.VolumeType })
}

type GetInstanceTypeFpga struct {
	Count        int    `pulumi:"count"`
	Manufacturer string `pulumi:"manufacturer"`
	// Size of the instance memory, in MiB.
	MemorySize int    `pulumi:"memorySize"`
	Name       string `pulumi:"name"`
}

type GetInstanceTypeFpgaArgs struct {
	Count        pulumix.Input[int]    `pulumi:"count"`
	Manufacturer pulumix.Input[string] `pulumi:"manufacturer"`
	// Size of the instance memory, in MiB.
	MemorySize pulumix.Input[int]    `pulumi:"memorySize"`
	Name       pulumix.Input[string] `pulumi:"name"`
}

func (GetInstanceTypeFpgaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeFpga)(nil)).Elem()
}

func (i GetInstanceTypeFpgaArgs) ToGetInstanceTypeFpgaOutput() GetInstanceTypeFpgaOutput {
	return i.ToGetInstanceTypeFpgaOutputWithContext(context.Background())
}

func (i GetInstanceTypeFpgaArgs) ToGetInstanceTypeFpgaOutputWithContext(ctx context.Context) GetInstanceTypeFpgaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeFpgaOutput)
}

func (i *GetInstanceTypeFpgaArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceTypeFpgaArgs] {
	return pulumix.Val(i)
}

type GetInstanceTypeFpgaOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeFpgaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeFpga)(nil)).Elem()
}

func (o GetInstanceTypeFpgaOutput) ToGetInstanceTypeFpgaOutput() GetInstanceTypeFpgaOutput {
	return o
}

func (o GetInstanceTypeFpgaOutput) ToGetInstanceTypeFpgaOutputWithContext(ctx context.Context) GetInstanceTypeFpgaOutput {
	return o
}

func (o GetInstanceTypeFpgaOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeFpga] {
	return pulumix.Output[GetInstanceTypeFpga]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeFpgaOutput) Count() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceTypeFpga](o, func(v GetInstanceTypeFpga) int { return v.Count })
}

func (o GetInstanceTypeFpgaOutput) Manufacturer() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypeFpga](o, func(v GetInstanceTypeFpga) string { return v.Manufacturer })
}

// Size of the instance memory, in MiB.
func (o GetInstanceTypeFpgaOutput) MemorySize() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceTypeFpga](o, func(v GetInstanceTypeFpga) int { return v.MemorySize })
}

func (o GetInstanceTypeFpgaOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypeFpga](o, func(v GetInstanceTypeFpga) string { return v.Name })
}

type GetInstanceTypeGpus struct {
	Count        int    `pulumi:"count"`
	Manufacturer string `pulumi:"manufacturer"`
	// Size of the instance memory, in MiB.
	MemorySize int    `pulumi:"memorySize"`
	Name       string `pulumi:"name"`
}

type GetInstanceTypeGpusArgs struct {
	Count        pulumix.Input[int]    `pulumi:"count"`
	Manufacturer pulumix.Input[string] `pulumi:"manufacturer"`
	// Size of the instance memory, in MiB.
	MemorySize pulumix.Input[int]    `pulumi:"memorySize"`
	Name       pulumix.Input[string] `pulumi:"name"`
}

func (GetInstanceTypeGpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeGpus)(nil)).Elem()
}

func (i GetInstanceTypeGpusArgs) ToGetInstanceTypeGpusOutput() GetInstanceTypeGpusOutput {
	return i.ToGetInstanceTypeGpusOutputWithContext(context.Background())
}

func (i GetInstanceTypeGpusArgs) ToGetInstanceTypeGpusOutputWithContext(ctx context.Context) GetInstanceTypeGpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeGpusOutput)
}

func (i *GetInstanceTypeGpusArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceTypeGpusArgs] {
	return pulumix.Val(i)
}

type GetInstanceTypeGpusOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeGpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeGpus)(nil)).Elem()
}

func (o GetInstanceTypeGpusOutput) ToGetInstanceTypeGpusOutput() GetInstanceTypeGpusOutput {
	return o
}

func (o GetInstanceTypeGpusOutput) ToGetInstanceTypeGpusOutputWithContext(ctx context.Context) GetInstanceTypeGpusOutput {
	return o
}

func (o GetInstanceTypeGpusOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeGpus] {
	return pulumix.Output[GetInstanceTypeGpus]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeGpusOutput) Count() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceTypeGpus](o, func(v GetInstanceTypeGpus) int { return v.Count })
}

func (o GetInstanceTypeGpusOutput) Manufacturer() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypeGpus](o, func(v GetInstanceTypeGpus) string { return v.Manufacturer })
}

// Size of the instance memory, in MiB.
func (o GetInstanceTypeGpusOutput) MemorySize() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceTypeGpus](o, func(v GetInstanceTypeGpus) int { return v.MemorySize })
}

func (o GetInstanceTypeGpusOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypeGpus](o, func(v GetInstanceTypeGpus) string { return v.Name })
}

type GetInstanceTypeInferenceAccelerator struct {
	Count        int    `pulumi:"count"`
	Manufacturer string `pulumi:"manufacturer"`
	Name         string `pulumi:"name"`
}

type GetInstanceTypeInferenceAcceleratorArgs struct {
	Count        pulumix.Input[int]    `pulumi:"count"`
	Manufacturer pulumix.Input[string] `pulumi:"manufacturer"`
	Name         pulumix.Input[string] `pulumi:"name"`
}

func (GetInstanceTypeInferenceAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeInferenceAccelerator)(nil)).Elem()
}

func (i GetInstanceTypeInferenceAcceleratorArgs) ToGetInstanceTypeInferenceAcceleratorOutput() GetInstanceTypeInferenceAcceleratorOutput {
	return i.ToGetInstanceTypeInferenceAcceleratorOutputWithContext(context.Background())
}

func (i GetInstanceTypeInferenceAcceleratorArgs) ToGetInstanceTypeInferenceAcceleratorOutputWithContext(ctx context.Context) GetInstanceTypeInferenceAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeInferenceAcceleratorOutput)
}

func (i *GetInstanceTypeInferenceAcceleratorArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceTypeInferenceAcceleratorArgs] {
	return pulumix.Val(i)
}

type GetInstanceTypeInferenceAcceleratorOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeInferenceAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeInferenceAccelerator)(nil)).Elem()
}

func (o GetInstanceTypeInferenceAcceleratorOutput) ToGetInstanceTypeInferenceAcceleratorOutput() GetInstanceTypeInferenceAcceleratorOutput {
	return o
}

func (o GetInstanceTypeInferenceAcceleratorOutput) ToGetInstanceTypeInferenceAcceleratorOutputWithContext(ctx context.Context) GetInstanceTypeInferenceAcceleratorOutput {
	return o
}

func (o GetInstanceTypeInferenceAcceleratorOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeInferenceAccelerator] {
	return pulumix.Output[GetInstanceTypeInferenceAccelerator]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeInferenceAcceleratorOutput) Count() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceTypeInferenceAccelerator](o, func(v GetInstanceTypeInferenceAccelerator) int { return v.Count })
}

func (o GetInstanceTypeInferenceAcceleratorOutput) Manufacturer() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypeInferenceAccelerator](o, func(v GetInstanceTypeInferenceAccelerator) string { return v.Manufacturer })
}

func (o GetInstanceTypeInferenceAcceleratorOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypeInferenceAccelerator](o, func(v GetInstanceTypeInferenceAccelerator) string { return v.Name })
}

type GetInstanceTypeInstanceDisk struct {
	Count int    `pulumi:"count"`
	Size  int    `pulumi:"size"`
	Type  string `pulumi:"type"`
}

type GetInstanceTypeInstanceDiskArgs struct {
	Count pulumix.Input[int]    `pulumi:"count"`
	Size  pulumix.Input[int]    `pulumi:"size"`
	Type  pulumix.Input[string] `pulumi:"type"`
}

func (GetInstanceTypeInstanceDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeInstanceDisk)(nil)).Elem()
}

func (i GetInstanceTypeInstanceDiskArgs) ToGetInstanceTypeInstanceDiskOutput() GetInstanceTypeInstanceDiskOutput {
	return i.ToGetInstanceTypeInstanceDiskOutputWithContext(context.Background())
}

func (i GetInstanceTypeInstanceDiskArgs) ToGetInstanceTypeInstanceDiskOutputWithContext(ctx context.Context) GetInstanceTypeInstanceDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeInstanceDiskOutput)
}

func (i *GetInstanceTypeInstanceDiskArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceTypeInstanceDiskArgs] {
	return pulumix.Val(i)
}

type GetInstanceTypeInstanceDiskOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeInstanceDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeInstanceDisk)(nil)).Elem()
}

func (o GetInstanceTypeInstanceDiskOutput) ToGetInstanceTypeInstanceDiskOutput() GetInstanceTypeInstanceDiskOutput {
	return o
}

func (o GetInstanceTypeInstanceDiskOutput) ToGetInstanceTypeInstanceDiskOutputWithContext(ctx context.Context) GetInstanceTypeInstanceDiskOutput {
	return o
}

func (o GetInstanceTypeInstanceDiskOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeInstanceDisk] {
	return pulumix.Output[GetInstanceTypeInstanceDisk]{
		OutputState: o.OutputState,
	}
}

func (o GetInstanceTypeInstanceDiskOutput) Count() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceTypeInstanceDisk](o, func(v GetInstanceTypeInstanceDisk) int { return v.Count })
}

func (o GetInstanceTypeInstanceDiskOutput) Size() pulumix.Output[int] {
	return pulumix.Apply[GetInstanceTypeInstanceDisk](o, func(v GetInstanceTypeInstanceDisk) int { return v.Size })
}

func (o GetInstanceTypeInstanceDiskOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypeInstanceDisk](o, func(v GetInstanceTypeInstanceDisk) string { return v.Type })
}

type GetInstanceTypeOfferingFilter struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetInstanceTypeOfferingFilterArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetInstanceTypeOfferingFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingFilterArgs) ToGetInstanceTypeOfferingFilterOutput() GetInstanceTypeOfferingFilterOutput {
	return i.ToGetInstanceTypeOfferingFilterOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingFilterArgs) ToGetInstanceTypeOfferingFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingFilterOutput)
}

func (i *GetInstanceTypeOfferingFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceTypeOfferingFilterArgs] {
	return pulumix.Val(i)
}

type GetInstanceTypeOfferingFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingFilterOutput) ToGetInstanceTypeOfferingFilterOutput() GetInstanceTypeOfferingFilterOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterOutput) ToGetInstanceTypeOfferingFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeOfferingFilter] {
	return pulumix.Output[GetInstanceTypeOfferingFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
func (o GetInstanceTypeOfferingFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypeOfferingFilter](o, func(v GetInstanceTypeOfferingFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetInstanceTypeOfferingFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetInstanceTypeOfferingFilter](o, func(v GetInstanceTypeOfferingFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetInstanceTypeOfferingsFilter struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetInstanceTypeOfferingsFilterArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetInstanceTypeOfferingsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingsFilterArgs) ToGetInstanceTypeOfferingsFilterOutput() GetInstanceTypeOfferingsFilterOutput {
	return i.ToGetInstanceTypeOfferingsFilterOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingsFilterArgs) ToGetInstanceTypeOfferingsFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingsFilterOutput)
}

func (i *GetInstanceTypeOfferingsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceTypeOfferingsFilterArgs] {
	return pulumix.Val(i)
}

type GetInstanceTypeOfferingsFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingsFilterOutput) ToGetInstanceTypeOfferingsFilterOutput() GetInstanceTypeOfferingsFilterOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterOutput) ToGetInstanceTypeOfferingsFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypeOfferingsFilter] {
	return pulumix.Output[GetInstanceTypeOfferingsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
func (o GetInstanceTypeOfferingsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypeOfferingsFilter](o, func(v GetInstanceTypeOfferingsFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetInstanceTypeOfferingsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetInstanceTypeOfferingsFilter](o, func(v GetInstanceTypeOfferingsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetInstanceTypesFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetInstanceTypesFilterArgs struct {
	// Name of the filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetInstanceTypesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesFilter)(nil)).Elem()
}

func (i GetInstanceTypesFilterArgs) ToGetInstanceTypesFilterOutput() GetInstanceTypesFilterOutput {
	return i.ToGetInstanceTypesFilterOutputWithContext(context.Background())
}

func (i GetInstanceTypesFilterArgs) ToGetInstanceTypesFilterOutputWithContext(ctx context.Context) GetInstanceTypesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesFilterOutput)
}

func (i *GetInstanceTypesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstanceTypesFilterArgs] {
	return pulumix.Val(i)
}

type GetInstanceTypesFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesFilter)(nil)).Elem()
}

func (o GetInstanceTypesFilterOutput) ToGetInstanceTypesFilterOutput() GetInstanceTypesFilterOutput {
	return o
}

func (o GetInstanceTypesFilterOutput) ToGetInstanceTypesFilterOutputWithContext(ctx context.Context) GetInstanceTypesFilterOutput {
	return o
}

func (o GetInstanceTypesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstanceTypesFilter] {
	return pulumix.Output[GetInstanceTypesFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetInstanceTypesFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetInstanceTypesFilter](o, func(v GetInstanceTypesFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetInstanceTypesFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetInstanceTypesFilter](o, func(v GetInstanceTypesFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetInstancesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInstancesFilterArgs struct {
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

func (i *GetInstancesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInstancesFilterArgs] {
	return pulumix.Val(i)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetInstancesFilter] {
	return pulumix.Output[GetInstancesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetInstancesFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetInstancesFilter](o, func(v GetInstancesFilter) string { return v.Name })
}

func (o GetInstancesFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetInstancesFilter](o, func(v GetInstancesFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetInternetGatewayAttachmentType struct {
	// Current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
	State string `pulumi:"state"`
	// ID of an attached VPC.
	VpcId string `pulumi:"vpcId"`
}

type GetInternetGatewayAttachmentTypeArgs struct {
	// Current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
	State pulumix.Input[string] `pulumi:"state"`
	// ID of an attached VPC.
	VpcId pulumix.Input[string] `pulumi:"vpcId"`
}

func (GetInternetGatewayAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayAttachmentType)(nil)).Elem()
}

func (i GetInternetGatewayAttachmentTypeArgs) ToGetInternetGatewayAttachmentTypeOutput() GetInternetGatewayAttachmentTypeOutput {
	return i.ToGetInternetGatewayAttachmentTypeOutputWithContext(context.Background())
}

func (i GetInternetGatewayAttachmentTypeArgs) ToGetInternetGatewayAttachmentTypeOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayAttachmentTypeOutput)
}

func (i *GetInternetGatewayAttachmentTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInternetGatewayAttachmentTypeArgs] {
	return pulumix.Val(i)
}

type GetInternetGatewayAttachmentTypeOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayAttachmentType)(nil)).Elem()
}

func (o GetInternetGatewayAttachmentTypeOutput) ToGetInternetGatewayAttachmentTypeOutput() GetInternetGatewayAttachmentTypeOutput {
	return o
}

func (o GetInternetGatewayAttachmentTypeOutput) ToGetInternetGatewayAttachmentTypeOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentTypeOutput {
	return o
}

func (o GetInternetGatewayAttachmentTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetInternetGatewayAttachmentType] {
	return pulumix.Output[GetInternetGatewayAttachmentType]{
		OutputState: o.OutputState,
	}
}

// Current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
func (o GetInternetGatewayAttachmentTypeOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetInternetGatewayAttachmentType](o, func(v GetInternetGatewayAttachmentType) string { return v.State })
}

// ID of an attached VPC.
func (o GetInternetGatewayAttachmentTypeOutput) VpcId() pulumix.Output[string] {
	return pulumix.Apply[GetInternetGatewayAttachmentType](o, func(v GetInternetGatewayAttachmentType) string { return v.VpcId })
}

type GetInternetGatewayFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Internet Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetInternetGatewayFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Internet Gateway will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetInternetGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayFilter)(nil)).Elem()
}

func (i GetInternetGatewayFilterArgs) ToGetInternetGatewayFilterOutput() GetInternetGatewayFilterOutput {
	return i.ToGetInternetGatewayFilterOutputWithContext(context.Background())
}

func (i GetInternetGatewayFilterArgs) ToGetInternetGatewayFilterOutputWithContext(ctx context.Context) GetInternetGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayFilterOutput)
}

func (i *GetInternetGatewayFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetInternetGatewayFilterArgs] {
	return pulumix.Val(i)
}

type GetInternetGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayFilter)(nil)).Elem()
}

func (o GetInternetGatewayFilterOutput) ToGetInternetGatewayFilterOutput() GetInternetGatewayFilterOutput {
	return o
}

func (o GetInternetGatewayFilterOutput) ToGetInternetGatewayFilterOutputWithContext(ctx context.Context) GetInternetGatewayFilterOutput {
	return o
}

func (o GetInternetGatewayFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetInternetGatewayFilter] {
	return pulumix.Output[GetInternetGatewayFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
func (o GetInternetGatewayFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetInternetGatewayFilter](o, func(v GetInternetGatewayFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// An Internet Gateway will be selected if any one of the given values matches.
func (o GetInternetGatewayFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetInternetGatewayFilter](o, func(v GetInternetGatewayFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetKeyPairFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeKeyPairs API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeKeyPairs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetKeyPairFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeKeyPairs API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeKeyPairs.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetKeyPairFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPairFilter)(nil)).Elem()
}

func (i GetKeyPairFilterArgs) ToGetKeyPairFilterOutput() GetKeyPairFilterOutput {
	return i.ToGetKeyPairFilterOutputWithContext(context.Background())
}

func (i GetKeyPairFilterArgs) ToGetKeyPairFilterOutputWithContext(ctx context.Context) GetKeyPairFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyPairFilterOutput)
}

func (i *GetKeyPairFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetKeyPairFilterArgs] {
	return pulumix.Val(i)
}

type GetKeyPairFilterOutput struct{ *pulumi.OutputState }

func (GetKeyPairFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPairFilter)(nil)).Elem()
}

func (o GetKeyPairFilterOutput) ToGetKeyPairFilterOutput() GetKeyPairFilterOutput {
	return o
}

func (o GetKeyPairFilterOutput) ToGetKeyPairFilterOutputWithContext(ctx context.Context) GetKeyPairFilterOutput {
	return o
}

func (o GetKeyPairFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyPairFilter] {
	return pulumix.Output[GetKeyPairFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribeKeyPairs API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeKeyPairs.html).
func (o GetKeyPairFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetKeyPairFilter](o, func(v GetKeyPairFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetKeyPairFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetKeyPairFilter](o, func(v GetKeyPairFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetLaunchConfigurationEbsBlockDevice struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the volume is Encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// Provisioned IOPs of the volume.
	Iops int `pulumi:"iops"`
	// Whether the device in the block device mapping of the AMI is suppressed.
	NoDevice bool `pulumi:"noDevice"`
	// Snapshot ID of the mount.
	SnapshotId string `pulumi:"snapshotId"`
	// Throughput of the volume.
	Throughput int `pulumi:"throughput"`
	// Size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetLaunchConfigurationEbsBlockDeviceArgs struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination pulumix.Input[bool] `pulumi:"deleteOnTermination"`
	// Name of the device.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Whether the volume is Encrypted.
	Encrypted pulumix.Input[bool] `pulumi:"encrypted"`
	// Provisioned IOPs of the volume.
	Iops pulumix.Input[int] `pulumi:"iops"`
	// Whether the device in the block device mapping of the AMI is suppressed.
	NoDevice pulumix.Input[bool] `pulumi:"noDevice"`
	// Snapshot ID of the mount.
	SnapshotId pulumix.Input[string] `pulumi:"snapshotId"`
	// Throughput of the volume.
	Throughput pulumix.Input[int] `pulumi:"throughput"`
	// Size of the volume.
	VolumeSize pulumix.Input[int] `pulumi:"volumeSize"`
	// Type of the volume.
	VolumeType pulumix.Input[string] `pulumi:"volumeType"`
}

func (GetLaunchConfigurationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEbsBlockDeviceArgs) ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput {
	return i.ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEbsBlockDeviceArgs) ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEbsBlockDeviceOutput)
}

func (i *GetLaunchConfigurationEbsBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchConfigurationEbsBlockDeviceArgs] {
	return pulumix.Val(i)
}

type GetLaunchConfigurationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEbsBlockDeviceOutput) ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceOutput) ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchConfigurationEbsBlockDevice] {
	return pulumix.Output[GetLaunchConfigurationEbsBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Whether the EBS Volume will be deleted on instance termination.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) DeleteOnTermination() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchConfigurationEbsBlockDevice](o, func(v GetLaunchConfigurationEbsBlockDevice) bool { return v.DeleteOnTermination })
}

// Name of the device.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchConfigurationEbsBlockDevice](o, func(v GetLaunchConfigurationEbsBlockDevice) string { return v.DeviceName })
}

// Whether the volume is Encrypted.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) Encrypted() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchConfigurationEbsBlockDevice](o, func(v GetLaunchConfigurationEbsBlockDevice) bool { return v.Encrypted })
}

// Provisioned IOPs of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) Iops() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchConfigurationEbsBlockDevice](o, func(v GetLaunchConfigurationEbsBlockDevice) int { return v.Iops })
}

// Whether the device in the block device mapping of the AMI is suppressed.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) NoDevice() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchConfigurationEbsBlockDevice](o, func(v GetLaunchConfigurationEbsBlockDevice) bool { return v.NoDevice })
}

// Snapshot ID of the mount.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) SnapshotId() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchConfigurationEbsBlockDevice](o, func(v GetLaunchConfigurationEbsBlockDevice) string { return v.SnapshotId })
}

// Throughput of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) Throughput() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchConfigurationEbsBlockDevice](o, func(v GetLaunchConfigurationEbsBlockDevice) int { return v.Throughput })
}

// Size of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) VolumeSize() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchConfigurationEbsBlockDevice](o, func(v GetLaunchConfigurationEbsBlockDevice) int { return v.VolumeSize })
}

// Type of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) VolumeType() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchConfigurationEbsBlockDevice](o, func(v GetLaunchConfigurationEbsBlockDevice) string { return v.VolumeType })
}

type GetLaunchConfigurationEphemeralBlockDevice struct {
	// Name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Virtual Name of the device.
	VirtualName string `pulumi:"virtualName"`
}

type GetLaunchConfigurationEphemeralBlockDeviceArgs struct {
	// Name of the device.
	DeviceName pulumix.Input[string] `pulumi:"deviceName"`
	// Virtual Name of the device.
	VirtualName pulumix.Input[string] `pulumi:"virtualName"`
}

func (GetLaunchConfigurationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArgs) ToGetLaunchConfigurationEphemeralBlockDeviceOutput() GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return i.ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArgs) ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEphemeralBlockDeviceOutput)
}

func (i *GetLaunchConfigurationEphemeralBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchConfigurationEphemeralBlockDeviceArgs] {
	return pulumix.Val(i)
}

type GetLaunchConfigurationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) ToGetLaunchConfigurationEphemeralBlockDeviceOutput() GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchConfigurationEphemeralBlockDevice] {
	return pulumix.Output[GetLaunchConfigurationEphemeralBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Name of the device.
func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchConfigurationEphemeralBlockDevice](o, func(v GetLaunchConfigurationEphemeralBlockDevice) string { return v.DeviceName })
}

// Virtual Name of the device.
func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) VirtualName() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchConfigurationEphemeralBlockDevice](o, func(v GetLaunchConfigurationEphemeralBlockDevice) string { return v.VirtualName })
}

type GetLaunchConfigurationMetadataOption struct {
	// State of the metadata service: `enabled`, `disabled`.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens string `pulumi:"httpTokens"`
}

type GetLaunchConfigurationMetadataOptionArgs struct {
	// State of the metadata service: `enabled`, `disabled`.
	HttpEndpoint pulumix.Input[string] `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit pulumix.Input[int] `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens pulumix.Input[string] `pulumi:"httpTokens"`
}

func (GetLaunchConfigurationMetadataOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationMetadataOption)(nil)).Elem()
}

func (i GetLaunchConfigurationMetadataOptionArgs) ToGetLaunchConfigurationMetadataOptionOutput() GetLaunchConfigurationMetadataOptionOutput {
	return i.ToGetLaunchConfigurationMetadataOptionOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationMetadataOptionArgs) ToGetLaunchConfigurationMetadataOptionOutputWithContext(ctx context.Context) GetLaunchConfigurationMetadataOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationMetadataOptionOutput)
}

func (i *GetLaunchConfigurationMetadataOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchConfigurationMetadataOptionArgs] {
	return pulumix.Val(i)
}

type GetLaunchConfigurationMetadataOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationMetadataOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationMetadataOption)(nil)).Elem()
}

func (o GetLaunchConfigurationMetadataOptionOutput) ToGetLaunchConfigurationMetadataOptionOutput() GetLaunchConfigurationMetadataOptionOutput {
	return o
}

func (o GetLaunchConfigurationMetadataOptionOutput) ToGetLaunchConfigurationMetadataOptionOutputWithContext(ctx context.Context) GetLaunchConfigurationMetadataOptionOutput {
	return o
}

func (o GetLaunchConfigurationMetadataOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchConfigurationMetadataOption] {
	return pulumix.Output[GetLaunchConfigurationMetadataOption]{
		OutputState: o.OutputState,
	}
}

// State of the metadata service: `enabled`, `disabled`.
func (o GetLaunchConfigurationMetadataOptionOutput) HttpEndpoint() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchConfigurationMetadataOption](o, func(v GetLaunchConfigurationMetadataOption) string { return v.HttpEndpoint })
}

// The desired HTTP PUT response hop limit for instance metadata requests.
func (o GetLaunchConfigurationMetadataOptionOutput) HttpPutResponseHopLimit() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchConfigurationMetadataOption](o, func(v GetLaunchConfigurationMetadataOption) int { return v.HttpPutResponseHopLimit })
}

// If session tokens are required: `optional`, `required`.
func (o GetLaunchConfigurationMetadataOptionOutput) HttpTokens() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchConfigurationMetadataOption](o, func(v GetLaunchConfigurationMetadataOption) string { return v.HttpTokens })
}

type GetLaunchConfigurationRootBlockDevice struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Whether the volume is Encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// Provisioned IOPs of the volume.
	Iops int `pulumi:"iops"`
	// Throughput of the volume.
	Throughput int `pulumi:"throughput"`
	// Size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetLaunchConfigurationRootBlockDeviceArgs struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination pulumix.Input[bool] `pulumi:"deleteOnTermination"`
	// Whether the volume is Encrypted.
	Encrypted pulumix.Input[bool] `pulumi:"encrypted"`
	// Provisioned IOPs of the volume.
	Iops pulumix.Input[int] `pulumi:"iops"`
	// Throughput of the volume.
	Throughput pulumix.Input[int] `pulumi:"throughput"`
	// Size of the volume.
	VolumeSize pulumix.Input[int] `pulumi:"volumeSize"`
	// Type of the volume.
	VolumeType pulumix.Input[string] `pulumi:"volumeType"`
}

func (GetLaunchConfigurationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationRootBlockDeviceArgs) ToGetLaunchConfigurationRootBlockDeviceOutput() GetLaunchConfigurationRootBlockDeviceOutput {
	return i.ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationRootBlockDeviceArgs) ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationRootBlockDeviceOutput)
}

func (i *GetLaunchConfigurationRootBlockDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchConfigurationRootBlockDeviceArgs] {
	return pulumix.Val(i)
}

type GetLaunchConfigurationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationRootBlockDeviceOutput) ToGetLaunchConfigurationRootBlockDeviceOutput() GetLaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationRootBlockDeviceOutput) ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationRootBlockDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchConfigurationRootBlockDevice] {
	return pulumix.Output[GetLaunchConfigurationRootBlockDevice]{
		OutputState: o.OutputState,
	}
}

// Whether the EBS Volume will be deleted on instance termination.
func (o GetLaunchConfigurationRootBlockDeviceOutput) DeleteOnTermination() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchConfigurationRootBlockDevice](o, func(v GetLaunchConfigurationRootBlockDevice) bool { return v.DeleteOnTermination })
}

// Whether the volume is Encrypted.
func (o GetLaunchConfigurationRootBlockDeviceOutput) Encrypted() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchConfigurationRootBlockDevice](o, func(v GetLaunchConfigurationRootBlockDevice) bool { return v.Encrypted })
}

// Provisioned IOPs of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) Iops() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchConfigurationRootBlockDevice](o, func(v GetLaunchConfigurationRootBlockDevice) int { return v.Iops })
}

// Throughput of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) Throughput() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchConfigurationRootBlockDevice](o, func(v GetLaunchConfigurationRootBlockDevice) int { return v.Throughput })
}

// Size of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) VolumeSize() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchConfigurationRootBlockDevice](o, func(v GetLaunchConfigurationRootBlockDevice) int { return v.VolumeSize })
}

// Type of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) VolumeType() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchConfigurationRootBlockDevice](o, func(v GetLaunchConfigurationRootBlockDevice) string { return v.VolumeType })
}

type GetLaunchTemplateBlockDeviceMapping struct {
	DeviceName  string                                  `pulumi:"deviceName"`
	Ebs         []GetLaunchTemplateBlockDeviceMappingEb `pulumi:"ebs"`
	NoDevice    string                                  `pulumi:"noDevice"`
	VirtualName string                                  `pulumi:"virtualName"`
}

type GetLaunchTemplateBlockDeviceMappingArgs struct {
	DeviceName  pulumix.Input[string]                                       `pulumi:"deviceName"`
	Ebs         pulumix.Input[[]*GetLaunchTemplateBlockDeviceMappingEbArgs] `pulumi:"ebs"`
	NoDevice    pulumix.Input[string]                                       `pulumi:"noDevice"`
	VirtualName pulumix.Input[string]                                       `pulumi:"virtualName"`
}

func (GetLaunchTemplateBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingArgs) ToGetLaunchTemplateBlockDeviceMappingOutput() GetLaunchTemplateBlockDeviceMappingOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingArgs) ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingOutput)
}

func (i *GetLaunchTemplateBlockDeviceMappingArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateBlockDeviceMappingArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) ToGetLaunchTemplateBlockDeviceMappingOutput() GetLaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateBlockDeviceMapping] {
	return pulumix.Output[GetLaunchTemplateBlockDeviceMapping]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) DeviceName() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMapping](o, func(v GetLaunchTemplateBlockDeviceMapping) string { return v.DeviceName })
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) Ebs() pulumix.GArrayOutput[GetLaunchTemplateBlockDeviceMappingEb, GetLaunchTemplateBlockDeviceMappingEbOutput] {
	value := pulumix.Apply[GetLaunchTemplateBlockDeviceMapping](o, func(v GetLaunchTemplateBlockDeviceMapping) []GetLaunchTemplateBlockDeviceMappingEb { return v.Ebs })
	return pulumix.GArrayOutput[GetLaunchTemplateBlockDeviceMappingEb, GetLaunchTemplateBlockDeviceMappingEbOutput]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) NoDevice() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMapping](o, func(v GetLaunchTemplateBlockDeviceMapping) string { return v.NoDevice })
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) VirtualName() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMapping](o, func(v GetLaunchTemplateBlockDeviceMapping) string { return v.VirtualName })
}

type GetLaunchTemplateBlockDeviceMappingEb struct {
	DeleteOnTermination string `pulumi:"deleteOnTermination"`
	Encrypted           string `pulumi:"encrypted"`
	Iops                int    `pulumi:"iops"`
	KmsKeyId            string `pulumi:"kmsKeyId"`
	SnapshotId          string `pulumi:"snapshotId"`
	Throughput          int    `pulumi:"throughput"`
	VolumeSize          int    `pulumi:"volumeSize"`
	VolumeType          string `pulumi:"volumeType"`
}

type GetLaunchTemplateBlockDeviceMappingEbArgs struct {
	DeleteOnTermination pulumix.Input[string] `pulumi:"deleteOnTermination"`
	Encrypted           pulumix.Input[string] `pulumi:"encrypted"`
	Iops                pulumix.Input[int]    `pulumi:"iops"`
	KmsKeyId            pulumix.Input[string] `pulumi:"kmsKeyId"`
	SnapshotId          pulumix.Input[string] `pulumi:"snapshotId"`
	Throughput          pulumix.Input[int]    `pulumi:"throughput"`
	VolumeSize          pulumix.Input[int]    `pulumi:"volumeSize"`
	VolumeType          pulumix.Input[string] `pulumi:"volumeType"`
}

func (GetLaunchTemplateBlockDeviceMappingEbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingEbArgs) ToGetLaunchTemplateBlockDeviceMappingEbOutput() GetLaunchTemplateBlockDeviceMappingEbOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingEbArgs) ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingEbOutput)
}

func (i *GetLaunchTemplateBlockDeviceMappingEbArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateBlockDeviceMappingEbArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateBlockDeviceMappingEbOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingEbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) ToGetLaunchTemplateBlockDeviceMappingEbOutput() GetLaunchTemplateBlockDeviceMappingEbOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateBlockDeviceMappingEb] {
	return pulumix.Output[GetLaunchTemplateBlockDeviceMappingEb]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) DeleteOnTermination() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMappingEb](o, func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.DeleteOnTermination })
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) Encrypted() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMappingEb](o, func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.Encrypted })
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) Iops() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMappingEb](o, func(v GetLaunchTemplateBlockDeviceMappingEb) int { return v.Iops })
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) KmsKeyId() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMappingEb](o, func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.KmsKeyId })
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) SnapshotId() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMappingEb](o, func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.SnapshotId })
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) Throughput() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMappingEb](o, func(v GetLaunchTemplateBlockDeviceMappingEb) int { return v.Throughput })
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) VolumeSize() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMappingEb](o, func(v GetLaunchTemplateBlockDeviceMappingEb) int { return v.VolumeSize })
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) VolumeType() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateBlockDeviceMappingEb](o, func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.VolumeType })
}

type GetLaunchTemplateCapacityReservationSpecification struct {
	CapacityReservationPreference string                                                                       `pulumi:"capacityReservationPreference"`
	CapacityReservationTargets    []GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget `pulumi:"capacityReservationTargets"`
}

type GetLaunchTemplateCapacityReservationSpecificationArgs struct {
	CapacityReservationPreference pulumix.Input[string]                                                                            `pulumi:"capacityReservationPreference"`
	CapacityReservationTargets    pulumix.Input[[]*GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs] `pulumi:"capacityReservationTargets"`
}

func (GetLaunchTemplateCapacityReservationSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateCapacityReservationSpecificationArgs) ToGetLaunchTemplateCapacityReservationSpecificationOutput() GetLaunchTemplateCapacityReservationSpecificationOutput {
	return i.ToGetLaunchTemplateCapacityReservationSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateCapacityReservationSpecificationArgs) ToGetLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateCapacityReservationSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateCapacityReservationSpecificationOutput)
}

func (i *GetLaunchTemplateCapacityReservationSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateCapacityReservationSpecificationArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateCapacityReservationSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateCapacityReservationSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateCapacityReservationSpecificationOutput) ToGetLaunchTemplateCapacityReservationSpecificationOutput() GetLaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o GetLaunchTemplateCapacityReservationSpecificationOutput) ToGetLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o GetLaunchTemplateCapacityReservationSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateCapacityReservationSpecification] {
	return pulumix.Output[GetLaunchTemplateCapacityReservationSpecification]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationPreference() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateCapacityReservationSpecification](o, func(v GetLaunchTemplateCapacityReservationSpecification) string {
		return v.CapacityReservationPreference
	})
}

func (o GetLaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationTargets() pulumix.GArrayOutput[GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget, GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput] {
	value := pulumix.Apply[GetLaunchTemplateCapacityReservationSpecification](o, func(v GetLaunchTemplateCapacityReservationSpecification) []GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return v.CapacityReservationTargets
	})
	return pulumix.GArrayOutput[GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget, GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput]{OutputState: value.OutputState}
}

type GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget struct {
	CapacityReservationId               string `pulumi:"capacityReservationId"`
	CapacityReservationResourceGroupArn string `pulumi:"capacityReservationResourceGroupArn"`
}

type GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs struct {
	CapacityReservationId               pulumix.Input[string] `pulumi:"capacityReservationId"`
	CapacityReservationResourceGroupArn pulumix.Input[string] `pulumi:"capacityReservationResourceGroupArn"`
}

func (GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToGetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return i.ToGetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Background())
}

func (i GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToGetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput)
}

func (i *GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToGetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToGetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget] {
	return pulumix.Output[GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationId() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget](o, func(v GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) string {
		return v.CapacityReservationId
	})
}

func (o GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationResourceGroupArn() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget](o, func(v GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) string {
		return v.CapacityReservationResourceGroupArn
	})
}

type GetLaunchTemplateCpuOption struct {
	AmdSevSnp      string `pulumi:"amdSevSnp"`
	CoreCount      int    `pulumi:"coreCount"`
	ThreadsPerCore int    `pulumi:"threadsPerCore"`
}

type GetLaunchTemplateCpuOptionArgs struct {
	AmdSevSnp      pulumix.Input[string] `pulumi:"amdSevSnp"`
	CoreCount      pulumix.Input[int]    `pulumi:"coreCount"`
	ThreadsPerCore pulumix.Input[int]    `pulumi:"threadsPerCore"`
}

func (GetLaunchTemplateCpuOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCpuOption)(nil)).Elem()
}

func (i GetLaunchTemplateCpuOptionArgs) ToGetLaunchTemplateCpuOptionOutput() GetLaunchTemplateCpuOptionOutput {
	return i.ToGetLaunchTemplateCpuOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateCpuOptionArgs) ToGetLaunchTemplateCpuOptionOutputWithContext(ctx context.Context) GetLaunchTemplateCpuOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateCpuOptionOutput)
}

func (i *GetLaunchTemplateCpuOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateCpuOptionArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateCpuOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateCpuOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCpuOption)(nil)).Elem()
}

func (o GetLaunchTemplateCpuOptionOutput) ToGetLaunchTemplateCpuOptionOutput() GetLaunchTemplateCpuOptionOutput {
	return o
}

func (o GetLaunchTemplateCpuOptionOutput) ToGetLaunchTemplateCpuOptionOutputWithContext(ctx context.Context) GetLaunchTemplateCpuOptionOutput {
	return o
}

func (o GetLaunchTemplateCpuOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateCpuOption] {
	return pulumix.Output[GetLaunchTemplateCpuOption]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateCpuOptionOutput) AmdSevSnp() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateCpuOption](o, func(v GetLaunchTemplateCpuOption) string { return v.AmdSevSnp })
}

func (o GetLaunchTemplateCpuOptionOutput) CoreCount() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateCpuOption](o, func(v GetLaunchTemplateCpuOption) int { return v.CoreCount })
}

func (o GetLaunchTemplateCpuOptionOutput) ThreadsPerCore() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateCpuOption](o, func(v GetLaunchTemplateCpuOption) int { return v.ThreadsPerCore })
}

type GetLaunchTemplateCreditSpecification struct {
	CpuCredits string `pulumi:"cpuCredits"`
}

type GetLaunchTemplateCreditSpecificationArgs struct {
	CpuCredits pulumix.Input[string] `pulumi:"cpuCredits"`
}

func (GetLaunchTemplateCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateCreditSpecificationArgs) ToGetLaunchTemplateCreditSpecificationOutput() GetLaunchTemplateCreditSpecificationOutput {
	return i.ToGetLaunchTemplateCreditSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateCreditSpecificationArgs) ToGetLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateCreditSpecificationOutput)
}

func (i *GetLaunchTemplateCreditSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateCreditSpecificationArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateCreditSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateCreditSpecificationOutput) ToGetLaunchTemplateCreditSpecificationOutput() GetLaunchTemplateCreditSpecificationOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationOutput) ToGetLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateCreditSpecification] {
	return pulumix.Output[GetLaunchTemplateCreditSpecification]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateCreditSpecificationOutput) CpuCredits() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateCreditSpecification](o, func(v GetLaunchTemplateCreditSpecification) string { return v.CpuCredits })
}

type GetLaunchTemplateElasticGpuSpecification struct {
	Type string `pulumi:"type"`
}

type GetLaunchTemplateElasticGpuSpecificationArgs struct {
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetLaunchTemplateElasticGpuSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateElasticGpuSpecificationArgs) ToGetLaunchTemplateElasticGpuSpecificationOutput() GetLaunchTemplateElasticGpuSpecificationOutput {
	return i.ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateElasticGpuSpecificationArgs) ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateElasticGpuSpecificationOutput)
}

func (i *GetLaunchTemplateElasticGpuSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateElasticGpuSpecificationArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateElasticGpuSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateElasticGpuSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) ToGetLaunchTemplateElasticGpuSpecificationOutput() GetLaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateElasticGpuSpecification] {
	return pulumix.Output[GetLaunchTemplateElasticGpuSpecification]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateElasticGpuSpecification](o, func(v GetLaunchTemplateElasticGpuSpecification) string { return v.Type })
}

type GetLaunchTemplateElasticInferenceAccelerator struct {
	Type string `pulumi:"type"`
}

type GetLaunchTemplateElasticInferenceAcceleratorArgs struct {
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetLaunchTemplateElasticInferenceAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (i GetLaunchTemplateElasticInferenceAcceleratorArgs) ToGetLaunchTemplateElasticInferenceAcceleratorOutput() GetLaunchTemplateElasticInferenceAcceleratorOutput {
	return i.ToGetLaunchTemplateElasticInferenceAcceleratorOutputWithContext(context.Background())
}

func (i GetLaunchTemplateElasticInferenceAcceleratorArgs) ToGetLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) GetLaunchTemplateElasticInferenceAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateElasticInferenceAcceleratorOutput)
}

func (i *GetLaunchTemplateElasticInferenceAcceleratorArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateElasticInferenceAcceleratorArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateElasticInferenceAcceleratorOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateElasticInferenceAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (o GetLaunchTemplateElasticInferenceAcceleratorOutput) ToGetLaunchTemplateElasticInferenceAcceleratorOutput() GetLaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o GetLaunchTemplateElasticInferenceAcceleratorOutput) ToGetLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) GetLaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o GetLaunchTemplateElasticInferenceAcceleratorOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateElasticInferenceAccelerator] {
	return pulumix.Output[GetLaunchTemplateElasticInferenceAccelerator]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateElasticInferenceAcceleratorOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateElasticInferenceAccelerator](o, func(v GetLaunchTemplateElasticInferenceAccelerator) string { return v.Type })
}

type GetLaunchTemplateEnclaveOption struct {
	Enabled bool `pulumi:"enabled"`
}

type GetLaunchTemplateEnclaveOptionArgs struct {
	Enabled pulumix.Input[bool] `pulumi:"enabled"`
}

func (GetLaunchTemplateEnclaveOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateEnclaveOption)(nil)).Elem()
}

func (i GetLaunchTemplateEnclaveOptionArgs) ToGetLaunchTemplateEnclaveOptionOutput() GetLaunchTemplateEnclaveOptionOutput {
	return i.ToGetLaunchTemplateEnclaveOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateEnclaveOptionArgs) ToGetLaunchTemplateEnclaveOptionOutputWithContext(ctx context.Context) GetLaunchTemplateEnclaveOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateEnclaveOptionOutput)
}

func (i *GetLaunchTemplateEnclaveOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateEnclaveOptionArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateEnclaveOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateEnclaveOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateEnclaveOption)(nil)).Elem()
}

func (o GetLaunchTemplateEnclaveOptionOutput) ToGetLaunchTemplateEnclaveOptionOutput() GetLaunchTemplateEnclaveOptionOutput {
	return o
}

func (o GetLaunchTemplateEnclaveOptionOutput) ToGetLaunchTemplateEnclaveOptionOutputWithContext(ctx context.Context) GetLaunchTemplateEnclaveOptionOutput {
	return o
}

func (o GetLaunchTemplateEnclaveOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateEnclaveOption] {
	return pulumix.Output[GetLaunchTemplateEnclaveOption]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateEnclaveOptionOutput) Enabled() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchTemplateEnclaveOption](o, func(v GetLaunchTemplateEnclaveOption) bool { return v.Enabled })
}

type GetLaunchTemplateFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetLaunchTemplateFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetLaunchTemplateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateFilter)(nil)).Elem()
}

func (i GetLaunchTemplateFilterArgs) ToGetLaunchTemplateFilterOutput() GetLaunchTemplateFilterOutput {
	return i.ToGetLaunchTemplateFilterOutputWithContext(context.Background())
}

func (i GetLaunchTemplateFilterArgs) ToGetLaunchTemplateFilterOutputWithContext(ctx context.Context) GetLaunchTemplateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateFilterOutput)
}

func (i *GetLaunchTemplateFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateFilterArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateFilterOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateFilter)(nil)).Elem()
}

func (o GetLaunchTemplateFilterOutput) ToGetLaunchTemplateFilterOutput() GetLaunchTemplateFilterOutput {
	return o
}

func (o GetLaunchTemplateFilterOutput) ToGetLaunchTemplateFilterOutputWithContext(ctx context.Context) GetLaunchTemplateFilterOutput {
	return o
}

func (o GetLaunchTemplateFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateFilter] {
	return pulumix.Output[GetLaunchTemplateFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
func (o GetLaunchTemplateFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateFilter](o, func(v GetLaunchTemplateFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetLaunchTemplateFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateFilter](o, func(v GetLaunchTemplateFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetLaunchTemplateHibernationOption struct {
	Configured bool `pulumi:"configured"`
}

type GetLaunchTemplateHibernationOptionArgs struct {
	Configured pulumix.Input[bool] `pulumi:"configured"`
}

func (GetLaunchTemplateHibernationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (i GetLaunchTemplateHibernationOptionArgs) ToGetLaunchTemplateHibernationOptionOutput() GetLaunchTemplateHibernationOptionOutput {
	return i.ToGetLaunchTemplateHibernationOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateHibernationOptionArgs) ToGetLaunchTemplateHibernationOptionOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateHibernationOptionOutput)
}

func (i *GetLaunchTemplateHibernationOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateHibernationOptionArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateHibernationOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateHibernationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (o GetLaunchTemplateHibernationOptionOutput) ToGetLaunchTemplateHibernationOptionOutput() GetLaunchTemplateHibernationOptionOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionOutput) ToGetLaunchTemplateHibernationOptionOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateHibernationOption] {
	return pulumix.Output[GetLaunchTemplateHibernationOption]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateHibernationOptionOutput) Configured() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchTemplateHibernationOption](o, func(v GetLaunchTemplateHibernationOption) bool { return v.Configured })
}

type GetLaunchTemplateIamInstanceProfile struct {
	Arn string `pulumi:"arn"`
	// Name of the launch template.
	Name string `pulumi:"name"`
}

type GetLaunchTemplateIamInstanceProfileArgs struct {
	Arn pulumix.Input[string] `pulumi:"arn"`
	// Name of the launch template.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetLaunchTemplateIamInstanceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i GetLaunchTemplateIamInstanceProfileArgs) ToGetLaunchTemplateIamInstanceProfileOutput() GetLaunchTemplateIamInstanceProfileOutput {
	return i.ToGetLaunchTemplateIamInstanceProfileOutputWithContext(context.Background())
}

func (i GetLaunchTemplateIamInstanceProfileArgs) ToGetLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateIamInstanceProfileOutput)
}

func (i *GetLaunchTemplateIamInstanceProfileArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateIamInstanceProfileArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateIamInstanceProfileOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateIamInstanceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o GetLaunchTemplateIamInstanceProfileOutput) ToGetLaunchTemplateIamInstanceProfileOutput() GetLaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o GetLaunchTemplateIamInstanceProfileOutput) ToGetLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o GetLaunchTemplateIamInstanceProfileOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateIamInstanceProfile] {
	return pulumix.Output[GetLaunchTemplateIamInstanceProfile]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateIamInstanceProfileOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateIamInstanceProfile](o, func(v GetLaunchTemplateIamInstanceProfile) string { return v.Arn })
}

// Name of the launch template.
func (o GetLaunchTemplateIamInstanceProfileOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateIamInstanceProfile](o, func(v GetLaunchTemplateIamInstanceProfile) string { return v.Name })
}

type GetLaunchTemplateInstanceMarketOption struct {
	MarketType  string                                            `pulumi:"marketType"`
	SpotOptions []GetLaunchTemplateInstanceMarketOptionSpotOption `pulumi:"spotOptions"`
}

type GetLaunchTemplateInstanceMarketOptionArgs struct {
	MarketType  pulumix.Input[string]                                                 `pulumi:"marketType"`
	SpotOptions pulumix.Input[[]*GetLaunchTemplateInstanceMarketOptionSpotOptionArgs] `pulumi:"spotOptions"`
}

func (GetLaunchTemplateInstanceMarketOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionArgs) ToGetLaunchTemplateInstanceMarketOptionOutput() GetLaunchTemplateInstanceMarketOptionOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionArgs) ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionOutput)
}

func (i *GetLaunchTemplateInstanceMarketOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceMarketOptionArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceMarketOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) ToGetLaunchTemplateInstanceMarketOptionOutput() GetLaunchTemplateInstanceMarketOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceMarketOption] {
	return pulumix.Output[GetLaunchTemplateInstanceMarketOption]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) MarketType() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateInstanceMarketOption](o, func(v GetLaunchTemplateInstanceMarketOption) string { return v.MarketType })
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) SpotOptions() pulumix.GArrayOutput[GetLaunchTemplateInstanceMarketOptionSpotOption, GetLaunchTemplateInstanceMarketOptionSpotOptionOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceMarketOption](o, func(v GetLaunchTemplateInstanceMarketOption) []GetLaunchTemplateInstanceMarketOptionSpotOption {
		return v.SpotOptions
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceMarketOptionSpotOption, GetLaunchTemplateInstanceMarketOptionSpotOptionOutput]{OutputState: value.OutputState}
}

type GetLaunchTemplateInstanceMarketOptionSpotOption struct {
	BlockDurationMinutes         int    `pulumi:"blockDurationMinutes"`
	InstanceInterruptionBehavior string `pulumi:"instanceInterruptionBehavior"`
	MaxPrice                     string `pulumi:"maxPrice"`
	SpotInstanceType             string `pulumi:"spotInstanceType"`
	ValidUntil                   string `pulumi:"validUntil"`
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionArgs struct {
	BlockDurationMinutes         pulumix.Input[int]    `pulumi:"blockDurationMinutes"`
	InstanceInterruptionBehavior pulumix.Input[string] `pulumi:"instanceInterruptionBehavior"`
	MaxPrice                     pulumix.Input[string] `pulumi:"maxPrice"`
	SpotInstanceType             pulumix.Input[string] `pulumi:"spotInstanceType"`
	ValidUntil                   pulumix.Input[string] `pulumi:"validUntil"`
}

func (GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionSpotOptionOutput)
}

func (i *GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceMarketOptionSpotOptionArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceMarketOptionSpotOption] {
	return pulumix.Output[GetLaunchTemplateInstanceMarketOptionSpotOption]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) BlockDurationMinutes() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceMarketOptionSpotOption](o, func(v GetLaunchTemplateInstanceMarketOptionSpotOption) int { return v.BlockDurationMinutes })
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) InstanceInterruptionBehavior() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateInstanceMarketOptionSpotOption](o, func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.InstanceInterruptionBehavior })
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) MaxPrice() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateInstanceMarketOptionSpotOption](o, func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.MaxPrice })
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) SpotInstanceType() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateInstanceMarketOptionSpotOption](o, func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.SpotInstanceType })
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ValidUntil() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateInstanceMarketOptionSpotOption](o, func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.ValidUntil })
}

type GetLaunchTemplateInstanceRequirement struct {
	AcceleratorCounts                         []GetLaunchTemplateInstanceRequirementAcceleratorCount          `pulumi:"acceleratorCounts"`
	AcceleratorManufacturers                  []string                                                        `pulumi:"acceleratorManufacturers"`
	AcceleratorNames                          []string                                                        `pulumi:"acceleratorNames"`
	AcceleratorTotalMemoryMibs                []GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib `pulumi:"acceleratorTotalMemoryMibs"`
	AcceleratorTypes                          []string                                                        `pulumi:"acceleratorTypes"`
	AllowedInstanceTypes                      []string                                                        `pulumi:"allowedInstanceTypes"`
	BareMetal                                 string                                                          `pulumi:"bareMetal"`
	BaselineEbsBandwidthMbps                  []GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp   `pulumi:"baselineEbsBandwidthMbps"`
	BurstablePerformance                      string                                                          `pulumi:"burstablePerformance"`
	CpuManufacturers                          []string                                                        `pulumi:"cpuManufacturers"`
	ExcludedInstanceTypes                     []string                                                        `pulumi:"excludedInstanceTypes"`
	InstanceGenerations                       []string                                                        `pulumi:"instanceGenerations"`
	LocalStorage                              string                                                          `pulumi:"localStorage"`
	LocalStorageTypes                         []string                                                        `pulumi:"localStorageTypes"`
	MemoryGibPerVcpus                         []GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus         `pulumi:"memoryGibPerVcpus"`
	MemoryMibs                                []GetLaunchTemplateInstanceRequirementMemoryMib                 `pulumi:"memoryMibs"`
	NetworkBandwidthGbps                      []GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp       `pulumi:"networkBandwidthGbps"`
	NetworkInterfaceCounts                    []GetLaunchTemplateInstanceRequirementNetworkInterfaceCount     `pulumi:"networkInterfaceCounts"`
	OnDemandMaxPricePercentageOverLowestPrice int                                                             `pulumi:"onDemandMaxPricePercentageOverLowestPrice"`
	RequireHibernateSupport                   bool                                                            `pulumi:"requireHibernateSupport"`
	SpotMaxPricePercentageOverLowestPrice     int                                                             `pulumi:"spotMaxPricePercentageOverLowestPrice"`
	TotalLocalStorageGbs                      []GetLaunchTemplateInstanceRequirementTotalLocalStorageGb       `pulumi:"totalLocalStorageGbs"`
	VcpuCounts                                []GetLaunchTemplateInstanceRequirementVcpuCount                 `pulumi:"vcpuCounts"`
}

type GetLaunchTemplateInstanceRequirementArgs struct {
	AcceleratorCounts                         pulumix.Input[[]*GetLaunchTemplateInstanceRequirementAcceleratorCountArgs]          `pulumi:"acceleratorCounts"`
	AcceleratorManufacturers                  pulumix.Input[[]string]                                                             `pulumi:"acceleratorManufacturers"`
	AcceleratorNames                          pulumix.Input[[]string]                                                             `pulumi:"acceleratorNames"`
	AcceleratorTotalMemoryMibs                pulumix.Input[[]*GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibArgs] `pulumi:"acceleratorTotalMemoryMibs"`
	AcceleratorTypes                          pulumix.Input[[]string]                                                             `pulumi:"acceleratorTypes"`
	AllowedInstanceTypes                      pulumix.Input[[]string]                                                             `pulumi:"allowedInstanceTypes"`
	BareMetal                                 pulumix.Input[string]                                                               `pulumi:"bareMetal"`
	BaselineEbsBandwidthMbps                  pulumix.Input[[]*GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpArgs]   `pulumi:"baselineEbsBandwidthMbps"`
	BurstablePerformance                      pulumix.Input[string]                                                               `pulumi:"burstablePerformance"`
	CpuManufacturers                          pulumix.Input[[]string]                                                             `pulumi:"cpuManufacturers"`
	ExcludedInstanceTypes                     pulumix.Input[[]string]                                                             `pulumi:"excludedInstanceTypes"`
	InstanceGenerations                       pulumix.Input[[]string]                                                             `pulumi:"instanceGenerations"`
	LocalStorage                              pulumix.Input[string]                                                               `pulumi:"localStorage"`
	LocalStorageTypes                         pulumix.Input[[]string]                                                             `pulumi:"localStorageTypes"`
	MemoryGibPerVcpus                         pulumix.Input[[]*GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusArgs]         `pulumi:"memoryGibPerVcpus"`
	MemoryMibs                                pulumix.Input[[]*GetLaunchTemplateInstanceRequirementMemoryMibArgs]                 `pulumi:"memoryMibs"`
	NetworkBandwidthGbps                      pulumix.Input[[]*GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpArgs]       `pulumi:"networkBandwidthGbps"`
	NetworkInterfaceCounts                    pulumix.Input[[]*GetLaunchTemplateInstanceRequirementNetworkInterfaceCountArgs]     `pulumi:"networkInterfaceCounts"`
	OnDemandMaxPricePercentageOverLowestPrice pulumix.Input[int]                                                                  `pulumi:"onDemandMaxPricePercentageOverLowestPrice"`
	RequireHibernateSupport                   pulumix.Input[bool]                                                                 `pulumi:"requireHibernateSupport"`
	SpotMaxPricePercentageOverLowestPrice     pulumix.Input[int]                                                                  `pulumi:"spotMaxPricePercentageOverLowestPrice"`
	TotalLocalStorageGbs                      pulumix.Input[[]*GetLaunchTemplateInstanceRequirementTotalLocalStorageGbArgs]       `pulumi:"totalLocalStorageGbs"`
	VcpuCounts                                pulumix.Input[[]*GetLaunchTemplateInstanceRequirementVcpuCountArgs]                 `pulumi:"vcpuCounts"`
}

func (GetLaunchTemplateInstanceRequirementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirement)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementArgs) ToGetLaunchTemplateInstanceRequirementOutput() GetLaunchTemplateInstanceRequirementOutput {
	return i.ToGetLaunchTemplateInstanceRequirementOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementArgs) ToGetLaunchTemplateInstanceRequirementOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementOutput)
}

func (i *GetLaunchTemplateInstanceRequirementArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirement)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementOutput) ToGetLaunchTemplateInstanceRequirementOutput() GetLaunchTemplateInstanceRequirementOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementOutput) ToGetLaunchTemplateInstanceRequirementOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirement] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirement]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementOutput) AcceleratorCounts() pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementAcceleratorCount, GetLaunchTemplateInstanceRequirementAcceleratorCountOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []GetLaunchTemplateInstanceRequirementAcceleratorCount {
		return v.AcceleratorCounts
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementAcceleratorCount, GetLaunchTemplateInstanceRequirementAcceleratorCountOutput]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) AcceleratorManufacturers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []string { return v.AcceleratorManufacturers })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) AcceleratorNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []string { return v.AcceleratorNames })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) AcceleratorTotalMemoryMibs() pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib, GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib {
		return v.AcceleratorTotalMemoryMibs
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib, GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) AcceleratorTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []string { return v.AcceleratorTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) AllowedInstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []string { return v.AllowedInstanceTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) BareMetal() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) string { return v.BareMetal })
}

func (o GetLaunchTemplateInstanceRequirementOutput) BaselineEbsBandwidthMbps() pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp, GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp {
		return v.BaselineEbsBandwidthMbps
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp, GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) BurstablePerformance() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) string { return v.BurstablePerformance })
}

func (o GetLaunchTemplateInstanceRequirementOutput) CpuManufacturers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []string { return v.CpuManufacturers })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) ExcludedInstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []string { return v.ExcludedInstanceTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) InstanceGenerations() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []string { return v.InstanceGenerations })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) LocalStorage() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) string { return v.LocalStorage })
}

func (o GetLaunchTemplateInstanceRequirementOutput) LocalStorageTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []string { return v.LocalStorageTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) MemoryGibPerVcpus() pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus, GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus {
		return v.MemoryGibPerVcpus
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus, GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) MemoryMibs() pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementMemoryMib, GetLaunchTemplateInstanceRequirementMemoryMibOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []GetLaunchTemplateInstanceRequirementMemoryMib {
		return v.MemoryMibs
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementMemoryMib, GetLaunchTemplateInstanceRequirementMemoryMibOutput]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) NetworkBandwidthGbps() pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp, GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp {
		return v.NetworkBandwidthGbps
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp, GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) NetworkInterfaceCounts() pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementNetworkInterfaceCount, GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []GetLaunchTemplateInstanceRequirementNetworkInterfaceCount {
		return v.NetworkInterfaceCounts
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementNetworkInterfaceCount, GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) OnDemandMaxPricePercentageOverLowestPrice() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) int { return v.OnDemandMaxPricePercentageOverLowestPrice })
}

func (o GetLaunchTemplateInstanceRequirementOutput) RequireHibernateSupport() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) bool { return v.RequireHibernateSupport })
}

func (o GetLaunchTemplateInstanceRequirementOutput) SpotMaxPricePercentageOverLowestPrice() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) int { return v.SpotMaxPricePercentageOverLowestPrice })
}

func (o GetLaunchTemplateInstanceRequirementOutput) TotalLocalStorageGbs() pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementTotalLocalStorageGb, GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []GetLaunchTemplateInstanceRequirementTotalLocalStorageGb {
		return v.TotalLocalStorageGbs
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementTotalLocalStorageGb, GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateInstanceRequirementOutput) VcpuCounts() pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementVcpuCount, GetLaunchTemplateInstanceRequirementVcpuCountOutput] {
	value := pulumix.Apply[GetLaunchTemplateInstanceRequirement](o, func(v GetLaunchTemplateInstanceRequirement) []GetLaunchTemplateInstanceRequirementVcpuCount {
		return v.VcpuCounts
	})
	return pulumix.GArrayOutput[GetLaunchTemplateInstanceRequirementVcpuCount, GetLaunchTemplateInstanceRequirementVcpuCountOutput]{OutputState: value.OutputState}
}

type GetLaunchTemplateInstanceRequirementAcceleratorCount struct {
	Max int `pulumi:"max"`
	Min int `pulumi:"min"`
}

type GetLaunchTemplateInstanceRequirementAcceleratorCountArgs struct {
	Max pulumix.Input[int] `pulumi:"max"`
	Min pulumix.Input[int] `pulumi:"min"`
}

func (GetLaunchTemplateInstanceRequirementAcceleratorCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementAcceleratorCount)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementAcceleratorCountArgs) ToGetLaunchTemplateInstanceRequirementAcceleratorCountOutput() GetLaunchTemplateInstanceRequirementAcceleratorCountOutput {
	return i.ToGetLaunchTemplateInstanceRequirementAcceleratorCountOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementAcceleratorCountArgs) ToGetLaunchTemplateInstanceRequirementAcceleratorCountOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementAcceleratorCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementAcceleratorCountOutput)
}

func (i *GetLaunchTemplateInstanceRequirementAcceleratorCountArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementAcceleratorCountArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementAcceleratorCountOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementAcceleratorCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementAcceleratorCount)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorCountOutput) ToGetLaunchTemplateInstanceRequirementAcceleratorCountOutput() GetLaunchTemplateInstanceRequirementAcceleratorCountOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorCountOutput) ToGetLaunchTemplateInstanceRequirementAcceleratorCountOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementAcceleratorCountOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorCountOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirementAcceleratorCount] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirementAcceleratorCount]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorCountOutput) Max() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementAcceleratorCount](o, func(v GetLaunchTemplateInstanceRequirementAcceleratorCount) int { return v.Max })
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorCountOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementAcceleratorCount](o, func(v GetLaunchTemplateInstanceRequirementAcceleratorCount) int { return v.Min })
}

type GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib struct {
	Max int `pulumi:"max"`
	Min int `pulumi:"min"`
}

type GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibArgs struct {
	Max pulumix.Input[int] `pulumi:"max"`
	Min pulumix.Input[int] `pulumi:"min"`
}

func (GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibArgs) ToGetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput() GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput {
	return i.ToGetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibArgs) ToGetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput)
}

func (i *GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput) ToGetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput() GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput) ToGetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput) Max() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib](o, func(v GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib) int { return v.Max })
}

func (o GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib](o, func(v GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMib) int { return v.Min })
}

type GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp struct {
	Max int `pulumi:"max"`
	Min int `pulumi:"min"`
}

type GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpArgs struct {
	Max pulumix.Input[int] `pulumi:"max"`
	Min pulumix.Input[int] `pulumi:"min"`
}

func (GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpArgs) ToGetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput() GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput {
	return i.ToGetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpArgs) ToGetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput)
}

func (i *GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput) ToGetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput() GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput) ToGetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput) Max() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp](o, func(v GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp) int { return v.Max })
}

func (o GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp](o, func(v GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbp) int { return v.Min })
}

type GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus struct {
	Max float64 `pulumi:"max"`
	Min float64 `pulumi:"min"`
}

type GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusArgs struct {
	Max pulumix.Input[float64] `pulumi:"max"`
	Min pulumix.Input[float64] `pulumi:"min"`
}

func (GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusArgs) ToGetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput() GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput {
	return i.ToGetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusArgs) ToGetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput)
}

func (i *GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput) ToGetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput() GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput) ToGetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput) Max() pulumix.Output[float64] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus](o, func(v GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus) float64 { return v.Max })
}

func (o GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput) Min() pulumix.Output[float64] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus](o, func(v GetLaunchTemplateInstanceRequirementMemoryGibPerVcpus) float64 { return v.Min })
}

type GetLaunchTemplateInstanceRequirementMemoryMib struct {
	Max int `pulumi:"max"`
	Min int `pulumi:"min"`
}

type GetLaunchTemplateInstanceRequirementMemoryMibArgs struct {
	Max pulumix.Input[int] `pulumi:"max"`
	Min pulumix.Input[int] `pulumi:"min"`
}

func (GetLaunchTemplateInstanceRequirementMemoryMibArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementMemoryMib)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementMemoryMibArgs) ToGetLaunchTemplateInstanceRequirementMemoryMibOutput() GetLaunchTemplateInstanceRequirementMemoryMibOutput {
	return i.ToGetLaunchTemplateInstanceRequirementMemoryMibOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementMemoryMibArgs) ToGetLaunchTemplateInstanceRequirementMemoryMibOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementMemoryMibOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementMemoryMibOutput)
}

func (i *GetLaunchTemplateInstanceRequirementMemoryMibArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementMemoryMibArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementMemoryMibOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementMemoryMibOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementMemoryMib)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementMemoryMibOutput) ToGetLaunchTemplateInstanceRequirementMemoryMibOutput() GetLaunchTemplateInstanceRequirementMemoryMibOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementMemoryMibOutput) ToGetLaunchTemplateInstanceRequirementMemoryMibOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementMemoryMibOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementMemoryMibOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirementMemoryMib] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirementMemoryMib]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementMemoryMibOutput) Max() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementMemoryMib](o, func(v GetLaunchTemplateInstanceRequirementMemoryMib) int { return v.Max })
}

func (o GetLaunchTemplateInstanceRequirementMemoryMibOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementMemoryMib](o, func(v GetLaunchTemplateInstanceRequirementMemoryMib) int { return v.Min })
}

type GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp struct {
	Max float64 `pulumi:"max"`
	Min float64 `pulumi:"min"`
}

type GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpArgs struct {
	Max pulumix.Input[float64] `pulumi:"max"`
	Min pulumix.Input[float64] `pulumi:"min"`
}

func (GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpArgs) ToGetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput() GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput {
	return i.ToGetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpArgs) ToGetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput)
}

func (i *GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput) ToGetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput() GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput) ToGetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput) Max() pulumix.Output[float64] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp](o, func(v GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp) float64 { return v.Max })
}

func (o GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput) Min() pulumix.Output[float64] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp](o, func(v GetLaunchTemplateInstanceRequirementNetworkBandwidthGbp) float64 { return v.Min })
}

type GetLaunchTemplateInstanceRequirementNetworkInterfaceCount struct {
	Max int `pulumi:"max"`
	Min int `pulumi:"min"`
}

type GetLaunchTemplateInstanceRequirementNetworkInterfaceCountArgs struct {
	Max pulumix.Input[int] `pulumi:"max"`
	Min pulumix.Input[int] `pulumi:"min"`
}

func (GetLaunchTemplateInstanceRequirementNetworkInterfaceCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementNetworkInterfaceCount)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementNetworkInterfaceCountArgs) ToGetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput() GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput {
	return i.ToGetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementNetworkInterfaceCountArgs) ToGetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput)
}

func (i *GetLaunchTemplateInstanceRequirementNetworkInterfaceCountArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementNetworkInterfaceCountArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementNetworkInterfaceCount)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput) ToGetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput() GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput) ToGetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirementNetworkInterfaceCount] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirementNetworkInterfaceCount]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput) Max() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementNetworkInterfaceCount](o, func(v GetLaunchTemplateInstanceRequirementNetworkInterfaceCount) int { return v.Max })
}

func (o GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementNetworkInterfaceCount](o, func(v GetLaunchTemplateInstanceRequirementNetworkInterfaceCount) int { return v.Min })
}

type GetLaunchTemplateInstanceRequirementTotalLocalStorageGb struct {
	Max float64 `pulumi:"max"`
	Min float64 `pulumi:"min"`
}

type GetLaunchTemplateInstanceRequirementTotalLocalStorageGbArgs struct {
	Max pulumix.Input[float64] `pulumi:"max"`
	Min pulumix.Input[float64] `pulumi:"min"`
}

func (GetLaunchTemplateInstanceRequirementTotalLocalStorageGbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementTotalLocalStorageGb)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementTotalLocalStorageGbArgs) ToGetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput() GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput {
	return i.ToGetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementTotalLocalStorageGbArgs) ToGetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput)
}

func (i *GetLaunchTemplateInstanceRequirementTotalLocalStorageGbArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementTotalLocalStorageGbArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementTotalLocalStorageGb)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput) ToGetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput() GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput) ToGetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirementTotalLocalStorageGb] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirementTotalLocalStorageGb]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput) Max() pulumix.Output[float64] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementTotalLocalStorageGb](o, func(v GetLaunchTemplateInstanceRequirementTotalLocalStorageGb) float64 { return v.Max })
}

func (o GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput) Min() pulumix.Output[float64] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementTotalLocalStorageGb](o, func(v GetLaunchTemplateInstanceRequirementTotalLocalStorageGb) float64 { return v.Min })
}

type GetLaunchTemplateInstanceRequirementVcpuCount struct {
	Max int `pulumi:"max"`
	Min int `pulumi:"min"`
}

type GetLaunchTemplateInstanceRequirementVcpuCountArgs struct {
	Max pulumix.Input[int] `pulumi:"max"`
	Min pulumix.Input[int] `pulumi:"min"`
}

func (GetLaunchTemplateInstanceRequirementVcpuCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementVcpuCount)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceRequirementVcpuCountArgs) ToGetLaunchTemplateInstanceRequirementVcpuCountOutput() GetLaunchTemplateInstanceRequirementVcpuCountOutput {
	return i.ToGetLaunchTemplateInstanceRequirementVcpuCountOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceRequirementVcpuCountArgs) ToGetLaunchTemplateInstanceRequirementVcpuCountOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementVcpuCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceRequirementVcpuCountOutput)
}

func (i *GetLaunchTemplateInstanceRequirementVcpuCountArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateInstanceRequirementVcpuCountArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateInstanceRequirementVcpuCountOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceRequirementVcpuCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceRequirementVcpuCount)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceRequirementVcpuCountOutput) ToGetLaunchTemplateInstanceRequirementVcpuCountOutput() GetLaunchTemplateInstanceRequirementVcpuCountOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementVcpuCountOutput) ToGetLaunchTemplateInstanceRequirementVcpuCountOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceRequirementVcpuCountOutput {
	return o
}

func (o GetLaunchTemplateInstanceRequirementVcpuCountOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateInstanceRequirementVcpuCount] {
	return pulumix.Output[GetLaunchTemplateInstanceRequirementVcpuCount]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateInstanceRequirementVcpuCountOutput) Max() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementVcpuCount](o, func(v GetLaunchTemplateInstanceRequirementVcpuCount) int { return v.Max })
}

func (o GetLaunchTemplateInstanceRequirementVcpuCountOutput) Min() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateInstanceRequirementVcpuCount](o, func(v GetLaunchTemplateInstanceRequirementVcpuCount) int { return v.Min })
}

type GetLaunchTemplateLicenseSpecification struct {
	LicenseConfigurationArn string `pulumi:"licenseConfigurationArn"`
}

type GetLaunchTemplateLicenseSpecificationArgs struct {
	LicenseConfigurationArn pulumix.Input[string] `pulumi:"licenseConfigurationArn"`
}

func (GetLaunchTemplateLicenseSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateLicenseSpecificationArgs) ToGetLaunchTemplateLicenseSpecificationOutput() GetLaunchTemplateLicenseSpecificationOutput {
	return i.ToGetLaunchTemplateLicenseSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateLicenseSpecificationArgs) ToGetLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateLicenseSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateLicenseSpecificationOutput)
}

func (i *GetLaunchTemplateLicenseSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateLicenseSpecificationArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateLicenseSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateLicenseSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateLicenseSpecificationOutput) ToGetLaunchTemplateLicenseSpecificationOutput() GetLaunchTemplateLicenseSpecificationOutput {
	return o
}

func (o GetLaunchTemplateLicenseSpecificationOutput) ToGetLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateLicenseSpecificationOutput {
	return o
}

func (o GetLaunchTemplateLicenseSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateLicenseSpecification] {
	return pulumix.Output[GetLaunchTemplateLicenseSpecification]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateLicenseSpecificationOutput) LicenseConfigurationArn() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateLicenseSpecification](o, func(v GetLaunchTemplateLicenseSpecification) string { return v.LicenseConfigurationArn })
}

type GetLaunchTemplateMaintenanceOption struct {
	AutoRecovery string `pulumi:"autoRecovery"`
}

type GetLaunchTemplateMaintenanceOptionArgs struct {
	AutoRecovery pulumix.Input[string] `pulumi:"autoRecovery"`
}

func (GetLaunchTemplateMaintenanceOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMaintenanceOption)(nil)).Elem()
}

func (i GetLaunchTemplateMaintenanceOptionArgs) ToGetLaunchTemplateMaintenanceOptionOutput() GetLaunchTemplateMaintenanceOptionOutput {
	return i.ToGetLaunchTemplateMaintenanceOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMaintenanceOptionArgs) ToGetLaunchTemplateMaintenanceOptionOutputWithContext(ctx context.Context) GetLaunchTemplateMaintenanceOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMaintenanceOptionOutput)
}

func (i *GetLaunchTemplateMaintenanceOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateMaintenanceOptionArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateMaintenanceOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMaintenanceOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMaintenanceOption)(nil)).Elem()
}

func (o GetLaunchTemplateMaintenanceOptionOutput) ToGetLaunchTemplateMaintenanceOptionOutput() GetLaunchTemplateMaintenanceOptionOutput {
	return o
}

func (o GetLaunchTemplateMaintenanceOptionOutput) ToGetLaunchTemplateMaintenanceOptionOutputWithContext(ctx context.Context) GetLaunchTemplateMaintenanceOptionOutput {
	return o
}

func (o GetLaunchTemplateMaintenanceOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateMaintenanceOption] {
	return pulumix.Output[GetLaunchTemplateMaintenanceOption]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateMaintenanceOptionOutput) AutoRecovery() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateMaintenanceOption](o, func(v GetLaunchTemplateMaintenanceOption) string { return v.AutoRecovery })
}

type GetLaunchTemplateMetadataOption struct {
	HttpEndpoint            string `pulumi:"httpEndpoint"`
	HttpProtocolIpv6        string `pulumi:"httpProtocolIpv6"`
	HttpPutResponseHopLimit int    `pulumi:"httpPutResponseHopLimit"`
	HttpTokens              string `pulumi:"httpTokens"`
	InstanceMetadataTags    string `pulumi:"instanceMetadataTags"`
}

type GetLaunchTemplateMetadataOptionArgs struct {
	HttpEndpoint            pulumix.Input[string] `pulumi:"httpEndpoint"`
	HttpProtocolIpv6        pulumix.Input[string] `pulumi:"httpProtocolIpv6"`
	HttpPutResponseHopLimit pulumix.Input[int]    `pulumi:"httpPutResponseHopLimit"`
	HttpTokens              pulumix.Input[string] `pulumi:"httpTokens"`
	InstanceMetadataTags    pulumix.Input[string] `pulumi:"instanceMetadataTags"`
}

func (GetLaunchTemplateMetadataOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (i GetLaunchTemplateMetadataOptionArgs) ToGetLaunchTemplateMetadataOptionOutput() GetLaunchTemplateMetadataOptionOutput {
	return i.ToGetLaunchTemplateMetadataOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMetadataOptionArgs) ToGetLaunchTemplateMetadataOptionOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMetadataOptionOutput)
}

func (i *GetLaunchTemplateMetadataOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateMetadataOptionArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateMetadataOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMetadataOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (o GetLaunchTemplateMetadataOptionOutput) ToGetLaunchTemplateMetadataOptionOutput() GetLaunchTemplateMetadataOptionOutput {
	return o
}

func (o GetLaunchTemplateMetadataOptionOutput) ToGetLaunchTemplateMetadataOptionOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionOutput {
	return o
}

func (o GetLaunchTemplateMetadataOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateMetadataOption] {
	return pulumix.Output[GetLaunchTemplateMetadataOption]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateMetadataOptionOutput) HttpEndpoint() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateMetadataOption](o, func(v GetLaunchTemplateMetadataOption) string { return v.HttpEndpoint })
}

func (o GetLaunchTemplateMetadataOptionOutput) HttpProtocolIpv6() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateMetadataOption](o, func(v GetLaunchTemplateMetadataOption) string { return v.HttpProtocolIpv6 })
}

func (o GetLaunchTemplateMetadataOptionOutput) HttpPutResponseHopLimit() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateMetadataOption](o, func(v GetLaunchTemplateMetadataOption) int { return v.HttpPutResponseHopLimit })
}

func (o GetLaunchTemplateMetadataOptionOutput) HttpTokens() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateMetadataOption](o, func(v GetLaunchTemplateMetadataOption) string { return v.HttpTokens })
}

func (o GetLaunchTemplateMetadataOptionOutput) InstanceMetadataTags() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateMetadataOption](o, func(v GetLaunchTemplateMetadataOption) string { return v.InstanceMetadataTags })
}

type GetLaunchTemplateMonitoring struct {
	Enabled bool `pulumi:"enabled"`
}

type GetLaunchTemplateMonitoringArgs struct {
	Enabled pulumix.Input[bool] `pulumi:"enabled"`
}

func (GetLaunchTemplateMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (i GetLaunchTemplateMonitoringArgs) ToGetLaunchTemplateMonitoringOutput() GetLaunchTemplateMonitoringOutput {
	return i.ToGetLaunchTemplateMonitoringOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMonitoringArgs) ToGetLaunchTemplateMonitoringOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMonitoringOutput)
}

func (i *GetLaunchTemplateMonitoringArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateMonitoringArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateMonitoringOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (o GetLaunchTemplateMonitoringOutput) ToGetLaunchTemplateMonitoringOutput() GetLaunchTemplateMonitoringOutput {
	return o
}

func (o GetLaunchTemplateMonitoringOutput) ToGetLaunchTemplateMonitoringOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringOutput {
	return o
}

func (o GetLaunchTemplateMonitoringOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateMonitoring] {
	return pulumix.Output[GetLaunchTemplateMonitoring]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateMonitoringOutput) Enabled() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchTemplateMonitoring](o, func(v GetLaunchTemplateMonitoring) bool { return v.Enabled })
}

type GetLaunchTemplateNetworkInterface struct {
	AssociateCarrierIpAddress string   `pulumi:"associateCarrierIpAddress"`
	AssociatePublicIpAddress  *bool    `pulumi:"associatePublicIpAddress"`
	DeleteOnTermination       *bool    `pulumi:"deleteOnTermination"`
	Description               string   `pulumi:"description"`
	DeviceIndex               int      `pulumi:"deviceIndex"`
	InterfaceType             string   `pulumi:"interfaceType"`
	Ipv4AddressCount          int      `pulumi:"ipv4AddressCount"`
	Ipv4Addresses             []string `pulumi:"ipv4Addresses"`
	Ipv4PrefixCount           int      `pulumi:"ipv4PrefixCount"`
	Ipv4Prefixes              []string `pulumi:"ipv4Prefixes"`
	Ipv6AddressCount          int      `pulumi:"ipv6AddressCount"`
	Ipv6Addresses             []string `pulumi:"ipv6Addresses"`
	Ipv6PrefixCount           int      `pulumi:"ipv6PrefixCount"`
	Ipv6Prefixes              []string `pulumi:"ipv6Prefixes"`
	NetworkCardIndex          int      `pulumi:"networkCardIndex"`
	NetworkInterfaceId        string   `pulumi:"networkInterfaceId"`
	PrivateIpAddress          string   `pulumi:"privateIpAddress"`
	SecurityGroups            []string `pulumi:"securityGroups"`
	SubnetId                  string   `pulumi:"subnetId"`
}

type GetLaunchTemplateNetworkInterfaceArgs struct {
	AssociateCarrierIpAddress pulumix.Input[string]   `pulumi:"associateCarrierIpAddress"`
	AssociatePublicIpAddress  pulumix.Input[*bool]    `pulumi:"associatePublicIpAddress"`
	DeleteOnTermination       pulumix.Input[*bool]    `pulumi:"deleteOnTermination"`
	Description               pulumix.Input[string]   `pulumi:"description"`
	DeviceIndex               pulumix.Input[int]      `pulumi:"deviceIndex"`
	InterfaceType             pulumix.Input[string]   `pulumi:"interfaceType"`
	Ipv4AddressCount          pulumix.Input[int]      `pulumi:"ipv4AddressCount"`
	Ipv4Addresses             pulumix.Input[[]string] `pulumi:"ipv4Addresses"`
	Ipv4PrefixCount           pulumix.Input[int]      `pulumi:"ipv4PrefixCount"`
	Ipv4Prefixes              pulumix.Input[[]string] `pulumi:"ipv4Prefixes"`
	Ipv6AddressCount          pulumix.Input[int]      `pulumi:"ipv6AddressCount"`
	Ipv6Addresses             pulumix.Input[[]string] `pulumi:"ipv6Addresses"`
	Ipv6PrefixCount           pulumix.Input[int]      `pulumi:"ipv6PrefixCount"`
	Ipv6Prefixes              pulumix.Input[[]string] `pulumi:"ipv6Prefixes"`
	NetworkCardIndex          pulumix.Input[int]      `pulumi:"networkCardIndex"`
	NetworkInterfaceId        pulumix.Input[string]   `pulumi:"networkInterfaceId"`
	PrivateIpAddress          pulumix.Input[string]   `pulumi:"privateIpAddress"`
	SecurityGroups            pulumix.Input[[]string] `pulumi:"securityGroups"`
	SubnetId                  pulumix.Input[string]   `pulumi:"subnetId"`
}

func (GetLaunchTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i GetLaunchTemplateNetworkInterfaceArgs) ToGetLaunchTemplateNetworkInterfaceOutput() GetLaunchTemplateNetworkInterfaceOutput {
	return i.ToGetLaunchTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetLaunchTemplateNetworkInterfaceArgs) ToGetLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateNetworkInterfaceOutput)
}

func (i *GetLaunchTemplateNetworkInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateNetworkInterfaceArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o GetLaunchTemplateNetworkInterfaceOutput) ToGetLaunchTemplateNetworkInterfaceOutput() GetLaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceOutput) ToGetLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateNetworkInterface] {
	return pulumix.Output[GetLaunchTemplateNetworkInterface]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateNetworkInterfaceOutput) AssociateCarrierIpAddress() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) string { return v.AssociateCarrierIpAddress })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) AssociatePublicIpAddress() pulumix.Output[*bool] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) *bool { return v.AssociatePublicIpAddress })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) DeleteOnTermination() pulumix.Output[*bool] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) *bool { return v.DeleteOnTermination })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) string { return v.Description })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) DeviceIndex() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) int { return v.DeviceIndex })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) InterfaceType() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) string { return v.InterfaceType })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv4AddressCount() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) int { return v.Ipv4AddressCount })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv4Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) []string { return v.Ipv4Addresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv4PrefixCount() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) int { return v.Ipv4PrefixCount })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv4Prefixes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) []string { return v.Ipv4Prefixes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv6AddressCount() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) int { return v.Ipv6AddressCount })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv6Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) []string { return v.Ipv6Addresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv6PrefixCount() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) int { return v.Ipv6PrefixCount })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv6Prefixes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) []string { return v.Ipv6Prefixes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateNetworkInterfaceOutput) NetworkCardIndex() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) int { return v.NetworkCardIndex })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) NetworkInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) string { return v.NetworkInterfaceId })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) PrivateIpAddress() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) string { return v.PrivateIpAddress })
}

func (o GetLaunchTemplateNetworkInterfaceOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetLaunchTemplateNetworkInterfaceOutput) SubnetId() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateNetworkInterface](o, func(v GetLaunchTemplateNetworkInterface) string { return v.SubnetId })
}

type GetLaunchTemplatePlacement struct {
	Affinity             string `pulumi:"affinity"`
	AvailabilityZone     string `pulumi:"availabilityZone"`
	GroupName            string `pulumi:"groupName"`
	HostId               string `pulumi:"hostId"`
	HostResourceGroupArn string `pulumi:"hostResourceGroupArn"`
	PartitionNumber      int    `pulumi:"partitionNumber"`
	SpreadDomain         string `pulumi:"spreadDomain"`
	Tenancy              string `pulumi:"tenancy"`
}

type GetLaunchTemplatePlacementArgs struct {
	Affinity             pulumix.Input[string] `pulumi:"affinity"`
	AvailabilityZone     pulumix.Input[string] `pulumi:"availabilityZone"`
	GroupName            pulumix.Input[string] `pulumi:"groupName"`
	HostId               pulumix.Input[string] `pulumi:"hostId"`
	HostResourceGroupArn pulumix.Input[string] `pulumi:"hostResourceGroupArn"`
	PartitionNumber      pulumix.Input[int]    `pulumi:"partitionNumber"`
	SpreadDomain         pulumix.Input[string] `pulumi:"spreadDomain"`
	Tenancy              pulumix.Input[string] `pulumi:"tenancy"`
}

func (GetLaunchTemplatePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatePlacement)(nil)).Elem()
}

func (i GetLaunchTemplatePlacementArgs) ToGetLaunchTemplatePlacementOutput() GetLaunchTemplatePlacementOutput {
	return i.ToGetLaunchTemplatePlacementOutputWithContext(context.Background())
}

func (i GetLaunchTemplatePlacementArgs) ToGetLaunchTemplatePlacementOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplatePlacementOutput)
}

func (i *GetLaunchTemplatePlacementArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplatePlacementArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplatePlacementOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplatePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatePlacement)(nil)).Elem()
}

func (o GetLaunchTemplatePlacementOutput) ToGetLaunchTemplatePlacementOutput() GetLaunchTemplatePlacementOutput {
	return o
}

func (o GetLaunchTemplatePlacementOutput) ToGetLaunchTemplatePlacementOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementOutput {
	return o
}

func (o GetLaunchTemplatePlacementOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplatePlacement] {
	return pulumix.Output[GetLaunchTemplatePlacement]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplatePlacementOutput) Affinity() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplatePlacement](o, func(v GetLaunchTemplatePlacement) string { return v.Affinity })
}

func (o GetLaunchTemplatePlacementOutput) AvailabilityZone() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplatePlacement](o, func(v GetLaunchTemplatePlacement) string { return v.AvailabilityZone })
}

func (o GetLaunchTemplatePlacementOutput) GroupName() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplatePlacement](o, func(v GetLaunchTemplatePlacement) string { return v.GroupName })
}

func (o GetLaunchTemplatePlacementOutput) HostId() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplatePlacement](o, func(v GetLaunchTemplatePlacement) string { return v.HostId })
}

func (o GetLaunchTemplatePlacementOutput) HostResourceGroupArn() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplatePlacement](o, func(v GetLaunchTemplatePlacement) string { return v.HostResourceGroupArn })
}

func (o GetLaunchTemplatePlacementOutput) PartitionNumber() pulumix.Output[int] {
	return pulumix.Apply[GetLaunchTemplatePlacement](o, func(v GetLaunchTemplatePlacement) int { return v.PartitionNumber })
}

func (o GetLaunchTemplatePlacementOutput) SpreadDomain() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplatePlacement](o, func(v GetLaunchTemplatePlacement) string { return v.SpreadDomain })
}

func (o GetLaunchTemplatePlacementOutput) Tenancy() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplatePlacement](o, func(v GetLaunchTemplatePlacement) string { return v.Tenancy })
}

type GetLaunchTemplatePrivateDnsNameOption struct {
	EnableResourceNameDnsARecord    bool   `pulumi:"enableResourceNameDnsARecord"`
	EnableResourceNameDnsAaaaRecord bool   `pulumi:"enableResourceNameDnsAaaaRecord"`
	HostnameType                    string `pulumi:"hostnameType"`
}

type GetLaunchTemplatePrivateDnsNameOptionArgs struct {
	EnableResourceNameDnsARecord    pulumix.Input[bool]   `pulumi:"enableResourceNameDnsARecord"`
	EnableResourceNameDnsAaaaRecord pulumix.Input[bool]   `pulumi:"enableResourceNameDnsAaaaRecord"`
	HostnameType                    pulumix.Input[string] `pulumi:"hostnameType"`
}

func (GetLaunchTemplatePrivateDnsNameOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatePrivateDnsNameOption)(nil)).Elem()
}

func (i GetLaunchTemplatePrivateDnsNameOptionArgs) ToGetLaunchTemplatePrivateDnsNameOptionOutput() GetLaunchTemplatePrivateDnsNameOptionOutput {
	return i.ToGetLaunchTemplatePrivateDnsNameOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplatePrivateDnsNameOptionArgs) ToGetLaunchTemplatePrivateDnsNameOptionOutputWithContext(ctx context.Context) GetLaunchTemplatePrivateDnsNameOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplatePrivateDnsNameOptionOutput)
}

func (i *GetLaunchTemplatePrivateDnsNameOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplatePrivateDnsNameOptionArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplatePrivateDnsNameOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplatePrivateDnsNameOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatePrivateDnsNameOption)(nil)).Elem()
}

func (o GetLaunchTemplatePrivateDnsNameOptionOutput) ToGetLaunchTemplatePrivateDnsNameOptionOutput() GetLaunchTemplatePrivateDnsNameOptionOutput {
	return o
}

func (o GetLaunchTemplatePrivateDnsNameOptionOutput) ToGetLaunchTemplatePrivateDnsNameOptionOutputWithContext(ctx context.Context) GetLaunchTemplatePrivateDnsNameOptionOutput {
	return o
}

func (o GetLaunchTemplatePrivateDnsNameOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplatePrivateDnsNameOption] {
	return pulumix.Output[GetLaunchTemplatePrivateDnsNameOption]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplatePrivateDnsNameOptionOutput) EnableResourceNameDnsARecord() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchTemplatePrivateDnsNameOption](o, func(v GetLaunchTemplatePrivateDnsNameOption) bool { return v.EnableResourceNameDnsARecord })
}

func (o GetLaunchTemplatePrivateDnsNameOptionOutput) EnableResourceNameDnsAaaaRecord() pulumix.Output[bool] {
	return pulumix.Apply[GetLaunchTemplatePrivateDnsNameOption](o, func(v GetLaunchTemplatePrivateDnsNameOption) bool { return v.EnableResourceNameDnsAaaaRecord })
}

func (o GetLaunchTemplatePrivateDnsNameOptionOutput) HostnameType() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplatePrivateDnsNameOption](o, func(v GetLaunchTemplatePrivateDnsNameOption) string { return v.HostnameType })
}

type GetLaunchTemplateTagSpecification struct {
	ResourceType string `pulumi:"resourceType"`
	// Map of tags, each pair of which must exactly match a pair on the desired Launch Template.
	Tags map[string]string `pulumi:"tags"`
}

type GetLaunchTemplateTagSpecificationArgs struct {
	ResourceType pulumix.Input[string] `pulumi:"resourceType"`
	// Map of tags, each pair of which must exactly match a pair on the desired Launch Template.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (GetLaunchTemplateTagSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateTagSpecificationArgs) ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput {
	return i.ToGetLaunchTemplateTagSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateTagSpecificationArgs) ToGetLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateTagSpecificationOutput)
}

func (i *GetLaunchTemplateTagSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchTemplateTagSpecificationArgs] {
	return pulumix.Val(i)
}

type GetLaunchTemplateTagSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateTagSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateTagSpecificationOutput) ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationOutput) ToGetLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchTemplateTagSpecification] {
	return pulumix.Output[GetLaunchTemplateTagSpecification]{
		OutputState: o.OutputState,
	}
}

func (o GetLaunchTemplateTagSpecificationOutput) ResourceType() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchTemplateTagSpecification](o, func(v GetLaunchTemplateTagSpecification) string { return v.ResourceType })
}

// Map of tags, each pair of which must exactly match a pair on the desired Launch Template.
func (o GetLaunchTemplateTagSpecificationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[GetLaunchTemplateTagSpecification](o, func(v GetLaunchTemplateTagSpecification) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type GetLocalGatewayFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Local Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Local Gateway will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetLocalGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayFilter)(nil)).Elem()
}

func (i GetLocalGatewayFilterArgs) ToGetLocalGatewayFilterOutput() GetLocalGatewayFilterOutput {
	return i.ToGetLocalGatewayFilterOutputWithContext(context.Background())
}

func (i GetLocalGatewayFilterArgs) ToGetLocalGatewayFilterOutputWithContext(ctx context.Context) GetLocalGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalGatewayFilterOutput)
}

func (i *GetLocalGatewayFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLocalGatewayFilterArgs] {
	return pulumix.Val(i)
}

type GetLocalGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetLocalGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayFilter)(nil)).Elem()
}

func (o GetLocalGatewayFilterOutput) ToGetLocalGatewayFilterOutput() GetLocalGatewayFilterOutput {
	return o
}

func (o GetLocalGatewayFilterOutput) ToGetLocalGatewayFilterOutputWithContext(ctx context.Context) GetLocalGatewayFilterOutput {
	return o
}

func (o GetLocalGatewayFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocalGatewayFilter] {
	return pulumix.Output[GetLocalGatewayFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
func (o GetLocalGatewayFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLocalGatewayFilter](o, func(v GetLocalGatewayFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A Local Gateway will be selected if any one of the given values matches.
func (o GetLocalGatewayFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLocalGatewayFilter](o, func(v GetLocalGatewayFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetLocalGatewayRouteTableFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A local gateway route table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayRouteTableFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A local gateway route table will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetLocalGatewayRouteTableFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayRouteTableFilter)(nil)).Elem()
}

func (i GetLocalGatewayRouteTableFilterArgs) ToGetLocalGatewayRouteTableFilterOutput() GetLocalGatewayRouteTableFilterOutput {
	return i.ToGetLocalGatewayRouteTableFilterOutputWithContext(context.Background())
}

func (i GetLocalGatewayRouteTableFilterArgs) ToGetLocalGatewayRouteTableFilterOutputWithContext(ctx context.Context) GetLocalGatewayRouteTableFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalGatewayRouteTableFilterOutput)
}

func (i *GetLocalGatewayRouteTableFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLocalGatewayRouteTableFilterArgs] {
	return pulumix.Val(i)
}

type GetLocalGatewayRouteTableFilterOutput struct{ *pulumi.OutputState }

func (GetLocalGatewayRouteTableFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayRouteTableFilter)(nil)).Elem()
}

func (o GetLocalGatewayRouteTableFilterOutput) ToGetLocalGatewayRouteTableFilterOutput() GetLocalGatewayRouteTableFilterOutput {
	return o
}

func (o GetLocalGatewayRouteTableFilterOutput) ToGetLocalGatewayRouteTableFilterOutputWithContext(ctx context.Context) GetLocalGatewayRouteTableFilterOutput {
	return o
}

func (o GetLocalGatewayRouteTableFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocalGatewayRouteTableFilter] {
	return pulumix.Output[GetLocalGatewayRouteTableFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
func (o GetLocalGatewayRouteTableFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLocalGatewayRouteTableFilter](o, func(v GetLocalGatewayRouteTableFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A local gateway route table will be selected if any one of the given values matches.
func (o GetLocalGatewayRouteTableFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLocalGatewayRouteTableFilter](o, func(v GetLocalGatewayRouteTableFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetLocalGatewayRouteTablesFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Local Gateway Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayRouteTablesFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Local Gateway Route Table will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetLocalGatewayRouteTablesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayRouteTablesFilter)(nil)).Elem()
}

func (i GetLocalGatewayRouteTablesFilterArgs) ToGetLocalGatewayRouteTablesFilterOutput() GetLocalGatewayRouteTablesFilterOutput {
	return i.ToGetLocalGatewayRouteTablesFilterOutputWithContext(context.Background())
}

func (i GetLocalGatewayRouteTablesFilterArgs) ToGetLocalGatewayRouteTablesFilterOutputWithContext(ctx context.Context) GetLocalGatewayRouteTablesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalGatewayRouteTablesFilterOutput)
}

func (i *GetLocalGatewayRouteTablesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLocalGatewayRouteTablesFilterArgs] {
	return pulumix.Val(i)
}

type GetLocalGatewayRouteTablesFilterOutput struct{ *pulumi.OutputState }

func (GetLocalGatewayRouteTablesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayRouteTablesFilter)(nil)).Elem()
}

func (o GetLocalGatewayRouteTablesFilterOutput) ToGetLocalGatewayRouteTablesFilterOutput() GetLocalGatewayRouteTablesFilterOutput {
	return o
}

func (o GetLocalGatewayRouteTablesFilterOutput) ToGetLocalGatewayRouteTablesFilterOutputWithContext(ctx context.Context) GetLocalGatewayRouteTablesFilterOutput {
	return o
}

func (o GetLocalGatewayRouteTablesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocalGatewayRouteTablesFilter] {
	return pulumix.Output[GetLocalGatewayRouteTablesFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
func (o GetLocalGatewayRouteTablesFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLocalGatewayRouteTablesFilter](o, func(v GetLocalGatewayRouteTablesFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A Local Gateway Route Table will be selected if any one of the given values matches.
func (o GetLocalGatewayRouteTablesFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLocalGatewayRouteTablesFilter](o, func(v GetLocalGatewayRouteTablesFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetLocalGatewayVirtualInterfaceFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayVirtualInterfaceFilterArgs struct {
	// Name of the filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetLocalGatewayVirtualInterfaceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayVirtualInterfaceFilter)(nil)).Elem()
}

func (i GetLocalGatewayVirtualInterfaceFilterArgs) ToGetLocalGatewayVirtualInterfaceFilterOutput() GetLocalGatewayVirtualInterfaceFilterOutput {
	return i.ToGetLocalGatewayVirtualInterfaceFilterOutputWithContext(context.Background())
}

func (i GetLocalGatewayVirtualInterfaceFilterArgs) ToGetLocalGatewayVirtualInterfaceFilterOutputWithContext(ctx context.Context) GetLocalGatewayVirtualInterfaceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalGatewayVirtualInterfaceFilterOutput)
}

func (i *GetLocalGatewayVirtualInterfaceFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLocalGatewayVirtualInterfaceFilterArgs] {
	return pulumix.Val(i)
}

type GetLocalGatewayVirtualInterfaceFilterOutput struct{ *pulumi.OutputState }

func (GetLocalGatewayVirtualInterfaceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayVirtualInterfaceFilter)(nil)).Elem()
}

func (o GetLocalGatewayVirtualInterfaceFilterOutput) ToGetLocalGatewayVirtualInterfaceFilterOutput() GetLocalGatewayVirtualInterfaceFilterOutput {
	return o
}

func (o GetLocalGatewayVirtualInterfaceFilterOutput) ToGetLocalGatewayVirtualInterfaceFilterOutputWithContext(ctx context.Context) GetLocalGatewayVirtualInterfaceFilterOutput {
	return o
}

func (o GetLocalGatewayVirtualInterfaceFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocalGatewayVirtualInterfaceFilter] {
	return pulumix.Output[GetLocalGatewayVirtualInterfaceFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetLocalGatewayVirtualInterfaceFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLocalGatewayVirtualInterfaceFilter](o, func(v GetLocalGatewayVirtualInterfaceFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetLocalGatewayVirtualInterfaceFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLocalGatewayVirtualInterfaceFilter](o, func(v GetLocalGatewayVirtualInterfaceFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetLocalGatewayVirtualInterfaceGroupFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayVirtualInterfaceGroupFilterArgs struct {
	// Name of the filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetLocalGatewayVirtualInterfaceGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayVirtualInterfaceGroupFilter)(nil)).Elem()
}

func (i GetLocalGatewayVirtualInterfaceGroupFilterArgs) ToGetLocalGatewayVirtualInterfaceGroupFilterOutput() GetLocalGatewayVirtualInterfaceGroupFilterOutput {
	return i.ToGetLocalGatewayVirtualInterfaceGroupFilterOutputWithContext(context.Background())
}

func (i GetLocalGatewayVirtualInterfaceGroupFilterArgs) ToGetLocalGatewayVirtualInterfaceGroupFilterOutputWithContext(ctx context.Context) GetLocalGatewayVirtualInterfaceGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalGatewayVirtualInterfaceGroupFilterOutput)
}

func (i *GetLocalGatewayVirtualInterfaceGroupFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLocalGatewayVirtualInterfaceGroupFilterArgs] {
	return pulumix.Val(i)
}

type GetLocalGatewayVirtualInterfaceGroupFilterOutput struct{ *pulumi.OutputState }

func (GetLocalGatewayVirtualInterfaceGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayVirtualInterfaceGroupFilter)(nil)).Elem()
}

func (o GetLocalGatewayVirtualInterfaceGroupFilterOutput) ToGetLocalGatewayVirtualInterfaceGroupFilterOutput() GetLocalGatewayVirtualInterfaceGroupFilterOutput {
	return o
}

func (o GetLocalGatewayVirtualInterfaceGroupFilterOutput) ToGetLocalGatewayVirtualInterfaceGroupFilterOutputWithContext(ctx context.Context) GetLocalGatewayVirtualInterfaceGroupFilterOutput {
	return o
}

func (o GetLocalGatewayVirtualInterfaceGroupFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocalGatewayVirtualInterfaceGroupFilter] {
	return pulumix.Output[GetLocalGatewayVirtualInterfaceGroupFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetLocalGatewayVirtualInterfaceGroupFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLocalGatewayVirtualInterfaceGroupFilter](o, func(v GetLocalGatewayVirtualInterfaceGroupFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetLocalGatewayVirtualInterfaceGroupFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLocalGatewayVirtualInterfaceGroupFilter](o, func(v GetLocalGatewayVirtualInterfaceGroupFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetLocalGatewayVirtualInterfaceGroupsFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayVirtualInterfaceGroupsFilterArgs struct {
	// Name of the filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetLocalGatewayVirtualInterfaceGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayVirtualInterfaceGroupsFilter)(nil)).Elem()
}

func (i GetLocalGatewayVirtualInterfaceGroupsFilterArgs) ToGetLocalGatewayVirtualInterfaceGroupsFilterOutput() GetLocalGatewayVirtualInterfaceGroupsFilterOutput {
	return i.ToGetLocalGatewayVirtualInterfaceGroupsFilterOutputWithContext(context.Background())
}

func (i GetLocalGatewayVirtualInterfaceGroupsFilterArgs) ToGetLocalGatewayVirtualInterfaceGroupsFilterOutputWithContext(ctx context.Context) GetLocalGatewayVirtualInterfaceGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalGatewayVirtualInterfaceGroupsFilterOutput)
}

func (i *GetLocalGatewayVirtualInterfaceGroupsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLocalGatewayVirtualInterfaceGroupsFilterArgs] {
	return pulumix.Val(i)
}

type GetLocalGatewayVirtualInterfaceGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetLocalGatewayVirtualInterfaceGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayVirtualInterfaceGroupsFilter)(nil)).Elem()
}

func (o GetLocalGatewayVirtualInterfaceGroupsFilterOutput) ToGetLocalGatewayVirtualInterfaceGroupsFilterOutput() GetLocalGatewayVirtualInterfaceGroupsFilterOutput {
	return o
}

func (o GetLocalGatewayVirtualInterfaceGroupsFilterOutput) ToGetLocalGatewayVirtualInterfaceGroupsFilterOutputWithContext(ctx context.Context) GetLocalGatewayVirtualInterfaceGroupsFilterOutput {
	return o
}

func (o GetLocalGatewayVirtualInterfaceGroupsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocalGatewayVirtualInterfaceGroupsFilter] {
	return pulumix.Output[GetLocalGatewayVirtualInterfaceGroupsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetLocalGatewayVirtualInterfaceGroupsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLocalGatewayVirtualInterfaceGroupsFilter](o, func(v GetLocalGatewayVirtualInterfaceGroupsFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetLocalGatewayVirtualInterfaceGroupsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLocalGatewayVirtualInterfaceGroupsFilter](o, func(v GetLocalGatewayVirtualInterfaceGroupsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetLocalGatewaysFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Local Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetLocalGatewaysFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Local Gateway will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetLocalGatewaysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewaysFilter)(nil)).Elem()
}

func (i GetLocalGatewaysFilterArgs) ToGetLocalGatewaysFilterOutput() GetLocalGatewaysFilterOutput {
	return i.ToGetLocalGatewaysFilterOutputWithContext(context.Background())
}

func (i GetLocalGatewaysFilterArgs) ToGetLocalGatewaysFilterOutputWithContext(ctx context.Context) GetLocalGatewaysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalGatewaysFilterOutput)
}

func (i *GetLocalGatewaysFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLocalGatewaysFilterArgs] {
	return pulumix.Val(i)
}

type GetLocalGatewaysFilterOutput struct{ *pulumi.OutputState }

func (GetLocalGatewaysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewaysFilter)(nil)).Elem()
}

func (o GetLocalGatewaysFilterOutput) ToGetLocalGatewaysFilterOutput() GetLocalGatewaysFilterOutput {
	return o
}

func (o GetLocalGatewaysFilterOutput) ToGetLocalGatewaysFilterOutputWithContext(ctx context.Context) GetLocalGatewaysFilterOutput {
	return o
}

func (o GetLocalGatewaysFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetLocalGatewaysFilter] {
	return pulumix.Output[GetLocalGatewaysFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
func (o GetLocalGatewaysFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLocalGatewaysFilter](o, func(v GetLocalGatewaysFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A Local Gateway will be selected if any one of the given values matches.
func (o GetLocalGatewaysFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetLocalGatewaysFilter](o, func(v GetLocalGatewaysFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetManagedPrefixListEntryType struct {
	Cidr        string `pulumi:"cidr"`
	Description string `pulumi:"description"`
}

type GetManagedPrefixListEntryTypeArgs struct {
	Cidr        pulumix.Input[string] `pulumi:"cidr"`
	Description pulumix.Input[string] `pulumi:"description"`
}

func (GetManagedPrefixListEntryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedPrefixListEntryType)(nil)).Elem()
}

func (i GetManagedPrefixListEntryTypeArgs) ToGetManagedPrefixListEntryTypeOutput() GetManagedPrefixListEntryTypeOutput {
	return i.ToGetManagedPrefixListEntryTypeOutputWithContext(context.Background())
}

func (i GetManagedPrefixListEntryTypeArgs) ToGetManagedPrefixListEntryTypeOutputWithContext(ctx context.Context) GetManagedPrefixListEntryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedPrefixListEntryTypeOutput)
}

func (i *GetManagedPrefixListEntryTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetManagedPrefixListEntryTypeArgs] {
	return pulumix.Val(i)
}

type GetManagedPrefixListEntryTypeOutput struct{ *pulumi.OutputState }

func (GetManagedPrefixListEntryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedPrefixListEntryType)(nil)).Elem()
}

func (o GetManagedPrefixListEntryTypeOutput) ToGetManagedPrefixListEntryTypeOutput() GetManagedPrefixListEntryTypeOutput {
	return o
}

func (o GetManagedPrefixListEntryTypeOutput) ToGetManagedPrefixListEntryTypeOutputWithContext(ctx context.Context) GetManagedPrefixListEntryTypeOutput {
	return o
}

func (o GetManagedPrefixListEntryTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetManagedPrefixListEntryType] {
	return pulumix.Output[GetManagedPrefixListEntryType]{
		OutputState: o.OutputState,
	}
}

func (o GetManagedPrefixListEntryTypeOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[GetManagedPrefixListEntryType](o, func(v GetManagedPrefixListEntryType) string { return v.Cidr })
}

func (o GetManagedPrefixListEntryTypeOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[GetManagedPrefixListEntryType](o, func(v GetManagedPrefixListEntryType) string { return v.Description })
}

type GetManagedPrefixListFilter struct {
	// Name of the filter field. Valid values can be found in the EC2 [DescribeManagedPrefixLists](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html) API Reference.
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetManagedPrefixListFilterArgs struct {
	// Name of the filter field. Valid values can be found in the EC2 [DescribeManagedPrefixLists](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetManagedPrefixListFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedPrefixListFilter)(nil)).Elem()
}

func (i GetManagedPrefixListFilterArgs) ToGetManagedPrefixListFilterOutput() GetManagedPrefixListFilterOutput {
	return i.ToGetManagedPrefixListFilterOutputWithContext(context.Background())
}

func (i GetManagedPrefixListFilterArgs) ToGetManagedPrefixListFilterOutputWithContext(ctx context.Context) GetManagedPrefixListFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedPrefixListFilterOutput)
}

func (i *GetManagedPrefixListFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetManagedPrefixListFilterArgs] {
	return pulumix.Val(i)
}

type GetManagedPrefixListFilterOutput struct{ *pulumi.OutputState }

func (GetManagedPrefixListFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedPrefixListFilter)(nil)).Elem()
}

func (o GetManagedPrefixListFilterOutput) ToGetManagedPrefixListFilterOutput() GetManagedPrefixListFilterOutput {
	return o
}

func (o GetManagedPrefixListFilterOutput) ToGetManagedPrefixListFilterOutputWithContext(ctx context.Context) GetManagedPrefixListFilterOutput {
	return o
}

func (o GetManagedPrefixListFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetManagedPrefixListFilter] {
	return pulumix.Output[GetManagedPrefixListFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the EC2 [DescribeManagedPrefixLists](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html) API Reference.
func (o GetManagedPrefixListFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetManagedPrefixListFilter](o, func(v GetManagedPrefixListFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetManagedPrefixListFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetManagedPrefixListFilter](o, func(v GetManagedPrefixListFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetManagedPrefixListsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A managed prefix list will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetManagedPrefixListsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A managed prefix list will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetManagedPrefixListsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedPrefixListsFilter)(nil)).Elem()
}

func (i GetManagedPrefixListsFilterArgs) ToGetManagedPrefixListsFilterOutput() GetManagedPrefixListsFilterOutput {
	return i.ToGetManagedPrefixListsFilterOutputWithContext(context.Background())
}

func (i GetManagedPrefixListsFilterArgs) ToGetManagedPrefixListsFilterOutputWithContext(ctx context.Context) GetManagedPrefixListsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedPrefixListsFilterOutput)
}

func (i *GetManagedPrefixListsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetManagedPrefixListsFilterArgs] {
	return pulumix.Val(i)
}

type GetManagedPrefixListsFilterOutput struct{ *pulumi.OutputState }

func (GetManagedPrefixListsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedPrefixListsFilter)(nil)).Elem()
}

func (o GetManagedPrefixListsFilterOutput) ToGetManagedPrefixListsFilterOutput() GetManagedPrefixListsFilterOutput {
	return o
}

func (o GetManagedPrefixListsFilterOutput) ToGetManagedPrefixListsFilterOutputWithContext(ctx context.Context) GetManagedPrefixListsFilterOutput {
	return o
}

func (o GetManagedPrefixListsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetManagedPrefixListsFilter] {
	return pulumix.Output[GetManagedPrefixListsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html).
func (o GetManagedPrefixListsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetManagedPrefixListsFilter](o, func(v GetManagedPrefixListsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A managed prefix list will be selected if any one of the given values matches.
func (o GetManagedPrefixListsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetManagedPrefixListsFilter](o, func(v GetManagedPrefixListsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetNatGatewayFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Nat Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNatGatewayFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Nat Gateway will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetNatGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewayFilter)(nil)).Elem()
}

func (i GetNatGatewayFilterArgs) ToGetNatGatewayFilterOutput() GetNatGatewayFilterOutput {
	return i.ToGetNatGatewayFilterOutputWithContext(context.Background())
}

func (i GetNatGatewayFilterArgs) ToGetNatGatewayFilterOutputWithContext(ctx context.Context) GetNatGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewayFilterOutput)
}

func (i *GetNatGatewayFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNatGatewayFilterArgs] {
	return pulumix.Val(i)
}

type GetNatGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetNatGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewayFilter)(nil)).Elem()
}

func (o GetNatGatewayFilterOutput) ToGetNatGatewayFilterOutput() GetNatGatewayFilterOutput {
	return o
}

func (o GetNatGatewayFilterOutput) ToGetNatGatewayFilterOutputWithContext(ctx context.Context) GetNatGatewayFilterOutput {
	return o
}

func (o GetNatGatewayFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetNatGatewayFilter] {
	return pulumix.Output[GetNatGatewayFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
func (o GetNatGatewayFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNatGatewayFilter](o, func(v GetNatGatewayFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// An Nat Gateway will be selected if any one of the given values matches.
func (o GetNatGatewayFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNatGatewayFilter](o, func(v GetNatGatewayFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetNatGatewaysFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Nat Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNatGatewaysFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Nat Gateway will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetNatGatewaysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewaysFilter)(nil)).Elem()
}

func (i GetNatGatewaysFilterArgs) ToGetNatGatewaysFilterOutput() GetNatGatewaysFilterOutput {
	return i.ToGetNatGatewaysFilterOutputWithContext(context.Background())
}

func (i GetNatGatewaysFilterArgs) ToGetNatGatewaysFilterOutputWithContext(ctx context.Context) GetNatGatewaysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewaysFilterOutput)
}

func (i *GetNatGatewaysFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNatGatewaysFilterArgs] {
	return pulumix.Val(i)
}

type GetNatGatewaysFilterOutput struct{ *pulumi.OutputState }

func (GetNatGatewaysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewaysFilter)(nil)).Elem()
}

func (o GetNatGatewaysFilterOutput) ToGetNatGatewaysFilterOutput() GetNatGatewaysFilterOutput {
	return o
}

func (o GetNatGatewaysFilterOutput) ToGetNatGatewaysFilterOutputWithContext(ctx context.Context) GetNatGatewaysFilterOutput {
	return o
}

func (o GetNatGatewaysFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetNatGatewaysFilter] {
	return pulumix.Output[GetNatGatewaysFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
func (o GetNatGatewaysFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNatGatewaysFilter](o, func(v GetNatGatewaysFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A Nat Gateway will be selected if any one of the given values matches.
func (o GetNatGatewaysFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNatGatewaysFilter](o, func(v GetNatGatewaysFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetNetworkAclsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNetworkAclsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetNetworkAclsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsFilter)(nil)).Elem()
}

func (i GetNetworkAclsFilterArgs) ToGetNetworkAclsFilterOutput() GetNetworkAclsFilterOutput {
	return i.ToGetNetworkAclsFilterOutputWithContext(context.Background())
}

func (i GetNetworkAclsFilterArgs) ToGetNetworkAclsFilterOutputWithContext(ctx context.Context) GetNetworkAclsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsFilterOutput)
}

func (i *GetNetworkAclsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkAclsFilterArgs] {
	return pulumix.Val(i)
}

type GetNetworkAclsFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsFilter)(nil)).Elem()
}

func (o GetNetworkAclsFilterOutput) ToGetNetworkAclsFilterOutput() GetNetworkAclsFilterOutput {
	return o
}

func (o GetNetworkAclsFilterOutput) ToGetNetworkAclsFilterOutputWithContext(ctx context.Context) GetNetworkAclsFilterOutput {
	return o
}

func (o GetNetworkAclsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkAclsFilter] {
	return pulumix.Output[GetNetworkAclsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
func (o GetNetworkAclsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkAclsFilter](o, func(v GetNetworkAclsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetNetworkAclsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkAclsFilter](o, func(v GetNetworkAclsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisAlternatePathHint struct {
	ComponentArn string `pulumi:"componentArn"`
	ComponentId  string `pulumi:"componentId"`
}

type GetNetworkInsightsAnalysisAlternatePathHintArgs struct {
	ComponentArn pulumix.Input[string] `pulumi:"componentArn"`
	ComponentId  pulumix.Input[string] `pulumi:"componentId"`
}

func (GetNetworkInsightsAnalysisAlternatePathHintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisAlternatePathHint)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisAlternatePathHintArgs) ToGetNetworkInsightsAnalysisAlternatePathHintOutput() GetNetworkInsightsAnalysisAlternatePathHintOutput {
	return i.ToGetNetworkInsightsAnalysisAlternatePathHintOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisAlternatePathHintArgs) ToGetNetworkInsightsAnalysisAlternatePathHintOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisAlternatePathHintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisAlternatePathHintOutput)
}

func (i *GetNetworkInsightsAnalysisAlternatePathHintArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisAlternatePathHintArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisAlternatePathHintOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisAlternatePathHintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisAlternatePathHint)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisAlternatePathHintOutput) ToGetNetworkInsightsAnalysisAlternatePathHintOutput() GetNetworkInsightsAnalysisAlternatePathHintOutput {
	return o
}

func (o GetNetworkInsightsAnalysisAlternatePathHintOutput) ToGetNetworkInsightsAnalysisAlternatePathHintOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisAlternatePathHintOutput {
	return o
}

func (o GetNetworkInsightsAnalysisAlternatePathHintOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisAlternatePathHint] {
	return pulumix.Output[GetNetworkInsightsAnalysisAlternatePathHint]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisAlternatePathHintOutput) ComponentArn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisAlternatePathHint](o, func(v GetNetworkInsightsAnalysisAlternatePathHint) string { return v.ComponentArn })
}

func (o GetNetworkInsightsAnalysisAlternatePathHintOutput) ComponentId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisAlternatePathHint](o, func(v GetNetworkInsightsAnalysisAlternatePathHint) string { return v.ComponentId })
}

type GetNetworkInsightsAnalysisExplanation struct {
	AclRules                       []GetNetworkInsightsAnalysisExplanationAclRule                       `pulumi:"aclRules"`
	Acls                           []GetNetworkInsightsAnalysisExplanationAcl                           `pulumi:"acls"`
	Address                        string                                                               `pulumi:"address"`
	Addresses                      []string                                                             `pulumi:"addresses"`
	AttachedTos                    []GetNetworkInsightsAnalysisExplanationAttachedTo                    `pulumi:"attachedTos"`
	AvailabilityZones              []string                                                             `pulumi:"availabilityZones"`
	Cidrs                          []string                                                             `pulumi:"cidrs"`
	ClassicLoadBalancerListeners   []GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener   `pulumi:"classicLoadBalancerListeners"`
	Components                     []GetNetworkInsightsAnalysisExplanationComponent                     `pulumi:"components"`
	CustomerGateways               []GetNetworkInsightsAnalysisExplanationCustomerGateway               `pulumi:"customerGateways"`
	DestinationVpcs                []GetNetworkInsightsAnalysisExplanationDestinationVpc                `pulumi:"destinationVpcs"`
	Destinations                   []GetNetworkInsightsAnalysisExplanationDestination                   `pulumi:"destinations"`
	Direction                      string                                                               `pulumi:"direction"`
	ElasticLoadBalancerListeners   []GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener   `pulumi:"elasticLoadBalancerListeners"`
	ExplanationCode                string                                                               `pulumi:"explanationCode"`
	IngressRouteTables             []GetNetworkInsightsAnalysisExplanationIngressRouteTable             `pulumi:"ingressRouteTables"`
	InternetGateways               []GetNetworkInsightsAnalysisExplanationInternetGateway               `pulumi:"internetGateways"`
	LoadBalancerArn                string                                                               `pulumi:"loadBalancerArn"`
	LoadBalancerListenerPort       int                                                                  `pulumi:"loadBalancerListenerPort"`
	LoadBalancerTargetGroup        []GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup       `pulumi:"loadBalancerTargetGroup"`
	LoadBalancerTargetGroups       []GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup       `pulumi:"loadBalancerTargetGroups"`
	LoadBalancerTargetPort         int                                                                  `pulumi:"loadBalancerTargetPort"`
	MissingComponent               string                                                               `pulumi:"missingComponent"`
	NatGateways                    []GetNetworkInsightsAnalysisExplanationNatGateway                    `pulumi:"natGateways"`
	NetworkInterfaces              []GetNetworkInsightsAnalysisExplanationNetworkInterface              `pulumi:"networkInterfaces"`
	PacketField                    string                                                               `pulumi:"packetField"`
	Port                           int                                                                  `pulumi:"port"`
	PortRanges                     []GetNetworkInsightsAnalysisExplanationPortRange                     `pulumi:"portRanges"`
	PrefixLists                    []GetNetworkInsightsAnalysisExplanationPrefixList                    `pulumi:"prefixLists"`
	Protocols                      []string                                                             `pulumi:"protocols"`
	RouteTableRoutes               []GetNetworkInsightsAnalysisExplanationRouteTableRoute               `pulumi:"routeTableRoutes"`
	RouteTables                    []GetNetworkInsightsAnalysisExplanationRouteTable                    `pulumi:"routeTables"`
	SecurityGroup                  []GetNetworkInsightsAnalysisExplanationSecurityGroup                 `pulumi:"securityGroup"`
	SecurityGroupRules             []GetNetworkInsightsAnalysisExplanationSecurityGroupRule             `pulumi:"securityGroupRules"`
	SecurityGroups                 []GetNetworkInsightsAnalysisExplanationSecurityGroup                 `pulumi:"securityGroups"`
	SourceVpcs                     []GetNetworkInsightsAnalysisExplanationSourceVpc                     `pulumi:"sourceVpcs"`
	State                          string                                                               `pulumi:"state"`
	SubnetRouteTables              []GetNetworkInsightsAnalysisExplanationSubnetRouteTable              `pulumi:"subnetRouteTables"`
	Subnets                        []GetNetworkInsightsAnalysisExplanationSubnet                        `pulumi:"subnets"`
	TransitGatewayAttachments      []GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment      `pulumi:"transitGatewayAttachments"`
	TransitGatewayRouteTableRoutes []GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGatewayRouteTables      []GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable      `pulumi:"transitGatewayRouteTables"`
	TransitGateways                []GetNetworkInsightsAnalysisExplanationTransitGateway                `pulumi:"transitGateways"`
	VpcEndpoints                   []GetNetworkInsightsAnalysisExplanationVpcEndpoint                   `pulumi:"vpcEndpoints"`
	VpcPeeringConnections          []GetNetworkInsightsAnalysisExplanationVpcPeeringConnection          `pulumi:"vpcPeeringConnections"`
	Vpcs                           []GetNetworkInsightsAnalysisExplanationVpc                           `pulumi:"vpcs"`
	VpnConnections                 []GetNetworkInsightsAnalysisExplanationVpnConnection                 `pulumi:"vpnConnections"`
	VpnGateways                    []GetNetworkInsightsAnalysisExplanationVpnGateway                    `pulumi:"vpnGateways"`
}

type GetNetworkInsightsAnalysisExplanationArgs struct {
	AclRules                       pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationAclRuleArgs]                       `pulumi:"aclRules"`
	Acls                           pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationAclArgs]                           `pulumi:"acls"`
	Address                        pulumix.Input[string]                                                                    `pulumi:"address"`
	Addresses                      pulumix.Input[[]string]                                                                  `pulumi:"addresses"`
	AttachedTos                    pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationAttachedToArgs]                    `pulumi:"attachedTos"`
	AvailabilityZones              pulumix.Input[[]string]                                                                  `pulumi:"availabilityZones"`
	Cidrs                          pulumix.Input[[]string]                                                                  `pulumi:"cidrs"`
	ClassicLoadBalancerListeners   pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs]   `pulumi:"classicLoadBalancerListeners"`
	Components                     pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationComponentArgs]                     `pulumi:"components"`
	CustomerGateways               pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationCustomerGatewayArgs]               `pulumi:"customerGateways"`
	DestinationVpcs                pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationDestinationVpcArgs]                `pulumi:"destinationVpcs"`
	Destinations                   pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationDestinationArgs]                   `pulumi:"destinations"`
	Direction                      pulumix.Input[string]                                                                    `pulumi:"direction"`
	ElasticLoadBalancerListeners   pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs]   `pulumi:"elasticLoadBalancerListeners"`
	ExplanationCode                pulumix.Input[string]                                                                    `pulumi:"explanationCode"`
	IngressRouteTables             pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationIngressRouteTableArgs]             `pulumi:"ingressRouteTables"`
	InternetGateways               pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationInternetGatewayArgs]               `pulumi:"internetGateways"`
	LoadBalancerArn                pulumix.Input[string]                                                                    `pulumi:"loadBalancerArn"`
	LoadBalancerListenerPort       pulumix.Input[int]                                                                       `pulumi:"loadBalancerListenerPort"`
	LoadBalancerTargetGroup        pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs]       `pulumi:"loadBalancerTargetGroup"`
	LoadBalancerTargetGroups       pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs]       `pulumi:"loadBalancerTargetGroups"`
	LoadBalancerTargetPort         pulumix.Input[int]                                                                       `pulumi:"loadBalancerTargetPort"`
	MissingComponent               pulumix.Input[string]                                                                    `pulumi:"missingComponent"`
	NatGateways                    pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationNatGatewayArgs]                    `pulumi:"natGateways"`
	NetworkInterfaces              pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationNetworkInterfaceArgs]              `pulumi:"networkInterfaces"`
	PacketField                    pulumix.Input[string]                                                                    `pulumi:"packetField"`
	Port                           pulumix.Input[int]                                                                       `pulumi:"port"`
	PortRanges                     pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationPortRangeArgs]                     `pulumi:"portRanges"`
	PrefixLists                    pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationPrefixListArgs]                    `pulumi:"prefixLists"`
	Protocols                      pulumix.Input[[]string]                                                                  `pulumi:"protocols"`
	RouteTableRoutes               pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationRouteTableRouteArgs]               `pulumi:"routeTableRoutes"`
	RouteTables                    pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationRouteTableArgs]                    `pulumi:"routeTables"`
	SecurityGroup                  pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationSecurityGroupArgs]                 `pulumi:"securityGroup"`
	SecurityGroupRules             pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationSecurityGroupRuleArgs]             `pulumi:"securityGroupRules"`
	SecurityGroups                 pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationSecurityGroupArgs]                 `pulumi:"securityGroups"`
	SourceVpcs                     pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationSourceVpcArgs]                     `pulumi:"sourceVpcs"`
	State                          pulumix.Input[string]                                                                    `pulumi:"state"`
	SubnetRouteTables              pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationSubnetRouteTableArgs]              `pulumi:"subnetRouteTables"`
	Subnets                        pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationSubnetArgs]                        `pulumi:"subnets"`
	TransitGatewayAttachments      pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs]      `pulumi:"transitGatewayAttachments"`
	TransitGatewayRouteTableRoutes pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs] `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGatewayRouteTables      pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs]      `pulumi:"transitGatewayRouteTables"`
	TransitGateways                pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationTransitGatewayArgs]                `pulumi:"transitGateways"`
	VpcEndpoints                   pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationVpcEndpointArgs]                   `pulumi:"vpcEndpoints"`
	VpcPeeringConnections          pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs]          `pulumi:"vpcPeeringConnections"`
	Vpcs                           pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationVpcArgs]                           `pulumi:"vpcs"`
	VpnConnections                 pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationVpnConnectionArgs]                 `pulumi:"vpnConnections"`
	VpnGateways                    pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationVpnGatewayArgs]                    `pulumi:"vpnGateways"`
}

func (GetNetworkInsightsAnalysisExplanationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanation)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationArgs) ToGetNetworkInsightsAnalysisExplanationOutput() GetNetworkInsightsAnalysisExplanationOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationArgs) ToGetNetworkInsightsAnalysisExplanationOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanation)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationOutput) ToGetNetworkInsightsAnalysisExplanationOutput() GetNetworkInsightsAnalysisExplanationOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationOutput) ToGetNetworkInsightsAnalysisExplanationOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanation] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanation]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) AclRules() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationAclRule, GetNetworkInsightsAnalysisExplanationAclRuleOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationAclRule {
		return v.AclRules
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationAclRule, GetNetworkInsightsAnalysisExplanationAclRuleOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Acls() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationAcl, GetNetworkInsightsAnalysisExplanationAclOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationAcl {
		return v.Acls
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationAcl, GetNetworkInsightsAnalysisExplanationAclOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Address() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) string { return v.Address })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []string { return v.Addresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) AttachedTos() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationAttachedTo, GetNetworkInsightsAnalysisExplanationAttachedToOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationAttachedTo {
		return v.AttachedTos
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationAttachedTo, GetNetworkInsightsAnalysisExplanationAttachedToOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) AvailabilityZones() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []string { return v.AvailabilityZones })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Cidrs() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []string { return v.Cidrs })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) ClassicLoadBalancerListeners() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener, GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener {
		return v.ClassicLoadBalancerListeners
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener, GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Components() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationComponent, GetNetworkInsightsAnalysisExplanationComponentOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationComponent, GetNetworkInsightsAnalysisExplanationComponentOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) CustomerGateways() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationCustomerGateway, GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationCustomerGateway {
		return v.CustomerGateways
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationCustomerGateway, GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) DestinationVpcs() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationDestinationVpc, GetNetworkInsightsAnalysisExplanationDestinationVpcOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationDestinationVpc {
		return v.DestinationVpcs
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationDestinationVpc, GetNetworkInsightsAnalysisExplanationDestinationVpcOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Destinations() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationDestination, GetNetworkInsightsAnalysisExplanationDestinationOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationDestination {
		return v.Destinations
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationDestination, GetNetworkInsightsAnalysisExplanationDestinationOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Direction() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) string { return v.Direction })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) ElasticLoadBalancerListeners() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener, GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener {
		return v.ElasticLoadBalancerListeners
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener, GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) ExplanationCode() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) string { return v.ExplanationCode })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) IngressRouteTables() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationIngressRouteTable, GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationIngressRouteTable {
		return v.IngressRouteTables
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationIngressRouteTable, GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) InternetGateways() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationInternetGateway, GetNetworkInsightsAnalysisExplanationInternetGatewayOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationInternetGateway {
		return v.InternetGateways
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationInternetGateway, GetNetworkInsightsAnalysisExplanationInternetGatewayOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) LoadBalancerArn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) string { return v.LoadBalancerArn })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) LoadBalancerListenerPort() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) int { return v.LoadBalancerListenerPort })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) LoadBalancerTargetGroup() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup, GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup {
		return v.LoadBalancerTargetGroup
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup, GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) LoadBalancerTargetGroups() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup, GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup {
		return v.LoadBalancerTargetGroups
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup, GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) LoadBalancerTargetPort() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) int { return v.LoadBalancerTargetPort })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) MissingComponent() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) string { return v.MissingComponent })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) NatGateways() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationNatGateway, GetNetworkInsightsAnalysisExplanationNatGatewayOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationNatGateway {
		return v.NatGateways
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationNatGateway, GetNetworkInsightsAnalysisExplanationNatGatewayOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) NetworkInterfaces() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationNetworkInterface, GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationNetworkInterface {
		return v.NetworkInterfaces
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationNetworkInterface, GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) PacketField() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) string { return v.PacketField })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Port() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) int { return v.Port })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) PortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationPortRange, GetNetworkInsightsAnalysisExplanationPortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationPortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationPortRange, GetNetworkInsightsAnalysisExplanationPortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) PrefixLists() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationPrefixList, GetNetworkInsightsAnalysisExplanationPrefixListOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationPrefixList {
		return v.PrefixLists
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationPrefixList, GetNetworkInsightsAnalysisExplanationPrefixListOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Protocols() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []string { return v.Protocols })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) RouteTableRoutes() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationRouteTableRoute, GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationRouteTableRoute {
		return v.RouteTableRoutes
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationRouteTableRoute, GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) RouteTables() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationRouteTable, GetNetworkInsightsAnalysisExplanationRouteTableOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationRouteTable {
		return v.RouteTables
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationRouteTable, GetNetworkInsightsAnalysisExplanationRouteTableOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) SecurityGroup() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSecurityGroup, GetNetworkInsightsAnalysisExplanationSecurityGroupOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationSecurityGroup {
		return v.SecurityGroup
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSecurityGroup, GetNetworkInsightsAnalysisExplanationSecurityGroupOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) SecurityGroupRules() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSecurityGroupRule, GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationSecurityGroupRule {
		return v.SecurityGroupRules
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSecurityGroupRule, GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) SecurityGroups() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSecurityGroup, GetNetworkInsightsAnalysisExplanationSecurityGroupOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationSecurityGroup {
		return v.SecurityGroups
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSecurityGroup, GetNetworkInsightsAnalysisExplanationSecurityGroupOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) SourceVpcs() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSourceVpc, GetNetworkInsightsAnalysisExplanationSourceVpcOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationSourceVpc {
		return v.SourceVpcs
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSourceVpc, GetNetworkInsightsAnalysisExplanationSourceVpcOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) string { return v.State })
}

func (o GetNetworkInsightsAnalysisExplanationOutput) SubnetRouteTables() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSubnetRouteTable, GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationSubnetRouteTable {
		return v.SubnetRouteTables
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSubnetRouteTable, GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Subnets() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSubnet, GetNetworkInsightsAnalysisExplanationSubnetOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationSubnet {
		return v.Subnets
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSubnet, GetNetworkInsightsAnalysisExplanationSubnetOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) TransitGatewayAttachments() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment, GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment {
		return v.TransitGatewayAttachments
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment, GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) TransitGatewayRouteTableRoutes() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute, GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute {
		return v.TransitGatewayRouteTableRoutes
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute, GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) TransitGatewayRouteTables() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable, GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable {
		return v.TransitGatewayRouteTables
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable, GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) TransitGateways() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationTransitGateway, GetNetworkInsightsAnalysisExplanationTransitGatewayOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationTransitGateway {
		return v.TransitGateways
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationTransitGateway, GetNetworkInsightsAnalysisExplanationTransitGatewayOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) VpcEndpoints() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpcEndpoint, GetNetworkInsightsAnalysisExplanationVpcEndpointOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationVpcEndpoint {
		return v.VpcEndpoints
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpcEndpoint, GetNetworkInsightsAnalysisExplanationVpcEndpointOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) VpcPeeringConnections() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpcPeeringConnection, GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationVpcPeeringConnection {
		return v.VpcPeeringConnections
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpcPeeringConnection, GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) Vpcs() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpc, GetNetworkInsightsAnalysisExplanationVpcOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationVpc {
		return v.Vpcs
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpc, GetNetworkInsightsAnalysisExplanationVpcOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) VpnConnections() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpnConnection, GetNetworkInsightsAnalysisExplanationVpnConnectionOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationVpnConnection {
		return v.VpnConnections
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpnConnection, GetNetworkInsightsAnalysisExplanationVpnConnectionOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationOutput) VpnGateways() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpnGateway, GetNetworkInsightsAnalysisExplanationVpnGatewayOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanation](o, func(v GetNetworkInsightsAnalysisExplanation) []GetNetworkInsightsAnalysisExplanationVpnGateway {
		return v.VpnGateways
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationVpnGateway, GetNetworkInsightsAnalysisExplanationVpnGatewayOutput]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisExplanationAcl struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationAclArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationAcl)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationAclArgs) ToGetNetworkInsightsAnalysisExplanationAclOutput() GetNetworkInsightsAnalysisExplanationAclOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationAclOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationAclArgs) ToGetNetworkInsightsAnalysisExplanationAclOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationAclOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationAclArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationAclArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationAclOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationAcl)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationAclOutput) ToGetNetworkInsightsAnalysisExplanationAclOutput() GetNetworkInsightsAnalysisExplanationAclOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationAclOutput) ToGetNetworkInsightsAnalysisExplanationAclOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationAclOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationAclOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationAcl] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationAcl]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationAclOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAcl](o, func(v GetNetworkInsightsAnalysisExplanationAcl) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationAclOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAcl](o, func(v GetNetworkInsightsAnalysisExplanationAcl) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationAclOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAcl](o, func(v GetNetworkInsightsAnalysisExplanationAcl) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationAclRule struct {
	Cidr       string                                                  `pulumi:"cidr"`
	Egress     bool                                                    `pulumi:"egress"`
	PortRanges []GetNetworkInsightsAnalysisExplanationAclRulePortRange `pulumi:"portRanges"`
	Protocol   string                                                  `pulumi:"protocol"`
	RuleAction string                                                  `pulumi:"ruleAction"`
	RuleNumber int                                                     `pulumi:"ruleNumber"`
}

type GetNetworkInsightsAnalysisExplanationAclRuleArgs struct {
	Cidr       pulumix.Input[string]                                                       `pulumi:"cidr"`
	Egress     pulumix.Input[bool]                                                         `pulumi:"egress"`
	PortRanges pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationAclRulePortRangeArgs] `pulumi:"portRanges"`
	Protocol   pulumix.Input[string]                                                       `pulumi:"protocol"`
	RuleAction pulumix.Input[string]                                                       `pulumi:"ruleAction"`
	RuleNumber pulumix.Input[int]                                                          `pulumi:"ruleNumber"`
}

func (GetNetworkInsightsAnalysisExplanationAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationAclRule)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationAclRuleArgs) ToGetNetworkInsightsAnalysisExplanationAclRuleOutput() GetNetworkInsightsAnalysisExplanationAclRuleOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationAclRuleOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationAclRuleArgs) ToGetNetworkInsightsAnalysisExplanationAclRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationAclRuleOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationAclRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationAclRuleArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationAclRuleOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationAclRule)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationAclRuleOutput) ToGetNetworkInsightsAnalysisExplanationAclRuleOutput() GetNetworkInsightsAnalysisExplanationAclRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationAclRuleOutput) ToGetNetworkInsightsAnalysisExplanationAclRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationAclRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationAclRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationAclRule] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationAclRule]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisExplanationAclRuleOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAclRule](o, func(v GetNetworkInsightsAnalysisExplanationAclRule) string { return v.Cidr })
}

func (o GetNetworkInsightsAnalysisExplanationAclRuleOutput) Egress() pulumix.Output[bool] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAclRule](o, func(v GetNetworkInsightsAnalysisExplanationAclRule) bool { return v.Egress })
}

func (o GetNetworkInsightsAnalysisExplanationAclRuleOutput) PortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationAclRulePortRange, GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanationAclRule](o, func(v GetNetworkInsightsAnalysisExplanationAclRule) []GetNetworkInsightsAnalysisExplanationAclRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationAclRulePortRange, GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationAclRuleOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAclRule](o, func(v GetNetworkInsightsAnalysisExplanationAclRule) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisExplanationAclRuleOutput) RuleAction() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAclRule](o, func(v GetNetworkInsightsAnalysisExplanationAclRule) string { return v.RuleAction })
}

func (o GetNetworkInsightsAnalysisExplanationAclRuleOutput) RuleNumber() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAclRule](o, func(v GetNetworkInsightsAnalysisExplanationAclRule) int { return v.RuleNumber })
}

type GetNetworkInsightsAnalysisExplanationAclRulePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisExplanationAclRulePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisExplanationAclRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationAclRulePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationAclRulePortRangeArgs) ToGetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput() GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationAclRulePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationAclRulePortRangeArgs) ToGetNetworkInsightsAnalysisExplanationAclRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationAclRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationAclRulePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationAclRulePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput) ToGetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput() GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput) ToGetNetworkInsightsAnalysisExplanationAclRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationAclRulePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationAclRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAclRulePortRange](o, func(v GetNetworkInsightsAnalysisExplanationAclRulePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAclRulePortRange](o, func(v GetNetworkInsightsAnalysisExplanationAclRulePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisExplanationAttachedTo struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationAttachedToArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationAttachedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationAttachedTo)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationAttachedToArgs) ToGetNetworkInsightsAnalysisExplanationAttachedToOutput() GetNetworkInsightsAnalysisExplanationAttachedToOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationAttachedToOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationAttachedToArgs) ToGetNetworkInsightsAnalysisExplanationAttachedToOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationAttachedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationAttachedToOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationAttachedToArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationAttachedToArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationAttachedToOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationAttachedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationAttachedTo)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationAttachedToOutput) ToGetNetworkInsightsAnalysisExplanationAttachedToOutput() GetNetworkInsightsAnalysisExplanationAttachedToOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationAttachedToOutput) ToGetNetworkInsightsAnalysisExplanationAttachedToOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationAttachedToOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationAttachedToOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationAttachedTo] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationAttachedTo]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationAttachedToOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAttachedTo](o, func(v GetNetworkInsightsAnalysisExplanationAttachedTo) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationAttachedToOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAttachedTo](o, func(v GetNetworkInsightsAnalysisExplanationAttachedTo) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationAttachedToOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationAttachedTo](o, func(v GetNetworkInsightsAnalysisExplanationAttachedTo) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener struct {
	InstancePort     int `pulumi:"instancePort"`
	LoadBalancerPort int `pulumi:"loadBalancerPort"`
}

type GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs struct {
	InstancePort     pulumix.Input[int] `pulumi:"instancePort"`
	LoadBalancerPort pulumix.Input[int] `pulumi:"loadBalancerPort"`
}

func (GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs) ToGetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput() GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs) ToGetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) ToGetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput() GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) ToGetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) InstancePort() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener](o, func(v GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener) int { return v.InstancePort })
}

func (o GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput) LoadBalancerPort() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener](o, func(v GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListener) int {
		return v.LoadBalancerPort
	})
}

type GetNetworkInsightsAnalysisExplanationComponent struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationComponentArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationComponent)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationComponentArgs) ToGetNetworkInsightsAnalysisExplanationComponentOutput() GetNetworkInsightsAnalysisExplanationComponentOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationComponentOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationComponentArgs) ToGetNetworkInsightsAnalysisExplanationComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationComponentOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationComponentArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationComponentOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationComponent)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationComponentOutput) ToGetNetworkInsightsAnalysisExplanationComponentOutput() GetNetworkInsightsAnalysisExplanationComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationComponentOutput) ToGetNetworkInsightsAnalysisExplanationComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationComponentOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationComponent] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationComponentOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationComponent](o, func(v GetNetworkInsightsAnalysisExplanationComponent) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationComponentOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationComponent](o, func(v GetNetworkInsightsAnalysisExplanationComponent) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationComponentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationComponent](o, func(v GetNetworkInsightsAnalysisExplanationComponent) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationCustomerGateway struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationCustomerGatewayArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationCustomerGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationCustomerGateway)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationCustomerGatewayArgs) ToGetNetworkInsightsAnalysisExplanationCustomerGatewayOutput() GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationCustomerGatewayOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationCustomerGatewayArgs) ToGetNetworkInsightsAnalysisExplanationCustomerGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationCustomerGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationCustomerGatewayArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationCustomerGateway)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput) ToGetNetworkInsightsAnalysisExplanationCustomerGatewayOutput() GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput) ToGetNetworkInsightsAnalysisExplanationCustomerGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationCustomerGateway] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationCustomerGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationCustomerGateway](o, func(v GetNetworkInsightsAnalysisExplanationCustomerGateway) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationCustomerGateway](o, func(v GetNetworkInsightsAnalysisExplanationCustomerGateway) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationCustomerGateway](o, func(v GetNetworkInsightsAnalysisExplanationCustomerGateway) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationDestination struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationDestinationArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationDestination)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationDestinationArgs) ToGetNetworkInsightsAnalysisExplanationDestinationOutput() GetNetworkInsightsAnalysisExplanationDestinationOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationDestinationOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationDestinationArgs) ToGetNetworkInsightsAnalysisExplanationDestinationOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationDestinationOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationDestinationArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationDestinationOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationDestination)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationDestinationOutput) ToGetNetworkInsightsAnalysisExplanationDestinationOutput() GetNetworkInsightsAnalysisExplanationDestinationOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationDestinationOutput) ToGetNetworkInsightsAnalysisExplanationDestinationOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationDestinationOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationDestination] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationDestination]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationDestinationOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationDestination](o, func(v GetNetworkInsightsAnalysisExplanationDestination) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationDestinationOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationDestination](o, func(v GetNetworkInsightsAnalysisExplanationDestination) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationDestinationOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationDestination](o, func(v GetNetworkInsightsAnalysisExplanationDestination) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationDestinationVpc struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationDestinationVpcArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationDestinationVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationDestinationVpc)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationDestinationVpcArgs) ToGetNetworkInsightsAnalysisExplanationDestinationVpcOutput() GetNetworkInsightsAnalysisExplanationDestinationVpcOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationDestinationVpcOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationDestinationVpcArgs) ToGetNetworkInsightsAnalysisExplanationDestinationVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationDestinationVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationDestinationVpcOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationDestinationVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationDestinationVpcArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationDestinationVpcOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationDestinationVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationDestinationVpc)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationDestinationVpcOutput) ToGetNetworkInsightsAnalysisExplanationDestinationVpcOutput() GetNetworkInsightsAnalysisExplanationDestinationVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationDestinationVpcOutput) ToGetNetworkInsightsAnalysisExplanationDestinationVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationDestinationVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationDestinationVpcOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationDestinationVpc] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationDestinationVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationDestinationVpcOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationDestinationVpc](o, func(v GetNetworkInsightsAnalysisExplanationDestinationVpc) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationDestinationVpcOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationDestinationVpc](o, func(v GetNetworkInsightsAnalysisExplanationDestinationVpc) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationDestinationVpcOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationDestinationVpc](o, func(v GetNetworkInsightsAnalysisExplanationDestinationVpc) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs) ToGetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput() GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs) ToGetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) ToGetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput() GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) ToGetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener](o, func(v GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener](o, func(v GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener](o, func(v GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListener) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationIngressRouteTable struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationIngressRouteTableArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationIngressRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationIngressRouteTable)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationIngressRouteTableArgs) ToGetNetworkInsightsAnalysisExplanationIngressRouteTableOutput() GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationIngressRouteTableOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationIngressRouteTableArgs) ToGetNetworkInsightsAnalysisExplanationIngressRouteTableOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationIngressRouteTableArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationIngressRouteTableArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationIngressRouteTable)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput) ToGetNetworkInsightsAnalysisExplanationIngressRouteTableOutput() GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput) ToGetNetworkInsightsAnalysisExplanationIngressRouteTableOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationIngressRouteTable] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationIngressRouteTable]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationIngressRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationIngressRouteTable) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationIngressRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationIngressRouteTable) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationIngressRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationIngressRouteTable) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationInternetGateway struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationInternetGatewayArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationInternetGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationInternetGateway)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationInternetGatewayArgs) ToGetNetworkInsightsAnalysisExplanationInternetGatewayOutput() GetNetworkInsightsAnalysisExplanationInternetGatewayOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationInternetGatewayOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationInternetGatewayArgs) ToGetNetworkInsightsAnalysisExplanationInternetGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationInternetGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationInternetGatewayOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationInternetGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationInternetGatewayArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationInternetGatewayOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationInternetGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationInternetGateway)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationInternetGatewayOutput) ToGetNetworkInsightsAnalysisExplanationInternetGatewayOutput() GetNetworkInsightsAnalysisExplanationInternetGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationInternetGatewayOutput) ToGetNetworkInsightsAnalysisExplanationInternetGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationInternetGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationInternetGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationInternetGateway] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationInternetGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationInternetGatewayOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationInternetGateway](o, func(v GetNetworkInsightsAnalysisExplanationInternetGateway) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationInternetGatewayOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationInternetGateway](o, func(v GetNetworkInsightsAnalysisExplanationInternetGateway) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationInternetGatewayOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationInternetGateway](o, func(v GetNetworkInsightsAnalysisExplanationInternetGateway) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs) ToGetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput() GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs) ToGetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) ToGetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput() GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) ToGetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup](o, func(v GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup](o, func(v GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup](o, func(v GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroup) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationNatGateway struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationNatGatewayArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationNatGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationNatGateway)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationNatGatewayArgs) ToGetNetworkInsightsAnalysisExplanationNatGatewayOutput() GetNetworkInsightsAnalysisExplanationNatGatewayOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationNatGatewayOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationNatGatewayArgs) ToGetNetworkInsightsAnalysisExplanationNatGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationNatGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationNatGatewayOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationNatGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationNatGatewayArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationNatGatewayOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationNatGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationNatGateway)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationNatGatewayOutput) ToGetNetworkInsightsAnalysisExplanationNatGatewayOutput() GetNetworkInsightsAnalysisExplanationNatGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationNatGatewayOutput) ToGetNetworkInsightsAnalysisExplanationNatGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationNatGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationNatGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationNatGateway] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationNatGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationNatGatewayOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationNatGateway](o, func(v GetNetworkInsightsAnalysisExplanationNatGateway) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationNatGatewayOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationNatGateway](o, func(v GetNetworkInsightsAnalysisExplanationNatGateway) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationNatGatewayOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationNatGateway](o, func(v GetNetworkInsightsAnalysisExplanationNatGateway) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationNetworkInterface struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationNetworkInterfaceArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationNetworkInterface)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationNetworkInterfaceArgs) ToGetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput() GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationNetworkInterfaceArgs) ToGetNetworkInsightsAnalysisExplanationNetworkInterfaceOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationNetworkInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationNetworkInterfaceArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationNetworkInterface)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput) ToGetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput() GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput) ToGetNetworkInsightsAnalysisExplanationNetworkInterfaceOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationNetworkInterface] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationNetworkInterface]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationNetworkInterface](o, func(v GetNetworkInsightsAnalysisExplanationNetworkInterface) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationNetworkInterface](o, func(v GetNetworkInsightsAnalysisExplanationNetworkInterface) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationNetworkInterface](o, func(v GetNetworkInsightsAnalysisExplanationNetworkInterface) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationPortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisExplanationPortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisExplanationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationPortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationPortRangeArgs) ToGetNetworkInsightsAnalysisExplanationPortRangeOutput() GetNetworkInsightsAnalysisExplanationPortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationPortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationPortRangeArgs) ToGetNetworkInsightsAnalysisExplanationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationPortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationPortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationPortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationPortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationPortRangeOutput) ToGetNetworkInsightsAnalysisExplanationPortRangeOutput() GetNetworkInsightsAnalysisExplanationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationPortRangeOutput) ToGetNetworkInsightsAnalysisExplanationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationPortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisExplanationPortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationPortRange](o, func(v GetNetworkInsightsAnalysisExplanationPortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisExplanationPortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationPortRange](o, func(v GetNetworkInsightsAnalysisExplanationPortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisExplanationPrefixList struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationPrefixListArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationPrefixList)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationPrefixListArgs) ToGetNetworkInsightsAnalysisExplanationPrefixListOutput() GetNetworkInsightsAnalysisExplanationPrefixListOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationPrefixListOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationPrefixListArgs) ToGetNetworkInsightsAnalysisExplanationPrefixListOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationPrefixListOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationPrefixListArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationPrefixListArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationPrefixListOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationPrefixList)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationPrefixListOutput) ToGetNetworkInsightsAnalysisExplanationPrefixListOutput() GetNetworkInsightsAnalysisExplanationPrefixListOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationPrefixListOutput) ToGetNetworkInsightsAnalysisExplanationPrefixListOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationPrefixListOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationPrefixListOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationPrefixList] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationPrefixList]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationPrefixListOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationPrefixList](o, func(v GetNetworkInsightsAnalysisExplanationPrefixList) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationPrefixListOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationPrefixList](o, func(v GetNetworkInsightsAnalysisExplanationPrefixList) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationPrefixListOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationPrefixList](o, func(v GetNetworkInsightsAnalysisExplanationPrefixList) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationRouteTable struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationRouteTableArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationRouteTable)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationRouteTableArgs) ToGetNetworkInsightsAnalysisExplanationRouteTableOutput() GetNetworkInsightsAnalysisExplanationRouteTableOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationRouteTableOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationRouteTableArgs) ToGetNetworkInsightsAnalysisExplanationRouteTableOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationRouteTableOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationRouteTableArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationRouteTableArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationRouteTableOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationRouteTable)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableOutput) ToGetNetworkInsightsAnalysisExplanationRouteTableOutput() GetNetworkInsightsAnalysisExplanationRouteTableOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableOutput) ToGetNetworkInsightsAnalysisExplanationRouteTableOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationRouteTableOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationRouteTable] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationRouteTable]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationRouteTableOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationRouteTable) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationRouteTable) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationRouteTableOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationRouteTable) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationRouteTableRoute struct {
	DestinationCidr             string `pulumi:"destinationCidr"`
	DestinationPrefixListId     string `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId string `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   string `pulumi:"gatewayId"`
	InstanceId                  string `pulumi:"instanceId"`
	NatGatewayId                string `pulumi:"natGatewayId"`
	NetworkInterfaceId          string `pulumi:"networkInterfaceId"`
	Origin                      string `pulumi:"origin"`
	TransitGatewayId            string `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      string `pulumi:"vpcPeeringConnectionId"`
}

type GetNetworkInsightsAnalysisExplanationRouteTableRouteArgs struct {
	DestinationCidr             pulumix.Input[string] `pulumi:"destinationCidr"`
	DestinationPrefixListId     pulumix.Input[string] `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId pulumix.Input[string] `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   pulumix.Input[string] `pulumi:"gatewayId"`
	InstanceId                  pulumix.Input[string] `pulumi:"instanceId"`
	NatGatewayId                pulumix.Input[string] `pulumi:"natGatewayId"`
	NetworkInterfaceId          pulumix.Input[string] `pulumi:"networkInterfaceId"`
	Origin                      pulumix.Input[string] `pulumi:"origin"`
	TransitGatewayId            pulumix.Input[string] `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      pulumix.Input[string] `pulumi:"vpcPeeringConnectionId"`
}

func (GetNetworkInsightsAnalysisExplanationRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationRouteTableRoute)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationRouteTableRouteArgs) ToGetNetworkInsightsAnalysisExplanationRouteTableRouteOutput() GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationRouteTableRouteOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationRouteTableRouteArgs) ToGetNetworkInsightsAnalysisExplanationRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationRouteTableRoute)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) ToGetNetworkInsightsAnalysisExplanationRouteTableRouteOutput() GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) ToGetNetworkInsightsAnalysisExplanationRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationRouteTableRoute] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) DestinationCidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string { return v.DestinationCidr })
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) DestinationPrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string { return v.DestinationPrefixListId })
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) EgressOnlyInternetGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string {
		return v.EgressOnlyInternetGatewayId
	})
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) GatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string { return v.GatewayId })
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) InstanceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string { return v.InstanceId })
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) NatGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string { return v.NatGatewayId })
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) NetworkInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string { return v.NetworkInterfaceId })
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) Origin() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string { return v.Origin })
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) TransitGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string { return v.TransitGatewayId })
}

func (o GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput) VpcPeeringConnectionId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationRouteTableRoute) string { return v.VpcPeeringConnectionId })
}

type GetNetworkInsightsAnalysisExplanationSecurityGroup struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationSecurityGroupArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSecurityGroup)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationSecurityGroupArgs) ToGetNetworkInsightsAnalysisExplanationSecurityGroupOutput() GetNetworkInsightsAnalysisExplanationSecurityGroupOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationSecurityGroupOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationSecurityGroupArgs) ToGetNetworkInsightsAnalysisExplanationSecurityGroupOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationSecurityGroupOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationSecurityGroupArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationSecurityGroupArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSecurityGroup)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupOutput) ToGetNetworkInsightsAnalysisExplanationSecurityGroupOutput() GetNetworkInsightsAnalysisExplanationSecurityGroupOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupOutput) ToGetNetworkInsightsAnalysisExplanationSecurityGroupOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSecurityGroupOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationSecurityGroup] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationSecurityGroup]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationSecurityGroupOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroup](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroup) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroup](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroup) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationSecurityGroupOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroup](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroup) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationSecurityGroupRule struct {
	Cidr            string                                                            `pulumi:"cidr"`
	Direction       string                                                            `pulumi:"direction"`
	PortRanges      []GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange `pulumi:"portRanges"`
	PrefixListId    string                                                            `pulumi:"prefixListId"`
	Protocol        string                                                            `pulumi:"protocol"`
	SecurityGroupId string                                                            `pulumi:"securityGroupId"`
}

type GetNetworkInsightsAnalysisExplanationSecurityGroupRuleArgs struct {
	Cidr            pulumix.Input[string]                                                                 `pulumi:"cidr"`
	Direction       pulumix.Input[string]                                                                 `pulumi:"direction"`
	PortRanges      pulumix.Input[[]*GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs] `pulumi:"portRanges"`
	PrefixListId    pulumix.Input[string]                                                                 `pulumi:"prefixListId"`
	Protocol        pulumix.Input[string]                                                                 `pulumi:"protocol"`
	SecurityGroupId pulumix.Input[string]                                                                 `pulumi:"securityGroupId"`
}

func (GetNetworkInsightsAnalysisExplanationSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSecurityGroupRule)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationSecurityGroupRuleArgs) ToGetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput() GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationSecurityGroupRuleArgs) ToGetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationSecurityGroupRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationSecurityGroupRuleArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSecurityGroupRule)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) ToGetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput() GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) ToGetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationSecurityGroupRule] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationSecurityGroupRule]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroupRule) string { return v.Cidr })
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) Direction() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroupRule) string { return v.Direction })
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) PortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange, GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroupRule) []GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange, GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) PrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroupRule) string { return v.PrefixListId })
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroupRule) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput) SecurityGroupId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroupRule) string { return v.SecurityGroupId })
}

type GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs) ToGetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput() GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs) ToGetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) ToGetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput() GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) ToGetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange](o, func(v GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisExplanationSourceVpc struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationSourceVpcArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationSourceVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSourceVpc)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationSourceVpcArgs) ToGetNetworkInsightsAnalysisExplanationSourceVpcOutput() GetNetworkInsightsAnalysisExplanationSourceVpcOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationSourceVpcOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationSourceVpcArgs) ToGetNetworkInsightsAnalysisExplanationSourceVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSourceVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationSourceVpcOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationSourceVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationSourceVpcArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationSourceVpcOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationSourceVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSourceVpc)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationSourceVpcOutput) ToGetNetworkInsightsAnalysisExplanationSourceVpcOutput() GetNetworkInsightsAnalysisExplanationSourceVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSourceVpcOutput) ToGetNetworkInsightsAnalysisExplanationSourceVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSourceVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSourceVpcOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationSourceVpc] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationSourceVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationSourceVpcOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSourceVpc](o, func(v GetNetworkInsightsAnalysisExplanationSourceVpc) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationSourceVpcOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSourceVpc](o, func(v GetNetworkInsightsAnalysisExplanationSourceVpc) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationSourceVpcOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSourceVpc](o, func(v GetNetworkInsightsAnalysisExplanationSourceVpc) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationSubnet struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationSubnetArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSubnet)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationSubnetArgs) ToGetNetworkInsightsAnalysisExplanationSubnetOutput() GetNetworkInsightsAnalysisExplanationSubnetOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationSubnetOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationSubnetArgs) ToGetNetworkInsightsAnalysisExplanationSubnetOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationSubnetOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationSubnetArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationSubnetArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationSubnetOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSubnet)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationSubnetOutput) ToGetNetworkInsightsAnalysisExplanationSubnetOutput() GetNetworkInsightsAnalysisExplanationSubnetOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSubnetOutput) ToGetNetworkInsightsAnalysisExplanationSubnetOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSubnetOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSubnetOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationSubnet] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationSubnet]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationSubnetOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSubnet](o, func(v GetNetworkInsightsAnalysisExplanationSubnet) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationSubnetOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSubnet](o, func(v GetNetworkInsightsAnalysisExplanationSubnet) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationSubnetOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSubnet](o, func(v GetNetworkInsightsAnalysisExplanationSubnet) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationSubnetRouteTable struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationSubnetRouteTableArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationSubnetRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSubnetRouteTable)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationSubnetRouteTableArgs) ToGetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput() GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationSubnetRouteTableOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationSubnetRouteTableArgs) ToGetNetworkInsightsAnalysisExplanationSubnetRouteTableOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationSubnetRouteTableArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationSubnetRouteTableArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationSubnetRouteTable)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput) ToGetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput() GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput) ToGetNetworkInsightsAnalysisExplanationSubnetRouteTableOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationSubnetRouteTable] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationSubnetRouteTable]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSubnetRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationSubnetRouteTable) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSubnetRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationSubnetRouteTable) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationSubnetRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationSubnetRouteTable) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationTransitGateway struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationTransitGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationTransitGateway)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationTransitGatewayArgs) ToGetNetworkInsightsAnalysisExplanationTransitGatewayOutput() GetNetworkInsightsAnalysisExplanationTransitGatewayOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationTransitGatewayOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationTransitGatewayArgs) ToGetNetworkInsightsAnalysisExplanationTransitGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationTransitGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationTransitGatewayOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationTransitGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationTransitGatewayArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationTransitGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationTransitGateway)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayOutput) ToGetNetworkInsightsAnalysisExplanationTransitGatewayOutput() GetNetworkInsightsAnalysisExplanationTransitGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayOutput) ToGetNetworkInsightsAnalysisExplanationTransitGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationTransitGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationTransitGateway] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationTransitGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationTransitGatewayOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGateway](o, func(v GetNetworkInsightsAnalysisExplanationTransitGateway) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGateway](o, func(v GetNetworkInsightsAnalysisExplanationTransitGateway) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationTransitGatewayOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGateway](o, func(v GetNetworkInsightsAnalysisExplanationTransitGateway) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs) ToGetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput() GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs) ToGetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) ToGetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput() GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) ToGetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayAttachment) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs) ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput() GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs) ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput() GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTable) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute struct {
	AttachmentId    string `pulumi:"attachmentId"`
	DestinationCidr string `pulumi:"destinationCidr"`
	PrefixListId    string `pulumi:"prefixListId"`
	ResourceId      string `pulumi:"resourceId"`
	ResourceType    string `pulumi:"resourceType"`
	RouteOrigin     string `pulumi:"routeOrigin"`
	State           string `pulumi:"state"`
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs struct {
	AttachmentId    pulumix.Input[string] `pulumi:"attachmentId"`
	DestinationCidr pulumix.Input[string] `pulumi:"destinationCidr"`
	PrefixListId    pulumix.Input[string] `pulumi:"prefixListId"`
	ResourceId      pulumix.Input[string] `pulumi:"resourceId"`
	ResourceType    pulumix.Input[string] `pulumi:"resourceType"`
	RouteOrigin     pulumix.Input[string] `pulumi:"routeOrigin"`
	State           pulumix.Input[string] `pulumi:"state"`
}

func (GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs) ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput() GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs) ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput() GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ToGetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) AttachmentId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) string {
		return v.AttachmentId
	})
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) DestinationCidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) string {
		return v.DestinationCidr
	})
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) PrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) string {
		return v.PrefixListId
	})
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ResourceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) string { return v.ResourceId })
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) ResourceType() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) string {
		return v.ResourceType
	})
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) RouteOrigin() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) string {
		return v.RouteOrigin
	})
}

func (o GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRoute) string { return v.State })
}

type GetNetworkInsightsAnalysisExplanationVpc struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationVpcArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpc)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationVpcArgs) ToGetNetworkInsightsAnalysisExplanationVpcOutput() GetNetworkInsightsAnalysisExplanationVpcOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationVpcOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationVpcArgs) ToGetNetworkInsightsAnalysisExplanationVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationVpcOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationVpcArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationVpcOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpc)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationVpcOutput) ToGetNetworkInsightsAnalysisExplanationVpcOutput() GetNetworkInsightsAnalysisExplanationVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpcOutput) ToGetNetworkInsightsAnalysisExplanationVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpcOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationVpc] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationVpcOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpc](o, func(v GetNetworkInsightsAnalysisExplanationVpc) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationVpcOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpc](o, func(v GetNetworkInsightsAnalysisExplanationVpc) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationVpcOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpc](o, func(v GetNetworkInsightsAnalysisExplanationVpc) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationVpcEndpoint struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationVpcEndpointArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationVpcEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpcEndpoint)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationVpcEndpointArgs) ToGetNetworkInsightsAnalysisExplanationVpcEndpointOutput() GetNetworkInsightsAnalysisExplanationVpcEndpointOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationVpcEndpointOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationVpcEndpointArgs) ToGetNetworkInsightsAnalysisExplanationVpcEndpointOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpcEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationVpcEndpointOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationVpcEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationVpcEndpointArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationVpcEndpointOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationVpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpcEndpoint)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationVpcEndpointOutput) ToGetNetworkInsightsAnalysisExplanationVpcEndpointOutput() GetNetworkInsightsAnalysisExplanationVpcEndpointOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpcEndpointOutput) ToGetNetworkInsightsAnalysisExplanationVpcEndpointOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpcEndpointOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpcEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationVpcEndpoint] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationVpcEndpoint]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationVpcEndpointOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpcEndpoint](o, func(v GetNetworkInsightsAnalysisExplanationVpcEndpoint) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationVpcEndpointOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpcEndpoint](o, func(v GetNetworkInsightsAnalysisExplanationVpcEndpoint) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationVpcEndpointOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpcEndpoint](o, func(v GetNetworkInsightsAnalysisExplanationVpcEndpoint) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationVpcPeeringConnection struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpcPeeringConnection)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs) ToGetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput() GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs) ToGetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpcPeeringConnection)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) ToGetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput() GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) ToGetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationVpcPeeringConnection] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationVpcPeeringConnection]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpcPeeringConnection](o, func(v GetNetworkInsightsAnalysisExplanationVpcPeeringConnection) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpcPeeringConnection](o, func(v GetNetworkInsightsAnalysisExplanationVpcPeeringConnection) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpcPeeringConnection](o, func(v GetNetworkInsightsAnalysisExplanationVpcPeeringConnection) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationVpnConnection struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationVpnConnectionArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationVpnConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpnConnection)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationVpnConnectionArgs) ToGetNetworkInsightsAnalysisExplanationVpnConnectionOutput() GetNetworkInsightsAnalysisExplanationVpnConnectionOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationVpnConnectionOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationVpnConnectionArgs) ToGetNetworkInsightsAnalysisExplanationVpnConnectionOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpnConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationVpnConnectionOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationVpnConnectionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationVpnConnectionArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationVpnConnectionOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationVpnConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpnConnection)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationVpnConnectionOutput) ToGetNetworkInsightsAnalysisExplanationVpnConnectionOutput() GetNetworkInsightsAnalysisExplanationVpnConnectionOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpnConnectionOutput) ToGetNetworkInsightsAnalysisExplanationVpnConnectionOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpnConnectionOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpnConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationVpnConnection] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationVpnConnection]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationVpnConnectionOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpnConnection](o, func(v GetNetworkInsightsAnalysisExplanationVpnConnection) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationVpnConnectionOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpnConnection](o, func(v GetNetworkInsightsAnalysisExplanationVpnConnection) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationVpnConnectionOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpnConnection](o, func(v GetNetworkInsightsAnalysisExplanationVpnConnection) string { return v.Name })
}

type GetNetworkInsightsAnalysisExplanationVpnGateway struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisExplanationVpnGatewayArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisExplanationVpnGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpnGateway)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisExplanationVpnGatewayArgs) ToGetNetworkInsightsAnalysisExplanationVpnGatewayOutput() GetNetworkInsightsAnalysisExplanationVpnGatewayOutput {
	return i.ToGetNetworkInsightsAnalysisExplanationVpnGatewayOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisExplanationVpnGatewayArgs) ToGetNetworkInsightsAnalysisExplanationVpnGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpnGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisExplanationVpnGatewayOutput)
}

func (i *GetNetworkInsightsAnalysisExplanationVpnGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisExplanationVpnGatewayArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisExplanationVpnGatewayOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisExplanationVpnGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisExplanationVpnGateway)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisExplanationVpnGatewayOutput) ToGetNetworkInsightsAnalysisExplanationVpnGatewayOutput() GetNetworkInsightsAnalysisExplanationVpnGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpnGatewayOutput) ToGetNetworkInsightsAnalysisExplanationVpnGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisExplanationVpnGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisExplanationVpnGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisExplanationVpnGateway] {
	return pulumix.Output[GetNetworkInsightsAnalysisExplanationVpnGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisExplanationVpnGatewayOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpnGateway](o, func(v GetNetworkInsightsAnalysisExplanationVpnGateway) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisExplanationVpnGatewayOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpnGateway](o, func(v GetNetworkInsightsAnalysisExplanationVpnGateway) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisExplanationVpnGatewayOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisExplanationVpnGateway](o, func(v GetNetworkInsightsAnalysisExplanationVpnGateway) string { return v.Name })
}

type GetNetworkInsightsAnalysisFilter struct {
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetNetworkInsightsAnalysisFilterArgs struct {
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetNetworkInsightsAnalysisFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisFilter)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisFilterArgs) ToGetNetworkInsightsAnalysisFilterOutput() GetNetworkInsightsAnalysisFilterOutput {
	return i.ToGetNetworkInsightsAnalysisFilterOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisFilterArgs) ToGetNetworkInsightsAnalysisFilterOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisFilterOutput)
}

func (i *GetNetworkInsightsAnalysisFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisFilterArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisFilter)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisFilterOutput) ToGetNetworkInsightsAnalysisFilterOutput() GetNetworkInsightsAnalysisFilterOutput {
	return o
}

func (o GetNetworkInsightsAnalysisFilterOutput) ToGetNetworkInsightsAnalysisFilterOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisFilterOutput {
	return o
}

func (o GetNetworkInsightsAnalysisFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisFilter] {
	return pulumix.Output[GetNetworkInsightsAnalysisFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisFilter](o, func(v GetNetworkInsightsAnalysisFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetNetworkInsightsAnalysisFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisFilter](o, func(v GetNetworkInsightsAnalysisFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisForwardPathComponent struct {
	AclRules                       []GetNetworkInsightsAnalysisForwardPathComponentAclRule                       `pulumi:"aclRules"`
	AdditionalDetails              []GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail              `pulumi:"additionalDetails"`
	AttachedTos                    []GetNetworkInsightsAnalysisForwardPathComponentAttachedTo                    `pulumi:"attachedTos"`
	Components                     []GetNetworkInsightsAnalysisForwardPathComponentComponent                     `pulumi:"components"`
	DestinationVpcs                []GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc                `pulumi:"destinationVpcs"`
	InboundHeaders                 []GetNetworkInsightsAnalysisForwardPathComponentInboundHeader                 `pulumi:"inboundHeaders"`
	OutboundHeaders                []GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader                `pulumi:"outboundHeaders"`
	RouteTableRoutes               []GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute               `pulumi:"routeTableRoutes"`
	SecurityGroupRules             []GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule             `pulumi:"securityGroupRules"`
	SequenceNumber                 int                                                                           `pulumi:"sequenceNumber"`
	SourceVpcs                     []GetNetworkInsightsAnalysisForwardPathComponentSourceVpc                     `pulumi:"sourceVpcs"`
	Subnets                        []GetNetworkInsightsAnalysisForwardPathComponentSubnet                        `pulumi:"subnets"`
	TransitGatewayRouteTableRoutes []GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGateways                []GetNetworkInsightsAnalysisForwardPathComponentTransitGateway                `pulumi:"transitGateways"`
	Vpcs                           []GetNetworkInsightsAnalysisForwardPathComponentVpc                           `pulumi:"vpcs"`
}

type GetNetworkInsightsAnalysisForwardPathComponentArgs struct {
	AclRules                       pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentAclRuleArgs]                       `pulumi:"aclRules"`
	AdditionalDetails              pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs]              `pulumi:"additionalDetails"`
	AttachedTos                    pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentAttachedToArgs]                    `pulumi:"attachedTos"`
	Components                     pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentComponentArgs]                     `pulumi:"components"`
	DestinationVpcs                pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs]                `pulumi:"destinationVpcs"`
	InboundHeaders                 pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs]                 `pulumi:"inboundHeaders"`
	OutboundHeaders                pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs]                `pulumi:"outboundHeaders"`
	RouteTableRoutes               pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs]               `pulumi:"routeTableRoutes"`
	SecurityGroupRules             pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs]             `pulumi:"securityGroupRules"`
	SequenceNumber                 pulumix.Input[int]                                                                                `pulumi:"sequenceNumber"`
	SourceVpcs                     pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentSourceVpcArgs]                     `pulumi:"sourceVpcs"`
	Subnets                        pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentSubnetArgs]                        `pulumi:"subnets"`
	TransitGatewayRouteTableRoutes pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs] `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGateways                pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs]                `pulumi:"transitGateways"`
	Vpcs                           pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentVpcArgs]                           `pulumi:"vpcs"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponent)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentArgs) ToGetNetworkInsightsAnalysisForwardPathComponentOutput() GetNetworkInsightsAnalysisForwardPathComponentOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentArgs) ToGetNetworkInsightsAnalysisForwardPathComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponent)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) ToGetNetworkInsightsAnalysisForwardPathComponentOutput() GetNetworkInsightsAnalysisForwardPathComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) ToGetNetworkInsightsAnalysisForwardPathComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponent] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponent]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) AclRules() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAclRule, GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentAclRule {
		return v.AclRules
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAclRule, GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) AdditionalDetails() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail, GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail {
		return v.AdditionalDetails
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail, GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) AttachedTos() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAttachedTo, GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentAttachedTo {
		return v.AttachedTos
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAttachedTo, GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) Components() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentComponent, GetNetworkInsightsAnalysisForwardPathComponentComponentOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentComponent, GetNetworkInsightsAnalysisForwardPathComponentComponentOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) DestinationVpcs() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc, GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc {
		return v.DestinationVpcs
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc, GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) InboundHeaders() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentInboundHeader, GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentInboundHeader {
		return v.InboundHeaders
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentInboundHeader, GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) OutboundHeaders() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader, GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader {
		return v.OutboundHeaders
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader, GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) RouteTableRoutes() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute, GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute {
		return v.RouteTableRoutes
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute, GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) SecurityGroupRules() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule, GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule {
		return v.SecurityGroupRules
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule, GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) SequenceNumber() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) int { return v.SequenceNumber })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) SourceVpcs() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentSourceVpc, GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentSourceVpc {
		return v.SourceVpcs
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentSourceVpc, GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) Subnets() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentSubnet, GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentSubnet {
		return v.Subnets
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentSubnet, GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) TransitGatewayRouteTableRoutes() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute, GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute {
		return v.TransitGatewayRouteTableRoutes
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute, GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) TransitGateways() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentTransitGateway, GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentTransitGateway {
		return v.TransitGateways
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentTransitGateway, GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutput) Vpcs() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentVpc, GetNetworkInsightsAnalysisForwardPathComponentVpcOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponent) []GetNetworkInsightsAnalysisForwardPathComponentVpc {
		return v.Vpcs
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentVpc, GetNetworkInsightsAnalysisForwardPathComponentVpcOutput]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisForwardPathComponentAclRule struct {
	Cidr       string                                                           `pulumi:"cidr"`
	Egress     bool                                                             `pulumi:"egress"`
	PortRanges []GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange `pulumi:"portRanges"`
	Protocol   string                                                           `pulumi:"protocol"`
	RuleAction string                                                           `pulumi:"ruleAction"`
	RuleNumber int                                                              `pulumi:"ruleNumber"`
}

type GetNetworkInsightsAnalysisForwardPathComponentAclRuleArgs struct {
	Cidr       pulumix.Input[string]                                                                `pulumi:"cidr"`
	Egress     pulumix.Input[bool]                                                                  `pulumi:"egress"`
	PortRanges pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs] `pulumi:"portRanges"`
	Protocol   pulumix.Input[string]                                                                `pulumi:"protocol"`
	RuleAction pulumix.Input[string]                                                                `pulumi:"ruleAction"`
	RuleNumber pulumix.Input[int]                                                                   `pulumi:"ruleNumber"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAclRule)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAclRuleArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput() GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentAclRuleOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAclRuleArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAclRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentAclRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentAclRuleArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAclRule)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput() GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAclRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAclRule] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAclRule]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAclRule) string { return v.Cidr })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) Egress() pulumix.Output[bool] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAclRule) bool { return v.Egress })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) PortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange, GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAclRule) []GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange, GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAclRule) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) RuleAction() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAclRule) string { return v.RuleAction })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput) RuleNumber() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAclRule) int { return v.RuleNumber })
}

type GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail struct {
	AdditionalDetailType string                                                                    `pulumi:"additionalDetailType"`
	Components           []GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent `pulumi:"components"`
}

type GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs struct {
	AdditionalDetailType pulumix.Input[string]                                                                         `pulumi:"additionalDetailType"`
	Components           pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs] `pulumi:"components"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput() GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput() GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) AdditionalDetailType() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail) string {
		return v.AdditionalDetailType
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput) Components() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent, GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetail) []GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent, GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput() GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput() GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponent) string { return v.Name })
}

type GetNetworkInsightsAnalysisForwardPathComponentAttachedTo struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisForwardPathComponentAttachedToArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentAttachedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAttachedTo)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAttachedToArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput() GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentAttachedToOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentAttachedToArgs) ToGetNetworkInsightsAnalysisForwardPathComponentAttachedToOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentAttachedToArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentAttachedToArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentAttachedTo)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput() GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput) ToGetNetworkInsightsAnalysisForwardPathComponentAttachedToOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAttachedTo] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentAttachedTo]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAttachedTo](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAttachedTo) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAttachedTo](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAttachedTo) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentAttachedTo](o, func(v GetNetworkInsightsAnalysisForwardPathComponentAttachedTo) string { return v.Name })
}

type GetNetworkInsightsAnalysisForwardPathComponentComponent struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisForwardPathComponentComponentArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentComponent)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentComponentArgs) ToGetNetworkInsightsAnalysisForwardPathComponentComponentOutput() GetNetworkInsightsAnalysisForwardPathComponentComponentOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentComponentOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentComponentArgs) ToGetNetworkInsightsAnalysisForwardPathComponentComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentComponentOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentComponentArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentComponentOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentComponent)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentComponentOutput) ToGetNetworkInsightsAnalysisForwardPathComponentComponentOutput() GetNetworkInsightsAnalysisForwardPathComponentComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentComponentOutput) ToGetNetworkInsightsAnalysisForwardPathComponentComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentComponentOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentComponent] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisForwardPathComponentComponentOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponentComponent) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentComponentOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponentComponent) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisForwardPathComponentComponentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentComponent](o, func(v GetNetworkInsightsAnalysisForwardPathComponentComponent) string { return v.Name })
}

type GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs) ToGetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput() GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs) ToGetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) ToGetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput() GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) ToGetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc](o, func(v GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc](o, func(v GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc](o, func(v GetNetworkInsightsAnalysisForwardPathComponentDestinationVpc) string { return v.Name })
}

type GetNetworkInsightsAnalysisForwardPathComponentInboundHeader struct {
	DestinationAddresses  []string                                                                          `pulumi:"destinationAddresses"`
	DestinationPortRanges []GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange `pulumi:"destinationPortRanges"`
	Protocol              string                                                                            `pulumi:"protocol"`
	SourceAddresses       []string                                                                          `pulumi:"sourceAddresses"`
	SourcePortRanges      []GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange      `pulumi:"sourcePortRanges"`
}

type GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs struct {
	DestinationAddresses  pulumix.Input[[]string]                                                                               `pulumi:"destinationAddresses"`
	DestinationPortRanges pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs] `pulumi:"destinationPortRanges"`
	Protocol              pulumix.Input[string]                                                                                 `pulumi:"protocol"`
	SourceAddresses       pulumix.Input[[]string]                                                                               `pulumi:"sourceAddresses"`
	SourcePortRanges      pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs]      `pulumi:"sourcePortRanges"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentInboundHeader)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput() GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentInboundHeader)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput() GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentInboundHeader] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentInboundHeader]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) DestinationAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentInboundHeader) []string {
		return v.DestinationAddresses
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) DestinationPortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange, GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentInboundHeader) []GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange {
		return v.DestinationPortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange, GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentInboundHeader) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) SourceAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentInboundHeader) []string { return v.SourceAddresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput) SourcePortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange, GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentInboundHeader) []GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange {
		return v.SourcePortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange, GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange) int {
		return v.From
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRange) int {
		return v.To
	})
}

type GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader struct {
	DestinationAddresses  []string                                                                           `pulumi:"destinationAddresses"`
	DestinationPortRanges []GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange `pulumi:"destinationPortRanges"`
	Protocol              string                                                                             `pulumi:"protocol"`
	SourceAddresses       []string                                                                           `pulumi:"sourceAddresses"`
	SourcePortRanges      []GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange      `pulumi:"sourcePortRanges"`
}

type GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs struct {
	DestinationAddresses  pulumix.Input[[]string]                                                                                `pulumi:"destinationAddresses"`
	DestinationPortRanges pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs] `pulumi:"destinationPortRanges"`
	Protocol              pulumix.Input[string]                                                                                  `pulumi:"protocol"`
	SourceAddresses       pulumix.Input[[]string]                                                                                `pulumi:"sourceAddresses"`
	SourcePortRanges      pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs]      `pulumi:"sourcePortRanges"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput() GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput() GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) DestinationAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader) []string {
		return v.DestinationAddresses
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) DestinationPortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange, GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader) []GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange {
		return v.DestinationPortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange, GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) SourceAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader) []string {
		return v.SourceAddresses
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput) SourcePortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange, GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisForwardPathComponentOutboundHeader) []GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange {
		return v.SourcePortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange, GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange) int {
		return v.From
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRange) int {
		return v.To
	})
}

type GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute struct {
	DestinationCidr             string `pulumi:"destinationCidr"`
	DestinationPrefixListId     string `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId string `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   string `pulumi:"gatewayId"`
	InstanceId                  string `pulumi:"instanceId"`
	NatGatewayId                string `pulumi:"natGatewayId"`
	NetworkInterfaceId          string `pulumi:"networkInterfaceId"`
	Origin                      string `pulumi:"origin"`
	TransitGatewayId            string `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      string `pulumi:"vpcPeeringConnectionId"`
}

type GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs struct {
	DestinationCidr             pulumix.Input[string] `pulumi:"destinationCidr"`
	DestinationPrefixListId     pulumix.Input[string] `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId pulumix.Input[string] `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   pulumix.Input[string] `pulumi:"gatewayId"`
	InstanceId                  pulumix.Input[string] `pulumi:"instanceId"`
	NatGatewayId                pulumix.Input[string] `pulumi:"natGatewayId"`
	NetworkInterfaceId          pulumix.Input[string] `pulumi:"networkInterfaceId"`
	Origin                      pulumix.Input[string] `pulumi:"origin"`
	TransitGatewayId            pulumix.Input[string] `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      pulumix.Input[string] `pulumi:"vpcPeeringConnectionId"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs) ToGetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput() GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs) ToGetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) ToGetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput() GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) ToGetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) DestinationCidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string { return v.DestinationCidr })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) DestinationPrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string {
		return v.DestinationPrefixListId
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) EgressOnlyInternetGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string {
		return v.EgressOnlyInternetGatewayId
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) GatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string { return v.GatewayId })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) InstanceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string { return v.InstanceId })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) NatGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string { return v.NatGatewayId })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) NetworkInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string {
		return v.NetworkInterfaceId
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) Origin() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string { return v.Origin })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) TransitGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string {
		return v.TransitGatewayId
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput) VpcPeeringConnectionId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentRouteTableRoute) string {
		return v.VpcPeeringConnectionId
	})
}

type GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule struct {
	Cidr            string                                                                     `pulumi:"cidr"`
	Direction       string                                                                     `pulumi:"direction"`
	PortRanges      []GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange `pulumi:"portRanges"`
	PrefixListId    string                                                                     `pulumi:"prefixListId"`
	Protocol        string                                                                     `pulumi:"protocol"`
	SecurityGroupId string                                                                     `pulumi:"securityGroupId"`
}

type GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs struct {
	Cidr            pulumix.Input[string]                                                                          `pulumi:"cidr"`
	Direction       pulumix.Input[string]                                                                          `pulumi:"direction"`
	PortRanges      pulumix.Input[[]*GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs] `pulumi:"portRanges"`
	PrefixListId    pulumix.Input[string]                                                                          `pulumi:"prefixListId"`
	Protocol        pulumix.Input[string]                                                                          `pulumi:"protocol"`
	SecurityGroupId pulumix.Input[string]                                                                          `pulumi:"securityGroupId"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs) ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput() GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs) ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput() GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) string { return v.Cidr })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) Direction() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) string { return v.Direction })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) PortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange, GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) []GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange, GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) PrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) string { return v.PrefixListId })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput) SecurityGroupId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRule) string {
		return v.SecurityGroupId
	})
}

type GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs) ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput() GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) ToGetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisForwardPathComponentSourceVpc struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisForwardPathComponentSourceVpcArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentSourceVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentSourceVpc)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentSourceVpcArgs) ToGetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput() GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentSourceVpcArgs) ToGetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentSourceVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentSourceVpcArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentSourceVpc)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) ToGetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput() GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) ToGetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentSourceVpc] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentSourceVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSourceVpc](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSourceVpc) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSourceVpc](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSourceVpc) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSourceVpc](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSourceVpc) string { return v.Name })
}

type GetNetworkInsightsAnalysisForwardPathComponentSubnet struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisForwardPathComponentSubnetArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentSubnet)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentSubnetArgs) ToGetNetworkInsightsAnalysisForwardPathComponentSubnetOutput() GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentSubnetOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentSubnetArgs) ToGetNetworkInsightsAnalysisForwardPathComponentSubnetOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentSubnetArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentSubnetArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentSubnet)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput) ToGetNetworkInsightsAnalysisForwardPathComponentSubnetOutput() GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput) ToGetNetworkInsightsAnalysisForwardPathComponentSubnetOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentSubnet] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentSubnet]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSubnet](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSubnet) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSubnet](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSubnet) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentSubnet](o, func(v GetNetworkInsightsAnalysisForwardPathComponentSubnet) string { return v.Name })
}

type GetNetworkInsightsAnalysisForwardPathComponentTransitGateway struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentTransitGateway)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs) ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput() GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs) ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentTransitGateway)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput() GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentTransitGateway] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentTransitGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGateway](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGateway) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGateway](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGateway) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGateway](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGateway) string { return v.Name })
}

type GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute struct {
	AttachmentId    string `pulumi:"attachmentId"`
	DestinationCidr string `pulumi:"destinationCidr"`
	PrefixListId    string `pulumi:"prefixListId"`
	ResourceId      string `pulumi:"resourceId"`
	ResourceType    string `pulumi:"resourceType"`
	RouteOrigin     string `pulumi:"routeOrigin"`
	State           string `pulumi:"state"`
}

type GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs struct {
	AttachmentId    pulumix.Input[string] `pulumi:"attachmentId"`
	DestinationCidr pulumix.Input[string] `pulumi:"destinationCidr"`
	PrefixListId    pulumix.Input[string] `pulumi:"prefixListId"`
	ResourceId      pulumix.Input[string] `pulumi:"resourceId"`
	ResourceType    pulumix.Input[string] `pulumi:"resourceType"`
	RouteOrigin     pulumix.Input[string] `pulumi:"routeOrigin"`
	State           pulumix.Input[string] `pulumi:"state"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs) ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput() GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs) ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput() GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ToGetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) AttachmentId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) string {
		return v.AttachmentId
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) DestinationCidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) string {
		return v.DestinationCidr
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) PrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) string {
		return v.PrefixListId
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ResourceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) string {
		return v.ResourceId
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) ResourceType() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) string {
		return v.ResourceType
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) RouteOrigin() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) string {
		return v.RouteOrigin
	})
}

func (o GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute) string {
		return v.State
	})
}

type GetNetworkInsightsAnalysisForwardPathComponentVpc struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisForwardPathComponentVpcArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisForwardPathComponentVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentVpc)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisForwardPathComponentVpcArgs) ToGetNetworkInsightsAnalysisForwardPathComponentVpcOutput() GetNetworkInsightsAnalysisForwardPathComponentVpcOutput {
	return i.ToGetNetworkInsightsAnalysisForwardPathComponentVpcOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisForwardPathComponentVpcArgs) ToGetNetworkInsightsAnalysisForwardPathComponentVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisForwardPathComponentVpcOutput)
}

func (i *GetNetworkInsightsAnalysisForwardPathComponentVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisForwardPathComponentVpcArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisForwardPathComponentVpcOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisForwardPathComponentVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisForwardPathComponentVpc)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisForwardPathComponentVpcOutput) ToGetNetworkInsightsAnalysisForwardPathComponentVpcOutput() GetNetworkInsightsAnalysisForwardPathComponentVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentVpcOutput) ToGetNetworkInsightsAnalysisForwardPathComponentVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisForwardPathComponentVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisForwardPathComponentVpcOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentVpc] {
	return pulumix.Output[GetNetworkInsightsAnalysisForwardPathComponentVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisForwardPathComponentVpcOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentVpc](o, func(v GetNetworkInsightsAnalysisForwardPathComponentVpc) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisForwardPathComponentVpcOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentVpc](o, func(v GetNetworkInsightsAnalysisForwardPathComponentVpc) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisForwardPathComponentVpcOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisForwardPathComponentVpc](o, func(v GetNetworkInsightsAnalysisForwardPathComponentVpc) string { return v.Name })
}

type GetNetworkInsightsAnalysisReturnPathComponent struct {
	AclRules                       []GetNetworkInsightsAnalysisReturnPathComponentAclRule                       `pulumi:"aclRules"`
	AdditionalDetails              []GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail              `pulumi:"additionalDetails"`
	AttachedTos                    []GetNetworkInsightsAnalysisReturnPathComponentAttachedTo                    `pulumi:"attachedTos"`
	Components                     []GetNetworkInsightsAnalysisReturnPathComponentComponent                     `pulumi:"components"`
	DestinationVpcs                []GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc                `pulumi:"destinationVpcs"`
	InboundHeaders                 []GetNetworkInsightsAnalysisReturnPathComponentInboundHeader                 `pulumi:"inboundHeaders"`
	OutboundHeaders                []GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader                `pulumi:"outboundHeaders"`
	RouteTableRoutes               []GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute               `pulumi:"routeTableRoutes"`
	SecurityGroupRules             []GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule             `pulumi:"securityGroupRules"`
	SequenceNumber                 int                                                                          `pulumi:"sequenceNumber"`
	SourceVpcs                     []GetNetworkInsightsAnalysisReturnPathComponentSourceVpc                     `pulumi:"sourceVpcs"`
	Subnets                        []GetNetworkInsightsAnalysisReturnPathComponentSubnet                        `pulumi:"subnets"`
	TransitGatewayRouteTableRoutes []GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGateways                []GetNetworkInsightsAnalysisReturnPathComponentTransitGateway                `pulumi:"transitGateways"`
	Vpcs                           []GetNetworkInsightsAnalysisReturnPathComponentVpc                           `pulumi:"vpcs"`
}

type GetNetworkInsightsAnalysisReturnPathComponentArgs struct {
	AclRules                       pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentAclRuleArgs]                       `pulumi:"aclRules"`
	AdditionalDetails              pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs]              `pulumi:"additionalDetails"`
	AttachedTos                    pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentAttachedToArgs]                    `pulumi:"attachedTos"`
	Components                     pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentComponentArgs]                     `pulumi:"components"`
	DestinationVpcs                pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs]                `pulumi:"destinationVpcs"`
	InboundHeaders                 pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs]                 `pulumi:"inboundHeaders"`
	OutboundHeaders                pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs]                `pulumi:"outboundHeaders"`
	RouteTableRoutes               pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs]               `pulumi:"routeTableRoutes"`
	SecurityGroupRules             pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs]             `pulumi:"securityGroupRules"`
	SequenceNumber                 pulumix.Input[int]                                                                               `pulumi:"sequenceNumber"`
	SourceVpcs                     pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentSourceVpcArgs]                     `pulumi:"sourceVpcs"`
	Subnets                        pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentSubnetArgs]                        `pulumi:"subnets"`
	TransitGatewayRouteTableRoutes pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs] `pulumi:"transitGatewayRouteTableRoutes"`
	TransitGateways                pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs]                `pulumi:"transitGateways"`
	Vpcs                           pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentVpcArgs]                           `pulumi:"vpcs"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponent)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentArgs) ToGetNetworkInsightsAnalysisReturnPathComponentOutput() GetNetworkInsightsAnalysisReturnPathComponentOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentArgs) ToGetNetworkInsightsAnalysisReturnPathComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponent)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) ToGetNetworkInsightsAnalysisReturnPathComponentOutput() GetNetworkInsightsAnalysisReturnPathComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) ToGetNetworkInsightsAnalysisReturnPathComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponent] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponent]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) AclRules() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAclRule, GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentAclRule {
		return v.AclRules
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAclRule, GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) AdditionalDetails() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail, GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail {
		return v.AdditionalDetails
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail, GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) AttachedTos() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAttachedTo, GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentAttachedTo {
		return v.AttachedTos
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAttachedTo, GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) Components() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentComponent, GetNetworkInsightsAnalysisReturnPathComponentComponentOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentComponent, GetNetworkInsightsAnalysisReturnPathComponentComponentOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) DestinationVpcs() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc, GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc {
		return v.DestinationVpcs
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc, GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) InboundHeaders() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentInboundHeader, GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentInboundHeader {
		return v.InboundHeaders
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentInboundHeader, GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) OutboundHeaders() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader, GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader {
		return v.OutboundHeaders
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader, GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) RouteTableRoutes() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute, GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute {
		return v.RouteTableRoutes
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute, GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) SecurityGroupRules() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule, GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule {
		return v.SecurityGroupRules
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule, GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) SequenceNumber() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) int { return v.SequenceNumber })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) SourceVpcs() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentSourceVpc, GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentSourceVpc {
		return v.SourceVpcs
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentSourceVpc, GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) Subnets() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentSubnet, GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentSubnet {
		return v.Subnets
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentSubnet, GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) TransitGatewayRouteTableRoutes() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute, GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute {
		return v.TransitGatewayRouteTableRoutes
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute, GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) TransitGateways() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentTransitGateway, GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentTransitGateway {
		return v.TransitGateways
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentTransitGateway, GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutput) Vpcs() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentVpc, GetNetworkInsightsAnalysisReturnPathComponentVpcOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponent) []GetNetworkInsightsAnalysisReturnPathComponentVpc {
		return v.Vpcs
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentVpc, GetNetworkInsightsAnalysisReturnPathComponentVpcOutput]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisReturnPathComponentAclRule struct {
	Cidr       string                                                          `pulumi:"cidr"`
	Egress     bool                                                            `pulumi:"egress"`
	PortRanges []GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange `pulumi:"portRanges"`
	Protocol   string                                                          `pulumi:"protocol"`
	RuleAction string                                                          `pulumi:"ruleAction"`
	RuleNumber int                                                             `pulumi:"ruleNumber"`
}

type GetNetworkInsightsAnalysisReturnPathComponentAclRuleArgs struct {
	Cidr       pulumix.Input[string]                                                               `pulumi:"cidr"`
	Egress     pulumix.Input[bool]                                                                 `pulumi:"egress"`
	PortRanges pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs] `pulumi:"portRanges"`
	Protocol   pulumix.Input[string]                                                               `pulumi:"protocol"`
	RuleAction pulumix.Input[string]                                                               `pulumi:"ruleAction"`
	RuleNumber pulumix.Input[int]                                                                  `pulumi:"ruleNumber"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAclRule)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAclRuleArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput() GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentAclRuleOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAclRuleArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAclRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentAclRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentAclRuleArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAclRule)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput() GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAclRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAclRule] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAclRule]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAclRule) string { return v.Cidr })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) Egress() pulumix.Output[bool] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAclRule) bool { return v.Egress })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) PortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange, GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAclRule) []GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange, GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAclRule) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) RuleAction() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAclRule) string { return v.RuleAction })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput) RuleNumber() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAclRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAclRule) int { return v.RuleNumber })
}

type GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail struct {
	AdditionalDetailType string                                                                   `pulumi:"additionalDetailType"`
	Components           []GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent `pulumi:"components"`
}

type GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs struct {
	AdditionalDetailType pulumix.Input[string]                                                                        `pulumi:"additionalDetailType"`
	Components           pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs] `pulumi:"components"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput() GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput() GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) AdditionalDetailType() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail) string {
		return v.AdditionalDetailType
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput) Components() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent, GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetail) []GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent {
		return v.Components
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent, GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput() GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput() GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponent) string { return v.Name })
}

type GetNetworkInsightsAnalysisReturnPathComponentAttachedTo struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisReturnPathComponentAttachedToArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentAttachedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAttachedTo)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAttachedToArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput() GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentAttachedToOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentAttachedToArgs) ToGetNetworkInsightsAnalysisReturnPathComponentAttachedToOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentAttachedToArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentAttachedToArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentAttachedTo)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput() GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput) ToGetNetworkInsightsAnalysisReturnPathComponentAttachedToOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAttachedTo] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentAttachedTo]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAttachedTo](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAttachedTo) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAttachedTo](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAttachedTo) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentAttachedTo](o, func(v GetNetworkInsightsAnalysisReturnPathComponentAttachedTo) string { return v.Name })
}

type GetNetworkInsightsAnalysisReturnPathComponentComponent struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisReturnPathComponentComponentArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentComponent)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentComponentArgs) ToGetNetworkInsightsAnalysisReturnPathComponentComponentOutput() GetNetworkInsightsAnalysisReturnPathComponentComponentOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentComponentOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentComponentArgs) ToGetNetworkInsightsAnalysisReturnPathComponentComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentComponentOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentComponentArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentComponentArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentComponentOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentComponent)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentComponentOutput) ToGetNetworkInsightsAnalysisReturnPathComponentComponentOutput() GetNetworkInsightsAnalysisReturnPathComponentComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentComponentOutput) ToGetNetworkInsightsAnalysisReturnPathComponentComponentOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentComponentOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentComponentOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentComponent] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentComponent]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisReturnPathComponentComponentOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponentComponent) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentComponentOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponentComponent) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisReturnPathComponentComponentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentComponent](o, func(v GetNetworkInsightsAnalysisReturnPathComponentComponent) string { return v.Name })
}

type GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs) ToGetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput() GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs) ToGetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) ToGetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput() GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) ToGetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc](o, func(v GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc](o, func(v GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc](o, func(v GetNetworkInsightsAnalysisReturnPathComponentDestinationVpc) string { return v.Name })
}

type GetNetworkInsightsAnalysisReturnPathComponentInboundHeader struct {
	DestinationAddresses  []string                                                                         `pulumi:"destinationAddresses"`
	DestinationPortRanges []GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange `pulumi:"destinationPortRanges"`
	Protocol              string                                                                           `pulumi:"protocol"`
	SourceAddresses       []string                                                                         `pulumi:"sourceAddresses"`
	SourcePortRanges      []GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange      `pulumi:"sourcePortRanges"`
}

type GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs struct {
	DestinationAddresses  pulumix.Input[[]string]                                                                              `pulumi:"destinationAddresses"`
	DestinationPortRanges pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs] `pulumi:"destinationPortRanges"`
	Protocol              pulumix.Input[string]                                                                                `pulumi:"protocol"`
	SourceAddresses       pulumix.Input[[]string]                                                                              `pulumi:"sourceAddresses"`
	SourcePortRanges      pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs]      `pulumi:"sourcePortRanges"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentInboundHeader)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput() GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentInboundHeader)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput() GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentInboundHeader] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentInboundHeader]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) DestinationAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentInboundHeader) []string {
		return v.DestinationAddresses
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) DestinationPortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange, GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentInboundHeader) []GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange {
		return v.DestinationPortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange, GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentInboundHeader) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) SourceAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentInboundHeader) []string { return v.SourceAddresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput) SourcePortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange, GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentInboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentInboundHeader) []GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange {
		return v.SourcePortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange, GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange) int {
		return v.From
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRange) int {
		return v.To
	})
}

type GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader struct {
	DestinationAddresses  []string                                                                          `pulumi:"destinationAddresses"`
	DestinationPortRanges []GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange `pulumi:"destinationPortRanges"`
	Protocol              string                                                                            `pulumi:"protocol"`
	SourceAddresses       []string                                                                          `pulumi:"sourceAddresses"`
	SourcePortRanges      []GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange      `pulumi:"sourcePortRanges"`
}

type GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs struct {
	DestinationAddresses  pulumix.Input[[]string]                                                                               `pulumi:"destinationAddresses"`
	DestinationPortRanges pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs] `pulumi:"destinationPortRanges"`
	Protocol              pulumix.Input[string]                                                                                 `pulumi:"protocol"`
	SourceAddresses       pulumix.Input[[]string]                                                                               `pulumi:"sourceAddresses"`
	SourcePortRanges      pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs]      `pulumi:"sourcePortRanges"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput() GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput() GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) DestinationAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader) []string {
		return v.DestinationAddresses
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) DestinationPortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange, GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader) []GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange {
		return v.DestinationPortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange, GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) SourceAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader) []string { return v.SourceAddresses })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput) SourcePortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange, GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader](o, func(v GetNetworkInsightsAnalysisReturnPathComponentOutboundHeader) []GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange {
		return v.SourcePortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange, GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput]{OutputState: value.OutputState}
}

type GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange) int {
		return v.From
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRange) int {
		return v.To
	})
}

type GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute struct {
	DestinationCidr             string `pulumi:"destinationCidr"`
	DestinationPrefixListId     string `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId string `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   string `pulumi:"gatewayId"`
	InstanceId                  string `pulumi:"instanceId"`
	NatGatewayId                string `pulumi:"natGatewayId"`
	NetworkInterfaceId          string `pulumi:"networkInterfaceId"`
	Origin                      string `pulumi:"origin"`
	TransitGatewayId            string `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      string `pulumi:"vpcPeeringConnectionId"`
}

type GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs struct {
	DestinationCidr             pulumix.Input[string] `pulumi:"destinationCidr"`
	DestinationPrefixListId     pulumix.Input[string] `pulumi:"destinationPrefixListId"`
	EgressOnlyInternetGatewayId pulumix.Input[string] `pulumi:"egressOnlyInternetGatewayId"`
	GatewayId                   pulumix.Input[string] `pulumi:"gatewayId"`
	InstanceId                  pulumix.Input[string] `pulumi:"instanceId"`
	NatGatewayId                pulumix.Input[string] `pulumi:"natGatewayId"`
	NetworkInterfaceId          pulumix.Input[string] `pulumi:"networkInterfaceId"`
	Origin                      pulumix.Input[string] `pulumi:"origin"`
	TransitGatewayId            pulumix.Input[string] `pulumi:"transitGatewayId"`
	VpcPeeringConnectionId      pulumix.Input[string] `pulumi:"vpcPeeringConnectionId"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs) ToGetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput() GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs) ToGetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) ToGetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput() GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) ToGetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) DestinationCidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string { return v.DestinationCidr })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) DestinationPrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string {
		return v.DestinationPrefixListId
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) EgressOnlyInternetGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string {
		return v.EgressOnlyInternetGatewayId
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) GatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string { return v.GatewayId })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) InstanceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string { return v.InstanceId })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) NatGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string { return v.NatGatewayId })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) NetworkInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string {
		return v.NetworkInterfaceId
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) Origin() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string { return v.Origin })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) TransitGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string { return v.TransitGatewayId })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput) VpcPeeringConnectionId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentRouteTableRoute) string {
		return v.VpcPeeringConnectionId
	})
}

type GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule struct {
	Cidr            string                                                                    `pulumi:"cidr"`
	Direction       string                                                                    `pulumi:"direction"`
	PortRanges      []GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange `pulumi:"portRanges"`
	PrefixListId    string                                                                    `pulumi:"prefixListId"`
	Protocol        string                                                                    `pulumi:"protocol"`
	SecurityGroupId string                                                                    `pulumi:"securityGroupId"`
}

type GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs struct {
	Cidr            pulumix.Input[string]                                                                         `pulumi:"cidr"`
	Direction       pulumix.Input[string]                                                                         `pulumi:"direction"`
	PortRanges      pulumix.Input[[]*GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs] `pulumi:"portRanges"`
	PrefixListId    pulumix.Input[string]                                                                         `pulumi:"prefixListId"`
	Protocol        pulumix.Input[string]                                                                         `pulumi:"protocol"`
	SecurityGroupId pulumix.Input[string]                                                                         `pulumi:"securityGroupId"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs) ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput() GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs) ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput() GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) string { return v.Cidr })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) Direction() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) string { return v.Direction })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) PortRanges() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange, GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput] {
	value := pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) []GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange {
		return v.PortRanges
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange, GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput]{OutputState: value.OutputState}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) PrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) string { return v.PrefixListId })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) string { return v.Protocol })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput) SecurityGroupId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRule) string {
		return v.SecurityGroupId
	})
}

type GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange struct {
	From int `pulumi:"from"`
	To   int `pulumi:"to"`
}

type GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs struct {
	From pulumix.Input[int] `pulumi:"from"`
	To   pulumix.Input[int] `pulumi:"to"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs) ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput() GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) ToGetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) From() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange) int { return v.From })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput) To() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRange) int { return v.To })
}

type GetNetworkInsightsAnalysisReturnPathComponentSourceVpc struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisReturnPathComponentSourceVpcArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentSourceVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentSourceVpc)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentSourceVpcArgs) ToGetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput() GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentSourceVpcArgs) ToGetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentSourceVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentSourceVpcArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentSourceVpc)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) ToGetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput() GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) ToGetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentSourceVpc] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentSourceVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSourceVpc](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSourceVpc) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSourceVpc](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSourceVpc) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSourceVpc](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSourceVpc) string { return v.Name })
}

type GetNetworkInsightsAnalysisReturnPathComponentSubnet struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisReturnPathComponentSubnetArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentSubnet)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentSubnetArgs) ToGetNetworkInsightsAnalysisReturnPathComponentSubnetOutput() GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentSubnetOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentSubnetArgs) ToGetNetworkInsightsAnalysisReturnPathComponentSubnetOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentSubnetArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentSubnetArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentSubnet)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput) ToGetNetworkInsightsAnalysisReturnPathComponentSubnetOutput() GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput) ToGetNetworkInsightsAnalysisReturnPathComponentSubnetOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentSubnet] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentSubnet]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSubnet](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSubnet) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSubnet](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSubnet) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentSubnet](o, func(v GetNetworkInsightsAnalysisReturnPathComponentSubnet) string { return v.Name })
}

type GetNetworkInsightsAnalysisReturnPathComponentTransitGateway struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentTransitGateway)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs) ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput() GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs) ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentTransitGateway)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput() GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentTransitGateway] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentTransitGateway]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGateway](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGateway) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGateway](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGateway) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGateway](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGateway) string { return v.Name })
}

type GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute struct {
	AttachmentId    string `pulumi:"attachmentId"`
	DestinationCidr string `pulumi:"destinationCidr"`
	PrefixListId    string `pulumi:"prefixListId"`
	ResourceId      string `pulumi:"resourceId"`
	ResourceType    string `pulumi:"resourceType"`
	RouteOrigin     string `pulumi:"routeOrigin"`
	State           string `pulumi:"state"`
}

type GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs struct {
	AttachmentId    pulumix.Input[string] `pulumi:"attachmentId"`
	DestinationCidr pulumix.Input[string] `pulumi:"destinationCidr"`
	PrefixListId    pulumix.Input[string] `pulumi:"prefixListId"`
	ResourceId      pulumix.Input[string] `pulumi:"resourceId"`
	ResourceType    pulumix.Input[string] `pulumi:"resourceType"`
	RouteOrigin     pulumix.Input[string] `pulumi:"routeOrigin"`
	State           pulumix.Input[string] `pulumi:"state"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs) ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput() GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs) ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput() GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ToGetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) AttachmentId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) string {
		return v.AttachmentId
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) DestinationCidr() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) string {
		return v.DestinationCidr
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) PrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) string {
		return v.PrefixListId
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ResourceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) string {
		return v.ResourceId
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) ResourceType() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) string {
		return v.ResourceType
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) RouteOrigin() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) string {
		return v.RouteOrigin
	})
}

func (o GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute](o, func(v GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute) string {
		return v.State
	})
}

type GetNetworkInsightsAnalysisReturnPathComponentVpc struct {
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	Id  string `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name string `pulumi:"name"`
}

type GetNetworkInsightsAnalysisReturnPathComponentVpcArgs struct {
	// ARN of the selected Network Insights Analysis.
	Arn pulumix.Input[string] `pulumi:"arn"`
	Id  pulumix.Input[string] `pulumi:"id"`
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (GetNetworkInsightsAnalysisReturnPathComponentVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentVpc)(nil)).Elem()
}

func (i GetNetworkInsightsAnalysisReturnPathComponentVpcArgs) ToGetNetworkInsightsAnalysisReturnPathComponentVpcOutput() GetNetworkInsightsAnalysisReturnPathComponentVpcOutput {
	return i.ToGetNetworkInsightsAnalysisReturnPathComponentVpcOutputWithContext(context.Background())
}

func (i GetNetworkInsightsAnalysisReturnPathComponentVpcArgs) ToGetNetworkInsightsAnalysisReturnPathComponentVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsAnalysisReturnPathComponentVpcOutput)
}

func (i *GetNetworkInsightsAnalysisReturnPathComponentVpcArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsAnalysisReturnPathComponentVpcArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsAnalysisReturnPathComponentVpcOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsAnalysisReturnPathComponentVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsAnalysisReturnPathComponentVpc)(nil)).Elem()
}

func (o GetNetworkInsightsAnalysisReturnPathComponentVpcOutput) ToGetNetworkInsightsAnalysisReturnPathComponentVpcOutput() GetNetworkInsightsAnalysisReturnPathComponentVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentVpcOutput) ToGetNetworkInsightsAnalysisReturnPathComponentVpcOutputWithContext(ctx context.Context) GetNetworkInsightsAnalysisReturnPathComponentVpcOutput {
	return o
}

func (o GetNetworkInsightsAnalysisReturnPathComponentVpcOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentVpc] {
	return pulumix.Output[GetNetworkInsightsAnalysisReturnPathComponentVpc]{
		OutputState: o.OutputState,
	}
}

// ARN of the selected Network Insights Analysis.
func (o GetNetworkInsightsAnalysisReturnPathComponentVpcOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentVpc](o, func(v GetNetworkInsightsAnalysisReturnPathComponentVpc) string { return v.Arn })
}

func (o GetNetworkInsightsAnalysisReturnPathComponentVpcOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentVpc](o, func(v GetNetworkInsightsAnalysisReturnPathComponentVpc) string { return v.Id })
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.
func (o GetNetworkInsightsAnalysisReturnPathComponentVpcOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsAnalysisReturnPathComponentVpc](o, func(v GetNetworkInsightsAnalysisReturnPathComponentVpc) string { return v.Name })
}

type GetNetworkInsightsPathFilter struct {
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsPaths`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsPaths.html) API Reference.
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetNetworkInsightsPathFilterArgs struct {
	// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsPaths`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsPaths.html) API Reference.
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetNetworkInsightsPathFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsPathFilter)(nil)).Elem()
}

func (i GetNetworkInsightsPathFilterArgs) ToGetNetworkInsightsPathFilterOutput() GetNetworkInsightsPathFilterOutput {
	return i.ToGetNetworkInsightsPathFilterOutputWithContext(context.Background())
}

func (i GetNetworkInsightsPathFilterArgs) ToGetNetworkInsightsPathFilterOutputWithContext(ctx context.Context) GetNetworkInsightsPathFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInsightsPathFilterOutput)
}

func (i *GetNetworkInsightsPathFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInsightsPathFilterArgs] {
	return pulumix.Val(i)
}

type GetNetworkInsightsPathFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkInsightsPathFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInsightsPathFilter)(nil)).Elem()
}

func (o GetNetworkInsightsPathFilterOutput) ToGetNetworkInsightsPathFilterOutput() GetNetworkInsightsPathFilterOutput {
	return o
}

func (o GetNetworkInsightsPathFilterOutput) ToGetNetworkInsightsPathFilterOutputWithContext(ctx context.Context) GetNetworkInsightsPathFilterOutput {
	return o
}

func (o GetNetworkInsightsPathFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInsightsPathFilter] {
	return pulumix.Output[GetNetworkInsightsPathFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsPaths`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsPaths.html) API Reference.
func (o GetNetworkInsightsPathFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInsightsPathFilter](o, func(v GetNetworkInsightsPathFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetNetworkInsightsPathFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInsightsPathFilter](o, func(v GetNetworkInsightsPathFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetNetworkInterfaceAssociation struct {
	// Allocation ID.
	AllocationId string `pulumi:"allocationId"`
	// Association ID.
	AssociationId string `pulumi:"associationId"`
	// Carrier IP address associated with the network interface. This attribute is only set when the network interface is in a subnet which is associated with a Wavelength Zone.
	CarrierIp string `pulumi:"carrierIp"`
	// Customer-owned IP address.
	CustomerOwnedIp string `pulumi:"customerOwnedIp"`
	// ID of the Elastic IP address owner.
	IpOwnerId string `pulumi:"ipOwnerId"`
	// Public DNS name.
	PublicDnsName string `pulumi:"publicDnsName"`
	// Address of the Elastic IP address bound to the network interface.
	PublicIp string `pulumi:"publicIp"`
}

type GetNetworkInterfaceAssociationArgs struct {
	// Allocation ID.
	AllocationId pulumix.Input[string] `pulumi:"allocationId"`
	// Association ID.
	AssociationId pulumix.Input[string] `pulumi:"associationId"`
	// Carrier IP address associated with the network interface. This attribute is only set when the network interface is in a subnet which is associated with a Wavelength Zone.
	CarrierIp pulumix.Input[string] `pulumi:"carrierIp"`
	// Customer-owned IP address.
	CustomerOwnedIp pulumix.Input[string] `pulumi:"customerOwnedIp"`
	// ID of the Elastic IP address owner.
	IpOwnerId pulumix.Input[string] `pulumi:"ipOwnerId"`
	// Public DNS name.
	PublicDnsName pulumix.Input[string] `pulumi:"publicDnsName"`
	// Address of the Elastic IP address bound to the network interface.
	PublicIp pulumix.Input[string] `pulumi:"publicIp"`
}

func (GetNetworkInterfaceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (i GetNetworkInterfaceAssociationArgs) ToGetNetworkInterfaceAssociationOutput() GetNetworkInterfaceAssociationOutput {
	return i.ToGetNetworkInterfaceAssociationOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAssociationArgs) ToGetNetworkInterfaceAssociationOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAssociationOutput)
}

func (i *GetNetworkInterfaceAssociationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInterfaceAssociationArgs] {
	return pulumix.Val(i)
}

type GetNetworkInterfaceAssociationOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (o GetNetworkInterfaceAssociationOutput) ToGetNetworkInterfaceAssociationOutput() GetNetworkInterfaceAssociationOutput {
	return o
}

func (o GetNetworkInterfaceAssociationOutput) ToGetNetworkInterfaceAssociationOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationOutput {
	return o
}

func (o GetNetworkInterfaceAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInterfaceAssociation] {
	return pulumix.Output[GetNetworkInterfaceAssociation]{
		OutputState: o.OutputState,
	}
}

// Allocation ID.
func (o GetNetworkInterfaceAssociationOutput) AllocationId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAssociation](o, func(v GetNetworkInterfaceAssociation) string { return v.AllocationId })
}

// Association ID.
func (o GetNetworkInterfaceAssociationOutput) AssociationId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAssociation](o, func(v GetNetworkInterfaceAssociation) string { return v.AssociationId })
}

// Carrier IP address associated with the network interface. This attribute is only set when the network interface is in a subnet which is associated with a Wavelength Zone.
func (o GetNetworkInterfaceAssociationOutput) CarrierIp() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAssociation](o, func(v GetNetworkInterfaceAssociation) string { return v.CarrierIp })
}

// Customer-owned IP address.
func (o GetNetworkInterfaceAssociationOutput) CustomerOwnedIp() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAssociation](o, func(v GetNetworkInterfaceAssociation) string { return v.CustomerOwnedIp })
}

// ID of the Elastic IP address owner.
func (o GetNetworkInterfaceAssociationOutput) IpOwnerId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAssociation](o, func(v GetNetworkInterfaceAssociation) string { return v.IpOwnerId })
}

// Public DNS name.
func (o GetNetworkInterfaceAssociationOutput) PublicDnsName() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAssociation](o, func(v GetNetworkInterfaceAssociation) string { return v.PublicDnsName })
}

// Address of the Elastic IP address bound to the network interface.
func (o GetNetworkInterfaceAssociationOutput) PublicIp() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAssociation](o, func(v GetNetworkInterfaceAssociation) string { return v.PublicIp })
}

type GetNetworkInterfaceAttachmentType struct {
	AttachmentId    string `pulumi:"attachmentId"`
	DeviceIndex     int    `pulumi:"deviceIndex"`
	InstanceId      string `pulumi:"instanceId"`
	InstanceOwnerId string `pulumi:"instanceOwnerId"`
}

type GetNetworkInterfaceAttachmentTypeArgs struct {
	AttachmentId    pulumix.Input[string] `pulumi:"attachmentId"`
	DeviceIndex     pulumix.Input[int]    `pulumi:"deviceIndex"`
	InstanceId      pulumix.Input[string] `pulumi:"instanceId"`
	InstanceOwnerId pulumix.Input[string] `pulumi:"instanceOwnerId"`
}

func (GetNetworkInterfaceAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i GetNetworkInterfaceAttachmentTypeArgs) ToGetNetworkInterfaceAttachmentTypeOutput() GetNetworkInterfaceAttachmentTypeOutput {
	return i.ToGetNetworkInterfaceAttachmentTypeOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAttachmentTypeArgs) ToGetNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAttachmentTypeOutput)
}

func (i *GetNetworkInterfaceAttachmentTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInterfaceAttachmentTypeArgs] {
	return pulumix.Val(i)
}

type GetNetworkInterfaceAttachmentTypeOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o GetNetworkInterfaceAttachmentTypeOutput) ToGetNetworkInterfaceAttachmentTypeOutput() GetNetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeOutput) ToGetNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInterfaceAttachmentType] {
	return pulumix.Output[GetNetworkInterfaceAttachmentType]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInterfaceAttachmentTypeOutput) AttachmentId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAttachmentType](o, func(v GetNetworkInterfaceAttachmentType) string { return v.AttachmentId })
}

func (o GetNetworkInterfaceAttachmentTypeOutput) DeviceIndex() pulumix.Output[int] {
	return pulumix.Apply[GetNetworkInterfaceAttachmentType](o, func(v GetNetworkInterfaceAttachmentType) int { return v.DeviceIndex })
}

func (o GetNetworkInterfaceAttachmentTypeOutput) InstanceId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAttachmentType](o, func(v GetNetworkInterfaceAttachmentType) string { return v.InstanceId })
}

func (o GetNetworkInterfaceAttachmentTypeOutput) InstanceOwnerId() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceAttachmentType](o, func(v GetNetworkInterfaceAttachmentType) string { return v.InstanceOwnerId })
}

type GetNetworkInterfaceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetNetworkInterfaceFilterArgs struct {
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetNetworkInterfaceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceFilter)(nil)).Elem()
}

func (i GetNetworkInterfaceFilterArgs) ToGetNetworkInterfaceFilterOutput() GetNetworkInterfaceFilterOutput {
	return i.ToGetNetworkInterfaceFilterOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceFilterArgs) ToGetNetworkInterfaceFilterOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceFilterOutput)
}

func (i *GetNetworkInterfaceFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInterfaceFilterArgs] {
	return pulumix.Val(i)
}

type GetNetworkInterfaceFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceFilter)(nil)).Elem()
}

func (o GetNetworkInterfaceFilterOutput) ToGetNetworkInterfaceFilterOutput() GetNetworkInterfaceFilterOutput {
	return o
}

func (o GetNetworkInterfaceFilterOutput) ToGetNetworkInterfaceFilterOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterOutput {
	return o
}

func (o GetNetworkInterfaceFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInterfaceFilter] {
	return pulumix.Output[GetNetworkInterfaceFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkInterfaceFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfaceFilter](o, func(v GetNetworkInterfaceFilter) string { return v.Name })
}

func (o GetNetworkInterfaceFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInterfaceFilter](o, func(v GetNetworkInterfaceFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetNetworkInterfacesFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values []string `pulumi:"values"`
}

type GetNetworkInterfacesFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetNetworkInterfacesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesFilter)(nil)).Elem()
}

func (i GetNetworkInterfacesFilterArgs) ToGetNetworkInterfacesFilterOutput() GetNetworkInterfacesFilterOutput {
	return i.ToGetNetworkInterfacesFilterOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesFilterArgs) ToGetNetworkInterfacesFilterOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesFilterOutput)
}

func (i *GetNetworkInterfacesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetNetworkInterfacesFilterArgs] {
	return pulumix.Val(i)
}

type GetNetworkInterfacesFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesFilter)(nil)).Elem()
}

func (o GetNetworkInterfacesFilterOutput) ToGetNetworkInterfacesFilterOutput() GetNetworkInterfacesFilterOutput {
	return o
}

func (o GetNetworkInterfacesFilterOutput) ToGetNetworkInterfacesFilterOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterOutput {
	return o
}

func (o GetNetworkInterfacesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetNetworkInterfacesFilter] {
	return pulumix.Output[GetNetworkInterfacesFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
func (o GetNetworkInterfacesFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetNetworkInterfacesFilter](o, func(v GetNetworkInterfacesFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
func (o GetNetworkInterfacesFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetNetworkInterfacesFilter](o, func(v GetNetworkInterfacesFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetPrefixListFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribePrefixLists API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetPrefixListFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribePrefixLists API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetPrefixListFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListFilter)(nil)).Elem()
}

func (i GetPrefixListFilterArgs) ToGetPrefixListFilterOutput() GetPrefixListFilterOutput {
	return i.ToGetPrefixListFilterOutputWithContext(context.Background())
}

func (i GetPrefixListFilterArgs) ToGetPrefixListFilterOutputWithContext(ctx context.Context) GetPrefixListFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListFilterOutput)
}

func (i *GetPrefixListFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetPrefixListFilterArgs] {
	return pulumix.Val(i)
}

type GetPrefixListFilterOutput struct{ *pulumi.OutputState }

func (GetPrefixListFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListFilter)(nil)).Elem()
}

func (o GetPrefixListFilterOutput) ToGetPrefixListFilterOutput() GetPrefixListFilterOutput {
	return o
}

func (o GetPrefixListFilterOutput) ToGetPrefixListFilterOutputWithContext(ctx context.Context) GetPrefixListFilterOutput {
	return o
}

func (o GetPrefixListFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetPrefixListFilter] {
	return pulumix.Output[GetPrefixListFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribePrefixLists API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html).
func (o GetPrefixListFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetPrefixListFilter](o, func(v GetPrefixListFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetPrefixListFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetPrefixListFilter](o, func(v GetPrefixListFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetPublicIpv4PoolPoolAddressRange struct {
	// Number of addresses in the range.
	AddressCount int `pulumi:"addressCount"`
	// Number of available addresses in the range.
	AvailableAddressCount int `pulumi:"availableAddressCount"`
	// First address in the range.
	FirstAddress string `pulumi:"firstAddress"`
	// Last address in the range.
	LastAddress string `pulumi:"lastAddress"`
}

type GetPublicIpv4PoolPoolAddressRangeArgs struct {
	// Number of addresses in the range.
	AddressCount pulumix.Input[int] `pulumi:"addressCount"`
	// Number of available addresses in the range.
	AvailableAddressCount pulumix.Input[int] `pulumi:"availableAddressCount"`
	// First address in the range.
	FirstAddress pulumix.Input[string] `pulumi:"firstAddress"`
	// Last address in the range.
	LastAddress pulumix.Input[string] `pulumi:"lastAddress"`
}

func (GetPublicIpv4PoolPoolAddressRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpv4PoolPoolAddressRange)(nil)).Elem()
}

func (i GetPublicIpv4PoolPoolAddressRangeArgs) ToGetPublicIpv4PoolPoolAddressRangeOutput() GetPublicIpv4PoolPoolAddressRangeOutput {
	return i.ToGetPublicIpv4PoolPoolAddressRangeOutputWithContext(context.Background())
}

func (i GetPublicIpv4PoolPoolAddressRangeArgs) ToGetPublicIpv4PoolPoolAddressRangeOutputWithContext(ctx context.Context) GetPublicIpv4PoolPoolAddressRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpv4PoolPoolAddressRangeOutput)
}

func (i *GetPublicIpv4PoolPoolAddressRangeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetPublicIpv4PoolPoolAddressRangeArgs] {
	return pulumix.Val(i)
}

type GetPublicIpv4PoolPoolAddressRangeOutput struct{ *pulumi.OutputState }

func (GetPublicIpv4PoolPoolAddressRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpv4PoolPoolAddressRange)(nil)).Elem()
}

func (o GetPublicIpv4PoolPoolAddressRangeOutput) ToGetPublicIpv4PoolPoolAddressRangeOutput() GetPublicIpv4PoolPoolAddressRangeOutput {
	return o
}

func (o GetPublicIpv4PoolPoolAddressRangeOutput) ToGetPublicIpv4PoolPoolAddressRangeOutputWithContext(ctx context.Context) GetPublicIpv4PoolPoolAddressRangeOutput {
	return o
}

func (o GetPublicIpv4PoolPoolAddressRangeOutput) ToOutput(ctx context.Context) pulumix.Output[GetPublicIpv4PoolPoolAddressRange] {
	return pulumix.Output[GetPublicIpv4PoolPoolAddressRange]{
		OutputState: o.OutputState,
	}
}

// Number of addresses in the range.
func (o GetPublicIpv4PoolPoolAddressRangeOutput) AddressCount() pulumix.Output[int] {
	return pulumix.Apply[GetPublicIpv4PoolPoolAddressRange](o, func(v GetPublicIpv4PoolPoolAddressRange) int { return v.AddressCount })
}

// Number of available addresses in the range.
func (o GetPublicIpv4PoolPoolAddressRangeOutput) AvailableAddressCount() pulumix.Output[int] {
	return pulumix.Apply[GetPublicIpv4PoolPoolAddressRange](o, func(v GetPublicIpv4PoolPoolAddressRange) int { return v.AvailableAddressCount })
}

// First address in the range.
func (o GetPublicIpv4PoolPoolAddressRangeOutput) FirstAddress() pulumix.Output[string] {
	return pulumix.Apply[GetPublicIpv4PoolPoolAddressRange](o, func(v GetPublicIpv4PoolPoolAddressRange) string { return v.FirstAddress })
}

// Last address in the range.
func (o GetPublicIpv4PoolPoolAddressRangeOutput) LastAddress() pulumix.Output[string] {
	return pulumix.Apply[GetPublicIpv4PoolPoolAddressRange](o, func(v GetPublicIpv4PoolPoolAddressRange) string { return v.LastAddress })
}

type GetPublicIpv4PoolsFilter struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field. Pool IDs will be selected if any one of the given values match.
	Values []string `pulumi:"values"`
}

type GetPublicIpv4PoolsFilterArgs struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field. Pool IDs will be selected if any one of the given values match.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetPublicIpv4PoolsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpv4PoolsFilter)(nil)).Elem()
}

func (i GetPublicIpv4PoolsFilterArgs) ToGetPublicIpv4PoolsFilterOutput() GetPublicIpv4PoolsFilterOutput {
	return i.ToGetPublicIpv4PoolsFilterOutputWithContext(context.Background())
}

func (i GetPublicIpv4PoolsFilterArgs) ToGetPublicIpv4PoolsFilterOutputWithContext(ctx context.Context) GetPublicIpv4PoolsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIpv4PoolsFilterOutput)
}

func (i *GetPublicIpv4PoolsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetPublicIpv4PoolsFilterArgs] {
	return pulumix.Val(i)
}

type GetPublicIpv4PoolsFilterOutput struct{ *pulumi.OutputState }

func (GetPublicIpv4PoolsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIpv4PoolsFilter)(nil)).Elem()
}

func (o GetPublicIpv4PoolsFilterOutput) ToGetPublicIpv4PoolsFilterOutput() GetPublicIpv4PoolsFilterOutput {
	return o
}

func (o GetPublicIpv4PoolsFilterOutput) ToGetPublicIpv4PoolsFilterOutputWithContext(ctx context.Context) GetPublicIpv4PoolsFilterOutput {
	return o
}

func (o GetPublicIpv4PoolsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetPublicIpv4PoolsFilter] {
	return pulumix.Output[GetPublicIpv4PoolsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html).
func (o GetPublicIpv4PoolsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetPublicIpv4PoolsFilter](o, func(v GetPublicIpv4PoolsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field. Pool IDs will be selected if any one of the given values match.
func (o GetPublicIpv4PoolsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetPublicIpv4PoolsFilter](o, func(v GetPublicIpv4PoolsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetRouteTableAssociationType struct {
	// ID of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// Whether the association is due to the main route table.
	Main bool `pulumi:"main"`
	// Association ID.
	RouteTableAssociationId string `pulumi:"routeTableAssociationId"`
	// ID of the specific Route Table to retrieve.
	RouteTableId string `pulumi:"routeTableId"`
	// ID of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
	SubnetId string `pulumi:"subnetId"`
}

type GetRouteTableAssociationTypeArgs struct {
	// ID of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId pulumix.Input[string] `pulumi:"gatewayId"`
	// Whether the association is due to the main route table.
	Main pulumix.Input[bool] `pulumi:"main"`
	// Association ID.
	RouteTableAssociationId pulumix.Input[string] `pulumi:"routeTableAssociationId"`
	// ID of the specific Route Table to retrieve.
	RouteTableId pulumix.Input[string] `pulumi:"routeTableId"`
	// ID of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
	SubnetId pulumix.Input[string] `pulumi:"subnetId"`
}

func (GetRouteTableAssociationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationType)(nil)).Elem()
}

func (i GetRouteTableAssociationTypeArgs) ToGetRouteTableAssociationTypeOutput() GetRouteTableAssociationTypeOutput {
	return i.ToGetRouteTableAssociationTypeOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationTypeArgs) ToGetRouteTableAssociationTypeOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationTypeOutput)
}

func (i *GetRouteTableAssociationTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRouteTableAssociationTypeArgs] {
	return pulumix.Val(i)
}

type GetRouteTableAssociationTypeOutput struct{ *pulumi.OutputState }

func (GetRouteTableAssociationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationType)(nil)).Elem()
}

func (o GetRouteTableAssociationTypeOutput) ToGetRouteTableAssociationTypeOutput() GetRouteTableAssociationTypeOutput {
	return o
}

func (o GetRouteTableAssociationTypeOutput) ToGetRouteTableAssociationTypeOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeOutput {
	return o
}

func (o GetRouteTableAssociationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableAssociationType] {
	return pulumix.Output[GetRouteTableAssociationType]{
		OutputState: o.OutputState,
	}
}

// ID of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableAssociationTypeOutput) GatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableAssociationType](o, func(v GetRouteTableAssociationType) string { return v.GatewayId })
}

// Whether the association is due to the main route table.
func (o GetRouteTableAssociationTypeOutput) Main() pulumix.Output[bool] {
	return pulumix.Apply[GetRouteTableAssociationType](o, func(v GetRouteTableAssociationType) bool { return v.Main })
}

// Association ID.
func (o GetRouteTableAssociationTypeOutput) RouteTableAssociationId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableAssociationType](o, func(v GetRouteTableAssociationType) string { return v.RouteTableAssociationId })
}

// ID of the specific Route Table to retrieve.
func (o GetRouteTableAssociationTypeOutput) RouteTableId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableAssociationType](o, func(v GetRouteTableAssociationType) string { return v.RouteTableId })
}

// ID of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableAssociationTypeOutput) SubnetId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableAssociationType](o, func(v GetRouteTableAssociationType) string { return v.SubnetId })
}

type GetRouteTableFilter struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field. A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetRouteTableFilterArgs struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field. A Route Table will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetRouteTableFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return i.ToGetRouteTableFilterOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterOutput)
}

func (i *GetRouteTableFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRouteTableFilterArgs] {
	return pulumix.Val(i)
}

type GetRouteTableFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableFilter] {
	return pulumix.Output[GetRouteTableFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
func (o GetRouteTableFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableFilter](o, func(v GetRouteTableFilter) string { return v.Name })
}

// Set of values that are accepted for the given field. A Route Table will be selected if any one of the given values matches.
func (o GetRouteTableFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetRouteTableFilter](o, func(v GetRouteTableFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetRouteTableRoute struct {
	// ID of the Carrier Gateway.
	CarrierGatewayId string `pulumi:"carrierGatewayId"`
	// CIDR block of the route.
	CidrBlock string `pulumi:"cidrBlock"`
	// ARN of the core network.
	CoreNetworkArn string `pulumi:"coreNetworkArn"`
	// The ID of a managed prefix list destination of the route.
	DestinationPrefixListId string `pulumi:"destinationPrefixListId"`
	// ID of the Egress Only Internet Gateway.
	EgressOnlyGatewayId string `pulumi:"egressOnlyGatewayId"`
	// ID of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// EC2 instance ID.
	InstanceId string `pulumi:"instanceId"`
	// IPv6 CIDR block of the route.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// Local Gateway ID.
	LocalGatewayId string `pulumi:"localGatewayId"`
	// NAT Gateway ID.
	NatGatewayId string `pulumi:"natGatewayId"`
	// ID of the elastic network interface (eni) to use.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// EC2 Transit Gateway ID.
	TransitGatewayId string `pulumi:"transitGatewayId"`
	// VPC Endpoint ID.
	VpcEndpointId string `pulumi:"vpcEndpointId"`
	// VPC Peering ID.
	VpcPeeringConnectionId string `pulumi:"vpcPeeringConnectionId"`
}

type GetRouteTableRouteArgs struct {
	// ID of the Carrier Gateway.
	CarrierGatewayId pulumix.Input[string] `pulumi:"carrierGatewayId"`
	// CIDR block of the route.
	CidrBlock pulumix.Input[string] `pulumi:"cidrBlock"`
	// ARN of the core network.
	CoreNetworkArn pulumix.Input[string] `pulumi:"coreNetworkArn"`
	// The ID of a managed prefix list destination of the route.
	DestinationPrefixListId pulumix.Input[string] `pulumi:"destinationPrefixListId"`
	// ID of the Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumix.Input[string] `pulumi:"egressOnlyGatewayId"`
	// ID of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId pulumix.Input[string] `pulumi:"gatewayId"`
	// EC2 instance ID.
	InstanceId pulumix.Input[string] `pulumi:"instanceId"`
	// IPv6 CIDR block of the route.
	Ipv6CidrBlock pulumix.Input[string] `pulumi:"ipv6CidrBlock"`
	// Local Gateway ID.
	LocalGatewayId pulumix.Input[string] `pulumi:"localGatewayId"`
	// NAT Gateway ID.
	NatGatewayId pulumix.Input[string] `pulumi:"natGatewayId"`
	// ID of the elastic network interface (eni) to use.
	NetworkInterfaceId pulumix.Input[string] `pulumi:"networkInterfaceId"`
	// EC2 Transit Gateway ID.
	TransitGatewayId pulumix.Input[string] `pulumi:"transitGatewayId"`
	// VPC Endpoint ID.
	VpcEndpointId pulumix.Input[string] `pulumi:"vpcEndpointId"`
	// VPC Peering ID.
	VpcPeeringConnectionId pulumix.Input[string] `pulumi:"vpcPeeringConnectionId"`
}

func (GetRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return i.ToGetRouteTableRouteOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteOutput)
}

func (i *GetRouteTableRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRouteTableRouteArgs] {
	return pulumix.Val(i)
}

type GetRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return o
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return o
}

func (o GetRouteTableRouteOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableRoute] {
	return pulumix.Output[GetRouteTableRoute]{
		OutputState: o.OutputState,
	}
}

// ID of the Carrier Gateway.
func (o GetRouteTableRouteOutput) CarrierGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.CarrierGatewayId })
}

// CIDR block of the route.
func (o GetRouteTableRouteOutput) CidrBlock() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.CidrBlock })
}

// ARN of the core network.
func (o GetRouteTableRouteOutput) CoreNetworkArn() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.CoreNetworkArn })
}

// The ID of a managed prefix list destination of the route.
func (o GetRouteTableRouteOutput) DestinationPrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.DestinationPrefixListId })
}

// ID of the Egress Only Internet Gateway.
func (o GetRouteTableRouteOutput) EgressOnlyGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.EgressOnlyGatewayId })
}

// ID of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableRouteOutput) GatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.GatewayId })
}

// EC2 instance ID.
func (o GetRouteTableRouteOutput) InstanceId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.InstanceId })
}

// IPv6 CIDR block of the route.
func (o GetRouteTableRouteOutput) Ipv6CidrBlock() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.Ipv6CidrBlock })
}

// Local Gateway ID.
func (o GetRouteTableRouteOutput) LocalGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.LocalGatewayId })
}

// NAT Gateway ID.
func (o GetRouteTableRouteOutput) NatGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.NatGatewayId })
}

// ID of the elastic network interface (eni) to use.
func (o GetRouteTableRouteOutput) NetworkInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.NetworkInterfaceId })
}

// EC2 Transit Gateway ID.
func (o GetRouteTableRouteOutput) TransitGatewayId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.TransitGatewayId })
}

// VPC Endpoint ID.
func (o GetRouteTableRouteOutput) VpcEndpointId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.VpcEndpointId })
}

// VPC Peering ID.
func (o GetRouteTableRouteOutput) VpcPeeringConnectionId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoute](o, func(v GetRouteTableRoute) string { return v.VpcPeeringConnectionId })
}

type GetRouteTablesFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetRouteTablesFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetRouteTablesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilter)(nil)).Elem()
}

func (i GetRouteTablesFilterArgs) ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput {
	return i.ToGetRouteTablesFilterOutputWithContext(context.Background())
}

func (i GetRouteTablesFilterArgs) ToGetRouteTablesFilterOutputWithContext(ctx context.Context) GetRouteTablesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesFilterOutput)
}

func (i *GetRouteTablesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRouteTablesFilterArgs] {
	return pulumix.Val(i)
}

type GetRouteTablesFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTablesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilter)(nil)).Elem()
}

func (o GetRouteTablesFilterOutput) ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput {
	return o
}

func (o GetRouteTablesFilterOutput) ToGetRouteTablesFilterOutputWithContext(ctx context.Context) GetRouteTablesFilterOutput {
	return o
}

func (o GetRouteTablesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTablesFilter] {
	return pulumix.Output[GetRouteTablesFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
func (o GetRouteTablesFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTablesFilter](o, func(v GetRouteTablesFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A Route Table will be selected if any one of the given values matches.
func (o GetRouteTablesFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetRouteTablesFilter](o, func(v GetRouteTablesFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetSecurityGroupFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Security Group will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSecurityGroupFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Security Group will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetSecurityGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilter)(nil)).Elem()
}

func (i GetSecurityGroupFilterArgs) ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput {
	return i.ToGetSecurityGroupFilterOutputWithContext(context.Background())
}

func (i GetSecurityGroupFilterArgs) ToGetSecurityGroupFilterOutputWithContext(ctx context.Context) GetSecurityGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupFilterOutput)
}

func (i *GetSecurityGroupFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSecurityGroupFilterArgs] {
	return pulumix.Val(i)
}

type GetSecurityGroupFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilter)(nil)).Elem()
}

func (o GetSecurityGroupFilterOutput) ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput {
	return o
}

func (o GetSecurityGroupFilterOutput) ToGetSecurityGroupFilterOutputWithContext(ctx context.Context) GetSecurityGroupFilterOutput {
	return o
}

func (o GetSecurityGroupFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecurityGroupFilter] {
	return pulumix.Output[GetSecurityGroupFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
func (o GetSecurityGroupFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetSecurityGroupFilter](o, func(v GetSecurityGroupFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A Security Group will be selected if any one of the given values matches.
func (o GetSecurityGroupFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetSecurityGroupFilter](o, func(v GetSecurityGroupFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetSecurityGroupsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetSecurityGroupsFilterArgs struct {
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetSecurityGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilter)(nil)).Elem()
}

func (i GetSecurityGroupsFilterArgs) ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput {
	return i.ToGetSecurityGroupsFilterOutputWithContext(context.Background())
}

func (i GetSecurityGroupsFilterArgs) ToGetSecurityGroupsFilterOutputWithContext(ctx context.Context) GetSecurityGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsFilterOutput)
}

func (i *GetSecurityGroupsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSecurityGroupsFilterArgs] {
	return pulumix.Val(i)
}

type GetSecurityGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilter)(nil)).Elem()
}

func (o GetSecurityGroupsFilterOutput) ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput {
	return o
}

func (o GetSecurityGroupsFilterOutput) ToGetSecurityGroupsFilterOutputWithContext(ctx context.Context) GetSecurityGroupsFilterOutput {
	return o
}

func (o GetSecurityGroupsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecurityGroupsFilter] {
	return pulumix.Output[GetSecurityGroupsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetSecurityGroupsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetSecurityGroupsFilter](o, func(v GetSecurityGroupsFilter) string { return v.Name })
}

func (o GetSecurityGroupsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetSecurityGroupsFilter](o, func(v GetSecurityGroupsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetSpotPriceFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetSpotPriceFilterArgs struct {
	// Name of the filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetSpotPriceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpotPriceFilter)(nil)).Elem()
}

func (i GetSpotPriceFilterArgs) ToGetSpotPriceFilterOutput() GetSpotPriceFilterOutput {
	return i.ToGetSpotPriceFilterOutputWithContext(context.Background())
}

func (i GetSpotPriceFilterArgs) ToGetSpotPriceFilterOutputWithContext(ctx context.Context) GetSpotPriceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpotPriceFilterOutput)
}

func (i *GetSpotPriceFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSpotPriceFilterArgs] {
	return pulumix.Val(i)
}

type GetSpotPriceFilterOutput struct{ *pulumi.OutputState }

func (GetSpotPriceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpotPriceFilter)(nil)).Elem()
}

func (o GetSpotPriceFilterOutput) ToGetSpotPriceFilterOutput() GetSpotPriceFilterOutput {
	return o
}

func (o GetSpotPriceFilterOutput) ToGetSpotPriceFilterOutputWithContext(ctx context.Context) GetSpotPriceFilterOutput {
	return o
}

func (o GetSpotPriceFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetSpotPriceFilter] {
	return pulumix.Output[GetSpotPriceFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetSpotPriceFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetSpotPriceFilter](o, func(v GetSpotPriceFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetSpotPriceFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetSpotPriceFilter](o, func(v GetSpotPriceFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetSubnetFilter struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field. A subnet will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSubnetFilterArgs struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field. A subnet will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetSubnetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return i.ToGetSubnetFilterOutputWithContext(context.Background())
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterOutput)
}

func (i *GetSubnetFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSubnetFilterArgs] {
	return pulumix.Val(i)
}

type GetSubnetFilterOutput struct{ *pulumi.OutputState }

func (GetSubnetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return o
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return o
}

func (o GetSubnetFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubnetFilter] {
	return pulumix.Output[GetSubnetFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
func (o GetSubnetFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetSubnetFilter](o, func(v GetSubnetFilter) string { return v.Name })
}

// Set of values that are accepted for the given field. A subnet will be selected if any one of the given values matches.
func (o GetSubnetFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetSubnetFilter](o, func(v GetSubnetFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetSubnetsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ec2.GetSubnets(ctx, &ec2.GetSubnetsArgs{
	// 			Filters: []ec2.GetSubnetsFilter{
	// 				{
	// 					Name: "tag:Name",
	// 					Values: []string{
	// 						"",
	// 					},
	// 				},
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// Subnet IDs will be selected if any one of the given values match.
	Values []string `pulumi:"values"`
}

type GetSubnetsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := ec2.GetSubnets(ctx, &ec2.GetSubnetsArgs{
	// 			Filters: []ec2.GetSubnetsFilter{
	// 				{
	// 					Name: "tag:Name",
	// 					Values: []string{
	// 						"",
	// 					},
	// 				},
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// Subnet IDs will be selected if any one of the given values match.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetSubnetsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsFilter)(nil)).Elem()
}

func (i GetSubnetsFilterArgs) ToGetSubnetsFilterOutput() GetSubnetsFilterOutput {
	return i.ToGetSubnetsFilterOutputWithContext(context.Background())
}

func (i GetSubnetsFilterArgs) ToGetSubnetsFilterOutputWithContext(ctx context.Context) GetSubnetsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsFilterOutput)
}

func (i *GetSubnetsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSubnetsFilterArgs] {
	return pulumix.Val(i)
}

type GetSubnetsFilterOutput struct{ *pulumi.OutputState }

func (GetSubnetsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsFilter)(nil)).Elem()
}

func (o GetSubnetsFilterOutput) ToGetSubnetsFilterOutput() GetSubnetsFilterOutput {
	return o
}

func (o GetSubnetsFilterOutput) ToGetSubnetsFilterOutputWithContext(ctx context.Context) GetSubnetsFilterOutput {
	return o
}

func (o GetSubnetsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubnetsFilter] {
	return pulumix.Output[GetSubnetsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
// For example, if matching against tag `Name`, use:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.GetSubnets(ctx, &ec2.GetSubnetsArgs{
//				Filters: []ec2.GetSubnetsFilter{
//					{
//						Name: "tag:Name",
//						Values: []string{
//							"",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func (o GetSubnetsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetSubnetsFilter](o, func(v GetSubnetsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// Subnet IDs will be selected if any one of the given values match.
func (o GetSubnetsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetSubnetsFilter](o, func(v GetSubnetsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetTransitGatewayRouteTablesFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetTransitGatewayRouteTablesFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayRouteTables.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetTransitGatewayRouteTablesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayRouteTablesFilter)(nil)).Elem()
}

func (i GetTransitGatewayRouteTablesFilterArgs) ToGetTransitGatewayRouteTablesFilterOutput() GetTransitGatewayRouteTablesFilterOutput {
	return i.ToGetTransitGatewayRouteTablesFilterOutputWithContext(context.Background())
}

func (i GetTransitGatewayRouteTablesFilterArgs) ToGetTransitGatewayRouteTablesFilterOutputWithContext(ctx context.Context) GetTransitGatewayRouteTablesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayRouteTablesFilterOutput)
}

func (i *GetTransitGatewayRouteTablesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetTransitGatewayRouteTablesFilterArgs] {
	return pulumix.Val(i)
}

type GetTransitGatewayRouteTablesFilterOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayRouteTablesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayRouteTablesFilter)(nil)).Elem()
}

func (o GetTransitGatewayRouteTablesFilterOutput) ToGetTransitGatewayRouteTablesFilterOutput() GetTransitGatewayRouteTablesFilterOutput {
	return o
}

func (o GetTransitGatewayRouteTablesFilterOutput) ToGetTransitGatewayRouteTablesFilterOutputWithContext(ctx context.Context) GetTransitGatewayRouteTablesFilterOutput {
	return o
}

func (o GetTransitGatewayRouteTablesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetTransitGatewayRouteTablesFilter] {
	return pulumix.Output[GetTransitGatewayRouteTablesFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayRouteTables.html).
func (o GetTransitGatewayRouteTablesFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetTransitGatewayRouteTablesFilter](o, func(v GetTransitGatewayRouteTablesFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A Transit Gateway Route Table will be selected if any one of the given values matches.
func (o GetTransitGatewayRouteTablesFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetTransitGatewayRouteTablesFilter](o, func(v GetTransitGatewayRouteTablesFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcCidrBlockAssociation struct {
	// Association ID for the IPv4 CIDR block.
	AssociationId string `pulumi:"associationId"`
	// Cidr block of the desired VPC.
	CidrBlock string `pulumi:"cidrBlock"`
	// Current state of the desired VPC.
	// Can be either `"pending"` or `"available"`.
	State string `pulumi:"state"`
}

type GetVpcCidrBlockAssociationArgs struct {
	// Association ID for the IPv4 CIDR block.
	AssociationId pulumix.Input[string] `pulumi:"associationId"`
	// Cidr block of the desired VPC.
	CidrBlock pulumix.Input[string] `pulumi:"cidrBlock"`
	// Current state of the desired VPC.
	// Can be either `"pending"` or `"available"`.
	State pulumix.Input[string] `pulumi:"state"`
}

func (GetVpcCidrBlockAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (i GetVpcCidrBlockAssociationArgs) ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput {
	return i.ToGetVpcCidrBlockAssociationOutputWithContext(context.Background())
}

func (i GetVpcCidrBlockAssociationArgs) ToGetVpcCidrBlockAssociationOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcCidrBlockAssociationOutput)
}

func (i *GetVpcCidrBlockAssociationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcCidrBlockAssociationArgs] {
	return pulumix.Val(i)
}

type GetVpcCidrBlockAssociationOutput struct{ *pulumi.OutputState }

func (GetVpcCidrBlockAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (o GetVpcCidrBlockAssociationOutput) ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput {
	return o
}

func (o GetVpcCidrBlockAssociationOutput) ToGetVpcCidrBlockAssociationOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationOutput {
	return o
}

func (o GetVpcCidrBlockAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcCidrBlockAssociation] {
	return pulumix.Output[GetVpcCidrBlockAssociation]{
		OutputState: o.OutputState,
	}
}

// Association ID for the IPv4 CIDR block.
func (o GetVpcCidrBlockAssociationOutput) AssociationId() pulumix.Output[string] {
	return pulumix.Apply[GetVpcCidrBlockAssociation](o, func(v GetVpcCidrBlockAssociation) string { return v.AssociationId })
}

// Cidr block of the desired VPC.
func (o GetVpcCidrBlockAssociationOutput) CidrBlock() pulumix.Output[string] {
	return pulumix.Apply[GetVpcCidrBlockAssociation](o, func(v GetVpcCidrBlockAssociation) string { return v.CidrBlock })
}

// Current state of the desired VPC.
// Can be either `"pending"` or `"available"`.
func (o GetVpcCidrBlockAssociationOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetVpcCidrBlockAssociation](o, func(v GetVpcCidrBlockAssociation) string { return v.State })
}

type GetVpcDhcpOptionsFilter struct {
	// Name of the field to filter.
	Name string `pulumi:"name"`
	// Set of values for filtering.
	Values []string `pulumi:"values"`
}

type GetVpcDhcpOptionsFilterArgs struct {
	// Name of the field to filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values for filtering.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcDhcpOptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (i GetVpcDhcpOptionsFilterArgs) ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput {
	return i.ToGetVpcDhcpOptionsFilterOutputWithContext(context.Background())
}

func (i GetVpcDhcpOptionsFilterArgs) ToGetVpcDhcpOptionsFilterOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcDhcpOptionsFilterOutput)
}

func (i *GetVpcDhcpOptionsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcDhcpOptionsFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcDhcpOptionsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcDhcpOptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (o GetVpcDhcpOptionsFilterOutput) ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterOutput) ToGetVpcDhcpOptionsFilterOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcDhcpOptionsFilter] {
	return pulumix.Output[GetVpcDhcpOptionsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter.
func (o GetVpcDhcpOptionsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcDhcpOptionsFilter](o, func(v GetVpcDhcpOptionsFilter) string { return v.Name })
}

// Set of values for filtering.
func (o GetVpcDhcpOptionsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcDhcpOptionsFilter](o, func(v GetVpcDhcpOptionsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcEndpointDnsEntry struct {
	// DNS name.
	DnsName string `pulumi:"dnsName"`
	// ID of the private hosted zone.
	HostedZoneId string `pulumi:"hostedZoneId"`
}

type GetVpcEndpointDnsEntryArgs struct {
	// DNS name.
	DnsName pulumix.Input[string] `pulumi:"dnsName"`
	// ID of the private hosted zone.
	HostedZoneId pulumix.Input[string] `pulumi:"hostedZoneId"`
}

func (GetVpcEndpointDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (i GetVpcEndpointDnsEntryArgs) ToGetVpcEndpointDnsEntryOutput() GetVpcEndpointDnsEntryOutput {
	return i.ToGetVpcEndpointDnsEntryOutputWithContext(context.Background())
}

func (i GetVpcEndpointDnsEntryArgs) ToGetVpcEndpointDnsEntryOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointDnsEntryOutput)
}

func (i *GetVpcEndpointDnsEntryArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcEndpointDnsEntryArgs] {
	return pulumix.Val(i)
}

type GetVpcEndpointDnsEntryOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (o GetVpcEndpointDnsEntryOutput) ToGetVpcEndpointDnsEntryOutput() GetVpcEndpointDnsEntryOutput {
	return o
}

func (o GetVpcEndpointDnsEntryOutput) ToGetVpcEndpointDnsEntryOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryOutput {
	return o
}

func (o GetVpcEndpointDnsEntryOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcEndpointDnsEntry] {
	return pulumix.Output[GetVpcEndpointDnsEntry]{
		OutputState: o.OutputState,
	}
}

// DNS name.
func (o GetVpcEndpointDnsEntryOutput) DnsName() pulumix.Output[string] {
	return pulumix.Apply[GetVpcEndpointDnsEntry](o, func(v GetVpcEndpointDnsEntry) string { return v.DnsName })
}

// ID of the private hosted zone.
func (o GetVpcEndpointDnsEntryOutput) HostedZoneId() pulumix.Output[string] {
	return pulumix.Apply[GetVpcEndpointDnsEntry](o, func(v GetVpcEndpointDnsEntry) string { return v.HostedZoneId })
}

type GetVpcEndpointDnsOption struct {
	// The DNS records created for the endpoint.
	DnsRecordIpType string `pulumi:"dnsRecordIpType"`
	// Indicates whether to enable private DNS only for inbound endpoints.
	PrivateDnsOnlyForInboundResolverEndpoint bool `pulumi:"privateDnsOnlyForInboundResolverEndpoint"`
}

type GetVpcEndpointDnsOptionArgs struct {
	// The DNS records created for the endpoint.
	DnsRecordIpType pulumix.Input[string] `pulumi:"dnsRecordIpType"`
	// Indicates whether to enable private DNS only for inbound endpoints.
	PrivateDnsOnlyForInboundResolverEndpoint pulumix.Input[bool] `pulumi:"privateDnsOnlyForInboundResolverEndpoint"`
}

func (GetVpcEndpointDnsOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointDnsOption)(nil)).Elem()
}

func (i GetVpcEndpointDnsOptionArgs) ToGetVpcEndpointDnsOptionOutput() GetVpcEndpointDnsOptionOutput {
	return i.ToGetVpcEndpointDnsOptionOutputWithContext(context.Background())
}

func (i GetVpcEndpointDnsOptionArgs) ToGetVpcEndpointDnsOptionOutputWithContext(ctx context.Context) GetVpcEndpointDnsOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointDnsOptionOutput)
}

func (i *GetVpcEndpointDnsOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcEndpointDnsOptionArgs] {
	return pulumix.Val(i)
}

type GetVpcEndpointDnsOptionOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointDnsOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointDnsOption)(nil)).Elem()
}

func (o GetVpcEndpointDnsOptionOutput) ToGetVpcEndpointDnsOptionOutput() GetVpcEndpointDnsOptionOutput {
	return o
}

func (o GetVpcEndpointDnsOptionOutput) ToGetVpcEndpointDnsOptionOutputWithContext(ctx context.Context) GetVpcEndpointDnsOptionOutput {
	return o
}

func (o GetVpcEndpointDnsOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcEndpointDnsOption] {
	return pulumix.Output[GetVpcEndpointDnsOption]{
		OutputState: o.OutputState,
	}
}

// The DNS records created for the endpoint.
func (o GetVpcEndpointDnsOptionOutput) DnsRecordIpType() pulumix.Output[string] {
	return pulumix.Apply[GetVpcEndpointDnsOption](o, func(v GetVpcEndpointDnsOption) string { return v.DnsRecordIpType })
}

// Indicates whether to enable private DNS only for inbound endpoints.
func (o GetVpcEndpointDnsOptionOutput) PrivateDnsOnlyForInboundResolverEndpoint() pulumix.Output[bool] {
	return pulumix.Apply[GetVpcEndpointDnsOption](o, func(v GetVpcEndpointDnsOption) bool { return v.PrivateDnsOnlyForInboundResolverEndpoint })
}

type GetVpcEndpointFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Endpoint will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcEndpointFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Endpoint will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcEndpointFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointFilter)(nil)).Elem()
}

func (i GetVpcEndpointFilterArgs) ToGetVpcEndpointFilterOutput() GetVpcEndpointFilterOutput {
	return i.ToGetVpcEndpointFilterOutputWithContext(context.Background())
}

func (i GetVpcEndpointFilterArgs) ToGetVpcEndpointFilterOutputWithContext(ctx context.Context) GetVpcEndpointFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointFilterOutput)
}

func (i *GetVpcEndpointFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcEndpointFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcEndpointFilterOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointFilter)(nil)).Elem()
}

func (o GetVpcEndpointFilterOutput) ToGetVpcEndpointFilterOutput() GetVpcEndpointFilterOutput {
	return o
}

func (o GetVpcEndpointFilterOutput) ToGetVpcEndpointFilterOutputWithContext(ctx context.Context) GetVpcEndpointFilterOutput {
	return o
}

func (o GetVpcEndpointFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcEndpointFilter] {
	return pulumix.Output[GetVpcEndpointFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
func (o GetVpcEndpointFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcEndpointFilter](o, func(v GetVpcEndpointFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A VPC Endpoint will be selected if any one of the given values matches.
func (o GetVpcEndpointFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcEndpointFilter](o, func(v GetVpcEndpointFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcEndpointServiceFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetVpcEndpointServiceFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcEndpointServiceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (i GetVpcEndpointServiceFilterArgs) ToGetVpcEndpointServiceFilterOutput() GetVpcEndpointServiceFilterOutput {
	return i.ToGetVpcEndpointServiceFilterOutputWithContext(context.Background())
}

func (i GetVpcEndpointServiceFilterArgs) ToGetVpcEndpointServiceFilterOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointServiceFilterOutput)
}

func (i *GetVpcEndpointServiceFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcEndpointServiceFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcEndpointServiceFilterOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointServiceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (o GetVpcEndpointServiceFilterOutput) ToGetVpcEndpointServiceFilterOutput() GetVpcEndpointServiceFilterOutput {
	return o
}

func (o GetVpcEndpointServiceFilterOutput) ToGetVpcEndpointServiceFilterOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterOutput {
	return o
}

func (o GetVpcEndpointServiceFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcEndpointServiceFilter] {
	return pulumix.Output[GetVpcEndpointServiceFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
func (o GetVpcEndpointServiceFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcEndpointServiceFilter](o, func(v GetVpcEndpointServiceFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetVpcEndpointServiceFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcEndpointServiceFilter](o, func(v GetVpcEndpointServiceFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFilter)(nil)).Elem()
}

func (i GetVpcFilterArgs) ToGetVpcFilterOutput() GetVpcFilterOutput {
	return i.ToGetVpcFilterOutputWithContext(context.Background())
}

func (i GetVpcFilterArgs) ToGetVpcFilterOutputWithContext(ctx context.Context) GetVpcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFilterOutput)
}

func (i *GetVpcFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcFilterOutput struct{ *pulumi.OutputState }

func (GetVpcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFilter)(nil)).Elem()
}

func (o GetVpcFilterOutput) ToGetVpcFilterOutput() GetVpcFilterOutput {
	return o
}

func (o GetVpcFilterOutput) ToGetVpcFilterOutputWithContext(ctx context.Context) GetVpcFilterOutput {
	return o
}

func (o GetVpcFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcFilter] {
	return pulumix.Output[GetVpcFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
func (o GetVpcFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcFilter](o, func(v GetVpcFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetVpcFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcFilter](o, func(v GetVpcFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcIamPoolCidrsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetVpcIamPoolCidrsFilterArgs struct {
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcIamPoolCidrsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolCidrsFilter)(nil)).Elem()
}

func (i GetVpcIamPoolCidrsFilterArgs) ToGetVpcIamPoolCidrsFilterOutput() GetVpcIamPoolCidrsFilterOutput {
	return i.ToGetVpcIamPoolCidrsFilterOutputWithContext(context.Background())
}

func (i GetVpcIamPoolCidrsFilterArgs) ToGetVpcIamPoolCidrsFilterOutputWithContext(ctx context.Context) GetVpcIamPoolCidrsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIamPoolCidrsFilterOutput)
}

func (i *GetVpcIamPoolCidrsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIamPoolCidrsFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcIamPoolCidrsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcIamPoolCidrsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolCidrsFilter)(nil)).Elem()
}

func (o GetVpcIamPoolCidrsFilterOutput) ToGetVpcIamPoolCidrsFilterOutput() GetVpcIamPoolCidrsFilterOutput {
	return o
}

func (o GetVpcIamPoolCidrsFilterOutput) ToGetVpcIamPoolCidrsFilterOutputWithContext(ctx context.Context) GetVpcIamPoolCidrsFilterOutput {
	return o
}

func (o GetVpcIamPoolCidrsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIamPoolCidrsFilter] {
	return pulumix.Output[GetVpcIamPoolCidrsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVpcIamPoolCidrsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolCidrsFilter](o, func(v GetVpcIamPoolCidrsFilter) string { return v.Name })
}

func (o GetVpcIamPoolCidrsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcIamPoolCidrsFilter](o, func(v GetVpcIamPoolCidrsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcIamPoolCidrsIpamPoolCidr struct {
	// A network CIDR.
	Cidr string `pulumi:"cidr"`
	// The provisioning state of that CIDR.
	State string `pulumi:"state"`
}

type GetVpcIamPoolCidrsIpamPoolCidrArgs struct {
	// A network CIDR.
	Cidr pulumix.Input[string] `pulumi:"cidr"`
	// The provisioning state of that CIDR.
	State pulumix.Input[string] `pulumi:"state"`
}

func (GetVpcIamPoolCidrsIpamPoolCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolCidrsIpamPoolCidr)(nil)).Elem()
}

func (i GetVpcIamPoolCidrsIpamPoolCidrArgs) ToGetVpcIamPoolCidrsIpamPoolCidrOutput() GetVpcIamPoolCidrsIpamPoolCidrOutput {
	return i.ToGetVpcIamPoolCidrsIpamPoolCidrOutputWithContext(context.Background())
}

func (i GetVpcIamPoolCidrsIpamPoolCidrArgs) ToGetVpcIamPoolCidrsIpamPoolCidrOutputWithContext(ctx context.Context) GetVpcIamPoolCidrsIpamPoolCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIamPoolCidrsIpamPoolCidrOutput)
}

func (i *GetVpcIamPoolCidrsIpamPoolCidrArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIamPoolCidrsIpamPoolCidrArgs] {
	return pulumix.Val(i)
}

type GetVpcIamPoolCidrsIpamPoolCidrOutput struct{ *pulumi.OutputState }

func (GetVpcIamPoolCidrsIpamPoolCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolCidrsIpamPoolCidr)(nil)).Elem()
}

func (o GetVpcIamPoolCidrsIpamPoolCidrOutput) ToGetVpcIamPoolCidrsIpamPoolCidrOutput() GetVpcIamPoolCidrsIpamPoolCidrOutput {
	return o
}

func (o GetVpcIamPoolCidrsIpamPoolCidrOutput) ToGetVpcIamPoolCidrsIpamPoolCidrOutputWithContext(ctx context.Context) GetVpcIamPoolCidrsIpamPoolCidrOutput {
	return o
}

func (o GetVpcIamPoolCidrsIpamPoolCidrOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIamPoolCidrsIpamPoolCidr] {
	return pulumix.Output[GetVpcIamPoolCidrsIpamPoolCidr]{
		OutputState: o.OutputState,
	}
}

// A network CIDR.
func (o GetVpcIamPoolCidrsIpamPoolCidrOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolCidrsIpamPoolCidr](o, func(v GetVpcIamPoolCidrsIpamPoolCidr) string { return v.Cidr })
}

// The provisioning state of that CIDR.
func (o GetVpcIamPoolCidrsIpamPoolCidrOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolCidrsIpamPoolCidr](o, func(v GetVpcIamPoolCidrsIpamPoolCidr) string { return v.State })
}

type GetVpcIamPoolFilter struct {
	// The name of the filter. Filter names are case-sensitive.
	Name string `pulumi:"name"`
	// The filter values. Filter values are case-sensitive.
	Values []string `pulumi:"values"`
}

type GetVpcIamPoolFilterArgs struct {
	// The name of the filter. Filter names are case-sensitive.
	Name pulumix.Input[string] `pulumi:"name"`
	// The filter values. Filter values are case-sensitive.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcIamPoolFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolFilter)(nil)).Elem()
}

func (i GetVpcIamPoolFilterArgs) ToGetVpcIamPoolFilterOutput() GetVpcIamPoolFilterOutput {
	return i.ToGetVpcIamPoolFilterOutputWithContext(context.Background())
}

func (i GetVpcIamPoolFilterArgs) ToGetVpcIamPoolFilterOutputWithContext(ctx context.Context) GetVpcIamPoolFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIamPoolFilterOutput)
}

func (i *GetVpcIamPoolFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIamPoolFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcIamPoolFilterOutput struct{ *pulumi.OutputState }

func (GetVpcIamPoolFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolFilter)(nil)).Elem()
}

func (o GetVpcIamPoolFilterOutput) ToGetVpcIamPoolFilterOutput() GetVpcIamPoolFilterOutput {
	return o
}

func (o GetVpcIamPoolFilterOutput) ToGetVpcIamPoolFilterOutputWithContext(ctx context.Context) GetVpcIamPoolFilterOutput {
	return o
}

func (o GetVpcIamPoolFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIamPoolFilter] {
	return pulumix.Output[GetVpcIamPoolFilter]{
		OutputState: o.OutputState,
	}
}

// The name of the filter. Filter names are case-sensitive.
func (o GetVpcIamPoolFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolFilter](o, func(v GetVpcIamPoolFilter) string { return v.Name })
}

// The filter values. Filter values are case-sensitive.
func (o GetVpcIamPoolFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcIamPoolFilter](o, func(v GetVpcIamPoolFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcIamPoolsFilter struct {
	// The name of the filter. Filter names are case-sensitive.
	Name string `pulumi:"name"`
	// The filter values. Filter values are case-sensitive.
	Values []string `pulumi:"values"`
}

type GetVpcIamPoolsFilterArgs struct {
	// The name of the filter. Filter names are case-sensitive.
	Name pulumix.Input[string] `pulumi:"name"`
	// The filter values. Filter values are case-sensitive.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcIamPoolsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolsFilter)(nil)).Elem()
}

func (i GetVpcIamPoolsFilterArgs) ToGetVpcIamPoolsFilterOutput() GetVpcIamPoolsFilterOutput {
	return i.ToGetVpcIamPoolsFilterOutputWithContext(context.Background())
}

func (i GetVpcIamPoolsFilterArgs) ToGetVpcIamPoolsFilterOutputWithContext(ctx context.Context) GetVpcIamPoolsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIamPoolsFilterOutput)
}

func (i *GetVpcIamPoolsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIamPoolsFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcIamPoolsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcIamPoolsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolsFilter)(nil)).Elem()
}

func (o GetVpcIamPoolsFilterOutput) ToGetVpcIamPoolsFilterOutput() GetVpcIamPoolsFilterOutput {
	return o
}

func (o GetVpcIamPoolsFilterOutput) ToGetVpcIamPoolsFilterOutputWithContext(ctx context.Context) GetVpcIamPoolsFilterOutput {
	return o
}

func (o GetVpcIamPoolsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIamPoolsFilter] {
	return pulumix.Output[GetVpcIamPoolsFilter]{
		OutputState: o.OutputState,
	}
}

// The name of the filter. Filter names are case-sensitive.
func (o GetVpcIamPoolsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsFilter](o, func(v GetVpcIamPoolsFilter) string { return v.Name })
}

// The filter values. Filter values are case-sensitive.
func (o GetVpcIamPoolsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcIamPoolsFilter](o, func(v GetVpcIamPoolsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcIamPoolsIpamPool struct {
	// IP protocol assigned to this pool.
	AddressFamily string `pulumi:"addressFamily"`
	// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
	AllocationDefaultNetmaskLength int `pulumi:"allocationDefaultNetmaskLength"`
	// The maximum netmask length that will be required for CIDR allocations in this pool.
	AllocationMaxNetmaskLength int `pulumi:"allocationMaxNetmaskLength"`
	// The minimum netmask length that will be required for CIDR allocations in this pool.
	AllocationMinNetmaskLength int `pulumi:"allocationMinNetmaskLength"`
	// Tags that are required to create resources in using this pool.
	AllocationResourceTags map[string]string `pulumi:"allocationResourceTags"`
	// ARN of the pool
	Arn string `pulumi:"arn"`
	// If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
	AutoImport bool `pulumi:"autoImport"`
	// Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
	AwsService string `pulumi:"awsService"`
	// Description for the IPAM pool.
	Description string `pulumi:"description"`
	// ID of the IPAM pool.
	Id         *string `pulumi:"id"`
	IpamPoolId string  `pulumi:"ipamPoolId"`
	// ID of the scope the pool belongs to.
	IpamScopeId   string `pulumi:"ipamScopeId"`
	IpamScopeType string `pulumi:"ipamScopeType"`
	// Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
	Locale    string `pulumi:"locale"`
	PoolDepth int    `pulumi:"poolDepth"`
	// Defines whether or not IPv6 pool space is publicly advertisable over the internet.
	PubliclyAdvertisable bool `pulumi:"publiclyAdvertisable"`
	// ID of the source IPAM pool.
	SourceIpamPoolId string `pulumi:"sourceIpamPoolId"`
	State            string `pulumi:"state"`
	// Map of tags to assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type GetVpcIamPoolsIpamPoolArgs struct {
	// IP protocol assigned to this pool.
	AddressFamily pulumix.Input[string] `pulumi:"addressFamily"`
	// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
	AllocationDefaultNetmaskLength pulumix.Input[int] `pulumi:"allocationDefaultNetmaskLength"`
	// The maximum netmask length that will be required for CIDR allocations in this pool.
	AllocationMaxNetmaskLength pulumix.Input[int] `pulumi:"allocationMaxNetmaskLength"`
	// The minimum netmask length that will be required for CIDR allocations in this pool.
	AllocationMinNetmaskLength pulumix.Input[int] `pulumi:"allocationMinNetmaskLength"`
	// Tags that are required to create resources in using this pool.
	AllocationResourceTags pulumix.Input[map[string]string] `pulumi:"allocationResourceTags"`
	// ARN of the pool
	Arn pulumix.Input[string] `pulumi:"arn"`
	// If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
	AutoImport pulumix.Input[bool] `pulumi:"autoImport"`
	// Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
	AwsService pulumix.Input[string] `pulumi:"awsService"`
	// Description for the IPAM pool.
	Description pulumix.Input[string] `pulumi:"description"`
	// ID of the IPAM pool.
	Id         pulumix.Input[*string] `pulumi:"id"`
	IpamPoolId pulumix.Input[string]  `pulumi:"ipamPoolId"`
	// ID of the scope the pool belongs to.
	IpamScopeId   pulumix.Input[string] `pulumi:"ipamScopeId"`
	IpamScopeType pulumix.Input[string] `pulumi:"ipamScopeType"`
	// Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
	Locale    pulumix.Input[string] `pulumi:"locale"`
	PoolDepth pulumix.Input[int]    `pulumi:"poolDepth"`
	// Defines whether or not IPv6 pool space is publicly advertisable over the internet.
	PubliclyAdvertisable pulumix.Input[bool] `pulumi:"publiclyAdvertisable"`
	// ID of the source IPAM pool.
	SourceIpamPoolId pulumix.Input[string] `pulumi:"sourceIpamPoolId"`
	State            pulumix.Input[string] `pulumi:"state"`
	// Map of tags to assigned to the resource.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (GetVpcIamPoolsIpamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolsIpamPool)(nil)).Elem()
}

func (i GetVpcIamPoolsIpamPoolArgs) ToGetVpcIamPoolsIpamPoolOutput() GetVpcIamPoolsIpamPoolOutput {
	return i.ToGetVpcIamPoolsIpamPoolOutputWithContext(context.Background())
}

func (i GetVpcIamPoolsIpamPoolArgs) ToGetVpcIamPoolsIpamPoolOutputWithContext(ctx context.Context) GetVpcIamPoolsIpamPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIamPoolsIpamPoolOutput)
}

func (i *GetVpcIamPoolsIpamPoolArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIamPoolsIpamPoolArgs] {
	return pulumix.Val(i)
}

type GetVpcIamPoolsIpamPoolOutput struct{ *pulumi.OutputState }

func (GetVpcIamPoolsIpamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIamPoolsIpamPool)(nil)).Elem()
}

func (o GetVpcIamPoolsIpamPoolOutput) ToGetVpcIamPoolsIpamPoolOutput() GetVpcIamPoolsIpamPoolOutput {
	return o
}

func (o GetVpcIamPoolsIpamPoolOutput) ToGetVpcIamPoolsIpamPoolOutputWithContext(ctx context.Context) GetVpcIamPoolsIpamPoolOutput {
	return o
}

func (o GetVpcIamPoolsIpamPoolOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIamPoolsIpamPool] {
	return pulumix.Output[GetVpcIamPoolsIpamPool]{
		OutputState: o.OutputState,
	}
}

// IP protocol assigned to this pool.
func (o GetVpcIamPoolsIpamPoolOutput) AddressFamily() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.AddressFamily })
}

// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
func (o GetVpcIamPoolsIpamPoolOutput) AllocationDefaultNetmaskLength() pulumix.Output[int] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) int { return v.AllocationDefaultNetmaskLength })
}

// The maximum netmask length that will be required for CIDR allocations in this pool.
func (o GetVpcIamPoolsIpamPoolOutput) AllocationMaxNetmaskLength() pulumix.Output[int] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) int { return v.AllocationMaxNetmaskLength })
}

// The minimum netmask length that will be required for CIDR allocations in this pool.
func (o GetVpcIamPoolsIpamPoolOutput) AllocationMinNetmaskLength() pulumix.Output[int] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) int { return v.AllocationMinNetmaskLength })
}

// Tags that are required to create resources in using this pool.
func (o GetVpcIamPoolsIpamPoolOutput) AllocationResourceTags() pulumix.MapOutput[string] {
	value := pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) map[string]string { return v.AllocationResourceTags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// ARN of the pool
func (o GetVpcIamPoolsIpamPoolOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.Arn })
}

// If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
func (o GetVpcIamPoolsIpamPoolOutput) AutoImport() pulumix.Output[bool] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) bool { return v.AutoImport })
}

// Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
func (o GetVpcIamPoolsIpamPoolOutput) AwsService() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.AwsService })
}

// Description for the IPAM pool.
func (o GetVpcIamPoolsIpamPoolOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.Description })
}

// ID of the IPAM pool.
func (o GetVpcIamPoolsIpamPoolOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) *string { return v.Id })
}

func (o GetVpcIamPoolsIpamPoolOutput) IpamPoolId() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.IpamPoolId })
}

// ID of the scope the pool belongs to.
func (o GetVpcIamPoolsIpamPoolOutput) IpamScopeId() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.IpamScopeId })
}

func (o GetVpcIamPoolsIpamPoolOutput) IpamScopeType() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.IpamScopeType })
}

// Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
func (o GetVpcIamPoolsIpamPoolOutput) Locale() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.Locale })
}

func (o GetVpcIamPoolsIpamPoolOutput) PoolDepth() pulumix.Output[int] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) int { return v.PoolDepth })
}

// Defines whether or not IPv6 pool space is publicly advertisable over the internet.
func (o GetVpcIamPoolsIpamPoolOutput) PubliclyAdvertisable() pulumix.Output[bool] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) bool { return v.PubliclyAdvertisable })
}

// ID of the source IPAM pool.
func (o GetVpcIamPoolsIpamPoolOutput) SourceIpamPoolId() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.SourceIpamPoolId })
}

func (o GetVpcIamPoolsIpamPoolOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) string { return v.State })
}

// Map of tags to assigned to the resource.
func (o GetVpcIamPoolsIpamPoolOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[GetVpcIamPoolsIpamPool](o, func(v GetVpcIamPoolsIpamPool) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type GetVpcIpamPoolCidrsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetVpcIpamPoolCidrsFilterArgs struct {
	Name   pulumix.Input[string]   `pulumi:"name"`
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcIpamPoolCidrsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolCidrsFilter)(nil)).Elem()
}

func (i GetVpcIpamPoolCidrsFilterArgs) ToGetVpcIpamPoolCidrsFilterOutput() GetVpcIpamPoolCidrsFilterOutput {
	return i.ToGetVpcIpamPoolCidrsFilterOutputWithContext(context.Background())
}

func (i GetVpcIpamPoolCidrsFilterArgs) ToGetVpcIpamPoolCidrsFilterOutputWithContext(ctx context.Context) GetVpcIpamPoolCidrsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIpamPoolCidrsFilterOutput)
}

func (i *GetVpcIpamPoolCidrsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIpamPoolCidrsFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcIpamPoolCidrsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcIpamPoolCidrsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolCidrsFilter)(nil)).Elem()
}

func (o GetVpcIpamPoolCidrsFilterOutput) ToGetVpcIpamPoolCidrsFilterOutput() GetVpcIpamPoolCidrsFilterOutput {
	return o
}

func (o GetVpcIpamPoolCidrsFilterOutput) ToGetVpcIpamPoolCidrsFilterOutputWithContext(ctx context.Context) GetVpcIpamPoolCidrsFilterOutput {
	return o
}

func (o GetVpcIpamPoolCidrsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIpamPoolCidrsFilter] {
	return pulumix.Output[GetVpcIpamPoolCidrsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVpcIpamPoolCidrsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolCidrsFilter](o, func(v GetVpcIpamPoolCidrsFilter) string { return v.Name })
}

func (o GetVpcIpamPoolCidrsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcIpamPoolCidrsFilter](o, func(v GetVpcIpamPoolCidrsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcIpamPoolCidrsIpamPoolCidr struct {
	// A network CIDR.
	Cidr string `pulumi:"cidr"`
	// The provisioning state of that CIDR.
	State string `pulumi:"state"`
}

type GetVpcIpamPoolCidrsIpamPoolCidrArgs struct {
	// A network CIDR.
	Cidr pulumix.Input[string] `pulumi:"cidr"`
	// The provisioning state of that CIDR.
	State pulumix.Input[string] `pulumi:"state"`
}

func (GetVpcIpamPoolCidrsIpamPoolCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolCidrsIpamPoolCidr)(nil)).Elem()
}

func (i GetVpcIpamPoolCidrsIpamPoolCidrArgs) ToGetVpcIpamPoolCidrsIpamPoolCidrOutput() GetVpcIpamPoolCidrsIpamPoolCidrOutput {
	return i.ToGetVpcIpamPoolCidrsIpamPoolCidrOutputWithContext(context.Background())
}

func (i GetVpcIpamPoolCidrsIpamPoolCidrArgs) ToGetVpcIpamPoolCidrsIpamPoolCidrOutputWithContext(ctx context.Context) GetVpcIpamPoolCidrsIpamPoolCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIpamPoolCidrsIpamPoolCidrOutput)
}

func (i *GetVpcIpamPoolCidrsIpamPoolCidrArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIpamPoolCidrsIpamPoolCidrArgs] {
	return pulumix.Val(i)
}

type GetVpcIpamPoolCidrsIpamPoolCidrOutput struct{ *pulumi.OutputState }

func (GetVpcIpamPoolCidrsIpamPoolCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolCidrsIpamPoolCidr)(nil)).Elem()
}

func (o GetVpcIpamPoolCidrsIpamPoolCidrOutput) ToGetVpcIpamPoolCidrsIpamPoolCidrOutput() GetVpcIpamPoolCidrsIpamPoolCidrOutput {
	return o
}

func (o GetVpcIpamPoolCidrsIpamPoolCidrOutput) ToGetVpcIpamPoolCidrsIpamPoolCidrOutputWithContext(ctx context.Context) GetVpcIpamPoolCidrsIpamPoolCidrOutput {
	return o
}

func (o GetVpcIpamPoolCidrsIpamPoolCidrOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIpamPoolCidrsIpamPoolCidr] {
	return pulumix.Output[GetVpcIpamPoolCidrsIpamPoolCidr]{
		OutputState: o.OutputState,
	}
}

// A network CIDR.
func (o GetVpcIpamPoolCidrsIpamPoolCidrOutput) Cidr() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolCidrsIpamPoolCidr](o, func(v GetVpcIpamPoolCidrsIpamPoolCidr) string { return v.Cidr })
}

// The provisioning state of that CIDR.
func (o GetVpcIpamPoolCidrsIpamPoolCidrOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolCidrsIpamPoolCidr](o, func(v GetVpcIpamPoolCidrsIpamPoolCidr) string { return v.State })
}

type GetVpcIpamPoolFilter struct {
	// The name of the filter. Filter names are case-sensitive.
	Name string `pulumi:"name"`
	// The filter values. Filter values are case-sensitive.
	Values []string `pulumi:"values"`
}

type GetVpcIpamPoolFilterArgs struct {
	// The name of the filter. Filter names are case-sensitive.
	Name pulumix.Input[string] `pulumi:"name"`
	// The filter values. Filter values are case-sensitive.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcIpamPoolFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolFilter)(nil)).Elem()
}

func (i GetVpcIpamPoolFilterArgs) ToGetVpcIpamPoolFilterOutput() GetVpcIpamPoolFilterOutput {
	return i.ToGetVpcIpamPoolFilterOutputWithContext(context.Background())
}

func (i GetVpcIpamPoolFilterArgs) ToGetVpcIpamPoolFilterOutputWithContext(ctx context.Context) GetVpcIpamPoolFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIpamPoolFilterOutput)
}

func (i *GetVpcIpamPoolFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIpamPoolFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcIpamPoolFilterOutput struct{ *pulumi.OutputState }

func (GetVpcIpamPoolFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolFilter)(nil)).Elem()
}

func (o GetVpcIpamPoolFilterOutput) ToGetVpcIpamPoolFilterOutput() GetVpcIpamPoolFilterOutput {
	return o
}

func (o GetVpcIpamPoolFilterOutput) ToGetVpcIpamPoolFilterOutputWithContext(ctx context.Context) GetVpcIpamPoolFilterOutput {
	return o
}

func (o GetVpcIpamPoolFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIpamPoolFilter] {
	return pulumix.Output[GetVpcIpamPoolFilter]{
		OutputState: o.OutputState,
	}
}

// The name of the filter. Filter names are case-sensitive.
func (o GetVpcIpamPoolFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolFilter](o, func(v GetVpcIpamPoolFilter) string { return v.Name })
}

// The filter values. Filter values are case-sensitive.
func (o GetVpcIpamPoolFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcIpamPoolFilter](o, func(v GetVpcIpamPoolFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcIpamPoolsFilter struct {
	// The name of the filter. Filter names are case-sensitive.
	Name string `pulumi:"name"`
	// The filter values. Filter values are case-sensitive.
	Values []string `pulumi:"values"`
}

type GetVpcIpamPoolsFilterArgs struct {
	// The name of the filter. Filter names are case-sensitive.
	Name pulumix.Input[string] `pulumi:"name"`
	// The filter values. Filter values are case-sensitive.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcIpamPoolsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolsFilter)(nil)).Elem()
}

func (i GetVpcIpamPoolsFilterArgs) ToGetVpcIpamPoolsFilterOutput() GetVpcIpamPoolsFilterOutput {
	return i.ToGetVpcIpamPoolsFilterOutputWithContext(context.Background())
}

func (i GetVpcIpamPoolsFilterArgs) ToGetVpcIpamPoolsFilterOutputWithContext(ctx context.Context) GetVpcIpamPoolsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIpamPoolsFilterOutput)
}

func (i *GetVpcIpamPoolsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIpamPoolsFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcIpamPoolsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcIpamPoolsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolsFilter)(nil)).Elem()
}

func (o GetVpcIpamPoolsFilterOutput) ToGetVpcIpamPoolsFilterOutput() GetVpcIpamPoolsFilterOutput {
	return o
}

func (o GetVpcIpamPoolsFilterOutput) ToGetVpcIpamPoolsFilterOutputWithContext(ctx context.Context) GetVpcIpamPoolsFilterOutput {
	return o
}

func (o GetVpcIpamPoolsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIpamPoolsFilter] {
	return pulumix.Output[GetVpcIpamPoolsFilter]{
		OutputState: o.OutputState,
	}
}

// The name of the filter. Filter names are case-sensitive.
func (o GetVpcIpamPoolsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsFilter](o, func(v GetVpcIpamPoolsFilter) string { return v.Name })
}

// The filter values. Filter values are case-sensitive.
func (o GetVpcIpamPoolsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcIpamPoolsFilter](o, func(v GetVpcIpamPoolsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcIpamPoolsIpamPool struct {
	// IP protocol assigned to this pool.
	AddressFamily string `pulumi:"addressFamily"`
	// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
	AllocationDefaultNetmaskLength int `pulumi:"allocationDefaultNetmaskLength"`
	// The maximum netmask length that will be required for CIDR allocations in this pool.
	AllocationMaxNetmaskLength int `pulumi:"allocationMaxNetmaskLength"`
	// The minimum netmask length that will be required for CIDR allocations in this pool.
	AllocationMinNetmaskLength int `pulumi:"allocationMinNetmaskLength"`
	// Tags that are required to create resources in using this pool.
	AllocationResourceTags map[string]string `pulumi:"allocationResourceTags"`
	// ARN of the pool
	Arn string `pulumi:"arn"`
	// If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
	AutoImport bool `pulumi:"autoImport"`
	// Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
	AwsService string `pulumi:"awsService"`
	// Description for the IPAM pool.
	Description string `pulumi:"description"`
	// ID of the IPAM pool.
	Id         *string `pulumi:"id"`
	IpamPoolId string  `pulumi:"ipamPoolId"`
	// ID of the scope the pool belongs to.
	IpamScopeId   string `pulumi:"ipamScopeId"`
	IpamScopeType string `pulumi:"ipamScopeType"`
	// Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
	Locale    string `pulumi:"locale"`
	PoolDepth int    `pulumi:"poolDepth"`
	// Defines whether or not IPv6 pool space is publicly advertisable over the internet.
	PubliclyAdvertisable bool `pulumi:"publiclyAdvertisable"`
	// ID of the source IPAM pool.
	SourceIpamPoolId string `pulumi:"sourceIpamPoolId"`
	State            string `pulumi:"state"`
	// Map of tags to assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type GetVpcIpamPoolsIpamPoolArgs struct {
	// IP protocol assigned to this pool.
	AddressFamily pulumix.Input[string] `pulumi:"addressFamily"`
	// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
	AllocationDefaultNetmaskLength pulumix.Input[int] `pulumi:"allocationDefaultNetmaskLength"`
	// The maximum netmask length that will be required for CIDR allocations in this pool.
	AllocationMaxNetmaskLength pulumix.Input[int] `pulumi:"allocationMaxNetmaskLength"`
	// The minimum netmask length that will be required for CIDR allocations in this pool.
	AllocationMinNetmaskLength pulumix.Input[int] `pulumi:"allocationMinNetmaskLength"`
	// Tags that are required to create resources in using this pool.
	AllocationResourceTags pulumix.Input[map[string]string] `pulumi:"allocationResourceTags"`
	// ARN of the pool
	Arn pulumix.Input[string] `pulumi:"arn"`
	// If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
	AutoImport pulumix.Input[bool] `pulumi:"autoImport"`
	// Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
	AwsService pulumix.Input[string] `pulumi:"awsService"`
	// Description for the IPAM pool.
	Description pulumix.Input[string] `pulumi:"description"`
	// ID of the IPAM pool.
	Id         pulumix.Input[*string] `pulumi:"id"`
	IpamPoolId pulumix.Input[string]  `pulumi:"ipamPoolId"`
	// ID of the scope the pool belongs to.
	IpamScopeId   pulumix.Input[string] `pulumi:"ipamScopeId"`
	IpamScopeType pulumix.Input[string] `pulumi:"ipamScopeType"`
	// Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
	Locale    pulumix.Input[string] `pulumi:"locale"`
	PoolDepth pulumix.Input[int]    `pulumi:"poolDepth"`
	// Defines whether or not IPv6 pool space is publicly advertisable over the internet.
	PubliclyAdvertisable pulumix.Input[bool] `pulumi:"publiclyAdvertisable"`
	// ID of the source IPAM pool.
	SourceIpamPoolId pulumix.Input[string] `pulumi:"sourceIpamPoolId"`
	State            pulumix.Input[string] `pulumi:"state"`
	// Map of tags to assigned to the resource.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (GetVpcIpamPoolsIpamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolsIpamPool)(nil)).Elem()
}

func (i GetVpcIpamPoolsIpamPoolArgs) ToGetVpcIpamPoolsIpamPoolOutput() GetVpcIpamPoolsIpamPoolOutput {
	return i.ToGetVpcIpamPoolsIpamPoolOutputWithContext(context.Background())
}

func (i GetVpcIpamPoolsIpamPoolArgs) ToGetVpcIpamPoolsIpamPoolOutputWithContext(ctx context.Context) GetVpcIpamPoolsIpamPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcIpamPoolsIpamPoolOutput)
}

func (i *GetVpcIpamPoolsIpamPoolArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcIpamPoolsIpamPoolArgs] {
	return pulumix.Val(i)
}

type GetVpcIpamPoolsIpamPoolOutput struct{ *pulumi.OutputState }

func (GetVpcIpamPoolsIpamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolsIpamPool)(nil)).Elem()
}

func (o GetVpcIpamPoolsIpamPoolOutput) ToGetVpcIpamPoolsIpamPoolOutput() GetVpcIpamPoolsIpamPoolOutput {
	return o
}

func (o GetVpcIpamPoolsIpamPoolOutput) ToGetVpcIpamPoolsIpamPoolOutputWithContext(ctx context.Context) GetVpcIpamPoolsIpamPoolOutput {
	return o
}

func (o GetVpcIpamPoolsIpamPoolOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcIpamPoolsIpamPool] {
	return pulumix.Output[GetVpcIpamPoolsIpamPool]{
		OutputState: o.OutputState,
	}
}

// IP protocol assigned to this pool.
func (o GetVpcIpamPoolsIpamPoolOutput) AddressFamily() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.AddressFamily })
}

// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
func (o GetVpcIpamPoolsIpamPoolOutput) AllocationDefaultNetmaskLength() pulumix.Output[int] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) int { return v.AllocationDefaultNetmaskLength })
}

// The maximum netmask length that will be required for CIDR allocations in this pool.
func (o GetVpcIpamPoolsIpamPoolOutput) AllocationMaxNetmaskLength() pulumix.Output[int] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) int { return v.AllocationMaxNetmaskLength })
}

// The minimum netmask length that will be required for CIDR allocations in this pool.
func (o GetVpcIpamPoolsIpamPoolOutput) AllocationMinNetmaskLength() pulumix.Output[int] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) int { return v.AllocationMinNetmaskLength })
}

// Tags that are required to create resources in using this pool.
func (o GetVpcIpamPoolsIpamPoolOutput) AllocationResourceTags() pulumix.MapOutput[string] {
	value := pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) map[string]string { return v.AllocationResourceTags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// ARN of the pool
func (o GetVpcIpamPoolsIpamPoolOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.Arn })
}

// If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
func (o GetVpcIpamPoolsIpamPoolOutput) AutoImport() pulumix.Output[bool] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) bool { return v.AutoImport })
}

// Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
func (o GetVpcIpamPoolsIpamPoolOutput) AwsService() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.AwsService })
}

// Description for the IPAM pool.
func (o GetVpcIpamPoolsIpamPoolOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.Description })
}

// ID of the IPAM pool.
func (o GetVpcIpamPoolsIpamPoolOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) *string { return v.Id })
}

func (o GetVpcIpamPoolsIpamPoolOutput) IpamPoolId() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.IpamPoolId })
}

// ID of the scope the pool belongs to.
func (o GetVpcIpamPoolsIpamPoolOutput) IpamScopeId() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.IpamScopeId })
}

func (o GetVpcIpamPoolsIpamPoolOutput) IpamScopeType() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.IpamScopeType })
}

// Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
func (o GetVpcIpamPoolsIpamPoolOutput) Locale() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.Locale })
}

func (o GetVpcIpamPoolsIpamPoolOutput) PoolDepth() pulumix.Output[int] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) int { return v.PoolDepth })
}

// Defines whether or not IPv6 pool space is publicly advertisable over the internet.
func (o GetVpcIpamPoolsIpamPoolOutput) PubliclyAdvertisable() pulumix.Output[bool] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) bool { return v.PubliclyAdvertisable })
}

// ID of the source IPAM pool.
func (o GetVpcIpamPoolsIpamPoolOutput) SourceIpamPoolId() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.SourceIpamPoolId })
}

func (o GetVpcIpamPoolsIpamPoolOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) string { return v.State })
}

// Map of tags to assigned to the resource.
func (o GetVpcIpamPoolsIpamPoolOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[GetVpcIpamPoolsIpamPool](o, func(v GetVpcIpamPoolsIpamPool) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type GetVpcPeeringConnectionCidrBlockSet struct {
	// Primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
	CidrBlock string `pulumi:"cidrBlock"`
}

type GetVpcPeeringConnectionCidrBlockSetArgs struct {
	// Primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
	CidrBlock pulumix.Input[string] `pulumi:"cidrBlock"`
}

func (GetVpcPeeringConnectionCidrBlockSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionCidrBlockSet)(nil)).Elem()
}

func (i GetVpcPeeringConnectionCidrBlockSetArgs) ToGetVpcPeeringConnectionCidrBlockSetOutput() GetVpcPeeringConnectionCidrBlockSetOutput {
	return i.ToGetVpcPeeringConnectionCidrBlockSetOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionCidrBlockSetArgs) ToGetVpcPeeringConnectionCidrBlockSetOutputWithContext(ctx context.Context) GetVpcPeeringConnectionCidrBlockSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionCidrBlockSetOutput)
}

func (i *GetVpcPeeringConnectionCidrBlockSetArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcPeeringConnectionCidrBlockSetArgs] {
	return pulumix.Val(i)
}

type GetVpcPeeringConnectionCidrBlockSetOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionCidrBlockSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionCidrBlockSet)(nil)).Elem()
}

func (o GetVpcPeeringConnectionCidrBlockSetOutput) ToGetVpcPeeringConnectionCidrBlockSetOutput() GetVpcPeeringConnectionCidrBlockSetOutput {
	return o
}

func (o GetVpcPeeringConnectionCidrBlockSetOutput) ToGetVpcPeeringConnectionCidrBlockSetOutputWithContext(ctx context.Context) GetVpcPeeringConnectionCidrBlockSetOutput {
	return o
}

func (o GetVpcPeeringConnectionCidrBlockSetOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcPeeringConnectionCidrBlockSet] {
	return pulumix.Output[GetVpcPeeringConnectionCidrBlockSet]{
		OutputState: o.OutputState,
	}
}

// Primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
func (o GetVpcPeeringConnectionCidrBlockSetOutput) CidrBlock() pulumix.Output[string] {
	return pulumix.Apply[GetVpcPeeringConnectionCidrBlockSet](o, func(v GetVpcPeeringConnectionCidrBlockSet) string { return v.CidrBlock })
}

type GetVpcPeeringConnectionFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcPeeringConnectionFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcPeeringConnectionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (i GetVpcPeeringConnectionFilterArgs) ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput {
	return i.ToGetVpcPeeringConnectionFilterOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionFilterArgs) ToGetVpcPeeringConnectionFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionFilterOutput)
}

func (i *GetVpcPeeringConnectionFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcPeeringConnectionFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcPeeringConnectionFilterOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (o GetVpcPeeringConnectionFilterOutput) ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterOutput) ToGetVpcPeeringConnectionFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcPeeringConnectionFilter] {
	return pulumix.Output[GetVpcPeeringConnectionFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
func (o GetVpcPeeringConnectionFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcPeeringConnectionFilter](o, func(v GetVpcPeeringConnectionFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A VPC Peering Connection will be selected if any one of the given values matches.
func (o GetVpcPeeringConnectionFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcPeeringConnectionFilter](o, func(v GetVpcPeeringConnectionFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcPeeringConnectionPeerCidrBlockSet struct {
	// Primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
	CidrBlock string `pulumi:"cidrBlock"`
}

type GetVpcPeeringConnectionPeerCidrBlockSetArgs struct {
	// Primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
	CidrBlock pulumix.Input[string] `pulumi:"cidrBlock"`
}

func (GetVpcPeeringConnectionPeerCidrBlockSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionPeerCidrBlockSet)(nil)).Elem()
}

func (i GetVpcPeeringConnectionPeerCidrBlockSetArgs) ToGetVpcPeeringConnectionPeerCidrBlockSetOutput() GetVpcPeeringConnectionPeerCidrBlockSetOutput {
	return i.ToGetVpcPeeringConnectionPeerCidrBlockSetOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionPeerCidrBlockSetArgs) ToGetVpcPeeringConnectionPeerCidrBlockSetOutputWithContext(ctx context.Context) GetVpcPeeringConnectionPeerCidrBlockSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionPeerCidrBlockSetOutput)
}

func (i *GetVpcPeeringConnectionPeerCidrBlockSetArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcPeeringConnectionPeerCidrBlockSetArgs] {
	return pulumix.Val(i)
}

type GetVpcPeeringConnectionPeerCidrBlockSetOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionPeerCidrBlockSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionPeerCidrBlockSet)(nil)).Elem()
}

func (o GetVpcPeeringConnectionPeerCidrBlockSetOutput) ToGetVpcPeeringConnectionPeerCidrBlockSetOutput() GetVpcPeeringConnectionPeerCidrBlockSetOutput {
	return o
}

func (o GetVpcPeeringConnectionPeerCidrBlockSetOutput) ToGetVpcPeeringConnectionPeerCidrBlockSetOutputWithContext(ctx context.Context) GetVpcPeeringConnectionPeerCidrBlockSetOutput {
	return o
}

func (o GetVpcPeeringConnectionPeerCidrBlockSetOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcPeeringConnectionPeerCidrBlockSet] {
	return pulumix.Output[GetVpcPeeringConnectionPeerCidrBlockSet]{
		OutputState: o.OutputState,
	}
}

// Primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.
func (o GetVpcPeeringConnectionPeerCidrBlockSetOutput) CidrBlock() pulumix.Output[string] {
	return pulumix.Apply[GetVpcPeeringConnectionPeerCidrBlockSet](o, func(v GetVpcPeeringConnectionPeerCidrBlockSet) string { return v.CidrBlock })
}

type GetVpcPeeringConnectionsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcPeeringConnectionsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcPeeringConnectionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionsFilter)(nil)).Elem()
}

func (i GetVpcPeeringConnectionsFilterArgs) ToGetVpcPeeringConnectionsFilterOutput() GetVpcPeeringConnectionsFilterOutput {
	return i.ToGetVpcPeeringConnectionsFilterOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionsFilterArgs) ToGetVpcPeeringConnectionsFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionsFilterOutput)
}

func (i *GetVpcPeeringConnectionsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcPeeringConnectionsFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcPeeringConnectionsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionsFilter)(nil)).Elem()
}

func (o GetVpcPeeringConnectionsFilterOutput) ToGetVpcPeeringConnectionsFilterOutput() GetVpcPeeringConnectionsFilterOutput {
	return o
}

func (o GetVpcPeeringConnectionsFilterOutput) ToGetVpcPeeringConnectionsFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionsFilterOutput {
	return o
}

func (o GetVpcPeeringConnectionsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcPeeringConnectionsFilter] {
	return pulumix.Output[GetVpcPeeringConnectionsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
func (o GetVpcPeeringConnectionsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcPeeringConnectionsFilter](o, func(v GetVpcPeeringConnectionsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A VPC Peering Connection will be selected if any one of the given values matches.
func (o GetVpcPeeringConnectionsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcPeeringConnectionsFilter](o, func(v GetVpcPeeringConnectionsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsFilter)(nil)).Elem()
}

func (i GetVpcsFilterArgs) ToGetVpcsFilterOutput() GetVpcsFilterOutput {
	return i.ToGetVpcsFilterOutputWithContext(context.Background())
}

func (i GetVpcsFilterArgs) ToGetVpcsFilterOutputWithContext(ctx context.Context) GetVpcsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsFilterOutput)
}

func (i *GetVpcsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcsFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsFilter)(nil)).Elem()
}

func (o GetVpcsFilterOutput) ToGetVpcsFilterOutput() GetVpcsFilterOutput {
	return o
}

func (o GetVpcsFilterOutput) ToGetVpcsFilterOutputWithContext(ctx context.Context) GetVpcsFilterOutput {
	return o
}

func (o GetVpcsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcsFilter] {
	return pulumix.Output[GetVpcsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
func (o GetVpcsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcsFilter](o, func(v GetVpcsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetVpcsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcsFilter](o, func(v GetVpcsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpnGatewayFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPN Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpnGatewayFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPN Gateway will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpnGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayFilter)(nil)).Elem()
}

func (i GetVpnGatewayFilterArgs) ToGetVpnGatewayFilterOutput() GetVpnGatewayFilterOutput {
	return i.ToGetVpnGatewayFilterOutputWithContext(context.Background())
}

func (i GetVpnGatewayFilterArgs) ToGetVpnGatewayFilterOutputWithContext(ctx context.Context) GetVpnGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayFilterOutput)
}

func (i *GetVpnGatewayFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpnGatewayFilterArgs] {
	return pulumix.Val(i)
}

type GetVpnGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayFilter)(nil)).Elem()
}

func (o GetVpnGatewayFilterOutput) ToGetVpnGatewayFilterOutput() GetVpnGatewayFilterOutput {
	return o
}

func (o GetVpnGatewayFilterOutput) ToGetVpnGatewayFilterOutputWithContext(ctx context.Context) GetVpnGatewayFilterOutput {
	return o
}

func (o GetVpnGatewayFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpnGatewayFilter] {
	return pulumix.Output[GetVpnGatewayFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
func (o GetVpnGatewayFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpnGatewayFilter](o, func(v GetVpnGatewayFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A VPN Gateway will be selected if any one of the given values matches.
func (o GetVpnGatewayFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpnGatewayFilter](o, func(v GetVpnGatewayFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func init() {
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(FleetFleetInstanceSetOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsMaintenanceStrategiesOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsMaintenanceStrategiesCapacityRebalanceOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationOutput{})
	pulumi.RegisterOutputType(FlowLogDestinationOptionsOutput{})
	pulumi.RegisterOutputType(InstanceCapacityReservationSpecificationOutput{})
	pulumi.RegisterOutputType(InstanceCapacityReservationSpecificationCapacityReservationTargetOutput{})
	pulumi.RegisterOutputType(InstanceCpuOptionsOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEnclaveOptionsOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceInstanceMarketOptionsOutput{})
	pulumi.RegisterOutputType(InstanceInstanceMarketOptionsSpotOptionsOutput{})
	pulumi.RegisterOutputType(InstanceLaunchTemplateOutput{})
	pulumi.RegisterOutputType(InstanceMaintenanceOptionsOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(InstancePrivateDnsNameOptionsOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationMetadataOptionsOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingEbsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorOutput{})
	pulumi.RegisterOutputType(LaunchTemplateEnclaveOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfileOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsAcceleratorCountOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsAcceleratorTotalMemoryMibOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsBaselineEbsBandwidthMbpsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsMemoryGibPerVcpuOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsMemoryMibOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsNetworkBandwidthGbpsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsNetworkInterfaceCountOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsTotalLocalStorageGbOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceRequirementsVcpuCountOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMaintenanceOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePrivateDnsNameOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationOutput{})
	pulumi.RegisterOutputType(ManagedPrefixListEntryTypeOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisAlternatePathHintOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationAclOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationAclRuleOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationAclRulePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationAttachedToOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationComponentOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationCustomerGatewayOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationDestinationOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationDestinationVpcOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationIngressRouteTableOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationInternetGatewayOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationNatGatewayOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationPortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationPrefixListOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationRouteTableOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationRouteTableRouteOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationSecurityGroupOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationSourceVpcOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationSubnetOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationSubnetRouteTableOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationTransitGatewayOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationVpcOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationVpcEndpointOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationVpnConnectionOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisExplanationVpnGatewayOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentAclRuleOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentAttachedToOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentComponentOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentSourceVpcOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentSubnetOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisForwardPathComponentVpcOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentAclRuleOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentAttachedToOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentComponentOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentSourceVpcOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentSubnetOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput{})
	pulumi.RegisterOutputType(NetworkInsightsAnalysisReturnPathComponentVpcOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentTypeOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterOutput{})
	pulumi.RegisterOutputType(RouteTableRouteOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorCountOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsAcceleratorTotalMemoryMibOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsBaselineEbsBandwidthMbpsOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryGibPerVcpuOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsMemoryMibOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkBandwidthGbpsOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsNetworkInterfaceCountOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsTotalLocalStorageGbOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirementsVcpuCountOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestSpotMaintenanceStrategiesOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestSpotMaintenanceStrategiesCapacityRebalanceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCapacityReservationSpecificationOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCpuOptionsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEnclaveOptionsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestLaunchTemplateOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMaintenanceOptionsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestPrivateDnsNameOptionsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangeOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsEntryOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsOptionsOutput{})
	pulumi.RegisterOutputType(VpcEndpointServicePrivateDnsNameConfigurationOutput{})
	pulumi.RegisterOutputType(VpcIpamOperatingRegionOutput{})
	pulumi.RegisterOutputType(VpcIpamPoolCidrCidrAuthorizationContextOutput{})
	pulumi.RegisterOutputType(VpcIpamResourceDiscoveryOperatingRegionOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterTypeOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionTunnel1LogOptionsOutput{})
	pulumi.RegisterOutputType(VpnConnectionTunnel1LogOptionsCloudwatchLogOptionsOutput{})
	pulumi.RegisterOutputType(VpnConnectionTunnel2LogOptionsOutput{})
	pulumi.RegisterOutputType(VpnConnectionTunnel2LogOptionsCloudwatchLogOptionsOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryOutput{})
	pulumi.RegisterOutputType(GetAmiBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetAmiFilterOutput{})
	pulumi.RegisterOutputType(GetAmiIdsFilterOutput{})
	pulumi.RegisterOutputType(GetAmiProductCodeOutput{})
	pulumi.RegisterOutputType(GetCoipPoolFilterOutput{})
	pulumi.RegisterOutputType(GetCoipPoolsFilterOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetDedicatedHostFilterOutput{})
	pulumi.RegisterOutputType(GetEipsFilterOutput{})
	pulumi.RegisterOutputType(GetElasticIpFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceCreditSpecificationOutput{})
	pulumi.RegisterOutputType(GetInstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceEnclaveOptionOutput{})
	pulumi.RegisterOutputType(GetInstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceMaintenanceOptionOutput{})
	pulumi.RegisterOutputType(GetInstanceMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetInstancePrivateDnsNameOptionOutput{})
	pulumi.RegisterOutputType(GetInstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeFpgaOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeGpusOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeInferenceAcceleratorOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeInstanceDiskOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingsFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayAttachmentTypeOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetKeyPairFilterOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingEbOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCapacityReservationSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCpuOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCreditSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateElasticGpuSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateElasticInferenceAcceleratorOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateEnclaveOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateFilterOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateHibernationOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateIamInstanceProfileOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionSpotOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementAcceleratorCountOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementAcceleratorTotalMemoryMibOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementBaselineEbsBandwidthMbpOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementMemoryGibPerVcpusOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementMemoryMibOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementNetworkBandwidthGbpOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementNetworkInterfaceCountOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementTotalLocalStorageGbOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceRequirementVcpuCountOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateLicenseSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMaintenanceOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMonitoringOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplatePlacementOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplatePrivateDnsNameOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateTagSpecificationOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayRouteTableFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayRouteTablesFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayVirtualInterfaceFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayVirtualInterfaceGroupFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayVirtualInterfaceGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewaysFilterOutput{})
	pulumi.RegisterOutputType(GetManagedPrefixListEntryTypeOutput{})
	pulumi.RegisterOutputType(GetManagedPrefixListFilterOutput{})
	pulumi.RegisterOutputType(GetManagedPrefixListsFilterOutput{})
	pulumi.RegisterOutputType(GetNatGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetNatGatewaysFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisAlternatePathHintOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationAclOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationAclRuleOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationAclRulePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationAttachedToOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationComponentOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationCustomerGatewayOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationDestinationOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationDestinationVpcOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationIngressRouteTableOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationInternetGatewayOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationNatGatewayOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationPortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationPrefixListOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationRouteTableOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationSecurityGroupRulePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationSourceVpcOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationSubnetOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationSubnetRouteTableOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationTransitGatewayOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationVpcOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationVpcEndpointOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationVpnConnectionOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisExplanationVpnGatewayOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentAclRuleOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentAclRulePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentAdditionalDetailComponentOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentAttachedToOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentComponentOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentDestinationVpcOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentInboundHeaderSourcePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentOutboundHeaderSourcePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentSecurityGroupRulePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentSourceVpcOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentSubnetOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisForwardPathComponentVpcOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentAclRuleOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentAclRulePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentAdditionalDetailComponentOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentAttachedToOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentComponentOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentDestinationVpcOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentInboundHeaderSourcePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentOutboundHeaderSourcePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentSecurityGroupRulePortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentSourceVpcOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentSubnetOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsAnalysisReturnPathComponentVpcOutput{})
	pulumi.RegisterOutputType(GetNetworkInsightsPathFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAssociationOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAttachmentTypeOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesFilterOutput{})
	pulumi.RegisterOutputType(GetPrefixListFilterOutput{})
	pulumi.RegisterOutputType(GetPublicIpv4PoolPoolAddressRangeOutput{})
	pulumi.RegisterOutputType(GetPublicIpv4PoolsFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationTypeOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetSpotPriceFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetsFilterOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayRouteTablesFilterOutput{})
	pulumi.RegisterOutputType(GetVpcCidrBlockAssociationOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointDnsEntryOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointDnsOptionOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointFilterOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointServiceFilterOutput{})
	pulumi.RegisterOutputType(GetVpcFilterOutput{})
	pulumi.RegisterOutputType(GetVpcIamPoolCidrsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcIamPoolCidrsIpamPoolCidrOutput{})
	pulumi.RegisterOutputType(GetVpcIamPoolFilterOutput{})
	pulumi.RegisterOutputType(GetVpcIamPoolsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcIamPoolsIpamPoolOutput{})
	pulumi.RegisterOutputType(GetVpcIpamPoolCidrsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcIpamPoolCidrsIpamPoolCidrOutput{})
	pulumi.RegisterOutputType(GetVpcIpamPoolFilterOutput{})
	pulumi.RegisterOutputType(GetVpcIpamPoolsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcIpamPoolsIpamPoolOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionCidrBlockSetOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionPeerCidrBlockSetOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcsFilterOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayFilterOutput{})
}
