// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package signer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type SigningJobDestination struct {
	// A configuration block describing the S3 Destination object: See S3 Destination below for details.
	S3 SigningJobDestinationS3 `pulumi:"s3"`
}

type SigningJobDestinationArgs struct {
	// A configuration block describing the S3 Destination object: See S3 Destination below for details.
	S3 pulumix.Input[*SigningJobDestinationS3Args] `pulumi:"s3"`
}

func (SigningJobDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobDestination)(nil)).Elem()
}

func (i SigningJobDestinationArgs) ToSigningJobDestinationOutput() SigningJobDestinationOutput {
	return i.ToSigningJobDestinationOutputWithContext(context.Background())
}

func (i SigningJobDestinationArgs) ToSigningJobDestinationOutputWithContext(ctx context.Context) SigningJobDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobDestinationOutput)
}

func (i *SigningJobDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*SigningJobDestinationArgs] {
	return pulumix.Val(i)
}

type SigningJobDestinationOutput struct{ *pulumi.OutputState }

func (SigningJobDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobDestination)(nil)).Elem()
}

func (o SigningJobDestinationOutput) ToSigningJobDestinationOutput() SigningJobDestinationOutput {
	return o
}

func (o SigningJobDestinationOutput) ToSigningJobDestinationOutputWithContext(ctx context.Context) SigningJobDestinationOutput {
	return o
}

func (o SigningJobDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[SigningJobDestination] {
	return pulumix.Output[SigningJobDestination]{
		OutputState: o.OutputState,
	}
}

// A configuration block describing the S3 Destination object: See S3 Destination below for details.
func (o SigningJobDestinationOutput) S3() pulumix.GPtrOutput[SigningJobDestinationS3, SigningJobDestinationS3Output] {
	value := pulumix.Apply[SigningJobDestination](o, func(v SigningJobDestination) SigningJobDestinationS3 { return v.S3 })
	return pulumix.GPtrOutput[SigningJobDestinationS3, SigningJobDestinationS3Output]{OutputState: value.OutputState}
}

type SigningJobDestinationS3 struct {
	// Name of the S3 bucket.
	Bucket string `pulumi:"bucket"`
	// An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.
	Prefix *string `pulumi:"prefix"`
}

type SigningJobDestinationS3Args struct {
	// Name of the S3 bucket.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.
	Prefix pulumix.Input[*string] `pulumi:"prefix"`
}

func (SigningJobDestinationS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobDestinationS3)(nil)).Elem()
}

func (i SigningJobDestinationS3Args) ToSigningJobDestinationS3Output() SigningJobDestinationS3Output {
	return i.ToSigningJobDestinationS3OutputWithContext(context.Background())
}

func (i SigningJobDestinationS3Args) ToSigningJobDestinationS3OutputWithContext(ctx context.Context) SigningJobDestinationS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobDestinationS3Output)
}

func (i *SigningJobDestinationS3Args) ToOutput(ctx context.Context) pulumix.Output[*SigningJobDestinationS3Args] {
	return pulumix.Val(i)
}

type SigningJobDestinationS3Output struct{ *pulumi.OutputState }

func (SigningJobDestinationS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobDestinationS3)(nil)).Elem()
}

func (o SigningJobDestinationS3Output) ToSigningJobDestinationS3Output() SigningJobDestinationS3Output {
	return o
}

func (o SigningJobDestinationS3Output) ToSigningJobDestinationS3OutputWithContext(ctx context.Context) SigningJobDestinationS3Output {
	return o
}

func (o SigningJobDestinationS3Output) ToOutput(ctx context.Context) pulumix.Output[SigningJobDestinationS3] {
	return pulumix.Output[SigningJobDestinationS3]{
		OutputState: o.OutputState,
	}
}

// Name of the S3 bucket.
func (o SigningJobDestinationS3Output) Bucket() pulumix.Output[string] {
	return pulumix.Apply[SigningJobDestinationS3](o, func(v SigningJobDestinationS3) string { return v.Bucket })
}

// An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.
func (o SigningJobDestinationS3Output) Prefix() pulumix.Output[*string] {
	return pulumix.Apply[SigningJobDestinationS3](o, func(v SigningJobDestinationS3) *string { return v.Prefix })
}

type SigningJobRevocationRecord struct {
	Reason    *string `pulumi:"reason"`
	RevokedAt *string `pulumi:"revokedAt"`
	RevokedBy *string `pulumi:"revokedBy"`
}

type SigningJobRevocationRecordArgs struct {
	Reason    pulumix.Input[*string] `pulumi:"reason"`
	RevokedAt pulumix.Input[*string] `pulumi:"revokedAt"`
	RevokedBy pulumix.Input[*string] `pulumi:"revokedBy"`
}

func (SigningJobRevocationRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobRevocationRecord)(nil)).Elem()
}

func (i SigningJobRevocationRecordArgs) ToSigningJobRevocationRecordOutput() SigningJobRevocationRecordOutput {
	return i.ToSigningJobRevocationRecordOutputWithContext(context.Background())
}

func (i SigningJobRevocationRecordArgs) ToSigningJobRevocationRecordOutputWithContext(ctx context.Context) SigningJobRevocationRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobRevocationRecordOutput)
}

func (i *SigningJobRevocationRecordArgs) ToOutput(ctx context.Context) pulumix.Output[*SigningJobRevocationRecordArgs] {
	return pulumix.Val(i)
}

type SigningJobRevocationRecordOutput struct{ *pulumi.OutputState }

func (SigningJobRevocationRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobRevocationRecord)(nil)).Elem()
}

func (o SigningJobRevocationRecordOutput) ToSigningJobRevocationRecordOutput() SigningJobRevocationRecordOutput {
	return o
}

func (o SigningJobRevocationRecordOutput) ToSigningJobRevocationRecordOutputWithContext(ctx context.Context) SigningJobRevocationRecordOutput {
	return o
}

func (o SigningJobRevocationRecordOutput) ToOutput(ctx context.Context) pulumix.Output[SigningJobRevocationRecord] {
	return pulumix.Output[SigningJobRevocationRecord]{
		OutputState: o.OutputState,
	}
}

func (o SigningJobRevocationRecordOutput) Reason() pulumix.Output[*string] {
	return pulumix.Apply[SigningJobRevocationRecord](o, func(v SigningJobRevocationRecord) *string { return v.Reason })
}

func (o SigningJobRevocationRecordOutput) RevokedAt() pulumix.Output[*string] {
	return pulumix.Apply[SigningJobRevocationRecord](o, func(v SigningJobRevocationRecord) *string { return v.RevokedAt })
}

func (o SigningJobRevocationRecordOutput) RevokedBy() pulumix.Output[*string] {
	return pulumix.Apply[SigningJobRevocationRecord](o, func(v SigningJobRevocationRecord) *string { return v.RevokedBy })
}

type SigningJobSignedObject struct {
	// A configuration block describing the S3 Source object: See S3 Source below for details.
	S3s []SigningJobSignedObjectS3 `pulumi:"s3s"`
}

type SigningJobSignedObjectArgs struct {
	// A configuration block describing the S3 Source object: See S3 Source below for details.
	S3s pulumix.Input[[]*SigningJobSignedObjectS3Args] `pulumi:"s3s"`
}

func (SigningJobSignedObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobSignedObject)(nil)).Elem()
}

func (i SigningJobSignedObjectArgs) ToSigningJobSignedObjectOutput() SigningJobSignedObjectOutput {
	return i.ToSigningJobSignedObjectOutputWithContext(context.Background())
}

func (i SigningJobSignedObjectArgs) ToSigningJobSignedObjectOutputWithContext(ctx context.Context) SigningJobSignedObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobSignedObjectOutput)
}

func (i *SigningJobSignedObjectArgs) ToOutput(ctx context.Context) pulumix.Output[*SigningJobSignedObjectArgs] {
	return pulumix.Val(i)
}

type SigningJobSignedObjectOutput struct{ *pulumi.OutputState }

func (SigningJobSignedObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobSignedObject)(nil)).Elem()
}

func (o SigningJobSignedObjectOutput) ToSigningJobSignedObjectOutput() SigningJobSignedObjectOutput {
	return o
}

func (o SigningJobSignedObjectOutput) ToSigningJobSignedObjectOutputWithContext(ctx context.Context) SigningJobSignedObjectOutput {
	return o
}

func (o SigningJobSignedObjectOutput) ToOutput(ctx context.Context) pulumix.Output[SigningJobSignedObject] {
	return pulumix.Output[SigningJobSignedObject]{
		OutputState: o.OutputState,
	}
}

// A configuration block describing the S3 Source object: See S3 Source below for details.
func (o SigningJobSignedObjectOutput) S3s() pulumix.GArrayOutput[SigningJobSignedObjectS3, SigningJobSignedObjectS3Output] {
	value := pulumix.Apply[SigningJobSignedObject](o, func(v SigningJobSignedObject) []SigningJobSignedObjectS3 { return v.S3s })
	return pulumix.GArrayOutput[SigningJobSignedObjectS3, SigningJobSignedObjectS3Output]{OutputState: value.OutputState}
}

type SigningJobSignedObjectS3 struct {
	// Name of the S3 bucket.
	Bucket *string `pulumi:"bucket"`
	// Key name of the object that contains your unsigned code.
	Key *string `pulumi:"key"`
}

type SigningJobSignedObjectS3Args struct {
	// Name of the S3 bucket.
	Bucket pulumix.Input[*string] `pulumi:"bucket"`
	// Key name of the object that contains your unsigned code.
	Key pulumix.Input[*string] `pulumi:"key"`
}

func (SigningJobSignedObjectS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobSignedObjectS3)(nil)).Elem()
}

func (i SigningJobSignedObjectS3Args) ToSigningJobSignedObjectS3Output() SigningJobSignedObjectS3Output {
	return i.ToSigningJobSignedObjectS3OutputWithContext(context.Background())
}

func (i SigningJobSignedObjectS3Args) ToSigningJobSignedObjectS3OutputWithContext(ctx context.Context) SigningJobSignedObjectS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobSignedObjectS3Output)
}

func (i *SigningJobSignedObjectS3Args) ToOutput(ctx context.Context) pulumix.Output[*SigningJobSignedObjectS3Args] {
	return pulumix.Val(i)
}

type SigningJobSignedObjectS3Output struct{ *pulumi.OutputState }

func (SigningJobSignedObjectS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobSignedObjectS3)(nil)).Elem()
}

func (o SigningJobSignedObjectS3Output) ToSigningJobSignedObjectS3Output() SigningJobSignedObjectS3Output {
	return o
}

func (o SigningJobSignedObjectS3Output) ToSigningJobSignedObjectS3OutputWithContext(ctx context.Context) SigningJobSignedObjectS3Output {
	return o
}

func (o SigningJobSignedObjectS3Output) ToOutput(ctx context.Context) pulumix.Output[SigningJobSignedObjectS3] {
	return pulumix.Output[SigningJobSignedObjectS3]{
		OutputState: o.OutputState,
	}
}

// Name of the S3 bucket.
func (o SigningJobSignedObjectS3Output) Bucket() pulumix.Output[*string] {
	return pulumix.Apply[SigningJobSignedObjectS3](o, func(v SigningJobSignedObjectS3) *string { return v.Bucket })
}

// Key name of the object that contains your unsigned code.
func (o SigningJobSignedObjectS3Output) Key() pulumix.Output[*string] {
	return pulumix.Apply[SigningJobSignedObjectS3](o, func(v SigningJobSignedObjectS3) *string { return v.Key })
}

type SigningJobSource struct {
	// A configuration block describing the S3 Source object: See S3 Source below for details.
	S3 SigningJobSourceS3 `pulumi:"s3"`
}

type SigningJobSourceArgs struct {
	// A configuration block describing the S3 Source object: See S3 Source below for details.
	S3 pulumix.Input[*SigningJobSourceS3Args] `pulumi:"s3"`
}

func (SigningJobSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobSource)(nil)).Elem()
}

func (i SigningJobSourceArgs) ToSigningJobSourceOutput() SigningJobSourceOutput {
	return i.ToSigningJobSourceOutputWithContext(context.Background())
}

func (i SigningJobSourceArgs) ToSigningJobSourceOutputWithContext(ctx context.Context) SigningJobSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobSourceOutput)
}

func (i *SigningJobSourceArgs) ToOutput(ctx context.Context) pulumix.Output[*SigningJobSourceArgs] {
	return pulumix.Val(i)
}

type SigningJobSourceOutput struct{ *pulumi.OutputState }

func (SigningJobSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobSource)(nil)).Elem()
}

func (o SigningJobSourceOutput) ToSigningJobSourceOutput() SigningJobSourceOutput {
	return o
}

func (o SigningJobSourceOutput) ToSigningJobSourceOutputWithContext(ctx context.Context) SigningJobSourceOutput {
	return o
}

func (o SigningJobSourceOutput) ToOutput(ctx context.Context) pulumix.Output[SigningJobSource] {
	return pulumix.Output[SigningJobSource]{
		OutputState: o.OutputState,
	}
}

// A configuration block describing the S3 Source object: See S3 Source below for details.
func (o SigningJobSourceOutput) S3() pulumix.GPtrOutput[SigningJobSourceS3, SigningJobSourceS3Output] {
	value := pulumix.Apply[SigningJobSource](o, func(v SigningJobSource) SigningJobSourceS3 { return v.S3 })
	return pulumix.GPtrOutput[SigningJobSourceS3, SigningJobSourceS3Output]{OutputState: value.OutputState}
}

type SigningJobSourceS3 struct {
	// Name of the S3 bucket.
	Bucket string `pulumi:"bucket"`
	// Key name of the object that contains your unsigned code.
	Key string `pulumi:"key"`
	// Version of your source image in your version enabled S3 bucket.
	Version string `pulumi:"version"`
}

type SigningJobSourceS3Args struct {
	// Name of the S3 bucket.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// Key name of the object that contains your unsigned code.
	Key pulumix.Input[string] `pulumi:"key"`
	// Version of your source image in your version enabled S3 bucket.
	Version pulumix.Input[string] `pulumi:"version"`
}

func (SigningJobSourceS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobSourceS3)(nil)).Elem()
}

func (i SigningJobSourceS3Args) ToSigningJobSourceS3Output() SigningJobSourceS3Output {
	return i.ToSigningJobSourceS3OutputWithContext(context.Background())
}

func (i SigningJobSourceS3Args) ToSigningJobSourceS3OutputWithContext(ctx context.Context) SigningJobSourceS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobSourceS3Output)
}

func (i *SigningJobSourceS3Args) ToOutput(ctx context.Context) pulumix.Output[*SigningJobSourceS3Args] {
	return pulumix.Val(i)
}

type SigningJobSourceS3Output struct{ *pulumi.OutputState }

func (SigningJobSourceS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobSourceS3)(nil)).Elem()
}

func (o SigningJobSourceS3Output) ToSigningJobSourceS3Output() SigningJobSourceS3Output {
	return o
}

func (o SigningJobSourceS3Output) ToSigningJobSourceS3OutputWithContext(ctx context.Context) SigningJobSourceS3Output {
	return o
}

func (o SigningJobSourceS3Output) ToOutput(ctx context.Context) pulumix.Output[SigningJobSourceS3] {
	return pulumix.Output[SigningJobSourceS3]{
		OutputState: o.OutputState,
	}
}

// Name of the S3 bucket.
func (o SigningJobSourceS3Output) Bucket() pulumix.Output[string] {
	return pulumix.Apply[SigningJobSourceS3](o, func(v SigningJobSourceS3) string { return v.Bucket })
}

// Key name of the object that contains your unsigned code.
func (o SigningJobSourceS3Output) Key() pulumix.Output[string] {
	return pulumix.Apply[SigningJobSourceS3](o, func(v SigningJobSourceS3) string { return v.Key })
}

// Version of your source image in your version enabled S3 bucket.
func (o SigningJobSourceS3Output) Version() pulumix.Output[string] {
	return pulumix.Apply[SigningJobSourceS3](o, func(v SigningJobSourceS3) string { return v.Version })
}

type SigningProfileRevocationRecord struct {
	RevocationEffectiveFrom *string `pulumi:"revocationEffectiveFrom"`
	RevokedAt               *string `pulumi:"revokedAt"`
	RevokedBy               *string `pulumi:"revokedBy"`
}

type SigningProfileRevocationRecordArgs struct {
	RevocationEffectiveFrom pulumix.Input[*string] `pulumi:"revocationEffectiveFrom"`
	RevokedAt               pulumix.Input[*string] `pulumi:"revokedAt"`
	RevokedBy               pulumix.Input[*string] `pulumi:"revokedBy"`
}

func (SigningProfileRevocationRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningProfileRevocationRecord)(nil)).Elem()
}

func (i SigningProfileRevocationRecordArgs) ToSigningProfileRevocationRecordOutput() SigningProfileRevocationRecordOutput {
	return i.ToSigningProfileRevocationRecordOutputWithContext(context.Background())
}

func (i SigningProfileRevocationRecordArgs) ToSigningProfileRevocationRecordOutputWithContext(ctx context.Context) SigningProfileRevocationRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningProfileRevocationRecordOutput)
}

func (i *SigningProfileRevocationRecordArgs) ToOutput(ctx context.Context) pulumix.Output[*SigningProfileRevocationRecordArgs] {
	return pulumix.Val(i)
}

type SigningProfileRevocationRecordOutput struct{ *pulumi.OutputState }

func (SigningProfileRevocationRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningProfileRevocationRecord)(nil)).Elem()
}

func (o SigningProfileRevocationRecordOutput) ToSigningProfileRevocationRecordOutput() SigningProfileRevocationRecordOutput {
	return o
}

func (o SigningProfileRevocationRecordOutput) ToSigningProfileRevocationRecordOutputWithContext(ctx context.Context) SigningProfileRevocationRecordOutput {
	return o
}

func (o SigningProfileRevocationRecordOutput) ToOutput(ctx context.Context) pulumix.Output[SigningProfileRevocationRecord] {
	return pulumix.Output[SigningProfileRevocationRecord]{
		OutputState: o.OutputState,
	}
}

func (o SigningProfileRevocationRecordOutput) RevocationEffectiveFrom() pulumix.Output[*string] {
	return pulumix.Apply[SigningProfileRevocationRecord](o, func(v SigningProfileRevocationRecord) *string { return v.RevocationEffectiveFrom })
}

func (o SigningProfileRevocationRecordOutput) RevokedAt() pulumix.Output[*string] {
	return pulumix.Apply[SigningProfileRevocationRecord](o, func(v SigningProfileRevocationRecord) *string { return v.RevokedAt })
}

func (o SigningProfileRevocationRecordOutput) RevokedBy() pulumix.Output[*string] {
	return pulumix.Apply[SigningProfileRevocationRecord](o, func(v SigningProfileRevocationRecord) *string { return v.RevokedBy })
}

type SigningProfileSignatureValidityPeriod struct {
	Type  string `pulumi:"type"`
	Value int    `pulumi:"value"`
}

type SigningProfileSignatureValidityPeriodArgs struct {
	Type  pulumix.Input[string] `pulumi:"type"`
	Value pulumix.Input[int]    `pulumi:"value"`
}

func (SigningProfileSignatureValidityPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningProfileSignatureValidityPeriod)(nil)).Elem()
}

func (i SigningProfileSignatureValidityPeriodArgs) ToSigningProfileSignatureValidityPeriodOutput() SigningProfileSignatureValidityPeriodOutput {
	return i.ToSigningProfileSignatureValidityPeriodOutputWithContext(context.Background())
}

func (i SigningProfileSignatureValidityPeriodArgs) ToSigningProfileSignatureValidityPeriodOutputWithContext(ctx context.Context) SigningProfileSignatureValidityPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningProfileSignatureValidityPeriodOutput)
}

func (i *SigningProfileSignatureValidityPeriodArgs) ToOutput(ctx context.Context) pulumix.Output[*SigningProfileSignatureValidityPeriodArgs] {
	return pulumix.Val(i)
}

type SigningProfileSignatureValidityPeriodOutput struct{ *pulumi.OutputState }

func (SigningProfileSignatureValidityPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningProfileSignatureValidityPeriod)(nil)).Elem()
}

func (o SigningProfileSignatureValidityPeriodOutput) ToSigningProfileSignatureValidityPeriodOutput() SigningProfileSignatureValidityPeriodOutput {
	return o
}

func (o SigningProfileSignatureValidityPeriodOutput) ToSigningProfileSignatureValidityPeriodOutputWithContext(ctx context.Context) SigningProfileSignatureValidityPeriodOutput {
	return o
}

func (o SigningProfileSignatureValidityPeriodOutput) ToOutput(ctx context.Context) pulumix.Output[SigningProfileSignatureValidityPeriod] {
	return pulumix.Output[SigningProfileSignatureValidityPeriod]{
		OutputState: o.OutputState,
	}
}

func (o SigningProfileSignatureValidityPeriodOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[SigningProfileSignatureValidityPeriod](o, func(v SigningProfileSignatureValidityPeriod) string { return v.Type })
}

func (o SigningProfileSignatureValidityPeriodOutput) Value() pulumix.Output[int] {
	return pulumix.Apply[SigningProfileSignatureValidityPeriod](o, func(v SigningProfileSignatureValidityPeriod) int { return v.Value })
}

type SigningProfileSigningMaterial struct {
	CertificateArn string `pulumi:"certificateArn"`
}

type SigningProfileSigningMaterialArgs struct {
	CertificateArn pulumix.Input[string] `pulumi:"certificateArn"`
}

func (SigningProfileSigningMaterialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningProfileSigningMaterial)(nil)).Elem()
}

func (i SigningProfileSigningMaterialArgs) ToSigningProfileSigningMaterialOutput() SigningProfileSigningMaterialOutput {
	return i.ToSigningProfileSigningMaterialOutputWithContext(context.Background())
}

func (i SigningProfileSigningMaterialArgs) ToSigningProfileSigningMaterialOutputWithContext(ctx context.Context) SigningProfileSigningMaterialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningProfileSigningMaterialOutput)
}

func (i *SigningProfileSigningMaterialArgs) ToOutput(ctx context.Context) pulumix.Output[*SigningProfileSigningMaterialArgs] {
	return pulumix.Val(i)
}

type SigningProfileSigningMaterialOutput struct{ *pulumi.OutputState }

func (SigningProfileSigningMaterialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningProfileSigningMaterial)(nil)).Elem()
}

func (o SigningProfileSigningMaterialOutput) ToSigningProfileSigningMaterialOutput() SigningProfileSigningMaterialOutput {
	return o
}

func (o SigningProfileSigningMaterialOutput) ToSigningProfileSigningMaterialOutputWithContext(ctx context.Context) SigningProfileSigningMaterialOutput {
	return o
}

func (o SigningProfileSigningMaterialOutput) ToOutput(ctx context.Context) pulumix.Output[SigningProfileSigningMaterial] {
	return pulumix.Output[SigningProfileSigningMaterial]{
		OutputState: o.OutputState,
	}
}

func (o SigningProfileSigningMaterialOutput) CertificateArn() pulumix.Output[string] {
	return pulumix.Apply[SigningProfileSigningMaterial](o, func(v SigningProfileSigningMaterial) string { return v.CertificateArn })
}

type GetSigningJobRevocationRecord struct {
	Reason    string `pulumi:"reason"`
	RevokedAt string `pulumi:"revokedAt"`
	RevokedBy string `pulumi:"revokedBy"`
}

type GetSigningJobRevocationRecordArgs struct {
	Reason    pulumix.Input[string] `pulumi:"reason"`
	RevokedAt pulumix.Input[string] `pulumi:"revokedAt"`
	RevokedBy pulumix.Input[string] `pulumi:"revokedBy"`
}

func (GetSigningJobRevocationRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobRevocationRecord)(nil)).Elem()
}

func (i GetSigningJobRevocationRecordArgs) ToGetSigningJobRevocationRecordOutput() GetSigningJobRevocationRecordOutput {
	return i.ToGetSigningJobRevocationRecordOutputWithContext(context.Background())
}

func (i GetSigningJobRevocationRecordArgs) ToGetSigningJobRevocationRecordOutputWithContext(ctx context.Context) GetSigningJobRevocationRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSigningJobRevocationRecordOutput)
}

func (i *GetSigningJobRevocationRecordArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSigningJobRevocationRecordArgs] {
	return pulumix.Val(i)
}

type GetSigningJobRevocationRecordOutput struct{ *pulumi.OutputState }

func (GetSigningJobRevocationRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobRevocationRecord)(nil)).Elem()
}

func (o GetSigningJobRevocationRecordOutput) ToGetSigningJobRevocationRecordOutput() GetSigningJobRevocationRecordOutput {
	return o
}

func (o GetSigningJobRevocationRecordOutput) ToGetSigningJobRevocationRecordOutputWithContext(ctx context.Context) GetSigningJobRevocationRecordOutput {
	return o
}

func (o GetSigningJobRevocationRecordOutput) ToOutput(ctx context.Context) pulumix.Output[GetSigningJobRevocationRecord] {
	return pulumix.Output[GetSigningJobRevocationRecord]{
		OutputState: o.OutputState,
	}
}

func (o GetSigningJobRevocationRecordOutput) Reason() pulumix.Output[string] {
	return pulumix.Apply[GetSigningJobRevocationRecord](o, func(v GetSigningJobRevocationRecord) string { return v.Reason })
}

func (o GetSigningJobRevocationRecordOutput) RevokedAt() pulumix.Output[string] {
	return pulumix.Apply[GetSigningJobRevocationRecord](o, func(v GetSigningJobRevocationRecord) string { return v.RevokedAt })
}

func (o GetSigningJobRevocationRecordOutput) RevokedBy() pulumix.Output[string] {
	return pulumix.Apply[GetSigningJobRevocationRecord](o, func(v GetSigningJobRevocationRecord) string { return v.RevokedBy })
}

type GetSigningJobSignedObject struct {
	S3s []GetSigningJobSignedObjectS3 `pulumi:"s3s"`
}

type GetSigningJobSignedObjectArgs struct {
	S3s pulumix.Input[[]*GetSigningJobSignedObjectS3Args] `pulumi:"s3s"`
}

func (GetSigningJobSignedObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobSignedObject)(nil)).Elem()
}

func (i GetSigningJobSignedObjectArgs) ToGetSigningJobSignedObjectOutput() GetSigningJobSignedObjectOutput {
	return i.ToGetSigningJobSignedObjectOutputWithContext(context.Background())
}

func (i GetSigningJobSignedObjectArgs) ToGetSigningJobSignedObjectOutputWithContext(ctx context.Context) GetSigningJobSignedObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSigningJobSignedObjectOutput)
}

func (i *GetSigningJobSignedObjectArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSigningJobSignedObjectArgs] {
	return pulumix.Val(i)
}

type GetSigningJobSignedObjectOutput struct{ *pulumi.OutputState }

func (GetSigningJobSignedObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobSignedObject)(nil)).Elem()
}

func (o GetSigningJobSignedObjectOutput) ToGetSigningJobSignedObjectOutput() GetSigningJobSignedObjectOutput {
	return o
}

func (o GetSigningJobSignedObjectOutput) ToGetSigningJobSignedObjectOutputWithContext(ctx context.Context) GetSigningJobSignedObjectOutput {
	return o
}

func (o GetSigningJobSignedObjectOutput) ToOutput(ctx context.Context) pulumix.Output[GetSigningJobSignedObject] {
	return pulumix.Output[GetSigningJobSignedObject]{
		OutputState: o.OutputState,
	}
}

func (o GetSigningJobSignedObjectOutput) S3s() pulumix.GArrayOutput[GetSigningJobSignedObjectS3, GetSigningJobSignedObjectS3Output] {
	value := pulumix.Apply[GetSigningJobSignedObject](o, func(v GetSigningJobSignedObject) []GetSigningJobSignedObjectS3 { return v.S3s })
	return pulumix.GArrayOutput[GetSigningJobSignedObjectS3, GetSigningJobSignedObjectS3Output]{OutputState: value.OutputState}
}

type GetSigningJobSignedObjectS3 struct {
	Bucket string `pulumi:"bucket"`
	Key    string `pulumi:"key"`
}

type GetSigningJobSignedObjectS3Args struct {
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	Key    pulumix.Input[string] `pulumi:"key"`
}

func (GetSigningJobSignedObjectS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobSignedObjectS3)(nil)).Elem()
}

func (i GetSigningJobSignedObjectS3Args) ToGetSigningJobSignedObjectS3Output() GetSigningJobSignedObjectS3Output {
	return i.ToGetSigningJobSignedObjectS3OutputWithContext(context.Background())
}

func (i GetSigningJobSignedObjectS3Args) ToGetSigningJobSignedObjectS3OutputWithContext(ctx context.Context) GetSigningJobSignedObjectS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSigningJobSignedObjectS3Output)
}

func (i *GetSigningJobSignedObjectS3Args) ToOutput(ctx context.Context) pulumix.Output[*GetSigningJobSignedObjectS3Args] {
	return pulumix.Val(i)
}

type GetSigningJobSignedObjectS3Output struct{ *pulumi.OutputState }

func (GetSigningJobSignedObjectS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobSignedObjectS3)(nil)).Elem()
}

func (o GetSigningJobSignedObjectS3Output) ToGetSigningJobSignedObjectS3Output() GetSigningJobSignedObjectS3Output {
	return o
}

func (o GetSigningJobSignedObjectS3Output) ToGetSigningJobSignedObjectS3OutputWithContext(ctx context.Context) GetSigningJobSignedObjectS3Output {
	return o
}

func (o GetSigningJobSignedObjectS3Output) ToOutput(ctx context.Context) pulumix.Output[GetSigningJobSignedObjectS3] {
	return pulumix.Output[GetSigningJobSignedObjectS3]{
		OutputState: o.OutputState,
	}
}

func (o GetSigningJobSignedObjectS3Output) Bucket() pulumix.Output[string] {
	return pulumix.Apply[GetSigningJobSignedObjectS3](o, func(v GetSigningJobSignedObjectS3) string { return v.Bucket })
}

func (o GetSigningJobSignedObjectS3Output) Key() pulumix.Output[string] {
	return pulumix.Apply[GetSigningJobSignedObjectS3](o, func(v GetSigningJobSignedObjectS3) string { return v.Key })
}

type GetSigningJobSource struct {
	S3s []GetSigningJobSourceS3 `pulumi:"s3s"`
}

type GetSigningJobSourceArgs struct {
	S3s pulumix.Input[[]*GetSigningJobSourceS3Args] `pulumi:"s3s"`
}

func (GetSigningJobSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobSource)(nil)).Elem()
}

func (i GetSigningJobSourceArgs) ToGetSigningJobSourceOutput() GetSigningJobSourceOutput {
	return i.ToGetSigningJobSourceOutputWithContext(context.Background())
}

func (i GetSigningJobSourceArgs) ToGetSigningJobSourceOutputWithContext(ctx context.Context) GetSigningJobSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSigningJobSourceOutput)
}

func (i *GetSigningJobSourceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSigningJobSourceArgs] {
	return pulumix.Val(i)
}

type GetSigningJobSourceOutput struct{ *pulumi.OutputState }

func (GetSigningJobSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobSource)(nil)).Elem()
}

func (o GetSigningJobSourceOutput) ToGetSigningJobSourceOutput() GetSigningJobSourceOutput {
	return o
}

func (o GetSigningJobSourceOutput) ToGetSigningJobSourceOutputWithContext(ctx context.Context) GetSigningJobSourceOutput {
	return o
}

func (o GetSigningJobSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetSigningJobSource] {
	return pulumix.Output[GetSigningJobSource]{
		OutputState: o.OutputState,
	}
}

func (o GetSigningJobSourceOutput) S3s() pulumix.GArrayOutput[GetSigningJobSourceS3, GetSigningJobSourceS3Output] {
	value := pulumix.Apply[GetSigningJobSource](o, func(v GetSigningJobSource) []GetSigningJobSourceS3 { return v.S3s })
	return pulumix.GArrayOutput[GetSigningJobSourceS3, GetSigningJobSourceS3Output]{OutputState: value.OutputState}
}

type GetSigningJobSourceS3 struct {
	Bucket  string `pulumi:"bucket"`
	Key     string `pulumi:"key"`
	Version string `pulumi:"version"`
}

type GetSigningJobSourceS3Args struct {
	Bucket  pulumix.Input[string] `pulumi:"bucket"`
	Key     pulumix.Input[string] `pulumi:"key"`
	Version pulumix.Input[string] `pulumi:"version"`
}

func (GetSigningJobSourceS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobSourceS3)(nil)).Elem()
}

func (i GetSigningJobSourceS3Args) ToGetSigningJobSourceS3Output() GetSigningJobSourceS3Output {
	return i.ToGetSigningJobSourceS3OutputWithContext(context.Background())
}

func (i GetSigningJobSourceS3Args) ToGetSigningJobSourceS3OutputWithContext(ctx context.Context) GetSigningJobSourceS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSigningJobSourceS3Output)
}

func (i *GetSigningJobSourceS3Args) ToOutput(ctx context.Context) pulumix.Output[*GetSigningJobSourceS3Args] {
	return pulumix.Val(i)
}

type GetSigningJobSourceS3Output struct{ *pulumi.OutputState }

func (GetSigningJobSourceS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningJobSourceS3)(nil)).Elem()
}

func (o GetSigningJobSourceS3Output) ToGetSigningJobSourceS3Output() GetSigningJobSourceS3Output {
	return o
}

func (o GetSigningJobSourceS3Output) ToGetSigningJobSourceS3OutputWithContext(ctx context.Context) GetSigningJobSourceS3Output {
	return o
}

func (o GetSigningJobSourceS3Output) ToOutput(ctx context.Context) pulumix.Output[GetSigningJobSourceS3] {
	return pulumix.Output[GetSigningJobSourceS3]{
		OutputState: o.OutputState,
	}
}

func (o GetSigningJobSourceS3Output) Bucket() pulumix.Output[string] {
	return pulumix.Apply[GetSigningJobSourceS3](o, func(v GetSigningJobSourceS3) string { return v.Bucket })
}

func (o GetSigningJobSourceS3Output) Key() pulumix.Output[string] {
	return pulumix.Apply[GetSigningJobSourceS3](o, func(v GetSigningJobSourceS3) string { return v.Key })
}

func (o GetSigningJobSourceS3Output) Version() pulumix.Output[string] {
	return pulumix.Apply[GetSigningJobSourceS3](o, func(v GetSigningJobSourceS3) string { return v.Version })
}

type GetSigningProfileRevocationRecord struct {
	RevocationEffectiveFrom string `pulumi:"revocationEffectiveFrom"`
	RevokedAt               string `pulumi:"revokedAt"`
	RevokedBy               string `pulumi:"revokedBy"`
}

type GetSigningProfileRevocationRecordArgs struct {
	RevocationEffectiveFrom pulumix.Input[string] `pulumi:"revocationEffectiveFrom"`
	RevokedAt               pulumix.Input[string] `pulumi:"revokedAt"`
	RevokedBy               pulumix.Input[string] `pulumi:"revokedBy"`
}

func (GetSigningProfileRevocationRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningProfileRevocationRecord)(nil)).Elem()
}

func (i GetSigningProfileRevocationRecordArgs) ToGetSigningProfileRevocationRecordOutput() GetSigningProfileRevocationRecordOutput {
	return i.ToGetSigningProfileRevocationRecordOutputWithContext(context.Background())
}

func (i GetSigningProfileRevocationRecordArgs) ToGetSigningProfileRevocationRecordOutputWithContext(ctx context.Context) GetSigningProfileRevocationRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSigningProfileRevocationRecordOutput)
}

func (i *GetSigningProfileRevocationRecordArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSigningProfileRevocationRecordArgs] {
	return pulumix.Val(i)
}

type GetSigningProfileRevocationRecordOutput struct{ *pulumi.OutputState }

func (GetSigningProfileRevocationRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningProfileRevocationRecord)(nil)).Elem()
}

func (o GetSigningProfileRevocationRecordOutput) ToGetSigningProfileRevocationRecordOutput() GetSigningProfileRevocationRecordOutput {
	return o
}

func (o GetSigningProfileRevocationRecordOutput) ToGetSigningProfileRevocationRecordOutputWithContext(ctx context.Context) GetSigningProfileRevocationRecordOutput {
	return o
}

func (o GetSigningProfileRevocationRecordOutput) ToOutput(ctx context.Context) pulumix.Output[GetSigningProfileRevocationRecord] {
	return pulumix.Output[GetSigningProfileRevocationRecord]{
		OutputState: o.OutputState,
	}
}

func (o GetSigningProfileRevocationRecordOutput) RevocationEffectiveFrom() pulumix.Output[string] {
	return pulumix.Apply[GetSigningProfileRevocationRecord](o, func(v GetSigningProfileRevocationRecord) string { return v.RevocationEffectiveFrom })
}

func (o GetSigningProfileRevocationRecordOutput) RevokedAt() pulumix.Output[string] {
	return pulumix.Apply[GetSigningProfileRevocationRecord](o, func(v GetSigningProfileRevocationRecord) string { return v.RevokedAt })
}

func (o GetSigningProfileRevocationRecordOutput) RevokedBy() pulumix.Output[string] {
	return pulumix.Apply[GetSigningProfileRevocationRecord](o, func(v GetSigningProfileRevocationRecord) string { return v.RevokedBy })
}

type GetSigningProfileSignatureValidityPeriod struct {
	Type  string `pulumi:"type"`
	Value int    `pulumi:"value"`
}

type GetSigningProfileSignatureValidityPeriodArgs struct {
	Type  pulumix.Input[string] `pulumi:"type"`
	Value pulumix.Input[int]    `pulumi:"value"`
}

func (GetSigningProfileSignatureValidityPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningProfileSignatureValidityPeriod)(nil)).Elem()
}

func (i GetSigningProfileSignatureValidityPeriodArgs) ToGetSigningProfileSignatureValidityPeriodOutput() GetSigningProfileSignatureValidityPeriodOutput {
	return i.ToGetSigningProfileSignatureValidityPeriodOutputWithContext(context.Background())
}

func (i GetSigningProfileSignatureValidityPeriodArgs) ToGetSigningProfileSignatureValidityPeriodOutputWithContext(ctx context.Context) GetSigningProfileSignatureValidityPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSigningProfileSignatureValidityPeriodOutput)
}

func (i *GetSigningProfileSignatureValidityPeriodArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSigningProfileSignatureValidityPeriodArgs] {
	return pulumix.Val(i)
}

type GetSigningProfileSignatureValidityPeriodOutput struct{ *pulumi.OutputState }

func (GetSigningProfileSignatureValidityPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningProfileSignatureValidityPeriod)(nil)).Elem()
}

func (o GetSigningProfileSignatureValidityPeriodOutput) ToGetSigningProfileSignatureValidityPeriodOutput() GetSigningProfileSignatureValidityPeriodOutput {
	return o
}

func (o GetSigningProfileSignatureValidityPeriodOutput) ToGetSigningProfileSignatureValidityPeriodOutputWithContext(ctx context.Context) GetSigningProfileSignatureValidityPeriodOutput {
	return o
}

func (o GetSigningProfileSignatureValidityPeriodOutput) ToOutput(ctx context.Context) pulumix.Output[GetSigningProfileSignatureValidityPeriod] {
	return pulumix.Output[GetSigningProfileSignatureValidityPeriod]{
		OutputState: o.OutputState,
	}
}

func (o GetSigningProfileSignatureValidityPeriodOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetSigningProfileSignatureValidityPeriod](o, func(v GetSigningProfileSignatureValidityPeriod) string { return v.Type })
}

func (o GetSigningProfileSignatureValidityPeriodOutput) Value() pulumix.Output[int] {
	return pulumix.Apply[GetSigningProfileSignatureValidityPeriod](o, func(v GetSigningProfileSignatureValidityPeriod) int { return v.Value })
}

func init() {
	pulumi.RegisterOutputType(SigningJobDestinationOutput{})
	pulumi.RegisterOutputType(SigningJobDestinationS3Output{})
	pulumi.RegisterOutputType(SigningJobRevocationRecordOutput{})
	pulumi.RegisterOutputType(SigningJobSignedObjectOutput{})
	pulumi.RegisterOutputType(SigningJobSignedObjectS3Output{})
	pulumi.RegisterOutputType(SigningJobSourceOutput{})
	pulumi.RegisterOutputType(SigningJobSourceS3Output{})
	pulumi.RegisterOutputType(SigningProfileRevocationRecordOutput{})
	pulumi.RegisterOutputType(SigningProfileSignatureValidityPeriodOutput{})
	pulumi.RegisterOutputType(SigningProfileSigningMaterialOutput{})
	pulumi.RegisterOutputType(GetSigningJobRevocationRecordOutput{})
	pulumi.RegisterOutputType(GetSigningJobSignedObjectOutput{})
	pulumi.RegisterOutputType(GetSigningJobSignedObjectS3Output{})
	pulumi.RegisterOutputType(GetSigningJobSourceOutput{})
	pulumi.RegisterOutputType(GetSigningJobSourceS3Output{})
	pulumi.RegisterOutputType(GetSigningProfileRevocationRecordOutput{})
	pulumi.RegisterOutputType(GetSigningProfileSignatureValidityPeriodOutput{})
}
