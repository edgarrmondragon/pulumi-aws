// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing a QuickSight Refresh Schedule.
type RefreshSchedule struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the refresh schedule.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId pulumix.Output[string] `pulumi:"awsAccountId"`
	// The ID of the dataset.
	DataSetId pulumix.Output[string] `pulumi:"dataSetId"`
	// The [refresh schedule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshSchedule.html). See schedule
	//
	// The following arguments are optional:
	Schedule pulumix.GPtrOutput[RefreshScheduleSchedule, RefreshScheduleScheduleOutput] `pulumi:"schedule"`
	// The ID of the refresh schedule.
	ScheduleId pulumix.Output[string] `pulumi:"scheduleId"`
}

// NewRefreshSchedule registers a new resource with the given unique name, arguments, and options.
func NewRefreshSchedule(ctx *pulumi.Context,
	name string, args *RefreshScheduleArgs, opts ...pulumi.ResourceOption) (*RefreshSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataSetId == nil {
		return nil, errors.New("invalid value for required argument 'DataSetId'")
	}
	if args.ScheduleId == nil {
		return nil, errors.New("invalid value for required argument 'ScheduleId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RefreshSchedule
	err := ctx.RegisterResource("aws:quicksight/refreshSchedule:RefreshSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRefreshSchedule gets an existing RefreshSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRefreshSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RefreshScheduleState, opts ...pulumi.ResourceOption) (*RefreshSchedule, error) {
	var resource RefreshSchedule
	err := ctx.ReadResource("aws:quicksight/refreshSchedule:RefreshSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RefreshSchedule resources.
type refreshScheduleState struct {
	// Amazon Resource Name (ARN) of the refresh schedule.
	Arn *string `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The ID of the dataset.
	DataSetId *string `pulumi:"dataSetId"`
	// The [refresh schedule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshSchedule.html). See schedule
	//
	// The following arguments are optional:
	Schedule *RefreshScheduleSchedule `pulumi:"schedule"`
	// The ID of the refresh schedule.
	ScheduleId *string `pulumi:"scheduleId"`
}

type RefreshScheduleState struct {
	// Amazon Resource Name (ARN) of the refresh schedule.
	Arn pulumix.Input[*string]
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// The ID of the dataset.
	DataSetId pulumix.Input[*string]
	// The [refresh schedule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshSchedule.html). See schedule
	//
	// The following arguments are optional:
	Schedule pulumix.Input[*RefreshScheduleScheduleArgs]
	// The ID of the refresh schedule.
	ScheduleId pulumix.Input[*string]
}

func (RefreshScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*refreshScheduleState)(nil)).Elem()
}

type refreshScheduleArgs struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The ID of the dataset.
	DataSetId string `pulumi:"dataSetId"`
	// The [refresh schedule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshSchedule.html). See schedule
	//
	// The following arguments are optional:
	Schedule *RefreshScheduleSchedule `pulumi:"schedule"`
	// The ID of the refresh schedule.
	ScheduleId string `pulumi:"scheduleId"`
}

// The set of arguments for constructing a RefreshSchedule resource.
type RefreshScheduleArgs struct {
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// The ID of the dataset.
	DataSetId pulumix.Input[string]
	// The [refresh schedule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshSchedule.html). See schedule
	//
	// The following arguments are optional:
	Schedule pulumix.Input[*RefreshScheduleScheduleArgs]
	// The ID of the refresh schedule.
	ScheduleId pulumix.Input[string]
}

func (RefreshScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*refreshScheduleArgs)(nil)).Elem()
}

type RefreshScheduleOutput struct{ *pulumi.OutputState }

func (RefreshScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshSchedule)(nil)).Elem()
}

func (o RefreshScheduleOutput) ToRefreshScheduleOutput() RefreshScheduleOutput {
	return o
}

func (o RefreshScheduleOutput) ToRefreshScheduleOutputWithContext(ctx context.Context) RefreshScheduleOutput {
	return o
}

func (o RefreshScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[RefreshSchedule] {
	return pulumix.Output[RefreshSchedule]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the refresh schedule.
func (o RefreshScheduleOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[RefreshSchedule](o, func(v RefreshSchedule) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS account ID.
func (o RefreshScheduleOutput) AwsAccountId() pulumix.Output[string] {
	value := pulumix.Apply[RefreshSchedule](o, func(v RefreshSchedule) pulumix.Output[string] { return v.AwsAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the dataset.
func (o RefreshScheduleOutput) DataSetId() pulumix.Output[string] {
	value := pulumix.Apply[RefreshSchedule](o, func(v RefreshSchedule) pulumix.Output[string] { return v.DataSetId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The [refresh schedule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshSchedule.html). See schedule
//
// The following arguments are optional:
func (o RefreshScheduleOutput) Schedule() pulumix.GPtrOutput[RefreshScheduleSchedule, RefreshScheduleScheduleOutput] {
	value := pulumix.Apply[RefreshSchedule](o, func(v RefreshSchedule) pulumix.GPtrOutput[RefreshScheduleSchedule, RefreshScheduleScheduleOutput] {
		return v.Schedule
	})
	unwrapped := pulumix.Flatten[*RefreshScheduleSchedule, pulumix.GPtrOutput[RefreshScheduleSchedule, RefreshScheduleScheduleOutput]](value)
	return pulumix.GPtrOutput[RefreshScheduleSchedule, RefreshScheduleScheduleOutput]{OutputState: unwrapped.OutputState}
}

// The ID of the refresh schedule.
func (o RefreshScheduleOutput) ScheduleId() pulumix.Output[string] {
	value := pulumix.Apply[RefreshSchedule](o, func(v RefreshSchedule) pulumix.Output[string] { return v.ScheduleId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(RefreshScheduleOutput{})
}
