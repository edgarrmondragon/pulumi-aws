// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Glue Development Endpoint resource.
type DevEndpoint struct {
	pulumi.CustomResourceState

	// A map of arguments used to configure the endpoint.
	Arguments pulumix.MapOutput[string] `pulumi:"arguments"`
	// The ARN of the endpoint.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The AWS availability zone where this endpoint is located.
	AvailabilityZone pulumix.Output[string] `pulumi:"availabilityZone"`
	// Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
	ExtraJarsS3Path pulumix.Output[*string] `pulumi:"extraJarsS3Path"`
	// Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
	ExtraPythonLibsS3Path pulumix.Output[*string] `pulumi:"extraPythonLibsS3Path"`
	// The reason for a current failure in this endpoint.
	FailureReason pulumix.Output[string] `pulumi:"failureReason"`
	// Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
	GlueVersion pulumix.Output[*string] `pulumi:"glueVersion"`
	// The name of this endpoint. It must be unique in your account.
	Name pulumix.Output[string] `pulumi:"name"`
	// The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `workerType`.
	NumberOfNodes pulumix.Output[*int] `pulumi:"numberOfNodes"`
	// The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
	NumberOfWorkers pulumix.Output[*int] `pulumi:"numberOfWorkers"`
	// A private IP address to access the endpoint within a VPC, if this endpoint is created within one.
	PrivateAddress pulumix.Output[string] `pulumi:"privateAddress"`
	// The public IP address used by this endpoint. The PublicAddress field is present only when you create a non-VPC endpoint.
	PublicAddress pulumix.Output[string] `pulumi:"publicAddress"`
	// The public key to be used by this endpoint for authentication.
	PublicKey pulumix.Output[*string] `pulumi:"publicKey"`
	// A list of public keys to be used by this endpoint for authentication.
	PublicKeys pulumix.ArrayOutput[string] `pulumi:"publicKeys"`
	// The IAM role for this endpoint.
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// The name of the Security Configuration structure to be used with this endpoint.
	SecurityConfiguration pulumix.Output[*string] `pulumi:"securityConfiguration"`
	// Security group IDs for the security groups to be used by this endpoint.
	SecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"securityGroupIds"`
	// The current status of this endpoint.
	Status pulumix.Output[string] `pulumi:"status"`
	// The subnet ID for the new endpoint to use.
	SubnetId pulumix.Output[*string] `pulumi:"subnetId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// he ID of the VPC used by this endpoint.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
	// The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
	WorkerType pulumix.Output[*string] `pulumi:"workerType"`
	// The YARN endpoint address used by this endpoint.
	YarnEndpointAddress pulumix.Output[string] `pulumi:"yarnEndpointAddress"`
	// The Apache Zeppelin port for the remote Apache Spark interpreter.
	ZeppelinRemoteSparkInterpreterPort pulumix.Output[int] `pulumi:"zeppelinRemoteSparkInterpreterPort"`
}

// NewDevEndpoint registers a new resource with the given unique name, arguments, and options.
func NewDevEndpoint(ctx *pulumi.Context,
	name string, args *DevEndpointArgs, opts ...pulumi.ResourceOption) (*DevEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DevEndpoint
	err := ctx.RegisterResource("aws:glue/devEndpoint:DevEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDevEndpoint gets an existing DevEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDevEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DevEndpointState, opts ...pulumi.ResourceOption) (*DevEndpoint, error) {
	var resource DevEndpoint
	err := ctx.ReadResource("aws:glue/devEndpoint:DevEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DevEndpoint resources.
type devEndpointState struct {
	// A map of arguments used to configure the endpoint.
	Arguments map[string]string `pulumi:"arguments"`
	// The ARN of the endpoint.
	Arn *string `pulumi:"arn"`
	// The AWS availability zone where this endpoint is located.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
	ExtraJarsS3Path *string `pulumi:"extraJarsS3Path"`
	// Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
	ExtraPythonLibsS3Path *string `pulumi:"extraPythonLibsS3Path"`
	// The reason for a current failure in this endpoint.
	FailureReason *string `pulumi:"failureReason"`
	// Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
	GlueVersion *string `pulumi:"glueVersion"`
	// The name of this endpoint. It must be unique in your account.
	Name *string `pulumi:"name"`
	// The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `workerType`.
	NumberOfNodes *int `pulumi:"numberOfNodes"`
	// The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// A private IP address to access the endpoint within a VPC, if this endpoint is created within one.
	PrivateAddress *string `pulumi:"privateAddress"`
	// The public IP address used by this endpoint. The PublicAddress field is present only when you create a non-VPC endpoint.
	PublicAddress *string `pulumi:"publicAddress"`
	// The public key to be used by this endpoint for authentication.
	PublicKey *string `pulumi:"publicKey"`
	// A list of public keys to be used by this endpoint for authentication.
	PublicKeys []string `pulumi:"publicKeys"`
	// The IAM role for this endpoint.
	RoleArn *string `pulumi:"roleArn"`
	// The name of the Security Configuration structure to be used with this endpoint.
	SecurityConfiguration *string `pulumi:"securityConfiguration"`
	// Security group IDs for the security groups to be used by this endpoint.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The current status of this endpoint.
	Status *string `pulumi:"status"`
	// The subnet ID for the new endpoint to use.
	SubnetId *string `pulumi:"subnetId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// he ID of the VPC used by this endpoint.
	VpcId *string `pulumi:"vpcId"`
	// The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
	WorkerType *string `pulumi:"workerType"`
	// The YARN endpoint address used by this endpoint.
	YarnEndpointAddress *string `pulumi:"yarnEndpointAddress"`
	// The Apache Zeppelin port for the remote Apache Spark interpreter.
	ZeppelinRemoteSparkInterpreterPort *int `pulumi:"zeppelinRemoteSparkInterpreterPort"`
}

type DevEndpointState struct {
	// A map of arguments used to configure the endpoint.
	Arguments pulumix.Input[map[string]string]
	// The ARN of the endpoint.
	Arn pulumix.Input[*string]
	// The AWS availability zone where this endpoint is located.
	AvailabilityZone pulumix.Input[*string]
	// Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
	ExtraJarsS3Path pulumix.Input[*string]
	// Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
	ExtraPythonLibsS3Path pulumix.Input[*string]
	// The reason for a current failure in this endpoint.
	FailureReason pulumix.Input[*string]
	// Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
	GlueVersion pulumix.Input[*string]
	// The name of this endpoint. It must be unique in your account.
	Name pulumix.Input[*string]
	// The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `workerType`.
	NumberOfNodes pulumix.Input[*int]
	// The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
	NumberOfWorkers pulumix.Input[*int]
	// A private IP address to access the endpoint within a VPC, if this endpoint is created within one.
	PrivateAddress pulumix.Input[*string]
	// The public IP address used by this endpoint. The PublicAddress field is present only when you create a non-VPC endpoint.
	PublicAddress pulumix.Input[*string]
	// The public key to be used by this endpoint for authentication.
	PublicKey pulumix.Input[*string]
	// A list of public keys to be used by this endpoint for authentication.
	PublicKeys pulumix.Input[[]string]
	// The IAM role for this endpoint.
	RoleArn pulumix.Input[*string]
	// The name of the Security Configuration structure to be used with this endpoint.
	SecurityConfiguration pulumix.Input[*string]
	// Security group IDs for the security groups to be used by this endpoint.
	SecurityGroupIds pulumix.Input[[]string]
	// The current status of this endpoint.
	Status pulumix.Input[*string]
	// The subnet ID for the new endpoint to use.
	SubnetId pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// he ID of the VPC used by this endpoint.
	VpcId pulumix.Input[*string]
	// The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
	WorkerType pulumix.Input[*string]
	// The YARN endpoint address used by this endpoint.
	YarnEndpointAddress pulumix.Input[*string]
	// The Apache Zeppelin port for the remote Apache Spark interpreter.
	ZeppelinRemoteSparkInterpreterPort pulumix.Input[*int]
}

func (DevEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*devEndpointState)(nil)).Elem()
}

type devEndpointArgs struct {
	// A map of arguments used to configure the endpoint.
	Arguments map[string]string `pulumi:"arguments"`
	// Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
	ExtraJarsS3Path *string `pulumi:"extraJarsS3Path"`
	// Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
	ExtraPythonLibsS3Path *string `pulumi:"extraPythonLibsS3Path"`
	// Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
	GlueVersion *string `pulumi:"glueVersion"`
	// The name of this endpoint. It must be unique in your account.
	Name *string `pulumi:"name"`
	// The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `workerType`.
	NumberOfNodes *int `pulumi:"numberOfNodes"`
	// The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// The public key to be used by this endpoint for authentication.
	PublicKey *string `pulumi:"publicKey"`
	// A list of public keys to be used by this endpoint for authentication.
	PublicKeys []string `pulumi:"publicKeys"`
	// The IAM role for this endpoint.
	RoleArn string `pulumi:"roleArn"`
	// The name of the Security Configuration structure to be used with this endpoint.
	SecurityConfiguration *string `pulumi:"securityConfiguration"`
	// Security group IDs for the security groups to be used by this endpoint.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The subnet ID for the new endpoint to use.
	SubnetId *string `pulumi:"subnetId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
	WorkerType *string `pulumi:"workerType"`
}

// The set of arguments for constructing a DevEndpoint resource.
type DevEndpointArgs struct {
	// A map of arguments used to configure the endpoint.
	Arguments pulumix.Input[map[string]string]
	// Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
	ExtraJarsS3Path pulumix.Input[*string]
	// Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
	ExtraPythonLibsS3Path pulumix.Input[*string]
	// Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
	GlueVersion pulumix.Input[*string]
	// The name of this endpoint. It must be unique in your account.
	Name pulumix.Input[*string]
	// The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `workerType`.
	NumberOfNodes pulumix.Input[*int]
	// The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
	NumberOfWorkers pulumix.Input[*int]
	// The public key to be used by this endpoint for authentication.
	PublicKey pulumix.Input[*string]
	// A list of public keys to be used by this endpoint for authentication.
	PublicKeys pulumix.Input[[]string]
	// The IAM role for this endpoint.
	RoleArn pulumix.Input[string]
	// The name of the Security Configuration structure to be used with this endpoint.
	SecurityConfiguration pulumix.Input[*string]
	// Security group IDs for the security groups to be used by this endpoint.
	SecurityGroupIds pulumix.Input[[]string]
	// The subnet ID for the new endpoint to use.
	SubnetId pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
	WorkerType pulumix.Input[*string]
}

func (DevEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*devEndpointArgs)(nil)).Elem()
}

type DevEndpointOutput struct{ *pulumi.OutputState }

func (DevEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevEndpoint)(nil)).Elem()
}

func (o DevEndpointOutput) ToDevEndpointOutput() DevEndpointOutput {
	return o
}

func (o DevEndpointOutput) ToDevEndpointOutputWithContext(ctx context.Context) DevEndpointOutput {
	return o
}

func (o DevEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[DevEndpoint] {
	return pulumix.Output[DevEndpoint]{
		OutputState: o.OutputState,
	}
}

// A map of arguments used to configure the endpoint.
func (o DevEndpointOutput) Arguments() pulumix.MapOutput[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.MapOutput[string] { return v.Arguments })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The ARN of the endpoint.
func (o DevEndpointOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS availability zone where this endpoint is located.
func (o DevEndpointOutput) AvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.AvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
func (o DevEndpointOutput) ExtraJarsS3Path() pulumix.Output[*string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[*string] { return v.ExtraJarsS3Path })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
func (o DevEndpointOutput) ExtraPythonLibsS3Path() pulumix.Output[*string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[*string] { return v.ExtraPythonLibsS3Path })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The reason for a current failure in this endpoint.
func (o DevEndpointOutput) FailureReason() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.FailureReason })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
func (o DevEndpointOutput) GlueVersion() pulumix.Output[*string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[*string] { return v.GlueVersion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of this endpoint. It must be unique in your account.
func (o DevEndpointOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `workerType`.
func (o DevEndpointOutput) NumberOfNodes() pulumix.Output[*int] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[*int] { return v.NumberOfNodes })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
func (o DevEndpointOutput) NumberOfWorkers() pulumix.Output[*int] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[*int] { return v.NumberOfWorkers })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// A private IP address to access the endpoint within a VPC, if this endpoint is created within one.
func (o DevEndpointOutput) PrivateAddress() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.PrivateAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The public IP address used by this endpoint. The PublicAddress field is present only when you create a non-VPC endpoint.
func (o DevEndpointOutput) PublicAddress() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.PublicAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The public key to be used by this endpoint for authentication.
func (o DevEndpointOutput) PublicKey() pulumix.Output[*string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[*string] { return v.PublicKey })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A list of public keys to be used by this endpoint for authentication.
func (o DevEndpointOutput) PublicKeys() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.ArrayOutput[string] { return v.PublicKeys })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The IAM role for this endpoint.
func (o DevEndpointOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the Security Configuration structure to be used with this endpoint.
func (o DevEndpointOutput) SecurityConfiguration() pulumix.Output[*string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[*string] { return v.SecurityConfiguration })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Security group IDs for the security groups to be used by this endpoint.
func (o DevEndpointOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.ArrayOutput[string] { return v.SecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The current status of this endpoint.
func (o DevEndpointOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The subnet ID for the new endpoint to use.
func (o DevEndpointOutput) SubnetId() pulumix.Output[*string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[*string] { return v.SubnetId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DevEndpointOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DevEndpointOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// he ID of the VPC used by this endpoint.
func (o DevEndpointOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
func (o DevEndpointOutput) WorkerType() pulumix.Output[*string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[*string] { return v.WorkerType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The YARN endpoint address used by this endpoint.
func (o DevEndpointOutput) YarnEndpointAddress() pulumix.Output[string] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[string] { return v.YarnEndpointAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Apache Zeppelin port for the remote Apache Spark interpreter.
func (o DevEndpointOutput) ZeppelinRemoteSparkInterpreterPort() pulumix.Output[int] {
	value := pulumix.Apply[DevEndpoint](o, func(v DevEndpoint) pulumix.Output[int] { return v.ZeppelinRemoteSparkInterpreterPort })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(DevEndpointOutput{})
}
