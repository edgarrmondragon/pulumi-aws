// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chime

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming configuration specifies whether media streaming is enabled for sending to Amazon Kinesis.
// It also sets the retention period, in hours, for the Amazon Kinesis data.
type VoiceConnectorStreaming struct {
	pulumi.CustomResourceState

	// The retention period, in hours, for the Amazon Kinesis data.
	DataRetention pulumix.Output[int] `pulumi:"dataRetention"`
	// When true, media streaming to Amazon Kinesis is turned off. Default: `false`
	Disabled pulumix.Output[*bool] `pulumi:"disabled"`
	// The media insights configuration. See `mediaInsightsConfiguration`.
	MediaInsightsConfiguration pulumix.GPtrOutput[VoiceConnectorStreamingMediaInsightsConfiguration, VoiceConnectorStreamingMediaInsightsConfigurationOutput] `pulumi:"mediaInsightsConfiguration"`
	// The streaming notification targets. Valid Values: `EventBridge | SNS | SQS`
	StreamingNotificationTargets pulumix.ArrayOutput[string] `pulumi:"streamingNotificationTargets"`
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumix.Output[string] `pulumi:"voiceConnectorId"`
}

// NewVoiceConnectorStreaming registers a new resource with the given unique name, arguments, and options.
func NewVoiceConnectorStreaming(ctx *pulumi.Context,
	name string, args *VoiceConnectorStreamingArgs, opts ...pulumi.ResourceOption) (*VoiceConnectorStreaming, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataRetention == nil {
		return nil, errors.New("invalid value for required argument 'DataRetention'")
	}
	if args.VoiceConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'VoiceConnectorId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VoiceConnectorStreaming
	err := ctx.RegisterResource("aws:chime/voiceConnectorStreaming:VoiceConnectorStreaming", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVoiceConnectorStreaming gets an existing VoiceConnectorStreaming resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVoiceConnectorStreaming(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VoiceConnectorStreamingState, opts ...pulumi.ResourceOption) (*VoiceConnectorStreaming, error) {
	var resource VoiceConnectorStreaming
	err := ctx.ReadResource("aws:chime/voiceConnectorStreaming:VoiceConnectorStreaming", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VoiceConnectorStreaming resources.
type voiceConnectorStreamingState struct {
	// The retention period, in hours, for the Amazon Kinesis data.
	DataRetention *int `pulumi:"dataRetention"`
	// When true, media streaming to Amazon Kinesis is turned off. Default: `false`
	Disabled *bool `pulumi:"disabled"`
	// The media insights configuration. See `mediaInsightsConfiguration`.
	MediaInsightsConfiguration *VoiceConnectorStreamingMediaInsightsConfiguration `pulumi:"mediaInsightsConfiguration"`
	// The streaming notification targets. Valid Values: `EventBridge | SNS | SQS`
	StreamingNotificationTargets []string `pulumi:"streamingNotificationTargets"`
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId *string `pulumi:"voiceConnectorId"`
}

type VoiceConnectorStreamingState struct {
	// The retention period, in hours, for the Amazon Kinesis data.
	DataRetention pulumix.Input[*int]
	// When true, media streaming to Amazon Kinesis is turned off. Default: `false`
	Disabled pulumix.Input[*bool]
	// The media insights configuration. See `mediaInsightsConfiguration`.
	MediaInsightsConfiguration pulumix.Input[*VoiceConnectorStreamingMediaInsightsConfigurationArgs]
	// The streaming notification targets. Valid Values: `EventBridge | SNS | SQS`
	StreamingNotificationTargets pulumix.Input[[]string]
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumix.Input[*string]
}

func (VoiceConnectorStreamingState) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorStreamingState)(nil)).Elem()
}

type voiceConnectorStreamingArgs struct {
	// The retention period, in hours, for the Amazon Kinesis data.
	DataRetention int `pulumi:"dataRetention"`
	// When true, media streaming to Amazon Kinesis is turned off. Default: `false`
	Disabled *bool `pulumi:"disabled"`
	// The media insights configuration. See `mediaInsightsConfiguration`.
	MediaInsightsConfiguration *VoiceConnectorStreamingMediaInsightsConfiguration `pulumi:"mediaInsightsConfiguration"`
	// The streaming notification targets. Valid Values: `EventBridge | SNS | SQS`
	StreamingNotificationTargets []string `pulumi:"streamingNotificationTargets"`
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId string `pulumi:"voiceConnectorId"`
}

// The set of arguments for constructing a VoiceConnectorStreaming resource.
type VoiceConnectorStreamingArgs struct {
	// The retention period, in hours, for the Amazon Kinesis data.
	DataRetention pulumix.Input[int]
	// When true, media streaming to Amazon Kinesis is turned off. Default: `false`
	Disabled pulumix.Input[*bool]
	// The media insights configuration. See `mediaInsightsConfiguration`.
	MediaInsightsConfiguration pulumix.Input[*VoiceConnectorStreamingMediaInsightsConfigurationArgs]
	// The streaming notification targets. Valid Values: `EventBridge | SNS | SQS`
	StreamingNotificationTargets pulumix.Input[[]string]
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumix.Input[string]
}

func (VoiceConnectorStreamingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorStreamingArgs)(nil)).Elem()
}

type VoiceConnectorStreamingOutput struct{ *pulumi.OutputState }

func (VoiceConnectorStreamingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorStreaming)(nil)).Elem()
}

func (o VoiceConnectorStreamingOutput) ToVoiceConnectorStreamingOutput() VoiceConnectorStreamingOutput {
	return o
}

func (o VoiceConnectorStreamingOutput) ToVoiceConnectorStreamingOutputWithContext(ctx context.Context) VoiceConnectorStreamingOutput {
	return o
}

func (o VoiceConnectorStreamingOutput) ToOutput(ctx context.Context) pulumix.Output[VoiceConnectorStreaming] {
	return pulumix.Output[VoiceConnectorStreaming]{
		OutputState: o.OutputState,
	}
}

// The retention period, in hours, for the Amazon Kinesis data.
func (o VoiceConnectorStreamingOutput) DataRetention() pulumix.Output[int] {
	value := pulumix.Apply[VoiceConnectorStreaming](o, func(v VoiceConnectorStreaming) pulumix.Output[int] { return v.DataRetention })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// When true, media streaming to Amazon Kinesis is turned off. Default: `false`
func (o VoiceConnectorStreamingOutput) Disabled() pulumix.Output[*bool] {
	value := pulumix.Apply[VoiceConnectorStreaming](o, func(v VoiceConnectorStreaming) pulumix.Output[*bool] { return v.Disabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The media insights configuration. See `mediaInsightsConfiguration`.
func (o VoiceConnectorStreamingOutput) MediaInsightsConfiguration() pulumix.GPtrOutput[VoiceConnectorStreamingMediaInsightsConfiguration, VoiceConnectorStreamingMediaInsightsConfigurationOutput] {
	value := pulumix.Apply[VoiceConnectorStreaming](o, func(v VoiceConnectorStreaming) pulumix.GPtrOutput[VoiceConnectorStreamingMediaInsightsConfiguration, VoiceConnectorStreamingMediaInsightsConfigurationOutput] {
		return v.MediaInsightsConfiguration
	})
	unwrapped := pulumix.Flatten[*VoiceConnectorStreamingMediaInsightsConfiguration, pulumix.GPtrOutput[VoiceConnectorStreamingMediaInsightsConfiguration, VoiceConnectorStreamingMediaInsightsConfigurationOutput]](value)
	return pulumix.GPtrOutput[VoiceConnectorStreamingMediaInsightsConfiguration, VoiceConnectorStreamingMediaInsightsConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The streaming notification targets. Valid Values: `EventBridge | SNS | SQS`
func (o VoiceConnectorStreamingOutput) StreamingNotificationTargets() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[VoiceConnectorStreaming](o, func(v VoiceConnectorStreaming) pulumix.ArrayOutput[string] { return v.StreamingNotificationTargets })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The Amazon Chime Voice Connector ID.
func (o VoiceConnectorStreamingOutput) VoiceConnectorId() pulumix.Output[string] {
	value := pulumix.Apply[VoiceConnectorStreaming](o, func(v VoiceConnectorStreaming) pulumix.Output[string] { return v.VoiceConnectorId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(VoiceConnectorStreamingOutput{})
}
