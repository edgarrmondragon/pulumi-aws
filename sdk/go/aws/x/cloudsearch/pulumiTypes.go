// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudsearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DomainEndpointOptions struct {
	// Enables or disables the requirement that all requests to the domain arrive over HTTPS.
	EnforceHttps *bool `pulumi:"enforceHttps"`
	// The minimum required TLS version. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DomainEndpointOptions.html) for valid values.
	TlsSecurityPolicy *string `pulumi:"tlsSecurityPolicy"`
}

type DomainEndpointOptionsArgs struct {
	// Enables or disables the requirement that all requests to the domain arrive over HTTPS.
	EnforceHttps pulumix.Input[*bool] `pulumi:"enforceHttps"`
	// The minimum required TLS version. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DomainEndpointOptions.html) for valid values.
	TlsSecurityPolicy pulumix.Input[*string] `pulumi:"tlsSecurityPolicy"`
}

func (DomainEndpointOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEndpointOptions)(nil)).Elem()
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsOutput() DomainEndpointOptionsOutput {
	return i.ToDomainEndpointOptionsOutputWithContext(context.Background())
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsOutputWithContext(ctx context.Context) DomainEndpointOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEndpointOptionsOutput)
}

func (i *DomainEndpointOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainEndpointOptionsArgs] {
	return pulumix.Val(i)
}

type DomainEndpointOptionsOutput struct{ *pulumi.OutputState }

func (DomainEndpointOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEndpointOptions)(nil)).Elem()
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsOutput() DomainEndpointOptionsOutput {
	return o
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsOutputWithContext(ctx context.Context) DomainEndpointOptionsOutput {
	return o
}

func (o DomainEndpointOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainEndpointOptions] {
	return pulumix.Output[DomainEndpointOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the requirement that all requests to the domain arrive over HTTPS.
func (o DomainEndpointOptionsOutput) EnforceHttps() pulumix.Output[*bool] {
	return pulumix.Apply[DomainEndpointOptions](o, func(v DomainEndpointOptions) *bool { return v.EnforceHttps })
}

// The minimum required TLS version. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DomainEndpointOptions.html) for valid values.
func (o DomainEndpointOptionsOutput) TlsSecurityPolicy() pulumix.Output[*string] {
	return pulumix.Apply[DomainEndpointOptions](o, func(v DomainEndpointOptions) *string { return v.TlsSecurityPolicy })
}

type DomainIndexField struct {
	// The analysis scheme you want to use for a `text` field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
	AnalysisScheme *string `pulumi:"analysisScheme"`
	// The default value for the field. This value is used when no value is specified for the field in the document data.
	DefaultValue *string `pulumi:"defaultValue"`
	// You can get facet information by enabling this.
	Facet *bool `pulumi:"facet"`
	// You can highlight information.
	Highlight *bool `pulumi:"highlight"`
	// A unique name for the field. Field names must begin with a letter and be at least 3 and no more than 64 characters long. The allowed characters are: `a`-`z` (lower-case letters), `0`-`9`, and `_` (underscore). The name `score` is reserved and cannot be used as a field name.
	Name string `pulumi:"name"`
	// You can enable returning the value of all searchable fields.
	Return *bool `pulumi:"return"`
	// You can set whether this index should be searchable or not.
	Search *bool `pulumi:"search"`
	// You can enable the property to be sortable.
	Sort *bool `pulumi:"sort"`
	// A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.
	SourceFields *string `pulumi:"sourceFields"`
	// The field type. Valid values: `date`, `date-array`, `double`, `double-array`, `int`, `int-array`, `literal`, `literal-array`, `text`, `text-array`.
	Type string `pulumi:"type"`
}

type DomainIndexFieldArgs struct {
	// The analysis scheme you want to use for a `text` field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
	AnalysisScheme pulumix.Input[*string] `pulumi:"analysisScheme"`
	// The default value for the field. This value is used when no value is specified for the field in the document data.
	DefaultValue pulumix.Input[*string] `pulumi:"defaultValue"`
	// You can get facet information by enabling this.
	Facet pulumix.Input[*bool] `pulumi:"facet"`
	// You can highlight information.
	Highlight pulumix.Input[*bool] `pulumi:"highlight"`
	// A unique name for the field. Field names must begin with a letter and be at least 3 and no more than 64 characters long. The allowed characters are: `a`-`z` (lower-case letters), `0`-`9`, and `_` (underscore). The name `score` is reserved and cannot be used as a field name.
	Name pulumix.Input[string] `pulumi:"name"`
	// You can enable returning the value of all searchable fields.
	Return pulumix.Input[*bool] `pulumi:"return"`
	// You can set whether this index should be searchable or not.
	Search pulumix.Input[*bool] `pulumi:"search"`
	// You can enable the property to be sortable.
	Sort pulumix.Input[*bool] `pulumi:"sort"`
	// A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.
	SourceFields pulumix.Input[*string] `pulumi:"sourceFields"`
	// The field type. Valid values: `date`, `date-array`, `double`, `double-array`, `int`, `int-array`, `literal`, `literal-array`, `text`, `text-array`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (DomainIndexFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIndexField)(nil)).Elem()
}

func (i DomainIndexFieldArgs) ToDomainIndexFieldOutput() DomainIndexFieldOutput {
	return i.ToDomainIndexFieldOutputWithContext(context.Background())
}

func (i DomainIndexFieldArgs) ToDomainIndexFieldOutputWithContext(ctx context.Context) DomainIndexFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIndexFieldOutput)
}

func (i *DomainIndexFieldArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainIndexFieldArgs] {
	return pulumix.Val(i)
}

type DomainIndexFieldOutput struct{ *pulumi.OutputState }

func (DomainIndexFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIndexField)(nil)).Elem()
}

func (o DomainIndexFieldOutput) ToDomainIndexFieldOutput() DomainIndexFieldOutput {
	return o
}

func (o DomainIndexFieldOutput) ToDomainIndexFieldOutputWithContext(ctx context.Context) DomainIndexFieldOutput {
	return o
}

func (o DomainIndexFieldOutput) ToOutput(ctx context.Context) pulumix.Output[DomainIndexField] {
	return pulumix.Output[DomainIndexField]{
		OutputState: o.OutputState,
	}
}

// The analysis scheme you want to use for a `text` field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
func (o DomainIndexFieldOutput) AnalysisScheme() pulumix.Output[*string] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) *string { return v.AnalysisScheme })
}

// The default value for the field. This value is used when no value is specified for the field in the document data.
func (o DomainIndexFieldOutput) DefaultValue() pulumix.Output[*string] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) *string { return v.DefaultValue })
}

// You can get facet information by enabling this.
func (o DomainIndexFieldOutput) Facet() pulumix.Output[*bool] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) *bool { return v.Facet })
}

// You can highlight information.
func (o DomainIndexFieldOutput) Highlight() pulumix.Output[*bool] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) *bool { return v.Highlight })
}

// A unique name for the field. Field names must begin with a letter and be at least 3 and no more than 64 characters long. The allowed characters are: `a`-`z` (lower-case letters), `0`-`9`, and `_` (underscore). The name `score` is reserved and cannot be used as a field name.
func (o DomainIndexFieldOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) string { return v.Name })
}

// You can enable returning the value of all searchable fields.
func (o DomainIndexFieldOutput) Return() pulumix.Output[*bool] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) *bool { return v.Return })
}

// You can set whether this index should be searchable or not.
func (o DomainIndexFieldOutput) Search() pulumix.Output[*bool] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) *bool { return v.Search })
}

// You can enable the property to be sortable.
func (o DomainIndexFieldOutput) Sort() pulumix.Output[*bool] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) *bool { return v.Sort })
}

// A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.
func (o DomainIndexFieldOutput) SourceFields() pulumix.Output[*string] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) *string { return v.SourceFields })
}

// The field type. Valid values: `date`, `date-array`, `double`, `double-array`, `int`, `int-array`, `literal`, `literal-array`, `text`, `text-array`.
func (o DomainIndexFieldOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[DomainIndexField](o, func(v DomainIndexField) string { return v.Type })
}

type DomainScalingParameters struct {
	// The instance type that you want to preconfigure for your domain. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_ScalingParameters.html) for valid values.
	DesiredInstanceType *string `pulumi:"desiredInstanceType"`
	// The number of partitions you want to preconfigure for your domain. Only valid when you select `search.2xlarge` as the instance type.
	DesiredPartitionCount *int `pulumi:"desiredPartitionCount"`
	// The number of replicas you want to preconfigure for each index partition.
	DesiredReplicationCount *int `pulumi:"desiredReplicationCount"`
}

type DomainScalingParametersArgs struct {
	// The instance type that you want to preconfigure for your domain. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_ScalingParameters.html) for valid values.
	DesiredInstanceType pulumix.Input[*string] `pulumi:"desiredInstanceType"`
	// The number of partitions you want to preconfigure for your domain. Only valid when you select `search.2xlarge` as the instance type.
	DesiredPartitionCount pulumix.Input[*int] `pulumi:"desiredPartitionCount"`
	// The number of replicas you want to preconfigure for each index partition.
	DesiredReplicationCount pulumix.Input[*int] `pulumi:"desiredReplicationCount"`
}

func (DomainScalingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainScalingParameters)(nil)).Elem()
}

func (i DomainScalingParametersArgs) ToDomainScalingParametersOutput() DomainScalingParametersOutput {
	return i.ToDomainScalingParametersOutputWithContext(context.Background())
}

func (i DomainScalingParametersArgs) ToDomainScalingParametersOutputWithContext(ctx context.Context) DomainScalingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainScalingParametersOutput)
}

func (i *DomainScalingParametersArgs) ToOutput(ctx context.Context) pulumix.Output[*DomainScalingParametersArgs] {
	return pulumix.Val(i)
}

type DomainScalingParametersOutput struct{ *pulumi.OutputState }

func (DomainScalingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainScalingParameters)(nil)).Elem()
}

func (o DomainScalingParametersOutput) ToDomainScalingParametersOutput() DomainScalingParametersOutput {
	return o
}

func (o DomainScalingParametersOutput) ToDomainScalingParametersOutputWithContext(ctx context.Context) DomainScalingParametersOutput {
	return o
}

func (o DomainScalingParametersOutput) ToOutput(ctx context.Context) pulumix.Output[DomainScalingParameters] {
	return pulumix.Output[DomainScalingParameters]{
		OutputState: o.OutputState,
	}
}

// The instance type that you want to preconfigure for your domain. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_ScalingParameters.html) for valid values.
func (o DomainScalingParametersOutput) DesiredInstanceType() pulumix.Output[*string] {
	return pulumix.Apply[DomainScalingParameters](o, func(v DomainScalingParameters) *string { return v.DesiredInstanceType })
}

// The number of partitions you want to preconfigure for your domain. Only valid when you select `search.2xlarge` as the instance type.
func (o DomainScalingParametersOutput) DesiredPartitionCount() pulumix.Output[*int] {
	return pulumix.Apply[DomainScalingParameters](o, func(v DomainScalingParameters) *int { return v.DesiredPartitionCount })
}

// The number of replicas you want to preconfigure for each index partition.
func (o DomainScalingParametersOutput) DesiredReplicationCount() pulumix.Output[*int] {
	return pulumix.Apply[DomainScalingParameters](o, func(v DomainScalingParameters) *int { return v.DesiredReplicationCount })
}

func init() {
	pulumi.RegisterOutputType(DomainEndpointOptionsOutput{})
	pulumi.RegisterOutputType(DomainIndexFieldOutput{})
	pulumi.RegisterOutputType(DomainScalingParametersOutput{})
}
