// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a WAFv2 IP Set Resource
type IpSet struct {
	pulumi.CustomResourceState

	// Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses. All addresses must be specified using Classless Inter-Domain Routing (CIDR) notation. WAF supports all IPv4 and IPv6 CIDR ranges except for `/0`.
	Addresses pulumix.ArrayOutput[string] `pulumi:"addresses"`
	// The Amazon Resource Name (ARN) of the IP set.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A friendly description of the IP set.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Specify IPV4 or IPV6. Valid values are `IPV4` or `IPV6`.
	IpAddressVersion pulumix.Output[string] `pulumi:"ipAddressVersion"`
	LockToken        pulumix.Output[string] `pulumi:"lockToken"`
	// A friendly name of the IP set.
	Name pulumix.Output[string] `pulumi:"name"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the Region US East (N. Virginia).
	Scope pulumix.Output[string] `pulumi:"scope"`
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewIpSet registers a new resource with the given unique name, arguments, and options.
func NewIpSet(ctx *pulumi.Context,
	name string, args *IpSetArgs, opts ...pulumi.ResourceOption) (*IpSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpAddressVersion == nil {
		return nil, errors.New("invalid value for required argument 'IpAddressVersion'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpSet
	err := ctx.RegisterResource("aws:wafv2/ipSet:IpSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpSet gets an existing IpSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpSetState, opts ...pulumi.ResourceOption) (*IpSet, error) {
	var resource IpSet
	err := ctx.ReadResource("aws:wafv2/ipSet:IpSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpSet resources.
type ipSetState struct {
	// Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses. All addresses must be specified using Classless Inter-Domain Routing (CIDR) notation. WAF supports all IPv4 and IPv6 CIDR ranges except for `/0`.
	Addresses []string `pulumi:"addresses"`
	// The Amazon Resource Name (ARN) of the IP set.
	Arn *string `pulumi:"arn"`
	// A friendly description of the IP set.
	Description *string `pulumi:"description"`
	// Specify IPV4 or IPV6. Valid values are `IPV4` or `IPV6`.
	IpAddressVersion *string `pulumi:"ipAddressVersion"`
	LockToken        *string `pulumi:"lockToken"`
	// A friendly name of the IP set.
	Name *string `pulumi:"name"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the Region US East (N. Virginia).
	Scope *string `pulumi:"scope"`
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type IpSetState struct {
	// Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses. All addresses must be specified using Classless Inter-Domain Routing (CIDR) notation. WAF supports all IPv4 and IPv6 CIDR ranges except for `/0`.
	Addresses pulumix.Input[[]string]
	// The Amazon Resource Name (ARN) of the IP set.
	Arn pulumix.Input[*string]
	// A friendly description of the IP set.
	Description pulumix.Input[*string]
	// Specify IPV4 or IPV6. Valid values are `IPV4` or `IPV6`.
	IpAddressVersion pulumix.Input[*string]
	LockToken        pulumix.Input[*string]
	// A friendly name of the IP set.
	Name pulumix.Input[*string]
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the Region US East (N. Virginia).
	Scope pulumix.Input[*string]
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (IpSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipSetState)(nil)).Elem()
}

type ipSetArgs struct {
	// Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses. All addresses must be specified using Classless Inter-Domain Routing (CIDR) notation. WAF supports all IPv4 and IPv6 CIDR ranges except for `/0`.
	Addresses []string `pulumi:"addresses"`
	// A friendly description of the IP set.
	Description *string `pulumi:"description"`
	// Specify IPV4 or IPV6. Valid values are `IPV4` or `IPV6`.
	IpAddressVersion string `pulumi:"ipAddressVersion"`
	// A friendly name of the IP set.
	Name *string `pulumi:"name"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the Region US East (N. Virginia).
	Scope string `pulumi:"scope"`
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a IpSet resource.
type IpSetArgs struct {
	// Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses. All addresses must be specified using Classless Inter-Domain Routing (CIDR) notation. WAF supports all IPv4 and IPv6 CIDR ranges except for `/0`.
	Addresses pulumix.Input[[]string]
	// A friendly description of the IP set.
	Description pulumix.Input[*string]
	// Specify IPV4 or IPV6. Valid values are `IPV4` or `IPV6`.
	IpAddressVersion pulumix.Input[string]
	// A friendly name of the IP set.
	Name pulumix.Input[*string]
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the Region US East (N. Virginia).
	Scope pulumix.Input[string]
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (IpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipSetArgs)(nil)).Elem()
}

type IpSetOutput struct{ *pulumi.OutputState }

func (IpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSet)(nil)).Elem()
}

func (o IpSetOutput) ToIpSetOutput() IpSetOutput {
	return o
}

func (o IpSetOutput) ToIpSetOutputWithContext(ctx context.Context) IpSetOutput {
	return o
}

func (o IpSetOutput) ToOutput(ctx context.Context) pulumix.Output[IpSet] {
	return pulumix.Output[IpSet]{
		OutputState: o.OutputState,
	}
}

// Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses. All addresses must be specified using Classless Inter-Domain Routing (CIDR) notation. WAF supports all IPv4 and IPv6 CIDR ranges except for `/0`.
func (o IpSetOutput) Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[IpSet](o, func(v IpSet) pulumix.ArrayOutput[string] { return v.Addresses })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) of the IP set.
func (o IpSetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[IpSet](o, func(v IpSet) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A friendly description of the IP set.
func (o IpSetOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[IpSet](o, func(v IpSet) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specify IPV4 or IPV6. Valid values are `IPV4` or `IPV6`.
func (o IpSetOutput) IpAddressVersion() pulumix.Output[string] {
	value := pulumix.Apply[IpSet](o, func(v IpSet) pulumix.Output[string] { return v.IpAddressVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o IpSetOutput) LockToken() pulumix.Output[string] {
	value := pulumix.Apply[IpSet](o, func(v IpSet) pulumix.Output[string] { return v.LockToken })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A friendly name of the IP set.
func (o IpSetOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[IpSet](o, func(v IpSet) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the Region US East (N. Virginia).
func (o IpSetOutput) Scope() pulumix.Output[string] {
	value := pulumix.Apply[IpSet](o, func(v IpSet) pulumix.Output[string] { return v.Scope })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o IpSetOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[IpSet](o, func(v IpSet) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o IpSetOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[IpSet](o, func(v IpSet) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(IpSetOutput{})
}
