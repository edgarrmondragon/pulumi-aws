// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages API Gateway Stage Method Settings. For example, CloudWatch logging and metrics.
//
// > **NOTE:** We recommend using this resource in conjunction with the `apigateway.Stage` resource instead of a stage managed by the `apigateway.Deployment` resource optional `stageName` argument. Stages managed by the `apigateway.Deployment` resource are recreated on redeployment and this resource will require a second apply to recreate the method settings.
type MethodSettings struct {
	pulumi.CustomResourceState

	// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
	MethodPath pulumix.Output[string] `pulumi:"methodPath"`
	// ID of the REST API
	RestApi pulumix.Output[string] `pulumi:"restApi"`
	// Settings block, see below.
	Settings pulumix.GPtrOutput[MethodSettingsSettings, MethodSettingsSettingsOutput] `pulumi:"settings"`
	// Name of the stage
	StageName pulumix.Output[string] `pulumi:"stageName"`
}

// NewMethodSettings registers a new resource with the given unique name, arguments, and options.
func NewMethodSettings(ctx *pulumi.Context,
	name string, args *MethodSettingsArgs, opts ...pulumi.ResourceOption) (*MethodSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MethodPath == nil {
		return nil, errors.New("invalid value for required argument 'MethodPath'")
	}
	if args.RestApi == nil {
		return nil, errors.New("invalid value for required argument 'RestApi'")
	}
	if args.Settings == nil {
		return nil, errors.New("invalid value for required argument 'Settings'")
	}
	if args.StageName == nil {
		return nil, errors.New("invalid value for required argument 'StageName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MethodSettings
	err := ctx.RegisterResource("aws:apigateway/methodSettings:MethodSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMethodSettings gets an existing MethodSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMethodSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MethodSettingsState, opts ...pulumi.ResourceOption) (*MethodSettings, error) {
	var resource MethodSettings
	err := ctx.ReadResource("aws:apigateway/methodSettings:MethodSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MethodSettings resources.
type methodSettingsState struct {
	// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
	MethodPath *string `pulumi:"methodPath"`
	// ID of the REST API
	RestApi interface{} `pulumi:"restApi"`
	// Settings block, see below.
	Settings *MethodSettingsSettings `pulumi:"settings"`
	// Name of the stage
	StageName *string `pulumi:"stageName"`
}

type MethodSettingsState struct {
	// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
	MethodPath pulumix.Input[*string]
	// ID of the REST API
	RestApi pulumix.Input[*any]
	// Settings block, see below.
	Settings pulumix.Input[*MethodSettingsSettingsArgs]
	// Name of the stage
	StageName pulumix.Input[*string]
}

func (MethodSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*methodSettingsState)(nil)).Elem()
}

type methodSettingsArgs struct {
	// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
	MethodPath string `pulumi:"methodPath"`
	// ID of the REST API
	RestApi interface{} `pulumi:"restApi"`
	// Settings block, see below.
	Settings MethodSettingsSettings `pulumi:"settings"`
	// Name of the stage
	StageName string `pulumi:"stageName"`
}

// The set of arguments for constructing a MethodSettings resource.
type MethodSettingsArgs struct {
	// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
	MethodPath pulumix.Input[string]
	// ID of the REST API
	RestApi pulumix.Input[any]
	// Settings block, see below.
	Settings pulumix.Input[*MethodSettingsSettingsArgs]
	// Name of the stage
	StageName pulumix.Input[string]
}

func (MethodSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*methodSettingsArgs)(nil)).Elem()
}

type MethodSettingsOutput struct{ *pulumi.OutputState }

func (MethodSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MethodSettings)(nil)).Elem()
}

func (o MethodSettingsOutput) ToMethodSettingsOutput() MethodSettingsOutput {
	return o
}

func (o MethodSettingsOutput) ToMethodSettingsOutputWithContext(ctx context.Context) MethodSettingsOutput {
	return o
}

func (o MethodSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[MethodSettings] {
	return pulumix.Output[MethodSettings]{
		OutputState: o.OutputState,
	}
}

// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
func (o MethodSettingsOutput) MethodPath() pulumix.Output[string] {
	value := pulumix.Apply[MethodSettings](o, func(v MethodSettings) pulumix.Output[string] { return v.MethodPath })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the REST API
func (o MethodSettingsOutput) RestApi() pulumix.Output[string] {
	value := pulumix.Apply[MethodSettings](o, func(v MethodSettings) pulumix.Output[string] { return v.RestApi })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Settings block, see below.
func (o MethodSettingsOutput) Settings() pulumix.GPtrOutput[MethodSettingsSettings, MethodSettingsSettingsOutput] {
	value := pulumix.Apply[MethodSettings](o, func(v MethodSettings) pulumix.GPtrOutput[MethodSettingsSettings, MethodSettingsSettingsOutput] {
		return v.Settings
	})
	unwrapped := pulumix.Flatten[*MethodSettingsSettings, pulumix.GPtrOutput[MethodSettingsSettings, MethodSettingsSettingsOutput]](value)
	return pulumix.GPtrOutput[MethodSettingsSettings, MethodSettingsSettingsOutput]{OutputState: unwrapped.OutputState}
}

// Name of the stage
func (o MethodSettingsOutput) StageName() pulumix.Output[string] {
	value := pulumix.Apply[MethodSettings](o, func(v MethodSettings) pulumix.Output[string] { return v.StageName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(MethodSettingsOutput{})
}
