// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourcegroups

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Resource Group.
type Group struct {
	pulumi.CustomResourceState

	// The ARN assigned by AWS for this resource group.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. See below for details.
	Configurations pulumix.GArrayOutput[GroupConfiguration, GroupConfigurationOutput] `pulumi:"configurations"`
	// A description of the resource group.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
	Name pulumix.Output[string] `pulumi:"name"`
	// A `resourceQuery` block. Resource queries are documented below.
	ResourceQuery pulumix.GPtrOutput[GroupResourceQuery, GroupResourceQueryOutput] `pulumi:"resourceQuery"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewGroup registers a new resource with the given unique name, arguments, and options.
func NewGroup(ctx *pulumi.Context,
	name string, args *GroupArgs, opts ...pulumi.ResourceOption) (*Group, error) {
	if args == nil {
		args = &GroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Group
	err := ctx.RegisterResource("aws:resourcegroups/group:Group", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroup gets an existing Group resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupState, opts ...pulumi.ResourceOption) (*Group, error) {
	var resource Group
	err := ctx.ReadResource("aws:resourcegroups/group:Group", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Group resources.
type groupState struct {
	// The ARN assigned by AWS for this resource group.
	Arn *string `pulumi:"arn"`
	// A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. See below for details.
	Configurations []GroupConfiguration `pulumi:"configurations"`
	// A description of the resource group.
	Description *string `pulumi:"description"`
	// The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
	Name *string `pulumi:"name"`
	// A `resourceQuery` block. Resource queries are documented below.
	ResourceQuery *GroupResourceQuery `pulumi:"resourceQuery"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type GroupState struct {
	// The ARN assigned by AWS for this resource group.
	Arn pulumix.Input[*string]
	// A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. See below for details.
	Configurations pulumix.Input[[]*GroupConfigurationArgs]
	// A description of the resource group.
	Description pulumix.Input[*string]
	// The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
	Name pulumix.Input[*string]
	// A `resourceQuery` block. Resource queries are documented below.
	ResourceQuery pulumix.Input[*GroupResourceQueryArgs]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (GroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupState)(nil)).Elem()
}

type groupArgs struct {
	// A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. See below for details.
	Configurations []GroupConfiguration `pulumi:"configurations"`
	// A description of the resource group.
	Description *string `pulumi:"description"`
	// The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
	Name *string `pulumi:"name"`
	// A `resourceQuery` block. Resource queries are documented below.
	ResourceQuery *GroupResourceQuery `pulumi:"resourceQuery"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Group resource.
type GroupArgs struct {
	// A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. See below for details.
	Configurations pulumix.Input[[]*GroupConfigurationArgs]
	// A description of the resource group.
	Description pulumix.Input[*string]
	// The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
	Name pulumix.Input[*string]
	// A `resourceQuery` block. Resource queries are documented below.
	ResourceQuery pulumix.Input[*GroupResourceQueryArgs]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupArgs)(nil)).Elem()
}

type GroupOutput struct{ *pulumi.OutputState }

func (GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Group)(nil)).Elem()
}

func (o GroupOutput) ToGroupOutput() GroupOutput {
	return o
}

func (o GroupOutput) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return o
}

func (o GroupOutput) ToOutput(ctx context.Context) pulumix.Output[Group] {
	return pulumix.Output[Group]{
		OutputState: o.OutputState,
	}
}

// The ARN assigned by AWS for this resource group.
func (o GroupOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. See below for details.
func (o GroupOutput) Configurations() pulumix.GArrayOutput[GroupConfiguration, GroupConfigurationOutput] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.GArrayOutput[GroupConfiguration, GroupConfigurationOutput] {
		return v.Configurations
	})
	unwrapped := pulumix.Flatten[[]GroupConfiguration, pulumix.GArrayOutput[GroupConfiguration, GroupConfigurationOutput]](value)
	return pulumix.GArrayOutput[GroupConfiguration, GroupConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// A description of the resource group.
func (o GroupOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
func (o GroupOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A `resourceQuery` block. Resource queries are documented below.
func (o GroupOutput) ResourceQuery() pulumix.GPtrOutput[GroupResourceQuery, GroupResourceQueryOutput] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.GPtrOutput[GroupResourceQuery, GroupResourceQueryOutput] { return v.ResourceQuery })
	unwrapped := pulumix.Flatten[*GroupResourceQuery, pulumix.GPtrOutput[GroupResourceQuery, GroupResourceQueryOutput]](value)
	return pulumix.GPtrOutput[GroupResourceQuery, GroupResourceQueryOutput]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o GroupOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o GroupOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(GroupOutput{})
}
