// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identitystore

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS IdentityStore Group.
type Group struct {
	pulumi.CustomResourceState

	// A string containing the description of the group.
	Description pulumix.Output[*string] `pulumi:"description"`
	// A string containing the name of the group. This value is commonly displayed when the group is referenced.
	DisplayName pulumix.Output[string] `pulumi:"displayName"`
	// A list of external IDs that contains the identifiers issued to this resource by an external identity provider. See External IDs below.
	ExternalIds pulumix.GArrayOutput[GroupExternalId, GroupExternalIdOutput] `pulumi:"externalIds"`
	// The identifier of the newly created group in the identity store.
	GroupId pulumix.Output[string] `pulumi:"groupId"`
	// The globally unique identifier for the identity store.
	//
	// The following arguments are optional:
	IdentityStoreId pulumix.Output[string] `pulumi:"identityStoreId"`
}

// NewGroup registers a new resource with the given unique name, arguments, and options.
func NewGroup(ctx *pulumi.Context,
	name string, args *GroupArgs, opts ...pulumi.ResourceOption) (*Group, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IdentityStoreId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityStoreId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Group
	err := ctx.RegisterResource("aws:identitystore/group:Group", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroup gets an existing Group resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupState, opts ...pulumi.ResourceOption) (*Group, error) {
	var resource Group
	err := ctx.ReadResource("aws:identitystore/group:Group", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Group resources.
type groupState struct {
	// A string containing the description of the group.
	Description *string `pulumi:"description"`
	// A string containing the name of the group. This value is commonly displayed when the group is referenced.
	DisplayName *string `pulumi:"displayName"`
	// A list of external IDs that contains the identifiers issued to this resource by an external identity provider. See External IDs below.
	ExternalIds []GroupExternalId `pulumi:"externalIds"`
	// The identifier of the newly created group in the identity store.
	GroupId *string `pulumi:"groupId"`
	// The globally unique identifier for the identity store.
	//
	// The following arguments are optional:
	IdentityStoreId *string `pulumi:"identityStoreId"`
}

type GroupState struct {
	// A string containing the description of the group.
	Description pulumix.Input[*string]
	// A string containing the name of the group. This value is commonly displayed when the group is referenced.
	DisplayName pulumix.Input[*string]
	// A list of external IDs that contains the identifiers issued to this resource by an external identity provider. See External IDs below.
	ExternalIds pulumix.Input[[]*GroupExternalIdArgs]
	// The identifier of the newly created group in the identity store.
	GroupId pulumix.Input[*string]
	// The globally unique identifier for the identity store.
	//
	// The following arguments are optional:
	IdentityStoreId pulumix.Input[*string]
}

func (GroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupState)(nil)).Elem()
}

type groupArgs struct {
	// A string containing the description of the group.
	Description *string `pulumi:"description"`
	// A string containing the name of the group. This value is commonly displayed when the group is referenced.
	DisplayName string `pulumi:"displayName"`
	// The globally unique identifier for the identity store.
	//
	// The following arguments are optional:
	IdentityStoreId string `pulumi:"identityStoreId"`
}

// The set of arguments for constructing a Group resource.
type GroupArgs struct {
	// A string containing the description of the group.
	Description pulumix.Input[*string]
	// A string containing the name of the group. This value is commonly displayed when the group is referenced.
	DisplayName pulumix.Input[string]
	// The globally unique identifier for the identity store.
	//
	// The following arguments are optional:
	IdentityStoreId pulumix.Input[string]
}

func (GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupArgs)(nil)).Elem()
}

type GroupOutput struct{ *pulumi.OutputState }

func (GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Group)(nil)).Elem()
}

func (o GroupOutput) ToGroupOutput() GroupOutput {
	return o
}

func (o GroupOutput) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return o
}

func (o GroupOutput) ToOutput(ctx context.Context) pulumix.Output[Group] {
	return pulumix.Output[Group]{
		OutputState: o.OutputState,
	}
}

// A string containing the description of the group.
func (o GroupOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A string containing the name of the group. This value is commonly displayed when the group is referenced.
func (o GroupOutput) DisplayName() pulumix.Output[string] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.Output[string] { return v.DisplayName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of external IDs that contains the identifiers issued to this resource by an external identity provider. See External IDs below.
func (o GroupOutput) ExternalIds() pulumix.GArrayOutput[GroupExternalId, GroupExternalIdOutput] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.GArrayOutput[GroupExternalId, GroupExternalIdOutput] { return v.ExternalIds })
	unwrapped := pulumix.Flatten[[]GroupExternalId, pulumix.GArrayOutput[GroupExternalId, GroupExternalIdOutput]](value)
	return pulumix.GArrayOutput[GroupExternalId, GroupExternalIdOutput]{OutputState: unwrapped.OutputState}
}

// The identifier of the newly created group in the identity store.
func (o GroupOutput) GroupId() pulumix.Output[string] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.Output[string] { return v.GroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The globally unique identifier for the identity store.
//
// The following arguments are optional:
func (o GroupOutput) IdentityStoreId() pulumix.Output[string] {
	value := pulumix.Apply[Group](o, func(v Group) pulumix.Output[string] { return v.IdentityStoreId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(GroupOutput{})
}
