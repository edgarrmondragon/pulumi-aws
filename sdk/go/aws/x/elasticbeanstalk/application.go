// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticbeanstalk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic Beanstalk Application Resource. Elastic Beanstalk allows
// you to deploy and manage applications in the AWS cloud without worrying about
// the infrastructure that runs those applications.
//
// This resource creates an application that has one configuration template named
// `default`, and no application versions
type Application struct {
	pulumi.CustomResourceState

	AppversionLifecycle pulumix.GPtrOutput[ApplicationAppversionLifecycle, ApplicationAppversionLifecycleOutput] `pulumi:"appversionLifecycle"`
	// The ARN assigned by AWS for this Elastic Beanstalk Application.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Short description of the application
	Description pulumix.Output[*string] `pulumi:"description"`
	// The name of the application, must be unique within your account
	Name pulumix.Output[string] `pulumi:"name"`
	// Key-value map of tags for the Elastic Beanstalk Application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		args = &ApplicationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Application
	err := ctx.RegisterResource("aws:elasticbeanstalk/application:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("aws:elasticbeanstalk/application:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
	AppversionLifecycle *ApplicationAppversionLifecycle `pulumi:"appversionLifecycle"`
	// The ARN assigned by AWS for this Elastic Beanstalk Application.
	Arn *string `pulumi:"arn"`
	// Short description of the application
	Description *string `pulumi:"description"`
	// The name of the application, must be unique within your account
	Name *string `pulumi:"name"`
	// Key-value map of tags for the Elastic Beanstalk Application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ApplicationState struct {
	AppversionLifecycle pulumix.Input[*ApplicationAppversionLifecycleArgs]
	// The ARN assigned by AWS for this Elastic Beanstalk Application.
	Arn pulumix.Input[*string]
	// Short description of the application
	Description pulumix.Input[*string]
	// The name of the application, must be unique within your account
	Name pulumix.Input[*string]
	// Key-value map of tags for the Elastic Beanstalk Application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	AppversionLifecycle *ApplicationAppversionLifecycle `pulumi:"appversionLifecycle"`
	// Short description of the application
	Description *string `pulumi:"description"`
	// The name of the application, must be unique within your account
	Name *string `pulumi:"name"`
	// Key-value map of tags for the Elastic Beanstalk Application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	AppversionLifecycle pulumix.Input[*ApplicationAppversionLifecycleArgs]
	// Short description of the application
	Description pulumix.Input[*string]
	// The name of the application, must be unique within your account
	Name pulumix.Input[*string]
	// Key-value map of tags for the Elastic Beanstalk Application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToOutput(ctx context.Context) pulumix.Output[Application] {
	return pulumix.Output[Application]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationOutput) AppversionLifecycle() pulumix.GPtrOutput[ApplicationAppversionLifecycle, ApplicationAppversionLifecycleOutput] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.GPtrOutput[ApplicationAppversionLifecycle, ApplicationAppversionLifecycleOutput] {
		return v.AppversionLifecycle
	})
	unwrapped := pulumix.Flatten[*ApplicationAppversionLifecycle, pulumix.GPtrOutput[ApplicationAppversionLifecycle, ApplicationAppversionLifecycleOutput]](value)
	return pulumix.GPtrOutput[ApplicationAppversionLifecycle, ApplicationAppversionLifecycleOutput]{OutputState: unwrapped.OutputState}
}

// The ARN assigned by AWS for this Elastic Beanstalk Application.
func (o ApplicationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Short description of the application
func (o ApplicationOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the application, must be unique within your account
func (o ApplicationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of tags for the Elastic Beanstalk Application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ApplicationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ApplicationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ApplicationOutput{})
}
