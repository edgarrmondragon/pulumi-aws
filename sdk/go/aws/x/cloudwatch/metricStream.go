// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CloudWatch Metric Stream resource.
type MetricStream struct {
	pulumi.CustomResourceState

	// ARN of the metric stream.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was created.
	CreationDate pulumix.Output[string] `pulumi:"creationDate"`
	// List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces and the conditional metric names that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is excluded. Conflicts with `includeFilter`.
	ExcludeFilters pulumix.GArrayOutput[MetricStreamExcludeFilter, MetricStreamExcludeFilterOutput] `pulumi:"excludeFilters"`
	// ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
	FirehoseArn pulumix.Output[string] `pulumi:"firehoseArn"`
	// List of inclusive metric filters. If you specify this parameter, the stream sends only the conditional metric names from the metric namespaces that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is included. Conflicts with `excludeFilter`.
	IncludeFilters pulumix.GArrayOutput[MetricStreamIncludeFilter, MetricStreamIncludeFilterOutput] `pulumi:"includeFilters"`
	// If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false. For more information about linking accounts, see [CloudWatch cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html).
	IncludeLinkedAccountsMetrics pulumix.Output[*bool] `pulumi:"includeLinkedAccountsMetrics"`
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was last updated.
	LastUpdateDate pulumix.Output[string] `pulumi:"lastUpdateDate"`
	// Friendly name of the metric stream. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Output[string] `pulumi:"name"`
	// Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Output[string] `pulumi:"namePrefix"`
	// Output format for the stream. Possible values are `json` and `opentelemetry0.7`. For more information about output formats, see [Metric streams output formats](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).
	//
	// The following arguments are optional:
	OutputFormat pulumix.Output[string] `pulumi:"outputFormat"`
	// ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see [Trust between CloudWatch and Kinesis Data Firehose](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-trustpolicy.html).
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// State of the metric stream. Possible values are `running` and `stopped`.
	State pulumix.Output[string] `pulumi:"state"`
	// For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's `outputFormat`. If the OutputFormat is `json`, you can stream any additional statistic that is supported by CloudWatch, listed in [CloudWatch statistics definitions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html). If the OutputFormat is `opentelemetry0.7`, you can stream percentile statistics (p99 etc.). See details below.
	StatisticsConfigurations pulumix.GArrayOutput[MetricStreamStatisticsConfiguration, MetricStreamStatisticsConfigurationOutput] `pulumi:"statisticsConfigurations"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewMetricStream registers a new resource with the given unique name, arguments, and options.
func NewMetricStream(ctx *pulumi.Context,
	name string, args *MetricStreamArgs, opts ...pulumi.ResourceOption) (*MetricStream, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirehoseArn == nil {
		return nil, errors.New("invalid value for required argument 'FirehoseArn'")
	}
	if args.OutputFormat == nil {
		return nil, errors.New("invalid value for required argument 'OutputFormat'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MetricStream
	err := ctx.RegisterResource("aws:cloudwatch/metricStream:MetricStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMetricStream gets an existing MetricStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMetricStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MetricStreamState, opts ...pulumi.ResourceOption) (*MetricStream, error) {
	var resource MetricStream
	err := ctx.ReadResource("aws:cloudwatch/metricStream:MetricStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MetricStream resources.
type metricStreamState struct {
	// ARN of the metric stream.
	Arn *string `pulumi:"arn"`
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was created.
	CreationDate *string `pulumi:"creationDate"`
	// List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces and the conditional metric names that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is excluded. Conflicts with `includeFilter`.
	ExcludeFilters []MetricStreamExcludeFilter `pulumi:"excludeFilters"`
	// ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
	FirehoseArn *string `pulumi:"firehoseArn"`
	// List of inclusive metric filters. If you specify this parameter, the stream sends only the conditional metric names from the metric namespaces that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is included. Conflicts with `excludeFilter`.
	IncludeFilters []MetricStreamIncludeFilter `pulumi:"includeFilters"`
	// If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false. For more information about linking accounts, see [CloudWatch cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html).
	IncludeLinkedAccountsMetrics *bool `pulumi:"includeLinkedAccountsMetrics"`
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was last updated.
	LastUpdateDate *string `pulumi:"lastUpdateDate"`
	// Friendly name of the metric stream. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// Output format for the stream. Possible values are `json` and `opentelemetry0.7`. For more information about output formats, see [Metric streams output formats](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).
	//
	// The following arguments are optional:
	OutputFormat *string `pulumi:"outputFormat"`
	// ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see [Trust between CloudWatch and Kinesis Data Firehose](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-trustpolicy.html).
	RoleArn *string `pulumi:"roleArn"`
	// State of the metric stream. Possible values are `running` and `stopped`.
	State *string `pulumi:"state"`
	// For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's `outputFormat`. If the OutputFormat is `json`, you can stream any additional statistic that is supported by CloudWatch, listed in [CloudWatch statistics definitions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html). If the OutputFormat is `opentelemetry0.7`, you can stream percentile statistics (p99 etc.). See details below.
	StatisticsConfigurations []MetricStreamStatisticsConfiguration `pulumi:"statisticsConfigurations"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type MetricStreamState struct {
	// ARN of the metric stream.
	Arn pulumix.Input[*string]
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was created.
	CreationDate pulumix.Input[*string]
	// List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces and the conditional metric names that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is excluded. Conflicts with `includeFilter`.
	ExcludeFilters pulumix.Input[[]*MetricStreamExcludeFilterArgs]
	// ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
	FirehoseArn pulumix.Input[*string]
	// List of inclusive metric filters. If you specify this parameter, the stream sends only the conditional metric names from the metric namespaces that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is included. Conflicts with `excludeFilter`.
	IncludeFilters pulumix.Input[[]*MetricStreamIncludeFilterArgs]
	// If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false. For more information about linking accounts, see [CloudWatch cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html).
	IncludeLinkedAccountsMetrics pulumix.Input[*bool]
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was last updated.
	LastUpdateDate pulumix.Input[*string]
	// Friendly name of the metric stream. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// Output format for the stream. Possible values are `json` and `opentelemetry0.7`. For more information about output formats, see [Metric streams output formats](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).
	//
	// The following arguments are optional:
	OutputFormat pulumix.Input[*string]
	// ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see [Trust between CloudWatch and Kinesis Data Firehose](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-trustpolicy.html).
	RoleArn pulumix.Input[*string]
	// State of the metric stream. Possible values are `running` and `stopped`.
	State pulumix.Input[*string]
	// For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's `outputFormat`. If the OutputFormat is `json`, you can stream any additional statistic that is supported by CloudWatch, listed in [CloudWatch statistics definitions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html). If the OutputFormat is `opentelemetry0.7`, you can stream percentile statistics (p99 etc.). See details below.
	StatisticsConfigurations pulumix.Input[[]*MetricStreamStatisticsConfigurationArgs]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (MetricStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*metricStreamState)(nil)).Elem()
}

type metricStreamArgs struct {
	// List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces and the conditional metric names that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is excluded. Conflicts with `includeFilter`.
	ExcludeFilters []MetricStreamExcludeFilter `pulumi:"excludeFilters"`
	// ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
	FirehoseArn string `pulumi:"firehoseArn"`
	// List of inclusive metric filters. If you specify this parameter, the stream sends only the conditional metric names from the metric namespaces that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is included. Conflicts with `excludeFilter`.
	IncludeFilters []MetricStreamIncludeFilter `pulumi:"includeFilters"`
	// If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false. For more information about linking accounts, see [CloudWatch cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html).
	IncludeLinkedAccountsMetrics *bool `pulumi:"includeLinkedAccountsMetrics"`
	// Friendly name of the metric stream. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// Output format for the stream. Possible values are `json` and `opentelemetry0.7`. For more information about output formats, see [Metric streams output formats](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).
	//
	// The following arguments are optional:
	OutputFormat string `pulumi:"outputFormat"`
	// ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see [Trust between CloudWatch and Kinesis Data Firehose](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-trustpolicy.html).
	RoleArn string `pulumi:"roleArn"`
	// For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's `outputFormat`. If the OutputFormat is `json`, you can stream any additional statistic that is supported by CloudWatch, listed in [CloudWatch statistics definitions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html). If the OutputFormat is `opentelemetry0.7`, you can stream percentile statistics (p99 etc.). See details below.
	StatisticsConfigurations []MetricStreamStatisticsConfiguration `pulumi:"statisticsConfigurations"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a MetricStream resource.
type MetricStreamArgs struct {
	// List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces and the conditional metric names that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is excluded. Conflicts with `includeFilter`.
	ExcludeFilters pulumix.Input[[]*MetricStreamExcludeFilterArgs]
	// ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
	FirehoseArn pulumix.Input[string]
	// List of inclusive metric filters. If you specify this parameter, the stream sends only the conditional metric names from the metric namespaces that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is included. Conflicts with `excludeFilter`.
	IncludeFilters pulumix.Input[[]*MetricStreamIncludeFilterArgs]
	// If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false. For more information about linking accounts, see [CloudWatch cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html).
	IncludeLinkedAccountsMetrics pulumix.Input[*bool]
	// Friendly name of the metric stream. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// Output format for the stream. Possible values are `json` and `opentelemetry0.7`. For more information about output formats, see [Metric streams output formats](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).
	//
	// The following arguments are optional:
	OutputFormat pulumix.Input[string]
	// ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see [Trust between CloudWatch and Kinesis Data Firehose](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-trustpolicy.html).
	RoleArn pulumix.Input[string]
	// For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's `outputFormat`. If the OutputFormat is `json`, you can stream any additional statistic that is supported by CloudWatch, listed in [CloudWatch statistics definitions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html). If the OutputFormat is `opentelemetry0.7`, you can stream percentile statistics (p99 etc.). See details below.
	StatisticsConfigurations pulumix.Input[[]*MetricStreamStatisticsConfigurationArgs]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (MetricStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*metricStreamArgs)(nil)).Elem()
}

type MetricStreamOutput struct{ *pulumi.OutputState }

func (MetricStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStream)(nil)).Elem()
}

func (o MetricStreamOutput) ToMetricStreamOutput() MetricStreamOutput {
	return o
}

func (o MetricStreamOutput) ToMetricStreamOutputWithContext(ctx context.Context) MetricStreamOutput {
	return o
}

func (o MetricStreamOutput) ToOutput(ctx context.Context) pulumix.Output[MetricStream] {
	return pulumix.Output[MetricStream]{
		OutputState: o.OutputState,
	}
}

// ARN of the metric stream.
func (o MetricStreamOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was created.
func (o MetricStreamOutput) CreationDate() pulumix.Output[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[string] { return v.CreationDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces and the conditional metric names that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is excluded. Conflicts with `includeFilter`.
func (o MetricStreamOutput) ExcludeFilters() pulumix.GArrayOutput[MetricStreamExcludeFilter, MetricStreamExcludeFilterOutput] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.GArrayOutput[MetricStreamExcludeFilter, MetricStreamExcludeFilterOutput] {
		return v.ExcludeFilters
	})
	unwrapped := pulumix.Flatten[[]MetricStreamExcludeFilter, pulumix.GArrayOutput[MetricStreamExcludeFilter, MetricStreamExcludeFilterOutput]](value)
	return pulumix.GArrayOutput[MetricStreamExcludeFilter, MetricStreamExcludeFilterOutput]{OutputState: unwrapped.OutputState}
}

// ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
func (o MetricStreamOutput) FirehoseArn() pulumix.Output[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[string] { return v.FirehoseArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of inclusive metric filters. If you specify this parameter, the stream sends only the conditional metric names from the metric namespaces that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is included. Conflicts with `excludeFilter`.
func (o MetricStreamOutput) IncludeFilters() pulumix.GArrayOutput[MetricStreamIncludeFilter, MetricStreamIncludeFilterOutput] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.GArrayOutput[MetricStreamIncludeFilter, MetricStreamIncludeFilterOutput] {
		return v.IncludeFilters
	})
	unwrapped := pulumix.Flatten[[]MetricStreamIncludeFilter, pulumix.GArrayOutput[MetricStreamIncludeFilter, MetricStreamIncludeFilterOutput]](value)
	return pulumix.GArrayOutput[MetricStreamIncludeFilter, MetricStreamIncludeFilterOutput]{OutputState: unwrapped.OutputState}
}

// If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false. For more information about linking accounts, see [CloudWatch cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html).
func (o MetricStreamOutput) IncludeLinkedAccountsMetrics() pulumix.Output[*bool] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[*bool] { return v.IncludeLinkedAccountsMetrics })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the metric stream was last updated.
func (o MetricStreamOutput) LastUpdateDate() pulumix.Output[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[string] { return v.LastUpdateDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Friendly name of the metric stream. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
func (o MetricStreamOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique friendly name beginning with the specified prefix. Conflicts with `name`.
func (o MetricStreamOutput) NamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[string] { return v.NamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Output format for the stream. Possible values are `json` and `opentelemetry0.7`. For more information about output formats, see [Metric streams output formats](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).
//
// The following arguments are optional:
func (o MetricStreamOutput) OutputFormat() pulumix.Output[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[string] { return v.OutputFormat })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see [Trust between CloudWatch and Kinesis Data Firehose](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-trustpolicy.html).
func (o MetricStreamOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// State of the metric stream. Possible values are `running` and `stopped`.
func (o MetricStreamOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's `outputFormat`. If the OutputFormat is `json`, you can stream any additional statistic that is supported by CloudWatch, listed in [CloudWatch statistics definitions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html). If the OutputFormat is `opentelemetry0.7`, you can stream percentile statistics (p99 etc.). See details below.
func (o MetricStreamOutput) StatisticsConfigurations() pulumix.GArrayOutput[MetricStreamStatisticsConfiguration, MetricStreamStatisticsConfigurationOutput] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.GArrayOutput[MetricStreamStatisticsConfiguration, MetricStreamStatisticsConfigurationOutput] {
		return v.StatisticsConfigurations
	})
	unwrapped := pulumix.Flatten[[]MetricStreamStatisticsConfiguration, pulumix.GArrayOutput[MetricStreamStatisticsConfiguration, MetricStreamStatisticsConfigurationOutput]](value)
	return pulumix.GArrayOutput[MetricStreamStatisticsConfiguration, MetricStreamStatisticsConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o MetricStreamOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o MetricStreamOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[MetricStream](o, func(v MetricStream) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(MetricStreamOutput{})
}
