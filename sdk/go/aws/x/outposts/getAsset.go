// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outposts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Information about a specific hardware asset in an Outpost.
func GetAsset(ctx *pulumi.Context, args *GetAssetArgs, opts ...pulumi.InvokeOption) (*GetAssetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAssetResult
	err := ctx.Invoke("aws:outposts/getAsset:getAsset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAsset.
type GetAssetArgs struct {
	// Outpost ARN.
	Arn string `pulumi:"arn"`
	// ID of the asset.
	AssetId string `pulumi:"assetId"`
}

// A collection of values returned by getAsset.
type GetAssetResult struct {
	Arn     string `pulumi:"arn"`
	AssetId string `pulumi:"assetId"`
	// Type of the asset.
	AssetType string `pulumi:"assetType"`
	// Host ID of the Dedicated Hosts on the asset, if a Dedicated Host is provisioned.
	HostId string `pulumi:"hostId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Position of an asset in a rack measured in rack units.
	RackElevation int `pulumi:"rackElevation"`
	// Rack ID of the asset.
	RackId string `pulumi:"rackId"`
}

func GetAssetOutput(ctx *pulumi.Context, args GetAssetOutputArgs, opts ...pulumi.InvokeOption) GetAssetResultOutput {
	outputResult := pulumix.ApplyErr[*GetAssetArgs](args.ToOutput(), func(plainArgs *GetAssetArgs) (*GetAssetResult, error) {
		return GetAsset(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetAssetResultOutput, *GetAssetResult](outputResult)
}

// A collection of arguments for invoking getAsset.
type GetAssetOutputArgs struct {
	// Outpost ARN.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// ID of the asset.
	AssetId pulumix.Input[string] `pulumi:"assetId"`
}

func (args GetAssetOutputArgs) ToOutput() pulumix.Output[*GetAssetArgs] {
	allArgs := pulumix.All(
		args.Arn.ToOutput(context.Background()).AsAny(),
		args.AssetId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetAssetArgs {
		return &GetAssetArgs{
			Arn:     resolvedArgs[0].(string),
			AssetId: resolvedArgs[1].(string),
		}
	})
}

type GetAssetResultOutput struct{ *pulumi.OutputState }

func (GetAssetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssetResult)(nil)).Elem()
}

func (o GetAssetResultOutput) ToOutput(context.Context) pulumix.Output[*GetAssetResult] {
	return pulumix.Output[*GetAssetResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAssetResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*GetAssetResult](o, func(v *GetAssetResult) string { return v.Arn })
}

func (o GetAssetResultOutput) AssetId() pulumix.Output[string] {
	return pulumix.Apply[*GetAssetResult](o, func(v *GetAssetResult) string { return v.AssetId })
}

func (o GetAssetResultOutput) AssetType() pulumix.Output[string] {
	return pulumix.Apply[*GetAssetResult](o, func(v *GetAssetResult) string { return v.AssetType })
}

func (o GetAssetResultOutput) HostId() pulumix.Output[string] {
	return pulumix.Apply[*GetAssetResult](o, func(v *GetAssetResult) string { return v.HostId })
}

func (o GetAssetResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetAssetResult](o, func(v *GetAssetResult) string { return v.Id })
}

func (o GetAssetResultOutput) RackElevation() pulumix.Output[int] {
	return pulumix.Apply[*GetAssetResult](o, func(v *GetAssetResult) int { return v.RackElevation })
}

func (o GetAssetResultOutput) RackId() pulumix.Output[string] {
	return pulumix.Apply[*GetAssetResult](o, func(v *GetAssetResult) string { return v.RackId })
}
