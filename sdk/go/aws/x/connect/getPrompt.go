// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific Amazon Connect Prompt.
func GetPrompt(ctx *pulumi.Context, args *GetPromptArgs, opts ...pulumi.InvokeOption) (*GetPromptResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPromptResult
	err := ctx.Invoke("aws:connect/getPrompt:getPrompt", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrompt.
type GetPromptArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId string `pulumi:"instanceId"`
	// Returns information on a specific Prompt by name
	Name string `pulumi:"name"`
}

// A collection of values returned by getPrompt.
type GetPromptResult struct {
	// ARN of the Prompt.
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	Name       string `pulumi:"name"`
	// Identifier for the prompt.
	PromptId string `pulumi:"promptId"`
}

func GetPromptOutput(ctx *pulumi.Context, args GetPromptOutputArgs, opts ...pulumi.InvokeOption) GetPromptResultOutput {
	outputResult := pulumix.ApplyErr[*GetPromptArgs](args.ToOutput(), func(plainArgs *GetPromptArgs) (*GetPromptResult, error) {
		return GetPrompt(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetPromptResultOutput, *GetPromptResult](outputResult)
}

// A collection of arguments for invoking getPrompt.
type GetPromptOutputArgs struct {
	// Reference to the hosting Amazon Connect Instance
	InstanceId pulumix.Input[string] `pulumi:"instanceId"`
	// Returns information on a specific Prompt by name
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args GetPromptOutputArgs) ToOutput() pulumix.Output[*GetPromptArgs] {
	allArgs := pulumix.All(
		args.InstanceId.ToOutput(context.Background()).AsAny(),
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetPromptArgs {
		return &GetPromptArgs{
			InstanceId: resolvedArgs[0].(string),
			Name:       resolvedArgs[1].(string),
		}
	})
}

type GetPromptResultOutput struct{ *pulumi.OutputState }

func (GetPromptResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPromptResult)(nil)).Elem()
}

func (o GetPromptResultOutput) ToOutput(context.Context) pulumix.Output[*GetPromptResult] {
	return pulumix.Output[*GetPromptResult]{
		OutputState: o.OutputState,
	}
}

func (o GetPromptResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*GetPromptResult](o, func(v *GetPromptResult) string { return v.Arn })
}

func (o GetPromptResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetPromptResult](o, func(v *GetPromptResult) string { return v.Id })
}

func (o GetPromptResultOutput) InstanceId() pulumix.Output[string] {
	return pulumix.Apply[*GetPromptResult](o, func(v *GetPromptResult) string { return v.InstanceId })
}

func (o GetPromptResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*GetPromptResult](o, func(v *GetPromptResult) string { return v.Name })
}

func (o GetPromptResultOutput) PromptId() pulumix.Output[string] {
	return pulumix.Apply[*GetPromptResult](o, func(v *GetPromptResult) string { return v.PromptId })
}
