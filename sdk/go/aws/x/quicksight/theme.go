// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing a QuickSight Theme.
type Theme struct {
	pulumi.CustomResourceState

	// ARN of the theme.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId pulumix.Output[string] `pulumi:"awsAccountId"`
	// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.
	BaseThemeId pulumix.Output[string] `pulumi:"baseThemeId"`
	// The theme configuration, which contains the theme display properties. See configuration.
	//
	// The following arguments are optional:
	Configuration pulumix.GPtrOutput[ThemeConfiguration, ThemeConfigurationOutput] `pulumi:"configuration"`
	// The time that the theme was created.
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// The time that the theme was last updated.
	LastUpdatedTime pulumix.Output[string] `pulumi:"lastUpdatedTime"`
	// Display name of the theme.
	Name pulumix.Output[string] `pulumi:"name"`
	// A set of resource permissions on the theme. Maximum of 64 items. See permissions.
	Permissions pulumix.GArrayOutput[ThemePermission, ThemePermissionOutput] `pulumi:"permissions"`
	// The theme creation status.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Identifier of the theme.
	ThemeId pulumix.Output[string] `pulumi:"themeId"`
	// A description of the current theme version being created/updated.
	VersionDescription pulumix.Output[*string] `pulumi:"versionDescription"`
	// The version number of the theme version.
	VersionNumber pulumix.Output[int] `pulumi:"versionNumber"`
}

// NewTheme registers a new resource with the given unique name, arguments, and options.
func NewTheme(ctx *pulumi.Context,
	name string, args *ThemeArgs, opts ...pulumi.ResourceOption) (*Theme, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BaseThemeId == nil {
		return nil, errors.New("invalid value for required argument 'BaseThemeId'")
	}
	if args.ThemeId == nil {
		return nil, errors.New("invalid value for required argument 'ThemeId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Theme
	err := ctx.RegisterResource("aws:quicksight/theme:Theme", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTheme gets an existing Theme resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTheme(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThemeState, opts ...pulumi.ResourceOption) (*Theme, error) {
	var resource Theme
	err := ctx.ReadResource("aws:quicksight/theme:Theme", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Theme resources.
type themeState struct {
	// ARN of the theme.
	Arn *string `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.
	BaseThemeId *string `pulumi:"baseThemeId"`
	// The theme configuration, which contains the theme display properties. See configuration.
	//
	// The following arguments are optional:
	Configuration *ThemeConfiguration `pulumi:"configuration"`
	// The time that the theme was created.
	CreatedTime *string `pulumi:"createdTime"`
	// The time that the theme was last updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Display name of the theme.
	Name *string `pulumi:"name"`
	// A set of resource permissions on the theme. Maximum of 64 items. See permissions.
	Permissions []ThemePermission `pulumi:"permissions"`
	// The theme creation status.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Identifier of the theme.
	ThemeId *string `pulumi:"themeId"`
	// A description of the current theme version being created/updated.
	VersionDescription *string `pulumi:"versionDescription"`
	// The version number of the theme version.
	VersionNumber *int `pulumi:"versionNumber"`
}

type ThemeState struct {
	// ARN of the theme.
	Arn pulumix.Input[*string]
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.
	BaseThemeId pulumix.Input[*string]
	// The theme configuration, which contains the theme display properties. See configuration.
	//
	// The following arguments are optional:
	Configuration pulumix.Input[*ThemeConfigurationArgs]
	// The time that the theme was created.
	CreatedTime pulumix.Input[*string]
	// The time that the theme was last updated.
	LastUpdatedTime pulumix.Input[*string]
	// Display name of the theme.
	Name pulumix.Input[*string]
	// A set of resource permissions on the theme. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*ThemePermissionArgs]
	// The theme creation status.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Identifier of the theme.
	ThemeId pulumix.Input[*string]
	// A description of the current theme version being created/updated.
	VersionDescription pulumix.Input[*string]
	// The version number of the theme version.
	VersionNumber pulumix.Input[*int]
}

func (ThemeState) ElementType() reflect.Type {
	return reflect.TypeOf((*themeState)(nil)).Elem()
}

type themeArgs struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.
	BaseThemeId string `pulumi:"baseThemeId"`
	// The theme configuration, which contains the theme display properties. See configuration.
	//
	// The following arguments are optional:
	Configuration *ThemeConfiguration `pulumi:"configuration"`
	// Display name of the theme.
	Name *string `pulumi:"name"`
	// A set of resource permissions on the theme. Maximum of 64 items. See permissions.
	Permissions []ThemePermission `pulumi:"permissions"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Identifier of the theme.
	ThemeId string `pulumi:"themeId"`
	// A description of the current theme version being created/updated.
	VersionDescription *string `pulumi:"versionDescription"`
}

// The set of arguments for constructing a Theme resource.
type ThemeArgs struct {
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.
	BaseThemeId pulumix.Input[string]
	// The theme configuration, which contains the theme display properties. See configuration.
	//
	// The following arguments are optional:
	Configuration pulumix.Input[*ThemeConfigurationArgs]
	// Display name of the theme.
	Name pulumix.Input[*string]
	// A set of resource permissions on the theme. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*ThemePermissionArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Identifier of the theme.
	ThemeId pulumix.Input[string]
	// A description of the current theme version being created/updated.
	VersionDescription pulumix.Input[*string]
}

func (ThemeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*themeArgs)(nil)).Elem()
}

type ThemeOutput struct{ *pulumi.OutputState }

func (ThemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Theme)(nil)).Elem()
}

func (o ThemeOutput) ToThemeOutput() ThemeOutput {
	return o
}

func (o ThemeOutput) ToThemeOutputWithContext(ctx context.Context) ThemeOutput {
	return o
}

func (o ThemeOutput) ToOutput(ctx context.Context) pulumix.Output[Theme] {
	return pulumix.Output[Theme]{
		OutputState: o.OutputState,
	}
}

// ARN of the theme.
func (o ThemeOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS account ID.
func (o ThemeOutput) AwsAccountId() pulumix.Output[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[string] { return v.AwsAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.
func (o ThemeOutput) BaseThemeId() pulumix.Output[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[string] { return v.BaseThemeId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The theme configuration, which contains the theme display properties. See configuration.
//
// The following arguments are optional:
func (o ThemeOutput) Configuration() pulumix.GPtrOutput[ThemeConfiguration, ThemeConfigurationOutput] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.GPtrOutput[ThemeConfiguration, ThemeConfigurationOutput] { return v.Configuration })
	unwrapped := pulumix.Flatten[*ThemeConfiguration, pulumix.GPtrOutput[ThemeConfiguration, ThemeConfigurationOutput]](value)
	return pulumix.GPtrOutput[ThemeConfiguration, ThemeConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The time that the theme was created.
func (o ThemeOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time that the theme was last updated.
func (o ThemeOutput) LastUpdatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[string] { return v.LastUpdatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Display name of the theme.
func (o ThemeOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A set of resource permissions on the theme. Maximum of 64 items. See permissions.
func (o ThemeOutput) Permissions() pulumix.GArrayOutput[ThemePermission, ThemePermissionOutput] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.GArrayOutput[ThemePermission, ThemePermissionOutput] { return v.Permissions })
	unwrapped := pulumix.Flatten[[]ThemePermission, pulumix.GArrayOutput[ThemePermission, ThemePermissionOutput]](value)
	return pulumix.GArrayOutput[ThemePermission, ThemePermissionOutput]{OutputState: unwrapped.OutputState}
}

// The theme creation status.
func (o ThemeOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ThemeOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ThemeOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Identifier of the theme.
func (o ThemeOutput) ThemeId() pulumix.Output[string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[string] { return v.ThemeId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description of the current theme version being created/updated.
func (o ThemeOutput) VersionDescription() pulumix.Output[*string] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[*string] { return v.VersionDescription })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The version number of the theme version.
func (o ThemeOutput) VersionNumber() pulumix.Output[int] {
	value := pulumix.Apply[Theme](o, func(v Theme) pulumix.Output[int] { return v.VersionNumber })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(ThemeOutput{})
}
