// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type PolicyExcludeMap struct {
	// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
	Accounts []string `pulumi:"accounts"`
	// A list of IDs of the AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
	//
	// You can specify inclusions or exclusions, but not both. If you specify an `includeMap`, AWS Firewall Manager applies the policy to all accounts specified by the `includeMap`, and does not evaluate any `excludeMap` specifications. If you do not specify an `includeMap`, then Firewall Manager applies the policy to all accounts except for those specified by the `excludeMap`.
	Orgunits []string `pulumi:"orgunits"`
}

type PolicyExcludeMapArgs struct {
	// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
	Accounts pulumix.Input[[]string] `pulumi:"accounts"`
	// A list of IDs of the AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
	//
	// You can specify inclusions or exclusions, but not both. If you specify an `includeMap`, AWS Firewall Manager applies the policy to all accounts specified by the `includeMap`, and does not evaluate any `excludeMap` specifications. If you do not specify an `includeMap`, then Firewall Manager applies the policy to all accounts except for those specified by the `excludeMap`.
	Orgunits pulumix.Input[[]string] `pulumi:"orgunits"`
}

func (PolicyExcludeMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyExcludeMap)(nil)).Elem()
}

func (i PolicyExcludeMapArgs) ToPolicyExcludeMapOutput() PolicyExcludeMapOutput {
	return i.ToPolicyExcludeMapOutputWithContext(context.Background())
}

func (i PolicyExcludeMapArgs) ToPolicyExcludeMapOutputWithContext(ctx context.Context) PolicyExcludeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyExcludeMapOutput)
}

func (i *PolicyExcludeMapArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyExcludeMapArgs] {
	return pulumix.Val(i)
}

type PolicyExcludeMapOutput struct{ *pulumi.OutputState }

func (PolicyExcludeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyExcludeMap)(nil)).Elem()
}

func (o PolicyExcludeMapOutput) ToPolicyExcludeMapOutput() PolicyExcludeMapOutput {
	return o
}

func (o PolicyExcludeMapOutput) ToPolicyExcludeMapOutputWithContext(ctx context.Context) PolicyExcludeMapOutput {
	return o
}

func (o PolicyExcludeMapOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyExcludeMap] {
	return pulumix.Output[PolicyExcludeMap]{
		OutputState: o.OutputState,
	}
}

// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
func (o PolicyExcludeMapOutput) Accounts() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[PolicyExcludeMap](o, func(v PolicyExcludeMap) []string { return v.Accounts })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A list of IDs of the AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
//
// You can specify inclusions or exclusions, but not both. If you specify an `includeMap`, AWS Firewall Manager applies the policy to all accounts specified by the `includeMap`, and does not evaluate any `excludeMap` specifications. If you do not specify an `includeMap`, then Firewall Manager applies the policy to all accounts except for those specified by the `excludeMap`.
func (o PolicyExcludeMapOutput) Orgunits() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[PolicyExcludeMap](o, func(v PolicyExcludeMap) []string { return v.Orgunits })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type PolicyIncludeMap struct {
	// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
	Accounts []string `pulumi:"accounts"`
	// A list of IDs of the AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
	//
	// You can specify inclusions or exclusions, but not both. If you specify an `includeMap`, AWS Firewall Manager applies the policy to all accounts specified by the `includeMap`, and does not evaluate any `excludeMap` specifications. If you do not specify an `includeMap`, then Firewall Manager applies the policy to all accounts except for those specified by the `excludeMap`.
	Orgunits []string `pulumi:"orgunits"`
}

type PolicyIncludeMapArgs struct {
	// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
	Accounts pulumix.Input[[]string] `pulumi:"accounts"`
	// A list of IDs of the AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
	//
	// You can specify inclusions or exclusions, but not both. If you specify an `includeMap`, AWS Firewall Manager applies the policy to all accounts specified by the `includeMap`, and does not evaluate any `excludeMap` specifications. If you do not specify an `includeMap`, then Firewall Manager applies the policy to all accounts except for those specified by the `excludeMap`.
	Orgunits pulumix.Input[[]string] `pulumi:"orgunits"`
}

func (PolicyIncludeMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIncludeMap)(nil)).Elem()
}

func (i PolicyIncludeMapArgs) ToPolicyIncludeMapOutput() PolicyIncludeMapOutput {
	return i.ToPolicyIncludeMapOutputWithContext(context.Background())
}

func (i PolicyIncludeMapArgs) ToPolicyIncludeMapOutputWithContext(ctx context.Context) PolicyIncludeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIncludeMapOutput)
}

func (i *PolicyIncludeMapArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyIncludeMapArgs] {
	return pulumix.Val(i)
}

type PolicyIncludeMapOutput struct{ *pulumi.OutputState }

func (PolicyIncludeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIncludeMap)(nil)).Elem()
}

func (o PolicyIncludeMapOutput) ToPolicyIncludeMapOutput() PolicyIncludeMapOutput {
	return o
}

func (o PolicyIncludeMapOutput) ToPolicyIncludeMapOutputWithContext(ctx context.Context) PolicyIncludeMapOutput {
	return o
}

func (o PolicyIncludeMapOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyIncludeMap] {
	return pulumix.Output[PolicyIncludeMap]{
		OutputState: o.OutputState,
	}
}

// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
func (o PolicyIncludeMapOutput) Accounts() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[PolicyIncludeMap](o, func(v PolicyIncludeMap) []string { return v.Accounts })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A list of IDs of the AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
//
// You can specify inclusions or exclusions, but not both. If you specify an `includeMap`, AWS Firewall Manager applies the policy to all accounts specified by the `includeMap`, and does not evaluate any `excludeMap` specifications. If you do not specify an `includeMap`, then Firewall Manager applies the policy to all accounts except for those specified by the `excludeMap`.
func (o PolicyIncludeMapOutput) Orgunits() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[PolicyIncludeMap](o, func(v PolicyIncludeMap) []string { return v.Orgunits })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type PolicySecurityServicePolicyData struct {
	// Details about the service that are specific to the service type, in JSON format. For service type `SHIELD_ADVANCED`, this is an empty string. Examples depending on `type` can be found in the [AWS Firewall Manager SecurityServicePolicyData API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html).
	ManagedServiceData *string `pulumi:"managedServiceData"`
	// Contains the Network Firewall firewall policy options to configure a centralized deployment model. Documented below.
	PolicyOption *PolicySecurityServicePolicyDataPolicyOption `pulumi:"policyOption"`
	// The service that the policy is using to protect the resources. For the current list of supported types, please refer to the [AWS Firewall Manager SecurityServicePolicyData API Type Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html#fms-Type-SecurityServicePolicyData-Type).
	Type string `pulumi:"type"`
}

type PolicySecurityServicePolicyDataArgs struct {
	// Details about the service that are specific to the service type, in JSON format. For service type `SHIELD_ADVANCED`, this is an empty string. Examples depending on `type` can be found in the [AWS Firewall Manager SecurityServicePolicyData API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html).
	ManagedServiceData pulumix.Input[*string] `pulumi:"managedServiceData"`
	// Contains the Network Firewall firewall policy options to configure a centralized deployment model. Documented below.
	PolicyOption pulumix.Input[*PolicySecurityServicePolicyDataPolicyOptionArgs] `pulumi:"policyOption"`
	// The service that the policy is using to protect the resources. For the current list of supported types, please refer to the [AWS Firewall Manager SecurityServicePolicyData API Type Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html#fms-Type-SecurityServicePolicyData-Type).
	Type pulumix.Input[string] `pulumi:"type"`
}

func (PolicySecurityServicePolicyDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyData)(nil)).Elem()
}

func (i PolicySecurityServicePolicyDataArgs) ToPolicySecurityServicePolicyDataOutput() PolicySecurityServicePolicyDataOutput {
	return i.ToPolicySecurityServicePolicyDataOutputWithContext(context.Background())
}

func (i PolicySecurityServicePolicyDataArgs) ToPolicySecurityServicePolicyDataOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityServicePolicyDataOutput)
}

func (i *PolicySecurityServicePolicyDataArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicySecurityServicePolicyDataArgs] {
	return pulumix.Val(i)
}

type PolicySecurityServicePolicyDataOutput struct{ *pulumi.OutputState }

func (PolicySecurityServicePolicyDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyData)(nil)).Elem()
}

func (o PolicySecurityServicePolicyDataOutput) ToPolicySecurityServicePolicyDataOutput() PolicySecurityServicePolicyDataOutput {
	return o
}

func (o PolicySecurityServicePolicyDataOutput) ToPolicySecurityServicePolicyDataOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataOutput {
	return o
}

func (o PolicySecurityServicePolicyDataOutput) ToOutput(ctx context.Context) pulumix.Output[PolicySecurityServicePolicyData] {
	return pulumix.Output[PolicySecurityServicePolicyData]{
		OutputState: o.OutputState,
	}
}

// Details about the service that are specific to the service type, in JSON format. For service type `SHIELD_ADVANCED`, this is an empty string. Examples depending on `type` can be found in the [AWS Firewall Manager SecurityServicePolicyData API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html).
func (o PolicySecurityServicePolicyDataOutput) ManagedServiceData() pulumix.Output[*string] {
	return pulumix.Apply[PolicySecurityServicePolicyData](o, func(v PolicySecurityServicePolicyData) *string { return v.ManagedServiceData })
}

// Contains the Network Firewall firewall policy options to configure a centralized deployment model. Documented below.
func (o PolicySecurityServicePolicyDataOutput) PolicyOption() pulumix.GPtrOutput[PolicySecurityServicePolicyDataPolicyOption, PolicySecurityServicePolicyDataPolicyOptionOutput] {
	value := pulumix.Apply[PolicySecurityServicePolicyData](o, func(v PolicySecurityServicePolicyData) *PolicySecurityServicePolicyDataPolicyOption {
		return v.PolicyOption
	})
	return pulumix.GPtrOutput[PolicySecurityServicePolicyDataPolicyOption, PolicySecurityServicePolicyDataPolicyOptionOutput]{OutputState: value.OutputState}
}

// The service that the policy is using to protect the resources. For the current list of supported types, please refer to the [AWS Firewall Manager SecurityServicePolicyData API Type Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html#fms-Type-SecurityServicePolicyData-Type).
func (o PolicySecurityServicePolicyDataOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[PolicySecurityServicePolicyData](o, func(v PolicySecurityServicePolicyData) string { return v.Type })
}

type PolicySecurityServicePolicyDataPolicyOption struct {
	// Defines the deployment model to use for the firewall policy. Documented below.
	NetworkFirewallPolicy    *PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy    `pulumi:"networkFirewallPolicy"`
	ThirdPartyFirewallPolicy *PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy `pulumi:"thirdPartyFirewallPolicy"`
}

type PolicySecurityServicePolicyDataPolicyOptionArgs struct {
	// Defines the deployment model to use for the firewall policy. Documented below.
	NetworkFirewallPolicy    pulumix.Input[*PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyArgs]    `pulumi:"networkFirewallPolicy"`
	ThirdPartyFirewallPolicy pulumix.Input[*PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyArgs] `pulumi:"thirdPartyFirewallPolicy"`
}

func (PolicySecurityServicePolicyDataPolicyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyDataPolicyOption)(nil)).Elem()
}

func (i PolicySecurityServicePolicyDataPolicyOptionArgs) ToPolicySecurityServicePolicyDataPolicyOptionOutput() PolicySecurityServicePolicyDataPolicyOptionOutput {
	return i.ToPolicySecurityServicePolicyDataPolicyOptionOutputWithContext(context.Background())
}

func (i PolicySecurityServicePolicyDataPolicyOptionArgs) ToPolicySecurityServicePolicyDataPolicyOptionOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPolicyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityServicePolicyDataPolicyOptionOutput)
}

func (i *PolicySecurityServicePolicyDataPolicyOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicySecurityServicePolicyDataPolicyOptionArgs] {
	return pulumix.Val(i)
}

type PolicySecurityServicePolicyDataPolicyOptionOutput struct{ *pulumi.OutputState }

func (PolicySecurityServicePolicyDataPolicyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyDataPolicyOption)(nil)).Elem()
}

func (o PolicySecurityServicePolicyDataPolicyOptionOutput) ToPolicySecurityServicePolicyDataPolicyOptionOutput() PolicySecurityServicePolicyDataPolicyOptionOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPolicyOptionOutput) ToPolicySecurityServicePolicyDataPolicyOptionOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPolicyOptionOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPolicyOptionOutput) ToOutput(ctx context.Context) pulumix.Output[PolicySecurityServicePolicyDataPolicyOption] {
	return pulumix.Output[PolicySecurityServicePolicyDataPolicyOption]{
		OutputState: o.OutputState,
	}
}

// Defines the deployment model to use for the firewall policy. Documented below.
func (o PolicySecurityServicePolicyDataPolicyOptionOutput) NetworkFirewallPolicy() pulumix.GPtrOutput[PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy, PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput] {
	value := pulumix.Apply[PolicySecurityServicePolicyDataPolicyOption](o, func(v PolicySecurityServicePolicyDataPolicyOption) *PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy {
		return v.NetworkFirewallPolicy
	})
	return pulumix.GPtrOutput[PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy, PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput]{OutputState: value.OutputState}
}

func (o PolicySecurityServicePolicyDataPolicyOptionOutput) ThirdPartyFirewallPolicy() pulumix.GPtrOutput[PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy, PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput] {
	value := pulumix.Apply[PolicySecurityServicePolicyDataPolicyOption](o, func(v PolicySecurityServicePolicyDataPolicyOption) *PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy {
		return v.ThirdPartyFirewallPolicy
	})
	return pulumix.GPtrOutput[PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy, PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput]{OutputState: value.OutputState}
}

type PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy struct {
	// Defines the deployment model to use for the third-party firewall policy. Valid values are `CENTRALIZED` and `DISTRIBUTED`.
	FirewallDeploymentModel *string `pulumi:"firewallDeploymentModel"`
}

type PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyArgs struct {
	// Defines the deployment model to use for the third-party firewall policy. Valid values are `CENTRALIZED` and `DISTRIBUTED`.
	FirewallDeploymentModel pulumix.Input[*string] `pulumi:"firewallDeploymentModel"`
}

func (PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy)(nil)).Elem()
}

func (i PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyArgs) ToPolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput() PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput {
	return i.ToPolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutputWithContext(context.Background())
}

func (i PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyArgs) ToPolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput)
}

func (i *PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyArgs] {
	return pulumix.Val(i)
}

type PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput struct{ *pulumi.OutputState }

func (PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy)(nil)).Elem()
}

func (o PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput) ToPolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput() PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput) ToPolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy] {
	return pulumix.Output[PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy]{
		OutputState: o.OutputState,
	}
}

// Defines the deployment model to use for the third-party firewall policy. Valid values are `CENTRALIZED` and `DISTRIBUTED`.
func (o PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput) FirewallDeploymentModel() pulumix.Output[*string] {
	return pulumix.Apply[PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy](o, func(v PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicy) *string {
		return v.FirewallDeploymentModel
	})
}

type PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy struct {
	// Defines the deployment model to use for the third-party firewall policy. Valid values are `CENTRALIZED` and `DISTRIBUTED`.
	FirewallDeploymentModel *string `pulumi:"firewallDeploymentModel"`
}

type PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyArgs struct {
	// Defines the deployment model to use for the third-party firewall policy. Valid values are `CENTRALIZED` and `DISTRIBUTED`.
	FirewallDeploymentModel pulumix.Input[*string] `pulumi:"firewallDeploymentModel"`
}

func (PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy)(nil)).Elem()
}

func (i PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyArgs) ToPolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput() PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput {
	return i.ToPolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutputWithContext(context.Background())
}

func (i PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyArgs) ToPolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput)
}

func (i *PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyArgs] {
	return pulumix.Val(i)
}

type PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput struct{ *pulumi.OutputState }

func (PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy)(nil)).Elem()
}

func (o PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput) ToPolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput() PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput) ToPolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy] {
	return pulumix.Output[PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy]{
		OutputState: o.OutputState,
	}
}

// Defines the deployment model to use for the third-party firewall policy. Valid values are `CENTRALIZED` and `DISTRIBUTED`.
func (o PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput) FirewallDeploymentModel() pulumix.Output[*string] {
	return pulumix.Apply[PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy](o, func(v PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicy) *string {
		return v.FirewallDeploymentModel
	})
}

func init() {
	pulumi.RegisterOutputType(PolicyExcludeMapOutput{})
	pulumi.RegisterOutputType(PolicyIncludeMapOutput{})
	pulumi.RegisterOutputType(PolicySecurityServicePolicyDataOutput{})
	pulumi.RegisterOutputType(PolicySecurityServicePolicyDataPolicyOptionOutput{})
	pulumi.RegisterOutputType(PolicySecurityServicePolicyDataPolicyOptionNetworkFirewallPolicyOutput{})
	pulumi.RegisterOutputType(PolicySecurityServicePolicyDataPolicyOptionThirdPartyFirewallPolicyOutput{})
}
