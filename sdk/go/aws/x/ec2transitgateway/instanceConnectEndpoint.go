// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EC2 Instance Connect Endpoint.
type InstanceConnectEndpoint struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the EC2 Instance Connect Endpoint.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Availability Zone of the EC2 Instance Connect Endpoint.
	AvailabilityZone pulumix.Output[string] `pulumi:"availabilityZone"`
	// The DNS name of the EC2 Instance Connect Endpoint.
	DnsName pulumix.Output[string] `pulumi:"dnsName"`
	// The DNS name of the EC2 Instance Connect FIPS Endpoint.
	FipsDnsName pulumix.Output[string] `pulumi:"fipsDnsName"`
	// The IDs of the ENIs that Amazon EC2 automatically created when creating the EC2 Instance Connect Endpoint.
	NetworkInterfaceIds pulumix.ArrayOutput[string] `pulumi:"networkInterfaceIds"`
	// The ID of the AWS account that created the EC2 Instance Connect Endpoint.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// Indicates whether your client's IP address is preserved as the source. Default: `true`.
	PreserveClientIp pulumix.Output[bool] `pulumi:"preserveClientIp"`
	// One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for the VPC will be associated with the endpoint.
	SecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"securityGroupIds"`
	// The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
	SubnetId pulumix.Output[string] `pulumi:"subnetId"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumix.MapOutput[string]                                                                  `pulumi:"tagsAll"`
	Timeouts pulumix.GPtrOutput[InstanceConnectEndpointTimeouts, InstanceConnectEndpointTimeoutsOutput] `pulumi:"timeouts"`
	// The ID of the VPC in which the EC2 Instance Connect Endpoint was created.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
}

// NewInstanceConnectEndpoint registers a new resource with the given unique name, arguments, and options.
func NewInstanceConnectEndpoint(ctx *pulumi.Context,
	name string, args *InstanceConnectEndpointArgs, opts ...pulumi.ResourceOption) (*InstanceConnectEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceConnectEndpoint
	err := ctx.RegisterResource("aws:ec2transitgateway/instanceConnectEndpoint:InstanceConnectEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceConnectEndpoint gets an existing InstanceConnectEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceConnectEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceConnectEndpointState, opts ...pulumi.ResourceOption) (*InstanceConnectEndpoint, error) {
	var resource InstanceConnectEndpoint
	err := ctx.ReadResource("aws:ec2transitgateway/instanceConnectEndpoint:InstanceConnectEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceConnectEndpoint resources.
type instanceConnectEndpointState struct {
	// The Amazon Resource Name (ARN) of the EC2 Instance Connect Endpoint.
	Arn *string `pulumi:"arn"`
	// The Availability Zone of the EC2 Instance Connect Endpoint.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The DNS name of the EC2 Instance Connect Endpoint.
	DnsName *string `pulumi:"dnsName"`
	// The DNS name of the EC2 Instance Connect FIPS Endpoint.
	FipsDnsName *string `pulumi:"fipsDnsName"`
	// The IDs of the ENIs that Amazon EC2 automatically created when creating the EC2 Instance Connect Endpoint.
	NetworkInterfaceIds []string `pulumi:"networkInterfaceIds"`
	// The ID of the AWS account that created the EC2 Instance Connect Endpoint.
	OwnerId *string `pulumi:"ownerId"`
	// Indicates whether your client's IP address is preserved as the source. Default: `true`.
	PreserveClientIp *bool `pulumi:"preserveClientIp"`
	// One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for the VPC will be associated with the endpoint.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
	SubnetId *string `pulumi:"subnetId"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  map[string]string                `pulumi:"tagsAll"`
	Timeouts *InstanceConnectEndpointTimeouts `pulumi:"timeouts"`
	// The ID of the VPC in which the EC2 Instance Connect Endpoint was created.
	VpcId *string `pulumi:"vpcId"`
}

type InstanceConnectEndpointState struct {
	// The Amazon Resource Name (ARN) of the EC2 Instance Connect Endpoint.
	Arn pulumix.Input[*string]
	// The Availability Zone of the EC2 Instance Connect Endpoint.
	AvailabilityZone pulumix.Input[*string]
	// The DNS name of the EC2 Instance Connect Endpoint.
	DnsName pulumix.Input[*string]
	// The DNS name of the EC2 Instance Connect FIPS Endpoint.
	FipsDnsName pulumix.Input[*string]
	// The IDs of the ENIs that Amazon EC2 automatically created when creating the EC2 Instance Connect Endpoint.
	NetworkInterfaceIds pulumix.Input[[]string]
	// The ID of the AWS account that created the EC2 Instance Connect Endpoint.
	OwnerId pulumix.Input[*string]
	// Indicates whether your client's IP address is preserved as the source. Default: `true`.
	PreserveClientIp pulumix.Input[*bool]
	// One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for the VPC will be associated with the endpoint.
	SecurityGroupIds pulumix.Input[[]string]
	// The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
	SubnetId pulumix.Input[*string]
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumix.Input[map[string]string]
	Timeouts pulumix.Input[*InstanceConnectEndpointTimeoutsArgs]
	// The ID of the VPC in which the EC2 Instance Connect Endpoint was created.
	VpcId pulumix.Input[*string]
}

func (InstanceConnectEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceConnectEndpointState)(nil)).Elem()
}

type instanceConnectEndpointArgs struct {
	// Indicates whether your client's IP address is preserved as the source. Default: `true`.
	PreserveClientIp *bool `pulumi:"preserveClientIp"`
	// One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for the VPC will be associated with the endpoint.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
	SubnetId string `pulumi:"subnetId"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string                `pulumi:"tags"`
	Timeouts *InstanceConnectEndpointTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a InstanceConnectEndpoint resource.
type InstanceConnectEndpointArgs struct {
	// Indicates whether your client's IP address is preserved as the source. Default: `true`.
	PreserveClientIp pulumix.Input[*bool]
	// One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for the VPC will be associated with the endpoint.
	SecurityGroupIds pulumix.Input[[]string]
	// The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
	SubnetId pulumix.Input[string]
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumix.Input[map[string]string]
	Timeouts pulumix.Input[*InstanceConnectEndpointTimeoutsArgs]
}

func (InstanceConnectEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceConnectEndpointArgs)(nil)).Elem()
}

type InstanceConnectEndpointOutput struct{ *pulumi.OutputState }

func (InstanceConnectEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConnectEndpoint)(nil)).Elem()
}

func (o InstanceConnectEndpointOutput) ToInstanceConnectEndpointOutput() InstanceConnectEndpointOutput {
	return o
}

func (o InstanceConnectEndpointOutput) ToInstanceConnectEndpointOutputWithContext(ctx context.Context) InstanceConnectEndpointOutput {
	return o
}

func (o InstanceConnectEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConnectEndpoint] {
	return pulumix.Output[InstanceConnectEndpoint]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the EC2 Instance Connect Endpoint.
func (o InstanceConnectEndpointOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Availability Zone of the EC2 Instance Connect Endpoint.
func (o InstanceConnectEndpointOutput) AvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.Output[string] { return v.AvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The DNS name of the EC2 Instance Connect Endpoint.
func (o InstanceConnectEndpointOutput) DnsName() pulumix.Output[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.Output[string] { return v.DnsName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The DNS name of the EC2 Instance Connect FIPS Endpoint.
func (o InstanceConnectEndpointOutput) FipsDnsName() pulumix.Output[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.Output[string] { return v.FipsDnsName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IDs of the ENIs that Amazon EC2 automatically created when creating the EC2 Instance Connect Endpoint.
func (o InstanceConnectEndpointOutput) NetworkInterfaceIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.ArrayOutput[string] { return v.NetworkInterfaceIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The ID of the AWS account that created the EC2 Instance Connect Endpoint.
func (o InstanceConnectEndpointOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether your client's IP address is preserved as the source. Default: `true`.
func (o InstanceConnectEndpointOutput) PreserveClientIp() pulumix.Output[bool] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.Output[bool] { return v.PreserveClientIp })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for the VPC will be associated with the endpoint.
func (o InstanceConnectEndpointOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.ArrayOutput[string] { return v.SecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The ID of the subnet in which to create the EC2 Instance Connect Endpoint.
func (o InstanceConnectEndpointOutput) SubnetId() pulumix.Output[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.Output[string] { return v.SubnetId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o InstanceConnectEndpointOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o InstanceConnectEndpointOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o InstanceConnectEndpointOutput) Timeouts() pulumix.GPtrOutput[InstanceConnectEndpointTimeouts, InstanceConnectEndpointTimeoutsOutput] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.GPtrOutput[InstanceConnectEndpointTimeouts, InstanceConnectEndpointTimeoutsOutput] {
		return v.Timeouts
	})
	unwrapped := pulumix.Flatten[*InstanceConnectEndpointTimeouts, pulumix.GPtrOutput[InstanceConnectEndpointTimeouts, InstanceConnectEndpointTimeoutsOutput]](value)
	return pulumix.GPtrOutput[InstanceConnectEndpointTimeouts, InstanceConnectEndpointTimeoutsOutput]{OutputState: unwrapped.OutputState}
}

// The ID of the VPC in which the EC2 Instance Connect Endpoint was created.
func (o InstanceConnectEndpointOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[InstanceConnectEndpoint](o, func(v InstanceConnectEndpoint) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(InstanceConnectEndpointOutput{})
}
