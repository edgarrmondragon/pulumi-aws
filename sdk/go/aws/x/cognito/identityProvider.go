// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Cognito User Identity Provider resource.
type IdentityProvider struct {
	pulumi.CustomResourceState

	// The map of attribute mapping of user pool attributes. [AttributeMapping in AWS API documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-AttributeMapping)
	AttributeMapping pulumix.MapOutput[string] `pulumi:"attributeMapping"`
	// The list of identity providers.
	IdpIdentifiers pulumix.ArrayOutput[string] `pulumi:"idpIdentifiers"`
	// The map of identity details, such as access token
	ProviderDetails pulumix.MapOutput[string] `pulumi:"providerDetails"`
	// The provider name
	ProviderName pulumix.Output[string] `pulumi:"providerName"`
	// The provider type.  [See AWS API for valid values](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-ProviderType)
	ProviderType pulumix.Output[string] `pulumi:"providerType"`
	// The user pool id
	UserPoolId pulumix.Output[string] `pulumi:"userPoolId"`
}

// NewIdentityProvider registers a new resource with the given unique name, arguments, and options.
func NewIdentityProvider(ctx *pulumi.Context,
	name string, args *IdentityProviderArgs, opts ...pulumi.ResourceOption) (*IdentityProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProviderDetails == nil {
		return nil, errors.New("invalid value for required argument 'ProviderDetails'")
	}
	if args.ProviderName == nil {
		return nil, errors.New("invalid value for required argument 'ProviderName'")
	}
	if args.ProviderType == nil {
		return nil, errors.New("invalid value for required argument 'ProviderType'")
	}
	if args.UserPoolId == nil {
		return nil, errors.New("invalid value for required argument 'UserPoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityProvider
	err := ctx.RegisterResource("aws:cognito/identityProvider:IdentityProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityProvider gets an existing IdentityProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityProviderState, opts ...pulumi.ResourceOption) (*IdentityProvider, error) {
	var resource IdentityProvider
	err := ctx.ReadResource("aws:cognito/identityProvider:IdentityProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityProvider resources.
type identityProviderState struct {
	// The map of attribute mapping of user pool attributes. [AttributeMapping in AWS API documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-AttributeMapping)
	AttributeMapping map[string]string `pulumi:"attributeMapping"`
	// The list of identity providers.
	IdpIdentifiers []string `pulumi:"idpIdentifiers"`
	// The map of identity details, such as access token
	ProviderDetails map[string]string `pulumi:"providerDetails"`
	// The provider name
	ProviderName *string `pulumi:"providerName"`
	// The provider type.  [See AWS API for valid values](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-ProviderType)
	ProviderType *string `pulumi:"providerType"`
	// The user pool id
	UserPoolId *string `pulumi:"userPoolId"`
}

type IdentityProviderState struct {
	// The map of attribute mapping of user pool attributes. [AttributeMapping in AWS API documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-AttributeMapping)
	AttributeMapping pulumix.Input[map[string]string]
	// The list of identity providers.
	IdpIdentifiers pulumix.Input[[]string]
	// The map of identity details, such as access token
	ProviderDetails pulumix.Input[map[string]string]
	// The provider name
	ProviderName pulumix.Input[*string]
	// The provider type.  [See AWS API for valid values](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-ProviderType)
	ProviderType pulumix.Input[*string]
	// The user pool id
	UserPoolId pulumix.Input[*string]
}

func (IdentityProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderState)(nil)).Elem()
}

type identityProviderArgs struct {
	// The map of attribute mapping of user pool attributes. [AttributeMapping in AWS API documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-AttributeMapping)
	AttributeMapping map[string]string `pulumi:"attributeMapping"`
	// The list of identity providers.
	IdpIdentifiers []string `pulumi:"idpIdentifiers"`
	// The map of identity details, such as access token
	ProviderDetails map[string]string `pulumi:"providerDetails"`
	// The provider name
	ProviderName string `pulumi:"providerName"`
	// The provider type.  [See AWS API for valid values](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-ProviderType)
	ProviderType string `pulumi:"providerType"`
	// The user pool id
	UserPoolId string `pulumi:"userPoolId"`
}

// The set of arguments for constructing a IdentityProvider resource.
type IdentityProviderArgs struct {
	// The map of attribute mapping of user pool attributes. [AttributeMapping in AWS API documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-AttributeMapping)
	AttributeMapping pulumix.Input[map[string]string]
	// The list of identity providers.
	IdpIdentifiers pulumix.Input[[]string]
	// The map of identity details, such as access token
	ProviderDetails pulumix.Input[map[string]string]
	// The provider name
	ProviderName pulumix.Input[string]
	// The provider type.  [See AWS API for valid values](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-ProviderType)
	ProviderType pulumix.Input[string]
	// The user pool id
	UserPoolId pulumix.Input[string]
}

func (IdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderArgs)(nil)).Elem()
}

type IdentityProviderOutput struct{ *pulumi.OutputState }

func (IdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProvider)(nil)).Elem()
}

func (o IdentityProviderOutput) ToIdentityProviderOutput() IdentityProviderOutput {
	return o
}

func (o IdentityProviderOutput) ToIdentityProviderOutputWithContext(ctx context.Context) IdentityProviderOutput {
	return o
}

func (o IdentityProviderOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityProvider] {
	return pulumix.Output[IdentityProvider]{
		OutputState: o.OutputState,
	}
}

// The map of attribute mapping of user pool attributes. [AttributeMapping in AWS API documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-AttributeMapping)
func (o IdentityProviderOutput) AttributeMapping() pulumix.MapOutput[string] {
	value := pulumix.Apply[IdentityProvider](o, func(v IdentityProvider) pulumix.MapOutput[string] { return v.AttributeMapping })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The list of identity providers.
func (o IdentityProviderOutput) IdpIdentifiers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[IdentityProvider](o, func(v IdentityProvider) pulumix.ArrayOutput[string] { return v.IdpIdentifiers })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The map of identity details, such as access token
func (o IdentityProviderOutput) ProviderDetails() pulumix.MapOutput[string] {
	value := pulumix.Apply[IdentityProvider](o, func(v IdentityProvider) pulumix.MapOutput[string] { return v.ProviderDetails })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The provider name
func (o IdentityProviderOutput) ProviderName() pulumix.Output[string] {
	value := pulumix.Apply[IdentityProvider](o, func(v IdentityProvider) pulumix.Output[string] { return v.ProviderName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The provider type.  [See AWS API for valid values](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-ProviderType)
func (o IdentityProviderOutput) ProviderType() pulumix.Output[string] {
	value := pulumix.Apply[IdentityProvider](o, func(v IdentityProvider) pulumix.Output[string] { return v.ProviderType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The user pool id
func (o IdentityProviderOutput) UserPoolId() pulumix.Output[string] {
	value := pulumix.Apply[IdentityProvider](o, func(v IdentityProvider) pulumix.Output[string] { return v.UserPoolId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(IdentityProviderOutput{})
}
