// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a VPC DHCP Options Association resource.
type VpcDhcpOptionsAssociation struct {
	pulumi.CustomResourceState

	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId pulumix.Output[string] `pulumi:"dhcpOptionsId"`
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
}

// NewVpcDhcpOptionsAssociation registers a new resource with the given unique name, arguments, and options.
func NewVpcDhcpOptionsAssociation(ctx *pulumi.Context,
	name string, args *VpcDhcpOptionsAssociationArgs, opts ...pulumi.ResourceOption) (*VpcDhcpOptionsAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DhcpOptionsId == nil {
		return nil, errors.New("invalid value for required argument 'DhcpOptionsId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcDhcpOptionsAssociation
	err := ctx.RegisterResource("aws:ec2/vpcDhcpOptionsAssociation:VpcDhcpOptionsAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcDhcpOptionsAssociation gets an existing VpcDhcpOptionsAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcDhcpOptionsAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcDhcpOptionsAssociationState, opts ...pulumi.ResourceOption) (*VpcDhcpOptionsAssociation, error) {
	var resource VpcDhcpOptionsAssociation
	err := ctx.ReadResource("aws:ec2/vpcDhcpOptionsAssociation:VpcDhcpOptionsAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcDhcpOptionsAssociation resources.
type vpcDhcpOptionsAssociationState struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId *string `pulumi:"dhcpOptionsId"`
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId *string `pulumi:"vpcId"`
}

type VpcDhcpOptionsAssociationState struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId pulumix.Input[*string]
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId pulumix.Input[*string]
}

func (VpcDhcpOptionsAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcDhcpOptionsAssociationState)(nil)).Elem()
}

type vpcDhcpOptionsAssociationArgs struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId string `pulumi:"dhcpOptionsId"`
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcDhcpOptionsAssociation resource.
type VpcDhcpOptionsAssociationArgs struct {
	// The ID of the DHCP Options Set to associate to the VPC.
	DhcpOptionsId pulumix.Input[string]
	// The ID of the VPC to which we would like to associate a DHCP Options Set.
	VpcId pulumix.Input[string]
}

func (VpcDhcpOptionsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcDhcpOptionsAssociationArgs)(nil)).Elem()
}

type VpcDhcpOptionsAssociationOutput struct{ *pulumi.OutputState }

func (VpcDhcpOptionsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcDhcpOptionsAssociation)(nil)).Elem()
}

func (o VpcDhcpOptionsAssociationOutput) ToVpcDhcpOptionsAssociationOutput() VpcDhcpOptionsAssociationOutput {
	return o
}

func (o VpcDhcpOptionsAssociationOutput) ToVpcDhcpOptionsAssociationOutputWithContext(ctx context.Context) VpcDhcpOptionsAssociationOutput {
	return o
}

func (o VpcDhcpOptionsAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[VpcDhcpOptionsAssociation] {
	return pulumix.Output[VpcDhcpOptionsAssociation]{
		OutputState: o.OutputState,
	}
}

// The ID of the DHCP Options Set to associate to the VPC.
func (o VpcDhcpOptionsAssociationOutput) DhcpOptionsId() pulumix.Output[string] {
	value := pulumix.Apply[VpcDhcpOptionsAssociation](o, func(v VpcDhcpOptionsAssociation) pulumix.Output[string] { return v.DhcpOptionsId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the VPC to which we would like to associate a DHCP Options Set.
func (o VpcDhcpOptionsAssociationOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[VpcDhcpOptionsAssociation](o, func(v VpcDhcpOptionsAssociation) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(VpcDhcpOptionsAssociationOutput{})
}
