// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a AWS Transfer Server resource.
//
// > **NOTE on AWS IAM permissions:** If the `endpointType` is set to `VPC`, the `ec2:DescribeVpcEndpoints` and `ec2:ModifyVpcEndpoint` [actions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonec2.html#amazonec2-actions-as-permissions) are used.
//
// > **NOTE:** Use the `transfer.Tag` resource to manage the system tags used for [custom hostnames](https://docs.aws.amazon.com/transfer/latest/userguide/requirements-dns.html#tag-custom-hostname-cdk).
type Server struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of Transfer Server
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when `protocols` is set to `FTPS`
	Certificate pulumix.Output[*string] `pulumi:"certificate"`
	// The directory service ID of the directory service you want to connect to with an `identityProviderType` of `AWS_DIRECTORY_SERVICE`.
	DirectoryId pulumix.Output[*string] `pulumi:"directoryId"`
	// The domain of the storage system that is used for file transfers. Valid values are: `S3` and `EFS`. The default value is `S3`.
	Domain pulumix.Output[*string] `pulumi:"domain"`
	// The endpoint of the Transfer Server (e.g., `s-12345678.server.transfer.REGION.amazonaws.com`)
	Endpoint pulumix.Output[string] `pulumi:"endpoint"`
	// The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.
	EndpointDetails pulumix.GPtrOutput[ServerEndpointDetails, ServerEndpointDetailsOutput] `pulumi:"endpointDetails"`
	// The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.
	EndpointType pulumix.Output[*string] `pulumi:"endpointType"`
	// A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`. This option only applies to servers configured with a `SERVICE_MANAGED` `identityProviderType`.
	ForceDestroy pulumix.Output[*bool] `pulumi:"forceDestroy"`
	// The ARN for a lambda function to use for the Identity provider.
	Function pulumix.Output[*string] `pulumi:"function"`
	// RSA, ECDSA, or ED25519 private key (e.g., as generated by the `ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key`, `ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key` or `ssh-keygen -t ed25519 -N "" -f my-new-server-key` commands).
	HostKey pulumix.Output[*string] `pulumi:"hostKey"`
	// This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the `ssh-keygen -l -E md5 -f my-new-server-key` command.
	HostKeyFingerprint pulumix.Output[string] `pulumi:"hostKeyFingerprint"`
	// The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using `AWS_DIRECTORY_SERVICE` will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the `AWS_LAMBDA` value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the `function` argument.
	IdentityProviderType pulumix.Output[*string] `pulumi:"identityProviderType"`
	// Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identityProviderType` of `API_GATEWAY`.
	InvocationRole pulumix.Output[*string] `pulumi:"invocationRole"`
	// Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
	LoggingRole pulumix.Output[*string] `pulumi:"loggingRole"`
	// Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.
	PostAuthenticationLoginBanner pulumix.Output[*string] `pulumi:"postAuthenticationLoginBanner"`
	// Specify a string to display when users connect to a server. This string is displayed before the user authenticates.
	PreAuthenticationLoginBanner pulumix.Output[*string] `pulumi:"preAuthenticationLoginBanner"`
	// The protocol settings that are configured for your server.
	ProtocolDetails pulumix.GPtrOutput[ServerProtocolDetails, ServerProtocolDetailsOutput] `pulumi:"protocolDetails"`
	// Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to `SFTP` . The available protocols are:
	Protocols pulumix.ArrayOutput[string] `pulumi:"protocols"`
	// Specifies the name of the security policy that is attached to the server. Possible values are `TransferSecurityPolicy-2018-11`, `TransferSecurityPolicy-2020-06`, `TransferSecurityPolicy-FIPS-2020-06`, `TransferSecurityPolicy-2022-03` and `TransferSecurityPolicy-2023-05`. Default value is: `TransferSecurityPolicy-2018-11`.
	SecurityPolicyName pulumix.Output[*string] `pulumi:"securityPolicyName"`
	// A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.
	StructuredLogDestinations pulumix.ArrayOutput[string] `pulumi:"structuredLogDestinations"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// URL of the service endpoint used to authenticate users with an `identityProviderType` of `API_GATEWAY`.
	Url pulumix.Output[*string] `pulumi:"url"`
	// Specifies the workflow details. See Workflow Details below.
	WorkflowDetails pulumix.GPtrOutput[ServerWorkflowDetails, ServerWorkflowDetailsOutput] `pulumi:"workflowDetails"`
}

// NewServer registers a new resource with the given unique name, arguments, and options.
func NewServer(ctx *pulumi.Context,
	name string, args *ServerArgs, opts ...pulumi.ResourceOption) (*Server, error) {
	if args == nil {
		args = &ServerArgs{}
	}

	if args.HostKey != nil {
		untypedSecretValue := pulumi.ToSecret(args.HostKey.ToOutput(ctx.Context()).Untyped())
		args.HostKey = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	if args.PostAuthenticationLoginBanner != nil {
		untypedSecretValue := pulumi.ToSecret(args.PostAuthenticationLoginBanner.ToOutput(ctx.Context()).Untyped())
		args.PostAuthenticationLoginBanner = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	if args.PreAuthenticationLoginBanner != nil {
		untypedSecretValue := pulumi.ToSecret(args.PreAuthenticationLoginBanner.ToOutput(ctx.Context()).Untyped())
		args.PreAuthenticationLoginBanner = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"hostKey",
		"postAuthenticationLoginBanner",
		"preAuthenticationLoginBanner",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Server
	err := ctx.RegisterResource("aws:transfer/server:Server", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServer gets an existing Server resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerState, opts ...pulumi.ResourceOption) (*Server, error) {
	var resource Server
	err := ctx.ReadResource("aws:transfer/server:Server", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Server resources.
type serverState struct {
	// Amazon Resource Name (ARN) of Transfer Server
	Arn *string `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when `protocols` is set to `FTPS`
	Certificate *string `pulumi:"certificate"`
	// The directory service ID of the directory service you want to connect to with an `identityProviderType` of `AWS_DIRECTORY_SERVICE`.
	DirectoryId *string `pulumi:"directoryId"`
	// The domain of the storage system that is used for file transfers. Valid values are: `S3` and `EFS`. The default value is `S3`.
	Domain *string `pulumi:"domain"`
	// The endpoint of the Transfer Server (e.g., `s-12345678.server.transfer.REGION.amazonaws.com`)
	Endpoint *string `pulumi:"endpoint"`
	// The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.
	EndpointDetails *ServerEndpointDetails `pulumi:"endpointDetails"`
	// The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.
	EndpointType *string `pulumi:"endpointType"`
	// A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`. This option only applies to servers configured with a `SERVICE_MANAGED` `identityProviderType`.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// The ARN for a lambda function to use for the Identity provider.
	Function *string `pulumi:"function"`
	// RSA, ECDSA, or ED25519 private key (e.g., as generated by the `ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key`, `ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key` or `ssh-keygen -t ed25519 -N "" -f my-new-server-key` commands).
	HostKey *string `pulumi:"hostKey"`
	// This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the `ssh-keygen -l -E md5 -f my-new-server-key` command.
	HostKeyFingerprint *string `pulumi:"hostKeyFingerprint"`
	// The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using `AWS_DIRECTORY_SERVICE` will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the `AWS_LAMBDA` value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the `function` argument.
	IdentityProviderType *string `pulumi:"identityProviderType"`
	// Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identityProviderType` of `API_GATEWAY`.
	InvocationRole *string `pulumi:"invocationRole"`
	// Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
	LoggingRole *string `pulumi:"loggingRole"`
	// Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.
	PostAuthenticationLoginBanner *string `pulumi:"postAuthenticationLoginBanner"`
	// Specify a string to display when users connect to a server. This string is displayed before the user authenticates.
	PreAuthenticationLoginBanner *string `pulumi:"preAuthenticationLoginBanner"`
	// The protocol settings that are configured for your server.
	ProtocolDetails *ServerProtocolDetails `pulumi:"protocolDetails"`
	// Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to `SFTP` . The available protocols are:
	Protocols []string `pulumi:"protocols"`
	// Specifies the name of the security policy that is attached to the server. Possible values are `TransferSecurityPolicy-2018-11`, `TransferSecurityPolicy-2020-06`, `TransferSecurityPolicy-FIPS-2020-06`, `TransferSecurityPolicy-2022-03` and `TransferSecurityPolicy-2023-05`. Default value is: `TransferSecurityPolicy-2018-11`.
	SecurityPolicyName *string `pulumi:"securityPolicyName"`
	// A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.
	StructuredLogDestinations []string `pulumi:"structuredLogDestinations"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// URL of the service endpoint used to authenticate users with an `identityProviderType` of `API_GATEWAY`.
	Url *string `pulumi:"url"`
	// Specifies the workflow details. See Workflow Details below.
	WorkflowDetails *ServerWorkflowDetails `pulumi:"workflowDetails"`
}

type ServerState struct {
	// Amazon Resource Name (ARN) of Transfer Server
	Arn pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when `protocols` is set to `FTPS`
	Certificate pulumix.Input[*string]
	// The directory service ID of the directory service you want to connect to with an `identityProviderType` of `AWS_DIRECTORY_SERVICE`.
	DirectoryId pulumix.Input[*string]
	// The domain of the storage system that is used for file transfers. Valid values are: `S3` and `EFS`. The default value is `S3`.
	Domain pulumix.Input[*string]
	// The endpoint of the Transfer Server (e.g., `s-12345678.server.transfer.REGION.amazonaws.com`)
	Endpoint pulumix.Input[*string]
	// The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.
	EndpointDetails pulumix.Input[*ServerEndpointDetailsArgs]
	// The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.
	EndpointType pulumix.Input[*string]
	// A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`. This option only applies to servers configured with a `SERVICE_MANAGED` `identityProviderType`.
	ForceDestroy pulumix.Input[*bool]
	// The ARN for a lambda function to use for the Identity provider.
	Function pulumix.Input[*string]
	// RSA, ECDSA, or ED25519 private key (e.g., as generated by the `ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key`, `ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key` or `ssh-keygen -t ed25519 -N "" -f my-new-server-key` commands).
	HostKey pulumix.Input[*string]
	// This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the `ssh-keygen -l -E md5 -f my-new-server-key` command.
	HostKeyFingerprint pulumix.Input[*string]
	// The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using `AWS_DIRECTORY_SERVICE` will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the `AWS_LAMBDA` value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the `function` argument.
	IdentityProviderType pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identityProviderType` of `API_GATEWAY`.
	InvocationRole pulumix.Input[*string]
	// Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
	LoggingRole pulumix.Input[*string]
	// Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.
	PostAuthenticationLoginBanner pulumix.Input[*string]
	// Specify a string to display when users connect to a server. This string is displayed before the user authenticates.
	PreAuthenticationLoginBanner pulumix.Input[*string]
	// The protocol settings that are configured for your server.
	ProtocolDetails pulumix.Input[*ServerProtocolDetailsArgs]
	// Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to `SFTP` . The available protocols are:
	Protocols pulumix.Input[[]string]
	// Specifies the name of the security policy that is attached to the server. Possible values are `TransferSecurityPolicy-2018-11`, `TransferSecurityPolicy-2020-06`, `TransferSecurityPolicy-FIPS-2020-06`, `TransferSecurityPolicy-2022-03` and `TransferSecurityPolicy-2023-05`. Default value is: `TransferSecurityPolicy-2018-11`.
	SecurityPolicyName pulumix.Input[*string]
	// A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.
	StructuredLogDestinations pulumix.Input[[]string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// URL of the service endpoint used to authenticate users with an `identityProviderType` of `API_GATEWAY`.
	Url pulumix.Input[*string]
	// Specifies the workflow details. See Workflow Details below.
	WorkflowDetails pulumix.Input[*ServerWorkflowDetailsArgs]
}

func (ServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverState)(nil)).Elem()
}

type serverArgs struct {
	// The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when `protocols` is set to `FTPS`
	Certificate *string `pulumi:"certificate"`
	// The directory service ID of the directory service you want to connect to with an `identityProviderType` of `AWS_DIRECTORY_SERVICE`.
	DirectoryId *string `pulumi:"directoryId"`
	// The domain of the storage system that is used for file transfers. Valid values are: `S3` and `EFS`. The default value is `S3`.
	Domain *string `pulumi:"domain"`
	// The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.
	EndpointDetails *ServerEndpointDetails `pulumi:"endpointDetails"`
	// The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.
	EndpointType *string `pulumi:"endpointType"`
	// A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`. This option only applies to servers configured with a `SERVICE_MANAGED` `identityProviderType`.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// The ARN for a lambda function to use for the Identity provider.
	Function *string `pulumi:"function"`
	// RSA, ECDSA, or ED25519 private key (e.g., as generated by the `ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key`, `ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key` or `ssh-keygen -t ed25519 -N "" -f my-new-server-key` commands).
	HostKey *string `pulumi:"hostKey"`
	// The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using `AWS_DIRECTORY_SERVICE` will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the `AWS_LAMBDA` value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the `function` argument.
	IdentityProviderType *string `pulumi:"identityProviderType"`
	// Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identityProviderType` of `API_GATEWAY`.
	InvocationRole *string `pulumi:"invocationRole"`
	// Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
	LoggingRole *string `pulumi:"loggingRole"`
	// Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.
	PostAuthenticationLoginBanner *string `pulumi:"postAuthenticationLoginBanner"`
	// Specify a string to display when users connect to a server. This string is displayed before the user authenticates.
	PreAuthenticationLoginBanner *string `pulumi:"preAuthenticationLoginBanner"`
	// The protocol settings that are configured for your server.
	ProtocolDetails *ServerProtocolDetails `pulumi:"protocolDetails"`
	// Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to `SFTP` . The available protocols are:
	Protocols []string `pulumi:"protocols"`
	// Specifies the name of the security policy that is attached to the server. Possible values are `TransferSecurityPolicy-2018-11`, `TransferSecurityPolicy-2020-06`, `TransferSecurityPolicy-FIPS-2020-06`, `TransferSecurityPolicy-2022-03` and `TransferSecurityPolicy-2023-05`. Default value is: `TransferSecurityPolicy-2018-11`.
	SecurityPolicyName *string `pulumi:"securityPolicyName"`
	// A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.
	StructuredLogDestinations []string `pulumi:"structuredLogDestinations"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// URL of the service endpoint used to authenticate users with an `identityProviderType` of `API_GATEWAY`.
	Url *string `pulumi:"url"`
	// Specifies the workflow details. See Workflow Details below.
	WorkflowDetails *ServerWorkflowDetails `pulumi:"workflowDetails"`
}

// The set of arguments for constructing a Server resource.
type ServerArgs struct {
	// The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when `protocols` is set to `FTPS`
	Certificate pulumix.Input[*string]
	// The directory service ID of the directory service you want to connect to with an `identityProviderType` of `AWS_DIRECTORY_SERVICE`.
	DirectoryId pulumix.Input[*string]
	// The domain of the storage system that is used for file transfers. Valid values are: `S3` and `EFS`. The default value is `S3`.
	Domain pulumix.Input[*string]
	// The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.
	EndpointDetails pulumix.Input[*ServerEndpointDetailsArgs]
	// The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.
	EndpointType pulumix.Input[*string]
	// A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`. This option only applies to servers configured with a `SERVICE_MANAGED` `identityProviderType`.
	ForceDestroy pulumix.Input[*bool]
	// The ARN for a lambda function to use for the Identity provider.
	Function pulumix.Input[*string]
	// RSA, ECDSA, or ED25519 private key (e.g., as generated by the `ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key`, `ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key` or `ssh-keygen -t ed25519 -N "" -f my-new-server-key` commands).
	HostKey pulumix.Input[*string]
	// The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using `AWS_DIRECTORY_SERVICE` will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the `AWS_LAMBDA` value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the `function` argument.
	IdentityProviderType pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identityProviderType` of `API_GATEWAY`.
	InvocationRole pulumix.Input[*string]
	// Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
	LoggingRole pulumix.Input[*string]
	// Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.
	PostAuthenticationLoginBanner pulumix.Input[*string]
	// Specify a string to display when users connect to a server. This string is displayed before the user authenticates.
	PreAuthenticationLoginBanner pulumix.Input[*string]
	// The protocol settings that are configured for your server.
	ProtocolDetails pulumix.Input[*ServerProtocolDetailsArgs]
	// Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to `SFTP` . The available protocols are:
	Protocols pulumix.Input[[]string]
	// Specifies the name of the security policy that is attached to the server. Possible values are `TransferSecurityPolicy-2018-11`, `TransferSecurityPolicy-2020-06`, `TransferSecurityPolicy-FIPS-2020-06`, `TransferSecurityPolicy-2022-03` and `TransferSecurityPolicy-2023-05`. Default value is: `TransferSecurityPolicy-2018-11`.
	SecurityPolicyName pulumix.Input[*string]
	// A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.
	StructuredLogDestinations pulumix.Input[[]string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// URL of the service endpoint used to authenticate users with an `identityProviderType` of `API_GATEWAY`.
	Url pulumix.Input[*string]
	// Specifies the workflow details. See Workflow Details below.
	WorkflowDetails pulumix.Input[*ServerWorkflowDetailsArgs]
}

func (ServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverArgs)(nil)).Elem()
}

type ServerOutput struct{ *pulumi.OutputState }

func (ServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Server)(nil)).Elem()
}

func (o ServerOutput) ToServerOutput() ServerOutput {
	return o
}

func (o ServerOutput) ToServerOutputWithContext(ctx context.Context) ServerOutput {
	return o
}

func (o ServerOutput) ToOutput(ctx context.Context) pulumix.Output[Server] {
	return pulumix.Output[Server]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of Transfer Server
func (o ServerOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when `protocols` is set to `FTPS`
func (o ServerOutput) Certificate() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.Certificate })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The directory service ID of the directory service you want to connect to with an `identityProviderType` of `AWS_DIRECTORY_SERVICE`.
func (o ServerOutput) DirectoryId() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.DirectoryId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The domain of the storage system that is used for file transfers. Valid values are: `S3` and `EFS`. The default value is `S3`.
func (o ServerOutput) Domain() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.Domain })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The endpoint of the Transfer Server (e.g., `s-12345678.server.transfer.REGION.amazonaws.com`)
func (o ServerOutput) Endpoint() pulumix.Output[string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[string] { return v.Endpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.
func (o ServerOutput) EndpointDetails() pulumix.GPtrOutput[ServerEndpointDetails, ServerEndpointDetailsOutput] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.GPtrOutput[ServerEndpointDetails, ServerEndpointDetailsOutput] {
		return v.EndpointDetails
	})
	unwrapped := pulumix.Flatten[*ServerEndpointDetails, pulumix.GPtrOutput[ServerEndpointDetails, ServerEndpointDetailsOutput]](value)
	return pulumix.GPtrOutput[ServerEndpointDetails, ServerEndpointDetailsOutput]{OutputState: unwrapped.OutputState}
}

// The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.
func (o ServerOutput) EndpointType() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.EndpointType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`. This option only applies to servers configured with a `SERVICE_MANAGED` `identityProviderType`.
func (o ServerOutput) ForceDestroy() pulumix.Output[*bool] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*bool] { return v.ForceDestroy })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The ARN for a lambda function to use for the Identity provider.
func (o ServerOutput) Function() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.Function })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// RSA, ECDSA, or ED25519 private key (e.g., as generated by the `ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key`, `ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key` or `ssh-keygen -t ed25519 -N "" -f my-new-server-key` commands).
func (o ServerOutput) HostKey() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.HostKey })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the `ssh-keygen -l -E md5 -f my-new-server-key` command.
func (o ServerOutput) HostKeyFingerprint() pulumix.Output[string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[string] { return v.HostKeyFingerprint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using `AWS_DIRECTORY_SERVICE` will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the `AWS_LAMBDA` value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the `function` argument.
func (o ServerOutput) IdentityProviderType() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.IdentityProviderType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identityProviderType` of `API_GATEWAY`.
func (o ServerOutput) InvocationRole() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.InvocationRole })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
func (o ServerOutput) LoggingRole() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.LoggingRole })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.
func (o ServerOutput) PostAuthenticationLoginBanner() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.PostAuthenticationLoginBanner })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specify a string to display when users connect to a server. This string is displayed before the user authenticates.
func (o ServerOutput) PreAuthenticationLoginBanner() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.PreAuthenticationLoginBanner })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The protocol settings that are configured for your server.
func (o ServerOutput) ProtocolDetails() pulumix.GPtrOutput[ServerProtocolDetails, ServerProtocolDetailsOutput] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.GPtrOutput[ServerProtocolDetails, ServerProtocolDetailsOutput] {
		return v.ProtocolDetails
	})
	unwrapped := pulumix.Flatten[*ServerProtocolDetails, pulumix.GPtrOutput[ServerProtocolDetails, ServerProtocolDetailsOutput]](value)
	return pulumix.GPtrOutput[ServerProtocolDetails, ServerProtocolDetailsOutput]{OutputState: unwrapped.OutputState}
}

// Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to `SFTP` . The available protocols are:
func (o ServerOutput) Protocols() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.ArrayOutput[string] { return v.Protocols })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Specifies the name of the security policy that is attached to the server. Possible values are `TransferSecurityPolicy-2018-11`, `TransferSecurityPolicy-2020-06`, `TransferSecurityPolicy-FIPS-2020-06`, `TransferSecurityPolicy-2022-03` and `TransferSecurityPolicy-2023-05`. Default value is: `TransferSecurityPolicy-2018-11`.
func (o ServerOutput) SecurityPolicyName() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.SecurityPolicyName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.
func (o ServerOutput) StructuredLogDestinations() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.ArrayOutput[string] { return v.StructuredLogDestinations })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ServerOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ServerOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// URL of the service endpoint used to authenticate users with an `identityProviderType` of `API_GATEWAY`.
func (o ServerOutput) Url() pulumix.Output[*string] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.Output[*string] { return v.Url })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies the workflow details. See Workflow Details below.
func (o ServerOutput) WorkflowDetails() pulumix.GPtrOutput[ServerWorkflowDetails, ServerWorkflowDetailsOutput] {
	value := pulumix.Apply[Server](o, func(v Server) pulumix.GPtrOutput[ServerWorkflowDetails, ServerWorkflowDetailsOutput] {
		return v.WorkflowDetails
	})
	unwrapped := pulumix.Flatten[*ServerWorkflowDetails, pulumix.GPtrOutput[ServerWorkflowDetails, ServerWorkflowDetailsOutput]](value)
	return pulumix.GPtrOutput[ServerWorkflowDetails, ServerWorkflowDetailsOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ServerOutput{})
}
