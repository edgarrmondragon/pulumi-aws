// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ProductProvisioningArtifactParameters struct {
	// Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
	Description *string `pulumi:"description"`
	// Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
	DisableTemplateValidation *bool `pulumi:"disableTemplateValidation"`
	// Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
	Name *string `pulumi:"name"`
	// Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
	TemplatePhysicalId *string `pulumi:"templatePhysicalId"`
	// Template source as URL of the CloudFormation template in Amazon S3.
	TemplateUrl *string `pulumi:"templateUrl"`
	// Type of provisioning artifact. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ProvisioningArtifactProperties.html) for valid list of values.
	Type *string `pulumi:"type"`
}

type ProductProvisioningArtifactParametersArgs struct {
	// Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
	Description pulumix.Input[*string] `pulumi:"description"`
	// Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
	DisableTemplateValidation pulumix.Input[*bool] `pulumi:"disableTemplateValidation"`
	// Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
	Name pulumix.Input[*string] `pulumi:"name"`
	// Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
	TemplatePhysicalId pulumix.Input[*string] `pulumi:"templatePhysicalId"`
	// Template source as URL of the CloudFormation template in Amazon S3.
	TemplateUrl pulumix.Input[*string] `pulumi:"templateUrl"`
	// Type of provisioning artifact. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ProvisioningArtifactProperties.html) for valid list of values.
	Type pulumix.Input[*string] `pulumi:"type"`
}

func (ProductProvisioningArtifactParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductProvisioningArtifactParameters)(nil)).Elem()
}

func (i ProductProvisioningArtifactParametersArgs) ToProductProvisioningArtifactParametersOutput() ProductProvisioningArtifactParametersOutput {
	return i.ToProductProvisioningArtifactParametersOutputWithContext(context.Background())
}

func (i ProductProvisioningArtifactParametersArgs) ToProductProvisioningArtifactParametersOutputWithContext(ctx context.Context) ProductProvisioningArtifactParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductProvisioningArtifactParametersOutput)
}

func (i *ProductProvisioningArtifactParametersArgs) ToOutput(ctx context.Context) pulumix.Output[*ProductProvisioningArtifactParametersArgs] {
	return pulumix.Val(i)
}

type ProductProvisioningArtifactParametersOutput struct{ *pulumi.OutputState }

func (ProductProvisioningArtifactParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductProvisioningArtifactParameters)(nil)).Elem()
}

func (o ProductProvisioningArtifactParametersOutput) ToProductProvisioningArtifactParametersOutput() ProductProvisioningArtifactParametersOutput {
	return o
}

func (o ProductProvisioningArtifactParametersOutput) ToProductProvisioningArtifactParametersOutputWithContext(ctx context.Context) ProductProvisioningArtifactParametersOutput {
	return o
}

func (o ProductProvisioningArtifactParametersOutput) ToOutput(ctx context.Context) pulumix.Output[ProductProvisioningArtifactParameters] {
	return pulumix.Output[ProductProvisioningArtifactParameters]{
		OutputState: o.OutputState,
	}
}

// Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
func (o ProductProvisioningArtifactParametersOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[ProductProvisioningArtifactParameters](o, func(v ProductProvisioningArtifactParameters) *string { return v.Description })
}

// Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
func (o ProductProvisioningArtifactParametersOutput) DisableTemplateValidation() pulumix.Output[*bool] {
	return pulumix.Apply[ProductProvisioningArtifactParameters](o, func(v ProductProvisioningArtifactParameters) *bool { return v.DisableTemplateValidation })
}

// Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
func (o ProductProvisioningArtifactParametersOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[ProductProvisioningArtifactParameters](o, func(v ProductProvisioningArtifactParameters) *string { return v.Name })
}

// Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
func (o ProductProvisioningArtifactParametersOutput) TemplatePhysicalId() pulumix.Output[*string] {
	return pulumix.Apply[ProductProvisioningArtifactParameters](o, func(v ProductProvisioningArtifactParameters) *string { return v.TemplatePhysicalId })
}

// Template source as URL of the CloudFormation template in Amazon S3.
func (o ProductProvisioningArtifactParametersOutput) TemplateUrl() pulumix.Output[*string] {
	return pulumix.Apply[ProductProvisioningArtifactParameters](o, func(v ProductProvisioningArtifactParameters) *string { return v.TemplateUrl })
}

// Type of provisioning artifact. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ProvisioningArtifactProperties.html) for valid list of values.
func (o ProductProvisioningArtifactParametersOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[ProductProvisioningArtifactParameters](o, func(v ProductProvisioningArtifactParameters) *string { return v.Type })
}

type ProvisionedProductOutputType struct {
	// The description of the output.
	Description *string `pulumi:"description"`
	// Parameter key.
	Key *string `pulumi:"key"`
	// Parameter value.
	Value *string `pulumi:"value"`
}

type ProvisionedProductOutputTypeArgs struct {
	// The description of the output.
	Description pulumix.Input[*string] `pulumi:"description"`
	// Parameter key.
	Key pulumix.Input[*string] `pulumi:"key"`
	// Parameter value.
	Value pulumix.Input[*string] `pulumi:"value"`
}

func (ProvisionedProductOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductOutputType)(nil)).Elem()
}

func (i ProvisionedProductOutputTypeArgs) ToProvisionedProductOutputTypeOutput() ProvisionedProductOutputTypeOutput {
	return i.ToProvisionedProductOutputTypeOutputWithContext(context.Background())
}

func (i ProvisionedProductOutputTypeArgs) ToProvisionedProductOutputTypeOutputWithContext(ctx context.Context) ProvisionedProductOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductOutputTypeOutput)
}

func (i *ProvisionedProductOutputTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*ProvisionedProductOutputTypeArgs] {
	return pulumix.Val(i)
}

type ProvisionedProductOutputTypeOutput struct{ *pulumi.OutputState }

func (ProvisionedProductOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductOutputType)(nil)).Elem()
}

func (o ProvisionedProductOutputTypeOutput) ToProvisionedProductOutputTypeOutput() ProvisionedProductOutputTypeOutput {
	return o
}

func (o ProvisionedProductOutputTypeOutput) ToProvisionedProductOutputTypeOutputWithContext(ctx context.Context) ProvisionedProductOutputTypeOutput {
	return o
}

func (o ProvisionedProductOutputTypeOutput) ToOutput(ctx context.Context) pulumix.Output[ProvisionedProductOutputType] {
	return pulumix.Output[ProvisionedProductOutputType]{
		OutputState: o.OutputState,
	}
}

// The description of the output.
func (o ProvisionedProductOutputTypeOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[ProvisionedProductOutputType](o, func(v ProvisionedProductOutputType) *string { return v.Description })
}

// Parameter key.
func (o ProvisionedProductOutputTypeOutput) Key() pulumix.Output[*string] {
	return pulumix.Apply[ProvisionedProductOutputType](o, func(v ProvisionedProductOutputType) *string { return v.Key })
}

// Parameter value.
func (o ProvisionedProductOutputTypeOutput) Value() pulumix.Output[*string] {
	return pulumix.Apply[ProvisionedProductOutputType](o, func(v ProvisionedProductOutputType) *string { return v.Value })
}

type ProvisionedProductProvisioningParameter struct {
	// Parameter key.
	Key string `pulumi:"key"`
	// Whether to ignore `value` and keep the previous parameter value. Ignored when initially provisioning a product.
	UsePreviousValue *bool `pulumi:"usePreviousValue"`
	// Parameter value.
	Value *string `pulumi:"value"`
}

type ProvisionedProductProvisioningParameterArgs struct {
	// Parameter key.
	Key pulumix.Input[string] `pulumi:"key"`
	// Whether to ignore `value` and keep the previous parameter value. Ignored when initially provisioning a product.
	UsePreviousValue pulumix.Input[*bool] `pulumi:"usePreviousValue"`
	// Parameter value.
	Value pulumix.Input[*string] `pulumi:"value"`
}

func (ProvisionedProductProvisioningParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductProvisioningParameter)(nil)).Elem()
}

func (i ProvisionedProductProvisioningParameterArgs) ToProvisionedProductProvisioningParameterOutput() ProvisionedProductProvisioningParameterOutput {
	return i.ToProvisionedProductProvisioningParameterOutputWithContext(context.Background())
}

func (i ProvisionedProductProvisioningParameterArgs) ToProvisionedProductProvisioningParameterOutputWithContext(ctx context.Context) ProvisionedProductProvisioningParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductProvisioningParameterOutput)
}

func (i *ProvisionedProductProvisioningParameterArgs) ToOutput(ctx context.Context) pulumix.Output[*ProvisionedProductProvisioningParameterArgs] {
	return pulumix.Val(i)
}

type ProvisionedProductProvisioningParameterOutput struct{ *pulumi.OutputState }

func (ProvisionedProductProvisioningParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductProvisioningParameter)(nil)).Elem()
}

func (o ProvisionedProductProvisioningParameterOutput) ToProvisionedProductProvisioningParameterOutput() ProvisionedProductProvisioningParameterOutput {
	return o
}

func (o ProvisionedProductProvisioningParameterOutput) ToProvisionedProductProvisioningParameterOutputWithContext(ctx context.Context) ProvisionedProductProvisioningParameterOutput {
	return o
}

func (o ProvisionedProductProvisioningParameterOutput) ToOutput(ctx context.Context) pulumix.Output[ProvisionedProductProvisioningParameter] {
	return pulumix.Output[ProvisionedProductProvisioningParameter]{
		OutputState: o.OutputState,
	}
}

// Parameter key.
func (o ProvisionedProductProvisioningParameterOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[ProvisionedProductProvisioningParameter](o, func(v ProvisionedProductProvisioningParameter) string { return v.Key })
}

// Whether to ignore `value` and keep the previous parameter value. Ignored when initially provisioning a product.
func (o ProvisionedProductProvisioningParameterOutput) UsePreviousValue() pulumix.Output[*bool] {
	return pulumix.Apply[ProvisionedProductProvisioningParameter](o, func(v ProvisionedProductProvisioningParameter) *bool { return v.UsePreviousValue })
}

// Parameter value.
func (o ProvisionedProductProvisioningParameterOutput) Value() pulumix.Output[*string] {
	return pulumix.Apply[ProvisionedProductProvisioningParameter](o, func(v ProvisionedProductProvisioningParameter) *string { return v.Value })
}

type ProvisionedProductStackSetProvisioningPreferences struct {
	// One or more AWS accounts that will have access to the provisioned product. The AWS accounts specified should be within the list of accounts in the STACKSET constraint. To get the list of accounts in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all accounts from the STACKSET constraint.
	Accounts []string `pulumi:"accounts"`
	// Number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both. The default value is 0 if no value is specified.
	FailureToleranceCount *int `pulumi:"failureToleranceCount"`
	// Percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both.
	FailureTolerancePercentage *int `pulumi:"failureTolerancePercentage"`
	// Maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `failureToleranceCount`. `maxConcurrencyCount` is at most one more than the `failureToleranceCount`. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
	MaxConcurrencyCount *int `pulumi:"maxConcurrencyCount"`
	// Maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as 1 instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
	MaxConcurrencyPercentage *int `pulumi:"maxConcurrencyPercentage"`
	// One or more AWS Regions where the provisioned product will be available. The specified regions should be within the list of regions from the STACKSET constraint. To get the list of regions in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all regions from the STACKSET constraint.
	Regions []string `pulumi:"regions"`
}

type ProvisionedProductStackSetProvisioningPreferencesArgs struct {
	// One or more AWS accounts that will have access to the provisioned product. The AWS accounts specified should be within the list of accounts in the STACKSET constraint. To get the list of accounts in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all accounts from the STACKSET constraint.
	Accounts pulumix.Input[[]string] `pulumi:"accounts"`
	// Number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both. The default value is 0 if no value is specified.
	FailureToleranceCount pulumix.Input[*int] `pulumi:"failureToleranceCount"`
	// Percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both.
	FailureTolerancePercentage pulumix.Input[*int] `pulumi:"failureTolerancePercentage"`
	// Maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `failureToleranceCount`. `maxConcurrencyCount` is at most one more than the `failureToleranceCount`. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
	MaxConcurrencyCount pulumix.Input[*int] `pulumi:"maxConcurrencyCount"`
	// Maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as 1 instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
	MaxConcurrencyPercentage pulumix.Input[*int] `pulumi:"maxConcurrencyPercentage"`
	// One or more AWS Regions where the provisioned product will be available. The specified regions should be within the list of regions from the STACKSET constraint. To get the list of regions in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all regions from the STACKSET constraint.
	Regions pulumix.Input[[]string] `pulumi:"regions"`
}

func (ProvisionedProductStackSetProvisioningPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductStackSetProvisioningPreferences)(nil)).Elem()
}

func (i ProvisionedProductStackSetProvisioningPreferencesArgs) ToProvisionedProductStackSetProvisioningPreferencesOutput() ProvisionedProductStackSetProvisioningPreferencesOutput {
	return i.ToProvisionedProductStackSetProvisioningPreferencesOutputWithContext(context.Background())
}

func (i ProvisionedProductStackSetProvisioningPreferencesArgs) ToProvisionedProductStackSetProvisioningPreferencesOutputWithContext(ctx context.Context) ProvisionedProductStackSetProvisioningPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductStackSetProvisioningPreferencesOutput)
}

func (i *ProvisionedProductStackSetProvisioningPreferencesArgs) ToOutput(ctx context.Context) pulumix.Output[*ProvisionedProductStackSetProvisioningPreferencesArgs] {
	return pulumix.Val(i)
}

type ProvisionedProductStackSetProvisioningPreferencesOutput struct{ *pulumi.OutputState }

func (ProvisionedProductStackSetProvisioningPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductStackSetProvisioningPreferences)(nil)).Elem()
}

func (o ProvisionedProductStackSetProvisioningPreferencesOutput) ToProvisionedProductStackSetProvisioningPreferencesOutput() ProvisionedProductStackSetProvisioningPreferencesOutput {
	return o
}

func (o ProvisionedProductStackSetProvisioningPreferencesOutput) ToProvisionedProductStackSetProvisioningPreferencesOutputWithContext(ctx context.Context) ProvisionedProductStackSetProvisioningPreferencesOutput {
	return o
}

func (o ProvisionedProductStackSetProvisioningPreferencesOutput) ToOutput(ctx context.Context) pulumix.Output[ProvisionedProductStackSetProvisioningPreferences] {
	return pulumix.Output[ProvisionedProductStackSetProvisioningPreferences]{
		OutputState: o.OutputState,
	}
}

// One or more AWS accounts that will have access to the provisioned product. The AWS accounts specified should be within the list of accounts in the STACKSET constraint. To get the list of accounts in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all accounts from the STACKSET constraint.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) Accounts() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProvisionedProductStackSetProvisioningPreferences](o, func(v ProvisionedProductStackSetProvisioningPreferences) []string { return v.Accounts })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both. The default value is 0 if no value is specified.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) FailureToleranceCount() pulumix.Output[*int] {
	return pulumix.Apply[ProvisionedProductStackSetProvisioningPreferences](o, func(v ProvisionedProductStackSetProvisioningPreferences) *int { return v.FailureToleranceCount })
}

// Percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) FailureTolerancePercentage() pulumix.Output[*int] {
	return pulumix.Apply[ProvisionedProductStackSetProvisioningPreferences](o, func(v ProvisionedProductStackSetProvisioningPreferences) *int { return v.FailureTolerancePercentage })
}

// Maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `failureToleranceCount`. `maxConcurrencyCount` is at most one more than the `failureToleranceCount`. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) MaxConcurrencyCount() pulumix.Output[*int] {
	return pulumix.Apply[ProvisionedProductStackSetProvisioningPreferences](o, func(v ProvisionedProductStackSetProvisioningPreferences) *int { return v.MaxConcurrencyCount })
}

// Maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as 1 instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) MaxConcurrencyPercentage() pulumix.Output[*int] {
	return pulumix.Apply[ProvisionedProductStackSetProvisioningPreferences](o, func(v ProvisionedProductStackSetProvisioningPreferences) *int { return v.MaxConcurrencyPercentage })
}

// One or more AWS Regions where the provisioned product will be available. The specified regions should be within the list of regions from the STACKSET constraint. To get the list of regions in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all regions from the STACKSET constraint.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) Regions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProvisionedProductStackSetProvisioningPreferences](o, func(v ProvisionedProductStackSetProvisioningPreferences) []string { return v.Regions })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ServiceActionDefinition struct {
	// ARN of the role that performs the self-service actions on your behalf. For example, `arn:aws:iam::12345678910:role/ActionRole`. To reuse the provisioned product launch role, set to `LAUNCH_ROLE`.
	AssumeRole *string `pulumi:"assumeRole"`
	// Name of the SSM document. For example, `AWS-RestartEC2Instance`. If you are using a shared SSM document, you must provide the ARN instead of the name.
	Name string `pulumi:"name"`
	// List of parameters in JSON format. For example: `[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]` or `[{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}]`.
	Parameters *string `pulumi:"parameters"`
	// Service action definition type. Valid value is `SSM_AUTOMATION`. Default is `SSM_AUTOMATION`.
	Type *string `pulumi:"type"`
	// SSM document version. For example, `1`.
	Version string `pulumi:"version"`
}

type ServiceActionDefinitionArgs struct {
	// ARN of the role that performs the self-service actions on your behalf. For example, `arn:aws:iam::12345678910:role/ActionRole`. To reuse the provisioned product launch role, set to `LAUNCH_ROLE`.
	AssumeRole pulumix.Input[*string] `pulumi:"assumeRole"`
	// Name of the SSM document. For example, `AWS-RestartEC2Instance`. If you are using a shared SSM document, you must provide the ARN instead of the name.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of parameters in JSON format. For example: `[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]` or `[{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}]`.
	Parameters pulumix.Input[*string] `pulumi:"parameters"`
	// Service action definition type. Valid value is `SSM_AUTOMATION`. Default is `SSM_AUTOMATION`.
	Type pulumix.Input[*string] `pulumi:"type"`
	// SSM document version. For example, `1`.
	Version pulumix.Input[string] `pulumi:"version"`
}

func (ServiceActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceActionDefinition)(nil)).Elem()
}

func (i ServiceActionDefinitionArgs) ToServiceActionDefinitionOutput() ServiceActionDefinitionOutput {
	return i.ToServiceActionDefinitionOutputWithContext(context.Background())
}

func (i ServiceActionDefinitionArgs) ToServiceActionDefinitionOutputWithContext(ctx context.Context) ServiceActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceActionDefinitionOutput)
}

func (i *ServiceActionDefinitionArgs) ToOutput(ctx context.Context) pulumix.Output[*ServiceActionDefinitionArgs] {
	return pulumix.Val(i)
}

type ServiceActionDefinitionOutput struct{ *pulumi.OutputState }

func (ServiceActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceActionDefinition)(nil)).Elem()
}

func (o ServiceActionDefinitionOutput) ToServiceActionDefinitionOutput() ServiceActionDefinitionOutput {
	return o
}

func (o ServiceActionDefinitionOutput) ToServiceActionDefinitionOutputWithContext(ctx context.Context) ServiceActionDefinitionOutput {
	return o
}

func (o ServiceActionDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceActionDefinition] {
	return pulumix.Output[ServiceActionDefinition]{
		OutputState: o.OutputState,
	}
}

// ARN of the role that performs the self-service actions on your behalf. For example, `arn:aws:iam::12345678910:role/ActionRole`. To reuse the provisioned product launch role, set to `LAUNCH_ROLE`.
func (o ServiceActionDefinitionOutput) AssumeRole() pulumix.Output[*string] {
	return pulumix.Apply[ServiceActionDefinition](o, func(v ServiceActionDefinition) *string { return v.AssumeRole })
}

// Name of the SSM document. For example, `AWS-RestartEC2Instance`. If you are using a shared SSM document, you must provide the ARN instead of the name.
func (o ServiceActionDefinitionOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[ServiceActionDefinition](o, func(v ServiceActionDefinition) string { return v.Name })
}

// List of parameters in JSON format. For example: `[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]` or `[{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}]`.
func (o ServiceActionDefinitionOutput) Parameters() pulumix.Output[*string] {
	return pulumix.Apply[ServiceActionDefinition](o, func(v ServiceActionDefinition) *string { return v.Parameters })
}

// Service action definition type. Valid value is `SSM_AUTOMATION`. Default is `SSM_AUTOMATION`.
func (o ServiceActionDefinitionOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[ServiceActionDefinition](o, func(v ServiceActionDefinition) *string { return v.Type })
}

// SSM document version. For example, `1`.
func (o ServiceActionDefinitionOutput) Version() pulumix.Output[string] {
	return pulumix.Apply[ServiceActionDefinition](o, func(v ServiceActionDefinition) string { return v.Version })
}

type GetLaunchPathsSummary struct {
	// Block for constraints on the portfolio-product relationship. See details below.
	ConstraintSummaries []GetLaunchPathsSummaryConstraintSummary `pulumi:"constraintSummaries"`
	// Name of the portfolio to which the path was assigned.
	Name string `pulumi:"name"`
	// Identifier of the product path.
	PathId string `pulumi:"pathId"`
	// Tags associated with this product path.
	Tags map[string]string `pulumi:"tags"`
}

type GetLaunchPathsSummaryArgs struct {
	// Block for constraints on the portfolio-product relationship. See details below.
	ConstraintSummaries pulumix.Input[[]*GetLaunchPathsSummaryConstraintSummaryArgs] `pulumi:"constraintSummaries"`
	// Name of the portfolio to which the path was assigned.
	Name pulumix.Input[string] `pulumi:"name"`
	// Identifier of the product path.
	PathId pulumix.Input[string] `pulumi:"pathId"`
	// Tags associated with this product path.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (GetLaunchPathsSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchPathsSummary)(nil)).Elem()
}

func (i GetLaunchPathsSummaryArgs) ToGetLaunchPathsSummaryOutput() GetLaunchPathsSummaryOutput {
	return i.ToGetLaunchPathsSummaryOutputWithContext(context.Background())
}

func (i GetLaunchPathsSummaryArgs) ToGetLaunchPathsSummaryOutputWithContext(ctx context.Context) GetLaunchPathsSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchPathsSummaryOutput)
}

func (i *GetLaunchPathsSummaryArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchPathsSummaryArgs] {
	return pulumix.Val(i)
}

type GetLaunchPathsSummaryOutput struct{ *pulumi.OutputState }

func (GetLaunchPathsSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchPathsSummary)(nil)).Elem()
}

func (o GetLaunchPathsSummaryOutput) ToGetLaunchPathsSummaryOutput() GetLaunchPathsSummaryOutput {
	return o
}

func (o GetLaunchPathsSummaryOutput) ToGetLaunchPathsSummaryOutputWithContext(ctx context.Context) GetLaunchPathsSummaryOutput {
	return o
}

func (o GetLaunchPathsSummaryOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchPathsSummary] {
	return pulumix.Output[GetLaunchPathsSummary]{
		OutputState: o.OutputState,
	}
}

// Block for constraints on the portfolio-product relationship. See details below.
func (o GetLaunchPathsSummaryOutput) ConstraintSummaries() pulumix.GArrayOutput[GetLaunchPathsSummaryConstraintSummary, GetLaunchPathsSummaryConstraintSummaryOutput] {
	value := pulumix.Apply[GetLaunchPathsSummary](o, func(v GetLaunchPathsSummary) []GetLaunchPathsSummaryConstraintSummary { return v.ConstraintSummaries })
	return pulumix.GArrayOutput[GetLaunchPathsSummaryConstraintSummary, GetLaunchPathsSummaryConstraintSummaryOutput]{OutputState: value.OutputState}
}

// Name of the portfolio to which the path was assigned.
func (o GetLaunchPathsSummaryOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchPathsSummary](o, func(v GetLaunchPathsSummary) string { return v.Name })
}

// Identifier of the product path.
func (o GetLaunchPathsSummaryOutput) PathId() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchPathsSummary](o, func(v GetLaunchPathsSummary) string { return v.PathId })
}

// Tags associated with this product path.
func (o GetLaunchPathsSummaryOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[GetLaunchPathsSummary](o, func(v GetLaunchPathsSummary) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type GetLaunchPathsSummaryConstraintSummary struct {
	// Description of the constraint.
	Description string `pulumi:"description"`
	// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
	Type string `pulumi:"type"`
}

type GetLaunchPathsSummaryConstraintSummaryArgs struct {
	// Description of the constraint.
	Description pulumix.Input[string] `pulumi:"description"`
	// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetLaunchPathsSummaryConstraintSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchPathsSummaryConstraintSummary)(nil)).Elem()
}

func (i GetLaunchPathsSummaryConstraintSummaryArgs) ToGetLaunchPathsSummaryConstraintSummaryOutput() GetLaunchPathsSummaryConstraintSummaryOutput {
	return i.ToGetLaunchPathsSummaryConstraintSummaryOutputWithContext(context.Background())
}

func (i GetLaunchPathsSummaryConstraintSummaryArgs) ToGetLaunchPathsSummaryConstraintSummaryOutputWithContext(ctx context.Context) GetLaunchPathsSummaryConstraintSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchPathsSummaryConstraintSummaryOutput)
}

func (i *GetLaunchPathsSummaryConstraintSummaryArgs) ToOutput(ctx context.Context) pulumix.Output[*GetLaunchPathsSummaryConstraintSummaryArgs] {
	return pulumix.Val(i)
}

type GetLaunchPathsSummaryConstraintSummaryOutput struct{ *pulumi.OutputState }

func (GetLaunchPathsSummaryConstraintSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchPathsSummaryConstraintSummary)(nil)).Elem()
}

func (o GetLaunchPathsSummaryConstraintSummaryOutput) ToGetLaunchPathsSummaryConstraintSummaryOutput() GetLaunchPathsSummaryConstraintSummaryOutput {
	return o
}

func (o GetLaunchPathsSummaryConstraintSummaryOutput) ToGetLaunchPathsSummaryConstraintSummaryOutputWithContext(ctx context.Context) GetLaunchPathsSummaryConstraintSummaryOutput {
	return o
}

func (o GetLaunchPathsSummaryConstraintSummaryOutput) ToOutput(ctx context.Context) pulumix.Output[GetLaunchPathsSummaryConstraintSummary] {
	return pulumix.Output[GetLaunchPathsSummaryConstraintSummary]{
		OutputState: o.OutputState,
	}
}

// Description of the constraint.
func (o GetLaunchPathsSummaryConstraintSummaryOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchPathsSummaryConstraintSummary](o, func(v GetLaunchPathsSummaryConstraintSummary) string { return v.Description })
}

// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
func (o GetLaunchPathsSummaryConstraintSummaryOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetLaunchPathsSummaryConstraintSummary](o, func(v GetLaunchPathsSummaryConstraintSummary) string { return v.Type })
}

type GetPortfolioConstraintsDetail struct {
	// Identifier of the constraint.
	ConstraintId string `pulumi:"constraintId"`
	// Description of the constraint.
	Description string `pulumi:"description"`
	Owner       string `pulumi:"owner"`
	// Portfolio identifier.
	//
	// The following arguments are optional:
	PortfolioId string `pulumi:"portfolioId"`
	// Product identifier.
	ProductId string `pulumi:"productId"`
	// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
	Type string `pulumi:"type"`
}

type GetPortfolioConstraintsDetailArgs struct {
	// Identifier of the constraint.
	ConstraintId pulumix.Input[string] `pulumi:"constraintId"`
	// Description of the constraint.
	Description pulumix.Input[string] `pulumi:"description"`
	Owner       pulumix.Input[string] `pulumi:"owner"`
	// Portfolio identifier.
	//
	// The following arguments are optional:
	PortfolioId pulumix.Input[string] `pulumi:"portfolioId"`
	// Product identifier.
	ProductId pulumix.Input[string] `pulumi:"productId"`
	// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetPortfolioConstraintsDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPortfolioConstraintsDetail)(nil)).Elem()
}

func (i GetPortfolioConstraintsDetailArgs) ToGetPortfolioConstraintsDetailOutput() GetPortfolioConstraintsDetailOutput {
	return i.ToGetPortfolioConstraintsDetailOutputWithContext(context.Background())
}

func (i GetPortfolioConstraintsDetailArgs) ToGetPortfolioConstraintsDetailOutputWithContext(ctx context.Context) GetPortfolioConstraintsDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPortfolioConstraintsDetailOutput)
}

func (i *GetPortfolioConstraintsDetailArgs) ToOutput(ctx context.Context) pulumix.Output[*GetPortfolioConstraintsDetailArgs] {
	return pulumix.Val(i)
}

type GetPortfolioConstraintsDetailOutput struct{ *pulumi.OutputState }

func (GetPortfolioConstraintsDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPortfolioConstraintsDetail)(nil)).Elem()
}

func (o GetPortfolioConstraintsDetailOutput) ToGetPortfolioConstraintsDetailOutput() GetPortfolioConstraintsDetailOutput {
	return o
}

func (o GetPortfolioConstraintsDetailOutput) ToGetPortfolioConstraintsDetailOutputWithContext(ctx context.Context) GetPortfolioConstraintsDetailOutput {
	return o
}

func (o GetPortfolioConstraintsDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetPortfolioConstraintsDetail] {
	return pulumix.Output[GetPortfolioConstraintsDetail]{
		OutputState: o.OutputState,
	}
}

// Identifier of the constraint.
func (o GetPortfolioConstraintsDetailOutput) ConstraintId() pulumix.Output[string] {
	return pulumix.Apply[GetPortfolioConstraintsDetail](o, func(v GetPortfolioConstraintsDetail) string { return v.ConstraintId })
}

// Description of the constraint.
func (o GetPortfolioConstraintsDetailOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[GetPortfolioConstraintsDetail](o, func(v GetPortfolioConstraintsDetail) string { return v.Description })
}

func (o GetPortfolioConstraintsDetailOutput) Owner() pulumix.Output[string] {
	return pulumix.Apply[GetPortfolioConstraintsDetail](o, func(v GetPortfolioConstraintsDetail) string { return v.Owner })
}

// Portfolio identifier.
//
// The following arguments are optional:
func (o GetPortfolioConstraintsDetailOutput) PortfolioId() pulumix.Output[string] {
	return pulumix.Apply[GetPortfolioConstraintsDetail](o, func(v GetPortfolioConstraintsDetail) string { return v.PortfolioId })
}

// Product identifier.
func (o GetPortfolioConstraintsDetailOutput) ProductId() pulumix.Output[string] {
	return pulumix.Apply[GetPortfolioConstraintsDetail](o, func(v GetPortfolioConstraintsDetail) string { return v.ProductId })
}

// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
func (o GetPortfolioConstraintsDetailOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetPortfolioConstraintsDetail](o, func(v GetPortfolioConstraintsDetail) string { return v.Type })
}

type GetProvisioningArtifactsProvisioningArtifactDetail struct {
	// Indicates whether the product version is active.
	Active bool `pulumi:"active"`
	// The UTC time stamp of the creation time.
	CreatedTime string `pulumi:"createdTime"`
	// The description of the provisioning artifact.
	Description string `pulumi:"description"`
	// Information set by the administrator to provide guidance to end users about which provisioning artifacts to use.
	Guidance string `pulumi:"guidance"`
	// The identifier of the provisioning artifact.
	Id string `pulumi:"id"`
	// The name of the provisioning artifact.
	Name string `pulumi:"name"`
	// The type of provisioning artifact.
	Type string `pulumi:"type"`
}

type GetProvisioningArtifactsProvisioningArtifactDetailArgs struct {
	// Indicates whether the product version is active.
	Active pulumix.Input[bool] `pulumi:"active"`
	// The UTC time stamp of the creation time.
	CreatedTime pulumix.Input[string] `pulumi:"createdTime"`
	// The description of the provisioning artifact.
	Description pulumix.Input[string] `pulumi:"description"`
	// Information set by the administrator to provide guidance to end users about which provisioning artifacts to use.
	Guidance pulumix.Input[string] `pulumi:"guidance"`
	// The identifier of the provisioning artifact.
	Id pulumix.Input[string] `pulumi:"id"`
	// The name of the provisioning artifact.
	Name pulumix.Input[string] `pulumi:"name"`
	// The type of provisioning artifact.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetProvisioningArtifactsProvisioningArtifactDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProvisioningArtifactsProvisioningArtifactDetail)(nil)).Elem()
}

func (i GetProvisioningArtifactsProvisioningArtifactDetailArgs) ToGetProvisioningArtifactsProvisioningArtifactDetailOutput() GetProvisioningArtifactsProvisioningArtifactDetailOutput {
	return i.ToGetProvisioningArtifactsProvisioningArtifactDetailOutputWithContext(context.Background())
}

func (i GetProvisioningArtifactsProvisioningArtifactDetailArgs) ToGetProvisioningArtifactsProvisioningArtifactDetailOutputWithContext(ctx context.Context) GetProvisioningArtifactsProvisioningArtifactDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProvisioningArtifactsProvisioningArtifactDetailOutput)
}

func (i *GetProvisioningArtifactsProvisioningArtifactDetailArgs) ToOutput(ctx context.Context) pulumix.Output[*GetProvisioningArtifactsProvisioningArtifactDetailArgs] {
	return pulumix.Val(i)
}

type GetProvisioningArtifactsProvisioningArtifactDetailOutput struct{ *pulumi.OutputState }

func (GetProvisioningArtifactsProvisioningArtifactDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProvisioningArtifactsProvisioningArtifactDetail)(nil)).Elem()
}

func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) ToGetProvisioningArtifactsProvisioningArtifactDetailOutput() GetProvisioningArtifactsProvisioningArtifactDetailOutput {
	return o
}

func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) ToGetProvisioningArtifactsProvisioningArtifactDetailOutputWithContext(ctx context.Context) GetProvisioningArtifactsProvisioningArtifactDetailOutput {
	return o
}

func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetProvisioningArtifactsProvisioningArtifactDetail] {
	return pulumix.Output[GetProvisioningArtifactsProvisioningArtifactDetail]{
		OutputState: o.OutputState,
	}
}

// Indicates whether the product version is active.
func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) Active() pulumix.Output[bool] {
	return pulumix.Apply[GetProvisioningArtifactsProvisioningArtifactDetail](o, func(v GetProvisioningArtifactsProvisioningArtifactDetail) bool { return v.Active })
}

// The UTC time stamp of the creation time.
func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) CreatedTime() pulumix.Output[string] {
	return pulumix.Apply[GetProvisioningArtifactsProvisioningArtifactDetail](o, func(v GetProvisioningArtifactsProvisioningArtifactDetail) string { return v.CreatedTime })
}

// The description of the provisioning artifact.
func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[GetProvisioningArtifactsProvisioningArtifactDetail](o, func(v GetProvisioningArtifactsProvisioningArtifactDetail) string { return v.Description })
}

// Information set by the administrator to provide guidance to end users about which provisioning artifacts to use.
func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) Guidance() pulumix.Output[string] {
	return pulumix.Apply[GetProvisioningArtifactsProvisioningArtifactDetail](o, func(v GetProvisioningArtifactsProvisioningArtifactDetail) string { return v.Guidance })
}

// The identifier of the provisioning artifact.
func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetProvisioningArtifactsProvisioningArtifactDetail](o, func(v GetProvisioningArtifactsProvisioningArtifactDetail) string { return v.Id })
}

// The name of the provisioning artifact.
func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetProvisioningArtifactsProvisioningArtifactDetail](o, func(v GetProvisioningArtifactsProvisioningArtifactDetail) string { return v.Name })
}

// The type of provisioning artifact.
func (o GetProvisioningArtifactsProvisioningArtifactDetailOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetProvisioningArtifactsProvisioningArtifactDetail](o, func(v GetProvisioningArtifactsProvisioningArtifactDetail) string { return v.Type })
}

func init() {
	pulumi.RegisterOutputType(ProductProvisioningArtifactParametersOutput{})
	pulumi.RegisterOutputType(ProvisionedProductOutputTypeOutput{})
	pulumi.RegisterOutputType(ProvisionedProductProvisioningParameterOutput{})
	pulumi.RegisterOutputType(ProvisionedProductStackSetProvisioningPreferencesOutput{})
	pulumi.RegisterOutputType(ServiceActionDefinitionOutput{})
	pulumi.RegisterOutputType(GetLaunchPathsSummaryOutput{})
	pulumi.RegisterOutputType(GetLaunchPathsSummaryConstraintSummaryOutput{})
	pulumi.RegisterOutputType(GetPortfolioConstraintsDetailOutput{})
	pulumi.RegisterOutputType(GetProvisioningArtifactsProvisioningArtifactDetailOutput{})
}
