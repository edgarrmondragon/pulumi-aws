// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an EventBridge event API Destination resource.
//
// > **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.
type EventApiDestination struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the event API Destination.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// ARN of the EventBridge Connection to use for the API Destination.
	ConnectionArn pulumix.Output[string] `pulumi:"connectionArn"`
	// The description of the new API Destination. Maximum of 512 characters.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc.
	HttpMethod pulumix.Output[string] `pulumi:"httpMethod"`
	// URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include "*" as path parameters wildcards to be set from the Target HttpParameters.
	InvocationEndpoint pulumix.Output[string] `pulumi:"invocationEndpoint"`
	// Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300).
	InvocationRateLimitPerSecond pulumix.Output[*int] `pulumi:"invocationRateLimitPerSecond"`
	// The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name pulumix.Output[string] `pulumi:"name"`
}

// NewEventApiDestination registers a new resource with the given unique name, arguments, and options.
func NewEventApiDestination(ctx *pulumi.Context,
	name string, args *EventApiDestinationArgs, opts ...pulumi.ResourceOption) (*EventApiDestination, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionArn == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionArn'")
	}
	if args.HttpMethod == nil {
		return nil, errors.New("invalid value for required argument 'HttpMethod'")
	}
	if args.InvocationEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'InvocationEndpoint'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventApiDestination
	err := ctx.RegisterResource("aws:cloudwatch/eventApiDestination:EventApiDestination", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventApiDestination gets an existing EventApiDestination resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventApiDestination(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventApiDestinationState, opts ...pulumi.ResourceOption) (*EventApiDestination, error) {
	var resource EventApiDestination
	err := ctx.ReadResource("aws:cloudwatch/eventApiDestination:EventApiDestination", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventApiDestination resources.
type eventApiDestinationState struct {
	// The Amazon Resource Name (ARN) of the event API Destination.
	Arn *string `pulumi:"arn"`
	// ARN of the EventBridge Connection to use for the API Destination.
	ConnectionArn *string `pulumi:"connectionArn"`
	// The description of the new API Destination. Maximum of 512 characters.
	Description *string `pulumi:"description"`
	// Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc.
	HttpMethod *string `pulumi:"httpMethod"`
	// URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include "*" as path parameters wildcards to be set from the Target HttpParameters.
	InvocationEndpoint *string `pulumi:"invocationEndpoint"`
	// Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300).
	InvocationRateLimitPerSecond *int `pulumi:"invocationRateLimitPerSecond"`
	// The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name *string `pulumi:"name"`
}

type EventApiDestinationState struct {
	// The Amazon Resource Name (ARN) of the event API Destination.
	Arn pulumix.Input[*string]
	// ARN of the EventBridge Connection to use for the API Destination.
	ConnectionArn pulumix.Input[*string]
	// The description of the new API Destination. Maximum of 512 characters.
	Description pulumix.Input[*string]
	// Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc.
	HttpMethod pulumix.Input[*string]
	// URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include "*" as path parameters wildcards to be set from the Target HttpParameters.
	InvocationEndpoint pulumix.Input[*string]
	// Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300).
	InvocationRateLimitPerSecond pulumix.Input[*int]
	// The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name pulumix.Input[*string]
}

func (EventApiDestinationState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventApiDestinationState)(nil)).Elem()
}

type eventApiDestinationArgs struct {
	// ARN of the EventBridge Connection to use for the API Destination.
	ConnectionArn string `pulumi:"connectionArn"`
	// The description of the new API Destination. Maximum of 512 characters.
	Description *string `pulumi:"description"`
	// Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc.
	HttpMethod string `pulumi:"httpMethod"`
	// URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include "*" as path parameters wildcards to be set from the Target HttpParameters.
	InvocationEndpoint string `pulumi:"invocationEndpoint"`
	// Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300).
	InvocationRateLimitPerSecond *int `pulumi:"invocationRateLimitPerSecond"`
	// The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a EventApiDestination resource.
type EventApiDestinationArgs struct {
	// ARN of the EventBridge Connection to use for the API Destination.
	ConnectionArn pulumix.Input[string]
	// The description of the new API Destination. Maximum of 512 characters.
	Description pulumix.Input[*string]
	// Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc.
	HttpMethod pulumix.Input[string]
	// URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include "*" as path parameters wildcards to be set from the Target HttpParameters.
	InvocationEndpoint pulumix.Input[string]
	// Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300).
	InvocationRateLimitPerSecond pulumix.Input[*int]
	// The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name pulumix.Input[*string]
}

func (EventApiDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventApiDestinationArgs)(nil)).Elem()
}

type EventApiDestinationOutput struct{ *pulumi.OutputState }

func (EventApiDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventApiDestination)(nil)).Elem()
}

func (o EventApiDestinationOutput) ToEventApiDestinationOutput() EventApiDestinationOutput {
	return o
}

func (o EventApiDestinationOutput) ToEventApiDestinationOutputWithContext(ctx context.Context) EventApiDestinationOutput {
	return o
}

func (o EventApiDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[EventApiDestination] {
	return pulumix.Output[EventApiDestination]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the event API Destination.
func (o EventApiDestinationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[EventApiDestination](o, func(v EventApiDestination) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the EventBridge Connection to use for the API Destination.
func (o EventApiDestinationOutput) ConnectionArn() pulumix.Output[string] {
	value := pulumix.Apply[EventApiDestination](o, func(v EventApiDestination) pulumix.Output[string] { return v.ConnectionArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the new API Destination. Maximum of 512 characters.
func (o EventApiDestinationOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[EventApiDestination](o, func(v EventApiDestination) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc.
func (o EventApiDestinationOutput) HttpMethod() pulumix.Output[string] {
	value := pulumix.Apply[EventApiDestination](o, func(v EventApiDestination) pulumix.Output[string] { return v.HttpMethod })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include "*" as path parameters wildcards to be set from the Target HttpParameters.
func (o EventApiDestinationOutput) InvocationEndpoint() pulumix.Output[string] {
	value := pulumix.Apply[EventApiDestination](o, func(v EventApiDestination) pulumix.Output[string] { return v.InvocationEndpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300).
func (o EventApiDestinationOutput) InvocationRateLimitPerSecond() pulumix.Output[*int] {
	value := pulumix.Apply[EventApiDestination](o, func(v EventApiDestination) pulumix.Output[*int] { return v.InvocationRateLimitPerSecond })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
func (o EventApiDestinationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[EventApiDestination](o, func(v EventApiDestination) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(EventApiDestinationOutput{})
}
