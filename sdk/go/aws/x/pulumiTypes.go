// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ProviderAssumeRole struct {
	Duration          *string           `pulumi:"duration"`
	ExternalId        *string           `pulumi:"externalId"`
	Policy            *string           `pulumi:"policy"`
	PolicyArns        []string          `pulumi:"policyArns"`
	RoleArn           *string           `pulumi:"roleArn"`
	SessionName       *string           `pulumi:"sessionName"`
	SourceIdentity    *string           `pulumi:"sourceIdentity"`
	Tags              map[string]string `pulumi:"tags"`
	TransitiveTagKeys []string          `pulumi:"transitiveTagKeys"`
}

type ProviderAssumeRoleArgs struct {
	Duration          pulumix.Input[*string]           `pulumi:"duration"`
	ExternalId        pulumix.Input[*string]           `pulumi:"externalId"`
	Policy            pulumix.Input[*string]           `pulumi:"policy"`
	PolicyArns        pulumix.Input[[]string]          `pulumi:"policyArns"`
	RoleArn           pulumix.Input[*string]           `pulumi:"roleArn"`
	SessionName       pulumix.Input[*string]           `pulumi:"sessionName"`
	SourceIdentity    pulumix.Input[*string]           `pulumi:"sourceIdentity"`
	Tags              pulumix.Input[map[string]string] `pulumi:"tags"`
	TransitiveTagKeys pulumix.Input[[]string]          `pulumi:"transitiveTagKeys"`
}

func (ProviderAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return i.ToProviderAssumeRoleOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput)
}

func (i *ProviderAssumeRoleArgs) ToOutput(ctx context.Context) pulumix.Output[*ProviderAssumeRoleArgs] {
	return pulumix.Val(i)
}

type ProviderAssumeRoleOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToOutput(ctx context.Context) pulumix.Output[ProviderAssumeRole] {
	return pulumix.Output[ProviderAssumeRole]{
		OutputState: o.OutputState,
	}
}

func (o ProviderAssumeRoleOutput) Duration() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRole](o, func(v ProviderAssumeRole) *string { return v.Duration })
}

func (o ProviderAssumeRoleOutput) ExternalId() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRole](o, func(v ProviderAssumeRole) *string { return v.ExternalId })
}

func (o ProviderAssumeRoleOutput) Policy() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRole](o, func(v ProviderAssumeRole) *string { return v.Policy })
}

func (o ProviderAssumeRoleOutput) PolicyArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProviderAssumeRole](o, func(v ProviderAssumeRole) []string { return v.PolicyArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o ProviderAssumeRoleOutput) RoleArn() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRole](o, func(v ProviderAssumeRole) *string { return v.RoleArn })
}

func (o ProviderAssumeRoleOutput) SessionName() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRole](o, func(v ProviderAssumeRole) *string { return v.SessionName })
}

func (o ProviderAssumeRoleOutput) SourceIdentity() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRole](o, func(v ProviderAssumeRole) *string { return v.SourceIdentity })
}

func (o ProviderAssumeRoleOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ProviderAssumeRole](o, func(v ProviderAssumeRole) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

func (o ProviderAssumeRoleOutput) TransitiveTagKeys() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProviderAssumeRole](o, func(v ProviderAssumeRole) []string { return v.TransitiveTagKeys })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ProviderAssumeRoleWithWebIdentity struct {
	Duration             *string  `pulumi:"duration"`
	Policy               *string  `pulumi:"policy"`
	PolicyArns           []string `pulumi:"policyArns"`
	RoleArn              *string  `pulumi:"roleArn"`
	SessionName          *string  `pulumi:"sessionName"`
	WebIdentityToken     *string  `pulumi:"webIdentityToken"`
	WebIdentityTokenFile *string  `pulumi:"webIdentityTokenFile"`
}

type ProviderAssumeRoleWithWebIdentityArgs struct {
	Duration             pulumix.Input[*string]  `pulumi:"duration"`
	Policy               pulumix.Input[*string]  `pulumi:"policy"`
	PolicyArns           pulumix.Input[[]string] `pulumi:"policyArns"`
	RoleArn              pulumix.Input[*string]  `pulumi:"roleArn"`
	SessionName          pulumix.Input[*string]  `pulumi:"sessionName"`
	WebIdentityToken     pulumix.Input[*string]  `pulumi:"webIdentityToken"`
	WebIdentityTokenFile pulumix.Input[*string]  `pulumi:"webIdentityTokenFile"`
}

func (ProviderAssumeRoleWithWebIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRoleWithWebIdentity)(nil)).Elem()
}

func (i ProviderAssumeRoleWithWebIdentityArgs) ToProviderAssumeRoleWithWebIdentityOutput() ProviderAssumeRoleWithWebIdentityOutput {
	return i.ToProviderAssumeRoleWithWebIdentityOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleWithWebIdentityArgs) ToProviderAssumeRoleWithWebIdentityOutputWithContext(ctx context.Context) ProviderAssumeRoleWithWebIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleWithWebIdentityOutput)
}

func (i *ProviderAssumeRoleWithWebIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[*ProviderAssumeRoleWithWebIdentityArgs] {
	return pulumix.Val(i)
}

type ProviderAssumeRoleWithWebIdentityOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRoleWithWebIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRoleWithWebIdentity)(nil)).Elem()
}

func (o ProviderAssumeRoleWithWebIdentityOutput) ToProviderAssumeRoleWithWebIdentityOutput() ProviderAssumeRoleWithWebIdentityOutput {
	return o
}

func (o ProviderAssumeRoleWithWebIdentityOutput) ToProviderAssumeRoleWithWebIdentityOutputWithContext(ctx context.Context) ProviderAssumeRoleWithWebIdentityOutput {
	return o
}

func (o ProviderAssumeRoleWithWebIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[ProviderAssumeRoleWithWebIdentity] {
	return pulumix.Output[ProviderAssumeRoleWithWebIdentity]{
		OutputState: o.OutputState,
	}
}

func (o ProviderAssumeRoleWithWebIdentityOutput) Duration() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRoleWithWebIdentity](o, func(v ProviderAssumeRoleWithWebIdentity) *string { return v.Duration })
}

func (o ProviderAssumeRoleWithWebIdentityOutput) Policy() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRoleWithWebIdentity](o, func(v ProviderAssumeRoleWithWebIdentity) *string { return v.Policy })
}

func (o ProviderAssumeRoleWithWebIdentityOutput) PolicyArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProviderAssumeRoleWithWebIdentity](o, func(v ProviderAssumeRoleWithWebIdentity) []string { return v.PolicyArns })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o ProviderAssumeRoleWithWebIdentityOutput) RoleArn() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRoleWithWebIdentity](o, func(v ProviderAssumeRoleWithWebIdentity) *string { return v.RoleArn })
}

func (o ProviderAssumeRoleWithWebIdentityOutput) SessionName() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRoleWithWebIdentity](o, func(v ProviderAssumeRoleWithWebIdentity) *string { return v.SessionName })
}

func (o ProviderAssumeRoleWithWebIdentityOutput) WebIdentityToken() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRoleWithWebIdentity](o, func(v ProviderAssumeRoleWithWebIdentity) *string { return v.WebIdentityToken })
}

func (o ProviderAssumeRoleWithWebIdentityOutput) WebIdentityTokenFile() pulumix.Output[*string] {
	return pulumix.Apply[ProviderAssumeRoleWithWebIdentity](o, func(v ProviderAssumeRoleWithWebIdentity) *string { return v.WebIdentityTokenFile })
}

type ProviderDefaultTags struct {
	Tags map[string]string `pulumi:"tags"`
}

type ProviderDefaultTagsArgs struct {
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (ProviderDefaultTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderDefaultTags)(nil)).Elem()
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsOutput() ProviderDefaultTagsOutput {
	return i.ToProviderDefaultTagsOutputWithContext(context.Background())
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsOutputWithContext(ctx context.Context) ProviderDefaultTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderDefaultTagsOutput)
}

func (i *ProviderDefaultTagsArgs) ToOutput(ctx context.Context) pulumix.Output[*ProviderDefaultTagsArgs] {
	return pulumix.Val(i)
}

type ProviderDefaultTagsOutput struct{ *pulumi.OutputState }

func (ProviderDefaultTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderDefaultTags)(nil)).Elem()
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsOutput() ProviderDefaultTagsOutput {
	return o
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsOutputWithContext(ctx context.Context) ProviderDefaultTagsOutput {
	return o
}

func (o ProviderDefaultTagsOutput) ToOutput(ctx context.Context) pulumix.Output[ProviderDefaultTags] {
	return pulumix.Output[ProviderDefaultTags]{
		OutputState: o.OutputState,
	}
}

func (o ProviderDefaultTagsOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ProviderDefaultTags](o, func(v ProviderDefaultTags) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type ProviderEndpoint struct {
	Accessanalyzer                       *string `pulumi:"accessanalyzer"`
	Account                              *string `pulumi:"account"`
	Acm                                  *string `pulumi:"acm"`
	Acmpca                               *string `pulumi:"acmpca"`
	Amg                                  *string `pulumi:"amg"`
	Amp                                  *string `pulumi:"amp"`
	Amplify                              *string `pulumi:"amplify"`
	Apigateway                           *string `pulumi:"apigateway"`
	Apigatewayv2                         *string `pulumi:"apigatewayv2"`
	Appautoscaling                       *string `pulumi:"appautoscaling"`
	Appconfig                            *string `pulumi:"appconfig"`
	Appflow                              *string `pulumi:"appflow"`
	Appintegrations                      *string `pulumi:"appintegrations"`
	Appintegrationsservice               *string `pulumi:"appintegrationsservice"`
	Applicationautoscaling               *string `pulumi:"applicationautoscaling"`
	Applicationinsights                  *string `pulumi:"applicationinsights"`
	Appmesh                              *string `pulumi:"appmesh"`
	Apprunner                            *string `pulumi:"apprunner"`
	Appstream                            *string `pulumi:"appstream"`
	Appsync                              *string `pulumi:"appsync"`
	Athena                               *string `pulumi:"athena"`
	Auditmanager                         *string `pulumi:"auditmanager"`
	Autoscaling                          *string `pulumi:"autoscaling"`
	Autoscalingplans                     *string `pulumi:"autoscalingplans"`
	Backup                               *string `pulumi:"backup"`
	Batch                                *string `pulumi:"batch"`
	Beanstalk                            *string `pulumi:"beanstalk"`
	Budgets                              *string `pulumi:"budgets"`
	Ce                                   *string `pulumi:"ce"`
	Chime                                *string `pulumi:"chime"`
	Chimesdkmediapipelines               *string `pulumi:"chimesdkmediapipelines"`
	Chimesdkvoice                        *string `pulumi:"chimesdkvoice"`
	Cleanrooms                           *string `pulumi:"cleanrooms"`
	Cloud9                               *string `pulumi:"cloud9"`
	Cloudcontrol                         *string `pulumi:"cloudcontrol"`
	Cloudcontrolapi                      *string `pulumi:"cloudcontrolapi"`
	Cloudformation                       *string `pulumi:"cloudformation"`
	Cloudfront                           *string `pulumi:"cloudfront"`
	Cloudhsm                             *string `pulumi:"cloudhsm"`
	Cloudhsmv2                           *string `pulumi:"cloudhsmv2"`
	Cloudsearch                          *string `pulumi:"cloudsearch"`
	Cloudtrail                           *string `pulumi:"cloudtrail"`
	Cloudwatch                           *string `pulumi:"cloudwatch"`
	Cloudwatchevents                     *string `pulumi:"cloudwatchevents"`
	Cloudwatchevidently                  *string `pulumi:"cloudwatchevidently"`
	Cloudwatchlog                        *string `pulumi:"cloudwatchlog"`
	Cloudwatchlogs                       *string `pulumi:"cloudwatchlogs"`
	Cloudwatchobservabilityaccessmanager *string `pulumi:"cloudwatchobservabilityaccessmanager"`
	Cloudwatchrum                        *string `pulumi:"cloudwatchrum"`
	Codeartifact                         *string `pulumi:"codeartifact"`
	Codebuild                            *string `pulumi:"codebuild"`
	Codecatalyst                         *string `pulumi:"codecatalyst"`
	Codecommit                           *string `pulumi:"codecommit"`
	Codedeploy                           *string `pulumi:"codedeploy"`
	Codegurureviewer                     *string `pulumi:"codegurureviewer"`
	Codepipeline                         *string `pulumi:"codepipeline"`
	Codestarconnections                  *string `pulumi:"codestarconnections"`
	Codestarnotifications                *string `pulumi:"codestarnotifications"`
	Cognitoidentity                      *string `pulumi:"cognitoidentity"`
	Cognitoidentityprovider              *string `pulumi:"cognitoidentityprovider"`
	Cognitoidp                           *string `pulumi:"cognitoidp"`
	Comprehend                           *string `pulumi:"comprehend"`
	Computeoptimizer                     *string `pulumi:"computeoptimizer"`
	Config                               *string `pulumi:"config"`
	Configservice                        *string `pulumi:"configservice"`
	Connect                              *string `pulumi:"connect"`
	Controltower                         *string `pulumi:"controltower"`
	Costandusagereportservice            *string `pulumi:"costandusagereportservice"`
	Costexplorer                         *string `pulumi:"costexplorer"`
	Cur                                  *string `pulumi:"cur"`
	Databasemigration                    *string `pulumi:"databasemigration"`
	Databasemigrationservice             *string `pulumi:"databasemigrationservice"`
	Dataexchange                         *string `pulumi:"dataexchange"`
	Datapipeline                         *string `pulumi:"datapipeline"`
	Datasync                             *string `pulumi:"datasync"`
	Dax                                  *string `pulumi:"dax"`
	Deploy                               *string `pulumi:"deploy"`
	Detective                            *string `pulumi:"detective"`
	Devicefarm                           *string `pulumi:"devicefarm"`
	Directconnect                        *string `pulumi:"directconnect"`
	Directoryservice                     *string `pulumi:"directoryservice"`
	Dlm                                  *string `pulumi:"dlm"`
	Dms                                  *string `pulumi:"dms"`
	Docdb                                *string `pulumi:"docdb"`
	Docdbelastic                         *string `pulumi:"docdbelastic"`
	Ds                                   *string `pulumi:"ds"`
	Dynamodb                             *string `pulumi:"dynamodb"`
	Ec2                                  *string `pulumi:"ec2"`
	Ecr                                  *string `pulumi:"ecr"`
	Ecrpublic                            *string `pulumi:"ecrpublic"`
	Ecs                                  *string `pulumi:"ecs"`
	Efs                                  *string `pulumi:"efs"`
	Eks                                  *string `pulumi:"eks"`
	Elasticache                          *string `pulumi:"elasticache"`
	Elasticbeanstalk                     *string `pulumi:"elasticbeanstalk"`
	Elasticloadbalancing                 *string `pulumi:"elasticloadbalancing"`
	Elasticloadbalancingv2               *string `pulumi:"elasticloadbalancingv2"`
	Elasticsearch                        *string `pulumi:"elasticsearch"`
	Elasticsearchservice                 *string `pulumi:"elasticsearchservice"`
	Elastictranscoder                    *string `pulumi:"elastictranscoder"`
	Elb                                  *string `pulumi:"elb"`
	Elbv2                                *string `pulumi:"elbv2"`
	Emr                                  *string `pulumi:"emr"`
	Emrcontainers                        *string `pulumi:"emrcontainers"`
	Emrserverless                        *string `pulumi:"emrserverless"`
	Es                                   *string `pulumi:"es"`
	Eventbridge                          *string `pulumi:"eventbridge"`
	Events                               *string `pulumi:"events"`
	Evidently                            *string `pulumi:"evidently"`
	Finspace                             *string `pulumi:"finspace"`
	Firehose                             *string `pulumi:"firehose"`
	Fis                                  *string `pulumi:"fis"`
	Fms                                  *string `pulumi:"fms"`
	Fsx                                  *string `pulumi:"fsx"`
	Gamelift                             *string `pulumi:"gamelift"`
	Glacier                              *string `pulumi:"glacier"`
	Globalaccelerator                    *string `pulumi:"globalaccelerator"`
	Glue                                 *string `pulumi:"glue"`
	Grafana                              *string `pulumi:"grafana"`
	Greengrass                           *string `pulumi:"greengrass"`
	Guardduty                            *string `pulumi:"guardduty"`
	Healthlake                           *string `pulumi:"healthlake"`
	Iam                                  *string `pulumi:"iam"`
	Identitystore                        *string `pulumi:"identitystore"`
	Imagebuilder                         *string `pulumi:"imagebuilder"`
	Inspector                            *string `pulumi:"inspector"`
	Inspector2                           *string `pulumi:"inspector2"`
	Inspectorv2                          *string `pulumi:"inspectorv2"`
	Internetmonitor                      *string `pulumi:"internetmonitor"`
	Iot                                  *string `pulumi:"iot"`
	Iotanalytics                         *string `pulumi:"iotanalytics"`
	Iotevents                            *string `pulumi:"iotevents"`
	Ivs                                  *string `pulumi:"ivs"`
	Ivschat                              *string `pulumi:"ivschat"`
	Kafka                                *string `pulumi:"kafka"`
	Kafkaconnect                         *string `pulumi:"kafkaconnect"`
	Kendra                               *string `pulumi:"kendra"`
	Keyspaces                            *string `pulumi:"keyspaces"`
	Kinesis                              *string `pulumi:"kinesis"`
	Kinesisanalytics                     *string `pulumi:"kinesisanalytics"`
	Kinesisanalyticsv2                   *string `pulumi:"kinesisanalyticsv2"`
	Kinesisvideo                         *string `pulumi:"kinesisvideo"`
	Kms                                  *string `pulumi:"kms"`
	Lakeformation                        *string `pulumi:"lakeformation"`
	Lambda                               *string `pulumi:"lambda"`
	Lex                                  *string `pulumi:"lex"`
	Lexmodelbuilding                     *string `pulumi:"lexmodelbuilding"`
	Lexmodelbuildingservice              *string `pulumi:"lexmodelbuildingservice"`
	Lexmodels                            *string `pulumi:"lexmodels"`
	Lexmodelsv2                          *string `pulumi:"lexmodelsv2"`
	Lexv2models                          *string `pulumi:"lexv2models"`
	Licensemanager                       *string `pulumi:"licensemanager"`
	Lightsail                            *string `pulumi:"lightsail"`
	Location                             *string `pulumi:"location"`
	Locationservice                      *string `pulumi:"locationservice"`
	Logs                                 *string `pulumi:"logs"`
	Macie2                               *string `pulumi:"macie2"`
	Managedgrafana                       *string `pulumi:"managedgrafana"`
	Mediaconnect                         *string `pulumi:"mediaconnect"`
	Mediaconvert                         *string `pulumi:"mediaconvert"`
	Medialive                            *string `pulumi:"medialive"`
	Mediapackage                         *string `pulumi:"mediapackage"`
	Mediastore                           *string `pulumi:"mediastore"`
	Memorydb                             *string `pulumi:"memorydb"`
	Mq                                   *string `pulumi:"mq"`
	Msk                                  *string `pulumi:"msk"`
	Mwaa                                 *string `pulumi:"mwaa"`
	Neptune                              *string `pulumi:"neptune"`
	Networkfirewall                      *string `pulumi:"networkfirewall"`
	Networkmanager                       *string `pulumi:"networkmanager"`
	Oam                                  *string `pulumi:"oam"`
	Opensearch                           *string `pulumi:"opensearch"`
	Opensearchserverless                 *string `pulumi:"opensearchserverless"`
	Opensearchservice                    *string `pulumi:"opensearchservice"`
	Opsworks                             *string `pulumi:"opsworks"`
	Organizations                        *string `pulumi:"organizations"`
	Outposts                             *string `pulumi:"outposts"`
	Pinpoint                             *string `pulumi:"pinpoint"`
	Pipes                                *string `pulumi:"pipes"`
	Pricing                              *string `pulumi:"pricing"`
	Prometheus                           *string `pulumi:"prometheus"`
	Prometheusservice                    *string `pulumi:"prometheusservice"`
	Qldb                                 *string `pulumi:"qldb"`
	Quicksight                           *string `pulumi:"quicksight"`
	Ram                                  *string `pulumi:"ram"`
	Rbin                                 *string `pulumi:"rbin"`
	Rds                                  *string `pulumi:"rds"`
	Recyclebin                           *string `pulumi:"recyclebin"`
	Redshift                             *string `pulumi:"redshift"`
	Redshiftdata                         *string `pulumi:"redshiftdata"`
	Redshiftdataapiservice               *string `pulumi:"redshiftdataapiservice"`
	Redshiftserverless                   *string `pulumi:"redshiftserverless"`
	Resourceexplorer2                    *string `pulumi:"resourceexplorer2"`
	Resourcegroups                       *string `pulumi:"resourcegroups"`
	Resourcegroupstagging                *string `pulumi:"resourcegroupstagging"`
	Resourcegroupstaggingapi             *string `pulumi:"resourcegroupstaggingapi"`
	Rolesanywhere                        *string `pulumi:"rolesanywhere"`
	Route53                              *string `pulumi:"route53"`
	Route53domains                       *string `pulumi:"route53domains"`
	Route53recoverycontrolconfig         *string `pulumi:"route53recoverycontrolconfig"`
	Route53recoveryreadiness             *string `pulumi:"route53recoveryreadiness"`
	Route53resolver                      *string `pulumi:"route53resolver"`
	Rum                                  *string `pulumi:"rum"`
	S3                                   *string `pulumi:"s3"`
	S3api                                *string `pulumi:"s3api"`
	S3control                            *string `pulumi:"s3control"`
	S3outposts                           *string `pulumi:"s3outposts"`
	Sagemaker                            *string `pulumi:"sagemaker"`
	Scheduler                            *string `pulumi:"scheduler"`
	Schemas                              *string `pulumi:"schemas"`
	Sdb                                  *string `pulumi:"sdb"`
	Secretsmanager                       *string `pulumi:"secretsmanager"`
	Securityhub                          *string `pulumi:"securityhub"`
	Securitylake                         *string `pulumi:"securitylake"`
	Serverlessapplicationrepository      *string `pulumi:"serverlessapplicationrepository"`
	Serverlessapprepo                    *string `pulumi:"serverlessapprepo"`
	Serverlessrepo                       *string `pulumi:"serverlessrepo"`
	Servicecatalog                       *string `pulumi:"servicecatalog"`
	Servicediscovery                     *string `pulumi:"servicediscovery"`
	Servicequotas                        *string `pulumi:"servicequotas"`
	Ses                                  *string `pulumi:"ses"`
	Sesv2                                *string `pulumi:"sesv2"`
	Sfn                                  *string `pulumi:"sfn"`
	Shield                               *string `pulumi:"shield"`
	Signer                               *string `pulumi:"signer"`
	Simpledb                             *string `pulumi:"simpledb"`
	Sns                                  *string `pulumi:"sns"`
	Sqs                                  *string `pulumi:"sqs"`
	Ssm                                  *string `pulumi:"ssm"`
	Ssmcontacts                          *string `pulumi:"ssmcontacts"`
	Ssmincidents                         *string `pulumi:"ssmincidents"`
	Ssoadmin                             *string `pulumi:"ssoadmin"`
	Stepfunctions                        *string `pulumi:"stepfunctions"`
	Storagegateway                       *string `pulumi:"storagegateway"`
	Sts                                  *string `pulumi:"sts"`
	Swf                                  *string `pulumi:"swf"`
	Synthetics                           *string `pulumi:"synthetics"`
	Timestreamwrite                      *string `pulumi:"timestreamwrite"`
	Transcribe                           *string `pulumi:"transcribe"`
	Transcribeservice                    *string `pulumi:"transcribeservice"`
	Transfer                             *string `pulumi:"transfer"`
	Verifiedpermissions                  *string `pulumi:"verifiedpermissions"`
	Vpclattice                           *string `pulumi:"vpclattice"`
	Waf                                  *string `pulumi:"waf"`
	Wafregional                          *string `pulumi:"wafregional"`
	Wafv2                                *string `pulumi:"wafv2"`
	Worklink                             *string `pulumi:"worklink"`
	Workspaces                           *string `pulumi:"workspaces"`
	Xray                                 *string `pulumi:"xray"`
}

type ProviderEndpointArgs struct {
	Accessanalyzer                       pulumix.Input[*string] `pulumi:"accessanalyzer"`
	Account                              pulumix.Input[*string] `pulumi:"account"`
	Acm                                  pulumix.Input[*string] `pulumi:"acm"`
	Acmpca                               pulumix.Input[*string] `pulumi:"acmpca"`
	Amg                                  pulumix.Input[*string] `pulumi:"amg"`
	Amp                                  pulumix.Input[*string] `pulumi:"amp"`
	Amplify                              pulumix.Input[*string] `pulumi:"amplify"`
	Apigateway                           pulumix.Input[*string] `pulumi:"apigateway"`
	Apigatewayv2                         pulumix.Input[*string] `pulumi:"apigatewayv2"`
	Appautoscaling                       pulumix.Input[*string] `pulumi:"appautoscaling"`
	Appconfig                            pulumix.Input[*string] `pulumi:"appconfig"`
	Appflow                              pulumix.Input[*string] `pulumi:"appflow"`
	Appintegrations                      pulumix.Input[*string] `pulumi:"appintegrations"`
	Appintegrationsservice               pulumix.Input[*string] `pulumi:"appintegrationsservice"`
	Applicationautoscaling               pulumix.Input[*string] `pulumi:"applicationautoscaling"`
	Applicationinsights                  pulumix.Input[*string] `pulumi:"applicationinsights"`
	Appmesh                              pulumix.Input[*string] `pulumi:"appmesh"`
	Apprunner                            pulumix.Input[*string] `pulumi:"apprunner"`
	Appstream                            pulumix.Input[*string] `pulumi:"appstream"`
	Appsync                              pulumix.Input[*string] `pulumi:"appsync"`
	Athena                               pulumix.Input[*string] `pulumi:"athena"`
	Auditmanager                         pulumix.Input[*string] `pulumi:"auditmanager"`
	Autoscaling                          pulumix.Input[*string] `pulumi:"autoscaling"`
	Autoscalingplans                     pulumix.Input[*string] `pulumi:"autoscalingplans"`
	Backup                               pulumix.Input[*string] `pulumi:"backup"`
	Batch                                pulumix.Input[*string] `pulumi:"batch"`
	Beanstalk                            pulumix.Input[*string] `pulumi:"beanstalk"`
	Budgets                              pulumix.Input[*string] `pulumi:"budgets"`
	Ce                                   pulumix.Input[*string] `pulumi:"ce"`
	Chime                                pulumix.Input[*string] `pulumi:"chime"`
	Chimesdkmediapipelines               pulumix.Input[*string] `pulumi:"chimesdkmediapipelines"`
	Chimesdkvoice                        pulumix.Input[*string] `pulumi:"chimesdkvoice"`
	Cleanrooms                           pulumix.Input[*string] `pulumi:"cleanrooms"`
	Cloud9                               pulumix.Input[*string] `pulumi:"cloud9"`
	Cloudcontrol                         pulumix.Input[*string] `pulumi:"cloudcontrol"`
	Cloudcontrolapi                      pulumix.Input[*string] `pulumi:"cloudcontrolapi"`
	Cloudformation                       pulumix.Input[*string] `pulumi:"cloudformation"`
	Cloudfront                           pulumix.Input[*string] `pulumi:"cloudfront"`
	Cloudhsm                             pulumix.Input[*string] `pulumi:"cloudhsm"`
	Cloudhsmv2                           pulumix.Input[*string] `pulumi:"cloudhsmv2"`
	Cloudsearch                          pulumix.Input[*string] `pulumi:"cloudsearch"`
	Cloudtrail                           pulumix.Input[*string] `pulumi:"cloudtrail"`
	Cloudwatch                           pulumix.Input[*string] `pulumi:"cloudwatch"`
	Cloudwatchevents                     pulumix.Input[*string] `pulumi:"cloudwatchevents"`
	Cloudwatchevidently                  pulumix.Input[*string] `pulumi:"cloudwatchevidently"`
	Cloudwatchlog                        pulumix.Input[*string] `pulumi:"cloudwatchlog"`
	Cloudwatchlogs                       pulumix.Input[*string] `pulumi:"cloudwatchlogs"`
	Cloudwatchobservabilityaccessmanager pulumix.Input[*string] `pulumi:"cloudwatchobservabilityaccessmanager"`
	Cloudwatchrum                        pulumix.Input[*string] `pulumi:"cloudwatchrum"`
	Codeartifact                         pulumix.Input[*string] `pulumi:"codeartifact"`
	Codebuild                            pulumix.Input[*string] `pulumi:"codebuild"`
	Codecatalyst                         pulumix.Input[*string] `pulumi:"codecatalyst"`
	Codecommit                           pulumix.Input[*string] `pulumi:"codecommit"`
	Codedeploy                           pulumix.Input[*string] `pulumi:"codedeploy"`
	Codegurureviewer                     pulumix.Input[*string] `pulumi:"codegurureviewer"`
	Codepipeline                         pulumix.Input[*string] `pulumi:"codepipeline"`
	Codestarconnections                  pulumix.Input[*string] `pulumi:"codestarconnections"`
	Codestarnotifications                pulumix.Input[*string] `pulumi:"codestarnotifications"`
	Cognitoidentity                      pulumix.Input[*string] `pulumi:"cognitoidentity"`
	Cognitoidentityprovider              pulumix.Input[*string] `pulumi:"cognitoidentityprovider"`
	Cognitoidp                           pulumix.Input[*string] `pulumi:"cognitoidp"`
	Comprehend                           pulumix.Input[*string] `pulumi:"comprehend"`
	Computeoptimizer                     pulumix.Input[*string] `pulumi:"computeoptimizer"`
	Config                               pulumix.Input[*string] `pulumi:"config"`
	Configservice                        pulumix.Input[*string] `pulumi:"configservice"`
	Connect                              pulumix.Input[*string] `pulumi:"connect"`
	Controltower                         pulumix.Input[*string] `pulumi:"controltower"`
	Costandusagereportservice            pulumix.Input[*string] `pulumi:"costandusagereportservice"`
	Costexplorer                         pulumix.Input[*string] `pulumi:"costexplorer"`
	Cur                                  pulumix.Input[*string] `pulumi:"cur"`
	Databasemigration                    pulumix.Input[*string] `pulumi:"databasemigration"`
	Databasemigrationservice             pulumix.Input[*string] `pulumi:"databasemigrationservice"`
	Dataexchange                         pulumix.Input[*string] `pulumi:"dataexchange"`
	Datapipeline                         pulumix.Input[*string] `pulumi:"datapipeline"`
	Datasync                             pulumix.Input[*string] `pulumi:"datasync"`
	Dax                                  pulumix.Input[*string] `pulumi:"dax"`
	Deploy                               pulumix.Input[*string] `pulumi:"deploy"`
	Detective                            pulumix.Input[*string] `pulumi:"detective"`
	Devicefarm                           pulumix.Input[*string] `pulumi:"devicefarm"`
	Directconnect                        pulumix.Input[*string] `pulumi:"directconnect"`
	Directoryservice                     pulumix.Input[*string] `pulumi:"directoryservice"`
	Dlm                                  pulumix.Input[*string] `pulumi:"dlm"`
	Dms                                  pulumix.Input[*string] `pulumi:"dms"`
	Docdb                                pulumix.Input[*string] `pulumi:"docdb"`
	Docdbelastic                         pulumix.Input[*string] `pulumi:"docdbelastic"`
	Ds                                   pulumix.Input[*string] `pulumi:"ds"`
	Dynamodb                             pulumix.Input[*string] `pulumi:"dynamodb"`
	Ec2                                  pulumix.Input[*string] `pulumi:"ec2"`
	Ecr                                  pulumix.Input[*string] `pulumi:"ecr"`
	Ecrpublic                            pulumix.Input[*string] `pulumi:"ecrpublic"`
	Ecs                                  pulumix.Input[*string] `pulumi:"ecs"`
	Efs                                  pulumix.Input[*string] `pulumi:"efs"`
	Eks                                  pulumix.Input[*string] `pulumi:"eks"`
	Elasticache                          pulumix.Input[*string] `pulumi:"elasticache"`
	Elasticbeanstalk                     pulumix.Input[*string] `pulumi:"elasticbeanstalk"`
	Elasticloadbalancing                 pulumix.Input[*string] `pulumi:"elasticloadbalancing"`
	Elasticloadbalancingv2               pulumix.Input[*string] `pulumi:"elasticloadbalancingv2"`
	Elasticsearch                        pulumix.Input[*string] `pulumi:"elasticsearch"`
	Elasticsearchservice                 pulumix.Input[*string] `pulumi:"elasticsearchservice"`
	Elastictranscoder                    pulumix.Input[*string] `pulumi:"elastictranscoder"`
	Elb                                  pulumix.Input[*string] `pulumi:"elb"`
	Elbv2                                pulumix.Input[*string] `pulumi:"elbv2"`
	Emr                                  pulumix.Input[*string] `pulumi:"emr"`
	Emrcontainers                        pulumix.Input[*string] `pulumi:"emrcontainers"`
	Emrserverless                        pulumix.Input[*string] `pulumi:"emrserverless"`
	Es                                   pulumix.Input[*string] `pulumi:"es"`
	Eventbridge                          pulumix.Input[*string] `pulumi:"eventbridge"`
	Events                               pulumix.Input[*string] `pulumi:"events"`
	Evidently                            pulumix.Input[*string] `pulumi:"evidently"`
	Finspace                             pulumix.Input[*string] `pulumi:"finspace"`
	Firehose                             pulumix.Input[*string] `pulumi:"firehose"`
	Fis                                  pulumix.Input[*string] `pulumi:"fis"`
	Fms                                  pulumix.Input[*string] `pulumi:"fms"`
	Fsx                                  pulumix.Input[*string] `pulumi:"fsx"`
	Gamelift                             pulumix.Input[*string] `pulumi:"gamelift"`
	Glacier                              pulumix.Input[*string] `pulumi:"glacier"`
	Globalaccelerator                    pulumix.Input[*string] `pulumi:"globalaccelerator"`
	Glue                                 pulumix.Input[*string] `pulumi:"glue"`
	Grafana                              pulumix.Input[*string] `pulumi:"grafana"`
	Greengrass                           pulumix.Input[*string] `pulumi:"greengrass"`
	Guardduty                            pulumix.Input[*string] `pulumi:"guardduty"`
	Healthlake                           pulumix.Input[*string] `pulumi:"healthlake"`
	Iam                                  pulumix.Input[*string] `pulumi:"iam"`
	Identitystore                        pulumix.Input[*string] `pulumi:"identitystore"`
	Imagebuilder                         pulumix.Input[*string] `pulumi:"imagebuilder"`
	Inspector                            pulumix.Input[*string] `pulumi:"inspector"`
	Inspector2                           pulumix.Input[*string] `pulumi:"inspector2"`
	Inspectorv2                          pulumix.Input[*string] `pulumi:"inspectorv2"`
	Internetmonitor                      pulumix.Input[*string] `pulumi:"internetmonitor"`
	Iot                                  pulumix.Input[*string] `pulumi:"iot"`
	Iotanalytics                         pulumix.Input[*string] `pulumi:"iotanalytics"`
	Iotevents                            pulumix.Input[*string] `pulumi:"iotevents"`
	Ivs                                  pulumix.Input[*string] `pulumi:"ivs"`
	Ivschat                              pulumix.Input[*string] `pulumi:"ivschat"`
	Kafka                                pulumix.Input[*string] `pulumi:"kafka"`
	Kafkaconnect                         pulumix.Input[*string] `pulumi:"kafkaconnect"`
	Kendra                               pulumix.Input[*string] `pulumi:"kendra"`
	Keyspaces                            pulumix.Input[*string] `pulumi:"keyspaces"`
	Kinesis                              pulumix.Input[*string] `pulumi:"kinesis"`
	Kinesisanalytics                     pulumix.Input[*string] `pulumi:"kinesisanalytics"`
	Kinesisanalyticsv2                   pulumix.Input[*string] `pulumi:"kinesisanalyticsv2"`
	Kinesisvideo                         pulumix.Input[*string] `pulumi:"kinesisvideo"`
	Kms                                  pulumix.Input[*string] `pulumi:"kms"`
	Lakeformation                        pulumix.Input[*string] `pulumi:"lakeformation"`
	Lambda                               pulumix.Input[*string] `pulumi:"lambda"`
	Lex                                  pulumix.Input[*string] `pulumi:"lex"`
	Lexmodelbuilding                     pulumix.Input[*string] `pulumi:"lexmodelbuilding"`
	Lexmodelbuildingservice              pulumix.Input[*string] `pulumi:"lexmodelbuildingservice"`
	Lexmodels                            pulumix.Input[*string] `pulumi:"lexmodels"`
	Lexmodelsv2                          pulumix.Input[*string] `pulumi:"lexmodelsv2"`
	Lexv2models                          pulumix.Input[*string] `pulumi:"lexv2models"`
	Licensemanager                       pulumix.Input[*string] `pulumi:"licensemanager"`
	Lightsail                            pulumix.Input[*string] `pulumi:"lightsail"`
	Location                             pulumix.Input[*string] `pulumi:"location"`
	Locationservice                      pulumix.Input[*string] `pulumi:"locationservice"`
	Logs                                 pulumix.Input[*string] `pulumi:"logs"`
	Macie2                               pulumix.Input[*string] `pulumi:"macie2"`
	Managedgrafana                       pulumix.Input[*string] `pulumi:"managedgrafana"`
	Mediaconnect                         pulumix.Input[*string] `pulumi:"mediaconnect"`
	Mediaconvert                         pulumix.Input[*string] `pulumi:"mediaconvert"`
	Medialive                            pulumix.Input[*string] `pulumi:"medialive"`
	Mediapackage                         pulumix.Input[*string] `pulumi:"mediapackage"`
	Mediastore                           pulumix.Input[*string] `pulumi:"mediastore"`
	Memorydb                             pulumix.Input[*string] `pulumi:"memorydb"`
	Mq                                   pulumix.Input[*string] `pulumi:"mq"`
	Msk                                  pulumix.Input[*string] `pulumi:"msk"`
	Mwaa                                 pulumix.Input[*string] `pulumi:"mwaa"`
	Neptune                              pulumix.Input[*string] `pulumi:"neptune"`
	Networkfirewall                      pulumix.Input[*string] `pulumi:"networkfirewall"`
	Networkmanager                       pulumix.Input[*string] `pulumi:"networkmanager"`
	Oam                                  pulumix.Input[*string] `pulumi:"oam"`
	Opensearch                           pulumix.Input[*string] `pulumi:"opensearch"`
	Opensearchserverless                 pulumix.Input[*string] `pulumi:"opensearchserverless"`
	Opensearchservice                    pulumix.Input[*string] `pulumi:"opensearchservice"`
	Opsworks                             pulumix.Input[*string] `pulumi:"opsworks"`
	Organizations                        pulumix.Input[*string] `pulumi:"organizations"`
	Outposts                             pulumix.Input[*string] `pulumi:"outposts"`
	Pinpoint                             pulumix.Input[*string] `pulumi:"pinpoint"`
	Pipes                                pulumix.Input[*string] `pulumi:"pipes"`
	Pricing                              pulumix.Input[*string] `pulumi:"pricing"`
	Prometheus                           pulumix.Input[*string] `pulumi:"prometheus"`
	Prometheusservice                    pulumix.Input[*string] `pulumi:"prometheusservice"`
	Qldb                                 pulumix.Input[*string] `pulumi:"qldb"`
	Quicksight                           pulumix.Input[*string] `pulumi:"quicksight"`
	Ram                                  pulumix.Input[*string] `pulumi:"ram"`
	Rbin                                 pulumix.Input[*string] `pulumi:"rbin"`
	Rds                                  pulumix.Input[*string] `pulumi:"rds"`
	Recyclebin                           pulumix.Input[*string] `pulumi:"recyclebin"`
	Redshift                             pulumix.Input[*string] `pulumi:"redshift"`
	Redshiftdata                         pulumix.Input[*string] `pulumi:"redshiftdata"`
	Redshiftdataapiservice               pulumix.Input[*string] `pulumi:"redshiftdataapiservice"`
	Redshiftserverless                   pulumix.Input[*string] `pulumi:"redshiftserverless"`
	Resourceexplorer2                    pulumix.Input[*string] `pulumi:"resourceexplorer2"`
	Resourcegroups                       pulumix.Input[*string] `pulumi:"resourcegroups"`
	Resourcegroupstagging                pulumix.Input[*string] `pulumi:"resourcegroupstagging"`
	Resourcegroupstaggingapi             pulumix.Input[*string] `pulumi:"resourcegroupstaggingapi"`
	Rolesanywhere                        pulumix.Input[*string] `pulumi:"rolesanywhere"`
	Route53                              pulumix.Input[*string] `pulumi:"route53"`
	Route53domains                       pulumix.Input[*string] `pulumi:"route53domains"`
	Route53recoverycontrolconfig         pulumix.Input[*string] `pulumi:"route53recoverycontrolconfig"`
	Route53recoveryreadiness             pulumix.Input[*string] `pulumi:"route53recoveryreadiness"`
	Route53resolver                      pulumix.Input[*string] `pulumi:"route53resolver"`
	Rum                                  pulumix.Input[*string] `pulumi:"rum"`
	S3                                   pulumix.Input[*string] `pulumi:"s3"`
	S3api                                pulumix.Input[*string] `pulumi:"s3api"`
	S3control                            pulumix.Input[*string] `pulumi:"s3control"`
	S3outposts                           pulumix.Input[*string] `pulumi:"s3outposts"`
	Sagemaker                            pulumix.Input[*string] `pulumi:"sagemaker"`
	Scheduler                            pulumix.Input[*string] `pulumi:"scheduler"`
	Schemas                              pulumix.Input[*string] `pulumi:"schemas"`
	Sdb                                  pulumix.Input[*string] `pulumi:"sdb"`
	Secretsmanager                       pulumix.Input[*string] `pulumi:"secretsmanager"`
	Securityhub                          pulumix.Input[*string] `pulumi:"securityhub"`
	Securitylake                         pulumix.Input[*string] `pulumi:"securitylake"`
	Serverlessapplicationrepository      pulumix.Input[*string] `pulumi:"serverlessapplicationrepository"`
	Serverlessapprepo                    pulumix.Input[*string] `pulumi:"serverlessapprepo"`
	Serverlessrepo                       pulumix.Input[*string] `pulumi:"serverlessrepo"`
	Servicecatalog                       pulumix.Input[*string] `pulumi:"servicecatalog"`
	Servicediscovery                     pulumix.Input[*string] `pulumi:"servicediscovery"`
	Servicequotas                        pulumix.Input[*string] `pulumi:"servicequotas"`
	Ses                                  pulumix.Input[*string] `pulumi:"ses"`
	Sesv2                                pulumix.Input[*string] `pulumi:"sesv2"`
	Sfn                                  pulumix.Input[*string] `pulumi:"sfn"`
	Shield                               pulumix.Input[*string] `pulumi:"shield"`
	Signer                               pulumix.Input[*string] `pulumi:"signer"`
	Simpledb                             pulumix.Input[*string] `pulumi:"simpledb"`
	Sns                                  pulumix.Input[*string] `pulumi:"sns"`
	Sqs                                  pulumix.Input[*string] `pulumi:"sqs"`
	Ssm                                  pulumix.Input[*string] `pulumi:"ssm"`
	Ssmcontacts                          pulumix.Input[*string] `pulumi:"ssmcontacts"`
	Ssmincidents                         pulumix.Input[*string] `pulumi:"ssmincidents"`
	Ssoadmin                             pulumix.Input[*string] `pulumi:"ssoadmin"`
	Stepfunctions                        pulumix.Input[*string] `pulumi:"stepfunctions"`
	Storagegateway                       pulumix.Input[*string] `pulumi:"storagegateway"`
	Sts                                  pulumix.Input[*string] `pulumi:"sts"`
	Swf                                  pulumix.Input[*string] `pulumi:"swf"`
	Synthetics                           pulumix.Input[*string] `pulumi:"synthetics"`
	Timestreamwrite                      pulumix.Input[*string] `pulumi:"timestreamwrite"`
	Transcribe                           pulumix.Input[*string] `pulumi:"transcribe"`
	Transcribeservice                    pulumix.Input[*string] `pulumi:"transcribeservice"`
	Transfer                             pulumix.Input[*string] `pulumi:"transfer"`
	Verifiedpermissions                  pulumix.Input[*string] `pulumi:"verifiedpermissions"`
	Vpclattice                           pulumix.Input[*string] `pulumi:"vpclattice"`
	Waf                                  pulumix.Input[*string] `pulumi:"waf"`
	Wafregional                          pulumix.Input[*string] `pulumi:"wafregional"`
	Wafv2                                pulumix.Input[*string] `pulumi:"wafv2"`
	Worklink                             pulumix.Input[*string] `pulumi:"worklink"`
	Workspaces                           pulumix.Input[*string] `pulumi:"workspaces"`
	Xray                                 pulumix.Input[*string] `pulumi:"xray"`
}

func (ProviderEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (i ProviderEndpointArgs) ToProviderEndpointOutput() ProviderEndpointOutput {
	return i.ToProviderEndpointOutputWithContext(context.Background())
}

func (i ProviderEndpointArgs) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderEndpointOutput)
}

func (i *ProviderEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[*ProviderEndpointArgs] {
	return pulumix.Val(i)
}

type ProviderEndpointOutput struct{ *pulumi.OutputState }

func (ProviderEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (o ProviderEndpointOutput) ToProviderEndpointOutput() ProviderEndpointOutput {
	return o
}

func (o ProviderEndpointOutput) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return o
}

func (o ProviderEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[ProviderEndpoint] {
	return pulumix.Output[ProviderEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o ProviderEndpointOutput) Accessanalyzer() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Accessanalyzer })
}

func (o ProviderEndpointOutput) Account() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Account })
}

func (o ProviderEndpointOutput) Acm() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Acm })
}

func (o ProviderEndpointOutput) Acmpca() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Acmpca })
}

func (o ProviderEndpointOutput) Amg() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Amg })
}

func (o ProviderEndpointOutput) Amp() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Amp })
}

func (o ProviderEndpointOutput) Amplify() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Amplify })
}

func (o ProviderEndpointOutput) Apigateway() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Apigateway })
}

func (o ProviderEndpointOutput) Apigatewayv2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Apigatewayv2 })
}

func (o ProviderEndpointOutput) Appautoscaling() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Appautoscaling })
}

func (o ProviderEndpointOutput) Appconfig() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Appconfig })
}

func (o ProviderEndpointOutput) Appflow() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Appflow })
}

func (o ProviderEndpointOutput) Appintegrations() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Appintegrations })
}

func (o ProviderEndpointOutput) Appintegrationsservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Appintegrationsservice })
}

func (o ProviderEndpointOutput) Applicationautoscaling() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Applicationautoscaling })
}

func (o ProviderEndpointOutput) Applicationinsights() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Applicationinsights })
}

func (o ProviderEndpointOutput) Appmesh() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Appmesh })
}

func (o ProviderEndpointOutput) Apprunner() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Apprunner })
}

func (o ProviderEndpointOutput) Appstream() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Appstream })
}

func (o ProviderEndpointOutput) Appsync() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Appsync })
}

func (o ProviderEndpointOutput) Athena() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Athena })
}

func (o ProviderEndpointOutput) Auditmanager() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Auditmanager })
}

func (o ProviderEndpointOutput) Autoscaling() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Autoscaling })
}

func (o ProviderEndpointOutput) Autoscalingplans() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Autoscalingplans })
}

func (o ProviderEndpointOutput) Backup() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Backup })
}

func (o ProviderEndpointOutput) Batch() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Batch })
}

func (o ProviderEndpointOutput) Beanstalk() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Beanstalk })
}

func (o ProviderEndpointOutput) Budgets() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Budgets })
}

func (o ProviderEndpointOutput) Ce() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ce })
}

func (o ProviderEndpointOutput) Chime() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Chime })
}

func (o ProviderEndpointOutput) Chimesdkmediapipelines() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Chimesdkmediapipelines })
}

func (o ProviderEndpointOutput) Chimesdkvoice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Chimesdkvoice })
}

func (o ProviderEndpointOutput) Cleanrooms() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cleanrooms })
}

func (o ProviderEndpointOutput) Cloud9() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloud9 })
}

func (o ProviderEndpointOutput) Cloudcontrol() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudcontrol })
}

func (o ProviderEndpointOutput) Cloudcontrolapi() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudcontrolapi })
}

func (o ProviderEndpointOutput) Cloudformation() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudformation })
}

func (o ProviderEndpointOutput) Cloudfront() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudfront })
}

func (o ProviderEndpointOutput) Cloudhsm() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudhsm })
}

func (o ProviderEndpointOutput) Cloudhsmv2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudhsmv2 })
}

func (o ProviderEndpointOutput) Cloudsearch() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudsearch })
}

func (o ProviderEndpointOutput) Cloudtrail() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudtrail })
}

func (o ProviderEndpointOutput) Cloudwatch() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudwatch })
}

func (o ProviderEndpointOutput) Cloudwatchevents() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudwatchevents })
}

func (o ProviderEndpointOutput) Cloudwatchevidently() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudwatchevidently })
}

func (o ProviderEndpointOutput) Cloudwatchlog() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudwatchlog })
}

func (o ProviderEndpointOutput) Cloudwatchlogs() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudwatchlogs })
}

func (o ProviderEndpointOutput) Cloudwatchobservabilityaccessmanager() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudwatchobservabilityaccessmanager })
}

func (o ProviderEndpointOutput) Cloudwatchrum() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cloudwatchrum })
}

func (o ProviderEndpointOutput) Codeartifact() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Codeartifact })
}

func (o ProviderEndpointOutput) Codebuild() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Codebuild })
}

func (o ProviderEndpointOutput) Codecatalyst() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Codecatalyst })
}

func (o ProviderEndpointOutput) Codecommit() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Codecommit })
}

func (o ProviderEndpointOutput) Codedeploy() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Codedeploy })
}

func (o ProviderEndpointOutput) Codegurureviewer() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Codegurureviewer })
}

func (o ProviderEndpointOutput) Codepipeline() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Codepipeline })
}

func (o ProviderEndpointOutput) Codestarconnections() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Codestarconnections })
}

func (o ProviderEndpointOutput) Codestarnotifications() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Codestarnotifications })
}

func (o ProviderEndpointOutput) Cognitoidentity() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cognitoidentity })
}

func (o ProviderEndpointOutput) Cognitoidentityprovider() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cognitoidentityprovider })
}

func (o ProviderEndpointOutput) Cognitoidp() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cognitoidp })
}

func (o ProviderEndpointOutput) Comprehend() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Comprehend })
}

func (o ProviderEndpointOutput) Computeoptimizer() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Computeoptimizer })
}

func (o ProviderEndpointOutput) Config() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Config })
}

func (o ProviderEndpointOutput) Configservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Configservice })
}

func (o ProviderEndpointOutput) Connect() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Connect })
}

func (o ProviderEndpointOutput) Controltower() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Controltower })
}

func (o ProviderEndpointOutput) Costandusagereportservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Costandusagereportservice })
}

func (o ProviderEndpointOutput) Costexplorer() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Costexplorer })
}

func (o ProviderEndpointOutput) Cur() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Cur })
}

func (o ProviderEndpointOutput) Databasemigration() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Databasemigration })
}

func (o ProviderEndpointOutput) Databasemigrationservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Databasemigrationservice })
}

func (o ProviderEndpointOutput) Dataexchange() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Dataexchange })
}

func (o ProviderEndpointOutput) Datapipeline() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Datapipeline })
}

func (o ProviderEndpointOutput) Datasync() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Datasync })
}

func (o ProviderEndpointOutput) Dax() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Dax })
}

func (o ProviderEndpointOutput) Deploy() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Deploy })
}

func (o ProviderEndpointOutput) Detective() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Detective })
}

func (o ProviderEndpointOutput) Devicefarm() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Devicefarm })
}

func (o ProviderEndpointOutput) Directconnect() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Directconnect })
}

func (o ProviderEndpointOutput) Directoryservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Directoryservice })
}

func (o ProviderEndpointOutput) Dlm() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Dlm })
}

func (o ProviderEndpointOutput) Dms() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Dms })
}

func (o ProviderEndpointOutput) Docdb() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Docdb })
}

func (o ProviderEndpointOutput) Docdbelastic() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Docdbelastic })
}

func (o ProviderEndpointOutput) Ds() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ds })
}

func (o ProviderEndpointOutput) Dynamodb() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Dynamodb })
}

func (o ProviderEndpointOutput) Ec2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ec2 })
}

func (o ProviderEndpointOutput) Ecr() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ecr })
}

func (o ProviderEndpointOutput) Ecrpublic() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ecrpublic })
}

func (o ProviderEndpointOutput) Ecs() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ecs })
}

func (o ProviderEndpointOutput) Efs() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Efs })
}

func (o ProviderEndpointOutput) Eks() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Eks })
}

func (o ProviderEndpointOutput) Elasticache() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Elasticache })
}

func (o ProviderEndpointOutput) Elasticbeanstalk() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Elasticbeanstalk })
}

func (o ProviderEndpointOutput) Elasticloadbalancing() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Elasticloadbalancing })
}

func (o ProviderEndpointOutput) Elasticloadbalancingv2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Elasticloadbalancingv2 })
}

func (o ProviderEndpointOutput) Elasticsearch() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Elasticsearch })
}

func (o ProviderEndpointOutput) Elasticsearchservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Elasticsearchservice })
}

func (o ProviderEndpointOutput) Elastictranscoder() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Elastictranscoder })
}

func (o ProviderEndpointOutput) Elb() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Elb })
}

func (o ProviderEndpointOutput) Elbv2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Elbv2 })
}

func (o ProviderEndpointOutput) Emr() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Emr })
}

func (o ProviderEndpointOutput) Emrcontainers() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Emrcontainers })
}

func (o ProviderEndpointOutput) Emrserverless() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Emrserverless })
}

func (o ProviderEndpointOutput) Es() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Es })
}

func (o ProviderEndpointOutput) Eventbridge() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Eventbridge })
}

func (o ProviderEndpointOutput) Events() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Events })
}

func (o ProviderEndpointOutput) Evidently() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Evidently })
}

func (o ProviderEndpointOutput) Finspace() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Finspace })
}

func (o ProviderEndpointOutput) Firehose() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Firehose })
}

func (o ProviderEndpointOutput) Fis() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Fis })
}

func (o ProviderEndpointOutput) Fms() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Fms })
}

func (o ProviderEndpointOutput) Fsx() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Fsx })
}

func (o ProviderEndpointOutput) Gamelift() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Gamelift })
}

func (o ProviderEndpointOutput) Glacier() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Glacier })
}

func (o ProviderEndpointOutput) Globalaccelerator() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Globalaccelerator })
}

func (o ProviderEndpointOutput) Glue() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Glue })
}

func (o ProviderEndpointOutput) Grafana() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Grafana })
}

func (o ProviderEndpointOutput) Greengrass() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Greengrass })
}

func (o ProviderEndpointOutput) Guardduty() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Guardduty })
}

func (o ProviderEndpointOutput) Healthlake() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Healthlake })
}

func (o ProviderEndpointOutput) Iam() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Iam })
}

func (o ProviderEndpointOutput) Identitystore() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Identitystore })
}

func (o ProviderEndpointOutput) Imagebuilder() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Imagebuilder })
}

func (o ProviderEndpointOutput) Inspector() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Inspector })
}

func (o ProviderEndpointOutput) Inspector2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Inspector2 })
}

func (o ProviderEndpointOutput) Inspectorv2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Inspectorv2 })
}

func (o ProviderEndpointOutput) Internetmonitor() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Internetmonitor })
}

func (o ProviderEndpointOutput) Iot() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Iot })
}

func (o ProviderEndpointOutput) Iotanalytics() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Iotanalytics })
}

func (o ProviderEndpointOutput) Iotevents() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Iotevents })
}

func (o ProviderEndpointOutput) Ivs() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ivs })
}

func (o ProviderEndpointOutput) Ivschat() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ivschat })
}

func (o ProviderEndpointOutput) Kafka() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Kafka })
}

func (o ProviderEndpointOutput) Kafkaconnect() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Kafkaconnect })
}

func (o ProviderEndpointOutput) Kendra() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Kendra })
}

func (o ProviderEndpointOutput) Keyspaces() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Keyspaces })
}

func (o ProviderEndpointOutput) Kinesis() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Kinesis })
}

func (o ProviderEndpointOutput) Kinesisanalytics() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Kinesisanalytics })
}

func (o ProviderEndpointOutput) Kinesisanalyticsv2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Kinesisanalyticsv2 })
}

func (o ProviderEndpointOutput) Kinesisvideo() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Kinesisvideo })
}

func (o ProviderEndpointOutput) Kms() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Kms })
}

func (o ProviderEndpointOutput) Lakeformation() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Lakeformation })
}

func (o ProviderEndpointOutput) Lambda() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Lambda })
}

func (o ProviderEndpointOutput) Lex() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Lex })
}

func (o ProviderEndpointOutput) Lexmodelbuilding() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Lexmodelbuilding })
}

func (o ProviderEndpointOutput) Lexmodelbuildingservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Lexmodelbuildingservice })
}

func (o ProviderEndpointOutput) Lexmodels() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Lexmodels })
}

func (o ProviderEndpointOutput) Lexmodelsv2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Lexmodelsv2 })
}

func (o ProviderEndpointOutput) Lexv2models() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Lexv2models })
}

func (o ProviderEndpointOutput) Licensemanager() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Licensemanager })
}

func (o ProviderEndpointOutput) Lightsail() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Lightsail })
}

func (o ProviderEndpointOutput) Location() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Location })
}

func (o ProviderEndpointOutput) Locationservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Locationservice })
}

func (o ProviderEndpointOutput) Logs() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Logs })
}

func (o ProviderEndpointOutput) Macie2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Macie2 })
}

func (o ProviderEndpointOutput) Managedgrafana() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Managedgrafana })
}

func (o ProviderEndpointOutput) Mediaconnect() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Mediaconnect })
}

func (o ProviderEndpointOutput) Mediaconvert() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Mediaconvert })
}

func (o ProviderEndpointOutput) Medialive() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Medialive })
}

func (o ProviderEndpointOutput) Mediapackage() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Mediapackage })
}

func (o ProviderEndpointOutput) Mediastore() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Mediastore })
}

func (o ProviderEndpointOutput) Memorydb() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Memorydb })
}

func (o ProviderEndpointOutput) Mq() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Mq })
}

func (o ProviderEndpointOutput) Msk() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Msk })
}

func (o ProviderEndpointOutput) Mwaa() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Mwaa })
}

func (o ProviderEndpointOutput) Neptune() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Neptune })
}

func (o ProviderEndpointOutput) Networkfirewall() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Networkfirewall })
}

func (o ProviderEndpointOutput) Networkmanager() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Networkmanager })
}

func (o ProviderEndpointOutput) Oam() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Oam })
}

func (o ProviderEndpointOutput) Opensearch() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Opensearch })
}

func (o ProviderEndpointOutput) Opensearchserverless() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Opensearchserverless })
}

func (o ProviderEndpointOutput) Opensearchservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Opensearchservice })
}

func (o ProviderEndpointOutput) Opsworks() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Opsworks })
}

func (o ProviderEndpointOutput) Organizations() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Organizations })
}

func (o ProviderEndpointOutput) Outposts() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Outposts })
}

func (o ProviderEndpointOutput) Pinpoint() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Pinpoint })
}

func (o ProviderEndpointOutput) Pipes() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Pipes })
}

func (o ProviderEndpointOutput) Pricing() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Pricing })
}

func (o ProviderEndpointOutput) Prometheus() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Prometheus })
}

func (o ProviderEndpointOutput) Prometheusservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Prometheusservice })
}

func (o ProviderEndpointOutput) Qldb() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Qldb })
}

func (o ProviderEndpointOutput) Quicksight() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Quicksight })
}

func (o ProviderEndpointOutput) Ram() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ram })
}

func (o ProviderEndpointOutput) Rbin() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Rbin })
}

func (o ProviderEndpointOutput) Rds() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Rds })
}

func (o ProviderEndpointOutput) Recyclebin() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Recyclebin })
}

func (o ProviderEndpointOutput) Redshift() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Redshift })
}

func (o ProviderEndpointOutput) Redshiftdata() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Redshiftdata })
}

func (o ProviderEndpointOutput) Redshiftdataapiservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Redshiftdataapiservice })
}

func (o ProviderEndpointOutput) Redshiftserverless() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Redshiftserverless })
}

func (o ProviderEndpointOutput) Resourceexplorer2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Resourceexplorer2 })
}

func (o ProviderEndpointOutput) Resourcegroups() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Resourcegroups })
}

func (o ProviderEndpointOutput) Resourcegroupstagging() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Resourcegroupstagging })
}

func (o ProviderEndpointOutput) Resourcegroupstaggingapi() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Resourcegroupstaggingapi })
}

func (o ProviderEndpointOutput) Rolesanywhere() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Rolesanywhere })
}

func (o ProviderEndpointOutput) Route53() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Route53 })
}

func (o ProviderEndpointOutput) Route53domains() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Route53domains })
}

func (o ProviderEndpointOutput) Route53recoverycontrolconfig() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Route53recoverycontrolconfig })
}

func (o ProviderEndpointOutput) Route53recoveryreadiness() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Route53recoveryreadiness })
}

func (o ProviderEndpointOutput) Route53resolver() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Route53resolver })
}

func (o ProviderEndpointOutput) Rum() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Rum })
}

func (o ProviderEndpointOutput) S3() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.S3 })
}

func (o ProviderEndpointOutput) S3api() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.S3api })
}

func (o ProviderEndpointOutput) S3control() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.S3control })
}

func (o ProviderEndpointOutput) S3outposts() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.S3outposts })
}

func (o ProviderEndpointOutput) Sagemaker() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Sagemaker })
}

func (o ProviderEndpointOutput) Scheduler() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Scheduler })
}

func (o ProviderEndpointOutput) Schemas() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Schemas })
}

func (o ProviderEndpointOutput) Sdb() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Sdb })
}

func (o ProviderEndpointOutput) Secretsmanager() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Secretsmanager })
}

func (o ProviderEndpointOutput) Securityhub() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Securityhub })
}

func (o ProviderEndpointOutput) Securitylake() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Securitylake })
}

func (o ProviderEndpointOutput) Serverlessapplicationrepository() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Serverlessapplicationrepository })
}

func (o ProviderEndpointOutput) Serverlessapprepo() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Serverlessapprepo })
}

func (o ProviderEndpointOutput) Serverlessrepo() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Serverlessrepo })
}

func (o ProviderEndpointOutput) Servicecatalog() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Servicecatalog })
}

func (o ProviderEndpointOutput) Servicediscovery() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Servicediscovery })
}

func (o ProviderEndpointOutput) Servicequotas() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Servicequotas })
}

func (o ProviderEndpointOutput) Ses() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ses })
}

func (o ProviderEndpointOutput) Sesv2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Sesv2 })
}

func (o ProviderEndpointOutput) Sfn() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Sfn })
}

func (o ProviderEndpointOutput) Shield() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Shield })
}

func (o ProviderEndpointOutput) Signer() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Signer })
}

func (o ProviderEndpointOutput) Simpledb() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Simpledb })
}

func (o ProviderEndpointOutput) Sns() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Sns })
}

func (o ProviderEndpointOutput) Sqs() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Sqs })
}

func (o ProviderEndpointOutput) Ssm() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ssm })
}

func (o ProviderEndpointOutput) Ssmcontacts() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ssmcontacts })
}

func (o ProviderEndpointOutput) Ssmincidents() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ssmincidents })
}

func (o ProviderEndpointOutput) Ssoadmin() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Ssoadmin })
}

func (o ProviderEndpointOutput) Stepfunctions() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Stepfunctions })
}

func (o ProviderEndpointOutput) Storagegateway() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Storagegateway })
}

func (o ProviderEndpointOutput) Sts() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Sts })
}

func (o ProviderEndpointOutput) Swf() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Swf })
}

func (o ProviderEndpointOutput) Synthetics() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Synthetics })
}

func (o ProviderEndpointOutput) Timestreamwrite() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Timestreamwrite })
}

func (o ProviderEndpointOutput) Transcribe() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Transcribe })
}

func (o ProviderEndpointOutput) Transcribeservice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Transcribeservice })
}

func (o ProviderEndpointOutput) Transfer() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Transfer })
}

func (o ProviderEndpointOutput) Verifiedpermissions() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Verifiedpermissions })
}

func (o ProviderEndpointOutput) Vpclattice() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Vpclattice })
}

func (o ProviderEndpointOutput) Waf() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Waf })
}

func (o ProviderEndpointOutput) Wafregional() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Wafregional })
}

func (o ProviderEndpointOutput) Wafv2() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Wafv2 })
}

func (o ProviderEndpointOutput) Worklink() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Worklink })
}

func (o ProviderEndpointOutput) Workspaces() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Workspaces })
}

func (o ProviderEndpointOutput) Xray() pulumix.Output[*string] {
	return pulumix.Apply[ProviderEndpoint](o, func(v ProviderEndpoint) *string { return v.Xray })
}

type ProviderIgnoreTags struct {
	KeyPrefixes []string `pulumi:"keyPrefixes"`
	Keys        []string `pulumi:"keys"`
}

type ProviderIgnoreTagsArgs struct {
	KeyPrefixes pulumix.Input[[]string] `pulumi:"keyPrefixes"`
	Keys        pulumix.Input[[]string] `pulumi:"keys"`
}

func (ProviderIgnoreTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderIgnoreTags)(nil)).Elem()
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsOutput() ProviderIgnoreTagsOutput {
	return i.ToProviderIgnoreTagsOutputWithContext(context.Background())
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsOutputWithContext(ctx context.Context) ProviderIgnoreTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderIgnoreTagsOutput)
}

func (i *ProviderIgnoreTagsArgs) ToOutput(ctx context.Context) pulumix.Output[*ProviderIgnoreTagsArgs] {
	return pulumix.Val(i)
}

type ProviderIgnoreTagsOutput struct{ *pulumi.OutputState }

func (ProviderIgnoreTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderIgnoreTags)(nil)).Elem()
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsOutput() ProviderIgnoreTagsOutput {
	return o
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsOutputWithContext(ctx context.Context) ProviderIgnoreTagsOutput {
	return o
}

func (o ProviderIgnoreTagsOutput) ToOutput(ctx context.Context) pulumix.Output[ProviderIgnoreTags] {
	return pulumix.Output[ProviderIgnoreTags]{
		OutputState: o.OutputState,
	}
}

func (o ProviderIgnoreTagsOutput) KeyPrefixes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProviderIgnoreTags](o, func(v ProviderIgnoreTags) []string { return v.KeyPrefixes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o ProviderIgnoreTagsOutput) Keys() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProviderIgnoreTags](o, func(v ProviderIgnoreTags) []string { return v.Keys })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetAvailabilityZoneFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetAvailabilityZoneFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetAvailabilityZoneFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailabilityZoneFilter)(nil)).Elem()
}

func (i GetAvailabilityZoneFilterArgs) ToGetAvailabilityZoneFilterOutput() GetAvailabilityZoneFilterOutput {
	return i.ToGetAvailabilityZoneFilterOutputWithContext(context.Background())
}

func (i GetAvailabilityZoneFilterArgs) ToGetAvailabilityZoneFilterOutputWithContext(ctx context.Context) GetAvailabilityZoneFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailabilityZoneFilterOutput)
}

func (i *GetAvailabilityZoneFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetAvailabilityZoneFilterArgs] {
	return pulumix.Val(i)
}

type GetAvailabilityZoneFilterOutput struct{ *pulumi.OutputState }

func (GetAvailabilityZoneFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailabilityZoneFilter)(nil)).Elem()
}

func (o GetAvailabilityZoneFilterOutput) ToGetAvailabilityZoneFilterOutput() GetAvailabilityZoneFilterOutput {
	return o
}

func (o GetAvailabilityZoneFilterOutput) ToGetAvailabilityZoneFilterOutputWithContext(ctx context.Context) GetAvailabilityZoneFilterOutput {
	return o
}

func (o GetAvailabilityZoneFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAvailabilityZoneFilter] {
	return pulumix.Output[GetAvailabilityZoneFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
func (o GetAvailabilityZoneFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetAvailabilityZoneFilter](o, func(v GetAvailabilityZoneFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetAvailabilityZoneFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetAvailabilityZoneFilter](o, func(v GetAvailabilityZoneFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetAvailabilityZonesFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetAvailabilityZonesFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetAvailabilityZonesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailabilityZonesFilter)(nil)).Elem()
}

func (i GetAvailabilityZonesFilterArgs) ToGetAvailabilityZonesFilterOutput() GetAvailabilityZonesFilterOutput {
	return i.ToGetAvailabilityZonesFilterOutputWithContext(context.Background())
}

func (i GetAvailabilityZonesFilterArgs) ToGetAvailabilityZonesFilterOutputWithContext(ctx context.Context) GetAvailabilityZonesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailabilityZonesFilterOutput)
}

func (i *GetAvailabilityZonesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetAvailabilityZonesFilterArgs] {
	return pulumix.Val(i)
}

type GetAvailabilityZonesFilterOutput struct{ *pulumi.OutputState }

func (GetAvailabilityZonesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailabilityZonesFilter)(nil)).Elem()
}

func (o GetAvailabilityZonesFilterOutput) ToGetAvailabilityZonesFilterOutput() GetAvailabilityZonesFilterOutput {
	return o
}

func (o GetAvailabilityZonesFilterOutput) ToGetAvailabilityZonesFilterOutputWithContext(ctx context.Context) GetAvailabilityZonesFilterOutput {
	return o
}

func (o GetAvailabilityZonesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAvailabilityZonesFilter] {
	return pulumix.Output[GetAvailabilityZonesFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).
func (o GetAvailabilityZonesFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetAvailabilityZonesFilter](o, func(v GetAvailabilityZonesFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetAvailabilityZonesFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetAvailabilityZonesFilter](o, func(v GetAvailabilityZonesFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetRegionsFilter struct {
	// Name of the filter field. Valid values can be found in the [describe-regions AWS CLI Reference][1].
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetRegionsFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [describe-regions AWS CLI Reference][1].
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetRegionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsFilter)(nil)).Elem()
}

func (i GetRegionsFilterArgs) ToGetRegionsFilterOutput() GetRegionsFilterOutput {
	return i.ToGetRegionsFilterOutputWithContext(context.Background())
}

func (i GetRegionsFilterArgs) ToGetRegionsFilterOutputWithContext(ctx context.Context) GetRegionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsFilterOutput)
}

func (i *GetRegionsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRegionsFilterArgs] {
	return pulumix.Val(i)
}

type GetRegionsFilterOutput struct{ *pulumi.OutputState }

func (GetRegionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsFilter)(nil)).Elem()
}

func (o GetRegionsFilterOutput) ToGetRegionsFilterOutput() GetRegionsFilterOutput {
	return o
}

func (o GetRegionsFilterOutput) ToGetRegionsFilterOutputWithContext(ctx context.Context) GetRegionsFilterOutput {
	return o
}

func (o GetRegionsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRegionsFilter] {
	return pulumix.Output[GetRegionsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [describe-regions AWS CLI Reference][1].
func (o GetRegionsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetRegionsFilter](o, func(v GetRegionsFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetRegionsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetRegionsFilter](o, func(v GetRegionsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ProviderAssumeRoleOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRoleWithWebIdentityOutput{})
	pulumi.RegisterOutputType(ProviderDefaultTagsOutput{})
	pulumi.RegisterOutputType(ProviderEndpointOutput{})
	pulumi.RegisterOutputType(ProviderIgnoreTagsOutput{})
	pulumi.RegisterOutputType(GetAvailabilityZoneFilterOutput{})
	pulumi.RegisterOutputType(GetAvailabilityZonesFilterOutput{})
	pulumi.RegisterOutputType(GetRegionsFilterOutput{})
}
