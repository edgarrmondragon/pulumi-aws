// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appautoscaling

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Application AutoScaling ScheduledAction resource.
type ScheduledAction struct {
	pulumi.CustomResourceState

	// ARN of the scheduled action.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	EndTime pulumix.Output[*string] `pulumi:"endTime"`
	// Name of the scheduled action.
	Name pulumix.Output[string] `pulumi:"name"`
	// Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	ResourceId pulumix.Output[string] `pulumi:"resourceId"`
	// Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
	ScalableDimension pulumix.Output[string] `pulumi:"scalableDimension"`
	// New minimum and maximum capacity. You can set both values or just one. See below
	ScalableTargetAction pulumix.GPtrOutput[ScheduledActionScalableTargetAction, ScheduledActionScalableTargetActionOutput] `pulumi:"scalableTargetAction"`
	// Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	Schedule pulumix.Output[string] `pulumi:"schedule"`
	// Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
	ServiceNamespace pulumix.Output[string] `pulumi:"serviceNamespace"`
	// Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	StartTime pulumix.Output[*string] `pulumi:"startTime"`
	// Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `startTime` and `endTime`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
	Timezone pulumix.Output[*string] `pulumi:"timezone"`
}

// NewScheduledAction registers a new resource with the given unique name, arguments, and options.
func NewScheduledAction(ctx *pulumi.Context,
	name string, args *ScheduledActionArgs, opts ...pulumi.ResourceOption) (*ScheduledAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.ScalableDimension == nil {
		return nil, errors.New("invalid value for required argument 'ScalableDimension'")
	}
	if args.ScalableTargetAction == nil {
		return nil, errors.New("invalid value for required argument 'ScalableTargetAction'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	if args.ServiceNamespace == nil {
		return nil, errors.New("invalid value for required argument 'ServiceNamespace'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ScheduledAction
	err := ctx.RegisterResource("aws:appautoscaling/scheduledAction:ScheduledAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScheduledAction gets an existing ScheduledAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScheduledAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduledActionState, opts ...pulumi.ResourceOption) (*ScheduledAction, error) {
	var resource ScheduledAction
	err := ctx.ReadResource("aws:appautoscaling/scheduledAction:ScheduledAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScheduledAction resources.
type scheduledActionState struct {
	// ARN of the scheduled action.
	Arn *string `pulumi:"arn"`
	// Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	EndTime *string `pulumi:"endTime"`
	// Name of the scheduled action.
	Name *string `pulumi:"name"`
	// Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	ResourceId *string `pulumi:"resourceId"`
	// Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
	ScalableDimension *string `pulumi:"scalableDimension"`
	// New minimum and maximum capacity. You can set both values or just one. See below
	ScalableTargetAction *ScheduledActionScalableTargetAction `pulumi:"scalableTargetAction"`
	// Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	Schedule *string `pulumi:"schedule"`
	// Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
	ServiceNamespace *string `pulumi:"serviceNamespace"`
	// Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	StartTime *string `pulumi:"startTime"`
	// Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `startTime` and `endTime`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
	Timezone *string `pulumi:"timezone"`
}

type ScheduledActionState struct {
	// ARN of the scheduled action.
	Arn pulumix.Input[*string]
	// Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	EndTime pulumix.Input[*string]
	// Name of the scheduled action.
	Name pulumix.Input[*string]
	// Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	ResourceId pulumix.Input[*string]
	// Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
	ScalableDimension pulumix.Input[*string]
	// New minimum and maximum capacity. You can set both values or just one. See below
	ScalableTargetAction pulumix.Input[*ScheduledActionScalableTargetActionArgs]
	// Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	Schedule pulumix.Input[*string]
	// Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
	ServiceNamespace pulumix.Input[*string]
	// Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	StartTime pulumix.Input[*string]
	// Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `startTime` and `endTime`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
	Timezone pulumix.Input[*string]
}

func (ScheduledActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledActionState)(nil)).Elem()
}

type scheduledActionArgs struct {
	// Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	EndTime *string `pulumi:"endTime"`
	// Name of the scheduled action.
	Name *string `pulumi:"name"`
	// Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	ResourceId string `pulumi:"resourceId"`
	// Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
	ScalableDimension string `pulumi:"scalableDimension"`
	// New minimum and maximum capacity. You can set both values or just one. See below
	ScalableTargetAction ScheduledActionScalableTargetAction `pulumi:"scalableTargetAction"`
	// Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	Schedule string `pulumi:"schedule"`
	// Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
	ServiceNamespace string `pulumi:"serviceNamespace"`
	// Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	StartTime *string `pulumi:"startTime"`
	// Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `startTime` and `endTime`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
	Timezone *string `pulumi:"timezone"`
}

// The set of arguments for constructing a ScheduledAction resource.
type ScheduledActionArgs struct {
	// Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	EndTime pulumix.Input[*string]
	// Name of the scheduled action.
	Name pulumix.Input[*string]
	// Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	ResourceId pulumix.Input[string]
	// Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
	ScalableDimension pulumix.Input[string]
	// New minimum and maximum capacity. You can set both values or just one. See below
	ScalableTargetAction pulumix.Input[*ScheduledActionScalableTargetActionArgs]
	// Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
	Schedule pulumix.Input[string]
	// Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
	ServiceNamespace pulumix.Input[string]
	// Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
	StartTime pulumix.Input[*string]
	// Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `startTime` and `endTime`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
	Timezone pulumix.Input[*string]
}

func (ScheduledActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledActionArgs)(nil)).Elem()
}

type ScheduledActionOutput struct{ *pulumi.OutputState }

func (ScheduledActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledAction)(nil)).Elem()
}

func (o ScheduledActionOutput) ToScheduledActionOutput() ScheduledActionOutput {
	return o
}

func (o ScheduledActionOutput) ToScheduledActionOutputWithContext(ctx context.Context) ScheduledActionOutput {
	return o
}

func (o ScheduledActionOutput) ToOutput(ctx context.Context) pulumix.Output[ScheduledAction] {
	return pulumix.Output[ScheduledAction]{
		OutputState: o.OutputState,
	}
}

// ARN of the scheduled action.
func (o ScheduledActionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
func (o ScheduledActionOutput) EndTime() pulumix.Output[*string] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.Output[*string] { return v.EndTime })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the scheduled action.
func (o ScheduledActionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
func (o ScheduledActionOutput) ResourceId() pulumix.Output[string] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.Output[string] { return v.ResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
func (o ScheduledActionOutput) ScalableDimension() pulumix.Output[string] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.Output[string] { return v.ScalableDimension })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// New minimum and maximum capacity. You can set both values or just one. See below
func (o ScheduledActionOutput) ScalableTargetAction() pulumix.GPtrOutput[ScheduledActionScalableTargetAction, ScheduledActionScalableTargetActionOutput] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.GPtrOutput[ScheduledActionScalableTargetAction, ScheduledActionScalableTargetActionOutput] {
		return v.ScalableTargetAction
	})
	unwrapped := pulumix.Flatten[*ScheduledActionScalableTargetAction, pulumix.GPtrOutput[ScheduledActionScalableTargetAction, ScheduledActionScalableTargetActionOutput]](value)
	return pulumix.GPtrOutput[ScheduledActionScalableTargetAction, ScheduledActionScalableTargetActionOutput]{OutputState: unwrapped.OutputState}
}

// Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
func (o ScheduledActionOutput) Schedule() pulumix.Output[string] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.Output[string] { return v.Schedule })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
func (o ScheduledActionOutput) ServiceNamespace() pulumix.Output[string] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.Output[string] { return v.ServiceNamespace })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
func (o ScheduledActionOutput) StartTime() pulumix.Output[*string] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.Output[*string] { return v.StartTime })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `startTime` and `endTime`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
func (o ScheduledActionOutput) Timezone() pulumix.Output[*string] {
	value := pulumix.Apply[ScheduledAction](o, func(v ScheduledAction) pulumix.Output[*string] { return v.Timezone })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(ScheduledActionOutput{})
}
