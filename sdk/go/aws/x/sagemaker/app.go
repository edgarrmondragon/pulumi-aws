// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker App resource.
type App struct {
	pulumi.CustomResourceState

	// The name of the app.
	AppName pulumix.Output[string] `pulumi:"appName"`
	// The type of app. Valid values are `JupyterServer`, `KernelGateway`, `RStudioServerPro`, `RSessionGateway` and `TensorBoard`.
	AppType pulumix.Output[string] `pulumi:"appType"`
	// The Amazon Resource Name (ARN) of the app.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The domain ID.
	DomainId pulumix.Output[string] `pulumi:"domainId"`
	// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
	ResourceSpec pulumix.GPtrOutput[AppResourceSpec, AppResourceSpecOutput] `pulumi:"resourceSpec"`
	// The name of the space. At least one of `userProfileName` or `spaceName` required.
	SpaceName pulumix.Output[*string] `pulumi:"spaceName"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The user profile name. At least one of `userProfileName` or `spaceName` required.
	UserProfileName pulumix.Output[*string] `pulumi:"userProfileName"`
}

// NewApp registers a new resource with the given unique name, arguments, and options.
func NewApp(ctx *pulumi.Context,
	name string, args *AppArgs, opts ...pulumi.ResourceOption) (*App, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppName == nil {
		return nil, errors.New("invalid value for required argument 'AppName'")
	}
	if args.AppType == nil {
		return nil, errors.New("invalid value for required argument 'AppType'")
	}
	if args.DomainId == nil {
		return nil, errors.New("invalid value for required argument 'DomainId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource App
	err := ctx.RegisterResource("aws:sagemaker/app:App", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApp gets an existing App resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppState, opts ...pulumi.ResourceOption) (*App, error) {
	var resource App
	err := ctx.ReadResource("aws:sagemaker/app:App", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering App resources.
type appState struct {
	// The name of the app.
	AppName *string `pulumi:"appName"`
	// The type of app. Valid values are `JupyterServer`, `KernelGateway`, `RStudioServerPro`, `RSessionGateway` and `TensorBoard`.
	AppType *string `pulumi:"appType"`
	// The Amazon Resource Name (ARN) of the app.
	Arn *string `pulumi:"arn"`
	// The domain ID.
	DomainId *string `pulumi:"domainId"`
	// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
	ResourceSpec *AppResourceSpec `pulumi:"resourceSpec"`
	// The name of the space. At least one of `userProfileName` or `spaceName` required.
	SpaceName *string `pulumi:"spaceName"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The user profile name. At least one of `userProfileName` or `spaceName` required.
	UserProfileName *string `pulumi:"userProfileName"`
}

type AppState struct {
	// The name of the app.
	AppName pulumix.Input[*string]
	// The type of app. Valid values are `JupyterServer`, `KernelGateway`, `RStudioServerPro`, `RSessionGateway` and `TensorBoard`.
	AppType pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the app.
	Arn pulumix.Input[*string]
	// The domain ID.
	DomainId pulumix.Input[*string]
	// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
	ResourceSpec pulumix.Input[*AppResourceSpecArgs]
	// The name of the space. At least one of `userProfileName` or `spaceName` required.
	SpaceName pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The user profile name. At least one of `userProfileName` or `spaceName` required.
	UserProfileName pulumix.Input[*string]
}

func (AppState) ElementType() reflect.Type {
	return reflect.TypeOf((*appState)(nil)).Elem()
}

type appArgs struct {
	// The name of the app.
	AppName string `pulumi:"appName"`
	// The type of app. Valid values are `JupyterServer`, `KernelGateway`, `RStudioServerPro`, `RSessionGateway` and `TensorBoard`.
	AppType string `pulumi:"appType"`
	// The domain ID.
	DomainId string `pulumi:"domainId"`
	// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
	ResourceSpec *AppResourceSpec `pulumi:"resourceSpec"`
	// The name of the space. At least one of `userProfileName` or `spaceName` required.
	SpaceName *string `pulumi:"spaceName"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The user profile name. At least one of `userProfileName` or `spaceName` required.
	UserProfileName *string `pulumi:"userProfileName"`
}

// The set of arguments for constructing a App resource.
type AppArgs struct {
	// The name of the app.
	AppName pulumix.Input[string]
	// The type of app. Valid values are `JupyterServer`, `KernelGateway`, `RStudioServerPro`, `RSessionGateway` and `TensorBoard`.
	AppType pulumix.Input[string]
	// The domain ID.
	DomainId pulumix.Input[string]
	// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
	ResourceSpec pulumix.Input[*AppResourceSpecArgs]
	// The name of the space. At least one of `userProfileName` or `spaceName` required.
	SpaceName pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The user profile name. At least one of `userProfileName` or `spaceName` required.
	UserProfileName pulumix.Input[*string]
}

func (AppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appArgs)(nil)).Elem()
}

type AppOutput struct{ *pulumi.OutputState }

func (AppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*App)(nil)).Elem()
}

func (o AppOutput) ToAppOutput() AppOutput {
	return o
}

func (o AppOutput) ToAppOutputWithContext(ctx context.Context) AppOutput {
	return o
}

func (o AppOutput) ToOutput(ctx context.Context) pulumix.Output[App] {
	return pulumix.Output[App]{
		OutputState: o.OutputState,
	}
}

// The name of the app.
func (o AppOutput) AppName() pulumix.Output[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[string] { return v.AppName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of app. Valid values are `JupyterServer`, `KernelGateway`, `RStudioServerPro`, `RSessionGateway` and `TensorBoard`.
func (o AppOutput) AppType() pulumix.Output[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[string] { return v.AppType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the app.
func (o AppOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The domain ID.
func (o AppOutput) DomainId() pulumix.Output[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[string] { return v.DomainId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
func (o AppOutput) ResourceSpec() pulumix.GPtrOutput[AppResourceSpec, AppResourceSpecOutput] {
	value := pulumix.Apply[App](o, func(v App) pulumix.GPtrOutput[AppResourceSpec, AppResourceSpecOutput] { return v.ResourceSpec })
	unwrapped := pulumix.Flatten[*AppResourceSpec, pulumix.GPtrOutput[AppResourceSpec, AppResourceSpecOutput]](value)
	return pulumix.GPtrOutput[AppResourceSpec, AppResourceSpecOutput]{OutputState: unwrapped.OutputState}
}

// The name of the space. At least one of `userProfileName` or `spaceName` required.
func (o AppOutput) SpaceName() pulumix.Output[*string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[*string] { return v.SpaceName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AppOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AppOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The user profile name. At least one of `userProfileName` or `spaceName` required.
func (o AppOutput) UserProfileName() pulumix.Output[*string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[*string] { return v.UserProfileName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(AppOutput{})
}
