// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS Lightsail Distribution.
type Distribution struct {
	pulumi.CustomResourceState

	// The alternate domain names of the distribution.
	AlternativeDomainNames pulumix.ArrayOutput[string] `pulumi:"alternativeDomainNames"`
	// The Amazon Resource Name (ARN) of the distribution.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Bundle ID to use for the distribution.
	BundleId pulumix.Output[string] `pulumi:"bundleId"`
	// An object that describes the cache behavior settings of the distribution. Detailed below
	//
	// The following arguments are optional:
	CacheBehaviorSettings pulumix.GPtrOutput[DistributionCacheBehaviorSettings, DistributionCacheBehaviorSettingsOutput] `pulumi:"cacheBehaviorSettings"`
	// A set of configuration blocks that describe the per-path cache behavior of the distribution. Detailed below
	CacheBehaviors pulumix.GArrayOutput[DistributionCacheBehavior, DistributionCacheBehaviorOutput] `pulumi:"cacheBehaviors"`
	// The name of the SSL/TLS certificate attached to the distribution, if any.
	CertificateName pulumix.Output[*string] `pulumi:"certificateName"`
	// The timestamp when the distribution was created.
	CreatedAt pulumix.Output[string] `pulumi:"createdAt"`
	// Object that describes the default cache behavior of the distribution. Detailed below
	DefaultCacheBehavior pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput] `pulumi:"defaultCacheBehavior"`
	// The domain name of the distribution.
	DomainName pulumix.Output[string] `pulumi:"domainName"`
	// The IP address type of the distribution. Default: `dualstack`.
	IpAddressType pulumix.Output[*string] `pulumi:"ipAddressType"`
	// Indicates whether the distribution is enabled. Default: `true`.
	IsEnabled pulumix.Output[*bool] `pulumi:"isEnabled"`
	// An object that describes the location of the distribution, such as the AWS Region and Availability Zone. Detailed below
	Locations pulumix.GArrayOutput[DistributionLocation, DistributionLocationOutput] `pulumi:"locations"`
	// Name of the distribution.
	Name pulumix.Output[string] `pulumi:"name"`
	// Object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer. Detailed below
	Origin pulumix.GPtrOutput[DistributionOrigin, DistributionOriginOutput] `pulumi:"origin"`
	// The public DNS of the origin.
	OriginPublicDns pulumix.Output[string] `pulumi:"originPublicDns"`
	// The resource type of the origin resource (e.g., Instance).
	ResourceType pulumix.Output[string] `pulumi:"resourceType"`
	// The status of the distribution.
	Status pulumix.Output[string] `pulumi:"status"`
	// The support code. Include this code in your email to support when you have questions about your Lightsail distribution. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumix.Output[string] `pulumi:"supportCode"`
	// Map of tags for the Lightsail Distribution. If
	// configured with a provider
	// `defaultTags` configuration block
	// present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDistribution registers a new resource with the given unique name, arguments, and options.
func NewDistribution(ctx *pulumi.Context,
	name string, args *DistributionArgs, opts ...pulumi.ResourceOption) (*Distribution, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BundleId == nil {
		return nil, errors.New("invalid value for required argument 'BundleId'")
	}
	if args.DefaultCacheBehavior == nil {
		return nil, errors.New("invalid value for required argument 'DefaultCacheBehavior'")
	}
	if args.Origin == nil {
		return nil, errors.New("invalid value for required argument 'Origin'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Distribution
	err := ctx.RegisterResource("aws:lightsail/distribution:Distribution", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDistribution gets an existing Distribution resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDistribution(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DistributionState, opts ...pulumi.ResourceOption) (*Distribution, error) {
	var resource Distribution
	err := ctx.ReadResource("aws:lightsail/distribution:Distribution", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Distribution resources.
type distributionState struct {
	// The alternate domain names of the distribution.
	AlternativeDomainNames []string `pulumi:"alternativeDomainNames"`
	// The Amazon Resource Name (ARN) of the distribution.
	Arn *string `pulumi:"arn"`
	// Bundle ID to use for the distribution.
	BundleId *string `pulumi:"bundleId"`
	// An object that describes the cache behavior settings of the distribution. Detailed below
	//
	// The following arguments are optional:
	CacheBehaviorSettings *DistributionCacheBehaviorSettings `pulumi:"cacheBehaviorSettings"`
	// A set of configuration blocks that describe the per-path cache behavior of the distribution. Detailed below
	CacheBehaviors []DistributionCacheBehavior `pulumi:"cacheBehaviors"`
	// The name of the SSL/TLS certificate attached to the distribution, if any.
	CertificateName *string `pulumi:"certificateName"`
	// The timestamp when the distribution was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Object that describes the default cache behavior of the distribution. Detailed below
	DefaultCacheBehavior *DistributionDefaultCacheBehavior `pulumi:"defaultCacheBehavior"`
	// The domain name of the distribution.
	DomainName *string `pulumi:"domainName"`
	// The IP address type of the distribution. Default: `dualstack`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// Indicates whether the distribution is enabled. Default: `true`.
	IsEnabled *bool `pulumi:"isEnabled"`
	// An object that describes the location of the distribution, such as the AWS Region and Availability Zone. Detailed below
	Locations []DistributionLocation `pulumi:"locations"`
	// Name of the distribution.
	Name *string `pulumi:"name"`
	// Object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer. Detailed below
	Origin *DistributionOrigin `pulumi:"origin"`
	// The public DNS of the origin.
	OriginPublicDns *string `pulumi:"originPublicDns"`
	// The resource type of the origin resource (e.g., Instance).
	ResourceType *string `pulumi:"resourceType"`
	// The status of the distribution.
	Status *string `pulumi:"status"`
	// The support code. Include this code in your email to support when you have questions about your Lightsail distribution. This code enables our support team to look up your Lightsail information more easily.
	SupportCode *string `pulumi:"supportCode"`
	// Map of tags for the Lightsail Distribution. If
	// configured with a provider
	// `defaultTags` configuration block
	// present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DistributionState struct {
	// The alternate domain names of the distribution.
	AlternativeDomainNames pulumix.Input[[]string]
	// The Amazon Resource Name (ARN) of the distribution.
	Arn pulumix.Input[*string]
	// Bundle ID to use for the distribution.
	BundleId pulumix.Input[*string]
	// An object that describes the cache behavior settings of the distribution. Detailed below
	//
	// The following arguments are optional:
	CacheBehaviorSettings pulumix.Input[*DistributionCacheBehaviorSettingsArgs]
	// A set of configuration blocks that describe the per-path cache behavior of the distribution. Detailed below
	CacheBehaviors pulumix.Input[[]*DistributionCacheBehaviorArgs]
	// The name of the SSL/TLS certificate attached to the distribution, if any.
	CertificateName pulumix.Input[*string]
	// The timestamp when the distribution was created.
	CreatedAt pulumix.Input[*string]
	// Object that describes the default cache behavior of the distribution. Detailed below
	DefaultCacheBehavior pulumix.Input[*DistributionDefaultCacheBehaviorArgs]
	// The domain name of the distribution.
	DomainName pulumix.Input[*string]
	// The IP address type of the distribution. Default: `dualstack`.
	IpAddressType pulumix.Input[*string]
	// Indicates whether the distribution is enabled. Default: `true`.
	IsEnabled pulumix.Input[*bool]
	// An object that describes the location of the distribution, such as the AWS Region and Availability Zone. Detailed below
	Locations pulumix.Input[[]*DistributionLocationArgs]
	// Name of the distribution.
	Name pulumix.Input[*string]
	// Object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer. Detailed below
	Origin pulumix.Input[*DistributionOriginArgs]
	// The public DNS of the origin.
	OriginPublicDns pulumix.Input[*string]
	// The resource type of the origin resource (e.g., Instance).
	ResourceType pulumix.Input[*string]
	// The status of the distribution.
	Status pulumix.Input[*string]
	// The support code. Include this code in your email to support when you have questions about your Lightsail distribution. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumix.Input[*string]
	// Map of tags for the Lightsail Distribution. If
	// configured with a provider
	// `defaultTags` configuration block
	// present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DistributionState) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionState)(nil)).Elem()
}

type distributionArgs struct {
	// Bundle ID to use for the distribution.
	BundleId string `pulumi:"bundleId"`
	// An object that describes the cache behavior settings of the distribution. Detailed below
	//
	// The following arguments are optional:
	CacheBehaviorSettings *DistributionCacheBehaviorSettings `pulumi:"cacheBehaviorSettings"`
	// A set of configuration blocks that describe the per-path cache behavior of the distribution. Detailed below
	CacheBehaviors []DistributionCacheBehavior `pulumi:"cacheBehaviors"`
	// The name of the SSL/TLS certificate attached to the distribution, if any.
	CertificateName *string `pulumi:"certificateName"`
	// Object that describes the default cache behavior of the distribution. Detailed below
	DefaultCacheBehavior DistributionDefaultCacheBehavior `pulumi:"defaultCacheBehavior"`
	// The IP address type of the distribution. Default: `dualstack`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// Indicates whether the distribution is enabled. Default: `true`.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Name of the distribution.
	Name *string `pulumi:"name"`
	// Object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer. Detailed below
	Origin DistributionOrigin `pulumi:"origin"`
	// Map of tags for the Lightsail Distribution. If
	// configured with a provider
	// `defaultTags` configuration block
	// present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Distribution resource.
type DistributionArgs struct {
	// Bundle ID to use for the distribution.
	BundleId pulumix.Input[string]
	// An object that describes the cache behavior settings of the distribution. Detailed below
	//
	// The following arguments are optional:
	CacheBehaviorSettings pulumix.Input[*DistributionCacheBehaviorSettingsArgs]
	// A set of configuration blocks that describe the per-path cache behavior of the distribution. Detailed below
	CacheBehaviors pulumix.Input[[]*DistributionCacheBehaviorArgs]
	// The name of the SSL/TLS certificate attached to the distribution, if any.
	CertificateName pulumix.Input[*string]
	// Object that describes the default cache behavior of the distribution. Detailed below
	DefaultCacheBehavior pulumix.Input[*DistributionDefaultCacheBehaviorArgs]
	// The IP address type of the distribution. Default: `dualstack`.
	IpAddressType pulumix.Input[*string]
	// Indicates whether the distribution is enabled. Default: `true`.
	IsEnabled pulumix.Input[*bool]
	// Name of the distribution.
	Name pulumix.Input[*string]
	// Object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer. Detailed below
	Origin pulumix.Input[*DistributionOriginArgs]
	// Map of tags for the Lightsail Distribution. If
	// configured with a provider
	// `defaultTags` configuration block
	// present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionArgs)(nil)).Elem()
}

type DistributionOutput struct{ *pulumi.OutputState }

func (DistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Distribution)(nil)).Elem()
}

func (o DistributionOutput) ToDistributionOutput() DistributionOutput {
	return o
}

func (o DistributionOutput) ToDistributionOutputWithContext(ctx context.Context) DistributionOutput {
	return o
}

func (o DistributionOutput) ToOutput(ctx context.Context) pulumix.Output[Distribution] {
	return pulumix.Output[Distribution]{
		OutputState: o.OutputState,
	}
}

// The alternate domain names of the distribution.
func (o DistributionOutput) AlternativeDomainNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.ArrayOutput[string] { return v.AlternativeDomainNames })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) of the distribution.
func (o DistributionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Bundle ID to use for the distribution.
func (o DistributionOutput) BundleId() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.BundleId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An object that describes the cache behavior settings of the distribution. Detailed below
//
// The following arguments are optional:
func (o DistributionOutput) CacheBehaviorSettings() pulumix.GPtrOutput[DistributionCacheBehaviorSettings, DistributionCacheBehaviorSettingsOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GPtrOutput[DistributionCacheBehaviorSettings, DistributionCacheBehaviorSettingsOutput] {
		return v.CacheBehaviorSettings
	})
	unwrapped := pulumix.Flatten[*DistributionCacheBehaviorSettings, pulumix.GPtrOutput[DistributionCacheBehaviorSettings, DistributionCacheBehaviorSettingsOutput]](value)
	return pulumix.GPtrOutput[DistributionCacheBehaviorSettings, DistributionCacheBehaviorSettingsOutput]{OutputState: unwrapped.OutputState}
}

// A set of configuration blocks that describe the per-path cache behavior of the distribution. Detailed below
func (o DistributionOutput) CacheBehaviors() pulumix.GArrayOutput[DistributionCacheBehavior, DistributionCacheBehaviorOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GArrayOutput[DistributionCacheBehavior, DistributionCacheBehaviorOutput] {
		return v.CacheBehaviors
	})
	unwrapped := pulumix.Flatten[[]DistributionCacheBehavior, pulumix.GArrayOutput[DistributionCacheBehavior, DistributionCacheBehaviorOutput]](value)
	return pulumix.GArrayOutput[DistributionCacheBehavior, DistributionCacheBehaviorOutput]{OutputState: unwrapped.OutputState}
}

// The name of the SSL/TLS certificate attached to the distribution, if any.
func (o DistributionOutput) CertificateName() pulumix.Output[*string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*string] { return v.CertificateName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The timestamp when the distribution was created.
func (o DistributionOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Object that describes the default cache behavior of the distribution. Detailed below
func (o DistributionOutput) DefaultCacheBehavior() pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput] {
		return v.DefaultCacheBehavior
	})
	unwrapped := pulumix.Flatten[*DistributionDefaultCacheBehavior, pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput]](value)
	return pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput]{OutputState: unwrapped.OutputState}
}

// The domain name of the distribution.
func (o DistributionOutput) DomainName() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.DomainName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IP address type of the distribution. Default: `dualstack`.
func (o DistributionOutput) IpAddressType() pulumix.Output[*string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*string] { return v.IpAddressType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Indicates whether the distribution is enabled. Default: `true`.
func (o DistributionOutput) IsEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*bool] { return v.IsEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// An object that describes the location of the distribution, such as the AWS Region and Availability Zone. Detailed below
func (o DistributionOutput) Locations() pulumix.GArrayOutput[DistributionLocation, DistributionLocationOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GArrayOutput[DistributionLocation, DistributionLocationOutput] {
		return v.Locations
	})
	unwrapped := pulumix.Flatten[[]DistributionLocation, pulumix.GArrayOutput[DistributionLocation, DistributionLocationOutput]](value)
	return pulumix.GArrayOutput[DistributionLocation, DistributionLocationOutput]{OutputState: unwrapped.OutputState}
}

// Name of the distribution.
func (o DistributionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Object that describes the origin resource of the distribution, such as a Lightsail instance, bucket, or load balancer. Detailed below
func (o DistributionOutput) Origin() pulumix.GPtrOutput[DistributionOrigin, DistributionOriginOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GPtrOutput[DistributionOrigin, DistributionOriginOutput] { return v.Origin })
	unwrapped := pulumix.Flatten[*DistributionOrigin, pulumix.GPtrOutput[DistributionOrigin, DistributionOriginOutput]](value)
	return pulumix.GPtrOutput[DistributionOrigin, DistributionOriginOutput]{OutputState: unwrapped.OutputState}
}

// The public DNS of the origin.
func (o DistributionOutput) OriginPublicDns() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.OriginPublicDns })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The resource type of the origin resource (e.g., Instance).
func (o DistributionOutput) ResourceType() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.ResourceType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The status of the distribution.
func (o DistributionOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The support code. Include this code in your email to support when you have questions about your Lightsail distribution. This code enables our support team to look up your Lightsail information more easily.
func (o DistributionOutput) SupportCode() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.SupportCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags for the Lightsail Distribution. If
// configured with a provider
// `defaultTags` configuration block
// present, tags with matching keys will overwrite those defined at the provider-level.
func (o DistributionOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DistributionOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DistributionOutput{})
}
