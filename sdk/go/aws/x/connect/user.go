// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect User resource. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
type User struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the user.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
	DirectoryUserId pulumix.Output[string] `pulumi:"directoryUserId"`
	// The identifier of the hierarchy group for the user.
	HierarchyGroupId pulumix.Output[*string] `pulumi:"hierarchyGroupId"`
	// A block that contains information about the identity of the user. Documented below.
	IdentityInfo pulumix.GPtrOutput[UserIdentityInfo, UserIdentityInfoOutput] `pulumi:"identityInfo"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Output[string] `pulumi:"instanceId"`
	// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from `[a-zA-Z0-9_-.\@]+`.
	Name pulumix.Output[string] `pulumi:"name"`
	// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
	Password pulumix.Output[*string] `pulumi:"password"`
	// A block that contains information about the phone settings for the user. Documented below.
	PhoneConfig pulumix.GPtrOutput[UserPhoneConfig, UserPhoneConfigOutput] `pulumi:"phoneConfig"`
	// The identifier of the routing profile for the user.
	RoutingProfileId pulumix.Output[string] `pulumi:"routingProfileId"`
	// A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
	SecurityProfileIds pulumix.ArrayOutput[string] `pulumi:"securityProfileIds"`
	// Tags to apply to the user. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The identifier for the user.
	UserId pulumix.Output[string] `pulumi:"userId"`
}

// NewUser registers a new resource with the given unique name, arguments, and options.
func NewUser(ctx *pulumi.Context,
	name string, args *UserArgs, opts ...pulumi.ResourceOption) (*User, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.PhoneConfig == nil {
		return nil, errors.New("invalid value for required argument 'PhoneConfig'")
	}
	if args.RoutingProfileId == nil {
		return nil, errors.New("invalid value for required argument 'RoutingProfileId'")
	}
	if args.SecurityProfileIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityProfileIds'")
	}
	if args.Password != nil {
		untypedSecretValue := pulumi.ToSecret(args.Password.ToOutput(ctx.Context()).Untyped())
		args.Password = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource User
	err := ctx.RegisterResource("aws:connect/user:User", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUser gets an existing User resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserState, opts ...pulumi.ResourceOption) (*User, error) {
	var resource User
	err := ctx.ReadResource("aws:connect/user:User", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering User resources.
type userState struct {
	// The Amazon Resource Name (ARN) of the user.
	Arn *string `pulumi:"arn"`
	// The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
	DirectoryUserId *string `pulumi:"directoryUserId"`
	// The identifier of the hierarchy group for the user.
	HierarchyGroupId *string `pulumi:"hierarchyGroupId"`
	// A block that contains information about the identity of the user. Documented below.
	IdentityInfo *UserIdentityInfo `pulumi:"identityInfo"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId *string `pulumi:"instanceId"`
	// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from `[a-zA-Z0-9_-.\@]+`.
	Name *string `pulumi:"name"`
	// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
	Password *string `pulumi:"password"`
	// A block that contains information about the phone settings for the user. Documented below.
	PhoneConfig *UserPhoneConfig `pulumi:"phoneConfig"`
	// The identifier of the routing profile for the user.
	RoutingProfileId *string `pulumi:"routingProfileId"`
	// A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
	SecurityProfileIds []string `pulumi:"securityProfileIds"`
	// Tags to apply to the user. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The identifier for the user.
	UserId *string `pulumi:"userId"`
}

type UserState struct {
	// The Amazon Resource Name (ARN) of the user.
	Arn pulumix.Input[*string]
	// The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
	DirectoryUserId pulumix.Input[*string]
	// The identifier of the hierarchy group for the user.
	HierarchyGroupId pulumix.Input[*string]
	// A block that contains information about the identity of the user. Documented below.
	IdentityInfo pulumix.Input[*UserIdentityInfoArgs]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[*string]
	// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from `[a-zA-Z0-9_-.\@]+`.
	Name pulumix.Input[*string]
	// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
	Password pulumix.Input[*string]
	// A block that contains information about the phone settings for the user. Documented below.
	PhoneConfig pulumix.Input[*UserPhoneConfigArgs]
	// The identifier of the routing profile for the user.
	RoutingProfileId pulumix.Input[*string]
	// A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
	SecurityProfileIds pulumix.Input[[]string]
	// Tags to apply to the user. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The identifier for the user.
	UserId pulumix.Input[*string]
}

func (UserState) ElementType() reflect.Type {
	return reflect.TypeOf((*userState)(nil)).Elem()
}

type userArgs struct {
	// The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
	DirectoryUserId *string `pulumi:"directoryUserId"`
	// The identifier of the hierarchy group for the user.
	HierarchyGroupId *string `pulumi:"hierarchyGroupId"`
	// A block that contains information about the identity of the user. Documented below.
	IdentityInfo *UserIdentityInfo `pulumi:"identityInfo"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId string `pulumi:"instanceId"`
	// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from `[a-zA-Z0-9_-.\@]+`.
	Name *string `pulumi:"name"`
	// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
	Password *string `pulumi:"password"`
	// A block that contains information about the phone settings for the user. Documented below.
	PhoneConfig UserPhoneConfig `pulumi:"phoneConfig"`
	// The identifier of the routing profile for the user.
	RoutingProfileId string `pulumi:"routingProfileId"`
	// A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
	SecurityProfileIds []string `pulumi:"securityProfileIds"`
	// Tags to apply to the user. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a User resource.
type UserArgs struct {
	// The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
	DirectoryUserId pulumix.Input[*string]
	// The identifier of the hierarchy group for the user.
	HierarchyGroupId pulumix.Input[*string]
	// A block that contains information about the identity of the user. Documented below.
	IdentityInfo pulumix.Input[*UserIdentityInfoArgs]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[string]
	// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from `[a-zA-Z0-9_-.\@]+`.
	Name pulumix.Input[*string]
	// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
	Password pulumix.Input[*string]
	// A block that contains information about the phone settings for the user. Documented below.
	PhoneConfig pulumix.Input[*UserPhoneConfigArgs]
	// The identifier of the routing profile for the user.
	RoutingProfileId pulumix.Input[string]
	// A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
	SecurityProfileIds pulumix.Input[[]string]
	// Tags to apply to the user. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (UserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userArgs)(nil)).Elem()
}

type UserOutput struct{ *pulumi.OutputState }

func (UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*User)(nil)).Elem()
}

func (o UserOutput) ToUserOutput() UserOutput {
	return o
}

func (o UserOutput) ToUserOutputWithContext(ctx context.Context) UserOutput {
	return o
}

func (o UserOutput) ToOutput(ctx context.Context) pulumix.Output[User] {
	return pulumix.Output[User]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the user.
func (o UserOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
func (o UserOutput) DirectoryUserId() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.DirectoryUserId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier of the hierarchy group for the user.
func (o UserOutput) HierarchyGroupId() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.HierarchyGroupId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A block that contains information about the identity of the user. Documented below.
func (o UserOutput) IdentityInfo() pulumix.GPtrOutput[UserIdentityInfo, UserIdentityInfoOutput] {
	value := pulumix.Apply[User](o, func(v User) pulumix.GPtrOutput[UserIdentityInfo, UserIdentityInfoOutput] { return v.IdentityInfo })
	unwrapped := pulumix.Flatten[*UserIdentityInfo, pulumix.GPtrOutput[UserIdentityInfo, UserIdentityInfoOutput]](value)
	return pulumix.GPtrOutput[UserIdentityInfo, UserIdentityInfoOutput]{OutputState: unwrapped.OutputState}
}

// Specifies the identifier of the hosting Amazon Connect Instance.
func (o UserOutput) InstanceId() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.InstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from `[a-zA-Z0-9_-.\@]+`.
func (o UserOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
func (o UserOutput) Password() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.Password })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A block that contains information about the phone settings for the user. Documented below.
func (o UserOutput) PhoneConfig() pulumix.GPtrOutput[UserPhoneConfig, UserPhoneConfigOutput] {
	value := pulumix.Apply[User](o, func(v User) pulumix.GPtrOutput[UserPhoneConfig, UserPhoneConfigOutput] { return v.PhoneConfig })
	unwrapped := pulumix.Flatten[*UserPhoneConfig, pulumix.GPtrOutput[UserPhoneConfig, UserPhoneConfigOutput]](value)
	return pulumix.GPtrOutput[UserPhoneConfig, UserPhoneConfigOutput]{OutputState: unwrapped.OutputState}
}

// The identifier of the routing profile for the user.
func (o UserOutput) RoutingProfileId() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.RoutingProfileId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
func (o UserOutput) SecurityProfileIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.ArrayOutput[string] { return v.SecurityProfileIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Tags to apply to the user. If configured with a provider
// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o UserOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o UserOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The identifier for the user.
func (o UserOutput) UserId() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.UserId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(UserOutput{})
}
