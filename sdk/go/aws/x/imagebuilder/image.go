// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Image Builder Image.
type Image struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the image.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn pulumix.Output[*string] `pulumi:"containerRecipeArn"`
	// Date the image was created.
	DateCreated pulumix.Output[string] `pulumi:"dateCreated"`
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn pulumix.Output[*string] `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled pulumix.Output[*bool] `pulumi:"enhancedImageMetadataEnabled"`
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn pulumix.Output[*string] `pulumi:"imageRecipeArn"`
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration pulumix.GPtrOutput[ImageImageTestsConfiguration, ImageImageTestsConfigurationOutput] `pulumi:"imageTestsConfiguration"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	//
	// The following arguments are optional:
	InfrastructureConfigurationArn pulumix.Output[string] `pulumi:"infrastructureConfigurationArn"`
	// Name of the AMI.
	Name pulumix.Output[string] `pulumi:"name"`
	// Operating System version of the image.
	OsVersion pulumix.Output[string] `pulumi:"osVersion"`
	// List of objects with resources created by the image.
	OutputResources pulumix.GArrayOutput[ImageOutputResource, ImageOutputResourceOutput] `pulumi:"outputResources"`
	// Platform of the image.
	Platform pulumix.Output[string] `pulumi:"platform"`
	// Key-value map of resource tags for the Image Builder Image. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Version of the image.
	Version pulumix.Output[string] `pulumi:"version"`
}

// NewImage registers a new resource with the given unique name, arguments, and options.
func NewImage(ctx *pulumi.Context,
	name string, args *ImageArgs, opts ...pulumi.ResourceOption) (*Image, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InfrastructureConfigurationArn == nil {
		return nil, errors.New("invalid value for required argument 'InfrastructureConfigurationArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Image
	err := ctx.RegisterResource("aws:imagebuilder/image:Image", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImage gets an existing Image resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageState, opts ...pulumi.ResourceOption) (*Image, error) {
	var resource Image
	err := ctx.ReadResource("aws:imagebuilder/image:Image", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Image resources.
type imageState struct {
	// Amazon Resource Name (ARN) of the image.
	Arn *string `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn *string `pulumi:"containerRecipeArn"`
	// Date the image was created.
	DateCreated *string `pulumi:"dateCreated"`
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn *string `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled *bool `pulumi:"enhancedImageMetadataEnabled"`
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn *string `pulumi:"imageRecipeArn"`
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration *ImageImageTestsConfiguration `pulumi:"imageTestsConfiguration"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	//
	// The following arguments are optional:
	InfrastructureConfigurationArn *string `pulumi:"infrastructureConfigurationArn"`
	// Name of the AMI.
	Name *string `pulumi:"name"`
	// Operating System version of the image.
	OsVersion *string `pulumi:"osVersion"`
	// List of objects with resources created by the image.
	OutputResources []ImageOutputResource `pulumi:"outputResources"`
	// Platform of the image.
	Platform *string `pulumi:"platform"`
	// Key-value map of resource tags for the Image Builder Image. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Version of the image.
	Version *string `pulumi:"version"`
}

type ImageState struct {
	// Amazon Resource Name (ARN) of the image.
	Arn pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn pulumix.Input[*string]
	// Date the image was created.
	DateCreated pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn pulumix.Input[*string]
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled pulumix.Input[*bool]
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn pulumix.Input[*string]
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration pulumix.Input[*ImageImageTestsConfigurationArgs]
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	//
	// The following arguments are optional:
	InfrastructureConfigurationArn pulumix.Input[*string]
	// Name of the AMI.
	Name pulumix.Input[*string]
	// Operating System version of the image.
	OsVersion pulumix.Input[*string]
	// List of objects with resources created by the image.
	OutputResources pulumix.Input[[]*ImageOutputResourceArgs]
	// Platform of the image.
	Platform pulumix.Input[*string]
	// Key-value map of resource tags for the Image Builder Image. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Version of the image.
	Version pulumix.Input[*string]
}

func (ImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageState)(nil)).Elem()
}

type imageArgs struct {
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn *string `pulumi:"containerRecipeArn"`
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn *string `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled *bool `pulumi:"enhancedImageMetadataEnabled"`
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn *string `pulumi:"imageRecipeArn"`
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration *ImageImageTestsConfiguration `pulumi:"imageTestsConfiguration"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	//
	// The following arguments are optional:
	InfrastructureConfigurationArn string `pulumi:"infrastructureConfigurationArn"`
	// Key-value map of resource tags for the Image Builder Image. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Image resource.
type ImageArgs struct {
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn pulumix.Input[*string]
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled pulumix.Input[*bool]
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn pulumix.Input[*string]
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration pulumix.Input[*ImageImageTestsConfigurationArgs]
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	//
	// The following arguments are optional:
	InfrastructureConfigurationArn pulumix.Input[string]
	// Key-value map of resource tags for the Image Builder Image. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageArgs)(nil)).Elem()
}

type ImageOutput struct{ *pulumi.OutputState }

func (ImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Image)(nil)).Elem()
}

func (o ImageOutput) ToImageOutput() ImageOutput {
	return o
}

func (o ImageOutput) ToImageOutputWithContext(ctx context.Context) ImageOutput {
	return o
}

func (o ImageOutput) ToOutput(ctx context.Context) pulumix.Output[Image] {
	return pulumix.Output[Image]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the image.
func (o ImageOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the container recipe.
func (o ImageOutput) ContainerRecipeArn() pulumix.Output[*string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[*string] { return v.ContainerRecipeArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Date the image was created.
func (o ImageOutput) DateCreated() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.DateCreated })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
func (o ImageOutput) DistributionConfigurationArn() pulumix.Output[*string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[*string] { return v.DistributionConfigurationArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Whether additional information about the image being created is collected. Defaults to `true`.
func (o ImageOutput) EnhancedImageMetadataEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[*bool] { return v.EnhancedImageMetadataEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Amazon Resource Name (ARN) of the image recipe.
func (o ImageOutput) ImageRecipeArn() pulumix.Output[*string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[*string] { return v.ImageRecipeArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block with image tests configuration. Detailed below.
func (o ImageOutput) ImageTestsConfiguration() pulumix.GPtrOutput[ImageImageTestsConfiguration, ImageImageTestsConfigurationOutput] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.GPtrOutput[ImageImageTestsConfiguration, ImageImageTestsConfigurationOutput] {
		return v.ImageTestsConfiguration
	})
	unwrapped := pulumix.Flatten[*ImageImageTestsConfiguration, pulumix.GPtrOutput[ImageImageTestsConfiguration, ImageImageTestsConfigurationOutput]](value)
	return pulumix.GPtrOutput[ImageImageTestsConfiguration, ImageImageTestsConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
//
// The following arguments are optional:
func (o ImageOutput) InfrastructureConfigurationArn() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.InfrastructureConfigurationArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the AMI.
func (o ImageOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Operating System version of the image.
func (o ImageOutput) OsVersion() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.OsVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of objects with resources created by the image.
func (o ImageOutput) OutputResources() pulumix.GArrayOutput[ImageOutputResource, ImageOutputResourceOutput] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.GArrayOutput[ImageOutputResource, ImageOutputResourceOutput] {
		return v.OutputResources
	})
	unwrapped := pulumix.Flatten[[]ImageOutputResource, pulumix.GArrayOutput[ImageOutputResource, ImageOutputResourceOutput]](value)
	return pulumix.GArrayOutput[ImageOutputResource, ImageOutputResourceOutput]{OutputState: unwrapped.OutputState}
}

// Platform of the image.
func (o ImageOutput) Platform() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.Platform })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags for the Image Builder Image. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ImageOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ImageOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Version of the image.
func (o ImageOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ImageOutput{})
}
