// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Image Builder Image Pipeline.
type ImagePipeline struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the image pipeline.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn pulumix.Output[*string] `pulumi:"containerRecipeArn"`
	// Date the image pipeline was created.
	DateCreated pulumix.Output[string] `pulumi:"dateCreated"`
	// Date the image pipeline was last run.
	DateLastRun pulumix.Output[string] `pulumi:"dateLastRun"`
	// Date the image pipeline will run next.
	DateNextRun pulumix.Output[string] `pulumi:"dateNextRun"`
	// Date the image pipeline was updated.
	DateUpdated pulumix.Output[string] `pulumi:"dateUpdated"`
	// Description of the image pipeline.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn pulumix.Output[*string] `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled pulumix.Output[*bool] `pulumi:"enhancedImageMetadataEnabled"`
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn pulumix.Output[*string] `pulumi:"imageRecipeArn"`
	// Configuration block with image scanning configuration. Detailed below.
	ImageScanningConfiguration pulumix.GPtrOutput[ImagePipelineImageScanningConfiguration, ImagePipelineImageScanningConfigurationOutput] `pulumi:"imageScanningConfiguration"`
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration pulumix.GPtrOutput[ImagePipelineImageTestsConfiguration, ImagePipelineImageTestsConfigurationOutput] `pulumi:"imageTestsConfiguration"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn pulumix.Output[string] `pulumi:"infrastructureConfigurationArn"`
	// Name of the image pipeline.
	//
	// The following arguments are optional:
	Name pulumix.Output[string] `pulumi:"name"`
	// Platform of the image pipeline.
	Platform pulumix.Output[string] `pulumi:"platform"`
	// Configuration block with schedule settings. Detailed below.
	Schedule pulumix.GPtrOutput[ImagePipelineSchedule, ImagePipelineScheduleOutput] `pulumi:"schedule"`
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status pulumix.Output[*string] `pulumi:"status"`
	// Key-value map of resource tags for the image pipeline. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewImagePipeline registers a new resource with the given unique name, arguments, and options.
func NewImagePipeline(ctx *pulumi.Context,
	name string, args *ImagePipelineArgs, opts ...pulumi.ResourceOption) (*ImagePipeline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InfrastructureConfigurationArn == nil {
		return nil, errors.New("invalid value for required argument 'InfrastructureConfigurationArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ImagePipeline
	err := ctx.RegisterResource("aws:imagebuilder/imagePipeline:ImagePipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImagePipeline gets an existing ImagePipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImagePipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImagePipelineState, opts ...pulumi.ResourceOption) (*ImagePipeline, error) {
	var resource ImagePipeline
	err := ctx.ReadResource("aws:imagebuilder/imagePipeline:ImagePipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImagePipeline resources.
type imagePipelineState struct {
	// Amazon Resource Name (ARN) of the image pipeline.
	Arn *string `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn *string `pulumi:"containerRecipeArn"`
	// Date the image pipeline was created.
	DateCreated *string `pulumi:"dateCreated"`
	// Date the image pipeline was last run.
	DateLastRun *string `pulumi:"dateLastRun"`
	// Date the image pipeline will run next.
	DateNextRun *string `pulumi:"dateNextRun"`
	// Date the image pipeline was updated.
	DateUpdated *string `pulumi:"dateUpdated"`
	// Description of the image pipeline.
	Description *string `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn *string `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled *bool `pulumi:"enhancedImageMetadataEnabled"`
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn *string `pulumi:"imageRecipeArn"`
	// Configuration block with image scanning configuration. Detailed below.
	ImageScanningConfiguration *ImagePipelineImageScanningConfiguration `pulumi:"imageScanningConfiguration"`
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration *ImagePipelineImageTestsConfiguration `pulumi:"imageTestsConfiguration"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn *string `pulumi:"infrastructureConfigurationArn"`
	// Name of the image pipeline.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Platform of the image pipeline.
	Platform *string `pulumi:"platform"`
	// Configuration block with schedule settings. Detailed below.
	Schedule *ImagePipelineSchedule `pulumi:"schedule"`
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags for the image pipeline. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ImagePipelineState struct {
	// Amazon Resource Name (ARN) of the image pipeline.
	Arn pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn pulumix.Input[*string]
	// Date the image pipeline was created.
	DateCreated pulumix.Input[*string]
	// Date the image pipeline was last run.
	DateLastRun pulumix.Input[*string]
	// Date the image pipeline will run next.
	DateNextRun pulumix.Input[*string]
	// Date the image pipeline was updated.
	DateUpdated pulumix.Input[*string]
	// Description of the image pipeline.
	Description pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn pulumix.Input[*string]
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled pulumix.Input[*bool]
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn pulumix.Input[*string]
	// Configuration block with image scanning configuration. Detailed below.
	ImageScanningConfiguration pulumix.Input[*ImagePipelineImageScanningConfigurationArgs]
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration pulumix.Input[*ImagePipelineImageTestsConfigurationArgs]
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn pulumix.Input[*string]
	// Name of the image pipeline.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Platform of the image pipeline.
	Platform pulumix.Input[*string]
	// Configuration block with schedule settings. Detailed below.
	Schedule pulumix.Input[*ImagePipelineScheduleArgs]
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status pulumix.Input[*string]
	// Key-value map of resource tags for the image pipeline. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ImagePipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*imagePipelineState)(nil)).Elem()
}

type imagePipelineArgs struct {
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn *string `pulumi:"containerRecipeArn"`
	// Description of the image pipeline.
	Description *string `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn *string `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled *bool `pulumi:"enhancedImageMetadataEnabled"`
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn *string `pulumi:"imageRecipeArn"`
	// Configuration block with image scanning configuration. Detailed below.
	ImageScanningConfiguration *ImagePipelineImageScanningConfiguration `pulumi:"imageScanningConfiguration"`
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration *ImagePipelineImageTestsConfiguration `pulumi:"imageTestsConfiguration"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn string `pulumi:"infrastructureConfigurationArn"`
	// Name of the image pipeline.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Configuration block with schedule settings. Detailed below.
	Schedule *ImagePipelineSchedule `pulumi:"schedule"`
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags for the image pipeline. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ImagePipeline resource.
type ImagePipelineArgs struct {
	// Amazon Resource Name (ARN) of the container recipe.
	ContainerRecipeArn pulumix.Input[*string]
	// Description of the image pipeline.
	Description pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn pulumix.Input[*string]
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled pulumix.Input[*bool]
	// Amazon Resource Name (ARN) of the image recipe.
	ImageRecipeArn pulumix.Input[*string]
	// Configuration block with image scanning configuration. Detailed below.
	ImageScanningConfiguration pulumix.Input[*ImagePipelineImageScanningConfigurationArgs]
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration pulumix.Input[*ImagePipelineImageTestsConfigurationArgs]
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn pulumix.Input[string]
	// Name of the image pipeline.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Configuration block with schedule settings. Detailed below.
	Schedule pulumix.Input[*ImagePipelineScheduleArgs]
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status pulumix.Input[*string]
	// Key-value map of resource tags for the image pipeline. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ImagePipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imagePipelineArgs)(nil)).Elem()
}

type ImagePipelineOutput struct{ *pulumi.OutputState }

func (ImagePipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipeline)(nil)).Elem()
}

func (o ImagePipelineOutput) ToImagePipelineOutput() ImagePipelineOutput {
	return o
}

func (o ImagePipelineOutput) ToImagePipelineOutputWithContext(ctx context.Context) ImagePipelineOutput {
	return o
}

func (o ImagePipelineOutput) ToOutput(ctx context.Context) pulumix.Output[ImagePipeline] {
	return pulumix.Output[ImagePipeline]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the image pipeline.
func (o ImagePipelineOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the container recipe.
func (o ImagePipelineOutput) ContainerRecipeArn() pulumix.Output[*string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[*string] { return v.ContainerRecipeArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Date the image pipeline was created.
func (o ImagePipelineOutput) DateCreated() pulumix.Output[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[string] { return v.DateCreated })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date the image pipeline was last run.
func (o ImagePipelineOutput) DateLastRun() pulumix.Output[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[string] { return v.DateLastRun })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date the image pipeline will run next.
func (o ImagePipelineOutput) DateNextRun() pulumix.Output[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[string] { return v.DateNextRun })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date the image pipeline was updated.
func (o ImagePipelineOutput) DateUpdated() pulumix.Output[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[string] { return v.DateUpdated })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the image pipeline.
func (o ImagePipelineOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
func (o ImagePipelineOutput) DistributionConfigurationArn() pulumix.Output[*string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[*string] { return v.DistributionConfigurationArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Whether additional information about the image being created is collected. Defaults to `true`.
func (o ImagePipelineOutput) EnhancedImageMetadataEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[*bool] { return v.EnhancedImageMetadataEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Amazon Resource Name (ARN) of the image recipe.
func (o ImagePipelineOutput) ImageRecipeArn() pulumix.Output[*string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[*string] { return v.ImageRecipeArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block with image scanning configuration. Detailed below.
func (o ImagePipelineOutput) ImageScanningConfiguration() pulumix.GPtrOutput[ImagePipelineImageScanningConfiguration, ImagePipelineImageScanningConfigurationOutput] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.GPtrOutput[ImagePipelineImageScanningConfiguration, ImagePipelineImageScanningConfigurationOutput] {
		return v.ImageScanningConfiguration
	})
	unwrapped := pulumix.Flatten[*ImagePipelineImageScanningConfiguration, pulumix.GPtrOutput[ImagePipelineImageScanningConfiguration, ImagePipelineImageScanningConfigurationOutput]](value)
	return pulumix.GPtrOutput[ImagePipelineImageScanningConfiguration, ImagePipelineImageScanningConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block with image tests configuration. Detailed below.
func (o ImagePipelineOutput) ImageTestsConfiguration() pulumix.GPtrOutput[ImagePipelineImageTestsConfiguration, ImagePipelineImageTestsConfigurationOutput] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.GPtrOutput[ImagePipelineImageTestsConfiguration, ImagePipelineImageTestsConfigurationOutput] {
		return v.ImageTestsConfiguration
	})
	unwrapped := pulumix.Flatten[*ImagePipelineImageTestsConfiguration, pulumix.GPtrOutput[ImagePipelineImageTestsConfiguration, ImagePipelineImageTestsConfigurationOutput]](value)
	return pulumix.GPtrOutput[ImagePipelineImageTestsConfiguration, ImagePipelineImageTestsConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
func (o ImagePipelineOutput) InfrastructureConfigurationArn() pulumix.Output[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[string] { return v.InfrastructureConfigurationArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the image pipeline.
//
// The following arguments are optional:
func (o ImagePipelineOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Platform of the image pipeline.
func (o ImagePipelineOutput) Platform() pulumix.Output[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[string] { return v.Platform })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block with schedule settings. Detailed below.
func (o ImagePipelineOutput) Schedule() pulumix.GPtrOutput[ImagePipelineSchedule, ImagePipelineScheduleOutput] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.GPtrOutput[ImagePipelineSchedule, ImagePipelineScheduleOutput] {
		return v.Schedule
	})
	unwrapped := pulumix.Flatten[*ImagePipelineSchedule, pulumix.GPtrOutput[ImagePipelineSchedule, ImagePipelineScheduleOutput]](value)
	return pulumix.GPtrOutput[ImagePipelineSchedule, ImagePipelineScheduleOutput]{OutputState: unwrapped.OutputState}
}

// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
func (o ImagePipelineOutput) Status() pulumix.Output[*string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.Output[*string] { return v.Status })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value map of resource tags for the image pipeline. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ImagePipelineOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ImagePipelineOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ImagePipeline](o, func(v ImagePipeline) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ImagePipelineOutput{})
}
