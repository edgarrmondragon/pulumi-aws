// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Returns a unique endpoint specific to the AWS account making the call.
func GetEndpoint(ctx *pulumi.Context, args *GetEndpointArgs, opts ...pulumi.InvokeOption) (*GetEndpointResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEndpointResult
	err := ctx.Invoke("aws:iot/getEndpoint:getEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEndpoint.
type GetEndpointArgs struct {
	// Endpoint type. Valid values: `iot:CredentialProvider`, `iot:Data`, `iot:Data-ATS`, `iot:Jobs`.
	EndpointType *string `pulumi:"endpointType"`
}

// A collection of values returned by getEndpoint.
type GetEndpointResult struct {
	// Endpoint based on `endpointType`:
	// * No `endpointType`: Either `iot:Data` or `iot:Data-ATS` [depending on region](https://aws.amazon.com/blogs/iot/aws-iot-core-ats-endpoints/)
	// * `iot:CredentialsProvider`: `IDENTIFIER.credentials.iot.REGION.amazonaws.com`
	// * `iot:Data`: `IDENTIFIER.iot.REGION.amazonaws.com`
	// * `iot:Data-ATS`: `IDENTIFIER-ats.iot.REGION.amazonaws.com`
	// * `iot:Jobs`: `IDENTIFIER.jobs.iot.REGION.amazonaws.com`
	EndpointAddress string  `pulumi:"endpointAddress"`
	EndpointType    *string `pulumi:"endpointType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetEndpointOutput(ctx *pulumi.Context, args GetEndpointOutputArgs, opts ...pulumi.InvokeOption) GetEndpointResultOutput {
	outputResult := pulumix.ApplyErr[*GetEndpointArgs](args.ToOutput(), func(plainArgs *GetEndpointArgs) (*GetEndpointResult, error) {
		return GetEndpoint(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetEndpointResultOutput, *GetEndpointResult](outputResult)
}

// A collection of arguments for invoking getEndpoint.
type GetEndpointOutputArgs struct {
	// Endpoint type. Valid values: `iot:CredentialProvider`, `iot:Data`, `iot:Data-ATS`, `iot:Jobs`.
	EndpointType pulumix.Input[*string] `pulumi:"endpointType"`
}

func (args GetEndpointOutputArgs) ToOutput() pulumix.Output[*GetEndpointArgs] {
	allArgs := pulumix.All(
		args.EndpointType.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetEndpointArgs {
		return &GetEndpointArgs{
			EndpointType: resolvedArgs[0].(*string),
		}
	})
}

type GetEndpointResultOutput struct{ *pulumi.OutputState }

func (GetEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointResult)(nil)).Elem()
}

func (o GetEndpointResultOutput) ToOutput(context.Context) pulumix.Output[*GetEndpointResult] {
	return pulumix.Output[*GetEndpointResult]{
		OutputState: o.OutputState,
	}
}

func (o GetEndpointResultOutput) EndpointAddress() pulumix.Output[string] {
	return pulumix.Apply[*GetEndpointResult](o, func(v *GetEndpointResult) string { return v.EndpointAddress })
}

func (o GetEndpointResultOutput) EndpointType() pulumix.Output[*string] {
	return pulumix.Apply[*GetEndpointResult](o, func(v *GetEndpointResult) *string { return v.EndpointType })
}

func (o GetEndpointResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetEndpointResult](o, func(v *GetEndpointResult) string { return v.Id })
}
