// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssoadmin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type CustomerManagedPolicyAttachmentCustomerManagedPolicyReference struct {
	// Name of the customer managed IAM Policy to be attached.
	Name string `pulumi:"name"`
	// The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.
	Path *string `pulumi:"path"`
}

type CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceArgs struct {
	// Name of the customer managed IAM Policy to be attached.
	Name pulumix.Input[string] `pulumi:"name"`
	// The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.
	Path pulumix.Input[*string] `pulumi:"path"`
}

func (CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedPolicyAttachmentCustomerManagedPolicyReference)(nil)).Elem()
}

func (i CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceArgs) ToCustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput() CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput {
	return i.ToCustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutputWithContext(context.Background())
}

func (i CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceArgs) ToCustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutputWithContext(ctx context.Context) CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput)
}

func (i *CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[*CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceArgs] {
	return pulumix.Val(i)
}

type CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput struct{ *pulumi.OutputState }

func (CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerManagedPolicyAttachmentCustomerManagedPolicyReference)(nil)).Elem()
}

func (o CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput) ToCustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput() CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput {
	return o
}

func (o CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput) ToCustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutputWithContext(ctx context.Context) CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput {
	return o
}

func (o CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[CustomerManagedPolicyAttachmentCustomerManagedPolicyReference] {
	return pulumix.Output[CustomerManagedPolicyAttachmentCustomerManagedPolicyReference]{
		OutputState: o.OutputState,
	}
}

// Name of the customer managed IAM Policy to be attached.
func (o CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[CustomerManagedPolicyAttachmentCustomerManagedPolicyReference](o, func(v CustomerManagedPolicyAttachmentCustomerManagedPolicyReference) string { return v.Name })
}

// The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.
func (o CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput) Path() pulumix.Output[*string] {
	return pulumix.Apply[CustomerManagedPolicyAttachmentCustomerManagedPolicyReference](o, func(v CustomerManagedPolicyAttachmentCustomerManagedPolicyReference) *string { return v.Path })
}

type InstanceAccessControlAttributesAttribute struct {
	// The name of the attribute associated with your identities in your identity source. This is used to map a specified attribute in your identity source with an attribute in AWS SSO.
	Key string `pulumi:"key"`
	// The value used for mapping a specified attribute to an identity source. See AccessControlAttributeValue
	Values []InstanceAccessControlAttributesAttributeValue `pulumi:"values"`
}

type InstanceAccessControlAttributesAttributeArgs struct {
	// The name of the attribute associated with your identities in your identity source. This is used to map a specified attribute in your identity source with an attribute in AWS SSO.
	Key pulumix.Input[string] `pulumi:"key"`
	// The value used for mapping a specified attribute to an identity source. See AccessControlAttributeValue
	Values pulumix.Input[[]*InstanceAccessControlAttributesAttributeValueArgs] `pulumi:"values"`
}

func (InstanceAccessControlAttributesAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributesAttribute)(nil)).Elem()
}

func (i InstanceAccessControlAttributesAttributeArgs) ToInstanceAccessControlAttributesAttributeOutput() InstanceAccessControlAttributesAttributeOutput {
	return i.ToInstanceAccessControlAttributesAttributeOutputWithContext(context.Background())
}

func (i InstanceAccessControlAttributesAttributeArgs) ToInstanceAccessControlAttributesAttributeOutputWithContext(ctx context.Context) InstanceAccessControlAttributesAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccessControlAttributesAttributeOutput)
}

func (i *InstanceAccessControlAttributesAttributeArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceAccessControlAttributesAttributeArgs] {
	return pulumix.Val(i)
}

type InstanceAccessControlAttributesAttributeOutput struct{ *pulumi.OutputState }

func (InstanceAccessControlAttributesAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributesAttribute)(nil)).Elem()
}

func (o InstanceAccessControlAttributesAttributeOutput) ToInstanceAccessControlAttributesAttributeOutput() InstanceAccessControlAttributesAttributeOutput {
	return o
}

func (o InstanceAccessControlAttributesAttributeOutput) ToInstanceAccessControlAttributesAttributeOutputWithContext(ctx context.Context) InstanceAccessControlAttributesAttributeOutput {
	return o
}

func (o InstanceAccessControlAttributesAttributeOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceAccessControlAttributesAttribute] {
	return pulumix.Output[InstanceAccessControlAttributesAttribute]{
		OutputState: o.OutputState,
	}
}

// The name of the attribute associated with your identities in your identity source. This is used to map a specified attribute in your identity source with an attribute in AWS SSO.
func (o InstanceAccessControlAttributesAttributeOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[InstanceAccessControlAttributesAttribute](o, func(v InstanceAccessControlAttributesAttribute) string { return v.Key })
}

// The value used for mapping a specified attribute to an identity source. See AccessControlAttributeValue
func (o InstanceAccessControlAttributesAttributeOutput) Values() pulumix.GArrayOutput[InstanceAccessControlAttributesAttributeValue, InstanceAccessControlAttributesAttributeValueOutput] {
	value := pulumix.Apply[InstanceAccessControlAttributesAttribute](o, func(v InstanceAccessControlAttributesAttribute) []InstanceAccessControlAttributesAttributeValue {
		return v.Values
	})
	return pulumix.GArrayOutput[InstanceAccessControlAttributesAttributeValue, InstanceAccessControlAttributesAttributeValueOutput]{OutputState: value.OutputState}
}

type InstanceAccessControlAttributesAttributeValue struct {
	// The identity source to use when mapping a specified attribute to AWS SSO.
	Sources []string `pulumi:"sources"`
}

type InstanceAccessControlAttributesAttributeValueArgs struct {
	// The identity source to use when mapping a specified attribute to AWS SSO.
	Sources pulumix.Input[[]string] `pulumi:"sources"`
}

func (InstanceAccessControlAttributesAttributeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributesAttributeValue)(nil)).Elem()
}

func (i InstanceAccessControlAttributesAttributeValueArgs) ToInstanceAccessControlAttributesAttributeValueOutput() InstanceAccessControlAttributesAttributeValueOutput {
	return i.ToInstanceAccessControlAttributesAttributeValueOutputWithContext(context.Background())
}

func (i InstanceAccessControlAttributesAttributeValueArgs) ToInstanceAccessControlAttributesAttributeValueOutputWithContext(ctx context.Context) InstanceAccessControlAttributesAttributeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAccessControlAttributesAttributeValueOutput)
}

func (i *InstanceAccessControlAttributesAttributeValueArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceAccessControlAttributesAttributeValueArgs] {
	return pulumix.Val(i)
}

type InstanceAccessControlAttributesAttributeValueOutput struct{ *pulumi.OutputState }

func (InstanceAccessControlAttributesAttributeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAccessControlAttributesAttributeValue)(nil)).Elem()
}

func (o InstanceAccessControlAttributesAttributeValueOutput) ToInstanceAccessControlAttributesAttributeValueOutput() InstanceAccessControlAttributesAttributeValueOutput {
	return o
}

func (o InstanceAccessControlAttributesAttributeValueOutput) ToInstanceAccessControlAttributesAttributeValueOutputWithContext(ctx context.Context) InstanceAccessControlAttributesAttributeValueOutput {
	return o
}

func (o InstanceAccessControlAttributesAttributeValueOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceAccessControlAttributesAttributeValue] {
	return pulumix.Output[InstanceAccessControlAttributesAttributeValue]{
		OutputState: o.OutputState,
	}
}

// The identity source to use when mapping a specified attribute to AWS SSO.
func (o InstanceAccessControlAttributesAttributeValueOutput) Sources() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[InstanceAccessControlAttributesAttributeValue](o, func(v InstanceAccessControlAttributesAttributeValue) []string { return v.Sources })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type PermissionsBoundaryAttachmentPermissionsBoundary struct {
	// Specifies the name and path of a customer managed policy. See below.
	CustomerManagedPolicyReference *PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference `pulumi:"customerManagedPolicyReference"`
	// AWS-managed IAM policy ARN to use as the permissions boundary.
	ManagedPolicyArn *string `pulumi:"managedPolicyArn"`
}

type PermissionsBoundaryAttachmentPermissionsBoundaryArgs struct {
	// Specifies the name and path of a customer managed policy. See below.
	CustomerManagedPolicyReference pulumix.Input[*PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceArgs] `pulumi:"customerManagedPolicyReference"`
	// AWS-managed IAM policy ARN to use as the permissions boundary.
	ManagedPolicyArn pulumix.Input[*string] `pulumi:"managedPolicyArn"`
}

func (PermissionsBoundaryAttachmentPermissionsBoundaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsBoundaryAttachmentPermissionsBoundary)(nil)).Elem()
}

func (i PermissionsBoundaryAttachmentPermissionsBoundaryArgs) ToPermissionsBoundaryAttachmentPermissionsBoundaryOutput() PermissionsBoundaryAttachmentPermissionsBoundaryOutput {
	return i.ToPermissionsBoundaryAttachmentPermissionsBoundaryOutputWithContext(context.Background())
}

func (i PermissionsBoundaryAttachmentPermissionsBoundaryArgs) ToPermissionsBoundaryAttachmentPermissionsBoundaryOutputWithContext(ctx context.Context) PermissionsBoundaryAttachmentPermissionsBoundaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsBoundaryAttachmentPermissionsBoundaryOutput)
}

func (i *PermissionsBoundaryAttachmentPermissionsBoundaryArgs) ToOutput(ctx context.Context) pulumix.Output[*PermissionsBoundaryAttachmentPermissionsBoundaryArgs] {
	return pulumix.Val(i)
}

type PermissionsBoundaryAttachmentPermissionsBoundaryOutput struct{ *pulumi.OutputState }

func (PermissionsBoundaryAttachmentPermissionsBoundaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsBoundaryAttachmentPermissionsBoundary)(nil)).Elem()
}

func (o PermissionsBoundaryAttachmentPermissionsBoundaryOutput) ToPermissionsBoundaryAttachmentPermissionsBoundaryOutput() PermissionsBoundaryAttachmentPermissionsBoundaryOutput {
	return o
}

func (o PermissionsBoundaryAttachmentPermissionsBoundaryOutput) ToPermissionsBoundaryAttachmentPermissionsBoundaryOutputWithContext(ctx context.Context) PermissionsBoundaryAttachmentPermissionsBoundaryOutput {
	return o
}

func (o PermissionsBoundaryAttachmentPermissionsBoundaryOutput) ToOutput(ctx context.Context) pulumix.Output[PermissionsBoundaryAttachmentPermissionsBoundary] {
	return pulumix.Output[PermissionsBoundaryAttachmentPermissionsBoundary]{
		OutputState: o.OutputState,
	}
}

// Specifies the name and path of a customer managed policy. See below.
func (o PermissionsBoundaryAttachmentPermissionsBoundaryOutput) CustomerManagedPolicyReference() pulumix.GPtrOutput[PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference, PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput] {
	value := pulumix.Apply[PermissionsBoundaryAttachmentPermissionsBoundary](o, func(v PermissionsBoundaryAttachmentPermissionsBoundary) *PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference {
		return v.CustomerManagedPolicyReference
	})
	return pulumix.GPtrOutput[PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference, PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput]{OutputState: value.OutputState}
}

// AWS-managed IAM policy ARN to use as the permissions boundary.
func (o PermissionsBoundaryAttachmentPermissionsBoundaryOutput) ManagedPolicyArn() pulumix.Output[*string] {
	return pulumix.Apply[PermissionsBoundaryAttachmentPermissionsBoundary](o, func(v PermissionsBoundaryAttachmentPermissionsBoundary) *string { return v.ManagedPolicyArn })
}

type PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference struct {
	// Name of the customer managed IAM Policy to be attached.
	Name string `pulumi:"name"`
	// The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.
	Path *string `pulumi:"path"`
}

type PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceArgs struct {
	// Name of the customer managed IAM Policy to be attached.
	Name pulumix.Input[string] `pulumi:"name"`
	// The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.
	Path pulumix.Input[*string] `pulumi:"path"`
}

func (PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference)(nil)).Elem()
}

func (i PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceArgs) ToPermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput() PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput {
	return i.ToPermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutputWithContext(context.Background())
}

func (i PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceArgs) ToPermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutputWithContext(ctx context.Context) PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput)
}

func (i *PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[*PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceArgs] {
	return pulumix.Val(i)
}

type PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput struct{ *pulumi.OutputState }

func (PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference)(nil)).Elem()
}

func (o PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput) ToPermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput() PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput {
	return o
}

func (o PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput) ToPermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutputWithContext(ctx context.Context) PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput {
	return o
}

func (o PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference] {
	return pulumix.Output[PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference]{
		OutputState: o.OutputState,
	}
}

// Name of the customer managed IAM Policy to be attached.
func (o PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference](o, func(v PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference) string {
		return v.Name
	})
}

// The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.
func (o PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput) Path() pulumix.Output[*string] {
	return pulumix.Apply[PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference](o, func(v PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReference) *string {
		return v.Path
	})
}

func init() {
	pulumi.RegisterOutputType(CustomerManagedPolicyAttachmentCustomerManagedPolicyReferenceOutput{})
	pulumi.RegisterOutputType(InstanceAccessControlAttributesAttributeOutput{})
	pulumi.RegisterOutputType(InstanceAccessControlAttributesAttributeValueOutput{})
	pulumi.RegisterOutputType(PermissionsBoundaryAttachmentPermissionsBoundaryOutput{})
	pulumi.RegisterOutputType(PermissionsBoundaryAttachmentPermissionsBoundaryCustomerManagedPolicyReferenceOutput{})
}
