// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a WAF Regional XSS Match Set Resource for use with Application Load Balancer.
type XssMatchSet struct {
	pulumi.CustomResourceState

	// The name of the set
	Name pulumix.Output[string] `pulumi:"name"`
	// The parts of web requests that you want to inspect for cross-site scripting attacks.
	XssMatchTuples pulumix.GArrayOutput[XssMatchSetXssMatchTuple, XssMatchSetXssMatchTupleOutput] `pulumi:"xssMatchTuples"`
}

// NewXssMatchSet registers a new resource with the given unique name, arguments, and options.
func NewXssMatchSet(ctx *pulumi.Context,
	name string, args *XssMatchSetArgs, opts ...pulumi.ResourceOption) (*XssMatchSet, error) {
	if args == nil {
		args = &XssMatchSetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource XssMatchSet
	err := ctx.RegisterResource("aws:wafregional/xssMatchSet:XssMatchSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetXssMatchSet gets an existing XssMatchSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetXssMatchSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *XssMatchSetState, opts ...pulumi.ResourceOption) (*XssMatchSet, error) {
	var resource XssMatchSet
	err := ctx.ReadResource("aws:wafregional/xssMatchSet:XssMatchSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering XssMatchSet resources.
type xssMatchSetState struct {
	// The name of the set
	Name *string `pulumi:"name"`
	// The parts of web requests that you want to inspect for cross-site scripting attacks.
	XssMatchTuples []XssMatchSetXssMatchTuple `pulumi:"xssMatchTuples"`
}

type XssMatchSetState struct {
	// The name of the set
	Name pulumix.Input[*string]
	// The parts of web requests that you want to inspect for cross-site scripting attacks.
	XssMatchTuples pulumix.Input[[]*XssMatchSetXssMatchTupleArgs]
}

func (XssMatchSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*xssMatchSetState)(nil)).Elem()
}

type xssMatchSetArgs struct {
	// The name of the set
	Name *string `pulumi:"name"`
	// The parts of web requests that you want to inspect for cross-site scripting attacks.
	XssMatchTuples []XssMatchSetXssMatchTuple `pulumi:"xssMatchTuples"`
}

// The set of arguments for constructing a XssMatchSet resource.
type XssMatchSetArgs struct {
	// The name of the set
	Name pulumix.Input[*string]
	// The parts of web requests that you want to inspect for cross-site scripting attacks.
	XssMatchTuples pulumix.Input[[]*XssMatchSetXssMatchTupleArgs]
}

func (XssMatchSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*xssMatchSetArgs)(nil)).Elem()
}

type XssMatchSetOutput struct{ *pulumi.OutputState }

func (XssMatchSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XssMatchSet)(nil)).Elem()
}

func (o XssMatchSetOutput) ToXssMatchSetOutput() XssMatchSetOutput {
	return o
}

func (o XssMatchSetOutput) ToXssMatchSetOutputWithContext(ctx context.Context) XssMatchSetOutput {
	return o
}

func (o XssMatchSetOutput) ToOutput(ctx context.Context) pulumix.Output[XssMatchSet] {
	return pulumix.Output[XssMatchSet]{
		OutputState: o.OutputState,
	}
}

// The name of the set
func (o XssMatchSetOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[XssMatchSet](o, func(v XssMatchSet) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The parts of web requests that you want to inspect for cross-site scripting attacks.
func (o XssMatchSetOutput) XssMatchTuples() pulumix.GArrayOutput[XssMatchSetXssMatchTuple, XssMatchSetXssMatchTupleOutput] {
	value := pulumix.Apply[XssMatchSet](o, func(v XssMatchSet) pulumix.GArrayOutput[XssMatchSetXssMatchTuple, XssMatchSetXssMatchTupleOutput] {
		return v.XssMatchTuples
	})
	unwrapped := pulumix.Flatten[[]XssMatchSetXssMatchTuple, pulumix.GArrayOutput[XssMatchSetXssMatchTuple, XssMatchSetXssMatchTupleOutput]](value)
	return pulumix.GArrayOutput[XssMatchSetXssMatchTuple, XssMatchSetXssMatchTupleOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(XssMatchSetOutput{})
}
