// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to create an association between a VPC endpoint and a security group.
//
// > **NOTE on VPC Endpoints and VPC Endpoint Security Group Associations:** The provider provides
// both a standalone VPC Endpoint Security Group Association (an association between a VPC endpoint
// and a single `securityGroupId`) and a VPC Endpoint resource with a `securityGroupIds`
// attribute. Do not use the same security group ID in both a VPC Endpoint resource and a VPC Endpoint Security
// Group Association resource. Doing so will cause a conflict of associations and will overwrite the association.
type SecurityGroupAssociation struct {
	pulumi.CustomResourceState

	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation pulumix.Output[*bool] `pulumi:"replaceDefaultAssociation"`
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId pulumix.Output[string] `pulumi:"securityGroupId"`
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId pulumix.Output[string] `pulumi:"vpcEndpointId"`
}

// NewSecurityGroupAssociation registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroupAssociation(ctx *pulumi.Context,
	name string, args *SecurityGroupAssociationArgs, opts ...pulumi.ResourceOption) (*SecurityGroupAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.VpcEndpointId == nil {
		return nil, errors.New("invalid value for required argument 'VpcEndpointId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGroupAssociation
	err := ctx.RegisterResource("aws:ec2/securityGroupAssociation:SecurityGroupAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroupAssociation gets an existing SecurityGroupAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroupAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupAssociationState, opts ...pulumi.ResourceOption) (*SecurityGroupAssociation, error) {
	var resource SecurityGroupAssociation
	err := ctx.ReadResource("aws:ec2/securityGroupAssociation:SecurityGroupAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroupAssociation resources.
type securityGroupAssociationState struct {
	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation *bool `pulumi:"replaceDefaultAssociation"`
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
}

type SecurityGroupAssociationState struct {
	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation pulumix.Input[*bool]
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId pulumix.Input[*string]
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId pulumix.Input[*string]
}

func (SecurityGroupAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupAssociationState)(nil)).Elem()
}

type securityGroupAssociationArgs struct {
	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation *bool `pulumi:"replaceDefaultAssociation"`
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId string `pulumi:"vpcEndpointId"`
}

// The set of arguments for constructing a SecurityGroupAssociation resource.
type SecurityGroupAssociationArgs struct {
	// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
	ReplaceDefaultAssociation pulumix.Input[*bool]
	// The ID of the security group to be associated with the VPC endpoint.
	SecurityGroupId pulumix.Input[string]
	// The ID of the VPC endpoint with which the security group will be associated.
	VpcEndpointId pulumix.Input[string]
}

func (SecurityGroupAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupAssociationArgs)(nil)).Elem()
}

type SecurityGroupAssociationOutput struct{ *pulumi.OutputState }

func (SecurityGroupAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupAssociation)(nil)).Elem()
}

func (o SecurityGroupAssociationOutput) ToSecurityGroupAssociationOutput() SecurityGroupAssociationOutput {
	return o
}

func (o SecurityGroupAssociationOutput) ToSecurityGroupAssociationOutputWithContext(ctx context.Context) SecurityGroupAssociationOutput {
	return o
}

func (o SecurityGroupAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[SecurityGroupAssociation] {
	return pulumix.Output[SecurityGroupAssociation]{
		OutputState: o.OutputState,
	}
}

// Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replaceDefaultAssociation = true`.
func (o SecurityGroupAssociationOutput) ReplaceDefaultAssociation() pulumix.Output[*bool] {
	value := pulumix.Apply[SecurityGroupAssociation](o, func(v SecurityGroupAssociation) pulumix.Output[*bool] { return v.ReplaceDefaultAssociation })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The ID of the security group to be associated with the VPC endpoint.
func (o SecurityGroupAssociationOutput) SecurityGroupId() pulumix.Output[string] {
	value := pulumix.Apply[SecurityGroupAssociation](o, func(v SecurityGroupAssociation) pulumix.Output[string] { return v.SecurityGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the VPC endpoint with which the security group will be associated.
func (o SecurityGroupAssociationOutput) VpcEndpointId() pulumix.Output[string] {
	value := pulumix.Apply[SecurityGroupAssociation](o, func(v SecurityGroupAssociation) pulumix.Output[string] { return v.VpcEndpointId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(SecurityGroupAssociationOutput{})
}
