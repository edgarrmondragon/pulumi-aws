// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kinesis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Kinesis Firehose Delivery Stream resource. Amazon Kinesis Firehose is a fully managed, elastic service to easily deliver real-time data streams to destinations such as Amazon S3 and Amazon Redshift.
//
// For more details, see the [Amazon Kinesis Firehose Documentation](https://aws.amazon.com/documentation/firehose/).
type FirehoseDeliveryStream struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) specifying the Stream
	Arn pulumix.Output[string] `pulumi:"arn"`
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint` and `opensearch`.
	// is redshift). More details are given below.
	Destination   pulumix.Output[string] `pulumi:"destination"`
	DestinationId pulumix.Output[string] `pulumi:"destinationId"`
	// Configuration options if elasticsearch is the destination. More details are given below.
	ElasticsearchConfiguration pulumix.GPtrOutput[FirehoseDeliveryStreamElasticsearchConfiguration, FirehoseDeliveryStreamElasticsearchConfigurationOutput] `pulumi:"elasticsearchConfiguration"`
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration pulumix.GPtrOutput[FirehoseDeliveryStreamExtendedS3Configuration, FirehoseDeliveryStreamExtendedS3ConfigurationOutput] `pulumi:"extendedS3Configuration"`
	// Configuration options if httpEndpoint is the destination. requires the user to also specify a `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration pulumix.GPtrOutput[FirehoseDeliveryStreamHttpEndpointConfiguration, FirehoseDeliveryStreamHttpEndpointConfigurationOutput] `pulumi:"httpEndpointConfiguration"`
	// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
	KinesisSourceConfiguration pulumix.GPtrOutput[FirehoseDeliveryStreamKinesisSourceConfiguration, FirehoseDeliveryStreamKinesisSourceConfigurationOutput] `pulumi:"kinesisSourceConfiguration"`
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name pulumix.Output[string] `pulumi:"name"`
	// Configuration options if opensearch is the destination. More details are given below.
	OpensearchConfiguration pulumix.GPtrOutput[FirehoseDeliveryStreamOpensearchConfiguration, FirehoseDeliveryStreamOpensearchConfigurationOutput] `pulumi:"opensearchConfiguration"`
	// Configuration options if redshift is the destination.
	// Using `redshiftConfiguration` requires the user to also specify a
	// `s3Configuration` block. More details are given below.
	RedshiftConfiguration pulumix.GPtrOutput[FirehoseDeliveryStreamRedshiftConfiguration, FirehoseDeliveryStreamRedshiftConfigurationOutput] `pulumi:"redshiftConfiguration"`
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption pulumix.GPtrOutput[FirehoseDeliveryStreamServerSideEncryption, FirehoseDeliveryStreamServerSideEncryptionOutput] `pulumi:"serverSideEncryption"`
	// Configuration options if splunk is the destination. More details are given below.
	SplunkConfiguration pulumix.GPtrOutput[FirehoseDeliveryStreamSplunkConfiguration, FirehoseDeliveryStreamSplunkConfigurationOutput] `pulumi:"splunkConfiguration"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumix.Output[string] `pulumi:"versionId"`
}

// NewFirehoseDeliveryStream registers a new resource with the given unique name, arguments, and options.
func NewFirehoseDeliveryStream(ctx *pulumi.Context,
	name string, args *FirehoseDeliveryStreamArgs, opts ...pulumi.ResourceOption) (*FirehoseDeliveryStream, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirehoseDeliveryStream
	err := ctx.RegisterResource("aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirehoseDeliveryStream gets an existing FirehoseDeliveryStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirehoseDeliveryStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirehoseDeliveryStreamState, opts ...pulumi.ResourceOption) (*FirehoseDeliveryStream, error) {
	var resource FirehoseDeliveryStream
	err := ctx.ReadResource("aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirehoseDeliveryStream resources.
type firehoseDeliveryStreamState struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn *string `pulumi:"arn"`
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint` and `opensearch`.
	// is redshift). More details are given below.
	Destination   *string `pulumi:"destination"`
	DestinationId *string `pulumi:"destinationId"`
	// Configuration options if elasticsearch is the destination. More details are given below.
	ElasticsearchConfiguration *FirehoseDeliveryStreamElasticsearchConfiguration `pulumi:"elasticsearchConfiguration"`
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration *FirehoseDeliveryStreamExtendedS3Configuration `pulumi:"extendedS3Configuration"`
	// Configuration options if httpEndpoint is the destination. requires the user to also specify a `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration *FirehoseDeliveryStreamHttpEndpointConfiguration `pulumi:"httpEndpointConfiguration"`
	// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
	KinesisSourceConfiguration *FirehoseDeliveryStreamKinesisSourceConfiguration `pulumi:"kinesisSourceConfiguration"`
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name *string `pulumi:"name"`
	// Configuration options if opensearch is the destination. More details are given below.
	OpensearchConfiguration *FirehoseDeliveryStreamOpensearchConfiguration `pulumi:"opensearchConfiguration"`
	// Configuration options if redshift is the destination.
	// Using `redshiftConfiguration` requires the user to also specify a
	// `s3Configuration` block. More details are given below.
	RedshiftConfiguration *FirehoseDeliveryStreamRedshiftConfiguration `pulumi:"redshiftConfiguration"`
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption *FirehoseDeliveryStreamServerSideEncryption `pulumi:"serverSideEncryption"`
	// Configuration options if splunk is the destination. More details are given below.
	SplunkConfiguration *FirehoseDeliveryStreamSplunkConfiguration `pulumi:"splunkConfiguration"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId *string `pulumi:"versionId"`
}

type FirehoseDeliveryStreamState struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn pulumix.Input[*string]
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint` and `opensearch`.
	// is redshift). More details are given below.
	Destination   pulumix.Input[*string]
	DestinationId pulumix.Input[*string]
	// Configuration options if elasticsearch is the destination. More details are given below.
	ElasticsearchConfiguration pulumix.Input[*FirehoseDeliveryStreamElasticsearchConfigurationArgs]
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration pulumix.Input[*FirehoseDeliveryStreamExtendedS3ConfigurationArgs]
	// Configuration options if httpEndpoint is the destination. requires the user to also specify a `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration pulumix.Input[*FirehoseDeliveryStreamHttpEndpointConfigurationArgs]
	// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
	KinesisSourceConfiguration pulumix.Input[*FirehoseDeliveryStreamKinesisSourceConfigurationArgs]
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name pulumix.Input[*string]
	// Configuration options if opensearch is the destination. More details are given below.
	OpensearchConfiguration pulumix.Input[*FirehoseDeliveryStreamOpensearchConfigurationArgs]
	// Configuration options if redshift is the destination.
	// Using `redshiftConfiguration` requires the user to also specify a
	// `s3Configuration` block. More details are given below.
	RedshiftConfiguration pulumix.Input[*FirehoseDeliveryStreamRedshiftConfigurationArgs]
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption pulumix.Input[*FirehoseDeliveryStreamServerSideEncryptionArgs]
	// Configuration options if splunk is the destination. More details are given below.
	SplunkConfiguration pulumix.Input[*FirehoseDeliveryStreamSplunkConfigurationArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumix.Input[*string]
}

func (FirehoseDeliveryStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*firehoseDeliveryStreamState)(nil)).Elem()
}

type firehoseDeliveryStreamArgs struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn *string `pulumi:"arn"`
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint` and `opensearch`.
	// is redshift). More details are given below.
	Destination   string  `pulumi:"destination"`
	DestinationId *string `pulumi:"destinationId"`
	// Configuration options if elasticsearch is the destination. More details are given below.
	ElasticsearchConfiguration *FirehoseDeliveryStreamElasticsearchConfiguration `pulumi:"elasticsearchConfiguration"`
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration *FirehoseDeliveryStreamExtendedS3Configuration `pulumi:"extendedS3Configuration"`
	// Configuration options if httpEndpoint is the destination. requires the user to also specify a `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration *FirehoseDeliveryStreamHttpEndpointConfiguration `pulumi:"httpEndpointConfiguration"`
	// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
	KinesisSourceConfiguration *FirehoseDeliveryStreamKinesisSourceConfiguration `pulumi:"kinesisSourceConfiguration"`
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name *string `pulumi:"name"`
	// Configuration options if opensearch is the destination. More details are given below.
	OpensearchConfiguration *FirehoseDeliveryStreamOpensearchConfiguration `pulumi:"opensearchConfiguration"`
	// Configuration options if redshift is the destination.
	// Using `redshiftConfiguration` requires the user to also specify a
	// `s3Configuration` block. More details are given below.
	RedshiftConfiguration *FirehoseDeliveryStreamRedshiftConfiguration `pulumi:"redshiftConfiguration"`
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption *FirehoseDeliveryStreamServerSideEncryption `pulumi:"serverSideEncryption"`
	// Configuration options if splunk is the destination. More details are given below.
	SplunkConfiguration *FirehoseDeliveryStreamSplunkConfiguration `pulumi:"splunkConfiguration"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId *string `pulumi:"versionId"`
}

// The set of arguments for constructing a FirehoseDeliveryStream resource.
type FirehoseDeliveryStreamArgs struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn pulumix.Input[*string]
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint` and `opensearch`.
	// is redshift). More details are given below.
	Destination   pulumix.Input[string]
	DestinationId pulumix.Input[*string]
	// Configuration options if elasticsearch is the destination. More details are given below.
	ElasticsearchConfiguration pulumix.Input[*FirehoseDeliveryStreamElasticsearchConfigurationArgs]
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration pulumix.Input[*FirehoseDeliveryStreamExtendedS3ConfigurationArgs]
	// Configuration options if httpEndpoint is the destination. requires the user to also specify a `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration pulumix.Input[*FirehoseDeliveryStreamHttpEndpointConfigurationArgs]
	// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
	KinesisSourceConfiguration pulumix.Input[*FirehoseDeliveryStreamKinesisSourceConfigurationArgs]
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name pulumix.Input[*string]
	// Configuration options if opensearch is the destination. More details are given below.
	OpensearchConfiguration pulumix.Input[*FirehoseDeliveryStreamOpensearchConfigurationArgs]
	// Configuration options if redshift is the destination.
	// Using `redshiftConfiguration` requires the user to also specify a
	// `s3Configuration` block. More details are given below.
	RedshiftConfiguration pulumix.Input[*FirehoseDeliveryStreamRedshiftConfigurationArgs]
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption pulumix.Input[*FirehoseDeliveryStreamServerSideEncryptionArgs]
	// Configuration options if splunk is the destination. More details are given below.
	SplunkConfiguration pulumix.Input[*FirehoseDeliveryStreamSplunkConfigurationArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumix.Input[*string]
}

func (FirehoseDeliveryStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firehoseDeliveryStreamArgs)(nil)).Elem()
}

type FirehoseDeliveryStreamOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStream)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOutput) ToFirehoseDeliveryStreamOutput() FirehoseDeliveryStreamOutput {
	return o
}

func (o FirehoseDeliveryStreamOutput) ToFirehoseDeliveryStreamOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOutput {
	return o
}

func (o FirehoseDeliveryStreamOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStream] {
	return pulumix.Output[FirehoseDeliveryStream]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) specifying the Stream
func (o FirehoseDeliveryStreamOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint` and `opensearch`.
// is redshift). More details are given below.
func (o FirehoseDeliveryStreamOutput) Destination() pulumix.Output[string] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.Output[string] { return v.Destination })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o FirehoseDeliveryStreamOutput) DestinationId() pulumix.Output[string] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.Output[string] { return v.DestinationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration options if elasticsearch is the destination. More details are given below.
func (o FirehoseDeliveryStreamOutput) ElasticsearchConfiguration() pulumix.GPtrOutput[FirehoseDeliveryStreamElasticsearchConfiguration, FirehoseDeliveryStreamElasticsearchConfigurationOutput] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.GPtrOutput[FirehoseDeliveryStreamElasticsearchConfiguration, FirehoseDeliveryStreamElasticsearchConfigurationOutput] {
		return v.ElasticsearchConfiguration
	})
	unwrapped := pulumix.Flatten[*FirehoseDeliveryStreamElasticsearchConfiguration, pulumix.GPtrOutput[FirehoseDeliveryStreamElasticsearchConfiguration, FirehoseDeliveryStreamElasticsearchConfigurationOutput]](value)
	return pulumix.GPtrOutput[FirehoseDeliveryStreamElasticsearchConfiguration, FirehoseDeliveryStreamElasticsearchConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Enhanced configuration options for the s3 destination. More details are given below.
func (o FirehoseDeliveryStreamOutput) ExtendedS3Configuration() pulumix.GPtrOutput[FirehoseDeliveryStreamExtendedS3Configuration, FirehoseDeliveryStreamExtendedS3ConfigurationOutput] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.GPtrOutput[FirehoseDeliveryStreamExtendedS3Configuration, FirehoseDeliveryStreamExtendedS3ConfigurationOutput] {
		return v.ExtendedS3Configuration
	})
	unwrapped := pulumix.Flatten[*FirehoseDeliveryStreamExtendedS3Configuration, pulumix.GPtrOutput[FirehoseDeliveryStreamExtendedS3Configuration, FirehoseDeliveryStreamExtendedS3ConfigurationOutput]](value)
	return pulumix.GPtrOutput[FirehoseDeliveryStreamExtendedS3Configuration, FirehoseDeliveryStreamExtendedS3ConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Configuration options if httpEndpoint is the destination. requires the user to also specify a `s3Configuration` block.  More details are given below.
func (o FirehoseDeliveryStreamOutput) HttpEndpointConfiguration() pulumix.GPtrOutput[FirehoseDeliveryStreamHttpEndpointConfiguration, FirehoseDeliveryStreamHttpEndpointConfigurationOutput] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.GPtrOutput[FirehoseDeliveryStreamHttpEndpointConfiguration, FirehoseDeliveryStreamHttpEndpointConfigurationOutput] {
		return v.HttpEndpointConfiguration
	})
	unwrapped := pulumix.Flatten[*FirehoseDeliveryStreamHttpEndpointConfiguration, pulumix.GPtrOutput[FirehoseDeliveryStreamHttpEndpointConfiguration, FirehoseDeliveryStreamHttpEndpointConfigurationOutput]](value)
	return pulumix.GPtrOutput[FirehoseDeliveryStreamHttpEndpointConfiguration, FirehoseDeliveryStreamHttpEndpointConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamOutput) KinesisSourceConfiguration() pulumix.GPtrOutput[FirehoseDeliveryStreamKinesisSourceConfiguration, FirehoseDeliveryStreamKinesisSourceConfigurationOutput] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.GPtrOutput[FirehoseDeliveryStreamKinesisSourceConfiguration, FirehoseDeliveryStreamKinesisSourceConfigurationOutput] {
		return v.KinesisSourceConfiguration
	})
	unwrapped := pulumix.Flatten[*FirehoseDeliveryStreamKinesisSourceConfiguration, pulumix.GPtrOutput[FirehoseDeliveryStreamKinesisSourceConfiguration, FirehoseDeliveryStreamKinesisSourceConfigurationOutput]](value)
	return pulumix.GPtrOutput[FirehoseDeliveryStreamKinesisSourceConfiguration, FirehoseDeliveryStreamKinesisSourceConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
func (o FirehoseDeliveryStreamOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration options if opensearch is the destination. More details are given below.
func (o FirehoseDeliveryStreamOutput) OpensearchConfiguration() pulumix.GPtrOutput[FirehoseDeliveryStreamOpensearchConfiguration, FirehoseDeliveryStreamOpensearchConfigurationOutput] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.GPtrOutput[FirehoseDeliveryStreamOpensearchConfiguration, FirehoseDeliveryStreamOpensearchConfigurationOutput] {
		return v.OpensearchConfiguration
	})
	unwrapped := pulumix.Flatten[*FirehoseDeliveryStreamOpensearchConfiguration, pulumix.GPtrOutput[FirehoseDeliveryStreamOpensearchConfiguration, FirehoseDeliveryStreamOpensearchConfigurationOutput]](value)
	return pulumix.GPtrOutput[FirehoseDeliveryStreamOpensearchConfiguration, FirehoseDeliveryStreamOpensearchConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Configuration options if redshift is the destination.
// Using `redshiftConfiguration` requires the user to also specify a
// `s3Configuration` block. More details are given below.
func (o FirehoseDeliveryStreamOutput) RedshiftConfiguration() pulumix.GPtrOutput[FirehoseDeliveryStreamRedshiftConfiguration, FirehoseDeliveryStreamRedshiftConfigurationOutput] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.GPtrOutput[FirehoseDeliveryStreamRedshiftConfiguration, FirehoseDeliveryStreamRedshiftConfigurationOutput] {
		return v.RedshiftConfiguration
	})
	unwrapped := pulumix.Flatten[*FirehoseDeliveryStreamRedshiftConfiguration, pulumix.GPtrOutput[FirehoseDeliveryStreamRedshiftConfiguration, FirehoseDeliveryStreamRedshiftConfigurationOutput]](value)
	return pulumix.GPtrOutput[FirehoseDeliveryStreamRedshiftConfiguration, FirehoseDeliveryStreamRedshiftConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Encrypt at rest options.
// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamOutput) ServerSideEncryption() pulumix.GPtrOutput[FirehoseDeliveryStreamServerSideEncryption, FirehoseDeliveryStreamServerSideEncryptionOutput] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.GPtrOutput[FirehoseDeliveryStreamServerSideEncryption, FirehoseDeliveryStreamServerSideEncryptionOutput] {
		return v.ServerSideEncryption
	})
	unwrapped := pulumix.Flatten[*FirehoseDeliveryStreamServerSideEncryption, pulumix.GPtrOutput[FirehoseDeliveryStreamServerSideEncryption, FirehoseDeliveryStreamServerSideEncryptionOutput]](value)
	return pulumix.GPtrOutput[FirehoseDeliveryStreamServerSideEncryption, FirehoseDeliveryStreamServerSideEncryptionOutput]{OutputState: unwrapped.OutputState}
}

// Configuration options if splunk is the destination. More details are given below.
func (o FirehoseDeliveryStreamOutput) SplunkConfiguration() pulumix.GPtrOutput[FirehoseDeliveryStreamSplunkConfiguration, FirehoseDeliveryStreamSplunkConfigurationOutput] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.GPtrOutput[FirehoseDeliveryStreamSplunkConfiguration, FirehoseDeliveryStreamSplunkConfigurationOutput] {
		return v.SplunkConfiguration
	})
	unwrapped := pulumix.Flatten[*FirehoseDeliveryStreamSplunkConfiguration, pulumix.GPtrOutput[FirehoseDeliveryStreamSplunkConfiguration, FirehoseDeliveryStreamSplunkConfigurationOutput]](value)
	return pulumix.GPtrOutput[FirehoseDeliveryStreamSplunkConfiguration, FirehoseDeliveryStreamSplunkConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FirehoseDeliveryStreamOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FirehoseDeliveryStreamOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Specifies the table version for the output data schema. Defaults to `LATEST`.
func (o FirehoseDeliveryStreamOutput) VersionId() pulumix.Output[string] {
	value := pulumix.Apply[FirehoseDeliveryStream](o, func(v FirehoseDeliveryStream) pulumix.Output[string] { return v.VersionId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOutput{})
}
