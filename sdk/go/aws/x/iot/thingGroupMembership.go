// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Adds an IoT Thing to an IoT Thing Group.
type ThingGroupMembership struct {
	pulumi.CustomResourceState

	// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
	OverrideDynamicGroup pulumix.Output[*bool] `pulumi:"overrideDynamicGroup"`
	// The name of the group to which you are adding a thing.
	ThingGroupName pulumix.Output[string] `pulumi:"thingGroupName"`
	// The name of the thing to add to a group.
	ThingName pulumix.Output[string] `pulumi:"thingName"`
}

// NewThingGroupMembership registers a new resource with the given unique name, arguments, and options.
func NewThingGroupMembership(ctx *pulumi.Context,
	name string, args *ThingGroupMembershipArgs, opts ...pulumi.ResourceOption) (*ThingGroupMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ThingGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ThingGroupName'")
	}
	if args.ThingName == nil {
		return nil, errors.New("invalid value for required argument 'ThingName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ThingGroupMembership
	err := ctx.RegisterResource("aws:iot/thingGroupMembership:ThingGroupMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThingGroupMembership gets an existing ThingGroupMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThingGroupMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThingGroupMembershipState, opts ...pulumi.ResourceOption) (*ThingGroupMembership, error) {
	var resource ThingGroupMembership
	err := ctx.ReadResource("aws:iot/thingGroupMembership:ThingGroupMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThingGroupMembership resources.
type thingGroupMembershipState struct {
	// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
	OverrideDynamicGroup *bool `pulumi:"overrideDynamicGroup"`
	// The name of the group to which you are adding a thing.
	ThingGroupName *string `pulumi:"thingGroupName"`
	// The name of the thing to add to a group.
	ThingName *string `pulumi:"thingName"`
}

type ThingGroupMembershipState struct {
	// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
	OverrideDynamicGroup pulumix.Input[*bool]
	// The name of the group to which you are adding a thing.
	ThingGroupName pulumix.Input[*string]
	// The name of the thing to add to a group.
	ThingName pulumix.Input[*string]
}

func (ThingGroupMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*thingGroupMembershipState)(nil)).Elem()
}

type thingGroupMembershipArgs struct {
	// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
	OverrideDynamicGroup *bool `pulumi:"overrideDynamicGroup"`
	// The name of the group to which you are adding a thing.
	ThingGroupName string `pulumi:"thingGroupName"`
	// The name of the thing to add to a group.
	ThingName string `pulumi:"thingName"`
}

// The set of arguments for constructing a ThingGroupMembership resource.
type ThingGroupMembershipArgs struct {
	// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
	OverrideDynamicGroup pulumix.Input[*bool]
	// The name of the group to which you are adding a thing.
	ThingGroupName pulumix.Input[string]
	// The name of the thing to add to a group.
	ThingName pulumix.Input[string]
}

func (ThingGroupMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*thingGroupMembershipArgs)(nil)).Elem()
}

type ThingGroupMembershipOutput struct{ *pulumi.OutputState }

func (ThingGroupMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingGroupMembership)(nil)).Elem()
}

func (o ThingGroupMembershipOutput) ToThingGroupMembershipOutput() ThingGroupMembershipOutput {
	return o
}

func (o ThingGroupMembershipOutput) ToThingGroupMembershipOutputWithContext(ctx context.Context) ThingGroupMembershipOutput {
	return o
}

func (o ThingGroupMembershipOutput) ToOutput(ctx context.Context) pulumix.Output[ThingGroupMembership] {
	return pulumix.Output[ThingGroupMembership]{
		OutputState: o.OutputState,
	}
}

// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
func (o ThingGroupMembershipOutput) OverrideDynamicGroup() pulumix.Output[*bool] {
	value := pulumix.Apply[ThingGroupMembership](o, func(v ThingGroupMembership) pulumix.Output[*bool] { return v.OverrideDynamicGroup })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The name of the group to which you are adding a thing.
func (o ThingGroupMembershipOutput) ThingGroupName() pulumix.Output[string] {
	value := pulumix.Apply[ThingGroupMembership](o, func(v ThingGroupMembership) pulumix.Output[string] { return v.ThingGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the thing to add to a group.
func (o ThingGroupMembershipOutput) ThingName() pulumix.Output[string] {
	value := pulumix.Apply[ThingGroupMembership](o, func(v ThingGroupMembership) pulumix.Output[string] { return v.ThingName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ThingGroupMembershipOutput{})
}
