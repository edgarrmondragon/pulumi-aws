// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appintegrations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DataIntegrationScheduleConfig struct {
	// The start date for objects to import in the first flow run as an Unix/epoch timestamp in milliseconds or in ISO-8601 format. This needs to be a time in the past, meaning that the data created or updated before this given date will not be downloaded.
	FirstExecutionFrom string `pulumi:"firstExecutionFrom"`
	// The name of the object to pull from the data source. Examples of objects in Salesforce include `Case`, `Account`, or `Lead`.
	Object string `pulumi:"object"`
	// How often the data should be pulled from data source. Examples include `rate(1 hour)`, `rate(3 hours)`, `rate(1 day)`.
	ScheduleExpression string `pulumi:"scheduleExpression"`
}

type DataIntegrationScheduleConfigArgs struct {
	// The start date for objects to import in the first flow run as an Unix/epoch timestamp in milliseconds or in ISO-8601 format. This needs to be a time in the past, meaning that the data created or updated before this given date will not be downloaded.
	FirstExecutionFrom pulumix.Input[string] `pulumi:"firstExecutionFrom"`
	// The name of the object to pull from the data source. Examples of objects in Salesforce include `Case`, `Account`, or `Lead`.
	Object pulumix.Input[string] `pulumi:"object"`
	// How often the data should be pulled from data source. Examples include `rate(1 hour)`, `rate(3 hours)`, `rate(1 day)`.
	ScheduleExpression pulumix.Input[string] `pulumi:"scheduleExpression"`
}

func (DataIntegrationScheduleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrationScheduleConfig)(nil)).Elem()
}

func (i DataIntegrationScheduleConfigArgs) ToDataIntegrationScheduleConfigOutput() DataIntegrationScheduleConfigOutput {
	return i.ToDataIntegrationScheduleConfigOutputWithContext(context.Background())
}

func (i DataIntegrationScheduleConfigArgs) ToDataIntegrationScheduleConfigOutputWithContext(ctx context.Context) DataIntegrationScheduleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIntegrationScheduleConfigOutput)
}

func (i *DataIntegrationScheduleConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DataIntegrationScheduleConfigArgs] {
	return pulumix.Val(i)
}

type DataIntegrationScheduleConfigOutput struct{ *pulumi.OutputState }

func (DataIntegrationScheduleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrationScheduleConfig)(nil)).Elem()
}

func (o DataIntegrationScheduleConfigOutput) ToDataIntegrationScheduleConfigOutput() DataIntegrationScheduleConfigOutput {
	return o
}

func (o DataIntegrationScheduleConfigOutput) ToDataIntegrationScheduleConfigOutputWithContext(ctx context.Context) DataIntegrationScheduleConfigOutput {
	return o
}

func (o DataIntegrationScheduleConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DataIntegrationScheduleConfig] {
	return pulumix.Output[DataIntegrationScheduleConfig]{
		OutputState: o.OutputState,
	}
}

// The start date for objects to import in the first flow run as an Unix/epoch timestamp in milliseconds or in ISO-8601 format. This needs to be a time in the past, meaning that the data created or updated before this given date will not be downloaded.
func (o DataIntegrationScheduleConfigOutput) FirstExecutionFrom() pulumix.Output[string] {
	return pulumix.Apply[DataIntegrationScheduleConfig](o, func(v DataIntegrationScheduleConfig) string { return v.FirstExecutionFrom })
}

// The name of the object to pull from the data source. Examples of objects in Salesforce include `Case`, `Account`, or `Lead`.
func (o DataIntegrationScheduleConfigOutput) Object() pulumix.Output[string] {
	return pulumix.Apply[DataIntegrationScheduleConfig](o, func(v DataIntegrationScheduleConfig) string { return v.Object })
}

// How often the data should be pulled from data source. Examples include `rate(1 hour)`, `rate(3 hours)`, `rate(1 day)`.
func (o DataIntegrationScheduleConfigOutput) ScheduleExpression() pulumix.Output[string] {
	return pulumix.Apply[DataIntegrationScheduleConfig](o, func(v DataIntegrationScheduleConfig) string { return v.ScheduleExpression })
}

type GetEventIntegrationEventFilter struct {
	// The source of the events.
	Source string `pulumi:"source"`
}

type GetEventIntegrationEventFilterArgs struct {
	// The source of the events.
	Source pulumix.Input[string] `pulumi:"source"`
}

func (GetEventIntegrationEventFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventIntegrationEventFilter)(nil)).Elem()
}

func (i GetEventIntegrationEventFilterArgs) ToGetEventIntegrationEventFilterOutput() GetEventIntegrationEventFilterOutput {
	return i.ToGetEventIntegrationEventFilterOutputWithContext(context.Background())
}

func (i GetEventIntegrationEventFilterArgs) ToGetEventIntegrationEventFilterOutputWithContext(ctx context.Context) GetEventIntegrationEventFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventIntegrationEventFilterOutput)
}

func (i *GetEventIntegrationEventFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetEventIntegrationEventFilterArgs] {
	return pulumix.Val(i)
}

type GetEventIntegrationEventFilterOutput struct{ *pulumi.OutputState }

func (GetEventIntegrationEventFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventIntegrationEventFilter)(nil)).Elem()
}

func (o GetEventIntegrationEventFilterOutput) ToGetEventIntegrationEventFilterOutput() GetEventIntegrationEventFilterOutput {
	return o
}

func (o GetEventIntegrationEventFilterOutput) ToGetEventIntegrationEventFilterOutputWithContext(ctx context.Context) GetEventIntegrationEventFilterOutput {
	return o
}

func (o GetEventIntegrationEventFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetEventIntegrationEventFilter] {
	return pulumix.Output[GetEventIntegrationEventFilter]{
		OutputState: o.OutputState,
	}
}

// The source of the events.
func (o GetEventIntegrationEventFilterOutput) Source() pulumix.Output[string] {
	return pulumix.Apply[GetEventIntegrationEventFilter](o, func(v GetEventIntegrationEventFilter) string { return v.Source })
}

func init() {
	pulumi.RegisterOutputType(DataIntegrationScheduleConfigOutput{})
	pulumi.RegisterOutputType(GetEventIntegrationEventFilterOutput{})
}
