// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicequotas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieve information about a Service Quotas Service.
//
// > **NOTE:** Global quotas apply to all AWS regions, but can only be accessed in `us-east-1` in the Commercial partition or `us-gov-west-1` in the GovCloud partition. In other regions, the AWS API will return the error `The request failed because the specified service does not exist.`
func GetService(ctx *pulumi.Context, args *GetServiceArgs, opts ...pulumi.InvokeOption) (*GetServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceResult
	err := ctx.Invoke("aws:servicequotas/getService:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getService.
type GetServiceArgs struct {
	// Service name to lookup within Service Quotas. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getService.
type GetServiceResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Code of the service.
	ServiceCode string `pulumi:"serviceCode"`
	ServiceName string `pulumi:"serviceName"`
}

func GetServiceOutput(ctx *pulumi.Context, args GetServiceOutputArgs, opts ...pulumi.InvokeOption) GetServiceResultOutput {
	outputResult := pulumix.ApplyErr[*GetServiceArgs](args.ToOutput(), func(plainArgs *GetServiceArgs) (*GetServiceResult, error) {
		return GetService(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetServiceResultOutput, *GetServiceResult](outputResult)
}

// A collection of arguments for invoking getService.
type GetServiceOutputArgs struct {
	// Service name to lookup within Service Quotas. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
	ServiceName pulumix.Input[string] `pulumi:"serviceName"`
}

func (args GetServiceOutputArgs) ToOutput() pulumix.Output[*GetServiceArgs] {
	allArgs := pulumix.All(
		args.ServiceName.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetServiceArgs {
		return &GetServiceArgs{
			ServiceName: resolvedArgs[0].(string),
		}
	})
}

type GetServiceResultOutput struct{ *pulumi.OutputState }

func (GetServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceResult)(nil)).Elem()
}

func (o GetServiceResultOutput) ToOutput(context.Context) pulumix.Output[*GetServiceResult] {
	return pulumix.Output[*GetServiceResult]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetServiceResult](o, func(v *GetServiceResult) string { return v.Id })
}

func (o GetServiceResultOutput) ServiceCode() pulumix.Output[string] {
	return pulumix.Apply[*GetServiceResult](o, func(v *GetServiceResult) string { return v.ServiceCode })
}

func (o GetServiceResultOutput) ServiceName() pulumix.Output[string] {
	return pulumix.Apply[*GetServiceResult](o, func(v *GetServiceResult) string { return v.ServiceName })
}
