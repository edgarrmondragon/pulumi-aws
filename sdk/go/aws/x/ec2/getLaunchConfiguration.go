// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information about a Launch Configuration.
func LookupLaunchConfiguration(ctx *pulumi.Context, args *LookupLaunchConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupLaunchConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLaunchConfigurationResult
	err := ctx.Invoke("aws:ec2/getLaunchConfiguration:getLaunchConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLaunchConfiguration.
type LookupLaunchConfigurationArgs struct {
	// Name of the launch configuration.
	Name string `pulumi:"name"`
}

// A collection of values returned by getLaunchConfiguration.
type LookupLaunchConfigurationResult struct {
	// Amazon Resource Name of the launch configuration.
	Arn string `pulumi:"arn"`
	// Whether a Public IP address is associated with the instance.
	AssociatePublicIpAddress bool `pulumi:"associatePublicIpAddress"`
	// EBS Block Devices attached to the instance.
	EbsBlockDevices []GetLaunchConfigurationEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized bool `pulumi:"ebsOptimized"`
	// Whether Detailed Monitoring is Enabled.
	EnableMonitoring bool `pulumi:"enableMonitoring"`
	// The Ephemeral volumes on the instance.
	EphemeralBlockDevices []GetLaunchConfigurationEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// The IAM Instance Profile to associate with launched instances.
	IamInstanceProfile string `pulumi:"iamInstanceProfile"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// EC2 Image ID of the instance.
	ImageId string `pulumi:"imageId"`
	// Instance Type of the instance to launch.
	InstanceType string `pulumi:"instanceType"`
	// Key Name that should be used for the instance.
	KeyName string `pulumi:"keyName"`
	// Metadata options for the instance.
	MetadataOptions []GetLaunchConfigurationMetadataOption `pulumi:"metadataOptions"`
	// Name of the launch configuration.
	Name string `pulumi:"name"`
	// Tenancy of the instance.
	PlacementTenancy string `pulumi:"placementTenancy"`
	// Root Block Device of the instance.
	RootBlockDevices []GetLaunchConfigurationRootBlockDevice `pulumi:"rootBlockDevices"`
	// List of associated Security Group IDS.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Price to use for reserving Spot instances.
	SpotPrice string `pulumi:"spotPrice"`
	// User Data of the instance.
	UserData string `pulumi:"userData"`
}

func LookupLaunchConfigurationOutput(ctx *pulumi.Context, args LookupLaunchConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupLaunchConfigurationResultOutput {
	outputResult := pulumix.ApplyErr[*LookupLaunchConfigurationArgs](args.ToOutput(), func(plainArgs *LookupLaunchConfigurationArgs) (*LookupLaunchConfigurationResult, error) {
		return LookupLaunchConfiguration(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupLaunchConfigurationResultOutput, *LookupLaunchConfigurationResult](outputResult)
}

// A collection of arguments for invoking getLaunchConfiguration.
type LookupLaunchConfigurationOutputArgs struct {
	// Name of the launch configuration.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args LookupLaunchConfigurationOutputArgs) ToOutput() pulumix.Output[*LookupLaunchConfigurationArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupLaunchConfigurationArgs {
		return &LookupLaunchConfigurationArgs{
			Name: resolvedArgs[0].(string),
		}
	})
}

type LookupLaunchConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupLaunchConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLaunchConfigurationResult)(nil)).Elem()
}

func (o LookupLaunchConfigurationResultOutput) ToOutput(context.Context) pulumix.Output[*LookupLaunchConfigurationResult] {
	return pulumix.Output[*LookupLaunchConfigurationResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupLaunchConfigurationResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.Arn })
}

func (o LookupLaunchConfigurationResultOutput) AssociatePublicIpAddress() pulumix.Output[bool] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) bool { return v.AssociatePublicIpAddress })
}

func (o LookupLaunchConfigurationResultOutput) EbsBlockDevices() pulumix.GArrayOutput[GetLaunchConfigurationEbsBlockDevice, GetLaunchConfigurationEbsBlockDeviceOutput] {
	value := pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) []GetLaunchConfigurationEbsBlockDevice {
		return v.EbsBlockDevices
	})
	return pulumix.GArrayOutput[GetLaunchConfigurationEbsBlockDevice, GetLaunchConfigurationEbsBlockDeviceOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupLaunchConfigurationResultOutput) EbsOptimized() pulumix.Output[bool] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) bool { return v.EbsOptimized })
}

func (o LookupLaunchConfigurationResultOutput) EnableMonitoring() pulumix.Output[bool] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) bool { return v.EnableMonitoring })
}

func (o LookupLaunchConfigurationResultOutput) EphemeralBlockDevices() pulumix.GArrayOutput[GetLaunchConfigurationEphemeralBlockDevice, GetLaunchConfigurationEphemeralBlockDeviceOutput] {
	value := pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) []GetLaunchConfigurationEphemeralBlockDevice {
		return v.EphemeralBlockDevices
	})
	return pulumix.GArrayOutput[GetLaunchConfigurationEphemeralBlockDevice, GetLaunchConfigurationEphemeralBlockDeviceOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupLaunchConfigurationResultOutput) IamInstanceProfile() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.IamInstanceProfile })
}

func (o LookupLaunchConfigurationResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.Id })
}

func (o LookupLaunchConfigurationResultOutput) ImageId() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.ImageId })
}

func (o LookupLaunchConfigurationResultOutput) InstanceType() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.InstanceType })
}

func (o LookupLaunchConfigurationResultOutput) KeyName() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.KeyName })
}

func (o LookupLaunchConfigurationResultOutput) MetadataOptions() pulumix.GArrayOutput[GetLaunchConfigurationMetadataOption, GetLaunchConfigurationMetadataOptionOutput] {
	value := pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) []GetLaunchConfigurationMetadataOption {
		return v.MetadataOptions
	})
	return pulumix.GArrayOutput[GetLaunchConfigurationMetadataOption, GetLaunchConfigurationMetadataOptionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupLaunchConfigurationResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.Name })
}

func (o LookupLaunchConfigurationResultOutput) PlacementTenancy() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.PlacementTenancy })
}

func (o LookupLaunchConfigurationResultOutput) RootBlockDevices() pulumix.GArrayOutput[GetLaunchConfigurationRootBlockDevice, GetLaunchConfigurationRootBlockDeviceOutput] {
	value := pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) []GetLaunchConfigurationRootBlockDevice {
		return v.RootBlockDevices
	})
	return pulumix.GArrayOutput[GetLaunchConfigurationRootBlockDevice, GetLaunchConfigurationRootBlockDeviceOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupLaunchConfigurationResultOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupLaunchConfigurationResultOutput) SpotPrice() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.SpotPrice })
}

func (o LookupLaunchConfigurationResultOutput) UserData() pulumix.Output[string] {
	return pulumix.Apply[*LookupLaunchConfigurationResult](o, func(v *LookupLaunchConfigurationResult) string { return v.UserData })
}
