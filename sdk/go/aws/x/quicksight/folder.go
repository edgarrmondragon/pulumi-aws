// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing a QuickSight Folder.
type Folder struct {
	pulumi.CustomResourceState

	// ARN of the folder.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId pulumix.Output[string] `pulumi:"awsAccountId"`
	// The time that the folder was created.
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// Identifier for the folder.
	FolderId pulumix.Output[string] `pulumi:"folderId"`
	// An array of ancestor ARN strings for the folder. Empty for root-level folders.
	FolderPaths pulumix.ArrayOutput[string] `pulumi:"folderPaths"`
	// The type of folder. By default, it is `SHARED`. Valid values are: `SHARED`.
	FolderType pulumix.Output[*string] `pulumi:"folderType"`
	// The time that the folder was last updated.
	LastUpdatedTime pulumix.Output[string] `pulumi:"lastUpdatedTime"`
	// Display name for the folder.
	//
	// The following arguments are optional:
	Name pulumix.Output[string] `pulumi:"name"`
	// The Amazon Resource Name (ARN) for the parent folder. If not set, creates a root-level folder.
	ParentFolderArn pulumix.Output[*string] `pulumi:"parentFolderArn"`
	// A set of resource permissions on the folder. Maximum of 64 items. See permissions.
	Permissions pulumix.GArrayOutput[FolderPermission, FolderPermissionOutput] `pulumi:"permissions"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewFolder registers a new resource with the given unique name, arguments, and options.
func NewFolder(ctx *pulumi.Context,
	name string, args *FolderArgs, opts ...pulumi.ResourceOption) (*Folder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FolderId == nil {
		return nil, errors.New("invalid value for required argument 'FolderId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Folder
	err := ctx.RegisterResource("aws:quicksight/folder:Folder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFolder gets an existing Folder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFolder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FolderState, opts ...pulumi.ResourceOption) (*Folder, error) {
	var resource Folder
	err := ctx.ReadResource("aws:quicksight/folder:Folder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Folder resources.
type folderState struct {
	// ARN of the folder.
	Arn *string `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The time that the folder was created.
	CreatedTime *string `pulumi:"createdTime"`
	// Identifier for the folder.
	FolderId *string `pulumi:"folderId"`
	// An array of ancestor ARN strings for the folder. Empty for root-level folders.
	FolderPaths []string `pulumi:"folderPaths"`
	// The type of folder. By default, it is `SHARED`. Valid values are: `SHARED`.
	FolderType *string `pulumi:"folderType"`
	// The time that the folder was last updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Display name for the folder.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) for the parent folder. If not set, creates a root-level folder.
	ParentFolderArn *string `pulumi:"parentFolderArn"`
	// A set of resource permissions on the folder. Maximum of 64 items. See permissions.
	Permissions []FolderPermission `pulumi:"permissions"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type FolderState struct {
	// ARN of the folder.
	Arn pulumix.Input[*string]
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// The time that the folder was created.
	CreatedTime pulumix.Input[*string]
	// Identifier for the folder.
	FolderId pulumix.Input[*string]
	// An array of ancestor ARN strings for the folder. Empty for root-level folders.
	FolderPaths pulumix.Input[[]string]
	// The type of folder. By default, it is `SHARED`. Valid values are: `SHARED`.
	FolderType pulumix.Input[*string]
	// The time that the folder was last updated.
	LastUpdatedTime pulumix.Input[*string]
	// Display name for the folder.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for the parent folder. If not set, creates a root-level folder.
	ParentFolderArn pulumix.Input[*string]
	// A set of resource permissions on the folder. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*FolderPermissionArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (FolderState) ElementType() reflect.Type {
	return reflect.TypeOf((*folderState)(nil)).Elem()
}

type folderArgs struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Identifier for the folder.
	FolderId string `pulumi:"folderId"`
	// The type of folder. By default, it is `SHARED`. Valid values are: `SHARED`.
	FolderType *string `pulumi:"folderType"`
	// Display name for the folder.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) for the parent folder. If not set, creates a root-level folder.
	ParentFolderArn *string `pulumi:"parentFolderArn"`
	// A set of resource permissions on the folder. Maximum of 64 items. See permissions.
	Permissions []FolderPermission `pulumi:"permissions"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Folder resource.
type FolderArgs struct {
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// Identifier for the folder.
	FolderId pulumix.Input[string]
	// The type of folder. By default, it is `SHARED`. Valid values are: `SHARED`.
	FolderType pulumix.Input[*string]
	// Display name for the folder.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for the parent folder. If not set, creates a root-level folder.
	ParentFolderArn pulumix.Input[*string]
	// A set of resource permissions on the folder. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*FolderPermissionArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (FolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*folderArgs)(nil)).Elem()
}

type FolderOutput struct{ *pulumi.OutputState }

func (FolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Folder)(nil)).Elem()
}

func (o FolderOutput) ToFolderOutput() FolderOutput {
	return o
}

func (o FolderOutput) ToFolderOutputWithContext(ctx context.Context) FolderOutput {
	return o
}

func (o FolderOutput) ToOutput(ctx context.Context) pulumix.Output[Folder] {
	return pulumix.Output[Folder]{
		OutputState: o.OutputState,
	}
}

// ARN of the folder.
func (o FolderOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS account ID.
func (o FolderOutput) AwsAccountId() pulumix.Output[string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.Output[string] { return v.AwsAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time that the folder was created.
func (o FolderOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier for the folder.
func (o FolderOutput) FolderId() pulumix.Output[string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.Output[string] { return v.FolderId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An array of ancestor ARN strings for the folder. Empty for root-level folders.
func (o FolderOutput) FolderPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.ArrayOutput[string] { return v.FolderPaths })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The type of folder. By default, it is `SHARED`. Valid values are: `SHARED`.
func (o FolderOutput) FolderType() pulumix.Output[*string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.Output[*string] { return v.FolderType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The time that the folder was last updated.
func (o FolderOutput) LastUpdatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.Output[string] { return v.LastUpdatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Display name for the folder.
//
// The following arguments are optional:
func (o FolderOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) for the parent folder. If not set, creates a root-level folder.
func (o FolderOutput) ParentFolderArn() pulumix.Output[*string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.Output[*string] { return v.ParentFolderArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A set of resource permissions on the folder. Maximum of 64 items. See permissions.
func (o FolderOutput) Permissions() pulumix.GArrayOutput[FolderPermission, FolderPermissionOutput] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.GArrayOutput[FolderPermission, FolderPermissionOutput] { return v.Permissions })
	unwrapped := pulumix.Flatten[[]FolderPermission, pulumix.GArrayOutput[FolderPermission, FolderPermissionOutput]](value)
	return pulumix.GArrayOutput[FolderPermission, FolderPermissionOutput]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FolderOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FolderOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Folder](o, func(v Folder) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(FolderOutput{})
}
