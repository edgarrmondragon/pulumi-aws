// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package applicationinsights

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a ApplicationInsights Application resource.
type Application struct {
	pulumi.CustomResourceState

	// ARN of the Application.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
	AutoConfigEnabled pulumix.Output[*bool] `pulumi:"autoConfigEnabled"`
	// Configures all of the resources in the resource group by applying the recommended configurations.
	AutoCreate pulumix.Output[*bool] `pulumi:"autoCreate"`
	// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
	CweMonitorEnabled pulumix.Output[*bool] `pulumi:"cweMonitorEnabled"`
	// Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
	GroupingType pulumix.Output[*string] `pulumi:"groupingType"`
	// When set to `true`, creates opsItems for any problems detected on an application.
	OpsCenterEnabled pulumix.Output[*bool] `pulumi:"opsCenterEnabled"`
	// SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
	OpsItemSnsTopicArn pulumix.Output[*string] `pulumi:"opsItemSnsTopicArn"`
	// Name of the resource group.
	//
	// The following arguments are optional:
	ResourceGroupName pulumix.Output[string] `pulumi:"resourceGroupName"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Application
	err := ctx.RegisterResource("aws:applicationinsights/application:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("aws:applicationinsights/application:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
	// ARN of the Application.
	Arn *string `pulumi:"arn"`
	// Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
	AutoConfigEnabled *bool `pulumi:"autoConfigEnabled"`
	// Configures all of the resources in the resource group by applying the recommended configurations.
	AutoCreate *bool `pulumi:"autoCreate"`
	// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
	CweMonitorEnabled *bool `pulumi:"cweMonitorEnabled"`
	// Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
	GroupingType *string `pulumi:"groupingType"`
	// When set to `true`, creates opsItems for any problems detected on an application.
	OpsCenterEnabled *bool `pulumi:"opsCenterEnabled"`
	// SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
	OpsItemSnsTopicArn *string `pulumi:"opsItemSnsTopicArn"`
	// Name of the resource group.
	//
	// The following arguments are optional:
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ApplicationState struct {
	// ARN of the Application.
	Arn pulumix.Input[*string]
	// Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
	AutoConfigEnabled pulumix.Input[*bool]
	// Configures all of the resources in the resource group by applying the recommended configurations.
	AutoCreate pulumix.Input[*bool]
	// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
	CweMonitorEnabled pulumix.Input[*bool]
	// Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
	GroupingType pulumix.Input[*string]
	// When set to `true`, creates opsItems for any problems detected on an application.
	OpsCenterEnabled pulumix.Input[*bool]
	// SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
	OpsItemSnsTopicArn pulumix.Input[*string]
	// Name of the resource group.
	//
	// The following arguments are optional:
	ResourceGroupName pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	// Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
	AutoConfigEnabled *bool `pulumi:"autoConfigEnabled"`
	// Configures all of the resources in the resource group by applying the recommended configurations.
	AutoCreate *bool `pulumi:"autoCreate"`
	// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
	CweMonitorEnabled *bool `pulumi:"cweMonitorEnabled"`
	// Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
	GroupingType *string `pulumi:"groupingType"`
	// When set to `true`, creates opsItems for any problems detected on an application.
	OpsCenterEnabled *bool `pulumi:"opsCenterEnabled"`
	// SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
	OpsItemSnsTopicArn *string `pulumi:"opsItemSnsTopicArn"`
	// Name of the resource group.
	//
	// The following arguments are optional:
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	// Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
	AutoConfigEnabled pulumix.Input[*bool]
	// Configures all of the resources in the resource group by applying the recommended configurations.
	AutoCreate pulumix.Input[*bool]
	// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
	CweMonitorEnabled pulumix.Input[*bool]
	// Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
	GroupingType pulumix.Input[*string]
	// When set to `true`, creates opsItems for any problems detected on an application.
	OpsCenterEnabled pulumix.Input[*bool]
	// SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
	OpsItemSnsTopicArn pulumix.Input[*string]
	// Name of the resource group.
	//
	// The following arguments are optional:
	ResourceGroupName pulumix.Input[string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToOutput(ctx context.Context) pulumix.Output[Application] {
	return pulumix.Output[Application]{
		OutputState: o.OutputState,
	}
}

// ARN of the Application.
func (o ApplicationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
func (o ApplicationOutput) AutoConfigEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*bool] { return v.AutoConfigEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Configures all of the resources in the resource group by applying the recommended configurations.
func (o ApplicationOutput) AutoCreate() pulumix.Output[*bool] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*bool] { return v.AutoCreate })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
func (o ApplicationOutput) CweMonitorEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*bool] { return v.CweMonitorEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
func (o ApplicationOutput) GroupingType() pulumix.Output[*string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*string] { return v.GroupingType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// When set to `true`, creates opsItems for any problems detected on an application.
func (o ApplicationOutput) OpsCenterEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*bool] { return v.OpsCenterEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
func (o ApplicationOutput) OpsItemSnsTopicArn() pulumix.Output[*string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*string] { return v.OpsItemSnsTopicArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the resource group.
//
// The following arguments are optional:
func (o ApplicationOutput) ResourceGroupName() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.ResourceGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ApplicationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ApplicationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ApplicationOutput{})
}
