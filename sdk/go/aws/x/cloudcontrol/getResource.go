// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudcontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details for a Cloud Control API Resource. The reading of these resources is proxied through Cloud Control API handlers to the backend service.
func LookupResource(ctx *pulumi.Context, args *LookupResourceArgs, opts ...pulumi.InvokeOption) (*LookupResourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResourceResult
	err := ctx.Invoke("aws:cloudcontrol/getResource:getResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResource.
type LookupResourceArgs struct {
	// Identifier of the CloudFormation resource type. For example, `vpc-12345678`.
	Identifier string `pulumi:"identifier"`
	// ARN of the IAM Role to assume for operations.
	RoleArn *string `pulumi:"roleArn"`
	// CloudFormation resource type name. For example, `AWS::EC2::VPC`.
	//
	// The following arguments are optional:
	TypeName string `pulumi:"typeName"`
	// Identifier of the CloudFormation resource type version.
	TypeVersionId *string `pulumi:"typeVersionId"`
}

// A collection of values returned by getResource.
type LookupResourceResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Identifier string `pulumi:"identifier"`
	// JSON string matching the CloudFormation resource type schema with current configuration.
	Properties    string  `pulumi:"properties"`
	RoleArn       *string `pulumi:"roleArn"`
	TypeName      string  `pulumi:"typeName"`
	TypeVersionId *string `pulumi:"typeVersionId"`
}

func LookupResourceOutput(ctx *pulumi.Context, args LookupResourceOutputArgs, opts ...pulumi.InvokeOption) LookupResourceResultOutput {
	outputResult := pulumix.ApplyErr[*LookupResourceArgs](args.ToOutput(), func(plainArgs *LookupResourceArgs) (*LookupResourceResult, error) {
		return LookupResource(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupResourceResultOutput, *LookupResourceResult](outputResult)
}

// A collection of arguments for invoking getResource.
type LookupResourceOutputArgs struct {
	// Identifier of the CloudFormation resource type. For example, `vpc-12345678`.
	Identifier pulumix.Input[string] `pulumi:"identifier"`
	// ARN of the IAM Role to assume for operations.
	RoleArn pulumix.Input[*string] `pulumi:"roleArn"`
	// CloudFormation resource type name. For example, `AWS::EC2::VPC`.
	//
	// The following arguments are optional:
	TypeName pulumix.Input[string] `pulumi:"typeName"`
	// Identifier of the CloudFormation resource type version.
	TypeVersionId pulumix.Input[*string] `pulumi:"typeVersionId"`
}

func (args LookupResourceOutputArgs) ToOutput() pulumix.Output[*LookupResourceArgs] {
	allArgs := pulumix.All(
		args.Identifier.ToOutput(context.Background()).AsAny(),
		args.RoleArn.ToOutput(context.Background()).AsAny(),
		args.TypeName.ToOutput(context.Background()).AsAny(),
		args.TypeVersionId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupResourceArgs {
		return &LookupResourceArgs{
			Identifier:    resolvedArgs[0].(string),
			RoleArn:       resolvedArgs[1].(*string),
			TypeName:      resolvedArgs[2].(string),
			TypeVersionId: resolvedArgs[3].(*string),
		}
	})
}

type LookupResourceResultOutput struct{ *pulumi.OutputState }

func (LookupResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceResult)(nil)).Elem()
}

func (o LookupResourceResultOutput) ToOutput(context.Context) pulumix.Output[*LookupResourceResult] {
	return pulumix.Output[*LookupResourceResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupResourceResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupResourceResult](o, func(v *LookupResourceResult) string { return v.Id })
}

func (o LookupResourceResultOutput) Identifier() pulumix.Output[string] {
	return pulumix.Apply[*LookupResourceResult](o, func(v *LookupResourceResult) string { return v.Identifier })
}

func (o LookupResourceResultOutput) Properties() pulumix.Output[string] {
	return pulumix.Apply[*LookupResourceResult](o, func(v *LookupResourceResult) string { return v.Properties })
}

func (o LookupResourceResultOutput) RoleArn() pulumix.Output[*string] {
	return pulumix.Apply[*LookupResourceResult](o, func(v *LookupResourceResult) *string { return v.RoleArn })
}

func (o LookupResourceResultOutput) TypeName() pulumix.Output[string] {
	return pulumix.Apply[*LookupResourceResult](o, func(v *LookupResourceResult) string { return v.TypeName })
}

func (o LookupResourceResultOutput) TypeVersionId() pulumix.Output[*string] {
	return pulumix.Apply[*LookupResourceResult](o, func(v *LookupResourceResult) *string { return v.TypeVersionId })
}
