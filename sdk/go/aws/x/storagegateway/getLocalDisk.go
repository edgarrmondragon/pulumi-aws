// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieve information about a Storage Gateway local disk. The disk identifier is useful for adding the disk as a cache or upload buffer to a gateway.
func GetLocalDisk(ctx *pulumi.Context, args *GetLocalDiskArgs, opts ...pulumi.InvokeOption) (*GetLocalDiskResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLocalDiskResult
	err := ctx.Invoke("aws:storagegateway/getLocalDisk:getLocalDisk", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLocalDisk.
type GetLocalDiskArgs struct {
	// Device node of the local disk to retrieve. For example, `/dev/sdb`.
	DiskNode *string `pulumi:"diskNode"`
	// Device path of the local disk to retrieve. For example, `/dev/xvdb` or `/dev/nvme1n1`.
	DiskPath *string `pulumi:"diskPath"`
	// ARN of the gateway.
	GatewayArn string `pulumi:"gatewayArn"`
}

// A collection of values returned by getLocalDisk.
type GetLocalDiskResult struct {
	// Disk identifierE.g., `pci-0000:03:00.0-scsi-0:0:0:0`
	DiskId     string `pulumi:"diskId"`
	DiskNode   string `pulumi:"diskNode"`
	DiskPath   string `pulumi:"diskPath"`
	GatewayArn string `pulumi:"gatewayArn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetLocalDiskOutput(ctx *pulumi.Context, args GetLocalDiskOutputArgs, opts ...pulumi.InvokeOption) GetLocalDiskResultOutput {
	outputResult := pulumix.ApplyErr[*GetLocalDiskArgs](args.ToOutput(), func(plainArgs *GetLocalDiskArgs) (*GetLocalDiskResult, error) {
		return GetLocalDisk(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetLocalDiskResultOutput, *GetLocalDiskResult](outputResult)
}

// A collection of arguments for invoking getLocalDisk.
type GetLocalDiskOutputArgs struct {
	// Device node of the local disk to retrieve. For example, `/dev/sdb`.
	DiskNode pulumix.Input[*string] `pulumi:"diskNode"`
	// Device path of the local disk to retrieve. For example, `/dev/xvdb` or `/dev/nvme1n1`.
	DiskPath pulumix.Input[*string] `pulumi:"diskPath"`
	// ARN of the gateway.
	GatewayArn pulumix.Input[string] `pulumi:"gatewayArn"`
}

func (args GetLocalDiskOutputArgs) ToOutput() pulumix.Output[*GetLocalDiskArgs] {
	allArgs := pulumix.All(
		args.DiskNode.ToOutput(context.Background()).AsAny(),
		args.DiskPath.ToOutput(context.Background()).AsAny(),
		args.GatewayArn.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetLocalDiskArgs {
		return &GetLocalDiskArgs{
			DiskNode:   resolvedArgs[0].(*string),
			DiskPath:   resolvedArgs[1].(*string),
			GatewayArn: resolvedArgs[2].(string),
		}
	})
}

type GetLocalDiskResultOutput struct{ *pulumi.OutputState }

func (GetLocalDiskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalDiskResult)(nil)).Elem()
}

func (o GetLocalDiskResultOutput) ToOutput(context.Context) pulumix.Output[*GetLocalDiskResult] {
	return pulumix.Output[*GetLocalDiskResult]{
		OutputState: o.OutputState,
	}
}

func (o GetLocalDiskResultOutput) DiskId() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalDiskResult](o, func(v *GetLocalDiskResult) string { return v.DiskId })
}

func (o GetLocalDiskResultOutput) DiskNode() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalDiskResult](o, func(v *GetLocalDiskResult) string { return v.DiskNode })
}

func (o GetLocalDiskResultOutput) DiskPath() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalDiskResult](o, func(v *GetLocalDiskResult) string { return v.DiskPath })
}

func (o GetLocalDiskResultOutput) GatewayArn() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalDiskResult](o, func(v *GetLocalDiskResult) string { return v.GatewayArn })
}

func (o GetLocalDiskResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalDiskResult](o, func(v *GetLocalDiskResult) string { return v.Id })
}
