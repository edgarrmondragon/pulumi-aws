// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a WAF Regional Regex Match Set Resource
type RegexMatchSet struct {
	pulumi.CustomResourceState

	// The name or description of the Regex Match Set.
	Name pulumix.Output[string] `pulumi:"name"`
	// The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.
	RegexMatchTuples pulumix.GArrayOutput[RegexMatchSetRegexMatchTuple, RegexMatchSetRegexMatchTupleOutput] `pulumi:"regexMatchTuples"`
}

// NewRegexMatchSet registers a new resource with the given unique name, arguments, and options.
func NewRegexMatchSet(ctx *pulumi.Context,
	name string, args *RegexMatchSetArgs, opts ...pulumi.ResourceOption) (*RegexMatchSet, error) {
	if args == nil {
		args = &RegexMatchSetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RegexMatchSet
	err := ctx.RegisterResource("aws:wafregional/regexMatchSet:RegexMatchSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegexMatchSet gets an existing RegexMatchSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegexMatchSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegexMatchSetState, opts ...pulumi.ResourceOption) (*RegexMatchSet, error) {
	var resource RegexMatchSet
	err := ctx.ReadResource("aws:wafregional/regexMatchSet:RegexMatchSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegexMatchSet resources.
type regexMatchSetState struct {
	// The name or description of the Regex Match Set.
	Name *string `pulumi:"name"`
	// The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.
	RegexMatchTuples []RegexMatchSetRegexMatchTuple `pulumi:"regexMatchTuples"`
}

type RegexMatchSetState struct {
	// The name or description of the Regex Match Set.
	Name pulumix.Input[*string]
	// The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.
	RegexMatchTuples pulumix.Input[[]*RegexMatchSetRegexMatchTupleArgs]
}

func (RegexMatchSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*regexMatchSetState)(nil)).Elem()
}

type regexMatchSetArgs struct {
	// The name or description of the Regex Match Set.
	Name *string `pulumi:"name"`
	// The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.
	RegexMatchTuples []RegexMatchSetRegexMatchTuple `pulumi:"regexMatchTuples"`
}

// The set of arguments for constructing a RegexMatchSet resource.
type RegexMatchSetArgs struct {
	// The name or description of the Regex Match Set.
	Name pulumix.Input[*string]
	// The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.
	RegexMatchTuples pulumix.Input[[]*RegexMatchSetRegexMatchTupleArgs]
}

func (RegexMatchSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regexMatchSetArgs)(nil)).Elem()
}

type RegexMatchSetOutput struct{ *pulumi.OutputState }

func (RegexMatchSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexMatchSet)(nil)).Elem()
}

func (o RegexMatchSetOutput) ToRegexMatchSetOutput() RegexMatchSetOutput {
	return o
}

func (o RegexMatchSetOutput) ToRegexMatchSetOutputWithContext(ctx context.Context) RegexMatchSetOutput {
	return o
}

func (o RegexMatchSetOutput) ToOutput(ctx context.Context) pulumix.Output[RegexMatchSet] {
	return pulumix.Output[RegexMatchSet]{
		OutputState: o.OutputState,
	}
}

// The name or description of the Regex Match Set.
func (o RegexMatchSetOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[RegexMatchSet](o, func(v RegexMatchSet) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.
func (o RegexMatchSetOutput) RegexMatchTuples() pulumix.GArrayOutput[RegexMatchSetRegexMatchTuple, RegexMatchSetRegexMatchTupleOutput] {
	value := pulumix.Apply[RegexMatchSet](o, func(v RegexMatchSet) pulumix.GArrayOutput[RegexMatchSetRegexMatchTuple, RegexMatchSetRegexMatchTupleOutput] {
		return v.RegexMatchTuples
	})
	unwrapped := pulumix.Flatten[[]RegexMatchSetRegexMatchTuple, pulumix.GArrayOutput[RegexMatchSetRegexMatchTuple, RegexMatchSetRegexMatchTupleOutput]](value)
	return pulumix.GArrayOutput[RegexMatchSetRegexMatchTuple, RegexMatchSetRegexMatchTupleOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(RegexMatchSetOutput{})
}
