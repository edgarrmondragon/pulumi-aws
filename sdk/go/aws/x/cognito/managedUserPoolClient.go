// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use the `cognito.UserPoolClient` resource to manage a Cognito User Pool Client.
//
// **This resource is advanced** and has special caveats to consider before use. Please read this document completely before using the resource.
//
// Use the `cognito.ManagedUserPoolClient` resource to manage a Cognito User Pool Client that is automatically created by an AWS service. For instance, when [configuring an OpenSearch Domain to use Cognito authentication](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html), the OpenSearch service creates the User Pool Client during setup and removes it when it is no longer required. As a result, the `cognito.ManagedUserPoolClient` resource does not create or delete this resource, but instead assumes management of it.
//
// Use the `cognito.UserPoolClient` resource to manage Cognito User Pool Clients for normal use cases.
type ManagedUserPoolClient struct {
	pulumi.CustomResourceState

	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity pulumix.Output[int] `pulumi:"accessTokenValidity"`
	// List of allowed OAuth flows, including code, implicit, and client_credentials.
	AllowedOauthFlows pulumix.ArrayOutput[string] `pulumi:"allowedOauthFlows"`
	// Whether the client is allowed to use the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient pulumix.Output[bool] `pulumi:"allowedOauthFlowsUserPoolClient"`
	// List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin.
	AllowedOauthScopes pulumix.ArrayOutput[string] `pulumi:"allowedOauthScopes"`
	// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
	AnalyticsConfiguration pulumix.GPtrOutput[ManagedUserPoolClientAnalyticsConfiguration, ManagedUserPoolClientAnalyticsConfigurationOutput] `pulumi:"analyticsConfiguration"`
	// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `authSessionValidity` are between `3` and `15`, with a default value of `3`.
	AuthSessionValidity pulumix.Output[int] `pulumi:"authSessionValidity"`
	// List of allowed callback URLs for the identity providers.
	CallbackUrls pulumix.ArrayOutput[string] `pulumi:"callbackUrls"`
	// Client secret of the user pool client.
	ClientSecret pulumix.Output[string] `pulumi:"clientSecret"`
	// Default redirect URI and must be included in the list of callback URLs.
	DefaultRedirectUri pulumix.Output[string] `pulumi:"defaultRedirectUri"`
	// Enables the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData pulumix.Output[bool] `pulumi:"enablePropagateAdditionalUserContextData"`
	// Enables or disables token revocation.
	EnableTokenRevocation pulumix.Output[bool] `pulumi:"enableTokenRevocation"`
	// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
	ExplicitAuthFlows pulumix.ArrayOutput[string] `pulumi:"explicitAuthFlows"`
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity pulumix.Output[int] `pulumi:"idTokenValidity"`
	// List of allowed logout URLs for the identity providers.
	LogoutUrls pulumix.ArrayOutput[string] `pulumi:"logoutUrls"`
	// Name of the user pool client.
	Name pulumix.Output[string] `pulumi:"name"`
	// Regular expression that matches the name of the desired User Pool Client. It must only match one User Pool Client.
	NamePattern pulumix.Output[*string] `pulumi:"namePattern"`
	// String that matches the beginning of the name of the desired User Pool Client. It must match only one User Pool Client.
	//
	// The following arguments are optional:
	NamePrefix pulumix.Output[*string] `pulumi:"namePrefix"`
	// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
	PreventUserExistenceErrors pulumix.Output[string] `pulumi:"preventUserExistenceErrors"`
	// List of user pool attributes that the application client can read from.
	ReadAttributes pulumix.ArrayOutput[string] `pulumi:"readAttributes"`
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity pulumix.Output[int] `pulumi:"refreshTokenValidity"`
	// List of provider names for the identity providers that are supported on this client. It uses the `providerName` attribute of the `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders pulumix.ArrayOutput[string] `pulumi:"supportedIdentityProviders"`
	// Configuration block for representing the validity times in units. See details below. Detailed below.
	TokenValidityUnits pulumix.GPtrOutput[ManagedUserPoolClientTokenValidityUnits, ManagedUserPoolClientTokenValidityUnitsOutput] `pulumi:"tokenValidityUnits"`
	// User pool that the client belongs to.
	UserPoolId pulumix.Output[string] `pulumi:"userPoolId"`
	// List of user pool attributes that the application client can write to.
	WriteAttributes pulumix.ArrayOutput[string] `pulumi:"writeAttributes"`
}

// NewManagedUserPoolClient registers a new resource with the given unique name, arguments, and options.
func NewManagedUserPoolClient(ctx *pulumi.Context,
	name string, args *ManagedUserPoolClientArgs, opts ...pulumi.ResourceOption) (*ManagedUserPoolClient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UserPoolId == nil {
		return nil, errors.New("invalid value for required argument 'UserPoolId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedUserPoolClient
	err := ctx.RegisterResource("aws:cognito/managedUserPoolClient:ManagedUserPoolClient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedUserPoolClient gets an existing ManagedUserPoolClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedUserPoolClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedUserPoolClientState, opts ...pulumi.ResourceOption) (*ManagedUserPoolClient, error) {
	var resource ManagedUserPoolClient
	err := ctx.ReadResource("aws:cognito/managedUserPoolClient:ManagedUserPoolClient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedUserPoolClient resources.
type managedUserPoolClientState struct {
	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity *int `pulumi:"accessTokenValidity"`
	// List of allowed OAuth flows, including code, implicit, and client_credentials.
	AllowedOauthFlows []string `pulumi:"allowedOauthFlows"`
	// Whether the client is allowed to use the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient *bool `pulumi:"allowedOauthFlowsUserPoolClient"`
	// List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin.
	AllowedOauthScopes []string `pulumi:"allowedOauthScopes"`
	// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
	AnalyticsConfiguration *ManagedUserPoolClientAnalyticsConfiguration `pulumi:"analyticsConfiguration"`
	// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `authSessionValidity` are between `3` and `15`, with a default value of `3`.
	AuthSessionValidity *int `pulumi:"authSessionValidity"`
	// List of allowed callback URLs for the identity providers.
	CallbackUrls []string `pulumi:"callbackUrls"`
	// Client secret of the user pool client.
	ClientSecret *string `pulumi:"clientSecret"`
	// Default redirect URI and must be included in the list of callback URLs.
	DefaultRedirectUri *string `pulumi:"defaultRedirectUri"`
	// Enables the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData *bool `pulumi:"enablePropagateAdditionalUserContextData"`
	// Enables or disables token revocation.
	EnableTokenRevocation *bool `pulumi:"enableTokenRevocation"`
	// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
	ExplicitAuthFlows []string `pulumi:"explicitAuthFlows"`
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity *int `pulumi:"idTokenValidity"`
	// List of allowed logout URLs for the identity providers.
	LogoutUrls []string `pulumi:"logoutUrls"`
	// Name of the user pool client.
	Name *string `pulumi:"name"`
	// Regular expression that matches the name of the desired User Pool Client. It must only match one User Pool Client.
	NamePattern *string `pulumi:"namePattern"`
	// String that matches the beginning of the name of the desired User Pool Client. It must match only one User Pool Client.
	//
	// The following arguments are optional:
	NamePrefix *string `pulumi:"namePrefix"`
	// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
	PreventUserExistenceErrors *string `pulumi:"preventUserExistenceErrors"`
	// List of user pool attributes that the application client can read from.
	ReadAttributes []string `pulumi:"readAttributes"`
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity *int `pulumi:"refreshTokenValidity"`
	// List of provider names for the identity providers that are supported on this client. It uses the `providerName` attribute of the `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders []string `pulumi:"supportedIdentityProviders"`
	// Configuration block for representing the validity times in units. See details below. Detailed below.
	TokenValidityUnits *ManagedUserPoolClientTokenValidityUnits `pulumi:"tokenValidityUnits"`
	// User pool that the client belongs to.
	UserPoolId *string `pulumi:"userPoolId"`
	// List of user pool attributes that the application client can write to.
	WriteAttributes []string `pulumi:"writeAttributes"`
}

type ManagedUserPoolClientState struct {
	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity pulumix.Input[*int]
	// List of allowed OAuth flows, including code, implicit, and client_credentials.
	AllowedOauthFlows pulumix.Input[[]string]
	// Whether the client is allowed to use the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient pulumix.Input[*bool]
	// List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin.
	AllowedOauthScopes pulumix.Input[[]string]
	// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
	AnalyticsConfiguration pulumix.Input[*ManagedUserPoolClientAnalyticsConfigurationArgs]
	// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `authSessionValidity` are between `3` and `15`, with a default value of `3`.
	AuthSessionValidity pulumix.Input[*int]
	// List of allowed callback URLs for the identity providers.
	CallbackUrls pulumix.Input[[]string]
	// Client secret of the user pool client.
	ClientSecret pulumix.Input[*string]
	// Default redirect URI and must be included in the list of callback URLs.
	DefaultRedirectUri pulumix.Input[*string]
	// Enables the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData pulumix.Input[*bool]
	// Enables or disables token revocation.
	EnableTokenRevocation pulumix.Input[*bool]
	// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
	ExplicitAuthFlows pulumix.Input[[]string]
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity pulumix.Input[*int]
	// List of allowed logout URLs for the identity providers.
	LogoutUrls pulumix.Input[[]string]
	// Name of the user pool client.
	Name pulumix.Input[*string]
	// Regular expression that matches the name of the desired User Pool Client. It must only match one User Pool Client.
	NamePattern pulumix.Input[*string]
	// String that matches the beginning of the name of the desired User Pool Client. It must match only one User Pool Client.
	//
	// The following arguments are optional:
	NamePrefix pulumix.Input[*string]
	// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
	PreventUserExistenceErrors pulumix.Input[*string]
	// List of user pool attributes that the application client can read from.
	ReadAttributes pulumix.Input[[]string]
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity pulumix.Input[*int]
	// List of provider names for the identity providers that are supported on this client. It uses the `providerName` attribute of the `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders pulumix.Input[[]string]
	// Configuration block for representing the validity times in units. See details below. Detailed below.
	TokenValidityUnits pulumix.Input[*ManagedUserPoolClientTokenValidityUnitsArgs]
	// User pool that the client belongs to.
	UserPoolId pulumix.Input[*string]
	// List of user pool attributes that the application client can write to.
	WriteAttributes pulumix.Input[[]string]
}

func (ManagedUserPoolClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedUserPoolClientState)(nil)).Elem()
}

type managedUserPoolClientArgs struct {
	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity *int `pulumi:"accessTokenValidity"`
	// List of allowed OAuth flows, including code, implicit, and client_credentials.
	AllowedOauthFlows []string `pulumi:"allowedOauthFlows"`
	// Whether the client is allowed to use the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient *bool `pulumi:"allowedOauthFlowsUserPoolClient"`
	// List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin.
	AllowedOauthScopes []string `pulumi:"allowedOauthScopes"`
	// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
	AnalyticsConfiguration *ManagedUserPoolClientAnalyticsConfiguration `pulumi:"analyticsConfiguration"`
	// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `authSessionValidity` are between `3` and `15`, with a default value of `3`.
	AuthSessionValidity *int `pulumi:"authSessionValidity"`
	// List of allowed callback URLs for the identity providers.
	CallbackUrls []string `pulumi:"callbackUrls"`
	// Default redirect URI and must be included in the list of callback URLs.
	DefaultRedirectUri *string `pulumi:"defaultRedirectUri"`
	// Enables the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData *bool `pulumi:"enablePropagateAdditionalUserContextData"`
	// Enables or disables token revocation.
	EnableTokenRevocation *bool `pulumi:"enableTokenRevocation"`
	// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
	ExplicitAuthFlows []string `pulumi:"explicitAuthFlows"`
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity *int `pulumi:"idTokenValidity"`
	// List of allowed logout URLs for the identity providers.
	LogoutUrls []string `pulumi:"logoutUrls"`
	// Regular expression that matches the name of the desired User Pool Client. It must only match one User Pool Client.
	NamePattern *string `pulumi:"namePattern"`
	// String that matches the beginning of the name of the desired User Pool Client. It must match only one User Pool Client.
	//
	// The following arguments are optional:
	NamePrefix *string `pulumi:"namePrefix"`
	// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
	PreventUserExistenceErrors *string `pulumi:"preventUserExistenceErrors"`
	// List of user pool attributes that the application client can read from.
	ReadAttributes []string `pulumi:"readAttributes"`
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity *int `pulumi:"refreshTokenValidity"`
	// List of provider names for the identity providers that are supported on this client. It uses the `providerName` attribute of the `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders []string `pulumi:"supportedIdentityProviders"`
	// Configuration block for representing the validity times in units. See details below. Detailed below.
	TokenValidityUnits *ManagedUserPoolClientTokenValidityUnits `pulumi:"tokenValidityUnits"`
	// User pool that the client belongs to.
	UserPoolId string `pulumi:"userPoolId"`
	// List of user pool attributes that the application client can write to.
	WriteAttributes []string `pulumi:"writeAttributes"`
}

// The set of arguments for constructing a ManagedUserPoolClient resource.
type ManagedUserPoolClientArgs struct {
	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity pulumix.Input[*int]
	// List of allowed OAuth flows, including code, implicit, and client_credentials.
	AllowedOauthFlows pulumix.Input[[]string]
	// Whether the client is allowed to use the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient pulumix.Input[*bool]
	// List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin.
	AllowedOauthScopes pulumix.Input[[]string]
	// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
	AnalyticsConfiguration pulumix.Input[*ManagedUserPoolClientAnalyticsConfigurationArgs]
	// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `authSessionValidity` are between `3` and `15`, with a default value of `3`.
	AuthSessionValidity pulumix.Input[*int]
	// List of allowed callback URLs for the identity providers.
	CallbackUrls pulumix.Input[[]string]
	// Default redirect URI and must be included in the list of callback URLs.
	DefaultRedirectUri pulumix.Input[*string]
	// Enables the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData pulumix.Input[*bool]
	// Enables or disables token revocation.
	EnableTokenRevocation pulumix.Input[*bool]
	// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
	ExplicitAuthFlows pulumix.Input[[]string]
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity pulumix.Input[*int]
	// List of allowed logout URLs for the identity providers.
	LogoutUrls pulumix.Input[[]string]
	// Regular expression that matches the name of the desired User Pool Client. It must only match one User Pool Client.
	NamePattern pulumix.Input[*string]
	// String that matches the beginning of the name of the desired User Pool Client. It must match only one User Pool Client.
	//
	// The following arguments are optional:
	NamePrefix pulumix.Input[*string]
	// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
	PreventUserExistenceErrors pulumix.Input[*string]
	// List of user pool attributes that the application client can read from.
	ReadAttributes pulumix.Input[[]string]
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity pulumix.Input[*int]
	// List of provider names for the identity providers that are supported on this client. It uses the `providerName` attribute of the `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders pulumix.Input[[]string]
	// Configuration block for representing the validity times in units. See details below. Detailed below.
	TokenValidityUnits pulumix.Input[*ManagedUserPoolClientTokenValidityUnitsArgs]
	// User pool that the client belongs to.
	UserPoolId pulumix.Input[string]
	// List of user pool attributes that the application client can write to.
	WriteAttributes pulumix.Input[[]string]
}

func (ManagedUserPoolClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedUserPoolClientArgs)(nil)).Elem()
}

type ManagedUserPoolClientOutput struct{ *pulumi.OutputState }

func (ManagedUserPoolClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedUserPoolClient)(nil)).Elem()
}

func (o ManagedUserPoolClientOutput) ToManagedUserPoolClientOutput() ManagedUserPoolClientOutput {
	return o
}

func (o ManagedUserPoolClientOutput) ToManagedUserPoolClientOutputWithContext(ctx context.Context) ManagedUserPoolClientOutput {
	return o
}

func (o ManagedUserPoolClientOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedUserPoolClient] {
	return pulumix.Output[ManagedUserPoolClient]{
		OutputState: o.OutputState,
	}
}

// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
func (o ManagedUserPoolClientOutput) AccessTokenValidity() pulumix.Output[int] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[int] { return v.AccessTokenValidity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// List of allowed OAuth flows, including code, implicit, and client_credentials.
func (o ManagedUserPoolClientOutput) AllowedOauthFlows() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.ArrayOutput[string] { return v.AllowedOauthFlows })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Whether the client is allowed to use the OAuth protocol when interacting with Cognito user pools.
func (o ManagedUserPoolClientOutput) AllowedOauthFlowsUserPoolClient() pulumix.Output[bool] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[bool] { return v.AllowedOauthFlowsUserPoolClient })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin.
func (o ManagedUserPoolClientOutput) AllowedOauthScopes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.ArrayOutput[string] { return v.AllowedOauthScopes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
func (o ManagedUserPoolClientOutput) AnalyticsConfiguration() pulumix.GPtrOutput[ManagedUserPoolClientAnalyticsConfiguration, ManagedUserPoolClientAnalyticsConfigurationOutput] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.GPtrOutput[ManagedUserPoolClientAnalyticsConfiguration, ManagedUserPoolClientAnalyticsConfigurationOutput] {
		return v.AnalyticsConfiguration
	})
	unwrapped := pulumix.Flatten[*ManagedUserPoolClientAnalyticsConfiguration, pulumix.GPtrOutput[ManagedUserPoolClientAnalyticsConfiguration, ManagedUserPoolClientAnalyticsConfigurationOutput]](value)
	return pulumix.GPtrOutput[ManagedUserPoolClientAnalyticsConfiguration, ManagedUserPoolClientAnalyticsConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `authSessionValidity` are between `3` and `15`, with a default value of `3`.
func (o ManagedUserPoolClientOutput) AuthSessionValidity() pulumix.Output[int] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[int] { return v.AuthSessionValidity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// List of allowed callback URLs for the identity providers.
func (o ManagedUserPoolClientOutput) CallbackUrls() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.ArrayOutput[string] { return v.CallbackUrls })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Client secret of the user pool client.
func (o ManagedUserPoolClientOutput) ClientSecret() pulumix.Output[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[string] { return v.ClientSecret })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Default redirect URI and must be included in the list of callback URLs.
func (o ManagedUserPoolClientOutput) DefaultRedirectUri() pulumix.Output[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[string] { return v.DefaultRedirectUri })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Enables the propagation of additional user context data.
func (o ManagedUserPoolClientOutput) EnablePropagateAdditionalUserContextData() pulumix.Output[bool] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[bool] { return v.EnablePropagateAdditionalUserContextData })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Enables or disables token revocation.
func (o ManagedUserPoolClientOutput) EnableTokenRevocation() pulumix.Output[bool] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[bool] { return v.EnableTokenRevocation })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
func (o ManagedUserPoolClientOutput) ExplicitAuthFlows() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.ArrayOutput[string] { return v.ExplicitAuthFlows })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
func (o ManagedUserPoolClientOutput) IdTokenValidity() pulumix.Output[int] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[int] { return v.IdTokenValidity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// List of allowed logout URLs for the identity providers.
func (o ManagedUserPoolClientOutput) LogoutUrls() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.ArrayOutput[string] { return v.LogoutUrls })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Name of the user pool client.
func (o ManagedUserPoolClientOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Regular expression that matches the name of the desired User Pool Client. It must only match one User Pool Client.
func (o ManagedUserPoolClientOutput) NamePattern() pulumix.Output[*string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[*string] { return v.NamePattern })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// String that matches the beginning of the name of the desired User Pool Client. It must match only one User Pool Client.
//
// The following arguments are optional:
func (o ManagedUserPoolClientOutput) NamePrefix() pulumix.Output[*string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[*string] { return v.NamePrefix })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
func (o ManagedUserPoolClientOutput) PreventUserExistenceErrors() pulumix.Output[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[string] { return v.PreventUserExistenceErrors })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of user pool attributes that the application client can read from.
func (o ManagedUserPoolClientOutput) ReadAttributes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.ArrayOutput[string] { return v.ReadAttributes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
func (o ManagedUserPoolClientOutput) RefreshTokenValidity() pulumix.Output[int] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[int] { return v.RefreshTokenValidity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// List of provider names for the identity providers that are supported on this client. It uses the `providerName` attribute of the `cognito.IdentityProvider` resource(s), or the equivalent string(s).
func (o ManagedUserPoolClientOutput) SupportedIdentityProviders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.ArrayOutput[string] { return v.SupportedIdentityProviders })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block for representing the validity times in units. See details below. Detailed below.
func (o ManagedUserPoolClientOutput) TokenValidityUnits() pulumix.GPtrOutput[ManagedUserPoolClientTokenValidityUnits, ManagedUserPoolClientTokenValidityUnitsOutput] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.GPtrOutput[ManagedUserPoolClientTokenValidityUnits, ManagedUserPoolClientTokenValidityUnitsOutput] {
		return v.TokenValidityUnits
	})
	unwrapped := pulumix.Flatten[*ManagedUserPoolClientTokenValidityUnits, pulumix.GPtrOutput[ManagedUserPoolClientTokenValidityUnits, ManagedUserPoolClientTokenValidityUnitsOutput]](value)
	return pulumix.GPtrOutput[ManagedUserPoolClientTokenValidityUnits, ManagedUserPoolClientTokenValidityUnitsOutput]{OutputState: unwrapped.OutputState}
}

// User pool that the client belongs to.
func (o ManagedUserPoolClientOutput) UserPoolId() pulumix.Output[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.Output[string] { return v.UserPoolId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of user pool attributes that the application client can write to.
func (o ManagedUserPoolClientOutput) WriteAttributes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ManagedUserPoolClient](o, func(v ManagedUserPoolClient) pulumix.ArrayOutput[string] { return v.WriteAttributes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ManagedUserPoolClientOutput{})
}
