// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package neptune

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Neptune Cluster Endpoint Resource.
type ClusterEndpoint struct {
	pulumi.CustomResourceState

	// The Neptune Cluster Endpoint Amazon Resource Name (ARN).
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The identifier of the endpoint.
	ClusterEndpointIdentifier pulumix.Output[string] `pulumi:"clusterEndpointIdentifier"`
	// The DB cluster identifier of the DB cluster associated with the endpoint.
	ClusterIdentifier pulumix.Output[string] `pulumi:"clusterIdentifier"`
	// The DNS address of the endpoint.
	Endpoint pulumix.Output[string] `pulumi:"endpoint"`
	// The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
	EndpointType pulumix.Output[string] `pulumi:"endpointType"`
	// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
	ExcludedMembers pulumix.ArrayOutput[string] `pulumi:"excludedMembers"`
	// List of DB instance identifiers that are part of the custom endpoint group.
	StaticMembers pulumix.ArrayOutput[string] `pulumi:"staticMembers"`
	// A map of tags to assign to the Neptune cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewClusterEndpoint registers a new resource with the given unique name, arguments, and options.
func NewClusterEndpoint(ctx *pulumi.Context,
	name string, args *ClusterEndpointArgs, opts ...pulumi.ResourceOption) (*ClusterEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterEndpointIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ClusterEndpointIdentifier'")
	}
	if args.ClusterIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ClusterIdentifier'")
	}
	if args.EndpointType == nil {
		return nil, errors.New("invalid value for required argument 'EndpointType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClusterEndpoint
	err := ctx.RegisterResource("aws:neptune/clusterEndpoint:ClusterEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterEndpoint gets an existing ClusterEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterEndpointState, opts ...pulumi.ResourceOption) (*ClusterEndpoint, error) {
	var resource ClusterEndpoint
	err := ctx.ReadResource("aws:neptune/clusterEndpoint:ClusterEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterEndpoint resources.
type clusterEndpointState struct {
	// The Neptune Cluster Endpoint Amazon Resource Name (ARN).
	Arn *string `pulumi:"arn"`
	// The identifier of the endpoint.
	ClusterEndpointIdentifier *string `pulumi:"clusterEndpointIdentifier"`
	// The DB cluster identifier of the DB cluster associated with the endpoint.
	ClusterIdentifier *string `pulumi:"clusterIdentifier"`
	// The DNS address of the endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
	EndpointType *string `pulumi:"endpointType"`
	// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
	ExcludedMembers []string `pulumi:"excludedMembers"`
	// List of DB instance identifiers that are part of the custom endpoint group.
	StaticMembers []string `pulumi:"staticMembers"`
	// A map of tags to assign to the Neptune cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ClusterEndpointState struct {
	// The Neptune Cluster Endpoint Amazon Resource Name (ARN).
	Arn pulumix.Input[*string]
	// The identifier of the endpoint.
	ClusterEndpointIdentifier pulumix.Input[*string]
	// The DB cluster identifier of the DB cluster associated with the endpoint.
	ClusterIdentifier pulumix.Input[*string]
	// The DNS address of the endpoint.
	Endpoint pulumix.Input[*string]
	// The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
	EndpointType pulumix.Input[*string]
	// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
	ExcludedMembers pulumix.Input[[]string]
	// List of DB instance identifiers that are part of the custom endpoint group.
	StaticMembers pulumix.Input[[]string]
	// A map of tags to assign to the Neptune cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ClusterEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterEndpointState)(nil)).Elem()
}

type clusterEndpointArgs struct {
	// The identifier of the endpoint.
	ClusterEndpointIdentifier string `pulumi:"clusterEndpointIdentifier"`
	// The DB cluster identifier of the DB cluster associated with the endpoint.
	ClusterIdentifier string `pulumi:"clusterIdentifier"`
	// The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
	EndpointType string `pulumi:"endpointType"`
	// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
	ExcludedMembers []string `pulumi:"excludedMembers"`
	// List of DB instance identifiers that are part of the custom endpoint group.
	StaticMembers []string `pulumi:"staticMembers"`
	// A map of tags to assign to the Neptune cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ClusterEndpoint resource.
type ClusterEndpointArgs struct {
	// The identifier of the endpoint.
	ClusterEndpointIdentifier pulumix.Input[string]
	// The DB cluster identifier of the DB cluster associated with the endpoint.
	ClusterIdentifier pulumix.Input[string]
	// The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
	EndpointType pulumix.Input[string]
	// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
	ExcludedMembers pulumix.Input[[]string]
	// List of DB instance identifiers that are part of the custom endpoint group.
	StaticMembers pulumix.Input[[]string]
	// A map of tags to assign to the Neptune cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterEndpointArgs)(nil)).Elem()
}

type ClusterEndpointOutput struct{ *pulumi.OutputState }

func (ClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointOutput) ToClusterEndpointOutput() ClusterEndpointOutput {
	return o
}

func (o ClusterEndpointOutput) ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput {
	return o
}

func (o ClusterEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterEndpoint] {
	return pulumix.Output[ClusterEndpoint]{
		OutputState: o.OutputState,
	}
}

// The Neptune Cluster Endpoint Amazon Resource Name (ARN).
func (o ClusterEndpointOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ClusterEndpoint](o, func(v ClusterEndpoint) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier of the endpoint.
func (o ClusterEndpointOutput) ClusterEndpointIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[ClusterEndpoint](o, func(v ClusterEndpoint) pulumix.Output[string] { return v.ClusterEndpointIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The DB cluster identifier of the DB cluster associated with the endpoint.
func (o ClusterEndpointOutput) ClusterIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[ClusterEndpoint](o, func(v ClusterEndpoint) pulumix.Output[string] { return v.ClusterIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The DNS address of the endpoint.
func (o ClusterEndpointOutput) Endpoint() pulumix.Output[string] {
	value := pulumix.Apply[ClusterEndpoint](o, func(v ClusterEndpoint) pulumix.Output[string] { return v.Endpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
func (o ClusterEndpointOutput) EndpointType() pulumix.Output[string] {
	value := pulumix.Apply[ClusterEndpoint](o, func(v ClusterEndpoint) pulumix.Output[string] { return v.EndpointType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
func (o ClusterEndpointOutput) ExcludedMembers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ClusterEndpoint](o, func(v ClusterEndpoint) pulumix.ArrayOutput[string] { return v.ExcludedMembers })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// List of DB instance identifiers that are part of the custom endpoint group.
func (o ClusterEndpointOutput) StaticMembers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ClusterEndpoint](o, func(v ClusterEndpoint) pulumix.ArrayOutput[string] { return v.StaticMembers })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags to assign to the Neptune cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ClusterEndpointOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ClusterEndpoint](o, func(v ClusterEndpoint) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ClusterEndpointOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ClusterEndpoint](o, func(v ClusterEndpoint) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ClusterEndpointOutput{})
}
