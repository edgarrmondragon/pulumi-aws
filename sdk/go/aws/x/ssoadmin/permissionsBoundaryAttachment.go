// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssoadmin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Attaches a permissions boundary policy to a Single Sign-On (SSO) Permission Set resource.
//
// > **NOTE:** A permission set can have at most one permissions boundary attached; using more than one `ssoadmin.PermissionsBoundaryAttachment` references the same permission set will show a permanent difference.
type PermissionsBoundaryAttachment struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn pulumix.Output[string] `pulumi:"instanceArn"`
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn pulumix.Output[string] `pulumi:"permissionSetArn"`
	// The permissions boundary policy. See below.
	PermissionsBoundary pulumix.GPtrOutput[PermissionsBoundaryAttachmentPermissionsBoundary, PermissionsBoundaryAttachmentPermissionsBoundaryOutput] `pulumi:"permissionsBoundary"`
}

// NewPermissionsBoundaryAttachment registers a new resource with the given unique name, arguments, and options.
func NewPermissionsBoundaryAttachment(ctx *pulumi.Context,
	name string, args *PermissionsBoundaryAttachmentArgs, opts ...pulumi.ResourceOption) (*PermissionsBoundaryAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	if args.PermissionSetArn == nil {
		return nil, errors.New("invalid value for required argument 'PermissionSetArn'")
	}
	if args.PermissionsBoundary == nil {
		return nil, errors.New("invalid value for required argument 'PermissionsBoundary'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PermissionsBoundaryAttachment
	err := ctx.RegisterResource("aws:ssoadmin/permissionsBoundaryAttachment:PermissionsBoundaryAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPermissionsBoundaryAttachment gets an existing PermissionsBoundaryAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPermissionsBoundaryAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PermissionsBoundaryAttachmentState, opts ...pulumi.ResourceOption) (*PermissionsBoundaryAttachment, error) {
	var resource PermissionsBoundaryAttachment
	err := ctx.ReadResource("aws:ssoadmin/permissionsBoundaryAttachment:PermissionsBoundaryAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PermissionsBoundaryAttachment resources.
type permissionsBoundaryAttachmentState struct {
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn *string `pulumi:"instanceArn"`
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn *string `pulumi:"permissionSetArn"`
	// The permissions boundary policy. See below.
	PermissionsBoundary *PermissionsBoundaryAttachmentPermissionsBoundary `pulumi:"permissionsBoundary"`
}

type PermissionsBoundaryAttachmentState struct {
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn pulumix.Input[*string]
	// The permissions boundary policy. See below.
	PermissionsBoundary pulumix.Input[*PermissionsBoundaryAttachmentPermissionsBoundaryArgs]
}

func (PermissionsBoundaryAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionsBoundaryAttachmentState)(nil)).Elem()
}

type permissionsBoundaryAttachmentArgs struct {
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn string `pulumi:"instanceArn"`
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn string `pulumi:"permissionSetArn"`
	// The permissions boundary policy. See below.
	PermissionsBoundary PermissionsBoundaryAttachmentPermissionsBoundary `pulumi:"permissionsBoundary"`
}

// The set of arguments for constructing a PermissionsBoundaryAttachment resource.
type PermissionsBoundaryAttachmentArgs struct {
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn pulumix.Input[string]
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn pulumix.Input[string]
	// The permissions boundary policy. See below.
	PermissionsBoundary pulumix.Input[*PermissionsBoundaryAttachmentPermissionsBoundaryArgs]
}

func (PermissionsBoundaryAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionsBoundaryAttachmentArgs)(nil)).Elem()
}

type PermissionsBoundaryAttachmentOutput struct{ *pulumi.OutputState }

func (PermissionsBoundaryAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsBoundaryAttachment)(nil)).Elem()
}

func (o PermissionsBoundaryAttachmentOutput) ToPermissionsBoundaryAttachmentOutput() PermissionsBoundaryAttachmentOutput {
	return o
}

func (o PermissionsBoundaryAttachmentOutput) ToPermissionsBoundaryAttachmentOutputWithContext(ctx context.Context) PermissionsBoundaryAttachmentOutput {
	return o
}

func (o PermissionsBoundaryAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[PermissionsBoundaryAttachment] {
	return pulumix.Output[PermissionsBoundaryAttachment]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
func (o PermissionsBoundaryAttachmentOutput) InstanceArn() pulumix.Output[string] {
	value := pulumix.Apply[PermissionsBoundaryAttachment](o, func(v PermissionsBoundaryAttachment) pulumix.Output[string] { return v.InstanceArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the Permission Set.
func (o PermissionsBoundaryAttachmentOutput) PermissionSetArn() pulumix.Output[string] {
	value := pulumix.Apply[PermissionsBoundaryAttachment](o, func(v PermissionsBoundaryAttachment) pulumix.Output[string] { return v.PermissionSetArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The permissions boundary policy. See below.
func (o PermissionsBoundaryAttachmentOutput) PermissionsBoundary() pulumix.GPtrOutput[PermissionsBoundaryAttachmentPermissionsBoundary, PermissionsBoundaryAttachmentPermissionsBoundaryOutput] {
	value := pulumix.Apply[PermissionsBoundaryAttachment](o, func(v PermissionsBoundaryAttachment) pulumix.GPtrOutput[PermissionsBoundaryAttachmentPermissionsBoundary, PermissionsBoundaryAttachmentPermissionsBoundaryOutput] {
		return v.PermissionsBoundary
	})
	unwrapped := pulumix.Flatten[*PermissionsBoundaryAttachmentPermissionsBoundary, pulumix.GPtrOutput[PermissionsBoundaryAttachmentPermissionsBoundary, PermissionsBoundaryAttachmentPermissionsBoundaryOutput]](value)
	return pulumix.GPtrOutput[PermissionsBoundaryAttachmentPermissionsBoundary, PermissionsBoundaryAttachmentPermissionsBoundaryOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(PermissionsBoundaryAttachmentOutput{})
}
