// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Managed Grafana workspace resource.
type Workspace struct {
	pulumi.CustomResourceState

	// The type of account access for the workspace. Valid values are `CURRENT_ACCOUNT` and `ORGANIZATION`. If `ORGANIZATION` is specified, then `organizationalUnits` must also be present.
	AccountAccessType pulumix.Output[string] `pulumi:"accountAccessType"`
	// The Amazon Resource Name (ARN) of the Grafana workspace.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The authentication providers for the workspace. Valid values are `AWS_SSO`, `SAML`, or both.
	AuthenticationProviders pulumix.ArrayOutput[string] `pulumi:"authenticationProviders"`
	// The configuration string for the workspace that you create. For more information about the format and configuration options available, see [Working in your Grafana workspace](https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html).
	Configuration pulumix.Output[string] `pulumi:"configuration"`
	// The data sources for the workspace. Valid values are `AMAZON_OPENSEARCH_SERVICE`, `ATHENA`, `CLOUDWATCH`, `PROMETHEUS`, `REDSHIFT`, `SITEWISE`, `TIMESTREAM`, `XRAY`
	DataSources pulumix.ArrayOutput[string] `pulumi:"dataSources"`
	// The workspace description.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The endpoint of the Grafana workspace.
	Endpoint pulumix.Output[string] `pulumi:"endpoint"`
	// Specifies the version of Grafana to support in the new workspace. Supported values are `8.4` and `9.4`. If not specified, defaults to `8.4`.
	GrafanaVersion pulumix.Output[string] `pulumi:"grafanaVersion"`
	// The Grafana workspace name.
	Name pulumix.Output[string] `pulumi:"name"`
	// Configuration for network access to your workspace.See Network Access Control below.
	NetworkAccessControl pulumix.GPtrOutput[WorkspaceNetworkAccessControl, WorkspaceNetworkAccessControlOutput] `pulumi:"networkAccessControl"`
	// The notification destinations. If a data source is specified here, Amazon Managed Grafana will create IAM roles and permissions needed to use these destinations. Must be set to `SNS`.
	NotificationDestinations pulumix.ArrayOutput[string] `pulumi:"notificationDestinations"`
	// The role name that the workspace uses to access resources through Amazon Organizations.
	OrganizationRoleName pulumix.Output[*string] `pulumi:"organizationRoleName"`
	// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
	OrganizationalUnits pulumix.ArrayOutput[string] `pulumi:"organizationalUnits"`
	// The permission type of the workspace. If `SERVICE_MANAGED` is specified, the IAM roles and IAM policy attachments are generated automatically. If `CUSTOMER_MANAGED` is specified, the IAM roles and IAM policy attachments will not be created.
	//
	// The following arguments are optional:
	PermissionType pulumix.Output[string] `pulumi:"permissionType"`
	// The IAM role ARN that the workspace assumes.
	RoleArn                 pulumix.Output[*string] `pulumi:"roleArn"`
	SamlConfigurationStatus pulumix.Output[string]  `pulumi:"samlConfigurationStatus"`
	// The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
	StackSetName pulumix.Output[*string] `pulumi:"stackSetName"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to. See VPC Configuration below.
	VpcConfiguration pulumix.GPtrOutput[WorkspaceVpcConfiguration, WorkspaceVpcConfigurationOutput] `pulumi:"vpcConfiguration"`
}

// NewWorkspace registers a new resource with the given unique name, arguments, and options.
func NewWorkspace(ctx *pulumi.Context,
	name string, args *WorkspaceArgs, opts ...pulumi.ResourceOption) (*Workspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountAccessType == nil {
		return nil, errors.New("invalid value for required argument 'AccountAccessType'")
	}
	if args.AuthenticationProviders == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationProviders'")
	}
	if args.PermissionType == nil {
		return nil, errors.New("invalid value for required argument 'PermissionType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Workspace
	err := ctx.RegisterResource("aws:grafana/workspace:Workspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspace gets an existing Workspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceState, opts ...pulumi.ResourceOption) (*Workspace, error) {
	var resource Workspace
	err := ctx.ReadResource("aws:grafana/workspace:Workspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workspace resources.
type workspaceState struct {
	// The type of account access for the workspace. Valid values are `CURRENT_ACCOUNT` and `ORGANIZATION`. If `ORGANIZATION` is specified, then `organizationalUnits` must also be present.
	AccountAccessType *string `pulumi:"accountAccessType"`
	// The Amazon Resource Name (ARN) of the Grafana workspace.
	Arn *string `pulumi:"arn"`
	// The authentication providers for the workspace. Valid values are `AWS_SSO`, `SAML`, or both.
	AuthenticationProviders []string `pulumi:"authenticationProviders"`
	// The configuration string for the workspace that you create. For more information about the format and configuration options available, see [Working in your Grafana workspace](https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html).
	Configuration *string `pulumi:"configuration"`
	// The data sources for the workspace. Valid values are `AMAZON_OPENSEARCH_SERVICE`, `ATHENA`, `CLOUDWATCH`, `PROMETHEUS`, `REDSHIFT`, `SITEWISE`, `TIMESTREAM`, `XRAY`
	DataSources []string `pulumi:"dataSources"`
	// The workspace description.
	Description *string `pulumi:"description"`
	// The endpoint of the Grafana workspace.
	Endpoint *string `pulumi:"endpoint"`
	// Specifies the version of Grafana to support in the new workspace. Supported values are `8.4` and `9.4`. If not specified, defaults to `8.4`.
	GrafanaVersion *string `pulumi:"grafanaVersion"`
	// The Grafana workspace name.
	Name *string `pulumi:"name"`
	// Configuration for network access to your workspace.See Network Access Control below.
	NetworkAccessControl *WorkspaceNetworkAccessControl `pulumi:"networkAccessControl"`
	// The notification destinations. If a data source is specified here, Amazon Managed Grafana will create IAM roles and permissions needed to use these destinations. Must be set to `SNS`.
	NotificationDestinations []string `pulumi:"notificationDestinations"`
	// The role name that the workspace uses to access resources through Amazon Organizations.
	OrganizationRoleName *string `pulumi:"organizationRoleName"`
	// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
	OrganizationalUnits []string `pulumi:"organizationalUnits"`
	// The permission type of the workspace. If `SERVICE_MANAGED` is specified, the IAM roles and IAM policy attachments are generated automatically. If `CUSTOMER_MANAGED` is specified, the IAM roles and IAM policy attachments will not be created.
	//
	// The following arguments are optional:
	PermissionType *string `pulumi:"permissionType"`
	// The IAM role ARN that the workspace assumes.
	RoleArn                 *string `pulumi:"roleArn"`
	SamlConfigurationStatus *string `pulumi:"samlConfigurationStatus"`
	// The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
	StackSetName *string `pulumi:"stackSetName"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to. See VPC Configuration below.
	VpcConfiguration *WorkspaceVpcConfiguration `pulumi:"vpcConfiguration"`
}

type WorkspaceState struct {
	// The type of account access for the workspace. Valid values are `CURRENT_ACCOUNT` and `ORGANIZATION`. If `ORGANIZATION` is specified, then `organizationalUnits` must also be present.
	AccountAccessType pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the Grafana workspace.
	Arn pulumix.Input[*string]
	// The authentication providers for the workspace. Valid values are `AWS_SSO`, `SAML`, or both.
	AuthenticationProviders pulumix.Input[[]string]
	// The configuration string for the workspace that you create. For more information about the format and configuration options available, see [Working in your Grafana workspace](https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html).
	Configuration pulumix.Input[*string]
	// The data sources for the workspace. Valid values are `AMAZON_OPENSEARCH_SERVICE`, `ATHENA`, `CLOUDWATCH`, `PROMETHEUS`, `REDSHIFT`, `SITEWISE`, `TIMESTREAM`, `XRAY`
	DataSources pulumix.Input[[]string]
	// The workspace description.
	Description pulumix.Input[*string]
	// The endpoint of the Grafana workspace.
	Endpoint pulumix.Input[*string]
	// Specifies the version of Grafana to support in the new workspace. Supported values are `8.4` and `9.4`. If not specified, defaults to `8.4`.
	GrafanaVersion pulumix.Input[*string]
	// The Grafana workspace name.
	Name pulumix.Input[*string]
	// Configuration for network access to your workspace.See Network Access Control below.
	NetworkAccessControl pulumix.Input[*WorkspaceNetworkAccessControlArgs]
	// The notification destinations. If a data source is specified here, Amazon Managed Grafana will create IAM roles and permissions needed to use these destinations. Must be set to `SNS`.
	NotificationDestinations pulumix.Input[[]string]
	// The role name that the workspace uses to access resources through Amazon Organizations.
	OrganizationRoleName pulumix.Input[*string]
	// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
	OrganizationalUnits pulumix.Input[[]string]
	// The permission type of the workspace. If `SERVICE_MANAGED` is specified, the IAM roles and IAM policy attachments are generated automatically. If `CUSTOMER_MANAGED` is specified, the IAM roles and IAM policy attachments will not be created.
	//
	// The following arguments are optional:
	PermissionType pulumix.Input[*string]
	// The IAM role ARN that the workspace assumes.
	RoleArn                 pulumix.Input[*string]
	SamlConfigurationStatus pulumix.Input[*string]
	// The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
	StackSetName pulumix.Input[*string]
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to. See VPC Configuration below.
	VpcConfiguration pulumix.Input[*WorkspaceVpcConfigurationArgs]
}

func (WorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceState)(nil)).Elem()
}

type workspaceArgs struct {
	// The type of account access for the workspace. Valid values are `CURRENT_ACCOUNT` and `ORGANIZATION`. If `ORGANIZATION` is specified, then `organizationalUnits` must also be present.
	AccountAccessType string `pulumi:"accountAccessType"`
	// The authentication providers for the workspace. Valid values are `AWS_SSO`, `SAML`, or both.
	AuthenticationProviders []string `pulumi:"authenticationProviders"`
	// The configuration string for the workspace that you create. For more information about the format and configuration options available, see [Working in your Grafana workspace](https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html).
	Configuration *string `pulumi:"configuration"`
	// The data sources for the workspace. Valid values are `AMAZON_OPENSEARCH_SERVICE`, `ATHENA`, `CLOUDWATCH`, `PROMETHEUS`, `REDSHIFT`, `SITEWISE`, `TIMESTREAM`, `XRAY`
	DataSources []string `pulumi:"dataSources"`
	// The workspace description.
	Description *string `pulumi:"description"`
	// Specifies the version of Grafana to support in the new workspace. Supported values are `8.4` and `9.4`. If not specified, defaults to `8.4`.
	GrafanaVersion *string `pulumi:"grafanaVersion"`
	// The Grafana workspace name.
	Name *string `pulumi:"name"`
	// Configuration for network access to your workspace.See Network Access Control below.
	NetworkAccessControl *WorkspaceNetworkAccessControl `pulumi:"networkAccessControl"`
	// The notification destinations. If a data source is specified here, Amazon Managed Grafana will create IAM roles and permissions needed to use these destinations. Must be set to `SNS`.
	NotificationDestinations []string `pulumi:"notificationDestinations"`
	// The role name that the workspace uses to access resources through Amazon Organizations.
	OrganizationRoleName *string `pulumi:"organizationRoleName"`
	// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
	OrganizationalUnits []string `pulumi:"organizationalUnits"`
	// The permission type of the workspace. If `SERVICE_MANAGED` is specified, the IAM roles and IAM policy attachments are generated automatically. If `CUSTOMER_MANAGED` is specified, the IAM roles and IAM policy attachments will not be created.
	//
	// The following arguments are optional:
	PermissionType string `pulumi:"permissionType"`
	// The IAM role ARN that the workspace assumes.
	RoleArn *string `pulumi:"roleArn"`
	// The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
	StackSetName *string `pulumi:"stackSetName"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags map[string]string `pulumi:"tags"`
	// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to. See VPC Configuration below.
	VpcConfiguration *WorkspaceVpcConfiguration `pulumi:"vpcConfiguration"`
}

// The set of arguments for constructing a Workspace resource.
type WorkspaceArgs struct {
	// The type of account access for the workspace. Valid values are `CURRENT_ACCOUNT` and `ORGANIZATION`. If `ORGANIZATION` is specified, then `organizationalUnits` must also be present.
	AccountAccessType pulumix.Input[string]
	// The authentication providers for the workspace. Valid values are `AWS_SSO`, `SAML`, or both.
	AuthenticationProviders pulumix.Input[[]string]
	// The configuration string for the workspace that you create. For more information about the format and configuration options available, see [Working in your Grafana workspace](https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html).
	Configuration pulumix.Input[*string]
	// The data sources for the workspace. Valid values are `AMAZON_OPENSEARCH_SERVICE`, `ATHENA`, `CLOUDWATCH`, `PROMETHEUS`, `REDSHIFT`, `SITEWISE`, `TIMESTREAM`, `XRAY`
	DataSources pulumix.Input[[]string]
	// The workspace description.
	Description pulumix.Input[*string]
	// Specifies the version of Grafana to support in the new workspace. Supported values are `8.4` and `9.4`. If not specified, defaults to `8.4`.
	GrafanaVersion pulumix.Input[*string]
	// The Grafana workspace name.
	Name pulumix.Input[*string]
	// Configuration for network access to your workspace.See Network Access Control below.
	NetworkAccessControl pulumix.Input[*WorkspaceNetworkAccessControlArgs]
	// The notification destinations. If a data source is specified here, Amazon Managed Grafana will create IAM roles and permissions needed to use these destinations. Must be set to `SNS`.
	NotificationDestinations pulumix.Input[[]string]
	// The role name that the workspace uses to access resources through Amazon Organizations.
	OrganizationRoleName pulumix.Input[*string]
	// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
	OrganizationalUnits pulumix.Input[[]string]
	// The permission type of the workspace. If `SERVICE_MANAGED` is specified, the IAM roles and IAM policy attachments are generated automatically. If `CUSTOMER_MANAGED` is specified, the IAM roles and IAM policy attachments will not be created.
	//
	// The following arguments are optional:
	PermissionType pulumix.Input[string]
	// The IAM role ARN that the workspace assumes.
	RoleArn pulumix.Input[*string]
	// The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
	StackSetName pulumix.Input[*string]
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags pulumix.Input[map[string]string]
	// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to. See VPC Configuration below.
	VpcConfiguration pulumix.Input[*WorkspaceVpcConfigurationArgs]
}

func (WorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceArgs)(nil)).Elem()
}

type WorkspaceOutput struct{ *pulumi.OutputState }

func (WorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Workspace)(nil)).Elem()
}

func (o WorkspaceOutput) ToWorkspaceOutput() WorkspaceOutput {
	return o
}

func (o WorkspaceOutput) ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput {
	return o
}

func (o WorkspaceOutput) ToOutput(ctx context.Context) pulumix.Output[Workspace] {
	return pulumix.Output[Workspace]{
		OutputState: o.OutputState,
	}
}

// The type of account access for the workspace. Valid values are `CURRENT_ACCOUNT` and `ORGANIZATION`. If `ORGANIZATION` is specified, then `organizationalUnits` must also be present.
func (o WorkspaceOutput) AccountAccessType() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.AccountAccessType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the Grafana workspace.
func (o WorkspaceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The authentication providers for the workspace. Valid values are `AWS_SSO`, `SAML`, or both.
func (o WorkspaceOutput) AuthenticationProviders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.ArrayOutput[string] { return v.AuthenticationProviders })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The configuration string for the workspace that you create. For more information about the format and configuration options available, see [Working in your Grafana workspace](https://docs.aws.amazon.com/grafana/latest/userguide/AMG-configure-workspace.html).
func (o WorkspaceOutput) Configuration() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.Configuration })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The data sources for the workspace. Valid values are `AMAZON_OPENSEARCH_SERVICE`, `ATHENA`, `CLOUDWATCH`, `PROMETHEUS`, `REDSHIFT`, `SITEWISE`, `TIMESTREAM`, `XRAY`
func (o WorkspaceOutput) DataSources() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.ArrayOutput[string] { return v.DataSources })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The workspace description.
func (o WorkspaceOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The endpoint of the Grafana workspace.
func (o WorkspaceOutput) Endpoint() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.Endpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the version of Grafana to support in the new workspace. Supported values are `8.4` and `9.4`. If not specified, defaults to `8.4`.
func (o WorkspaceOutput) GrafanaVersion() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.GrafanaVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Grafana workspace name.
func (o WorkspaceOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration for network access to your workspace.See Network Access Control below.
func (o WorkspaceOutput) NetworkAccessControl() pulumix.GPtrOutput[WorkspaceNetworkAccessControl, WorkspaceNetworkAccessControlOutput] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.GPtrOutput[WorkspaceNetworkAccessControl, WorkspaceNetworkAccessControlOutput] {
		return v.NetworkAccessControl
	})
	unwrapped := pulumix.Flatten[*WorkspaceNetworkAccessControl, pulumix.GPtrOutput[WorkspaceNetworkAccessControl, WorkspaceNetworkAccessControlOutput]](value)
	return pulumix.GPtrOutput[WorkspaceNetworkAccessControl, WorkspaceNetworkAccessControlOutput]{OutputState: unwrapped.OutputState}
}

// The notification destinations. If a data source is specified here, Amazon Managed Grafana will create IAM roles and permissions needed to use these destinations. Must be set to `SNS`.
func (o WorkspaceOutput) NotificationDestinations() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.ArrayOutput[string] { return v.NotificationDestinations })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The role name that the workspace uses to access resources through Amazon Organizations.
func (o WorkspaceOutput) OrganizationRoleName() pulumix.Output[*string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[*string] { return v.OrganizationRoleName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
func (o WorkspaceOutput) OrganizationalUnits() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.ArrayOutput[string] { return v.OrganizationalUnits })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The permission type of the workspace. If `SERVICE_MANAGED` is specified, the IAM roles and IAM policy attachments are generated automatically. If `CUSTOMER_MANAGED` is specified, the IAM roles and IAM policy attachments will not be created.
//
// The following arguments are optional:
func (o WorkspaceOutput) PermissionType() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.PermissionType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IAM role ARN that the workspace assumes.
func (o WorkspaceOutput) RoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[*string] { return v.RoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o WorkspaceOutput) SamlConfigurationStatus() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.SamlConfigurationStatus })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
func (o WorkspaceOutput) StackSetName() pulumix.Output[*string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[*string] { return v.StackSetName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
func (o WorkspaceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o WorkspaceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to. See VPC Configuration below.
func (o WorkspaceOutput) VpcConfiguration() pulumix.GPtrOutput[WorkspaceVpcConfiguration, WorkspaceVpcConfigurationOutput] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.GPtrOutput[WorkspaceVpcConfiguration, WorkspaceVpcConfigurationOutput] {
		return v.VpcConfiguration
	})
	unwrapped := pulumix.Flatten[*WorkspaceVpcConfiguration, pulumix.GPtrOutput[WorkspaceVpcConfiguration, WorkspaceVpcConfigurationOutput]](value)
	return pulumix.GPtrOutput[WorkspaceVpcConfiguration, WorkspaceVpcConfigurationOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(WorkspaceOutput{})
}
