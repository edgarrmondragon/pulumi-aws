// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Service Catalog Budget Resource Association.
//
// > **Tip:** A "resource" is either a Service Catalog portfolio or product.
type BudgetResourceAssociation struct {
	pulumi.CustomResourceState

	// Budget name.
	BudgetName pulumix.Output[string] `pulumi:"budgetName"`
	// Resource identifier.
	ResourceId pulumix.Output[string] `pulumi:"resourceId"`
}

// NewBudgetResourceAssociation registers a new resource with the given unique name, arguments, and options.
func NewBudgetResourceAssociation(ctx *pulumi.Context,
	name string, args *BudgetResourceAssociationArgs, opts ...pulumi.ResourceOption) (*BudgetResourceAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BudgetName == nil {
		return nil, errors.New("invalid value for required argument 'BudgetName'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BudgetResourceAssociation
	err := ctx.RegisterResource("aws:servicecatalog/budgetResourceAssociation:BudgetResourceAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBudgetResourceAssociation gets an existing BudgetResourceAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBudgetResourceAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BudgetResourceAssociationState, opts ...pulumi.ResourceOption) (*BudgetResourceAssociation, error) {
	var resource BudgetResourceAssociation
	err := ctx.ReadResource("aws:servicecatalog/budgetResourceAssociation:BudgetResourceAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BudgetResourceAssociation resources.
type budgetResourceAssociationState struct {
	// Budget name.
	BudgetName *string `pulumi:"budgetName"`
	// Resource identifier.
	ResourceId *string `pulumi:"resourceId"`
}

type BudgetResourceAssociationState struct {
	// Budget name.
	BudgetName pulumix.Input[*string]
	// Resource identifier.
	ResourceId pulumix.Input[*string]
}

func (BudgetResourceAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetResourceAssociationState)(nil)).Elem()
}

type budgetResourceAssociationArgs struct {
	// Budget name.
	BudgetName string `pulumi:"budgetName"`
	// Resource identifier.
	ResourceId string `pulumi:"resourceId"`
}

// The set of arguments for constructing a BudgetResourceAssociation resource.
type BudgetResourceAssociationArgs struct {
	// Budget name.
	BudgetName pulumix.Input[string]
	// Resource identifier.
	ResourceId pulumix.Input[string]
}

func (BudgetResourceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetResourceAssociationArgs)(nil)).Elem()
}

type BudgetResourceAssociationOutput struct{ *pulumi.OutputState }

func (BudgetResourceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceAssociation)(nil)).Elem()
}

func (o BudgetResourceAssociationOutput) ToBudgetResourceAssociationOutput() BudgetResourceAssociationOutput {
	return o
}

func (o BudgetResourceAssociationOutput) ToBudgetResourceAssociationOutputWithContext(ctx context.Context) BudgetResourceAssociationOutput {
	return o
}

func (o BudgetResourceAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[BudgetResourceAssociation] {
	return pulumix.Output[BudgetResourceAssociation]{
		OutputState: o.OutputState,
	}
}

// Budget name.
func (o BudgetResourceAssociationOutput) BudgetName() pulumix.Output[string] {
	value := pulumix.Apply[BudgetResourceAssociation](o, func(v BudgetResourceAssociation) pulumix.Output[string] { return v.BudgetName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Resource identifier.
func (o BudgetResourceAssociationOutput) ResourceId() pulumix.Output[string] {
	value := pulumix.Apply[BudgetResourceAssociation](o, func(v BudgetResourceAssociation) pulumix.Output[string] { return v.ResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(BudgetResourceAssociationOutput{})
}
