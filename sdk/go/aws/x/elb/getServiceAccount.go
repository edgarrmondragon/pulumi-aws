// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get the Account ID of the [AWS Elastic Load Balancing Service Account](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html#attach-bucket-policy)
// in a given region for the purpose of permitting in S3 bucket policy.
//
// > **Note:** For AWS Regions opened since Jakarta (`ap-southeast-3`) in December 2021, AWS [documents that](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html#attach-bucket-policy) a [service principal name](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services) should be used instead of an AWS account ID in any relevant IAM policy.
func GetServiceAccount(ctx *pulumi.Context, args *GetServiceAccountArgs, opts ...pulumi.InvokeOption) (*GetServiceAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceAccountResult
	err := ctx.Invoke("aws:elb/getServiceAccount:getServiceAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceAccount.
type GetServiceAccountArgs struct {
	// Name of the region whose AWS ELB account ID is desired.
	// Defaults to the region from the AWS provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getServiceAccount.
type GetServiceAccountResult struct {
	// ARN of the AWS ELB service account in the selected region.
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id     string  `pulumi:"id"`
	Region *string `pulumi:"region"`
}

func GetServiceAccountOutput(ctx *pulumi.Context, args GetServiceAccountOutputArgs, opts ...pulumi.InvokeOption) GetServiceAccountResultOutput {
	outputResult := pulumix.ApplyErr[*GetServiceAccountArgs](args.ToOutput(), func(plainArgs *GetServiceAccountArgs) (*GetServiceAccountResult, error) {
		return GetServiceAccount(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetServiceAccountResultOutput, *GetServiceAccountResult](outputResult)
}

// A collection of arguments for invoking getServiceAccount.
type GetServiceAccountOutputArgs struct {
	// Name of the region whose AWS ELB account ID is desired.
	// Defaults to the region from the AWS provider configuration.
	Region pulumix.Input[*string] `pulumi:"region"`
}

func (args GetServiceAccountOutputArgs) ToOutput() pulumix.Output[*GetServiceAccountArgs] {
	allArgs := pulumix.All(
		args.Region.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetServiceAccountArgs {
		return &GetServiceAccountArgs{
			Region: resolvedArgs[0].(*string),
		}
	})
}

type GetServiceAccountResultOutput struct{ *pulumi.OutputState }

func (GetServiceAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceAccountResult)(nil)).Elem()
}

func (o GetServiceAccountResultOutput) ToOutput(context.Context) pulumix.Output[*GetServiceAccountResult] {
	return pulumix.Output[*GetServiceAccountResult]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceAccountResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*GetServiceAccountResult](o, func(v *GetServiceAccountResult) string { return v.Arn })
}

func (o GetServiceAccountResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetServiceAccountResult](o, func(v *GetServiceAccountResult) string { return v.Id })
}

func (o GetServiceAccountResultOutput) Region() pulumix.Output[*string] {
	return pulumix.Apply[*GetServiceAccountResult](o, func(v *GetServiceAccountResult) *string { return v.Region })
}
