// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon OpenSearch Domain.
//
// ## Elasticsearch vs. OpenSearch
//
// Amazon OpenSearch Service is the successor to Amazon Elasticsearch Service and supports OpenSearch and legacy Elasticsearch OSS (up to 7.10, the final open source version of the software).
//
// OpenSearch Domain configurations are similar in many ways to Elasticsearch Domain configurations. However, there are important differences including these:
//
// * OpenSearch has `engineVersion` while Elasticsearch has `elasticsearchVersion`
// * Versions are specified differently - _e.g._, `Elasticsearch_7.10` with OpenSearch vs. `7.10` for Elasticsearch.
// * `instanceType` argument values end in `search` for OpenSearch vs. `elasticsearch` for Elasticsearch (_e.g._, `t2.micro.search` vs. `t2.micro.elasticsearch`).
// * The AWS-managed service-linked role for OpenSearch is called `AWSServiceRoleForAmazonOpenSearchService` instead of `AWSServiceRoleForAmazonElasticsearchService` for Elasticsearch.
//
// There are also some potentially unexpected similarities in configurations:
//
// * ARNs for both are prefaced with `arn:aws:es:`.
// * Both OpenSearch and Elasticsearch use assume role policies that refer to the `Principal` `Service` as `es.amazonaws.com`.
// * IAM policy actions, such as those you will find in `accessPolicies`, are prefaced with `es:` for both.
type Domain struct {
	pulumi.CustomResourceState

	// IAM policy document specifying the access policies for the domain.
	AccessPolicies pulumix.Output[string] `pulumi:"accessPolicies"`
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions pulumix.MapOutput[string] `pulumi:"advancedOptions"`
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions pulumix.GPtrOutput[DomainAdvancedSecurityOptions, DomainAdvancedSecurityOptionsOutput] `pulumi:"advancedSecurityOptions"`
	// ARN of the domain.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions pulumix.GPtrOutput[DomainAutoTuneOptions, DomainAutoTuneOptionsOutput] `pulumi:"autoTuneOptions"`
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig pulumix.GPtrOutput[DomainClusterConfig, DomainClusterConfigOutput] `pulumi:"clusterConfig"`
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions pulumix.GPtrOutput[DomainCognitoOptions, DomainCognitoOptionsOutput] `pulumi:"cognitoOptions"`
	// Domain-specific endpoint for Dashboard without https scheme.
	DashboardEndpoint pulumix.Output[string] `pulumi:"dashboardEndpoint"`
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions pulumix.GPtrOutput[DomainDomainEndpointOptions, DomainDomainEndpointOptionsOutput] `pulumi:"domainEndpointOptions"`
	// Unique identifier for the domain.
	DomainId pulumix.Output[string] `pulumi:"domainId"`
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName pulumix.Output[string] `pulumi:"domainName"`
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions pulumix.GPtrOutput[DomainEbsOptions, DomainEbsOptionsOutput] `pulumi:"ebsOptions"`
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest pulumix.GPtrOutput[DomainEncryptAtRest, DomainEncryptAtRestOutput] `pulumi:"encryptAtRest"`
	// Domain-specific endpoint used to submit index, search, and data upload requests.
	Endpoint pulumix.Output[string] `pulumi:"endpoint"`
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion pulumix.Output[string] `pulumi:"engineVersion"`
	// (**Deprecated**) Domain-specific endpoint for kibana without https scheme. Use the `dashboardEndpoint` attribute instead.
	//
	// Deprecated: use 'dashboard_endpoint' attribute instead
	KibanaEndpoint pulumix.Output[string] `pulumi:"kibanaEndpoint"`
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions pulumix.GArrayOutput[DomainLogPublishingOption, DomainLogPublishingOptionOutput] `pulumi:"logPublishingOptions"`
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption pulumix.GPtrOutput[DomainNodeToNodeEncryption, DomainNodeToNodeEncryptionOutput] `pulumi:"nodeToNodeEncryption"`
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions pulumix.GPtrOutput[DomainOffPeakWindowOptions, DomainOffPeakWindowOptionsOutput] `pulumi:"offPeakWindowOptions"`
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions pulumix.GPtrOutput[DomainSnapshotOptions, DomainSnapshotOptionsOutput] `pulumi:"snapshotOptions"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnetIds` were created inside.
	// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions pulumix.GPtrOutput[DomainVpcOptions, DomainVpcOptionsOutput] `pulumi:"vpcOptions"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		args = &DomainArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Domain
	err := ctx.RegisterResource("aws:opensearch/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("aws:opensearch/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	// IAM policy document specifying the access policies for the domain.
	AccessPolicies *string `pulumi:"accessPolicies"`
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions map[string]string `pulumi:"advancedOptions"`
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions *DomainAdvancedSecurityOptions `pulumi:"advancedSecurityOptions"`
	// ARN of the domain.
	Arn *string `pulumi:"arn"`
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions *DomainAutoTuneOptions `pulumi:"autoTuneOptions"`
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig *DomainClusterConfig `pulumi:"clusterConfig"`
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions *DomainCognitoOptions `pulumi:"cognitoOptions"`
	// Domain-specific endpoint for Dashboard without https scheme.
	DashboardEndpoint *string `pulumi:"dashboardEndpoint"`
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions *DomainDomainEndpointOptions `pulumi:"domainEndpointOptions"`
	// Unique identifier for the domain.
	DomainId *string `pulumi:"domainId"`
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName *string `pulumi:"domainName"`
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions *DomainEbsOptions `pulumi:"ebsOptions"`
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest *DomainEncryptAtRest `pulumi:"encryptAtRest"`
	// Domain-specific endpoint used to submit index, search, and data upload requests.
	Endpoint *string `pulumi:"endpoint"`
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion *string `pulumi:"engineVersion"`
	// (**Deprecated**) Domain-specific endpoint for kibana without https scheme. Use the `dashboardEndpoint` attribute instead.
	//
	// Deprecated: use 'dashboard_endpoint' attribute instead
	KibanaEndpoint *string `pulumi:"kibanaEndpoint"`
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions []DomainLogPublishingOption `pulumi:"logPublishingOptions"`
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption *DomainNodeToNodeEncryption `pulumi:"nodeToNodeEncryption"`
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions *DomainOffPeakWindowOptions `pulumi:"offPeakWindowOptions"`
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions *DomainSnapshotOptions `pulumi:"snapshotOptions"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnetIds` were created inside.
	// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions *DomainVpcOptions `pulumi:"vpcOptions"`
}

type DomainState struct {
	// IAM policy document specifying the access policies for the domain.
	AccessPolicies pulumix.Input[*string]
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions pulumix.Input[map[string]string]
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions pulumix.Input[*DomainAdvancedSecurityOptionsArgs]
	// ARN of the domain.
	Arn pulumix.Input[*string]
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions pulumix.Input[*DomainAutoTuneOptionsArgs]
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig pulumix.Input[*DomainClusterConfigArgs]
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions pulumix.Input[*DomainCognitoOptionsArgs]
	// Domain-specific endpoint for Dashboard without https scheme.
	DashboardEndpoint pulumix.Input[*string]
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions pulumix.Input[*DomainDomainEndpointOptionsArgs]
	// Unique identifier for the domain.
	DomainId pulumix.Input[*string]
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName pulumix.Input[*string]
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions pulumix.Input[*DomainEbsOptionsArgs]
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest pulumix.Input[*DomainEncryptAtRestArgs]
	// Domain-specific endpoint used to submit index, search, and data upload requests.
	Endpoint pulumix.Input[*string]
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion pulumix.Input[*string]
	// (**Deprecated**) Domain-specific endpoint for kibana without https scheme. Use the `dashboardEndpoint` attribute instead.
	//
	// Deprecated: use 'dashboard_endpoint' attribute instead
	KibanaEndpoint pulumix.Input[*string]
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions pulumix.Input[[]*DomainLogPublishingOptionArgs]
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption pulumix.Input[*DomainNodeToNodeEncryptionArgs]
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions pulumix.Input[*DomainOffPeakWindowOptionsArgs]
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions pulumix.Input[*DomainSnapshotOptionsArgs]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnetIds` were created inside.
	// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
	TagsAll pulumix.Input[map[string]string]
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions pulumix.Input[*DomainVpcOptionsArgs]
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	// IAM policy document specifying the access policies for the domain.
	AccessPolicies *string `pulumi:"accessPolicies"`
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions map[string]string `pulumi:"advancedOptions"`
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions *DomainAdvancedSecurityOptions `pulumi:"advancedSecurityOptions"`
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions *DomainAutoTuneOptions `pulumi:"autoTuneOptions"`
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig *DomainClusterConfig `pulumi:"clusterConfig"`
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions *DomainCognitoOptions `pulumi:"cognitoOptions"`
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions *DomainDomainEndpointOptions `pulumi:"domainEndpointOptions"`
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName *string `pulumi:"domainName"`
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions *DomainEbsOptions `pulumi:"ebsOptions"`
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest *DomainEncryptAtRest `pulumi:"encryptAtRest"`
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion *string `pulumi:"engineVersion"`
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions []DomainLogPublishingOption `pulumi:"logPublishingOptions"`
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption *DomainNodeToNodeEncryption `pulumi:"nodeToNodeEncryption"`
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions *DomainOffPeakWindowOptions `pulumi:"offPeakWindowOptions"`
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions *DomainSnapshotOptions `pulumi:"snapshotOptions"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions *DomainVpcOptions `pulumi:"vpcOptions"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// IAM policy document specifying the access policies for the domain.
	AccessPolicies pulumix.Input[*string]
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions pulumix.Input[map[string]string]
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions pulumix.Input[*DomainAdvancedSecurityOptionsArgs]
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions pulumix.Input[*DomainAutoTuneOptionsArgs]
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig pulumix.Input[*DomainClusterConfigArgs]
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions pulumix.Input[*DomainCognitoOptionsArgs]
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions pulumix.Input[*DomainDomainEndpointOptionsArgs]
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName pulumix.Input[*string]
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions pulumix.Input[*DomainEbsOptionsArgs]
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest pulumix.Input[*DomainEncryptAtRestArgs]
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion pulumix.Input[*string]
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions pulumix.Input[[]*DomainLogPublishingOptionArgs]
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption pulumix.Input[*DomainNodeToNodeEncryptionArgs]
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions pulumix.Input[*DomainOffPeakWindowOptionsArgs]
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions pulumix.Input[*DomainSnapshotOptionsArgs]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions pulumix.Input[*DomainVpcOptionsArgs]
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainOutput struct{ *pulumi.OutputState }

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Domain)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

func (o DomainOutput) ToOutput(ctx context.Context) pulumix.Output[Domain] {
	return pulumix.Output[Domain]{
		OutputState: o.OutputState,
	}
}

// IAM policy document specifying the access policies for the domain.
func (o DomainOutput) AccessPolicies() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.AccessPolicies })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
func (o DomainOutput) AdvancedOptions() pulumix.MapOutput[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.MapOutput[string] { return v.AdvancedOptions })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
func (o DomainOutput) AdvancedSecurityOptions() pulumix.GPtrOutput[DomainAdvancedSecurityOptions, DomainAdvancedSecurityOptionsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainAdvancedSecurityOptions, DomainAdvancedSecurityOptionsOutput] {
		return v.AdvancedSecurityOptions
	})
	unwrapped := pulumix.Flatten[*DomainAdvancedSecurityOptions, pulumix.GPtrOutput[DomainAdvancedSecurityOptions, DomainAdvancedSecurityOptionsOutput]](value)
	return pulumix.GPtrOutput[DomainAdvancedSecurityOptions, DomainAdvancedSecurityOptionsOutput]{OutputState: unwrapped.OutputState}
}

// ARN of the domain.
func (o DomainOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block for the Auto-Tune options of the domain. Detailed below.
func (o DomainOutput) AutoTuneOptions() pulumix.GPtrOutput[DomainAutoTuneOptions, DomainAutoTuneOptionsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainAutoTuneOptions, DomainAutoTuneOptionsOutput] {
		return v.AutoTuneOptions
	})
	unwrapped := pulumix.Flatten[*DomainAutoTuneOptions, pulumix.GPtrOutput[DomainAutoTuneOptions, DomainAutoTuneOptionsOutput]](value)
	return pulumix.GPtrOutput[DomainAutoTuneOptions, DomainAutoTuneOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block for the cluster of the domain. Detailed below.
func (o DomainOutput) ClusterConfig() pulumix.GPtrOutput[DomainClusterConfig, DomainClusterConfigOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainClusterConfig, DomainClusterConfigOutput] {
		return v.ClusterConfig
	})
	unwrapped := pulumix.Flatten[*DomainClusterConfig, pulumix.GPtrOutput[DomainClusterConfig, DomainClusterConfigOutput]](value)
	return pulumix.GPtrOutput[DomainClusterConfig, DomainClusterConfigOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block for authenticating dashboard with Cognito. Detailed below.
func (o DomainOutput) CognitoOptions() pulumix.GPtrOutput[DomainCognitoOptions, DomainCognitoOptionsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainCognitoOptions, DomainCognitoOptionsOutput] {
		return v.CognitoOptions
	})
	unwrapped := pulumix.Flatten[*DomainCognitoOptions, pulumix.GPtrOutput[DomainCognitoOptions, DomainCognitoOptionsOutput]](value)
	return pulumix.GPtrOutput[DomainCognitoOptions, DomainCognitoOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Domain-specific endpoint for Dashboard without https scheme.
func (o DomainOutput) DashboardEndpoint() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.DashboardEndpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
func (o DomainOutput) DomainEndpointOptions() pulumix.GPtrOutput[DomainDomainEndpointOptions, DomainDomainEndpointOptionsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainDomainEndpointOptions, DomainDomainEndpointOptionsOutput] {
		return v.DomainEndpointOptions
	})
	unwrapped := pulumix.Flatten[*DomainDomainEndpointOptions, pulumix.GPtrOutput[DomainDomainEndpointOptions, DomainDomainEndpointOptionsOutput]](value)
	return pulumix.GPtrOutput[DomainDomainEndpointOptions, DomainDomainEndpointOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Unique identifier for the domain.
func (o DomainOutput) DomainId() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.DomainId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the domain.
//
// The following arguments are optional:
func (o DomainOutput) DomainName() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.DomainName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
func (o DomainOutput) EbsOptions() pulumix.GPtrOutput[DomainEbsOptions, DomainEbsOptionsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainEbsOptions, DomainEbsOptionsOutput] { return v.EbsOptions })
	unwrapped := pulumix.Flatten[*DomainEbsOptions, pulumix.GPtrOutput[DomainEbsOptions, DomainEbsOptionsOutput]](value)
	return pulumix.GPtrOutput[DomainEbsOptions, DomainEbsOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
func (o DomainOutput) EncryptAtRest() pulumix.GPtrOutput[DomainEncryptAtRest, DomainEncryptAtRestOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainEncryptAtRest, DomainEncryptAtRestOutput] {
		return v.EncryptAtRest
	})
	unwrapped := pulumix.Flatten[*DomainEncryptAtRest, pulumix.GPtrOutput[DomainEncryptAtRest, DomainEncryptAtRestOutput]](value)
	return pulumix.GPtrOutput[DomainEncryptAtRest, DomainEncryptAtRestOutput]{OutputState: unwrapped.OutputState}
}

// Domain-specific endpoint used to submit index, search, and data upload requests.
func (o DomainOutput) Endpoint() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.Endpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
// Defaults to the lastest version of OpenSearch.
func (o DomainOutput) EngineVersion() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.EngineVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// (**Deprecated**) Domain-specific endpoint for kibana without https scheme. Use the `dashboardEndpoint` attribute instead.
//
// Deprecated: use 'dashboard_endpoint' attribute instead
func (o DomainOutput) KibanaEndpoint() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.KibanaEndpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
func (o DomainOutput) LogPublishingOptions() pulumix.GArrayOutput[DomainLogPublishingOption, DomainLogPublishingOptionOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GArrayOutput[DomainLogPublishingOption, DomainLogPublishingOptionOutput] {
		return v.LogPublishingOptions
	})
	unwrapped := pulumix.Flatten[[]DomainLogPublishingOption, pulumix.GArrayOutput[DomainLogPublishingOption, DomainLogPublishingOptionOutput]](value)
	return pulumix.GArrayOutput[DomainLogPublishingOption, DomainLogPublishingOptionOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block for node-to-node encryption options. Detailed below.
func (o DomainOutput) NodeToNodeEncryption() pulumix.GPtrOutput[DomainNodeToNodeEncryption, DomainNodeToNodeEncryptionOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainNodeToNodeEncryption, DomainNodeToNodeEncryptionOutput] {
		return v.NodeToNodeEncryption
	})
	unwrapped := pulumix.Flatten[*DomainNodeToNodeEncryption, pulumix.GPtrOutput[DomainNodeToNodeEncryption, DomainNodeToNodeEncryptionOutput]](value)
	return pulumix.GPtrOutput[DomainNodeToNodeEncryption, DomainNodeToNodeEncryptionOutput]{OutputState: unwrapped.OutputState}
}

// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
func (o DomainOutput) OffPeakWindowOptions() pulumix.GPtrOutput[DomainOffPeakWindowOptions, DomainOffPeakWindowOptionsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainOffPeakWindowOptions, DomainOffPeakWindowOptionsOutput] {
		return v.OffPeakWindowOptions
	})
	unwrapped := pulumix.Flatten[*DomainOffPeakWindowOptions, pulumix.GPtrOutput[DomainOffPeakWindowOptions, DomainOffPeakWindowOptionsOutput]](value)
	return pulumix.GPtrOutput[DomainOffPeakWindowOptions, DomainOffPeakWindowOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
func (o DomainOutput) SnapshotOptions() pulumix.GPtrOutput[DomainSnapshotOptions, DomainSnapshotOptionsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainSnapshotOptions, DomainSnapshotOptionsOutput] {
		return v.SnapshotOptions
	})
	unwrapped := pulumix.Flatten[*DomainSnapshotOptions, pulumix.GPtrOutput[DomainSnapshotOptions, DomainSnapshotOptionsOutput]](value)
	return pulumix.GPtrOutput[DomainSnapshotOptions, DomainSnapshotOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DomainOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnetIds` were created inside.
// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
func (o DomainOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
func (o DomainOutput) VpcOptions() pulumix.GPtrOutput[DomainVpcOptions, DomainVpcOptionsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainVpcOptions, DomainVpcOptionsOutput] { return v.VpcOptions })
	unwrapped := pulumix.Flatten[*DomainVpcOptions, pulumix.GPtrOutput[DomainVpcOptions, DomainVpcOptionsOutput]](value)
	return pulumix.GPtrOutput[DomainVpcOptions, DomainVpcOptionsOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DomainOutput{})
}
