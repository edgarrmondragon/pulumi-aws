// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package costexplorer

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CE Cost Category.
type CostCategory struct {
	pulumi.CustomResourceState

	// ARN of the cost category.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Default value for the cost category.
	DefaultValue pulumix.Output[*string] `pulumi:"defaultValue"`
	// Effective end data of your Cost Category.
	EffectiveEnd pulumix.Output[string] `pulumi:"effectiveEnd"`
	// The Cost Category's effective start date. It can only be a billing start date (first day of the month). If the date isn't provided, it's the first day of the current month. Dates can't be before the previous twelve months, or in the future. For example `2022-11-01T00:00:00Z`.
	//
	// The following arguments are optional:
	EffectiveStart pulumix.Output[string] `pulumi:"effectiveStart"`
	// Unique name for the Cost Category.
	Name pulumix.Output[string] `pulumi:"name"`
	// Rule schema version in this particular Cost Category.
	RuleVersion pulumix.Output[string] `pulumi:"ruleVersion"`
	// Configuration block for the Cost Category rules used to categorize costs. See below.
	Rules pulumix.GArrayOutput[CostCategoryRule, CostCategoryRuleOutput] `pulumi:"rules"`
	// Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
	SplitChargeRules pulumix.GArrayOutput[CostCategorySplitChargeRule, CostCategorySplitChargeRuleOutput] `pulumi:"splitChargeRules"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewCostCategory registers a new resource with the given unique name, arguments, and options.
func NewCostCategory(ctx *pulumi.Context,
	name string, args *CostCategoryArgs, opts ...pulumi.ResourceOption) (*CostCategory, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuleVersion == nil {
		return nil, errors.New("invalid value for required argument 'RuleVersion'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CostCategory
	err := ctx.RegisterResource("aws:costexplorer/costCategory:CostCategory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCostCategory gets an existing CostCategory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCostCategory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CostCategoryState, opts ...pulumi.ResourceOption) (*CostCategory, error) {
	var resource CostCategory
	err := ctx.ReadResource("aws:costexplorer/costCategory:CostCategory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CostCategory resources.
type costCategoryState struct {
	// ARN of the cost category.
	Arn *string `pulumi:"arn"`
	// Default value for the cost category.
	DefaultValue *string `pulumi:"defaultValue"`
	// Effective end data of your Cost Category.
	EffectiveEnd *string `pulumi:"effectiveEnd"`
	// The Cost Category's effective start date. It can only be a billing start date (first day of the month). If the date isn't provided, it's the first day of the current month. Dates can't be before the previous twelve months, or in the future. For example `2022-11-01T00:00:00Z`.
	//
	// The following arguments are optional:
	EffectiveStart *string `pulumi:"effectiveStart"`
	// Unique name for the Cost Category.
	Name *string `pulumi:"name"`
	// Rule schema version in this particular Cost Category.
	RuleVersion *string `pulumi:"ruleVersion"`
	// Configuration block for the Cost Category rules used to categorize costs. See below.
	Rules []CostCategoryRule `pulumi:"rules"`
	// Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
	SplitChargeRules []CostCategorySplitChargeRule `pulumi:"splitChargeRules"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type CostCategoryState struct {
	// ARN of the cost category.
	Arn pulumix.Input[*string]
	// Default value for the cost category.
	DefaultValue pulumix.Input[*string]
	// Effective end data of your Cost Category.
	EffectiveEnd pulumix.Input[*string]
	// The Cost Category's effective start date. It can only be a billing start date (first day of the month). If the date isn't provided, it's the first day of the current month. Dates can't be before the previous twelve months, or in the future. For example `2022-11-01T00:00:00Z`.
	//
	// The following arguments are optional:
	EffectiveStart pulumix.Input[*string]
	// Unique name for the Cost Category.
	Name pulumix.Input[*string]
	// Rule schema version in this particular Cost Category.
	RuleVersion pulumix.Input[*string]
	// Configuration block for the Cost Category rules used to categorize costs. See below.
	Rules pulumix.Input[[]*CostCategoryRuleArgs]
	// Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
	SplitChargeRules pulumix.Input[[]*CostCategorySplitChargeRuleArgs]
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (CostCategoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*costCategoryState)(nil)).Elem()
}

type costCategoryArgs struct {
	// Default value for the cost category.
	DefaultValue *string `pulumi:"defaultValue"`
	// The Cost Category's effective start date. It can only be a billing start date (first day of the month). If the date isn't provided, it's the first day of the current month. Dates can't be before the previous twelve months, or in the future. For example `2022-11-01T00:00:00Z`.
	//
	// The following arguments are optional:
	EffectiveStart *string `pulumi:"effectiveStart"`
	// Unique name for the Cost Category.
	Name *string `pulumi:"name"`
	// Rule schema version in this particular Cost Category.
	RuleVersion string `pulumi:"ruleVersion"`
	// Configuration block for the Cost Category rules used to categorize costs. See below.
	Rules []CostCategoryRule `pulumi:"rules"`
	// Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
	SplitChargeRules []CostCategorySplitChargeRule `pulumi:"splitChargeRules"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CostCategory resource.
type CostCategoryArgs struct {
	// Default value for the cost category.
	DefaultValue pulumix.Input[*string]
	// The Cost Category's effective start date. It can only be a billing start date (first day of the month). If the date isn't provided, it's the first day of the current month. Dates can't be before the previous twelve months, or in the future. For example `2022-11-01T00:00:00Z`.
	//
	// The following arguments are optional:
	EffectiveStart pulumix.Input[*string]
	// Unique name for the Cost Category.
	Name pulumix.Input[*string]
	// Rule schema version in this particular Cost Category.
	RuleVersion pulumix.Input[string]
	// Configuration block for the Cost Category rules used to categorize costs. See below.
	Rules pulumix.Input[[]*CostCategoryRuleArgs]
	// Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
	SplitChargeRules pulumix.Input[[]*CostCategorySplitChargeRuleArgs]
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (CostCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*costCategoryArgs)(nil)).Elem()
}

type CostCategoryOutput struct{ *pulumi.OutputState }

func (CostCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostCategory)(nil)).Elem()
}

func (o CostCategoryOutput) ToCostCategoryOutput() CostCategoryOutput {
	return o
}

func (o CostCategoryOutput) ToCostCategoryOutputWithContext(ctx context.Context) CostCategoryOutput {
	return o
}

func (o CostCategoryOutput) ToOutput(ctx context.Context) pulumix.Output[CostCategory] {
	return pulumix.Output[CostCategory]{
		OutputState: o.OutputState,
	}
}

// ARN of the cost category.
func (o CostCategoryOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Default value for the cost category.
func (o CostCategoryOutput) DefaultValue() pulumix.Output[*string] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.Output[*string] { return v.DefaultValue })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Effective end data of your Cost Category.
func (o CostCategoryOutput) EffectiveEnd() pulumix.Output[string] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.Output[string] { return v.EffectiveEnd })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Cost Category's effective start date. It can only be a billing start date (first day of the month). If the date isn't provided, it's the first day of the current month. Dates can't be before the previous twelve months, or in the future. For example `2022-11-01T00:00:00Z`.
//
// The following arguments are optional:
func (o CostCategoryOutput) EffectiveStart() pulumix.Output[string] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.Output[string] { return v.EffectiveStart })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Unique name for the Cost Category.
func (o CostCategoryOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Rule schema version in this particular Cost Category.
func (o CostCategoryOutput) RuleVersion() pulumix.Output[string] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.Output[string] { return v.RuleVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block for the Cost Category rules used to categorize costs. See below.
func (o CostCategoryOutput) Rules() pulumix.GArrayOutput[CostCategoryRule, CostCategoryRuleOutput] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.GArrayOutput[CostCategoryRule, CostCategoryRuleOutput] { return v.Rules })
	unwrapped := pulumix.Flatten[[]CostCategoryRule, pulumix.GArrayOutput[CostCategoryRule, CostCategoryRuleOutput]](value)
	return pulumix.GArrayOutput[CostCategoryRule, CostCategoryRuleOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
func (o CostCategoryOutput) SplitChargeRules() pulumix.GArrayOutput[CostCategorySplitChargeRule, CostCategorySplitChargeRuleOutput] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.GArrayOutput[CostCategorySplitChargeRule, CostCategorySplitChargeRuleOutput] {
		return v.SplitChargeRules
	})
	unwrapped := pulumix.Flatten[[]CostCategorySplitChargeRule, pulumix.GArrayOutput[CostCategorySplitChargeRule, CostCategorySplitChargeRuleOutput]](value)
	return pulumix.GArrayOutput[CostCategorySplitChargeRule, CostCategorySplitChargeRuleOutput]{OutputState: unwrapped.OutputState}
}

// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CostCategoryOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CostCategoryOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[CostCategory](o, func(v CostCategory) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(CostCategoryOutput{})
}
