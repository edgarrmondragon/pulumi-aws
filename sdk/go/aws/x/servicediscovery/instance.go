// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicediscovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Service Discovery Instance resource.
type Instance struct {
	pulumi.CustomResourceState

	// A map contains the attributes of the instance. Check the [doc](https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#API_RegisterInstance_RequestSyntax) for the supported attributes and syntax.
	Attributes pulumix.MapOutput[string] `pulumi:"attributes"`
	// The ID of the service instance.
	InstanceId pulumix.Output[string] `pulumi:"instanceId"`
	// The ID of the service that you want to use to create the instance.
	ServiceId pulumix.Output[string] `pulumi:"serviceId"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Attributes == nil {
		return nil, errors.New("invalid value for required argument 'Attributes'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("aws:servicediscovery/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws:servicediscovery/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// A map contains the attributes of the instance. Check the [doc](https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#API_RegisterInstance_RequestSyntax) for the supported attributes and syntax.
	Attributes map[string]string `pulumi:"attributes"`
	// The ID of the service instance.
	InstanceId *string `pulumi:"instanceId"`
	// The ID of the service that you want to use to create the instance.
	ServiceId *string `pulumi:"serviceId"`
}

type InstanceState struct {
	// A map contains the attributes of the instance. Check the [doc](https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#API_RegisterInstance_RequestSyntax) for the supported attributes and syntax.
	Attributes pulumix.Input[map[string]string]
	// The ID of the service instance.
	InstanceId pulumix.Input[*string]
	// The ID of the service that you want to use to create the instance.
	ServiceId pulumix.Input[*string]
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// A map contains the attributes of the instance. Check the [doc](https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#API_RegisterInstance_RequestSyntax) for the supported attributes and syntax.
	Attributes map[string]string `pulumi:"attributes"`
	// The ID of the service instance.
	InstanceId string `pulumi:"instanceId"`
	// The ID of the service that you want to use to create the instance.
	ServiceId string `pulumi:"serviceId"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// A map contains the attributes of the instance. Check the [doc](https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#API_RegisterInstance_RequestSyntax) for the supported attributes and syntax.
	Attributes pulumix.Input[map[string]string]
	// The ID of the service instance.
	InstanceId pulumix.Input[string]
	// The ID of the service that you want to use to create the instance.
	ServiceId pulumix.Input[string]
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func (o InstanceOutput) ToOutput(ctx context.Context) pulumix.Output[Instance] {
	return pulumix.Output[Instance]{
		OutputState: o.OutputState,
	}
}

// A map contains the attributes of the instance. Check the [doc](https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#API_RegisterInstance_RequestSyntax) for the supported attributes and syntax.
func (o InstanceOutput) Attributes() pulumix.MapOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.MapOutput[string] { return v.Attributes })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The ID of the service instance.
func (o InstanceOutput) InstanceId() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.InstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the service that you want to use to create the instance.
func (o InstanceOutput) ServiceId() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.ServiceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(InstanceOutput{})
}
