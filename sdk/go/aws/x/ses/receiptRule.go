// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an SES receipt rule resource
type ReceiptRule struct {
	pulumi.CustomResourceState

	// A list of Add Header Action blocks. Documented below.
	AddHeaderActions pulumix.GArrayOutput[ReceiptRuleAddHeaderAction, ReceiptRuleAddHeaderActionOutput] `pulumi:"addHeaderActions"`
	// The name of the rule to place this rule after
	After pulumix.Output[*string] `pulumi:"after"`
	// The SES receipt rule ARN.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A list of Bounce Action blocks. Documented below.
	BounceActions pulumix.GArrayOutput[ReceiptRuleBounceAction, ReceiptRuleBounceActionOutput] `pulumi:"bounceActions"`
	// If true, the rule will be enabled
	Enabled pulumix.Output[*bool] `pulumi:"enabled"`
	// A list of Lambda Action blocks. Documented below.
	LambdaActions pulumix.GArrayOutput[ReceiptRuleLambdaAction, ReceiptRuleLambdaActionOutput] `pulumi:"lambdaActions"`
	// The name of the rule
	Name pulumix.Output[string] `pulumi:"name"`
	// A list of email addresses
	Recipients pulumix.ArrayOutput[string] `pulumi:"recipients"`
	// The name of the rule set
	RuleSetName pulumix.Output[string] `pulumi:"ruleSetName"`
	// A list of S3 Action blocks. Documented below.
	S3Actions pulumix.GArrayOutput[ReceiptRuleS3Action, ReceiptRuleS3ActionOutput] `pulumi:"s3Actions"`
	// If true, incoming emails will be scanned for spam and viruses
	ScanEnabled pulumix.Output[*bool] `pulumi:"scanEnabled"`
	// A list of SNS Action blocks. Documented below.
	SnsActions pulumix.GArrayOutput[ReceiptRuleSnsAction, ReceiptRuleSnsActionOutput] `pulumi:"snsActions"`
	// A list of Stop Action blocks. Documented below.
	StopActions pulumix.GArrayOutput[ReceiptRuleStopAction, ReceiptRuleStopActionOutput] `pulumi:"stopActions"`
	// `Require` or `Optional`
	TlsPolicy pulumix.Output[string] `pulumi:"tlsPolicy"`
	// A list of WorkMail Action blocks. Documented below.
	WorkmailActions pulumix.GArrayOutput[ReceiptRuleWorkmailAction, ReceiptRuleWorkmailActionOutput] `pulumi:"workmailActions"`
}

// NewReceiptRule registers a new resource with the given unique name, arguments, and options.
func NewReceiptRule(ctx *pulumi.Context,
	name string, args *ReceiptRuleArgs, opts ...pulumi.ResourceOption) (*ReceiptRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuleSetName == nil {
		return nil, errors.New("invalid value for required argument 'RuleSetName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReceiptRule
	err := ctx.RegisterResource("aws:ses/receiptRule:ReceiptRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReceiptRule gets an existing ReceiptRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReceiptRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReceiptRuleState, opts ...pulumi.ResourceOption) (*ReceiptRule, error) {
	var resource ReceiptRule
	err := ctx.ReadResource("aws:ses/receiptRule:ReceiptRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReceiptRule resources.
type receiptRuleState struct {
	// A list of Add Header Action blocks. Documented below.
	AddHeaderActions []ReceiptRuleAddHeaderAction `pulumi:"addHeaderActions"`
	// The name of the rule to place this rule after
	After *string `pulumi:"after"`
	// The SES receipt rule ARN.
	Arn *string `pulumi:"arn"`
	// A list of Bounce Action blocks. Documented below.
	BounceActions []ReceiptRuleBounceAction `pulumi:"bounceActions"`
	// If true, the rule will be enabled
	Enabled *bool `pulumi:"enabled"`
	// A list of Lambda Action blocks. Documented below.
	LambdaActions []ReceiptRuleLambdaAction `pulumi:"lambdaActions"`
	// The name of the rule
	Name *string `pulumi:"name"`
	// A list of email addresses
	Recipients []string `pulumi:"recipients"`
	// The name of the rule set
	RuleSetName *string `pulumi:"ruleSetName"`
	// A list of S3 Action blocks. Documented below.
	S3Actions []ReceiptRuleS3Action `pulumi:"s3Actions"`
	// If true, incoming emails will be scanned for spam and viruses
	ScanEnabled *bool `pulumi:"scanEnabled"`
	// A list of SNS Action blocks. Documented below.
	SnsActions []ReceiptRuleSnsAction `pulumi:"snsActions"`
	// A list of Stop Action blocks. Documented below.
	StopActions []ReceiptRuleStopAction `pulumi:"stopActions"`
	// `Require` or `Optional`
	TlsPolicy *string `pulumi:"tlsPolicy"`
	// A list of WorkMail Action blocks. Documented below.
	WorkmailActions []ReceiptRuleWorkmailAction `pulumi:"workmailActions"`
}

type ReceiptRuleState struct {
	// A list of Add Header Action blocks. Documented below.
	AddHeaderActions pulumix.Input[[]*ReceiptRuleAddHeaderActionArgs]
	// The name of the rule to place this rule after
	After pulumix.Input[*string]
	// The SES receipt rule ARN.
	Arn pulumix.Input[*string]
	// A list of Bounce Action blocks. Documented below.
	BounceActions pulumix.Input[[]*ReceiptRuleBounceActionArgs]
	// If true, the rule will be enabled
	Enabled pulumix.Input[*bool]
	// A list of Lambda Action blocks. Documented below.
	LambdaActions pulumix.Input[[]*ReceiptRuleLambdaActionArgs]
	// The name of the rule
	Name pulumix.Input[*string]
	// A list of email addresses
	Recipients pulumix.Input[[]string]
	// The name of the rule set
	RuleSetName pulumix.Input[*string]
	// A list of S3 Action blocks. Documented below.
	S3Actions pulumix.Input[[]*ReceiptRuleS3ActionArgs]
	// If true, incoming emails will be scanned for spam and viruses
	ScanEnabled pulumix.Input[*bool]
	// A list of SNS Action blocks. Documented below.
	SnsActions pulumix.Input[[]*ReceiptRuleSnsActionArgs]
	// A list of Stop Action blocks. Documented below.
	StopActions pulumix.Input[[]*ReceiptRuleStopActionArgs]
	// `Require` or `Optional`
	TlsPolicy pulumix.Input[*string]
	// A list of WorkMail Action blocks. Documented below.
	WorkmailActions pulumix.Input[[]*ReceiptRuleWorkmailActionArgs]
}

func (ReceiptRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptRuleState)(nil)).Elem()
}

type receiptRuleArgs struct {
	// A list of Add Header Action blocks. Documented below.
	AddHeaderActions []ReceiptRuleAddHeaderAction `pulumi:"addHeaderActions"`
	// The name of the rule to place this rule after
	After *string `pulumi:"after"`
	// A list of Bounce Action blocks. Documented below.
	BounceActions []ReceiptRuleBounceAction `pulumi:"bounceActions"`
	// If true, the rule will be enabled
	Enabled *bool `pulumi:"enabled"`
	// A list of Lambda Action blocks. Documented below.
	LambdaActions []ReceiptRuleLambdaAction `pulumi:"lambdaActions"`
	// The name of the rule
	Name *string `pulumi:"name"`
	// A list of email addresses
	Recipients []string `pulumi:"recipients"`
	// The name of the rule set
	RuleSetName string `pulumi:"ruleSetName"`
	// A list of S3 Action blocks. Documented below.
	S3Actions []ReceiptRuleS3Action `pulumi:"s3Actions"`
	// If true, incoming emails will be scanned for spam and viruses
	ScanEnabled *bool `pulumi:"scanEnabled"`
	// A list of SNS Action blocks. Documented below.
	SnsActions []ReceiptRuleSnsAction `pulumi:"snsActions"`
	// A list of Stop Action blocks. Documented below.
	StopActions []ReceiptRuleStopAction `pulumi:"stopActions"`
	// `Require` or `Optional`
	TlsPolicy *string `pulumi:"tlsPolicy"`
	// A list of WorkMail Action blocks. Documented below.
	WorkmailActions []ReceiptRuleWorkmailAction `pulumi:"workmailActions"`
}

// The set of arguments for constructing a ReceiptRule resource.
type ReceiptRuleArgs struct {
	// A list of Add Header Action blocks. Documented below.
	AddHeaderActions pulumix.Input[[]*ReceiptRuleAddHeaderActionArgs]
	// The name of the rule to place this rule after
	After pulumix.Input[*string]
	// A list of Bounce Action blocks. Documented below.
	BounceActions pulumix.Input[[]*ReceiptRuleBounceActionArgs]
	// If true, the rule will be enabled
	Enabled pulumix.Input[*bool]
	// A list of Lambda Action blocks. Documented below.
	LambdaActions pulumix.Input[[]*ReceiptRuleLambdaActionArgs]
	// The name of the rule
	Name pulumix.Input[*string]
	// A list of email addresses
	Recipients pulumix.Input[[]string]
	// The name of the rule set
	RuleSetName pulumix.Input[string]
	// A list of S3 Action blocks. Documented below.
	S3Actions pulumix.Input[[]*ReceiptRuleS3ActionArgs]
	// If true, incoming emails will be scanned for spam and viruses
	ScanEnabled pulumix.Input[*bool]
	// A list of SNS Action blocks. Documented below.
	SnsActions pulumix.Input[[]*ReceiptRuleSnsActionArgs]
	// A list of Stop Action blocks. Documented below.
	StopActions pulumix.Input[[]*ReceiptRuleStopActionArgs]
	// `Require` or `Optional`
	TlsPolicy pulumix.Input[*string]
	// A list of WorkMail Action blocks. Documented below.
	WorkmailActions pulumix.Input[[]*ReceiptRuleWorkmailActionArgs]
}

func (ReceiptRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptRuleArgs)(nil)).Elem()
}

type ReceiptRuleOutput struct{ *pulumi.OutputState }

func (ReceiptRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRule)(nil)).Elem()
}

func (o ReceiptRuleOutput) ToReceiptRuleOutput() ReceiptRuleOutput {
	return o
}

func (o ReceiptRuleOutput) ToReceiptRuleOutputWithContext(ctx context.Context) ReceiptRuleOutput {
	return o
}

func (o ReceiptRuleOutput) ToOutput(ctx context.Context) pulumix.Output[ReceiptRule] {
	return pulumix.Output[ReceiptRule]{
		OutputState: o.OutputState,
	}
}

// A list of Add Header Action blocks. Documented below.
func (o ReceiptRuleOutput) AddHeaderActions() pulumix.GArrayOutput[ReceiptRuleAddHeaderAction, ReceiptRuleAddHeaderActionOutput] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.GArrayOutput[ReceiptRuleAddHeaderAction, ReceiptRuleAddHeaderActionOutput] {
		return v.AddHeaderActions
	})
	unwrapped := pulumix.Flatten[[]ReceiptRuleAddHeaderAction, pulumix.GArrayOutput[ReceiptRuleAddHeaderAction, ReceiptRuleAddHeaderActionOutput]](value)
	return pulumix.GArrayOutput[ReceiptRuleAddHeaderAction, ReceiptRuleAddHeaderActionOutput]{OutputState: unwrapped.OutputState}
}

// The name of the rule to place this rule after
func (o ReceiptRuleOutput) After() pulumix.Output[*string] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.Output[*string] { return v.After })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The SES receipt rule ARN.
func (o ReceiptRuleOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of Bounce Action blocks. Documented below.
func (o ReceiptRuleOutput) BounceActions() pulumix.GArrayOutput[ReceiptRuleBounceAction, ReceiptRuleBounceActionOutput] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.GArrayOutput[ReceiptRuleBounceAction, ReceiptRuleBounceActionOutput] {
		return v.BounceActions
	})
	unwrapped := pulumix.Flatten[[]ReceiptRuleBounceAction, pulumix.GArrayOutput[ReceiptRuleBounceAction, ReceiptRuleBounceActionOutput]](value)
	return pulumix.GArrayOutput[ReceiptRuleBounceAction, ReceiptRuleBounceActionOutput]{OutputState: unwrapped.OutputState}
}

// If true, the rule will be enabled
func (o ReceiptRuleOutput) Enabled() pulumix.Output[*bool] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.Output[*bool] { return v.Enabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A list of Lambda Action blocks. Documented below.
func (o ReceiptRuleOutput) LambdaActions() pulumix.GArrayOutput[ReceiptRuleLambdaAction, ReceiptRuleLambdaActionOutput] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.GArrayOutput[ReceiptRuleLambdaAction, ReceiptRuleLambdaActionOutput] {
		return v.LambdaActions
	})
	unwrapped := pulumix.Flatten[[]ReceiptRuleLambdaAction, pulumix.GArrayOutput[ReceiptRuleLambdaAction, ReceiptRuleLambdaActionOutput]](value)
	return pulumix.GArrayOutput[ReceiptRuleLambdaAction, ReceiptRuleLambdaActionOutput]{OutputState: unwrapped.OutputState}
}

// The name of the rule
func (o ReceiptRuleOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of email addresses
func (o ReceiptRuleOutput) Recipients() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.ArrayOutput[string] { return v.Recipients })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The name of the rule set
func (o ReceiptRuleOutput) RuleSetName() pulumix.Output[string] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.Output[string] { return v.RuleSetName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of S3 Action blocks. Documented below.
func (o ReceiptRuleOutput) S3Actions() pulumix.GArrayOutput[ReceiptRuleS3Action, ReceiptRuleS3ActionOutput] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.GArrayOutput[ReceiptRuleS3Action, ReceiptRuleS3ActionOutput] {
		return v.S3Actions
	})
	unwrapped := pulumix.Flatten[[]ReceiptRuleS3Action, pulumix.GArrayOutput[ReceiptRuleS3Action, ReceiptRuleS3ActionOutput]](value)
	return pulumix.GArrayOutput[ReceiptRuleS3Action, ReceiptRuleS3ActionOutput]{OutputState: unwrapped.OutputState}
}

// If true, incoming emails will be scanned for spam and viruses
func (o ReceiptRuleOutput) ScanEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.Output[*bool] { return v.ScanEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A list of SNS Action blocks. Documented below.
func (o ReceiptRuleOutput) SnsActions() pulumix.GArrayOutput[ReceiptRuleSnsAction, ReceiptRuleSnsActionOutput] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.GArrayOutput[ReceiptRuleSnsAction, ReceiptRuleSnsActionOutput] {
		return v.SnsActions
	})
	unwrapped := pulumix.Flatten[[]ReceiptRuleSnsAction, pulumix.GArrayOutput[ReceiptRuleSnsAction, ReceiptRuleSnsActionOutput]](value)
	return pulumix.GArrayOutput[ReceiptRuleSnsAction, ReceiptRuleSnsActionOutput]{OutputState: unwrapped.OutputState}
}

// A list of Stop Action blocks. Documented below.
func (o ReceiptRuleOutput) StopActions() pulumix.GArrayOutput[ReceiptRuleStopAction, ReceiptRuleStopActionOutput] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.GArrayOutput[ReceiptRuleStopAction, ReceiptRuleStopActionOutput] {
		return v.StopActions
	})
	unwrapped := pulumix.Flatten[[]ReceiptRuleStopAction, pulumix.GArrayOutput[ReceiptRuleStopAction, ReceiptRuleStopActionOutput]](value)
	return pulumix.GArrayOutput[ReceiptRuleStopAction, ReceiptRuleStopActionOutput]{OutputState: unwrapped.OutputState}
}

// `Require` or `Optional`
func (o ReceiptRuleOutput) TlsPolicy() pulumix.Output[string] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.Output[string] { return v.TlsPolicy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of WorkMail Action blocks. Documented below.
func (o ReceiptRuleOutput) WorkmailActions() pulumix.GArrayOutput[ReceiptRuleWorkmailAction, ReceiptRuleWorkmailActionOutput] {
	value := pulumix.Apply[ReceiptRule](o, func(v ReceiptRule) pulumix.GArrayOutput[ReceiptRuleWorkmailAction, ReceiptRuleWorkmailActionOutput] {
		return v.WorkmailActions
	})
	unwrapped := pulumix.Flatten[[]ReceiptRuleWorkmailAction, pulumix.GArrayOutput[ReceiptRuleWorkmailAction, ReceiptRuleWorkmailActionOutput]](value)
	return pulumix.GArrayOutput[ReceiptRuleWorkmailAction, ReceiptRuleWorkmailActionOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ReceiptRuleOutput{})
}
