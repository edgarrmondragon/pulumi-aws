// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an AWS CloudFront Origin Access Control, which is used by CloudFront Distributions with an Amazon S3 bucket as the origin.
//
// Read more about Origin Access Control in the [CloudFront Developer Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html).
type OriginAccessControl struct {
	pulumi.CustomResourceState

	// The description of the Origin Access Control. Defaults to "Managed by Pulumi" if omitted.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The current version of this Origin Access Control.
	Etag pulumix.Output[string] `pulumi:"etag"`
	// A name that identifies the Origin Access Control.
	Name pulumix.Output[string] `pulumi:"name"`
	// The type of origin that this Origin Access Control is for. Valid values are `s3`, and `mediastore`.
	OriginAccessControlOriginType pulumix.Output[string] `pulumi:"originAccessControlOriginType"`
	// Specifies which requests CloudFront signs. Specify `always` for the most common use case. Allowed values: `always`, `never`, and `no-override`.
	SigningBehavior pulumix.Output[string] `pulumi:"signingBehavior"`
	// Determines how CloudFront signs (authenticates) requests. The only valid value is `sigv4`.
	SigningProtocol pulumix.Output[string] `pulumi:"signingProtocol"`
}

// NewOriginAccessControl registers a new resource with the given unique name, arguments, and options.
func NewOriginAccessControl(ctx *pulumi.Context,
	name string, args *OriginAccessControlArgs, opts ...pulumi.ResourceOption) (*OriginAccessControl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OriginAccessControlOriginType == nil {
		return nil, errors.New("invalid value for required argument 'OriginAccessControlOriginType'")
	}
	if args.SigningBehavior == nil {
		return nil, errors.New("invalid value for required argument 'SigningBehavior'")
	}
	if args.SigningProtocol == nil {
		return nil, errors.New("invalid value for required argument 'SigningProtocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OriginAccessControl
	err := ctx.RegisterResource("aws:cloudfront/originAccessControl:OriginAccessControl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOriginAccessControl gets an existing OriginAccessControl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOriginAccessControl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OriginAccessControlState, opts ...pulumi.ResourceOption) (*OriginAccessControl, error) {
	var resource OriginAccessControl
	err := ctx.ReadResource("aws:cloudfront/originAccessControl:OriginAccessControl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OriginAccessControl resources.
type originAccessControlState struct {
	// The description of the Origin Access Control. Defaults to "Managed by Pulumi" if omitted.
	Description *string `pulumi:"description"`
	// The current version of this Origin Access Control.
	Etag *string `pulumi:"etag"`
	// A name that identifies the Origin Access Control.
	Name *string `pulumi:"name"`
	// The type of origin that this Origin Access Control is for. Valid values are `s3`, and `mediastore`.
	OriginAccessControlOriginType *string `pulumi:"originAccessControlOriginType"`
	// Specifies which requests CloudFront signs. Specify `always` for the most common use case. Allowed values: `always`, `never`, and `no-override`.
	SigningBehavior *string `pulumi:"signingBehavior"`
	// Determines how CloudFront signs (authenticates) requests. The only valid value is `sigv4`.
	SigningProtocol *string `pulumi:"signingProtocol"`
}

type OriginAccessControlState struct {
	// The description of the Origin Access Control. Defaults to "Managed by Pulumi" if omitted.
	Description pulumix.Input[*string]
	// The current version of this Origin Access Control.
	Etag pulumix.Input[*string]
	// A name that identifies the Origin Access Control.
	Name pulumix.Input[*string]
	// The type of origin that this Origin Access Control is for. Valid values are `s3`, and `mediastore`.
	OriginAccessControlOriginType pulumix.Input[*string]
	// Specifies which requests CloudFront signs. Specify `always` for the most common use case. Allowed values: `always`, `never`, and `no-override`.
	SigningBehavior pulumix.Input[*string]
	// Determines how CloudFront signs (authenticates) requests. The only valid value is `sigv4`.
	SigningProtocol pulumix.Input[*string]
}

func (OriginAccessControlState) ElementType() reflect.Type {
	return reflect.TypeOf((*originAccessControlState)(nil)).Elem()
}

type originAccessControlArgs struct {
	// The description of the Origin Access Control. Defaults to "Managed by Pulumi" if omitted.
	Description *string `pulumi:"description"`
	// A name that identifies the Origin Access Control.
	Name *string `pulumi:"name"`
	// The type of origin that this Origin Access Control is for. Valid values are `s3`, and `mediastore`.
	OriginAccessControlOriginType string `pulumi:"originAccessControlOriginType"`
	// Specifies which requests CloudFront signs. Specify `always` for the most common use case. Allowed values: `always`, `never`, and `no-override`.
	SigningBehavior string `pulumi:"signingBehavior"`
	// Determines how CloudFront signs (authenticates) requests. The only valid value is `sigv4`.
	SigningProtocol string `pulumi:"signingProtocol"`
}

// The set of arguments for constructing a OriginAccessControl resource.
type OriginAccessControlArgs struct {
	// The description of the Origin Access Control. Defaults to "Managed by Pulumi" if omitted.
	Description pulumix.Input[*string]
	// A name that identifies the Origin Access Control.
	Name pulumix.Input[*string]
	// The type of origin that this Origin Access Control is for. Valid values are `s3`, and `mediastore`.
	OriginAccessControlOriginType pulumix.Input[string]
	// Specifies which requests CloudFront signs. Specify `always` for the most common use case. Allowed values: `always`, `never`, and `no-override`.
	SigningBehavior pulumix.Input[string]
	// Determines how CloudFront signs (authenticates) requests. The only valid value is `sigv4`.
	SigningProtocol pulumix.Input[string]
}

func (OriginAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*originAccessControlArgs)(nil)).Elem()
}

type OriginAccessControlOutput struct{ *pulumi.OutputState }

func (OriginAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginAccessControl)(nil)).Elem()
}

func (o OriginAccessControlOutput) ToOriginAccessControlOutput() OriginAccessControlOutput {
	return o
}

func (o OriginAccessControlOutput) ToOriginAccessControlOutputWithContext(ctx context.Context) OriginAccessControlOutput {
	return o
}

func (o OriginAccessControlOutput) ToOutput(ctx context.Context) pulumix.Output[OriginAccessControl] {
	return pulumix.Output[OriginAccessControl]{
		OutputState: o.OutputState,
	}
}

// The description of the Origin Access Control. Defaults to "Managed by Pulumi" if omitted.
func (o OriginAccessControlOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[OriginAccessControl](o, func(v OriginAccessControl) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The current version of this Origin Access Control.
func (o OriginAccessControlOutput) Etag() pulumix.Output[string] {
	value := pulumix.Apply[OriginAccessControl](o, func(v OriginAccessControl) pulumix.Output[string] { return v.Etag })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A name that identifies the Origin Access Control.
func (o OriginAccessControlOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[OriginAccessControl](o, func(v OriginAccessControl) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of origin that this Origin Access Control is for. Valid values are `s3`, and `mediastore`.
func (o OriginAccessControlOutput) OriginAccessControlOriginType() pulumix.Output[string] {
	value := pulumix.Apply[OriginAccessControl](o, func(v OriginAccessControl) pulumix.Output[string] { return v.OriginAccessControlOriginType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies which requests CloudFront signs. Specify `always` for the most common use case. Allowed values: `always`, `never`, and `no-override`.
func (o OriginAccessControlOutput) SigningBehavior() pulumix.Output[string] {
	value := pulumix.Apply[OriginAccessControl](o, func(v OriginAccessControl) pulumix.Output[string] { return v.SigningBehavior })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Determines how CloudFront signs (authenticates) requests. The only valid value is `sigv4`.
func (o OriginAccessControlOutput) SigningProtocol() pulumix.Output[string] {
	value := pulumix.Apply[OriginAccessControl](o, func(v OriginAccessControl) pulumix.Output[string] { return v.SigningProtocol })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(OriginAccessControlOutput{})
}
