// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific Amazon Connect Instance.
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("aws:connect/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	// Returns information on a specific connect instance by alias
	InstanceAlias *string `pulumi:"instanceAlias"`
	// Returns information on a specific connect instance by id
	InstanceId *string `pulumi:"instanceId"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	// ARN of the instance.
	Arn                          string `pulumi:"arn"`
	AutoResolveBestVoicesEnabled bool   `pulumi:"autoResolveBestVoicesEnabled"`
	// Whether contact flow logs are enabled.
	ContactFlowLogsEnabled bool `pulumi:"contactFlowLogsEnabled"`
	// Whether contact lens is enabled.
	ContactLensEnabled bool `pulumi:"contactLensEnabled"`
	// When the instance was created.
	CreatedTime string `pulumi:"createdTime"`
	// Whether early media for outbound calls is enabled .
	EarlyMediaEnabled bool `pulumi:"earlyMediaEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Specifies The identity management type attached to the instance.
	IdentityManagementType string `pulumi:"identityManagementType"`
	// Whether inbound calls are enabled.
	InboundCallsEnabled bool   `pulumi:"inboundCallsEnabled"`
	InstanceAlias       string `pulumi:"instanceAlias"`
	InstanceId          string `pulumi:"instanceId"`
	// Whether multi-party calls/conference is enabled.
	MultiPartyConferenceEnabled bool `pulumi:"multiPartyConferenceEnabled"`
	// Whether outbound calls are enabled.
	OutboundCallsEnabled bool `pulumi:"outboundCallsEnabled"`
	// Service role of the instance.
	ServiceRole string `pulumi:"serviceRole"`
	// State of the instance.
	Status string `pulumi:"status"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	outputResult := pulumix.ApplyErr[*LookupInstanceArgs](args.ToOutput(), func(plainArgs *LookupInstanceArgs) (*LookupInstanceResult, error) {
		return LookupInstance(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupInstanceResultOutput, *LookupInstanceResult](outputResult)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	// Returns information on a specific connect instance by alias
	InstanceAlias pulumix.Input[*string] `pulumi:"instanceAlias"`
	// Returns information on a specific connect instance by id
	InstanceId pulumix.Input[*string] `pulumi:"instanceId"`
}

func (args LookupInstanceOutputArgs) ToOutput() pulumix.Output[*LookupInstanceArgs] {
	allArgs := pulumix.All(
		args.InstanceAlias.ToOutput(context.Background()).AsAny(),
		args.InstanceId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupInstanceArgs {
		return &LookupInstanceArgs{
			InstanceAlias: resolvedArgs[0].(*string),
			InstanceId:    resolvedArgs[1].(*string),
		}
	})
}

type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToOutput(context.Context) pulumix.Output[*LookupInstanceResult] {
	return pulumix.Output[*LookupInstanceResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupInstanceResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) string { return v.Arn })
}

func (o LookupInstanceResultOutput) AutoResolveBestVoicesEnabled() pulumix.Output[bool] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) bool { return v.AutoResolveBestVoicesEnabled })
}

func (o LookupInstanceResultOutput) ContactFlowLogsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) bool { return v.ContactFlowLogsEnabled })
}

func (o LookupInstanceResultOutput) ContactLensEnabled() pulumix.Output[bool] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) bool { return v.ContactLensEnabled })
}

func (o LookupInstanceResultOutput) CreatedTime() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) string { return v.CreatedTime })
}

func (o LookupInstanceResultOutput) EarlyMediaEnabled() pulumix.Output[bool] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) bool { return v.EarlyMediaEnabled })
}

func (o LookupInstanceResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) string { return v.Id })
}

func (o LookupInstanceResultOutput) IdentityManagementType() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) string { return v.IdentityManagementType })
}

func (o LookupInstanceResultOutput) InboundCallsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) bool { return v.InboundCallsEnabled })
}

func (o LookupInstanceResultOutput) InstanceAlias() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) string { return v.InstanceAlias })
}

func (o LookupInstanceResultOutput) InstanceId() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) string { return v.InstanceId })
}

func (o LookupInstanceResultOutput) MultiPartyConferenceEnabled() pulumix.Output[bool] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) bool { return v.MultiPartyConferenceEnabled })
}

func (o LookupInstanceResultOutput) OutboundCallsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) bool { return v.OutboundCallsEnabled })
}

func (o LookupInstanceResultOutput) ServiceRole() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) string { return v.ServiceRole })
}

func (o LookupInstanceResultOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceResult](o, func(v *LookupInstanceResult) string { return v.Status })
}
