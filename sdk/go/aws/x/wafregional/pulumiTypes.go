// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ByteMatchSetByteMatchTuple struct {
	// Settings for the ByteMatchTuple. FieldToMatch documented below.
	FieldToMatch ByteMatchSetByteMatchTupleFieldToMatch `pulumi:"fieldToMatch"`
	// Within the portion of a web request that you want to search.
	PositionalConstraint string `pulumi:"positionalConstraint"`
	// The value that you want AWS WAF to search for. The maximum length of the value is 50 bytes.
	TargetString *string `pulumi:"targetString"`
	// The formatting way for web request.
	//
	// FieldToMatch(field_to_match) support following:
	TextTransformation string `pulumi:"textTransformation"`
}

type ByteMatchSetByteMatchTupleArgs struct {
	// Settings for the ByteMatchTuple. FieldToMatch documented below.
	FieldToMatch pulumix.Input[*ByteMatchSetByteMatchTupleFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Within the portion of a web request that you want to search.
	PositionalConstraint pulumix.Input[string] `pulumi:"positionalConstraint"`
	// The value that you want AWS WAF to search for. The maximum length of the value is 50 bytes.
	TargetString pulumix.Input[*string] `pulumi:"targetString"`
	// The formatting way for web request.
	//
	// FieldToMatch(field_to_match) support following:
	TextTransformation pulumix.Input[string] `pulumi:"textTransformation"`
}

func (ByteMatchSetByteMatchTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ByteMatchSetByteMatchTuple)(nil)).Elem()
}

func (i ByteMatchSetByteMatchTupleArgs) ToByteMatchSetByteMatchTupleOutput() ByteMatchSetByteMatchTupleOutput {
	return i.ToByteMatchSetByteMatchTupleOutputWithContext(context.Background())
}

func (i ByteMatchSetByteMatchTupleArgs) ToByteMatchSetByteMatchTupleOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByteMatchSetByteMatchTupleOutput)
}

func (i *ByteMatchSetByteMatchTupleArgs) ToOutput(ctx context.Context) pulumix.Output[*ByteMatchSetByteMatchTupleArgs] {
	return pulumix.Val(i)
}

type ByteMatchSetByteMatchTupleOutput struct{ *pulumi.OutputState }

func (ByteMatchSetByteMatchTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ByteMatchSetByteMatchTuple)(nil)).Elem()
}

func (o ByteMatchSetByteMatchTupleOutput) ToByteMatchSetByteMatchTupleOutput() ByteMatchSetByteMatchTupleOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleOutput) ToByteMatchSetByteMatchTupleOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleOutput) ToOutput(ctx context.Context) pulumix.Output[ByteMatchSetByteMatchTuple] {
	return pulumix.Output[ByteMatchSetByteMatchTuple]{
		OutputState: o.OutputState,
	}
}

// Settings for the ByteMatchTuple. FieldToMatch documented below.
func (o ByteMatchSetByteMatchTupleOutput) FieldToMatch() pulumix.GPtrOutput[ByteMatchSetByteMatchTupleFieldToMatch, ByteMatchSetByteMatchTupleFieldToMatchOutput] {
	value := pulumix.Apply[ByteMatchSetByteMatchTuple](o, func(v ByteMatchSetByteMatchTuple) ByteMatchSetByteMatchTupleFieldToMatch { return v.FieldToMatch })
	return pulumix.GPtrOutput[ByteMatchSetByteMatchTupleFieldToMatch, ByteMatchSetByteMatchTupleFieldToMatchOutput]{OutputState: value.OutputState}
}

// Within the portion of a web request that you want to search.
func (o ByteMatchSetByteMatchTupleOutput) PositionalConstraint() pulumix.Output[string] {
	return pulumix.Apply[ByteMatchSetByteMatchTuple](o, func(v ByteMatchSetByteMatchTuple) string { return v.PositionalConstraint })
}

// The value that you want AWS WAF to search for. The maximum length of the value is 50 bytes.
func (o ByteMatchSetByteMatchTupleOutput) TargetString() pulumix.Output[*string] {
	return pulumix.Apply[ByteMatchSetByteMatchTuple](o, func(v ByteMatchSetByteMatchTuple) *string { return v.TargetString })
}

// The formatting way for web request.
//
// FieldToMatch(field_to_match) support following:
func (o ByteMatchSetByteMatchTupleOutput) TextTransformation() pulumix.Output[string] {
	return pulumix.Apply[ByteMatchSetByteMatchTuple](o, func(v ByteMatchSetByteMatchTuple) string { return v.TextTransformation })
}

type ByteMatchSetByteMatchTupleFieldToMatch struct {
	// When the value of Type is HEADER, enter the name of the header that you want AWS WAF to search, for example, User-Agent or Referer. If the value of Type is any other value, omit Data.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	Type string `pulumi:"type"`
}

type ByteMatchSetByteMatchTupleFieldToMatchArgs struct {
	// When the value of Type is HEADER, enter the name of the header that you want AWS WAF to search, for example, User-Agent or Referer. If the value of Type is any other value, omit Data.
	Data pulumix.Input[*string] `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (ByteMatchSetByteMatchTupleFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ByteMatchSetByteMatchTupleFieldToMatch)(nil)).Elem()
}

func (i ByteMatchSetByteMatchTupleFieldToMatchArgs) ToByteMatchSetByteMatchTupleFieldToMatchOutput() ByteMatchSetByteMatchTupleFieldToMatchOutput {
	return i.ToByteMatchSetByteMatchTupleFieldToMatchOutputWithContext(context.Background())
}

func (i ByteMatchSetByteMatchTupleFieldToMatchArgs) ToByteMatchSetByteMatchTupleFieldToMatchOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByteMatchSetByteMatchTupleFieldToMatchOutput)
}

func (i *ByteMatchSetByteMatchTupleFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*ByteMatchSetByteMatchTupleFieldToMatchArgs] {
	return pulumix.Val(i)
}

type ByteMatchSetByteMatchTupleFieldToMatchOutput struct{ *pulumi.OutputState }

func (ByteMatchSetByteMatchTupleFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ByteMatchSetByteMatchTupleFieldToMatch)(nil)).Elem()
}

func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) ToByteMatchSetByteMatchTupleFieldToMatchOutput() ByteMatchSetByteMatchTupleFieldToMatchOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) ToByteMatchSetByteMatchTupleFieldToMatchOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleFieldToMatchOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[ByteMatchSetByteMatchTupleFieldToMatch] {
	return pulumix.Output[ByteMatchSetByteMatchTupleFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When the value of Type is HEADER, enter the name of the header that you want AWS WAF to search, for example, User-Agent or Referer. If the value of Type is any other value, omit Data.
func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) Data() pulumix.Output[*string] {
	return pulumix.Apply[ByteMatchSetByteMatchTupleFieldToMatch](o, func(v ByteMatchSetByteMatchTupleFieldToMatch) *string { return v.Data })
}

// The part of the web request that you want AWS WAF to search for a specified string.
func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[ByteMatchSetByteMatchTupleFieldToMatch](o, func(v ByteMatchSetByteMatchTupleFieldToMatch) string { return v.Type })
}

type GeoMatchSetGeoMatchConstraint struct {
	// The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
	Type string `pulumi:"type"`
	// The country that you want AWS WAF to search for.
	// This is the two-letter country code, e.g., `US`, `CA`, `RU`, `CN`, etc.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
	Value string `pulumi:"value"`
}

type GeoMatchSetGeoMatchConstraintArgs struct {
	// The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
	Type pulumix.Input[string] `pulumi:"type"`
	// The country that you want AWS WAF to search for.
	// This is the two-letter country code, e.g., `US`, `CA`, `RU`, `CN`, etc.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (GeoMatchSetGeoMatchConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoMatchSetGeoMatchConstraint)(nil)).Elem()
}

func (i GeoMatchSetGeoMatchConstraintArgs) ToGeoMatchSetGeoMatchConstraintOutput() GeoMatchSetGeoMatchConstraintOutput {
	return i.ToGeoMatchSetGeoMatchConstraintOutputWithContext(context.Background())
}

func (i GeoMatchSetGeoMatchConstraintArgs) ToGeoMatchSetGeoMatchConstraintOutputWithContext(ctx context.Context) GeoMatchSetGeoMatchConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoMatchSetGeoMatchConstraintOutput)
}

func (i *GeoMatchSetGeoMatchConstraintArgs) ToOutput(ctx context.Context) pulumix.Output[*GeoMatchSetGeoMatchConstraintArgs] {
	return pulumix.Val(i)
}

type GeoMatchSetGeoMatchConstraintOutput struct{ *pulumi.OutputState }

func (GeoMatchSetGeoMatchConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoMatchSetGeoMatchConstraint)(nil)).Elem()
}

func (o GeoMatchSetGeoMatchConstraintOutput) ToGeoMatchSetGeoMatchConstraintOutput() GeoMatchSetGeoMatchConstraintOutput {
	return o
}

func (o GeoMatchSetGeoMatchConstraintOutput) ToGeoMatchSetGeoMatchConstraintOutputWithContext(ctx context.Context) GeoMatchSetGeoMatchConstraintOutput {
	return o
}

func (o GeoMatchSetGeoMatchConstraintOutput) ToOutput(ctx context.Context) pulumix.Output[GeoMatchSetGeoMatchConstraint] {
	return pulumix.Output[GeoMatchSetGeoMatchConstraint]{
		OutputState: o.OutputState,
	}
}

// The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
func (o GeoMatchSetGeoMatchConstraintOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GeoMatchSetGeoMatchConstraint](o, func(v GeoMatchSetGeoMatchConstraint) string { return v.Type })
}

// The country that you want AWS WAF to search for.
// This is the two-letter country code, e.g., `US`, `CA`, `RU`, `CN`, etc.
// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
func (o GeoMatchSetGeoMatchConstraintOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[GeoMatchSetGeoMatchConstraint](o, func(v GeoMatchSetGeoMatchConstraint) string { return v.Value })
}

type IpSetIpSetDescriptor struct {
	// The string like IPV4 or IPV6.
	Type string `pulumi:"type"`
	// The CIDR notation.
	Value string `pulumi:"value"`
}

type IpSetIpSetDescriptorArgs struct {
	// The string like IPV4 or IPV6.
	Type pulumix.Input[string] `pulumi:"type"`
	// The CIDR notation.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (IpSetIpSetDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetIpSetDescriptor)(nil)).Elem()
}

func (i IpSetIpSetDescriptorArgs) ToIpSetIpSetDescriptorOutput() IpSetIpSetDescriptorOutput {
	return i.ToIpSetIpSetDescriptorOutputWithContext(context.Background())
}

func (i IpSetIpSetDescriptorArgs) ToIpSetIpSetDescriptorOutputWithContext(ctx context.Context) IpSetIpSetDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetIpSetDescriptorOutput)
}

func (i *IpSetIpSetDescriptorArgs) ToOutput(ctx context.Context) pulumix.Output[*IpSetIpSetDescriptorArgs] {
	return pulumix.Val(i)
}

type IpSetIpSetDescriptorOutput struct{ *pulumi.OutputState }

func (IpSetIpSetDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetIpSetDescriptor)(nil)).Elem()
}

func (o IpSetIpSetDescriptorOutput) ToIpSetIpSetDescriptorOutput() IpSetIpSetDescriptorOutput {
	return o
}

func (o IpSetIpSetDescriptorOutput) ToIpSetIpSetDescriptorOutputWithContext(ctx context.Context) IpSetIpSetDescriptorOutput {
	return o
}

func (o IpSetIpSetDescriptorOutput) ToOutput(ctx context.Context) pulumix.Output[IpSetIpSetDescriptor] {
	return pulumix.Output[IpSetIpSetDescriptor]{
		OutputState: o.OutputState,
	}
}

// The string like IPV4 or IPV6.
func (o IpSetIpSetDescriptorOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[IpSetIpSetDescriptor](o, func(v IpSetIpSetDescriptor) string { return v.Type })
}

// The CIDR notation.
func (o IpSetIpSetDescriptorOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[IpSetIpSetDescriptor](o, func(v IpSetIpSetDescriptor) string { return v.Value })
}

type RateBasedRulePredicate struct {
	// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
	DataId string `pulumi:"dataId"`
	// Set this to `false` if you want to allow, block, or count requests
	// based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
	// For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
	// If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
	Negated bool `pulumi:"negated"`
	// The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
	Type string `pulumi:"type"`
}

type RateBasedRulePredicateArgs struct {
	// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
	DataId pulumix.Input[string] `pulumi:"dataId"`
	// Set this to `false` if you want to allow, block, or count requests
	// based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
	// For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
	// If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
	Negated pulumix.Input[bool] `pulumi:"negated"`
	// The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RateBasedRulePredicateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateBasedRulePredicate)(nil)).Elem()
}

func (i RateBasedRulePredicateArgs) ToRateBasedRulePredicateOutput() RateBasedRulePredicateOutput {
	return i.ToRateBasedRulePredicateOutputWithContext(context.Background())
}

func (i RateBasedRulePredicateArgs) ToRateBasedRulePredicateOutputWithContext(ctx context.Context) RateBasedRulePredicateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateBasedRulePredicateOutput)
}

func (i *RateBasedRulePredicateArgs) ToOutput(ctx context.Context) pulumix.Output[*RateBasedRulePredicateArgs] {
	return pulumix.Val(i)
}

type RateBasedRulePredicateOutput struct{ *pulumi.OutputState }

func (RateBasedRulePredicateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateBasedRulePredicate)(nil)).Elem()
}

func (o RateBasedRulePredicateOutput) ToRateBasedRulePredicateOutput() RateBasedRulePredicateOutput {
	return o
}

func (o RateBasedRulePredicateOutput) ToRateBasedRulePredicateOutputWithContext(ctx context.Context) RateBasedRulePredicateOutput {
	return o
}

func (o RateBasedRulePredicateOutput) ToOutput(ctx context.Context) pulumix.Output[RateBasedRulePredicate] {
	return pulumix.Output[RateBasedRulePredicate]{
		OutputState: o.OutputState,
	}
}

// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
func (o RateBasedRulePredicateOutput) DataId() pulumix.Output[string] {
	return pulumix.Apply[RateBasedRulePredicate](o, func(v RateBasedRulePredicate) string { return v.DataId })
}

// Set this to `false` if you want to allow, block, or count requests
// based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
// For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
// If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
func (o RateBasedRulePredicateOutput) Negated() pulumix.Output[bool] {
	return pulumix.Apply[RateBasedRulePredicate](o, func(v RateBasedRulePredicate) bool { return v.Negated })
}

// The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
func (o RateBasedRulePredicateOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RateBasedRulePredicate](o, func(v RateBasedRulePredicate) string { return v.Type })
}

type RegexMatchSetRegexMatchTuple struct {
	// The part of a web request that you want to search, such as a specified header or a query string.
	FieldToMatch RegexMatchSetRegexMatchTupleFieldToMatch `pulumi:"fieldToMatch"`
	// The ID of a Regex Pattern Set.
	RegexPatternSetId string `pulumi:"regexPatternSetId"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation string `pulumi:"textTransformation"`
}

type RegexMatchSetRegexMatchTupleArgs struct {
	// The part of a web request that you want to search, such as a specified header or a query string.
	FieldToMatch pulumix.Input[*RegexMatchSetRegexMatchTupleFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// The ID of a Regex Pattern Set.
	RegexPatternSetId pulumix.Input[string] `pulumi:"regexPatternSetId"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation pulumix.Input[string] `pulumi:"textTransformation"`
}

func (RegexMatchSetRegexMatchTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexMatchSetRegexMatchTuple)(nil)).Elem()
}

func (i RegexMatchSetRegexMatchTupleArgs) ToRegexMatchSetRegexMatchTupleOutput() RegexMatchSetRegexMatchTupleOutput {
	return i.ToRegexMatchSetRegexMatchTupleOutputWithContext(context.Background())
}

func (i RegexMatchSetRegexMatchTupleArgs) ToRegexMatchSetRegexMatchTupleOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexMatchSetRegexMatchTupleOutput)
}

func (i *RegexMatchSetRegexMatchTupleArgs) ToOutput(ctx context.Context) pulumix.Output[*RegexMatchSetRegexMatchTupleArgs] {
	return pulumix.Val(i)
}

type RegexMatchSetRegexMatchTupleOutput struct{ *pulumi.OutputState }

func (RegexMatchSetRegexMatchTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexMatchSetRegexMatchTuple)(nil)).Elem()
}

func (o RegexMatchSetRegexMatchTupleOutput) ToRegexMatchSetRegexMatchTupleOutput() RegexMatchSetRegexMatchTupleOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleOutput) ToRegexMatchSetRegexMatchTupleOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleOutput) ToOutput(ctx context.Context) pulumix.Output[RegexMatchSetRegexMatchTuple] {
	return pulumix.Output[RegexMatchSetRegexMatchTuple]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want to search, such as a specified header or a query string.
func (o RegexMatchSetRegexMatchTupleOutput) FieldToMatch() pulumix.GPtrOutput[RegexMatchSetRegexMatchTupleFieldToMatch, RegexMatchSetRegexMatchTupleFieldToMatchOutput] {
	value := pulumix.Apply[RegexMatchSetRegexMatchTuple](o, func(v RegexMatchSetRegexMatchTuple) RegexMatchSetRegexMatchTupleFieldToMatch { return v.FieldToMatch })
	return pulumix.GPtrOutput[RegexMatchSetRegexMatchTupleFieldToMatch, RegexMatchSetRegexMatchTupleFieldToMatchOutput]{OutputState: value.OutputState}
}

// The ID of a Regex Pattern Set.
func (o RegexMatchSetRegexMatchTupleOutput) RegexPatternSetId() pulumix.Output[string] {
	return pulumix.Apply[RegexMatchSetRegexMatchTuple](o, func(v RegexMatchSetRegexMatchTuple) string { return v.RegexPatternSetId })
}

// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
// for all supported values.
func (o RegexMatchSetRegexMatchTupleOutput) TextTransformation() pulumix.Output[string] {
	return pulumix.Apply[RegexMatchSetRegexMatchTuple](o, func(v RegexMatchSetRegexMatchTuple) string { return v.TextTransformation })
}

type RegexMatchSetRegexMatchTupleFieldToMatch struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type string `pulumi:"type"`
}

type RegexMatchSetRegexMatchTupleFieldToMatchArgs struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data pulumix.Input[*string] `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RegexMatchSetRegexMatchTupleFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexMatchSetRegexMatchTupleFieldToMatch)(nil)).Elem()
}

func (i RegexMatchSetRegexMatchTupleFieldToMatchArgs) ToRegexMatchSetRegexMatchTupleFieldToMatchOutput() RegexMatchSetRegexMatchTupleFieldToMatchOutput {
	return i.ToRegexMatchSetRegexMatchTupleFieldToMatchOutputWithContext(context.Background())
}

func (i RegexMatchSetRegexMatchTupleFieldToMatchArgs) ToRegexMatchSetRegexMatchTupleFieldToMatchOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexMatchSetRegexMatchTupleFieldToMatchOutput)
}

func (i *RegexMatchSetRegexMatchTupleFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RegexMatchSetRegexMatchTupleFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RegexMatchSetRegexMatchTupleFieldToMatchOutput struct{ *pulumi.OutputState }

func (RegexMatchSetRegexMatchTupleFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexMatchSetRegexMatchTupleFieldToMatch)(nil)).Elem()
}

func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) ToRegexMatchSetRegexMatchTupleFieldToMatchOutput() RegexMatchSetRegexMatchTupleFieldToMatchOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) ToRegexMatchSetRegexMatchTupleFieldToMatchOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleFieldToMatchOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RegexMatchSetRegexMatchTupleFieldToMatch] {
	return pulumix.Output[RegexMatchSetRegexMatchTupleFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
// If `type` is any other value, omit this field.
func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) Data() pulumix.Output[*string] {
	return pulumix.Apply[RegexMatchSetRegexMatchTupleFieldToMatch](o, func(v RegexMatchSetRegexMatchTupleFieldToMatch) *string { return v.Data })
}

// The part of the web request that you want AWS WAF to search for a specified string.
// e.g., `HEADER`, `METHOD` or `BODY`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
// for all supported values.
func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RegexMatchSetRegexMatchTupleFieldToMatch](o, func(v RegexMatchSetRegexMatchTupleFieldToMatch) string { return v.Type })
}

type RuleGroupActivatedRule struct {
	// Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
	Action RuleGroupActivatedRuleAction `pulumi:"action"`
	// Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// The ID of a rule
	RuleId string `pulumi:"ruleId"`
	// e.g., `BLOCK`, `ALLOW`, or `COUNT`
	Type *string `pulumi:"type"`
}

type RuleGroupActivatedRuleArgs struct {
	// Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
	Action pulumix.Input[*RuleGroupActivatedRuleActionArgs] `pulumi:"action"`
	// Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The ID of a rule
	RuleId pulumix.Input[string] `pulumi:"ruleId"`
	// e.g., `BLOCK`, `ALLOW`, or `COUNT`
	Type pulumix.Input[*string] `pulumi:"type"`
}

func (RuleGroupActivatedRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActivatedRule)(nil)).Elem()
}

func (i RuleGroupActivatedRuleArgs) ToRuleGroupActivatedRuleOutput() RuleGroupActivatedRuleOutput {
	return i.ToRuleGroupActivatedRuleOutputWithContext(context.Background())
}

func (i RuleGroupActivatedRuleArgs) ToRuleGroupActivatedRuleOutputWithContext(ctx context.Context) RuleGroupActivatedRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupActivatedRuleOutput)
}

func (i *RuleGroupActivatedRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupActivatedRuleArgs] {
	return pulumix.Val(i)
}

type RuleGroupActivatedRuleOutput struct{ *pulumi.OutputState }

func (RuleGroupActivatedRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActivatedRule)(nil)).Elem()
}

func (o RuleGroupActivatedRuleOutput) ToRuleGroupActivatedRuleOutput() RuleGroupActivatedRuleOutput {
	return o
}

func (o RuleGroupActivatedRuleOutput) ToRuleGroupActivatedRuleOutputWithContext(ctx context.Context) RuleGroupActivatedRuleOutput {
	return o
}

func (o RuleGroupActivatedRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupActivatedRule] {
	return pulumix.Output[RuleGroupActivatedRule]{
		OutputState: o.OutputState,
	}
}

// Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
func (o RuleGroupActivatedRuleOutput) Action() pulumix.GPtrOutput[RuleGroupActivatedRuleAction, RuleGroupActivatedRuleActionOutput] {
	value := pulumix.Apply[RuleGroupActivatedRule](o, func(v RuleGroupActivatedRule) RuleGroupActivatedRuleAction { return v.Action })
	return pulumix.GPtrOutput[RuleGroupActivatedRuleAction, RuleGroupActivatedRuleActionOutput]{OutputState: value.OutputState}
}

// Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
func (o RuleGroupActivatedRuleOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupActivatedRule](o, func(v RuleGroupActivatedRule) int { return v.Priority })
}

// The ID of a rule
func (o RuleGroupActivatedRuleOutput) RuleId() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupActivatedRule](o, func(v RuleGroupActivatedRule) string { return v.RuleId })
}

// e.g., `BLOCK`, `ALLOW`, or `COUNT`
func (o RuleGroupActivatedRuleOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupActivatedRule](o, func(v RuleGroupActivatedRule) *string { return v.Type })
}

type RuleGroupActivatedRuleAction struct {
	// e.g., `BLOCK`, `ALLOW`, or `COUNT`
	Type string `pulumi:"type"`
}

type RuleGroupActivatedRuleActionArgs struct {
	// e.g., `BLOCK`, `ALLOW`, or `COUNT`
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupActivatedRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActivatedRuleAction)(nil)).Elem()
}

func (i RuleGroupActivatedRuleActionArgs) ToRuleGroupActivatedRuleActionOutput() RuleGroupActivatedRuleActionOutput {
	return i.ToRuleGroupActivatedRuleActionOutputWithContext(context.Background())
}

func (i RuleGroupActivatedRuleActionArgs) ToRuleGroupActivatedRuleActionOutputWithContext(ctx context.Context) RuleGroupActivatedRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupActivatedRuleActionOutput)
}

func (i *RuleGroupActivatedRuleActionArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupActivatedRuleActionArgs] {
	return pulumix.Val(i)
}

type RuleGroupActivatedRuleActionOutput struct{ *pulumi.OutputState }

func (RuleGroupActivatedRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActivatedRuleAction)(nil)).Elem()
}

func (o RuleGroupActivatedRuleActionOutput) ToRuleGroupActivatedRuleActionOutput() RuleGroupActivatedRuleActionOutput {
	return o
}

func (o RuleGroupActivatedRuleActionOutput) ToRuleGroupActivatedRuleActionOutputWithContext(ctx context.Context) RuleGroupActivatedRuleActionOutput {
	return o
}

func (o RuleGroupActivatedRuleActionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupActivatedRuleAction] {
	return pulumix.Output[RuleGroupActivatedRuleAction]{
		OutputState: o.OutputState,
	}
}

// e.g., `BLOCK`, `ALLOW`, or `COUNT`
func (o RuleGroupActivatedRuleActionOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupActivatedRuleAction](o, func(v RuleGroupActivatedRuleAction) string { return v.Type })
}

type RulePredicate struct {
	DataId  string `pulumi:"dataId"`
	Negated bool   `pulumi:"negated"`
	Type    string `pulumi:"type"`
}

type RulePredicateArgs struct {
	DataId  pulumix.Input[string] `pulumi:"dataId"`
	Negated pulumix.Input[bool]   `pulumi:"negated"`
	Type    pulumix.Input[string] `pulumi:"type"`
}

func (RulePredicateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePredicate)(nil)).Elem()
}

func (i RulePredicateArgs) ToRulePredicateOutput() RulePredicateOutput {
	return i.ToRulePredicateOutputWithContext(context.Background())
}

func (i RulePredicateArgs) ToRulePredicateOutputWithContext(ctx context.Context) RulePredicateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulePredicateOutput)
}

func (i *RulePredicateArgs) ToOutput(ctx context.Context) pulumix.Output[*RulePredicateArgs] {
	return pulumix.Val(i)
}

type RulePredicateOutput struct{ *pulumi.OutputState }

func (RulePredicateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePredicate)(nil)).Elem()
}

func (o RulePredicateOutput) ToRulePredicateOutput() RulePredicateOutput {
	return o
}

func (o RulePredicateOutput) ToRulePredicateOutputWithContext(ctx context.Context) RulePredicateOutput {
	return o
}

func (o RulePredicateOutput) ToOutput(ctx context.Context) pulumix.Output[RulePredicate] {
	return pulumix.Output[RulePredicate]{
		OutputState: o.OutputState,
	}
}

func (o RulePredicateOutput) DataId() pulumix.Output[string] {
	return pulumix.Apply[RulePredicate](o, func(v RulePredicate) string { return v.DataId })
}

func (o RulePredicateOutput) Negated() pulumix.Output[bool] {
	return pulumix.Apply[RulePredicate](o, func(v RulePredicate) bool { return v.Negated })
}

func (o RulePredicateOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RulePredicate](o, func(v RulePredicate) string { return v.Type })
}

type SizeConstraintSetSizeConstraint struct {
	// The type of comparison you want to perform.
	// e.g., `EQ`, `NE`, `LT`, `GT`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// Specifies where in a web request to look for the size constraint.
	FieldToMatch SizeConstraintSetSizeConstraintFieldToMatch `pulumi:"fieldToMatch"`
	// The size in bytes that you want to compare against the size of the specified `fieldToMatch`.
	// Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
	Size int `pulumi:"size"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
	// for all supported values.
	// **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
	TextTransformation string `pulumi:"textTransformation"`
}

type SizeConstraintSetSizeConstraintArgs struct {
	// The type of comparison you want to perform.
	// e.g., `EQ`, `NE`, `LT`, `GT`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
	ComparisonOperator pulumix.Input[string] `pulumi:"comparisonOperator"`
	// Specifies where in a web request to look for the size constraint.
	FieldToMatch pulumix.Input[*SizeConstraintSetSizeConstraintFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// The size in bytes that you want to compare against the size of the specified `fieldToMatch`.
	// Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
	Size pulumix.Input[int] `pulumi:"size"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
	// for all supported values.
	// **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
	TextTransformation pulumix.Input[string] `pulumi:"textTransformation"`
}

func (SizeConstraintSetSizeConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConstraintSetSizeConstraint)(nil)).Elem()
}

func (i SizeConstraintSetSizeConstraintArgs) ToSizeConstraintSetSizeConstraintOutput() SizeConstraintSetSizeConstraintOutput {
	return i.ToSizeConstraintSetSizeConstraintOutputWithContext(context.Background())
}

func (i SizeConstraintSetSizeConstraintArgs) ToSizeConstraintSetSizeConstraintOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConstraintSetSizeConstraintOutput)
}

func (i *SizeConstraintSetSizeConstraintArgs) ToOutput(ctx context.Context) pulumix.Output[*SizeConstraintSetSizeConstraintArgs] {
	return pulumix.Val(i)
}

type SizeConstraintSetSizeConstraintOutput struct{ *pulumi.OutputState }

func (SizeConstraintSetSizeConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConstraintSetSizeConstraint)(nil)).Elem()
}

func (o SizeConstraintSetSizeConstraintOutput) ToSizeConstraintSetSizeConstraintOutput() SizeConstraintSetSizeConstraintOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintOutput) ToSizeConstraintSetSizeConstraintOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintOutput) ToOutput(ctx context.Context) pulumix.Output[SizeConstraintSetSizeConstraint] {
	return pulumix.Output[SizeConstraintSetSizeConstraint]{
		OutputState: o.OutputState,
	}
}

// The type of comparison you want to perform.
// e.g., `EQ`, `NE`, `LT`, `GT`.
// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
func (o SizeConstraintSetSizeConstraintOutput) ComparisonOperator() pulumix.Output[string] {
	return pulumix.Apply[SizeConstraintSetSizeConstraint](o, func(v SizeConstraintSetSizeConstraint) string { return v.ComparisonOperator })
}

// Specifies where in a web request to look for the size constraint.
func (o SizeConstraintSetSizeConstraintOutput) FieldToMatch() pulumix.GPtrOutput[SizeConstraintSetSizeConstraintFieldToMatch, SizeConstraintSetSizeConstraintFieldToMatchOutput] {
	value := pulumix.Apply[SizeConstraintSetSizeConstraint](o, func(v SizeConstraintSetSizeConstraint) SizeConstraintSetSizeConstraintFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[SizeConstraintSetSizeConstraintFieldToMatch, SizeConstraintSetSizeConstraintFieldToMatchOutput]{OutputState: value.OutputState}
}

// The size in bytes that you want to compare against the size of the specified `fieldToMatch`.
// Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
func (o SizeConstraintSetSizeConstraintOutput) Size() pulumix.Output[int] {
	return pulumix.Apply[SizeConstraintSetSizeConstraint](o, func(v SizeConstraintSetSizeConstraint) int { return v.Size })
}

// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
// for all supported values.
// **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
func (o SizeConstraintSetSizeConstraintOutput) TextTransformation() pulumix.Output[string] {
	return pulumix.Apply[SizeConstraintSetSizeConstraint](o, func(v SizeConstraintSetSizeConstraint) string { return v.TextTransformation })
}

type SizeConstraintSetSizeConstraintFieldToMatch struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type string `pulumi:"type"`
}

type SizeConstraintSetSizeConstraintFieldToMatchArgs struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data pulumix.Input[*string] `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (SizeConstraintSetSizeConstraintFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConstraintSetSizeConstraintFieldToMatch)(nil)).Elem()
}

func (i SizeConstraintSetSizeConstraintFieldToMatchArgs) ToSizeConstraintSetSizeConstraintFieldToMatchOutput() SizeConstraintSetSizeConstraintFieldToMatchOutput {
	return i.ToSizeConstraintSetSizeConstraintFieldToMatchOutputWithContext(context.Background())
}

func (i SizeConstraintSetSizeConstraintFieldToMatchArgs) ToSizeConstraintSetSizeConstraintFieldToMatchOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConstraintSetSizeConstraintFieldToMatchOutput)
}

func (i *SizeConstraintSetSizeConstraintFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*SizeConstraintSetSizeConstraintFieldToMatchArgs] {
	return pulumix.Val(i)
}

type SizeConstraintSetSizeConstraintFieldToMatchOutput struct{ *pulumi.OutputState }

func (SizeConstraintSetSizeConstraintFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConstraintSetSizeConstraintFieldToMatch)(nil)).Elem()
}

func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) ToSizeConstraintSetSizeConstraintFieldToMatchOutput() SizeConstraintSetSizeConstraintFieldToMatchOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) ToSizeConstraintSetSizeConstraintFieldToMatchOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintFieldToMatchOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[SizeConstraintSetSizeConstraintFieldToMatch] {
	return pulumix.Output[SizeConstraintSetSizeConstraintFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
// If `type` is any other value, omit this field.
func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) Data() pulumix.Output[*string] {
	return pulumix.Apply[SizeConstraintSetSizeConstraintFieldToMatch](o, func(v SizeConstraintSetSizeConstraintFieldToMatch) *string { return v.Data })
}

// The part of the web request that you want AWS WAF to search for a specified string.
// e.g., `HEADER`, `METHOD` or `BODY`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
// for all supported values.
func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[SizeConstraintSetSizeConstraintFieldToMatch](o, func(v SizeConstraintSetSizeConstraintFieldToMatch) string { return v.Type })
}

type SqlInjectionMatchSetSqlInjectionMatchTuple struct {
	// Specifies where in a web request to look for snippets of malicious SQL code.
	FieldToMatch SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation string `pulumi:"textTransformation"`
}

type SqlInjectionMatchSetSqlInjectionMatchTupleArgs struct {
	// Specifies where in a web request to look for snippets of malicious SQL code.
	FieldToMatch pulumix.Input[*SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation pulumix.Input[string] `pulumi:"textTransformation"`
}

func (SqlInjectionMatchSetSqlInjectionMatchTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTuple)(nil)).Elem()
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleArgs) ToSqlInjectionMatchSetSqlInjectionMatchTupleOutput() SqlInjectionMatchSetSqlInjectionMatchTupleOutput {
	return i.ToSqlInjectionMatchSetSqlInjectionMatchTupleOutputWithContext(context.Background())
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleArgs) ToSqlInjectionMatchSetSqlInjectionMatchTupleOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlInjectionMatchSetSqlInjectionMatchTupleOutput)
}

func (i *SqlInjectionMatchSetSqlInjectionMatchTupleArgs) ToOutput(ctx context.Context) pulumix.Output[*SqlInjectionMatchSetSqlInjectionMatchTupleArgs] {
	return pulumix.Val(i)
}

type SqlInjectionMatchSetSqlInjectionMatchTupleOutput struct{ *pulumi.OutputState }

func (SqlInjectionMatchSetSqlInjectionMatchTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTuple)(nil)).Elem()
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleOutput() SqlInjectionMatchSetSqlInjectionMatchTupleOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) ToOutput(ctx context.Context) pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTuple] {
	return pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTuple]{
		OutputState: o.OutputState,
	}
}

// Specifies where in a web request to look for snippets of malicious SQL code.
func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) FieldToMatch() pulumix.GPtrOutput[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch, SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput] {
	value := pulumix.Apply[SqlInjectionMatchSetSqlInjectionMatchTuple](o, func(v SqlInjectionMatchSetSqlInjectionMatchTuple) SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch, SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
// for all supported values.
func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) TextTransformation() pulumix.Output[string] {
	return pulumix.Apply[SqlInjectionMatchSetSqlInjectionMatchTuple](o, func(v SqlInjectionMatchSetSqlInjectionMatchTuple) string { return v.TextTransformation })
}

type SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
	// for all supported values.
	Type string `pulumi:"type"`
}

type SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data pulumix.Input[*string] `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
	// for all supported values.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch)(nil)).Elem()
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs) ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput() SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput {
	return i.ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutputWithContext(context.Background())
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs) ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput)
}

func (i *SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs] {
	return pulumix.Val(i)
}

type SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput struct{ *pulumi.OutputState }

func (SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch)(nil)).Elem()
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput() SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch] {
	return pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
// If `type` is any other value, omit this field.
func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) Data() pulumix.Output[*string] {
	return pulumix.Apply[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch](o, func(v SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch) *string { return v.Data })
}

// The part of the web request that you want AWS WAF to search for a specified string.
// e.g., `HEADER`, `METHOD` or `BODY`.
// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
// for all supported values.
func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch](o, func(v SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch) string { return v.Type })
}

type WebAclDefaultAction struct {
	// Specifies how you want AWS WAF Regional to respond to requests that match the settings in a ruleE.g., `ALLOW`, `BLOCK` or `COUNT`
	Type string `pulumi:"type"`
}

type WebAclDefaultActionArgs struct {
	// Specifies how you want AWS WAF Regional to respond to requests that match the settings in a ruleE.g., `ALLOW`, `BLOCK` or `COUNT`
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclDefaultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultAction)(nil)).Elem()
}

func (i WebAclDefaultActionArgs) ToWebAclDefaultActionOutput() WebAclDefaultActionOutput {
	return i.ToWebAclDefaultActionOutputWithContext(context.Background())
}

func (i WebAclDefaultActionArgs) ToWebAclDefaultActionOutputWithContext(ctx context.Context) WebAclDefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionOutput)
}

func (i *WebAclDefaultActionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultActionArgs] {
	return pulumix.Val(i)
}

type WebAclDefaultActionOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultAction)(nil)).Elem()
}

func (o WebAclDefaultActionOutput) ToWebAclDefaultActionOutput() WebAclDefaultActionOutput {
	return o
}

func (o WebAclDefaultActionOutput) ToWebAclDefaultActionOutputWithContext(ctx context.Context) WebAclDefaultActionOutput {
	return o
}

func (o WebAclDefaultActionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultAction] {
	return pulumix.Output[WebAclDefaultAction]{
		OutputState: o.OutputState,
	}
}

// Specifies how you want AWS WAF Regional to respond to requests that match the settings in a ruleE.g., `ALLOW`, `BLOCK` or `COUNT`
func (o WebAclDefaultActionOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclDefaultAction](o, func(v WebAclDefaultAction) string { return v.Type })
}

type WebAclLoggingConfiguration struct {
	// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
	LogDestination string `pulumi:"logDestination"`
	// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
	RedactedFields *WebAclLoggingConfigurationRedactedFields `pulumi:"redactedFields"`
}

type WebAclLoggingConfigurationArgs struct {
	// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
	LogDestination pulumix.Input[string] `pulumi:"logDestination"`
	// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
	RedactedFields pulumix.Input[*WebAclLoggingConfigurationRedactedFieldsArgs] `pulumi:"redactedFields"`
}

func (WebAclLoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfiguration)(nil)).Elem()
}

func (i WebAclLoggingConfigurationArgs) ToWebAclLoggingConfigurationOutput() WebAclLoggingConfigurationOutput {
	return i.ToWebAclLoggingConfigurationOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationArgs) ToWebAclLoggingConfigurationOutputWithContext(ctx context.Context) WebAclLoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationOutput)
}

func (i *WebAclLoggingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfiguration)(nil)).Elem()
}

func (o WebAclLoggingConfigurationOutput) ToWebAclLoggingConfigurationOutput() WebAclLoggingConfigurationOutput {
	return o
}

func (o WebAclLoggingConfigurationOutput) ToWebAclLoggingConfigurationOutputWithContext(ctx context.Context) WebAclLoggingConfigurationOutput {
	return o
}

func (o WebAclLoggingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfiguration] {
	return pulumix.Output[WebAclLoggingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
func (o WebAclLoggingConfigurationOutput) LogDestination() pulumix.Output[string] {
	return pulumix.Apply[WebAclLoggingConfiguration](o, func(v WebAclLoggingConfiguration) string { return v.LogDestination })
}

// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
func (o WebAclLoggingConfigurationOutput) RedactedFields() pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFields, WebAclLoggingConfigurationRedactedFieldsOutput] {
	value := pulumix.Apply[WebAclLoggingConfiguration](o, func(v WebAclLoggingConfiguration) *WebAclLoggingConfigurationRedactedFields { return v.RedactedFields })
	return pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFields, WebAclLoggingConfigurationRedactedFieldsOutput]{OutputState: value.OutputState}
}

type WebAclLoggingConfigurationRedactedFields struct {
	// Set of configuration blocks for fields to redact. Detailed below.
	FieldToMatches []WebAclLoggingConfigurationRedactedFieldsFieldToMatch `pulumi:"fieldToMatches"`
}

type WebAclLoggingConfigurationRedactedFieldsArgs struct {
	// Set of configuration blocks for fields to redact. Detailed below.
	FieldToMatches pulumix.Input[[]*WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs] `pulumi:"fieldToMatches"`
}

func (WebAclLoggingConfigurationRedactedFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFields)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldsArgs) ToWebAclLoggingConfigurationRedactedFieldsOutput() WebAclLoggingConfigurationRedactedFieldsOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldsOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldsArgs) ToWebAclLoggingConfigurationRedactedFieldsOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldsOutput)
}

func (i *WebAclLoggingConfigurationRedactedFieldsArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationRedactedFieldsArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationRedactedFieldsOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFields)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldsOutput) ToWebAclLoggingConfigurationRedactedFieldsOutput() WebAclLoggingConfigurationRedactedFieldsOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsOutput) ToWebAclLoggingConfigurationRedactedFieldsOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFields] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFields]{
		OutputState: o.OutputState,
	}
}

// Set of configuration blocks for fields to redact. Detailed below.
func (o WebAclLoggingConfigurationRedactedFieldsOutput) FieldToMatches() pulumix.GArrayOutput[WebAclLoggingConfigurationRedactedFieldsFieldToMatch, WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput] {
	value := pulumix.Apply[WebAclLoggingConfigurationRedactedFields](o, func(v WebAclLoggingConfigurationRedactedFields) []WebAclLoggingConfigurationRedactedFieldsFieldToMatch {
		return v.FieldToMatches
	})
	return pulumix.GArrayOutput[WebAclLoggingConfigurationRedactedFieldsFieldToMatch, WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput]{OutputState: value.OutputState}
}

type WebAclLoggingConfigurationRedactedFieldsFieldToMatch struct {
	// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
	Type string `pulumi:"type"`
}

type WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs struct {
	// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
	Data pulumix.Input[*string] `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldsFieldToMatch)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput() WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput)
}

func (i *WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldsFieldToMatch)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput() WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFieldsFieldToMatch] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFieldsFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) Data() pulumix.Output[*string] {
	return pulumix.Apply[WebAclLoggingConfigurationRedactedFieldsFieldToMatch](o, func(v WebAclLoggingConfigurationRedactedFieldsFieldToMatch) *string { return v.Data })
}

// The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclLoggingConfigurationRedactedFieldsFieldToMatch](o, func(v WebAclLoggingConfigurationRedactedFieldsFieldToMatch) string { return v.Type })
}

type WebAclRule struct {
	// Configuration block of the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Not used if `type` is `GROUP`. Detailed below.
	Action *WebAclRuleAction `pulumi:"action"`
	// Configuration block of the override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Only used if `type` is `GROUP`. Detailed below.
	OverrideAction *WebAclRuleOverrideAction `pulumi:"overrideAction"`
	// Specifies the order in which the rules in a WebACL are evaluated.
	// Rules with a lower value are evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// ID of the associated WAF (Regional) rule (e.g., `wafregional.Rule`). WAF (Global) rules cannot be used.
	RuleId string `pulumi:"ruleId"`
	// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
	Type *string `pulumi:"type"`
}

type WebAclRuleArgs struct {
	// Configuration block of the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Not used if `type` is `GROUP`. Detailed below.
	Action pulumix.Input[*WebAclRuleActionArgs] `pulumi:"action"`
	// Configuration block of the override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Only used if `type` is `GROUP`. Detailed below.
	OverrideAction pulumix.Input[*WebAclRuleOverrideActionArgs] `pulumi:"overrideAction"`
	// Specifies the order in which the rules in a WebACL are evaluated.
	// Rules with a lower value are evaluated before rules with a higher value.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// ID of the associated WAF (Regional) rule (e.g., `wafregional.Rule`). WAF (Global) rules cannot be used.
	RuleId pulumix.Input[string] `pulumi:"ruleId"`
	// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
	Type pulumix.Input[*string] `pulumi:"type"`
}

func (WebAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRule)(nil)).Elem()
}

func (i WebAclRuleArgs) ToWebAclRuleOutput() WebAclRuleOutput {
	return i.ToWebAclRuleOutputWithContext(context.Background())
}

func (i WebAclRuleArgs) ToWebAclRuleOutputWithContext(ctx context.Context) WebAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOutput)
}

func (i *WebAclRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleArgs] {
	return pulumix.Val(i)
}

type WebAclRuleOutput struct{ *pulumi.OutputState }

func (WebAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRule)(nil)).Elem()
}

func (o WebAclRuleOutput) ToWebAclRuleOutput() WebAclRuleOutput {
	return o
}

func (o WebAclRuleOutput) ToWebAclRuleOutputWithContext(ctx context.Context) WebAclRuleOutput {
	return o
}

func (o WebAclRuleOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRule] {
	return pulumix.Output[WebAclRule]{
		OutputState: o.OutputState,
	}
}

// Configuration block of the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Not used if `type` is `GROUP`. Detailed below.
func (o WebAclRuleOutput) Action() pulumix.GPtrOutput[WebAclRuleAction, WebAclRuleActionOutput] {
	value := pulumix.Apply[WebAclRule](o, func(v WebAclRule) *WebAclRuleAction { return v.Action })
	return pulumix.GPtrOutput[WebAclRuleAction, WebAclRuleActionOutput]{OutputState: value.OutputState}
}

// Configuration block of the override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Only used if `type` is `GROUP`. Detailed below.
func (o WebAclRuleOutput) OverrideAction() pulumix.GPtrOutput[WebAclRuleOverrideAction, WebAclRuleOverrideActionOutput] {
	value := pulumix.Apply[WebAclRule](o, func(v WebAclRule) *WebAclRuleOverrideAction { return v.OverrideAction })
	return pulumix.GPtrOutput[WebAclRuleOverrideAction, WebAclRuleOverrideActionOutput]{OutputState: value.OutputState}
}

// Specifies the order in which the rules in a WebACL are evaluated.
// Rules with a lower value are evaluated before rules with a higher value.
func (o WebAclRuleOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[WebAclRule](o, func(v WebAclRule) int { return v.Priority })
}

// ID of the associated WAF (Regional) rule (e.g., `wafregional.Rule`). WAF (Global) rules cannot be used.
func (o WebAclRuleOutput) RuleId() pulumix.Output[string] {
	return pulumix.Apply[WebAclRule](o, func(v WebAclRule) string { return v.RuleId })
}

// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
func (o WebAclRuleOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRule](o, func(v WebAclRule) *string { return v.Type })
}

type WebAclRuleAction struct {
	// Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for `action` are `ALLOW`, `BLOCK` or `COUNT`. Valid values for `overrideAction` are `COUNT` and `NONE`.
	Type string `pulumi:"type"`
}

type WebAclRuleActionArgs struct {
	// Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for `action` are `ALLOW`, `BLOCK` or `COUNT`. Valid values for `overrideAction` are `COUNT` and `NONE`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleAction)(nil)).Elem()
}

func (i WebAclRuleActionArgs) ToWebAclRuleActionOutput() WebAclRuleActionOutput {
	return i.ToWebAclRuleActionOutputWithContext(context.Background())
}

func (i WebAclRuleActionArgs) ToWebAclRuleActionOutputWithContext(ctx context.Context) WebAclRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionOutput)
}

func (i *WebAclRuleActionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleAction)(nil)).Elem()
}

func (o WebAclRuleActionOutput) ToWebAclRuleActionOutput() WebAclRuleActionOutput {
	return o
}

func (o WebAclRuleActionOutput) ToWebAclRuleActionOutputWithContext(ctx context.Context) WebAclRuleActionOutput {
	return o
}

func (o WebAclRuleActionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleAction] {
	return pulumix.Output[WebAclRuleAction]{
		OutputState: o.OutputState,
	}
}

// Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for `action` are `ALLOW`, `BLOCK` or `COUNT`. Valid values for `overrideAction` are `COUNT` and `NONE`.
func (o WebAclRuleActionOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleAction](o, func(v WebAclRuleAction) string { return v.Type })
}

type WebAclRuleOverrideAction struct {
	// Specifies how you want AWS WAF Regional to respond to requests that match the settings in a ruleE.g., `ALLOW`, `BLOCK` or `COUNT`
	Type string `pulumi:"type"`
}

type WebAclRuleOverrideActionArgs struct {
	// Specifies how you want AWS WAF Regional to respond to requests that match the settings in a ruleE.g., `ALLOW`, `BLOCK` or `COUNT`
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclRuleOverrideActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideAction)(nil)).Elem()
}

func (i WebAclRuleOverrideActionArgs) ToWebAclRuleOverrideActionOutput() WebAclRuleOverrideActionOutput {
	return i.ToWebAclRuleOverrideActionOutputWithContext(context.Background())
}

func (i WebAclRuleOverrideActionArgs) ToWebAclRuleOverrideActionOutputWithContext(ctx context.Context) WebAclRuleOverrideActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOverrideActionOutput)
}

func (i *WebAclRuleOverrideActionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleOverrideActionArgs] {
	return pulumix.Val(i)
}

type WebAclRuleOverrideActionOutput struct{ *pulumi.OutputState }

func (WebAclRuleOverrideActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideAction)(nil)).Elem()
}

func (o WebAclRuleOverrideActionOutput) ToWebAclRuleOverrideActionOutput() WebAclRuleOverrideActionOutput {
	return o
}

func (o WebAclRuleOverrideActionOutput) ToWebAclRuleOverrideActionOutputWithContext(ctx context.Context) WebAclRuleOverrideActionOutput {
	return o
}

func (o WebAclRuleOverrideActionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleOverrideAction] {
	return pulumix.Output[WebAclRuleOverrideAction]{
		OutputState: o.OutputState,
	}
}

// Specifies how you want AWS WAF Regional to respond to requests that match the settings in a ruleE.g., `ALLOW`, `BLOCK` or `COUNT`
func (o WebAclRuleOverrideActionOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleOverrideAction](o, func(v WebAclRuleOverrideAction) string { return v.Type })
}

type XssMatchSetXssMatchTuple struct {
	// Specifies where in a web request to look for cross-site scripting attacks.
	FieldToMatch XssMatchSetXssMatchTupleFieldToMatch `pulumi:"fieldToMatch"`
	// Which text transformation, if any, to perform on the web request before inspecting the request for cross-site scripting attacks.
	TextTransformation string `pulumi:"textTransformation"`
}

type XssMatchSetXssMatchTupleArgs struct {
	// Specifies where in a web request to look for cross-site scripting attacks.
	FieldToMatch pulumix.Input[*XssMatchSetXssMatchTupleFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Which text transformation, if any, to perform on the web request before inspecting the request for cross-site scripting attacks.
	TextTransformation pulumix.Input[string] `pulumi:"textTransformation"`
}

func (XssMatchSetXssMatchTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XssMatchSetXssMatchTuple)(nil)).Elem()
}

func (i XssMatchSetXssMatchTupleArgs) ToXssMatchSetXssMatchTupleOutput() XssMatchSetXssMatchTupleOutput {
	return i.ToXssMatchSetXssMatchTupleOutputWithContext(context.Background())
}

func (i XssMatchSetXssMatchTupleArgs) ToXssMatchSetXssMatchTupleOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XssMatchSetXssMatchTupleOutput)
}

func (i *XssMatchSetXssMatchTupleArgs) ToOutput(ctx context.Context) pulumix.Output[*XssMatchSetXssMatchTupleArgs] {
	return pulumix.Val(i)
}

type XssMatchSetXssMatchTupleOutput struct{ *pulumi.OutputState }

func (XssMatchSetXssMatchTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XssMatchSetXssMatchTuple)(nil)).Elem()
}

func (o XssMatchSetXssMatchTupleOutput) ToXssMatchSetXssMatchTupleOutput() XssMatchSetXssMatchTupleOutput {
	return o
}

func (o XssMatchSetXssMatchTupleOutput) ToXssMatchSetXssMatchTupleOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleOutput {
	return o
}

func (o XssMatchSetXssMatchTupleOutput) ToOutput(ctx context.Context) pulumix.Output[XssMatchSetXssMatchTuple] {
	return pulumix.Output[XssMatchSetXssMatchTuple]{
		OutputState: o.OutputState,
	}
}

// Specifies where in a web request to look for cross-site scripting attacks.
func (o XssMatchSetXssMatchTupleOutput) FieldToMatch() pulumix.GPtrOutput[XssMatchSetXssMatchTupleFieldToMatch, XssMatchSetXssMatchTupleFieldToMatchOutput] {
	value := pulumix.Apply[XssMatchSetXssMatchTuple](o, func(v XssMatchSetXssMatchTuple) XssMatchSetXssMatchTupleFieldToMatch { return v.FieldToMatch })
	return pulumix.GPtrOutput[XssMatchSetXssMatchTupleFieldToMatch, XssMatchSetXssMatchTupleFieldToMatchOutput]{OutputState: value.OutputState}
}

// Which text transformation, if any, to perform on the web request before inspecting the request for cross-site scripting attacks.
func (o XssMatchSetXssMatchTupleOutput) TextTransformation() pulumix.Output[string] {
	return pulumix.Apply[XssMatchSetXssMatchTuple](o, func(v XssMatchSetXssMatchTuple) string { return v.TextTransformation })
}

type XssMatchSetXssMatchTupleFieldToMatch struct {
	// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
	Type string `pulumi:"type"`
}

type XssMatchSetXssMatchTupleFieldToMatchArgs struct {
	// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
	Data pulumix.Input[*string] `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
	Type pulumix.Input[string] `pulumi:"type"`
}

func (XssMatchSetXssMatchTupleFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XssMatchSetXssMatchTupleFieldToMatch)(nil)).Elem()
}

func (i XssMatchSetXssMatchTupleFieldToMatchArgs) ToXssMatchSetXssMatchTupleFieldToMatchOutput() XssMatchSetXssMatchTupleFieldToMatchOutput {
	return i.ToXssMatchSetXssMatchTupleFieldToMatchOutputWithContext(context.Background())
}

func (i XssMatchSetXssMatchTupleFieldToMatchArgs) ToXssMatchSetXssMatchTupleFieldToMatchOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XssMatchSetXssMatchTupleFieldToMatchOutput)
}

func (i *XssMatchSetXssMatchTupleFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*XssMatchSetXssMatchTupleFieldToMatchArgs] {
	return pulumix.Val(i)
}

type XssMatchSetXssMatchTupleFieldToMatchOutput struct{ *pulumi.OutputState }

func (XssMatchSetXssMatchTupleFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XssMatchSetXssMatchTupleFieldToMatch)(nil)).Elem()
}

func (o XssMatchSetXssMatchTupleFieldToMatchOutput) ToXssMatchSetXssMatchTupleFieldToMatchOutput() XssMatchSetXssMatchTupleFieldToMatchOutput {
	return o
}

func (o XssMatchSetXssMatchTupleFieldToMatchOutput) ToXssMatchSetXssMatchTupleFieldToMatchOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleFieldToMatchOutput {
	return o
}

func (o XssMatchSetXssMatchTupleFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[XssMatchSetXssMatchTupleFieldToMatch] {
	return pulumix.Output[XssMatchSetXssMatchTupleFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
func (o XssMatchSetXssMatchTupleFieldToMatchOutput) Data() pulumix.Output[*string] {
	return pulumix.Apply[XssMatchSetXssMatchTupleFieldToMatch](o, func(v XssMatchSetXssMatchTupleFieldToMatch) *string { return v.Data })
}

// The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
func (o XssMatchSetXssMatchTupleFieldToMatchOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[XssMatchSetXssMatchTupleFieldToMatch](o, func(v XssMatchSetXssMatchTupleFieldToMatch) string { return v.Type })
}

func init() {
	pulumi.RegisterOutputType(ByteMatchSetByteMatchTupleOutput{})
	pulumi.RegisterOutputType(ByteMatchSetByteMatchTupleFieldToMatchOutput{})
	pulumi.RegisterOutputType(GeoMatchSetGeoMatchConstraintOutput{})
	pulumi.RegisterOutputType(IpSetIpSetDescriptorOutput{})
	pulumi.RegisterOutputType(RateBasedRulePredicateOutput{})
	pulumi.RegisterOutputType(RegexMatchSetRegexMatchTupleOutput{})
	pulumi.RegisterOutputType(RegexMatchSetRegexMatchTupleFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupActivatedRuleOutput{})
	pulumi.RegisterOutputType(RuleGroupActivatedRuleActionOutput{})
	pulumi.RegisterOutputType(RulePredicateOutput{})
	pulumi.RegisterOutputType(SizeConstraintSetSizeConstraintOutput{})
	pulumi.RegisterOutputType(SizeConstraintSetSizeConstraintFieldToMatchOutput{})
	pulumi.RegisterOutputType(SqlInjectionMatchSetSqlInjectionMatchTupleOutput{})
	pulumi.RegisterOutputType(SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldsOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclRuleOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionOutput{})
	pulumi.RegisterOutputType(WebAclRuleOverrideActionOutput{})
	pulumi.RegisterOutputType(XssMatchSetXssMatchTupleOutput{})
	pulumi.RegisterOutputType(XssMatchSetXssMatchTupleFieldToMatchOutput{})
}
