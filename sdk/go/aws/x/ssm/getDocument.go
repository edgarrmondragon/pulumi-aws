// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the contents of the specified Systems Manager document.
func LookupDocument(ctx *pulumi.Context, args *LookupDocumentArgs, opts ...pulumi.InvokeOption) (*LookupDocumentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDocumentResult
	err := ctx.Invoke("aws:ssm/getDocument:getDocument", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDocument.
type LookupDocumentArgs struct {
	// Returns the document in the specified format. The document format can be either `JSON`, `YAML` and `TEXT`. JSON is the default format.
	DocumentFormat *string `pulumi:"documentFormat"`
	// Document version for which you want information.
	DocumentVersion *string `pulumi:"documentVersion"`
	// Name of the Systems Manager document.
	Name string `pulumi:"name"`
}

// A collection of values returned by getDocument.
type LookupDocumentResult struct {
	// ARN of the document. If the document is an AWS managed document, this value will be set to the name of the document instead.
	Arn string `pulumi:"arn"`
	// Contents of the document.
	Content        string  `pulumi:"content"`
	DocumentFormat *string `pulumi:"documentFormat"`
	// Type of the document.
	DocumentType    string  `pulumi:"documentType"`
	DocumentVersion *string `pulumi:"documentVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupDocumentOutput(ctx *pulumi.Context, args LookupDocumentOutputArgs, opts ...pulumi.InvokeOption) LookupDocumentResultOutput {
	outputResult := pulumix.ApplyErr[*LookupDocumentArgs](args.ToOutput(), func(plainArgs *LookupDocumentArgs) (*LookupDocumentResult, error) {
		return LookupDocument(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupDocumentResultOutput, *LookupDocumentResult](outputResult)
}

// A collection of arguments for invoking getDocument.
type LookupDocumentOutputArgs struct {
	// Returns the document in the specified format. The document format can be either `JSON`, `YAML` and `TEXT`. JSON is the default format.
	DocumentFormat pulumix.Input[*string] `pulumi:"documentFormat"`
	// Document version for which you want information.
	DocumentVersion pulumix.Input[*string] `pulumi:"documentVersion"`
	// Name of the Systems Manager document.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args LookupDocumentOutputArgs) ToOutput() pulumix.Output[*LookupDocumentArgs] {
	allArgs := pulumix.All(
		args.DocumentFormat.ToOutput(context.Background()).AsAny(),
		args.DocumentVersion.ToOutput(context.Background()).AsAny(),
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupDocumentArgs {
		return &LookupDocumentArgs{
			DocumentFormat:  resolvedArgs[0].(*string),
			DocumentVersion: resolvedArgs[1].(*string),
			Name:            resolvedArgs[2].(string),
		}
	})
}

type LookupDocumentResultOutput struct{ *pulumi.OutputState }

func (LookupDocumentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDocumentResult)(nil)).Elem()
}

func (o LookupDocumentResultOutput) ToOutput(context.Context) pulumix.Output[*LookupDocumentResult] {
	return pulumix.Output[*LookupDocumentResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupDocumentResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupDocumentResult](o, func(v *LookupDocumentResult) string { return v.Arn })
}

func (o LookupDocumentResultOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[*LookupDocumentResult](o, func(v *LookupDocumentResult) string { return v.Content })
}

func (o LookupDocumentResultOutput) DocumentFormat() pulumix.Output[*string] {
	return pulumix.Apply[*LookupDocumentResult](o, func(v *LookupDocumentResult) *string { return v.DocumentFormat })
}

func (o LookupDocumentResultOutput) DocumentType() pulumix.Output[string] {
	return pulumix.Apply[*LookupDocumentResult](o, func(v *LookupDocumentResult) string { return v.DocumentType })
}

func (o LookupDocumentResultOutput) DocumentVersion() pulumix.Output[*string] {
	return pulumix.Apply[*LookupDocumentResult](o, func(v *LookupDocumentResult) *string { return v.DocumentVersion })
}

func (o LookupDocumentResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupDocumentResult](o, func(v *LookupDocumentResult) string { return v.Id })
}

func (o LookupDocumentResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupDocumentResult](o, func(v *LookupDocumentResult) string { return v.Name })
}
