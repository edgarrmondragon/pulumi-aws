// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information for multiple EC2 Transit Gateway Route Table Propagations, such as their identifiers.
func GetRouteTablePropagations(ctx *pulumi.Context, args *GetRouteTablePropagationsArgs, opts ...pulumi.InvokeOption) (*GetRouteTablePropagationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRouteTablePropagationsResult
	err := ctx.Invoke("aws:ec2transitgateway/getRouteTablePropagations:getRouteTablePropagations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteTablePropagations.
type GetRouteTablePropagationsArgs struct {
	// Custom filter block as described below.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Filters []GetRouteTablePropagationsFilter `pulumi:"filters"`
	// Identifier of EC2 Transit Gateway Route Table.
	//
	// The following arguments are optional:
	TransitGatewayRouteTableId string `pulumi:"transitGatewayRouteTableId"`
}

// A collection of values returned by getRouteTablePropagations.
type GetRouteTablePropagationsResult struct {
	Filters []GetRouteTablePropagationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of Transit Gateway Route Table Association identifiers.
	Ids                        []string `pulumi:"ids"`
	TransitGatewayRouteTableId string   `pulumi:"transitGatewayRouteTableId"`
}

func GetRouteTablePropagationsOutput(ctx *pulumi.Context, args GetRouteTablePropagationsOutputArgs, opts ...pulumi.InvokeOption) GetRouteTablePropagationsResultOutput {
	outputResult := pulumix.ApplyErr[*GetRouteTablePropagationsArgs](args.ToOutput(), func(plainArgs *GetRouteTablePropagationsArgs) (*GetRouteTablePropagationsResult, error) {
		return GetRouteTablePropagations(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetRouteTablePropagationsResultOutput, *GetRouteTablePropagationsResult](outputResult)
}

// A collection of arguments for invoking getRouteTablePropagations.
type GetRouteTablePropagationsOutputArgs struct {
	// Custom filter block as described below.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Filters pulumix.Input[[]*GetRouteTablePropagationsFilterArgs] `pulumi:"filters"`
	// Identifier of EC2 Transit Gateway Route Table.
	//
	// The following arguments are optional:
	TransitGatewayRouteTableId pulumix.Input[string] `pulumi:"transitGatewayRouteTableId"`
}

func (args GetRouteTablePropagationsOutputArgs) ToOutput() pulumix.Output[*GetRouteTablePropagationsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.TransitGatewayRouteTableId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetRouteTablePropagationsArgs {
		return &GetRouteTablePropagationsArgs{
			Filters:                    resolvedArgs[0].([]GetRouteTablePropagationsFilter),
			TransitGatewayRouteTableId: resolvedArgs[1].(string),
		}
	})
}

type GetRouteTablePropagationsResultOutput struct{ *pulumi.OutputState }

func (GetRouteTablePropagationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablePropagationsResult)(nil)).Elem()
}

func (o GetRouteTablePropagationsResultOutput) ToOutput(context.Context) pulumix.Output[*GetRouteTablePropagationsResult] {
	return pulumix.Output[*GetRouteTablePropagationsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetRouteTablePropagationsResultOutput) Filters() pulumix.GArrayOutput[GetRouteTablePropagationsFilter, GetRouteTablePropagationsFilterOutput] {
	value := pulumix.Apply[*GetRouteTablePropagationsResult](o, func(v *GetRouteTablePropagationsResult) []GetRouteTablePropagationsFilter { return v.Filters })
	return pulumix.GArrayOutput[GetRouteTablePropagationsFilter, GetRouteTablePropagationsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetRouteTablePropagationsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteTablePropagationsResult](o, func(v *GetRouteTablePropagationsResult) string { return v.Id })
}

func (o GetRouteTablePropagationsResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetRouteTablePropagationsResult](o, func(v *GetRouteTablePropagationsResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetRouteTablePropagationsResultOutput) TransitGatewayRouteTableId() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteTablePropagationsResult](o, func(v *GetRouteTablePropagationsResult) string { return v.TransitGatewayRouteTableId })
}
