// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an SSM Document resource
//
// > **NOTE on updating SSM documents:** Only documents with a schema version of 2.0
// or greater can update their content once created, see [SSM Schema Features](http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html#document-schemas-features). To update a document with an older schema version you must recreate the resource. Not all document types support a schema version of 2.0 or greater. Refer to [SSM document schema features and examples](https://docs.aws.amazon.com/systems-manager/latest/userguide/document-schemas-features.html) for information about which schema versions are supported for the respective `documentType`.
type Document struct {
	pulumi.CustomResourceState

	Arn pulumix.Output[string] `pulumi:"arn"`
	// One or more configuration blocks describing attachments sources to a version of a document. Defined below.
	AttachmentsSources pulumix.GArrayOutput[DocumentAttachmentsSource, DocumentAttachmentsSourceOutput] `pulumi:"attachmentsSources"`
	// The JSON or YAML content of the document.
	Content pulumix.Output[string] `pulumi:"content"`
	// The date the document was created.
	CreatedDate pulumix.Output[string] `pulumi:"createdDate"`
	// The default version of the document.
	DefaultVersion pulumix.Output[string] `pulumi:"defaultVersion"`
	// The description of the document.
	Description pulumix.Output[string] `pulumi:"description"`
	// The format of the document. Valid document types include: `JSON` and `YAML`
	DocumentFormat pulumix.Output[*string] `pulumi:"documentFormat"`
	// The type of the document. Valid document types include: `Automation`, `Command`, `Package`, `Policy`, and `Session`
	DocumentType pulumix.Output[string] `pulumi:"documentType"`
	// The document version.
	DocumentVersion pulumix.Output[string] `pulumi:"documentVersion"`
	// The sha1 or sha256 of the document content
	Hash pulumix.Output[string] `pulumi:"hash"`
	// "Sha1" "Sha256". The hashing algorithm used when hashing the content.
	HashType pulumix.Output[string] `pulumi:"hashType"`
	// The latest version of the document.
	LatestVersion pulumix.Output[string] `pulumi:"latestVersion"`
	// The name of the document.
	Name pulumix.Output[string] `pulumi:"name"`
	// The AWS user account of the person who created the document.
	Owner pulumix.Output[string] `pulumi:"owner"`
	// The parameters that are available to this document.
	Parameters pulumix.GArrayOutput[DocumentParameter, DocumentParameterOutput] `pulumi:"parameters"`
	// Additional Permissions to attach to the document. See Permissions below for details.
	Permissions pulumix.MapOutput[string] `pulumi:"permissions"`
	// A list of OS platforms compatible with this SSM document, either "Windows" or "Linux".
	PlatformTypes pulumix.ArrayOutput[string] `pulumi:"platformTypes"`
	// The schema version of the document.
	SchemaVersion pulumix.Output[string] `pulumi:"schemaVersion"`
	// "Creating", "Active" or "Deleting". The current status of the document.
	Status pulumix.Output[string] `pulumi:"status"`
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
	TargetType pulumix.Output[*string] `pulumi:"targetType"`
	// A field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document and cannot be changed for an existing document version.
	VersionName pulumix.Output[*string] `pulumi:"versionName"`
}

// NewDocument registers a new resource with the given unique name, arguments, and options.
func NewDocument(ctx *pulumi.Context,
	name string, args *DocumentArgs, opts ...pulumi.ResourceOption) (*Document, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Content == nil {
		return nil, errors.New("invalid value for required argument 'Content'")
	}
	if args.DocumentType == nil {
		return nil, errors.New("invalid value for required argument 'DocumentType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Document
	err := ctx.RegisterResource("aws:ssm/document:Document", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDocument gets an existing Document resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDocument(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DocumentState, opts ...pulumi.ResourceOption) (*Document, error) {
	var resource Document
	err := ctx.ReadResource("aws:ssm/document:Document", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Document resources.
type documentState struct {
	Arn *string `pulumi:"arn"`
	// One or more configuration blocks describing attachments sources to a version of a document. Defined below.
	AttachmentsSources []DocumentAttachmentsSource `pulumi:"attachmentsSources"`
	// The JSON or YAML content of the document.
	Content *string `pulumi:"content"`
	// The date the document was created.
	CreatedDate *string `pulumi:"createdDate"`
	// The default version of the document.
	DefaultVersion *string `pulumi:"defaultVersion"`
	// The description of the document.
	Description *string `pulumi:"description"`
	// The format of the document. Valid document types include: `JSON` and `YAML`
	DocumentFormat *string `pulumi:"documentFormat"`
	// The type of the document. Valid document types include: `Automation`, `Command`, `Package`, `Policy`, and `Session`
	DocumentType *string `pulumi:"documentType"`
	// The document version.
	DocumentVersion *string `pulumi:"documentVersion"`
	// The sha1 or sha256 of the document content
	Hash *string `pulumi:"hash"`
	// "Sha1" "Sha256". The hashing algorithm used when hashing the content.
	HashType *string `pulumi:"hashType"`
	// The latest version of the document.
	LatestVersion *string `pulumi:"latestVersion"`
	// The name of the document.
	Name *string `pulumi:"name"`
	// The AWS user account of the person who created the document.
	Owner *string `pulumi:"owner"`
	// The parameters that are available to this document.
	Parameters []DocumentParameter `pulumi:"parameters"`
	// Additional Permissions to attach to the document. See Permissions below for details.
	Permissions map[string]string `pulumi:"permissions"`
	// A list of OS platforms compatible with this SSM document, either "Windows" or "Linux".
	PlatformTypes []string `pulumi:"platformTypes"`
	// The schema version of the document.
	SchemaVersion *string `pulumi:"schemaVersion"`
	// "Creating", "Active" or "Deleting". The current status of the document.
	Status *string `pulumi:"status"`
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
	TargetType *string `pulumi:"targetType"`
	// A field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document and cannot be changed for an existing document version.
	VersionName *string `pulumi:"versionName"`
}

type DocumentState struct {
	Arn pulumix.Input[*string]
	// One or more configuration blocks describing attachments sources to a version of a document. Defined below.
	AttachmentsSources pulumix.Input[[]*DocumentAttachmentsSourceArgs]
	// The JSON or YAML content of the document.
	Content pulumix.Input[*string]
	// The date the document was created.
	CreatedDate pulumix.Input[*string]
	// The default version of the document.
	DefaultVersion pulumix.Input[*string]
	// The description of the document.
	Description pulumix.Input[*string]
	// The format of the document. Valid document types include: `JSON` and `YAML`
	DocumentFormat pulumix.Input[*string]
	// The type of the document. Valid document types include: `Automation`, `Command`, `Package`, `Policy`, and `Session`
	DocumentType pulumix.Input[*string]
	// The document version.
	DocumentVersion pulumix.Input[*string]
	// The sha1 or sha256 of the document content
	Hash pulumix.Input[*string]
	// "Sha1" "Sha256". The hashing algorithm used when hashing the content.
	HashType pulumix.Input[*string]
	// The latest version of the document.
	LatestVersion pulumix.Input[*string]
	// The name of the document.
	Name pulumix.Input[*string]
	// The AWS user account of the person who created the document.
	Owner pulumix.Input[*string]
	// The parameters that are available to this document.
	Parameters pulumix.Input[[]*DocumentParameterArgs]
	// Additional Permissions to attach to the document. See Permissions below for details.
	Permissions pulumix.Input[map[string]string]
	// A list of OS platforms compatible with this SSM document, either "Windows" or "Linux".
	PlatformTypes pulumix.Input[[]string]
	// The schema version of the document.
	SchemaVersion pulumix.Input[*string]
	// "Creating", "Active" or "Deleting". The current status of the document.
	Status pulumix.Input[*string]
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
	TargetType pulumix.Input[*string]
	// A field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document and cannot be changed for an existing document version.
	VersionName pulumix.Input[*string]
}

func (DocumentState) ElementType() reflect.Type {
	return reflect.TypeOf((*documentState)(nil)).Elem()
}

type documentArgs struct {
	// One or more configuration blocks describing attachments sources to a version of a document. Defined below.
	AttachmentsSources []DocumentAttachmentsSource `pulumi:"attachmentsSources"`
	// The JSON or YAML content of the document.
	Content string `pulumi:"content"`
	// The format of the document. Valid document types include: `JSON` and `YAML`
	DocumentFormat *string `pulumi:"documentFormat"`
	// The type of the document. Valid document types include: `Automation`, `Command`, `Package`, `Policy`, and `Session`
	DocumentType string `pulumi:"documentType"`
	// The name of the document.
	Name *string `pulumi:"name"`
	// Additional Permissions to attach to the document. See Permissions below for details.
	Permissions map[string]string `pulumi:"permissions"`
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
	TargetType *string `pulumi:"targetType"`
	// A field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document and cannot be changed for an existing document version.
	VersionName *string `pulumi:"versionName"`
}

// The set of arguments for constructing a Document resource.
type DocumentArgs struct {
	// One or more configuration blocks describing attachments sources to a version of a document. Defined below.
	AttachmentsSources pulumix.Input[[]*DocumentAttachmentsSourceArgs]
	// The JSON or YAML content of the document.
	Content pulumix.Input[string]
	// The format of the document. Valid document types include: `JSON` and `YAML`
	DocumentFormat pulumix.Input[*string]
	// The type of the document. Valid document types include: `Automation`, `Command`, `Package`, `Policy`, and `Session`
	DocumentType pulumix.Input[string]
	// The name of the document.
	Name pulumix.Input[*string]
	// Additional Permissions to attach to the document. See Permissions below for details.
	Permissions pulumix.Input[map[string]string]
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
	TargetType pulumix.Input[*string]
	// A field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document and cannot be changed for an existing document version.
	VersionName pulumix.Input[*string]
}

func (DocumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*documentArgs)(nil)).Elem()
}

type DocumentOutput struct{ *pulumi.OutputState }

func (DocumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Document)(nil)).Elem()
}

func (o DocumentOutput) ToDocumentOutput() DocumentOutput {
	return o
}

func (o DocumentOutput) ToDocumentOutputWithContext(ctx context.Context) DocumentOutput {
	return o
}

func (o DocumentOutput) ToOutput(ctx context.Context) pulumix.Output[Document] {
	return pulumix.Output[Document]{
		OutputState: o.OutputState,
	}
}

func (o DocumentOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// One or more configuration blocks describing attachments sources to a version of a document. Defined below.
func (o DocumentOutput) AttachmentsSources() pulumix.GArrayOutput[DocumentAttachmentsSource, DocumentAttachmentsSourceOutput] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.GArrayOutput[DocumentAttachmentsSource, DocumentAttachmentsSourceOutput] {
		return v.AttachmentsSources
	})
	unwrapped := pulumix.Flatten[[]DocumentAttachmentsSource, pulumix.GArrayOutput[DocumentAttachmentsSource, DocumentAttachmentsSourceOutput]](value)
	return pulumix.GArrayOutput[DocumentAttachmentsSource, DocumentAttachmentsSourceOutput]{OutputState: unwrapped.OutputState}
}

// The JSON or YAML content of the document.
func (o DocumentOutput) Content() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.Content })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The date the document was created.
func (o DocumentOutput) CreatedDate() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.CreatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The default version of the document.
func (o DocumentOutput) DefaultVersion() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.DefaultVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the document.
func (o DocumentOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The format of the document. Valid document types include: `JSON` and `YAML`
func (o DocumentOutput) DocumentFormat() pulumix.Output[*string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[*string] { return v.DocumentFormat })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The type of the document. Valid document types include: `Automation`, `Command`, `Package`, `Policy`, and `Session`
func (o DocumentOutput) DocumentType() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.DocumentType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The document version.
func (o DocumentOutput) DocumentVersion() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.DocumentVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The sha1 or sha256 of the document content
func (o DocumentOutput) Hash() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.Hash })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// "Sha1" "Sha256". The hashing algorithm used when hashing the content.
func (o DocumentOutput) HashType() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.HashType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The latest version of the document.
func (o DocumentOutput) LatestVersion() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.LatestVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the document.
func (o DocumentOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS user account of the person who created the document.
func (o DocumentOutput) Owner() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.Owner })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The parameters that are available to this document.
func (o DocumentOutput) Parameters() pulumix.GArrayOutput[DocumentParameter, DocumentParameterOutput] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.GArrayOutput[DocumentParameter, DocumentParameterOutput] { return v.Parameters })
	unwrapped := pulumix.Flatten[[]DocumentParameter, pulumix.GArrayOutput[DocumentParameter, DocumentParameterOutput]](value)
	return pulumix.GArrayOutput[DocumentParameter, DocumentParameterOutput]{OutputState: unwrapped.OutputState}
}

// Additional Permissions to attach to the document. See Permissions below for details.
func (o DocumentOutput) Permissions() pulumix.MapOutput[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.MapOutput[string] { return v.Permissions })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A list of OS platforms compatible with this SSM document, either "Windows" or "Linux".
func (o DocumentOutput) PlatformTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.ArrayOutput[string] { return v.PlatformTypes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The schema version of the document.
func (o DocumentOutput) SchemaVersion() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.SchemaVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// "Creating", "Active" or "Deleting". The current status of the document.
func (o DocumentOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DocumentOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DocumentOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
func (o DocumentOutput) TargetType() pulumix.Output[*string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[*string] { return v.TargetType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document and cannot be changed for an existing document version.
func (o DocumentOutput) VersionName() pulumix.Output[*string] {
	value := pulumix.Apply[Document](o, func(v Document) pulumix.Output[*string] { return v.VersionName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(DocumentOutput{})
}
