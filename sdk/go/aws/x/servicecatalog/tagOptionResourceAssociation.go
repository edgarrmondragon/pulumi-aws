// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Service Catalog Tag Option Resource Association.
//
// > **Tip:** A "resource" is either a Service Catalog portfolio or product.
type TagOptionResourceAssociation struct {
	pulumi.CustomResourceState

	// ARN of the resource.
	ResourceArn pulumix.Output[string] `pulumi:"resourceArn"`
	// Creation time of the resource.
	ResourceCreatedTime pulumix.Output[string] `pulumi:"resourceCreatedTime"`
	// Description of the resource.
	ResourceDescription pulumix.Output[string] `pulumi:"resourceDescription"`
	// Resource identifier.
	ResourceId pulumix.Output[string] `pulumi:"resourceId"`
	// Description of the resource.
	ResourceName pulumix.Output[string] `pulumi:"resourceName"`
	// Tag Option identifier.
	TagOptionId pulumix.Output[string] `pulumi:"tagOptionId"`
}

// NewTagOptionResourceAssociation registers a new resource with the given unique name, arguments, and options.
func NewTagOptionResourceAssociation(ctx *pulumi.Context,
	name string, args *TagOptionResourceAssociationArgs, opts ...pulumi.ResourceOption) (*TagOptionResourceAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.TagOptionId == nil {
		return nil, errors.New("invalid value for required argument 'TagOptionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TagOptionResourceAssociation
	err := ctx.RegisterResource("aws:servicecatalog/tagOptionResourceAssociation:TagOptionResourceAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagOptionResourceAssociation gets an existing TagOptionResourceAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagOptionResourceAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagOptionResourceAssociationState, opts ...pulumi.ResourceOption) (*TagOptionResourceAssociation, error) {
	var resource TagOptionResourceAssociation
	err := ctx.ReadResource("aws:servicecatalog/tagOptionResourceAssociation:TagOptionResourceAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagOptionResourceAssociation resources.
type tagOptionResourceAssociationState struct {
	// ARN of the resource.
	ResourceArn *string `pulumi:"resourceArn"`
	// Creation time of the resource.
	ResourceCreatedTime *string `pulumi:"resourceCreatedTime"`
	// Description of the resource.
	ResourceDescription *string `pulumi:"resourceDescription"`
	// Resource identifier.
	ResourceId *string `pulumi:"resourceId"`
	// Description of the resource.
	ResourceName *string `pulumi:"resourceName"`
	// Tag Option identifier.
	TagOptionId *string `pulumi:"tagOptionId"`
}

type TagOptionResourceAssociationState struct {
	// ARN of the resource.
	ResourceArn pulumix.Input[*string]
	// Creation time of the resource.
	ResourceCreatedTime pulumix.Input[*string]
	// Description of the resource.
	ResourceDescription pulumix.Input[*string]
	// Resource identifier.
	ResourceId pulumix.Input[*string]
	// Description of the resource.
	ResourceName pulumix.Input[*string]
	// Tag Option identifier.
	TagOptionId pulumix.Input[*string]
}

func (TagOptionResourceAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagOptionResourceAssociationState)(nil)).Elem()
}

type tagOptionResourceAssociationArgs struct {
	// Resource identifier.
	ResourceId string `pulumi:"resourceId"`
	// Tag Option identifier.
	TagOptionId string `pulumi:"tagOptionId"`
}

// The set of arguments for constructing a TagOptionResourceAssociation resource.
type TagOptionResourceAssociationArgs struct {
	// Resource identifier.
	ResourceId pulumix.Input[string]
	// Tag Option identifier.
	TagOptionId pulumix.Input[string]
}

func (TagOptionResourceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagOptionResourceAssociationArgs)(nil)).Elem()
}

type TagOptionResourceAssociationOutput struct{ *pulumi.OutputState }

func (TagOptionResourceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagOptionResourceAssociation)(nil)).Elem()
}

func (o TagOptionResourceAssociationOutput) ToTagOptionResourceAssociationOutput() TagOptionResourceAssociationOutput {
	return o
}

func (o TagOptionResourceAssociationOutput) ToTagOptionResourceAssociationOutputWithContext(ctx context.Context) TagOptionResourceAssociationOutput {
	return o
}

func (o TagOptionResourceAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[TagOptionResourceAssociation] {
	return pulumix.Output[TagOptionResourceAssociation]{
		OutputState: o.OutputState,
	}
}

// ARN of the resource.
func (o TagOptionResourceAssociationOutput) ResourceArn() pulumix.Output[string] {
	value := pulumix.Apply[TagOptionResourceAssociation](o, func(v TagOptionResourceAssociation) pulumix.Output[string] { return v.ResourceArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creation time of the resource.
func (o TagOptionResourceAssociationOutput) ResourceCreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[TagOptionResourceAssociation](o, func(v TagOptionResourceAssociation) pulumix.Output[string] { return v.ResourceCreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the resource.
func (o TagOptionResourceAssociationOutput) ResourceDescription() pulumix.Output[string] {
	value := pulumix.Apply[TagOptionResourceAssociation](o, func(v TagOptionResourceAssociation) pulumix.Output[string] { return v.ResourceDescription })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Resource identifier.
func (o TagOptionResourceAssociationOutput) ResourceId() pulumix.Output[string] {
	value := pulumix.Apply[TagOptionResourceAssociation](o, func(v TagOptionResourceAssociation) pulumix.Output[string] { return v.ResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the resource.
func (o TagOptionResourceAssociationOutput) ResourceName() pulumix.Output[string] {
	value := pulumix.Apply[TagOptionResourceAssociation](o, func(v TagOptionResourceAssociation) pulumix.Output[string] { return v.ResourceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Tag Option identifier.
func (o TagOptionResourceAssociationOutput) TagOptionId() pulumix.Output[string] {
	value := pulumix.Apply[TagOptionResourceAssociation](o, func(v TagOptionResourceAssociation) pulumix.Output[string] { return v.TagOptionId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(TagOptionResourceAssociationOutput{})
}
