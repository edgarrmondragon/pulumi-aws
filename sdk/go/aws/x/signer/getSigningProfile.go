// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package signer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information about a Signer Signing Profile.
func LookupSigningProfile(ctx *pulumi.Context, args *LookupSigningProfileArgs, opts ...pulumi.InvokeOption) (*LookupSigningProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSigningProfileResult
	err := ctx.Invoke("aws:signer/getSigningProfile:getSigningProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSigningProfile.
type LookupSigningProfileArgs struct {
	// Name of the target signing profile.
	Name string `pulumi:"name"`
	// List of tags associated with the signing profile.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getSigningProfile.
type LookupSigningProfileResult struct {
	// ARN for the signing profile.
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// A human-readable name for the signing platform associated with the signing profile.
	PlatformDisplayName string `pulumi:"platformDisplayName"`
	// ID of the platform that is used by the target signing profile.
	PlatformId string `pulumi:"platformId"`
	// Revocation information for a signing profile.
	RevocationRecords []GetSigningProfileRevocationRecord `pulumi:"revocationRecords"`
	// The validity period for a signing job.
	SignatureValidityPeriods []GetSigningProfileSignatureValidityPeriod `pulumi:"signatureValidityPeriods"`
	// Status of the target signing profile.
	Status string `pulumi:"status"`
	// List of tags associated with the signing profile.
	Tags map[string]string `pulumi:"tags"`
	// Current version of the signing profile.
	Version string `pulumi:"version"`
	// Signing profile ARN, including the profile version.
	VersionArn string `pulumi:"versionArn"`
}

func LookupSigningProfileOutput(ctx *pulumi.Context, args LookupSigningProfileOutputArgs, opts ...pulumi.InvokeOption) LookupSigningProfileResultOutput {
	outputResult := pulumix.ApplyErr[*LookupSigningProfileArgs](args.ToOutput(), func(plainArgs *LookupSigningProfileArgs) (*LookupSigningProfileResult, error) {
		return LookupSigningProfile(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupSigningProfileResultOutput, *LookupSigningProfileResult](outputResult)
}

// A collection of arguments for invoking getSigningProfile.
type LookupSigningProfileOutputArgs struct {
	// Name of the target signing profile.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of tags associated with the signing profile.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupSigningProfileOutputArgs) ToOutput() pulumix.Output[*LookupSigningProfileArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupSigningProfileArgs {
		return &LookupSigningProfileArgs{
			Name: resolvedArgs[0].(string),
			Tags: resolvedArgs[1].(map[string]string),
		}
	})
}

type LookupSigningProfileResultOutput struct{ *pulumi.OutputState }

func (LookupSigningProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSigningProfileResult)(nil)).Elem()
}

func (o LookupSigningProfileResultOutput) ToOutput(context.Context) pulumix.Output[*LookupSigningProfileResult] {
	return pulumix.Output[*LookupSigningProfileResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSigningProfileResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) string { return v.Arn })
}

func (o LookupSigningProfileResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) string { return v.Id })
}

func (o LookupSigningProfileResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) string { return v.Name })
}

func (o LookupSigningProfileResultOutput) PlatformDisplayName() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) string { return v.PlatformDisplayName })
}

func (o LookupSigningProfileResultOutput) PlatformId() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) string { return v.PlatformId })
}

func (o LookupSigningProfileResultOutput) RevocationRecords() pulumix.GArrayOutput[GetSigningProfileRevocationRecord, GetSigningProfileRevocationRecordOutput] {
	value := pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) []GetSigningProfileRevocationRecord { return v.RevocationRecords })
	return pulumix.GArrayOutput[GetSigningProfileRevocationRecord, GetSigningProfileRevocationRecordOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupSigningProfileResultOutput) SignatureValidityPeriods() pulumix.GArrayOutput[GetSigningProfileSignatureValidityPeriod, GetSigningProfileSignatureValidityPeriodOutput] {
	value := pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) []GetSigningProfileSignatureValidityPeriod {
		return v.SignatureValidityPeriods
	})
	return pulumix.GArrayOutput[GetSigningProfileSignatureValidityPeriod, GetSigningProfileSignatureValidityPeriodOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupSigningProfileResultOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) string { return v.Status })
}

func (o LookupSigningProfileResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupSigningProfileResultOutput) Version() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) string { return v.Version })
}

func (o LookupSigningProfileResultOutput) VersionArn() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningProfileResult](o, func(v *LookupSigningProfileResult) string { return v.VersionArn })
}
