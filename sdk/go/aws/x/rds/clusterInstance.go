// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an RDS Cluster Instance Resource. A Cluster Instance Resource defines
// attributes that are specific to a single instance in a RDS Cluster,
// specifically running Amazon Aurora.
//
// Unlike other RDS resources that support replication, with Amazon Aurora you do
// not designate a primary and subsequent replicas. Instead, you simply add RDS
// Instances and Aurora manages the replication. You can use the [count][5]
// meta-parameter to make multiple instances and join them all to the same RDS
// Cluster, or you may specify different Cluster Instance resources with various
// `instanceClass` sizes.
//
// For more information on Amazon Aurora, see [Aurora on Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html) in the Amazon RDS User Guide.
//
// > **NOTE:** Deletion Protection from the RDS service can only be enabled at the cluster level, not for individual cluster instances. You can still add the [`protect` CustomResourceOption](https://www.pulumi.com/docs/intro/concepts/programming-model/#protect) to this resource configuration if you desire protection from accidental deletion.
//
// > **NOTE:** `aurora` is no longer a valid `engine` because of [Amazon Aurora's MySQL-Compatible Edition version 1 end of life](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.MySQL56.EOL.html).
type ClusterInstance struct {
	pulumi.CustomResourceState

	// Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default is`false`.
	ApplyImmediately pulumix.Output[bool] `pulumi:"applyImmediately"`
	// Amazon Resource Name (ARN) of cluster instance
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
	AutoMinorVersionUpgrade pulumix.Output[*bool] `pulumi:"autoMinorVersionUpgrade"`
	// EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) about the details.
	AvailabilityZone pulumix.Output[string] `pulumi:"availabilityZone"`
	// Identifier of the CA certificate for the DB instance.
	CaCertIdentifier pulumix.Output[string] `pulumi:"caCertIdentifier"`
	// Identifier of the `rds.Cluster` in which to launch this instance.
	ClusterIdentifier pulumix.Output[string] `pulumi:"clusterIdentifier"`
	// Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default `false`.
	CopyTagsToSnapshot pulumix.Output[*bool] `pulumi:"copyTagsToSnapshot"`
	// Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
	CustomIamInstanceProfile pulumix.Output[*string] `pulumi:"customIamInstanceProfile"`
	// Name of the DB parameter group to associate with this instance.
	DbParameterGroupName pulumix.Output[string] `pulumi:"dbParameterGroupName"`
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` of the attached `rds.Cluster`.
	DbSubnetGroupName pulumix.Output[string] `pulumi:"dbSubnetGroupName"`
	// Region-unique, immutable identifier for the DB instance.
	DbiResourceId pulumix.Output[string] `pulumi:"dbiResourceId"`
	// DNS address for this instance. May not be writable
	Endpoint pulumix.Output[string] `pulumi:"endpoint"`
	// Name of the database engine to be used for the RDS instance. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`.
	Engine pulumix.Output[string] `pulumi:"engine"`
	// Database engine version.
	EngineVersion pulumix.Output[string] `pulumi:"engineVersion"`
	// Database engine version
	EngineVersionActual pulumix.Output[string] `pulumi:"engineVersionActual"`
	// Identifier for the RDS instance, if omitted, Pulumi will assign a random, unique identifier.
	Identifier pulumix.Output[string] `pulumi:"identifier"`
	// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
	IdentifierPrefix pulumix.Output[string] `pulumi:"identifierPrefix"`
	// Instance class to use. For details on CPU and memory, see [Scaling Aurora DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html). Aurora uses `db.*` instance classes/types. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) for currently available instance classes and complete details.
	InstanceClass pulumix.Output[string] `pulumi:"instanceClass"`
	// ARN for the KMS encryption key if one is set to the cluster.
	KmsKeyId pulumix.Output[string] `pulumi:"kmsKeyId"`
	// Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
	MonitoringInterval pulumix.Output[*int] `pulumi:"monitoringInterval"`
	// ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the [AWS Documentation](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html) what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
	MonitoringRoleArn pulumix.Output[string] `pulumi:"monitoringRoleArn"`
	// Network type of the DB instance.
	NetworkType pulumix.Output[string] `pulumi:"networkType"`
	// Specifies whether Performance Insights is enabled or not.
	PerformanceInsightsEnabled pulumix.Output[bool] `pulumi:"performanceInsightsEnabled"`
	// ARN for the KMS key to encrypt Performance Insights data. When specifying `performanceInsightsKmsKeyId`, `performanceInsightsEnabled` needs to be set to true.
	PerformanceInsightsKmsKeyId pulumix.Output[string] `pulumi:"performanceInsightsKmsKeyId"`
	// Amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`. When specifying `performanceInsightsRetentionPeriod`, `performanceInsightsEnabled` needs to be set to true. Defaults to '7'.
	PerformanceInsightsRetentionPeriod pulumix.Output[int] `pulumi:"performanceInsightsRetentionPeriod"`
	// Database port
	Port pulumix.Output[int] `pulumi:"port"`
	// Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". **NOTE:** If `preferredBackupWindow` is set at the cluster level, this argument **must** be omitted.
	PreferredBackupWindow pulumix.Output[string] `pulumi:"preferredBackupWindow"`
	// Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
	PreferredMaintenanceWindow pulumix.Output[string] `pulumi:"preferredMaintenanceWindow"`
	// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
	PromotionTier pulumix.Output[*int] `pulumi:"promotionTier"`
	// Bool to control if instance is publicly accessible. Default `false`. See the documentation on [Creating DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) for more details on controlling this property.
	PubliclyAccessible pulumix.Output[*bool] `pulumi:"publiclyAccessible"`
	// Specifies whether the DB cluster is encrypted.
	StorageEncrypted pulumix.Output[bool] `pulumi:"storageEncrypted"`
	// Map of tags to assign to the instance. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.
	Writer pulumix.Output[bool] `pulumi:"writer"`
}

// NewClusterInstance registers a new resource with the given unique name, arguments, and options.
func NewClusterInstance(ctx *pulumi.Context,
	name string, args *ClusterInstanceArgs, opts ...pulumi.ResourceOption) (*ClusterInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ClusterIdentifier'")
	}
	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	if args.InstanceClass == nil {
		return nil, errors.New("invalid value for required argument 'InstanceClass'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClusterInstance
	err := ctx.RegisterResource("aws:rds/clusterInstance:ClusterInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterInstance gets an existing ClusterInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterInstanceState, opts ...pulumi.ResourceOption) (*ClusterInstance, error) {
	var resource ClusterInstance
	err := ctx.ReadResource("aws:rds/clusterInstance:ClusterInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterInstance resources.
type clusterInstanceState struct {
	// Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default is`false`.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// Amazon Resource Name (ARN) of cluster instance
	Arn *string `pulumi:"arn"`
	// Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
	AutoMinorVersionUpgrade *bool `pulumi:"autoMinorVersionUpgrade"`
	// EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) about the details.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Identifier of the CA certificate for the DB instance.
	CaCertIdentifier *string `pulumi:"caCertIdentifier"`
	// Identifier of the `rds.Cluster` in which to launch this instance.
	ClusterIdentifier *string `pulumi:"clusterIdentifier"`
	// Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default `false`.
	CopyTagsToSnapshot *bool `pulumi:"copyTagsToSnapshot"`
	// Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
	CustomIamInstanceProfile *string `pulumi:"customIamInstanceProfile"`
	// Name of the DB parameter group to associate with this instance.
	DbParameterGroupName *string `pulumi:"dbParameterGroupName"`
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` of the attached `rds.Cluster`.
	DbSubnetGroupName *string `pulumi:"dbSubnetGroupName"`
	// Region-unique, immutable identifier for the DB instance.
	DbiResourceId *string `pulumi:"dbiResourceId"`
	// DNS address for this instance. May not be writable
	Endpoint *string `pulumi:"endpoint"`
	// Name of the database engine to be used for the RDS instance. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`.
	Engine *string `pulumi:"engine"`
	// Database engine version.
	EngineVersion *string `pulumi:"engineVersion"`
	// Database engine version
	EngineVersionActual *string `pulumi:"engineVersionActual"`
	// Identifier for the RDS instance, if omitted, Pulumi will assign a random, unique identifier.
	Identifier *string `pulumi:"identifier"`
	// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
	IdentifierPrefix *string `pulumi:"identifierPrefix"`
	// Instance class to use. For details on CPU and memory, see [Scaling Aurora DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html). Aurora uses `db.*` instance classes/types. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) for currently available instance classes and complete details.
	InstanceClass *string `pulumi:"instanceClass"`
	// ARN for the KMS encryption key if one is set to the cluster.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
	MonitoringInterval *int `pulumi:"monitoringInterval"`
	// ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the [AWS Documentation](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html) what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
	MonitoringRoleArn *string `pulumi:"monitoringRoleArn"`
	// Network type of the DB instance.
	NetworkType *string `pulumi:"networkType"`
	// Specifies whether Performance Insights is enabled or not.
	PerformanceInsightsEnabled *bool `pulumi:"performanceInsightsEnabled"`
	// ARN for the KMS key to encrypt Performance Insights data. When specifying `performanceInsightsKmsKeyId`, `performanceInsightsEnabled` needs to be set to true.
	PerformanceInsightsKmsKeyId *string `pulumi:"performanceInsightsKmsKeyId"`
	// Amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`. When specifying `performanceInsightsRetentionPeriod`, `performanceInsightsEnabled` needs to be set to true. Defaults to '7'.
	PerformanceInsightsRetentionPeriod *int `pulumi:"performanceInsightsRetentionPeriod"`
	// Database port
	Port *int `pulumi:"port"`
	// Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". **NOTE:** If `preferredBackupWindow` is set at the cluster level, this argument **must** be omitted.
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
	PromotionTier *int `pulumi:"promotionTier"`
	// Bool to control if instance is publicly accessible. Default `false`. See the documentation on [Creating DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) for more details on controlling this property.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// Specifies whether the DB cluster is encrypted.
	StorageEncrypted *bool `pulumi:"storageEncrypted"`
	// Map of tags to assign to the instance. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.
	Writer *bool `pulumi:"writer"`
}

type ClusterInstanceState struct {
	// Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default is`false`.
	ApplyImmediately pulumix.Input[*bool]
	// Amazon Resource Name (ARN) of cluster instance
	Arn pulumix.Input[*string]
	// Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
	AutoMinorVersionUpgrade pulumix.Input[*bool]
	// EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) about the details.
	AvailabilityZone pulumix.Input[*string]
	// Identifier of the CA certificate for the DB instance.
	CaCertIdentifier pulumix.Input[*string]
	// Identifier of the `rds.Cluster` in which to launch this instance.
	ClusterIdentifier pulumix.Input[*string]
	// Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default `false`.
	CopyTagsToSnapshot pulumix.Input[*bool]
	// Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
	CustomIamInstanceProfile pulumix.Input[*string]
	// Name of the DB parameter group to associate with this instance.
	DbParameterGroupName pulumix.Input[*string]
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` of the attached `rds.Cluster`.
	DbSubnetGroupName pulumix.Input[*string]
	// Region-unique, immutable identifier for the DB instance.
	DbiResourceId pulumix.Input[*string]
	// DNS address for this instance. May not be writable
	Endpoint pulumix.Input[*string]
	// Name of the database engine to be used for the RDS instance. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`.
	Engine pulumix.Input[*string]
	// Database engine version.
	EngineVersion pulumix.Input[*string]
	// Database engine version
	EngineVersionActual pulumix.Input[*string]
	// Identifier for the RDS instance, if omitted, Pulumi will assign a random, unique identifier.
	Identifier pulumix.Input[*string]
	// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
	IdentifierPrefix pulumix.Input[*string]
	// Instance class to use. For details on CPU and memory, see [Scaling Aurora DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html). Aurora uses `db.*` instance classes/types. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) for currently available instance classes and complete details.
	InstanceClass pulumix.Input[*string]
	// ARN for the KMS encryption key if one is set to the cluster.
	KmsKeyId pulumix.Input[*string]
	// Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
	MonitoringInterval pulumix.Input[*int]
	// ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the [AWS Documentation](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html) what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
	MonitoringRoleArn pulumix.Input[*string]
	// Network type of the DB instance.
	NetworkType pulumix.Input[*string]
	// Specifies whether Performance Insights is enabled or not.
	PerformanceInsightsEnabled pulumix.Input[*bool]
	// ARN for the KMS key to encrypt Performance Insights data. When specifying `performanceInsightsKmsKeyId`, `performanceInsightsEnabled` needs to be set to true.
	PerformanceInsightsKmsKeyId pulumix.Input[*string]
	// Amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`. When specifying `performanceInsightsRetentionPeriod`, `performanceInsightsEnabled` needs to be set to true. Defaults to '7'.
	PerformanceInsightsRetentionPeriod pulumix.Input[*int]
	// Database port
	Port pulumix.Input[*int]
	// Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". **NOTE:** If `preferredBackupWindow` is set at the cluster level, this argument **must** be omitted.
	PreferredBackupWindow pulumix.Input[*string]
	// Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
	PreferredMaintenanceWindow pulumix.Input[*string]
	// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
	PromotionTier pulumix.Input[*int]
	// Bool to control if instance is publicly accessible. Default `false`. See the documentation on [Creating DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) for more details on controlling this property.
	PubliclyAccessible pulumix.Input[*bool]
	// Specifies whether the DB cluster is encrypted.
	StorageEncrypted pulumix.Input[*bool]
	// Map of tags to assign to the instance. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.
	Writer pulumix.Input[*bool]
}

func (ClusterInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterInstanceState)(nil)).Elem()
}

type clusterInstanceArgs struct {
	// Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default is`false`.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
	AutoMinorVersionUpgrade *bool `pulumi:"autoMinorVersionUpgrade"`
	// EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) about the details.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Identifier of the CA certificate for the DB instance.
	CaCertIdentifier *string `pulumi:"caCertIdentifier"`
	// Identifier of the `rds.Cluster` in which to launch this instance.
	ClusterIdentifier string `pulumi:"clusterIdentifier"`
	// Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default `false`.
	CopyTagsToSnapshot *bool `pulumi:"copyTagsToSnapshot"`
	// Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
	CustomIamInstanceProfile *string `pulumi:"customIamInstanceProfile"`
	// Name of the DB parameter group to associate with this instance.
	DbParameterGroupName *string `pulumi:"dbParameterGroupName"`
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` of the attached `rds.Cluster`.
	DbSubnetGroupName *string `pulumi:"dbSubnetGroupName"`
	// Name of the database engine to be used for the RDS instance. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`.
	Engine string `pulumi:"engine"`
	// Database engine version.
	EngineVersion *string `pulumi:"engineVersion"`
	// Identifier for the RDS instance, if omitted, Pulumi will assign a random, unique identifier.
	Identifier *string `pulumi:"identifier"`
	// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
	IdentifierPrefix *string `pulumi:"identifierPrefix"`
	// Instance class to use. For details on CPU and memory, see [Scaling Aurora DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html). Aurora uses `db.*` instance classes/types. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) for currently available instance classes and complete details.
	InstanceClass string `pulumi:"instanceClass"`
	// Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
	MonitoringInterval *int `pulumi:"monitoringInterval"`
	// ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the [AWS Documentation](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html) what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
	MonitoringRoleArn *string `pulumi:"monitoringRoleArn"`
	// Specifies whether Performance Insights is enabled or not.
	PerformanceInsightsEnabled *bool `pulumi:"performanceInsightsEnabled"`
	// ARN for the KMS key to encrypt Performance Insights data. When specifying `performanceInsightsKmsKeyId`, `performanceInsightsEnabled` needs to be set to true.
	PerformanceInsightsKmsKeyId *string `pulumi:"performanceInsightsKmsKeyId"`
	// Amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`. When specifying `performanceInsightsRetentionPeriod`, `performanceInsightsEnabled` needs to be set to true. Defaults to '7'.
	PerformanceInsightsRetentionPeriod *int `pulumi:"performanceInsightsRetentionPeriod"`
	// Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". **NOTE:** If `preferredBackupWindow` is set at the cluster level, this argument **must** be omitted.
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
	PromotionTier *int `pulumi:"promotionTier"`
	// Bool to control if instance is publicly accessible. Default `false`. See the documentation on [Creating DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) for more details on controlling this property.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// Map of tags to assign to the instance. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ClusterInstance resource.
type ClusterInstanceArgs struct {
	// Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default is`false`.
	ApplyImmediately pulumix.Input[*bool]
	// Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
	AutoMinorVersionUpgrade pulumix.Input[*bool]
	// EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) about the details.
	AvailabilityZone pulumix.Input[*string]
	// Identifier of the CA certificate for the DB instance.
	CaCertIdentifier pulumix.Input[*string]
	// Identifier of the `rds.Cluster` in which to launch this instance.
	ClusterIdentifier pulumix.Input[string]
	// Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default `false`.
	CopyTagsToSnapshot pulumix.Input[*bool]
	// Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
	CustomIamInstanceProfile pulumix.Input[*string]
	// Name of the DB parameter group to associate with this instance.
	DbParameterGroupName pulumix.Input[*string]
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` of the attached `rds.Cluster`.
	DbSubnetGroupName pulumix.Input[*string]
	// Name of the database engine to be used for the RDS instance. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`.
	Engine pulumix.Input[string]
	// Database engine version.
	EngineVersion pulumix.Input[*string]
	// Identifier for the RDS instance, if omitted, Pulumi will assign a random, unique identifier.
	Identifier pulumix.Input[*string]
	// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
	IdentifierPrefix pulumix.Input[*string]
	// Instance class to use. For details on CPU and memory, see [Scaling Aurora DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html). Aurora uses `db.*` instance classes/types. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) for currently available instance classes and complete details.
	InstanceClass pulumix.Input[string]
	// Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
	MonitoringInterval pulumix.Input[*int]
	// ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the [AWS Documentation](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html) what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
	MonitoringRoleArn pulumix.Input[*string]
	// Specifies whether Performance Insights is enabled or not.
	PerformanceInsightsEnabled pulumix.Input[*bool]
	// ARN for the KMS key to encrypt Performance Insights data. When specifying `performanceInsightsKmsKeyId`, `performanceInsightsEnabled` needs to be set to true.
	PerformanceInsightsKmsKeyId pulumix.Input[*string]
	// Amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`. When specifying `performanceInsightsRetentionPeriod`, `performanceInsightsEnabled` needs to be set to true. Defaults to '7'.
	PerformanceInsightsRetentionPeriod pulumix.Input[*int]
	// Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". **NOTE:** If `preferredBackupWindow` is set at the cluster level, this argument **must** be omitted.
	PreferredBackupWindow pulumix.Input[*string]
	// Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
	PreferredMaintenanceWindow pulumix.Input[*string]
	// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
	PromotionTier pulumix.Input[*int]
	// Bool to control if instance is publicly accessible. Default `false`. See the documentation on [Creating DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) for more details on controlling this property.
	PubliclyAccessible pulumix.Input[*bool]
	// Map of tags to assign to the instance. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ClusterInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterInstanceArgs)(nil)).Elem()
}

type ClusterInstanceOutput struct{ *pulumi.OutputState }

func (ClusterInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstance)(nil)).Elem()
}

func (o ClusterInstanceOutput) ToClusterInstanceOutput() ClusterInstanceOutput {
	return o
}

func (o ClusterInstanceOutput) ToClusterInstanceOutputWithContext(ctx context.Context) ClusterInstanceOutput {
	return o
}

func (o ClusterInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterInstance] {
	return pulumix.Output[ClusterInstance]{
		OutputState: o.OutputState,
	}
}

// Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default is`false`.
func (o ClusterInstanceOutput) ApplyImmediately() pulumix.Output[bool] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[bool] { return v.ApplyImmediately })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Amazon Resource Name (ARN) of cluster instance
func (o ClusterInstanceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
func (o ClusterInstanceOutput) AutoMinorVersionUpgrade() pulumix.Output[*bool] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[*bool] { return v.AutoMinorVersionUpgrade })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) about the details.
func (o ClusterInstanceOutput) AvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.AvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of the CA certificate for the DB instance.
func (o ClusterInstanceOutput) CaCertIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.CaCertIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of the `rds.Cluster` in which to launch this instance.
func (o ClusterInstanceOutput) ClusterIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.ClusterIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default `false`.
func (o ClusterInstanceOutput) CopyTagsToSnapshot() pulumix.Output[*bool] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[*bool] { return v.CopyTagsToSnapshot })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
func (o ClusterInstanceOutput) CustomIamInstanceProfile() pulumix.Output[*string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[*string] { return v.CustomIamInstanceProfile })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the DB parameter group to associate with this instance.
func (o ClusterInstanceOutput) DbParameterGroupName() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.DbParameterGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` of the attached `rds.Cluster`.
func (o ClusterInstanceOutput) DbSubnetGroupName() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.DbSubnetGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Region-unique, immutable identifier for the DB instance.
func (o ClusterInstanceOutput) DbiResourceId() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.DbiResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// DNS address for this instance. May not be writable
func (o ClusterInstanceOutput) Endpoint() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.Endpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the database engine to be used for the RDS instance. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`.
func (o ClusterInstanceOutput) Engine() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.Engine })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Database engine version.
func (o ClusterInstanceOutput) EngineVersion() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.EngineVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Database engine version
func (o ClusterInstanceOutput) EngineVersionActual() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.EngineVersionActual })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier for the RDS instance, if omitted, Pulumi will assign a random, unique identifier.
func (o ClusterInstanceOutput) Identifier() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.Identifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
func (o ClusterInstanceOutput) IdentifierPrefix() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.IdentifierPrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Instance class to use. For details on CPU and memory, see [Scaling Aurora DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html). Aurora uses `db.*` instance classes/types. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) for currently available instance classes and complete details.
func (o ClusterInstanceOutput) InstanceClass() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.InstanceClass })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN for the KMS encryption key if one is set to the cluster.
func (o ClusterInstanceOutput) KmsKeyId() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.KmsKeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
func (o ClusterInstanceOutput) MonitoringInterval() pulumix.Output[*int] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[*int] { return v.MonitoringInterval })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the [AWS Documentation](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html) what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
func (o ClusterInstanceOutput) MonitoringRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.MonitoringRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Network type of the DB instance.
func (o ClusterInstanceOutput) NetworkType() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.NetworkType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether Performance Insights is enabled or not.
func (o ClusterInstanceOutput) PerformanceInsightsEnabled() pulumix.Output[bool] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[bool] { return v.PerformanceInsightsEnabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// ARN for the KMS key to encrypt Performance Insights data. When specifying `performanceInsightsKmsKeyId`, `performanceInsightsEnabled` needs to be set to true.
func (o ClusterInstanceOutput) PerformanceInsightsKmsKeyId() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.PerformanceInsightsKmsKeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`. When specifying `performanceInsightsRetentionPeriod`, `performanceInsightsEnabled` needs to be set to true. Defaults to '7'.
func (o ClusterInstanceOutput) PerformanceInsightsRetentionPeriod() pulumix.Output[int] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[int] { return v.PerformanceInsightsRetentionPeriod })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Database port
func (o ClusterInstanceOutput) Port() pulumix.Output[int] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[int] { return v.Port })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". **NOTE:** If `preferredBackupWindow` is set at the cluster level, this argument **must** be omitted.
func (o ClusterInstanceOutput) PreferredBackupWindow() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.PreferredBackupWindow })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
func (o ClusterInstanceOutput) PreferredMaintenanceWindow() pulumix.Output[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[string] { return v.PreferredMaintenanceWindow })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
func (o ClusterInstanceOutput) PromotionTier() pulumix.Output[*int] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[*int] { return v.PromotionTier })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Bool to control if instance is publicly accessible. Default `false`. See the documentation on [Creating DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) for more details on controlling this property.
func (o ClusterInstanceOutput) PubliclyAccessible() pulumix.Output[*bool] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[*bool] { return v.PubliclyAccessible })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Specifies whether the DB cluster is encrypted.
func (o ClusterInstanceOutput) StorageEncrypted() pulumix.Output[bool] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[bool] { return v.StorageEncrypted })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Map of tags to assign to the instance. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ClusterInstanceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ClusterInstanceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.
func (o ClusterInstanceOutput) Writer() pulumix.Output[bool] {
	value := pulumix.Apply[ClusterInstance](o, func(v ClusterInstance) pulumix.Output[bool] { return v.Writer })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

func init() {
	pulumi.RegisterOutputType(ClusterInstanceOutput{})
}
