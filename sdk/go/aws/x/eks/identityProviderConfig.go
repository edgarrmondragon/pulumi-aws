// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EKS Identity Provider Configuration.
type IdentityProviderConfig struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the EKS Identity Provider Configuration.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Name of the EKS Cluster.
	ClusterName pulumix.Output[string] `pulumi:"clusterName"`
	// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
	Oidc pulumix.GPtrOutput[IdentityProviderConfigOidc, IdentityProviderConfigOidcOutput] `pulumi:"oidc"`
	// Status of the EKS Identity Provider Configuration.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewIdentityProviderConfig registers a new resource with the given unique name, arguments, and options.
func NewIdentityProviderConfig(ctx *pulumi.Context,
	name string, args *IdentityProviderConfigArgs, opts ...pulumi.ResourceOption) (*IdentityProviderConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.Oidc == nil {
		return nil, errors.New("invalid value for required argument 'Oidc'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityProviderConfig
	err := ctx.RegisterResource("aws:eks/identityProviderConfig:IdentityProviderConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityProviderConfig gets an existing IdentityProviderConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityProviderConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityProviderConfigState, opts ...pulumi.ResourceOption) (*IdentityProviderConfig, error) {
	var resource IdentityProviderConfig
	err := ctx.ReadResource("aws:eks/identityProviderConfig:IdentityProviderConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityProviderConfig resources.
type identityProviderConfigState struct {
	// Amazon Resource Name (ARN) of the EKS Identity Provider Configuration.
	Arn *string `pulumi:"arn"`
	// Name of the EKS Cluster.
	ClusterName *string `pulumi:"clusterName"`
	// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
	Oidc *IdentityProviderConfigOidc `pulumi:"oidc"`
	// Status of the EKS Identity Provider Configuration.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type IdentityProviderConfigState struct {
	// Amazon Resource Name (ARN) of the EKS Identity Provider Configuration.
	Arn pulumix.Input[*string]
	// Name of the EKS Cluster.
	ClusterName pulumix.Input[*string]
	// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
	Oidc pulumix.Input[*IdentityProviderConfigOidcArgs]
	// Status of the EKS Identity Provider Configuration.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (IdentityProviderConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderConfigState)(nil)).Elem()
}

type identityProviderConfigArgs struct {
	// Name of the EKS Cluster.
	ClusterName string `pulumi:"clusterName"`
	// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
	Oidc IdentityProviderConfigOidc `pulumi:"oidc"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a IdentityProviderConfig resource.
type IdentityProviderConfigArgs struct {
	// Name of the EKS Cluster.
	ClusterName pulumix.Input[string]
	// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
	Oidc pulumix.Input[*IdentityProviderConfigOidcArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (IdentityProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderConfigArgs)(nil)).Elem()
}

type IdentityProviderConfigOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfig)(nil)).Elem()
}

func (o IdentityProviderConfigOutput) ToIdentityProviderConfigOutput() IdentityProviderConfigOutput {
	return o
}

func (o IdentityProviderConfigOutput) ToIdentityProviderConfigOutputWithContext(ctx context.Context) IdentityProviderConfigOutput {
	return o
}

func (o IdentityProviderConfigOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityProviderConfig] {
	return pulumix.Output[IdentityProviderConfig]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the EKS Identity Provider Configuration.
func (o IdentityProviderConfigOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[IdentityProviderConfig](o, func(v IdentityProviderConfig) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the EKS Cluster.
func (o IdentityProviderConfigOutput) ClusterName() pulumix.Output[string] {
	value := pulumix.Apply[IdentityProviderConfig](o, func(v IdentityProviderConfig) pulumix.Output[string] { return v.ClusterName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
func (o IdentityProviderConfigOutput) Oidc() pulumix.GPtrOutput[IdentityProviderConfigOidc, IdentityProviderConfigOidcOutput] {
	value := pulumix.Apply[IdentityProviderConfig](o, func(v IdentityProviderConfig) pulumix.GPtrOutput[IdentityProviderConfigOidc, IdentityProviderConfigOidcOutput] {
		return v.Oidc
	})
	unwrapped := pulumix.Flatten[*IdentityProviderConfigOidc, pulumix.GPtrOutput[IdentityProviderConfigOidc, IdentityProviderConfigOidcOutput]](value)
	return pulumix.GPtrOutput[IdentityProviderConfigOidc, IdentityProviderConfigOidcOutput]{OutputState: unwrapped.OutputState}
}

// Status of the EKS Identity Provider Configuration.
func (o IdentityProviderConfigOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[IdentityProviderConfig](o, func(v IdentityProviderConfig) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o IdentityProviderConfigOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[IdentityProviderConfig](o, func(v IdentityProviderConfig) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o IdentityProviderConfigOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[IdentityProviderConfig](o, func(v IdentityProviderConfig) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(IdentityProviderConfigOutput{})
}
