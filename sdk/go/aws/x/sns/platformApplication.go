// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an SNS platform application resource
type PlatformApplication struct {
	pulumi.CustomResourceState

	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId pulumix.Output[*string] `pulumi:"applePlatformBundleId"`
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId pulumix.Output[*string] `pulumi:"applePlatformTeamId"`
	// The ARN of the SNS platform application
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn pulumix.Output[*string] `pulumi:"eventDeliveryFailureTopicArn"`
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn pulumix.Output[*string] `pulumi:"eventEndpointCreatedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn pulumix.Output[*string] `pulumi:"eventEndpointDeletedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn pulumix.Output[*string] `pulumi:"eventEndpointUpdatedTopicArn"`
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn pulumix.Output[*string] `pulumi:"failureFeedbackRoleArn"`
	// The friendly name for the SNS platform application
	Name pulumix.Output[string] `pulumi:"name"`
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform pulumix.Output[string] `pulumi:"platform"`
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential pulumix.Output[string] `pulumi:"platformCredential"`
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal pulumix.Output[*string] `pulumi:"platformPrincipal"`
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn pulumix.Output[*string] `pulumi:"successFeedbackRoleArn"`
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate pulumix.Output[*string] `pulumi:"successFeedbackSampleRate"`
}

// NewPlatformApplication registers a new resource with the given unique name, arguments, and options.
func NewPlatformApplication(ctx *pulumi.Context,
	name string, args *PlatformApplicationArgs, opts ...pulumi.ResourceOption) (*PlatformApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Platform == nil {
		return nil, errors.New("invalid value for required argument 'Platform'")
	}
	if args.PlatformCredential == nil {
		return nil, errors.New("invalid value for required argument 'PlatformCredential'")
	}
	if args.PlatformCredential != nil {
		untypedSecretValue := pulumi.ToSecret(args.PlatformCredential.ToOutput(ctx.Context()).Untyped())
		args.PlatformCredential = pulumix.MustConvertTyped[string](untypedSecretValue)
	}
	if args.PlatformPrincipal != nil {
		untypedSecretValue := pulumi.ToSecret(args.PlatformPrincipal.ToOutput(ctx.Context()).Untyped())
		args.PlatformPrincipal = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"platformCredential",
		"platformPrincipal",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PlatformApplication
	err := ctx.RegisterResource("aws:sns/platformApplication:PlatformApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlatformApplication gets an existing PlatformApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlatformApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlatformApplicationState, opts ...pulumi.ResourceOption) (*PlatformApplication, error) {
	var resource PlatformApplication
	err := ctx.ReadResource("aws:sns/platformApplication:PlatformApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlatformApplication resources.
type platformApplicationState struct {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId *string `pulumi:"applePlatformBundleId"`
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId *string `pulumi:"applePlatformTeamId"`
	// The ARN of the SNS platform application
	Arn *string `pulumi:"arn"`
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn *string `pulumi:"eventDeliveryFailureTopicArn"`
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn *string `pulumi:"eventEndpointCreatedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn *string `pulumi:"eventEndpointDeletedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn *string `pulumi:"eventEndpointUpdatedTopicArn"`
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn *string `pulumi:"failureFeedbackRoleArn"`
	// The friendly name for the SNS platform application
	Name *string `pulumi:"name"`
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform *string `pulumi:"platform"`
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential *string `pulumi:"platformCredential"`
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal *string `pulumi:"platformPrincipal"`
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn *string `pulumi:"successFeedbackRoleArn"`
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate *string `pulumi:"successFeedbackSampleRate"`
}

type PlatformApplicationState struct {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId pulumix.Input[*string]
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId pulumix.Input[*string]
	// The ARN of the SNS platform application
	Arn pulumix.Input[*string]
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn pulumix.Input[*string]
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn pulumix.Input[*string]
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn pulumix.Input[*string]
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn pulumix.Input[*string]
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn pulumix.Input[*string]
	// The friendly name for the SNS platform application
	Name pulumix.Input[*string]
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform pulumix.Input[*string]
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential pulumix.Input[*string]
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal pulumix.Input[*string]
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn pulumix.Input[*string]
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate pulumix.Input[*string]
}

func (PlatformApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*platformApplicationState)(nil)).Elem()
}

type platformApplicationArgs struct {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId *string `pulumi:"applePlatformBundleId"`
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId *string `pulumi:"applePlatformTeamId"`
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn *string `pulumi:"eventDeliveryFailureTopicArn"`
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn *string `pulumi:"eventEndpointCreatedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn *string `pulumi:"eventEndpointDeletedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn *string `pulumi:"eventEndpointUpdatedTopicArn"`
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn *string `pulumi:"failureFeedbackRoleArn"`
	// The friendly name for the SNS platform application
	Name *string `pulumi:"name"`
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform string `pulumi:"platform"`
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential string `pulumi:"platformCredential"`
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal *string `pulumi:"platformPrincipal"`
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn *string `pulumi:"successFeedbackRoleArn"`
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate *string `pulumi:"successFeedbackSampleRate"`
}

// The set of arguments for constructing a PlatformApplication resource.
type PlatformApplicationArgs struct {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId pulumix.Input[*string]
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId pulumix.Input[*string]
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn pulumix.Input[*string]
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn pulumix.Input[*string]
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn pulumix.Input[*string]
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn pulumix.Input[*string]
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn pulumix.Input[*string]
	// The friendly name for the SNS platform application
	Name pulumix.Input[*string]
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform pulumix.Input[string]
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential pulumix.Input[string]
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal pulumix.Input[*string]
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn pulumix.Input[*string]
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate pulumix.Input[*string]
}

func (PlatformApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*platformApplicationArgs)(nil)).Elem()
}

type PlatformApplicationOutput struct{ *pulumi.OutputState }

func (PlatformApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlatformApplication)(nil)).Elem()
}

func (o PlatformApplicationOutput) ToPlatformApplicationOutput() PlatformApplicationOutput {
	return o
}

func (o PlatformApplicationOutput) ToPlatformApplicationOutputWithContext(ctx context.Context) PlatformApplicationOutput {
	return o
}

func (o PlatformApplicationOutput) ToOutput(ctx context.Context) pulumix.Output[PlatformApplication] {
	return pulumix.Output[PlatformApplication]{
		OutputState: o.OutputState,
	}
}

// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
func (o PlatformApplicationOutput) ApplePlatformBundleId() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.ApplePlatformBundleId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
func (o PlatformApplicationOutput) ApplePlatformTeamId() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.ApplePlatformTeamId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN of the SNS platform application
func (o PlatformApplicationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
func (o PlatformApplicationOutput) EventDeliveryFailureTopicArn() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.EventDeliveryFailureTopicArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
func (o PlatformApplicationOutput) EventEndpointCreatedTopicArn() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.EventEndpointCreatedTopicArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
func (o PlatformApplicationOutput) EventEndpointDeletedTopicArn() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.EventEndpointDeletedTopicArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
func (o PlatformApplicationOutput) EventEndpointUpdatedTopicArn() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.EventEndpointUpdatedTopicArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
func (o PlatformApplicationOutput) FailureFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.FailureFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The friendly name for the SNS platform application
func (o PlatformApplicationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
func (o PlatformApplicationOutput) Platform() pulumix.Output[string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[string] { return v.Platform })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
func (o PlatformApplicationOutput) PlatformCredential() pulumix.Output[string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[string] { return v.PlatformCredential })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
func (o PlatformApplicationOutput) PlatformPrincipal() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.PlatformPrincipal })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
func (o PlatformApplicationOutput) SuccessFeedbackRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.SuccessFeedbackRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The sample rate percentage (0-100) of successfully delivered messages.
//
// The following attributes are needed only when using APNS token credentials:
func (o PlatformApplicationOutput) SuccessFeedbackSampleRate() pulumix.Output[*string] {
	value := pulumix.Apply[PlatformApplication](o, func(v PlatformApplication) pulumix.Output[*string] { return v.SuccessFeedbackSampleRate })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(PlatformApplicationOutput{})
}
