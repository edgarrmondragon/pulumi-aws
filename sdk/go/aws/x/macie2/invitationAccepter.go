// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package macie2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an [Amazon Macie Invitation Accepter](https://docs.aws.amazon.com/macie/latest/APIReference/invitations-accept.html).
type InvitationAccepter struct {
	pulumi.CustomResourceState

	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId pulumix.Output[string] `pulumi:"administratorAccountId"`
	// The unique identifier for the invitation.
	InvitationId pulumix.Output[string] `pulumi:"invitationId"`
}

// NewInvitationAccepter registers a new resource with the given unique name, arguments, and options.
func NewInvitationAccepter(ctx *pulumi.Context,
	name string, args *InvitationAccepterArgs, opts ...pulumi.ResourceOption) (*InvitationAccepter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdministratorAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AdministratorAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InvitationAccepter
	err := ctx.RegisterResource("aws:macie2/invitationAccepter:InvitationAccepter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInvitationAccepter gets an existing InvitationAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInvitationAccepter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InvitationAccepterState, opts ...pulumi.ResourceOption) (*InvitationAccepter, error) {
	var resource InvitationAccepter
	err := ctx.ReadResource("aws:macie2/invitationAccepter:InvitationAccepter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InvitationAccepter resources.
type invitationAccepterState struct {
	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId *string `pulumi:"administratorAccountId"`
	// The unique identifier for the invitation.
	InvitationId *string `pulumi:"invitationId"`
}

type InvitationAccepterState struct {
	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId pulumix.Input[*string]
	// The unique identifier for the invitation.
	InvitationId pulumix.Input[*string]
}

func (InvitationAccepterState) ElementType() reflect.Type {
	return reflect.TypeOf((*invitationAccepterState)(nil)).Elem()
}

type invitationAccepterArgs struct {
	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId string `pulumi:"administratorAccountId"`
}

// The set of arguments for constructing a InvitationAccepter resource.
type InvitationAccepterArgs struct {
	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId pulumix.Input[string]
}

func (InvitationAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*invitationAccepterArgs)(nil)).Elem()
}

type InvitationAccepterOutput struct{ *pulumi.OutputState }

func (InvitationAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationAccepter)(nil)).Elem()
}

func (o InvitationAccepterOutput) ToInvitationAccepterOutput() InvitationAccepterOutput {
	return o
}

func (o InvitationAccepterOutput) ToInvitationAccepterOutputWithContext(ctx context.Context) InvitationAccepterOutput {
	return o
}

func (o InvitationAccepterOutput) ToOutput(ctx context.Context) pulumix.Output[InvitationAccepter] {
	return pulumix.Output[InvitationAccepter]{
		OutputState: o.OutputState,
	}
}

// The AWS account ID for the account that sent the invitation.
func (o InvitationAccepterOutput) AdministratorAccountId() pulumix.Output[string] {
	value := pulumix.Apply[InvitationAccepter](o, func(v InvitationAccepter) pulumix.Output[string] { return v.AdministratorAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The unique identifier for the invitation.
func (o InvitationAccepterOutput) InvitationId() pulumix.Output[string] {
	value := pulumix.Apply[InvitationAccepter](o, func(v InvitationAccepter) pulumix.Output[string] { return v.InvitationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(InvitationAccepterOutput{})
}
