// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an AWS DataSync EFS Location.
//
// > **NOTE:** The EFS File System must have a mounted EFS Mount Target before creating this resource.
type EfsLocation struct {
	pulumi.CustomResourceState

	// Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.
	AccessPointArn pulumix.Output[*string] `pulumi:"accessPointArn"`
	// Amazon Resource Name (ARN) of the DataSync Location.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Configuration block containing EC2 configurations for connecting to the EFS File System.
	Ec2Config pulumix.GPtrOutput[EfsLocationEc2Config, EfsLocationEc2ConfigOutput] `pulumi:"ec2Config"`
	// Amazon Resource Name (ARN) of EFS File System.
	EfsFileSystemArn pulumix.Output[string] `pulumi:"efsFileSystemArn"`
	// Specifies an Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.
	FileSystemAccessRoleArn pulumix.Output[*string] `pulumi:"fileSystemAccessRoleArn"`
	// Specifies whether you want DataSync to use TLS encryption when transferring data to or from your Amazon EFS file system. Valid values are `NONE` and `TLS1_2`.
	InTransitEncryption pulumix.Output[*string] `pulumi:"inTransitEncryption"`
	// Subdirectory to perform actions as source or destination. Default `/`.
	Subdirectory pulumix.Output[*string] `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	Uri     pulumix.Output[string]    `pulumi:"uri"`
}

// NewEfsLocation registers a new resource with the given unique name, arguments, and options.
func NewEfsLocation(ctx *pulumi.Context,
	name string, args *EfsLocationArgs, opts ...pulumi.ResourceOption) (*EfsLocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ec2Config == nil {
		return nil, errors.New("invalid value for required argument 'Ec2Config'")
	}
	if args.EfsFileSystemArn == nil {
		return nil, errors.New("invalid value for required argument 'EfsFileSystemArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EfsLocation
	err := ctx.RegisterResource("aws:datasync/efsLocation:EfsLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEfsLocation gets an existing EfsLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEfsLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EfsLocationState, opts ...pulumi.ResourceOption) (*EfsLocation, error) {
	var resource EfsLocation
	err := ctx.ReadResource("aws:datasync/efsLocation:EfsLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EfsLocation resources.
type efsLocationState struct {
	// Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.
	AccessPointArn *string `pulumi:"accessPointArn"`
	// Amazon Resource Name (ARN) of the DataSync Location.
	Arn *string `pulumi:"arn"`
	// Configuration block containing EC2 configurations for connecting to the EFS File System.
	Ec2Config *EfsLocationEc2Config `pulumi:"ec2Config"`
	// Amazon Resource Name (ARN) of EFS File System.
	EfsFileSystemArn *string `pulumi:"efsFileSystemArn"`
	// Specifies an Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.
	FileSystemAccessRoleArn *string `pulumi:"fileSystemAccessRoleArn"`
	// Specifies whether you want DataSync to use TLS encryption when transferring data to or from your Amazon EFS file system. Valid values are `NONE` and `TLS1_2`.
	InTransitEncryption *string `pulumi:"inTransitEncryption"`
	// Subdirectory to perform actions as source or destination. Default `/`.
	Subdirectory *string `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	Uri     *string           `pulumi:"uri"`
}

type EfsLocationState struct {
	// Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.
	AccessPointArn pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the DataSync Location.
	Arn pulumix.Input[*string]
	// Configuration block containing EC2 configurations for connecting to the EFS File System.
	Ec2Config pulumix.Input[*EfsLocationEc2ConfigArgs]
	// Amazon Resource Name (ARN) of EFS File System.
	EfsFileSystemArn pulumix.Input[*string]
	// Specifies an Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.
	FileSystemAccessRoleArn pulumix.Input[*string]
	// Specifies whether you want DataSync to use TLS encryption when transferring data to or from your Amazon EFS file system. Valid values are `NONE` and `TLS1_2`.
	InTransitEncryption pulumix.Input[*string]
	// Subdirectory to perform actions as source or destination. Default `/`.
	Subdirectory pulumix.Input[*string]
	// Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	Uri     pulumix.Input[*string]
}

func (EfsLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*efsLocationState)(nil)).Elem()
}

type efsLocationArgs struct {
	// Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.
	AccessPointArn *string `pulumi:"accessPointArn"`
	// Configuration block containing EC2 configurations for connecting to the EFS File System.
	Ec2Config EfsLocationEc2Config `pulumi:"ec2Config"`
	// Amazon Resource Name (ARN) of EFS File System.
	EfsFileSystemArn string `pulumi:"efsFileSystemArn"`
	// Specifies an Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.
	FileSystemAccessRoleArn *string `pulumi:"fileSystemAccessRoleArn"`
	// Specifies whether you want DataSync to use TLS encryption when transferring data to or from your Amazon EFS file system. Valid values are `NONE` and `TLS1_2`.
	InTransitEncryption *string `pulumi:"inTransitEncryption"`
	// Subdirectory to perform actions as source or destination. Default `/`.
	Subdirectory *string `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EfsLocation resource.
type EfsLocationArgs struct {
	// Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.
	AccessPointArn pulumix.Input[*string]
	// Configuration block containing EC2 configurations for connecting to the EFS File System.
	Ec2Config pulumix.Input[*EfsLocationEc2ConfigArgs]
	// Amazon Resource Name (ARN) of EFS File System.
	EfsFileSystemArn pulumix.Input[string]
	// Specifies an Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.
	FileSystemAccessRoleArn pulumix.Input[*string]
	// Specifies whether you want DataSync to use TLS encryption when transferring data to or from your Amazon EFS file system. Valid values are `NONE` and `TLS1_2`.
	InTransitEncryption pulumix.Input[*string]
	// Subdirectory to perform actions as source or destination. Default `/`.
	Subdirectory pulumix.Input[*string]
	// Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (EfsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*efsLocationArgs)(nil)).Elem()
}

type EfsLocationOutput struct{ *pulumi.OutputState }

func (EfsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EfsLocation)(nil)).Elem()
}

func (o EfsLocationOutput) ToEfsLocationOutput() EfsLocationOutput {
	return o
}

func (o EfsLocationOutput) ToEfsLocationOutputWithContext(ctx context.Context) EfsLocationOutput {
	return o
}

func (o EfsLocationOutput) ToOutput(ctx context.Context) pulumix.Output[EfsLocation] {
	return pulumix.Output[EfsLocation]{
		OutputState: o.OutputState,
	}
}

// Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.
func (o EfsLocationOutput) AccessPointArn() pulumix.Output[*string] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.Output[*string] { return v.AccessPointArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Amazon Resource Name (ARN) of the DataSync Location.
func (o EfsLocationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block containing EC2 configurations for connecting to the EFS File System.
func (o EfsLocationOutput) Ec2Config() pulumix.GPtrOutput[EfsLocationEc2Config, EfsLocationEc2ConfigOutput] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.GPtrOutput[EfsLocationEc2Config, EfsLocationEc2ConfigOutput] {
		return v.Ec2Config
	})
	unwrapped := pulumix.Flatten[*EfsLocationEc2Config, pulumix.GPtrOutput[EfsLocationEc2Config, EfsLocationEc2ConfigOutput]](value)
	return pulumix.GPtrOutput[EfsLocationEc2Config, EfsLocationEc2ConfigOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of EFS File System.
func (o EfsLocationOutput) EfsFileSystemArn() pulumix.Output[string] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.Output[string] { return v.EfsFileSystemArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies an Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.
func (o EfsLocationOutput) FileSystemAccessRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.Output[*string] { return v.FileSystemAccessRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies whether you want DataSync to use TLS encryption when transferring data to or from your Amazon EFS file system. Valid values are `NONE` and `TLS1_2`.
func (o EfsLocationOutput) InTransitEncryption() pulumix.Output[*string] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.Output[*string] { return v.InTransitEncryption })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Subdirectory to perform actions as source or destination. Default `/`.
func (o EfsLocationOutput) Subdirectory() pulumix.Output[*string] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.Output[*string] { return v.Subdirectory })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o EfsLocationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o EfsLocationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o EfsLocationOutput) Uri() pulumix.Output[string] {
	value := pulumix.Apply[EfsLocation](o, func(v EfsLocation) pulumix.Output[string] { return v.Uri })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(EfsLocationOutput{})
}
