// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sesv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS SESv2 (Simple Email V2) Contact List.
type ContactList struct {
	pulumi.CustomResourceState

	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name of the contact list.
	//
	// The following arguments are optional:
	ContactListName pulumix.Output[string] `pulumi:"contactListName"`
	// A timestamp noting when the contact list was created in ISO 8601 format.
	CreatedTimestamp pulumix.Output[string] `pulumi:"createdTimestamp"`
	// A description of what the contact list is about.
	Description pulumix.Output[*string] `pulumi:"description"`
	// A timestamp noting the last time the contact list was updated in ISO 8601 format.
	LastUpdatedTimestamp pulumix.Output[string] `pulumi:"lastUpdatedTimestamp"`
	// Key-value map of resource tags for the contact list. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Configuration block(s) with topic for the contact list. Detailed below.
	Topics pulumix.GArrayOutput[ContactListTopic, ContactListTopicOutput] `pulumi:"topics"`
}

// NewContactList registers a new resource with the given unique name, arguments, and options.
func NewContactList(ctx *pulumi.Context,
	name string, args *ContactListArgs, opts ...pulumi.ResourceOption) (*ContactList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContactListName == nil {
		return nil, errors.New("invalid value for required argument 'ContactListName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContactList
	err := ctx.RegisterResource("aws:sesv2/contactList:ContactList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContactList gets an existing ContactList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContactList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContactListState, opts ...pulumi.ResourceOption) (*ContactList, error) {
	var resource ContactList
	err := ctx.ReadResource("aws:sesv2/contactList:ContactList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContactList resources.
type contactListState struct {
	Arn *string `pulumi:"arn"`
	// The name of the contact list.
	//
	// The following arguments are optional:
	ContactListName *string `pulumi:"contactListName"`
	// A timestamp noting when the contact list was created in ISO 8601 format.
	CreatedTimestamp *string `pulumi:"createdTimestamp"`
	// A description of what the contact list is about.
	Description *string `pulumi:"description"`
	// A timestamp noting the last time the contact list was updated in ISO 8601 format.
	LastUpdatedTimestamp *string `pulumi:"lastUpdatedTimestamp"`
	// Key-value map of resource tags for the contact list. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Configuration block(s) with topic for the contact list. Detailed below.
	Topics []ContactListTopic `pulumi:"topics"`
}

type ContactListState struct {
	Arn pulumix.Input[*string]
	// The name of the contact list.
	//
	// The following arguments are optional:
	ContactListName pulumix.Input[*string]
	// A timestamp noting when the contact list was created in ISO 8601 format.
	CreatedTimestamp pulumix.Input[*string]
	// A description of what the contact list is about.
	Description pulumix.Input[*string]
	// A timestamp noting the last time the contact list was updated in ISO 8601 format.
	LastUpdatedTimestamp pulumix.Input[*string]
	// Key-value map of resource tags for the contact list. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.Input[map[string]string]
	TagsAll pulumix.Input[map[string]string]
	// Configuration block(s) with topic for the contact list. Detailed below.
	Topics pulumix.Input[[]*ContactListTopicArgs]
}

func (ContactListState) ElementType() reflect.Type {
	return reflect.TypeOf((*contactListState)(nil)).Elem()
}

type contactListArgs struct {
	// The name of the contact list.
	//
	// The following arguments are optional:
	ContactListName string `pulumi:"contactListName"`
	// A description of what the contact list is about.
	Description *string `pulumi:"description"`
	// Key-value map of resource tags for the contact list. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Configuration block(s) with topic for the contact list. Detailed below.
	Topics []ContactListTopic `pulumi:"topics"`
}

// The set of arguments for constructing a ContactList resource.
type ContactListArgs struct {
	// The name of the contact list.
	//
	// The following arguments are optional:
	ContactListName pulumix.Input[string]
	// A description of what the contact list is about.
	Description pulumix.Input[*string]
	// Key-value map of resource tags for the contact list. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Configuration block(s) with topic for the contact list. Detailed below.
	Topics pulumix.Input[[]*ContactListTopicArgs]
}

func (ContactListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contactListArgs)(nil)).Elem()
}

type ContactListOutput struct{ *pulumi.OutputState }

func (ContactListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactList)(nil)).Elem()
}

func (o ContactListOutput) ToContactListOutput() ContactListOutput {
	return o
}

func (o ContactListOutput) ToContactListOutputWithContext(ctx context.Context) ContactListOutput {
	return o
}

func (o ContactListOutput) ToOutput(ctx context.Context) pulumix.Output[ContactList] {
	return pulumix.Output[ContactList]{
		OutputState: o.OutputState,
	}
}

func (o ContactListOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ContactList](o, func(v ContactList) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the contact list.
//
// The following arguments are optional:
func (o ContactListOutput) ContactListName() pulumix.Output[string] {
	value := pulumix.Apply[ContactList](o, func(v ContactList) pulumix.Output[string] { return v.ContactListName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A timestamp noting when the contact list was created in ISO 8601 format.
func (o ContactListOutput) CreatedTimestamp() pulumix.Output[string] {
	value := pulumix.Apply[ContactList](o, func(v ContactList) pulumix.Output[string] { return v.CreatedTimestamp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description of what the contact list is about.
func (o ContactListOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[ContactList](o, func(v ContactList) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A timestamp noting the last time the contact list was updated in ISO 8601 format.
func (o ContactListOutput) LastUpdatedTimestamp() pulumix.Output[string] {
	value := pulumix.Apply[ContactList](o, func(v ContactList) pulumix.Output[string] { return v.LastUpdatedTimestamp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags for the contact list. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ContactListOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ContactList](o, func(v ContactList) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o ContactListOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ContactList](o, func(v ContactList) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block(s) with topic for the contact list. Detailed below.
func (o ContactListOutput) Topics() pulumix.GArrayOutput[ContactListTopic, ContactListTopicOutput] {
	value := pulumix.Apply[ContactList](o, func(v ContactList) pulumix.GArrayOutput[ContactListTopic, ContactListTopicOutput] { return v.Topics })
	unwrapped := pulumix.Flatten[[]ContactListTopic, pulumix.GArrayOutput[ContactListTopic, ContactListTopicOutput]](value)
	return pulumix.GArrayOutput[ContactListTopic, ContactListTopicOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ContactListOutput{})
}
