// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AppSync Function.
type Function struct {
	pulumi.CustomResourceState

	// ID of the associated AppSync API.
	ApiId pulumix.Output[string] `pulumi:"apiId"`
	// ARN of the Function object.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
	Code pulumix.Output[*string] `pulumi:"code"`
	// Function data source name.
	DataSource pulumix.Output[string] `pulumi:"dataSource"`
	// Function description.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Unique ID representing the Function object.
	FunctionId pulumix.Output[string] `pulumi:"functionId"`
	// Version of the request mapping template. Currently the supported value is `2018-05-29`. Does not apply when specifying `code`.
	FunctionVersion pulumix.Output[string] `pulumi:"functionVersion"`
	// Maximum batching size for a resolver. Valid values are between `0` and `2000`.
	MaxBatchSize pulumix.Output[*int] `pulumi:"maxBatchSize"`
	// Function name. The function name does not have to be unique.
	Name pulumix.Output[string] `pulumi:"name"`
	// Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate pulumix.Output[*string] `pulumi:"requestMappingTemplate"`
	// Function response mapping template.
	ResponseMappingTemplate pulumix.Output[*string] `pulumi:"responseMappingTemplate"`
	// Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See Runtime.
	Runtime pulumix.GPtrOutput[FunctionRuntime, FunctionRuntimeOutput] `pulumi:"runtime"`
	// Describes a Sync configuration for a resolver. See Sync Config.
	SyncConfig pulumix.GPtrOutput[FunctionSyncConfig, FunctionSyncConfigOutput] `pulumi:"syncConfig"`
}

// NewFunction registers a new resource with the given unique name, arguments, and options.
func NewFunction(ctx *pulumi.Context,
	name string, args *FunctionArgs, opts ...pulumi.ResourceOption) (*Function, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.DataSource == nil {
		return nil, errors.New("invalid value for required argument 'DataSource'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Function
	err := ctx.RegisterResource("aws:appsync/function:Function", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunction gets an existing Function resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionState, opts ...pulumi.ResourceOption) (*Function, error) {
	var resource Function
	err := ctx.ReadResource("aws:appsync/function:Function", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Function resources.
type functionState struct {
	// ID of the associated AppSync API.
	ApiId *string `pulumi:"apiId"`
	// ARN of the Function object.
	Arn *string `pulumi:"arn"`
	// The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
	Code *string `pulumi:"code"`
	// Function data source name.
	DataSource *string `pulumi:"dataSource"`
	// Function description.
	Description *string `pulumi:"description"`
	// Unique ID representing the Function object.
	FunctionId *string `pulumi:"functionId"`
	// Version of the request mapping template. Currently the supported value is `2018-05-29`. Does not apply when specifying `code`.
	FunctionVersion *string `pulumi:"functionVersion"`
	// Maximum batching size for a resolver. Valid values are between `0` and `2000`.
	MaxBatchSize *int `pulumi:"maxBatchSize"`
	// Function name. The function name does not have to be unique.
	Name *string `pulumi:"name"`
	// Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate *string `pulumi:"requestMappingTemplate"`
	// Function response mapping template.
	ResponseMappingTemplate *string `pulumi:"responseMappingTemplate"`
	// Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See Runtime.
	Runtime *FunctionRuntime `pulumi:"runtime"`
	// Describes a Sync configuration for a resolver. See Sync Config.
	SyncConfig *FunctionSyncConfig `pulumi:"syncConfig"`
}

type FunctionState struct {
	// ID of the associated AppSync API.
	ApiId pulumix.Input[*string]
	// ARN of the Function object.
	Arn pulumix.Input[*string]
	// The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
	Code pulumix.Input[*string]
	// Function data source name.
	DataSource pulumix.Input[*string]
	// Function description.
	Description pulumix.Input[*string]
	// Unique ID representing the Function object.
	FunctionId pulumix.Input[*string]
	// Version of the request mapping template. Currently the supported value is `2018-05-29`. Does not apply when specifying `code`.
	FunctionVersion pulumix.Input[*string]
	// Maximum batching size for a resolver. Valid values are between `0` and `2000`.
	MaxBatchSize pulumix.Input[*int]
	// Function name. The function name does not have to be unique.
	Name pulumix.Input[*string]
	// Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate pulumix.Input[*string]
	// Function response mapping template.
	ResponseMappingTemplate pulumix.Input[*string]
	// Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See Runtime.
	Runtime pulumix.Input[*FunctionRuntimeArgs]
	// Describes a Sync configuration for a resolver. See Sync Config.
	SyncConfig pulumix.Input[*FunctionSyncConfigArgs]
}

func (FunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionState)(nil)).Elem()
}

type functionArgs struct {
	// ID of the associated AppSync API.
	ApiId string `pulumi:"apiId"`
	// The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
	Code *string `pulumi:"code"`
	// Function data source name.
	DataSource string `pulumi:"dataSource"`
	// Function description.
	Description *string `pulumi:"description"`
	// Version of the request mapping template. Currently the supported value is `2018-05-29`. Does not apply when specifying `code`.
	FunctionVersion *string `pulumi:"functionVersion"`
	// Maximum batching size for a resolver. Valid values are between `0` and `2000`.
	MaxBatchSize *int `pulumi:"maxBatchSize"`
	// Function name. The function name does not have to be unique.
	Name *string `pulumi:"name"`
	// Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate *string `pulumi:"requestMappingTemplate"`
	// Function response mapping template.
	ResponseMappingTemplate *string `pulumi:"responseMappingTemplate"`
	// Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See Runtime.
	Runtime *FunctionRuntime `pulumi:"runtime"`
	// Describes a Sync configuration for a resolver. See Sync Config.
	SyncConfig *FunctionSyncConfig `pulumi:"syncConfig"`
}

// The set of arguments for constructing a Function resource.
type FunctionArgs struct {
	// ID of the associated AppSync API.
	ApiId pulumix.Input[string]
	// The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
	Code pulumix.Input[*string]
	// Function data source name.
	DataSource pulumix.Input[string]
	// Function description.
	Description pulumix.Input[*string]
	// Version of the request mapping template. Currently the supported value is `2018-05-29`. Does not apply when specifying `code`.
	FunctionVersion pulumix.Input[*string]
	// Maximum batching size for a resolver. Valid values are between `0` and `2000`.
	MaxBatchSize pulumix.Input[*int]
	// Function name. The function name does not have to be unique.
	Name pulumix.Input[*string]
	// Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate pulumix.Input[*string]
	// Function response mapping template.
	ResponseMappingTemplate pulumix.Input[*string]
	// Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See Runtime.
	Runtime pulumix.Input[*FunctionRuntimeArgs]
	// Describes a Sync configuration for a resolver. See Sync Config.
	SyncConfig pulumix.Input[*FunctionSyncConfigArgs]
}

func (FunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionArgs)(nil)).Elem()
}

type FunctionOutput struct{ *pulumi.OutputState }

func (FunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Function)(nil)).Elem()
}

func (o FunctionOutput) ToFunctionOutput() FunctionOutput {
	return o
}

func (o FunctionOutput) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return o
}

func (o FunctionOutput) ToOutput(ctx context.Context) pulumix.Output[Function] {
	return pulumix.Output[Function]{
		OutputState: o.OutputState,
	}
}

// ID of the associated AppSync API.
func (o FunctionOutput) ApiId() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.ApiId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the Function object.
func (o FunctionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
func (o FunctionOutput) Code() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.Code })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Function data source name.
func (o FunctionOutput) DataSource() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.DataSource })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Function description.
func (o FunctionOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Unique ID representing the Function object.
func (o FunctionOutput) FunctionId() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.FunctionId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Version of the request mapping template. Currently the supported value is `2018-05-29`. Does not apply when specifying `code`.
func (o FunctionOutput) FunctionVersion() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.FunctionVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Maximum batching size for a resolver. Valid values are between `0` and `2000`.
func (o FunctionOutput) MaxBatchSize() pulumix.Output[*int] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*int] { return v.MaxBatchSize })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Function name. The function name does not have to be unique.
func (o FunctionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
func (o FunctionOutput) RequestMappingTemplate() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.RequestMappingTemplate })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Function response mapping template.
func (o FunctionOutput) ResponseMappingTemplate() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.ResponseMappingTemplate })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See Runtime.
func (o FunctionOutput) Runtime() pulumix.GPtrOutput[FunctionRuntime, FunctionRuntimeOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionRuntime, FunctionRuntimeOutput] { return v.Runtime })
	unwrapped := pulumix.Flatten[*FunctionRuntime, pulumix.GPtrOutput[FunctionRuntime, FunctionRuntimeOutput]](value)
	return pulumix.GPtrOutput[FunctionRuntime, FunctionRuntimeOutput]{OutputState: unwrapped.OutputState}
}

// Describes a Sync configuration for a resolver. See Sync Config.
func (o FunctionOutput) SyncConfig() pulumix.GPtrOutput[FunctionSyncConfig, FunctionSyncConfigOutput] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.GPtrOutput[FunctionSyncConfig, FunctionSyncConfigOutput] { return v.SyncConfig })
	unwrapped := pulumix.Flatten[*FunctionSyncConfig, pulumix.GPtrOutput[FunctionSyncConfig, FunctionSyncConfigOutput]](value)
	return pulumix.GPtrOutput[FunctionSyncConfig, FunctionSyncConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(FunctionOutput{})
}
