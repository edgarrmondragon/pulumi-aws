// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect Vocabulary resource. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
type Vocabulary struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the vocabulary.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.
	Content pulumix.Output[string] `pulumi:"content"`
	// The reason why the custom vocabulary was not created.
	FailureReason pulumix.Output[string] `pulumi:"failureReason"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Output[string] `pulumi:"instanceId"`
	// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
	LanguageCode pulumix.Output[string] `pulumi:"languageCode"`
	// The timestamp when the custom vocabulary was last modified.
	LastModifiedTime pulumix.Output[string] `pulumi:"lastModifiedTime"`
	// A unique name of the custom vocabulary. Must not be more than 140 characters.
	Name pulumix.Output[string] `pulumi:"name"`
	// The current state of the custom vocabulary. Valid values are `CREATION_IN_PROGRESS`, `ACTIVE`, `CREATION_FAILED`, `DELETE_IN_PROGRESS`.
	State pulumix.Output[string] `pulumi:"state"`
	// Tags to apply to the vocabulary. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The identifier of the custom vocabulary.
	VocabularyId pulumix.Output[string] `pulumi:"vocabularyId"`
}

// NewVocabulary registers a new resource with the given unique name, arguments, and options.
func NewVocabulary(ctx *pulumi.Context,
	name string, args *VocabularyArgs, opts ...pulumi.ResourceOption) (*Vocabulary, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Content == nil {
		return nil, errors.New("invalid value for required argument 'Content'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.LanguageCode == nil {
		return nil, errors.New("invalid value for required argument 'LanguageCode'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Vocabulary
	err := ctx.RegisterResource("aws:connect/vocabulary:Vocabulary", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVocabulary gets an existing Vocabulary resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVocabulary(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VocabularyState, opts ...pulumi.ResourceOption) (*Vocabulary, error) {
	var resource Vocabulary
	err := ctx.ReadResource("aws:connect/vocabulary:Vocabulary", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vocabulary resources.
type vocabularyState struct {
	// The Amazon Resource Name (ARN) of the vocabulary.
	Arn *string `pulumi:"arn"`
	// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.
	Content *string `pulumi:"content"`
	// The reason why the custom vocabulary was not created.
	FailureReason *string `pulumi:"failureReason"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId *string `pulumi:"instanceId"`
	// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
	LanguageCode *string `pulumi:"languageCode"`
	// The timestamp when the custom vocabulary was last modified.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// A unique name of the custom vocabulary. Must not be more than 140 characters.
	Name *string `pulumi:"name"`
	// The current state of the custom vocabulary. Valid values are `CREATION_IN_PROGRESS`, `ACTIVE`, `CREATION_FAILED`, `DELETE_IN_PROGRESS`.
	State *string `pulumi:"state"`
	// Tags to apply to the vocabulary. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The identifier of the custom vocabulary.
	VocabularyId *string `pulumi:"vocabularyId"`
}

type VocabularyState struct {
	// The Amazon Resource Name (ARN) of the vocabulary.
	Arn pulumix.Input[*string]
	// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.
	Content pulumix.Input[*string]
	// The reason why the custom vocabulary was not created.
	FailureReason pulumix.Input[*string]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[*string]
	// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
	LanguageCode pulumix.Input[*string]
	// The timestamp when the custom vocabulary was last modified.
	LastModifiedTime pulumix.Input[*string]
	// A unique name of the custom vocabulary. Must not be more than 140 characters.
	Name pulumix.Input[*string]
	// The current state of the custom vocabulary. Valid values are `CREATION_IN_PROGRESS`, `ACTIVE`, `CREATION_FAILED`, `DELETE_IN_PROGRESS`.
	State pulumix.Input[*string]
	// Tags to apply to the vocabulary. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The identifier of the custom vocabulary.
	VocabularyId pulumix.Input[*string]
}

func (VocabularyState) ElementType() reflect.Type {
	return reflect.TypeOf((*vocabularyState)(nil)).Elem()
}

type vocabularyArgs struct {
	// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.
	Content string `pulumi:"content"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId string `pulumi:"instanceId"`
	// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
	LanguageCode string `pulumi:"languageCode"`
	// A unique name of the custom vocabulary. Must not be more than 140 characters.
	Name *string `pulumi:"name"`
	// Tags to apply to the vocabulary. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Vocabulary resource.
type VocabularyArgs struct {
	// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.
	Content pulumix.Input[string]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[string]
	// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
	LanguageCode pulumix.Input[string]
	// A unique name of the custom vocabulary. Must not be more than 140 characters.
	Name pulumix.Input[*string]
	// Tags to apply to the vocabulary. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (VocabularyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vocabularyArgs)(nil)).Elem()
}

type VocabularyOutput struct{ *pulumi.OutputState }

func (VocabularyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Vocabulary)(nil)).Elem()
}

func (o VocabularyOutput) ToVocabularyOutput() VocabularyOutput {
	return o
}

func (o VocabularyOutput) ToVocabularyOutputWithContext(ctx context.Context) VocabularyOutput {
	return o
}

func (o VocabularyOutput) ToOutput(ctx context.Context) pulumix.Output[Vocabulary] {
	return pulumix.Output[Vocabulary]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the vocabulary.
func (o VocabularyOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.
func (o VocabularyOutput) Content() pulumix.Output[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.Output[string] { return v.Content })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The reason why the custom vocabulary was not created.
func (o VocabularyOutput) FailureReason() pulumix.Output[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.Output[string] { return v.FailureReason })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the identifier of the hosting Amazon Connect Instance.
func (o VocabularyOutput) InstanceId() pulumix.Output[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.Output[string] { return v.InstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
func (o VocabularyOutput) LanguageCode() pulumix.Output[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.Output[string] { return v.LanguageCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The timestamp when the custom vocabulary was last modified.
func (o VocabularyOutput) LastModifiedTime() pulumix.Output[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.Output[string] { return v.LastModifiedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A unique name of the custom vocabulary. Must not be more than 140 characters.
func (o VocabularyOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The current state of the custom vocabulary. Valid values are `CREATION_IN_PROGRESS`, `ACTIVE`, `CREATION_FAILED`, `DELETE_IN_PROGRESS`.
func (o VocabularyOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Tags to apply to the vocabulary. If configured with a provider
// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o VocabularyOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o VocabularyOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The identifier of the custom vocabulary.
func (o VocabularyOutput) VocabularyId() pulumix.Output[string] {
	value := pulumix.Apply[Vocabulary](o, func(v Vocabulary) pulumix.Output[string] { return v.VocabularyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(VocabularyOutput{})
}
