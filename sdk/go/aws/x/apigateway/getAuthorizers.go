// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about multiple API Gateway Authorizers.
func GetAuthorizers(ctx *pulumi.Context, args *GetAuthorizersArgs, opts ...pulumi.InvokeOption) (*GetAuthorizersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAuthorizersResult
	err := ctx.Invoke("aws:apigateway/getAuthorizers:getAuthorizers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthorizers.
type GetAuthorizersArgs struct {
	// ID of the associated REST API.
	RestApiId string `pulumi:"restApiId"`
}

// A collection of values returned by getAuthorizers.
type GetAuthorizersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of Authorizer identifiers.
	Ids       []string `pulumi:"ids"`
	RestApiId string   `pulumi:"restApiId"`
}

func GetAuthorizersOutput(ctx *pulumi.Context, args GetAuthorizersOutputArgs, opts ...pulumi.InvokeOption) GetAuthorizersResultOutput {
	outputResult := pulumix.ApplyErr[*GetAuthorizersArgs](args.ToOutput(), func(plainArgs *GetAuthorizersArgs) (*GetAuthorizersResult, error) {
		return GetAuthorizers(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetAuthorizersResultOutput, *GetAuthorizersResult](outputResult)
}

// A collection of arguments for invoking getAuthorizers.
type GetAuthorizersOutputArgs struct {
	// ID of the associated REST API.
	RestApiId pulumix.Input[string] `pulumi:"restApiId"`
}

func (args GetAuthorizersOutputArgs) ToOutput() pulumix.Output[*GetAuthorizersArgs] {
	allArgs := pulumix.All(
		args.RestApiId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetAuthorizersArgs {
		return &GetAuthorizersArgs{
			RestApiId: resolvedArgs[0].(string),
		}
	})
}

type GetAuthorizersResultOutput struct{ *pulumi.OutputState }

func (GetAuthorizersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizersResult)(nil)).Elem()
}

func (o GetAuthorizersResultOutput) ToOutput(context.Context) pulumix.Output[*GetAuthorizersResult] {
	return pulumix.Output[*GetAuthorizersResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAuthorizersResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetAuthorizersResult](o, func(v *GetAuthorizersResult) string { return v.Id })
}

func (o GetAuthorizersResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAuthorizersResult](o, func(v *GetAuthorizersResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAuthorizersResultOutput) RestApiId() pulumix.Output[string] {
	return pulumix.Apply[*GetAuthorizersResult](o, func(v *GetAuthorizersResult) string { return v.RestApiId })
}
