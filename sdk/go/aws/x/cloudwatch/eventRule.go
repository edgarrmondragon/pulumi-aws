// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an EventBridge Rule resource.
//
// > **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.
type EventRule struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the rule.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The description of the rule.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The name or ARN of the event bus to associate with this rule.
	// If you omit this, the `default` event bus is used.
	EventBusName pulumix.Output[*string] `pulumi:"eventBusName"`
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required. See full documentation of [Events and Event Patterns in EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html) for details.
	EventPattern pulumix.Output[*string] `pulumi:"eventPattern"`
	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled pulumix.Output[*bool] `pulumi:"isEnabled"`
	// The name of the rule. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Output[string] `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`. **Note**: Due to the length of the generated suffix, must be 38 characters or less.
	NamePrefix pulumix.Output[string] `pulumi:"namePrefix"`
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn pulumix.Output[*string] `pulumi:"roleArn"`
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required. Can only be used on the default event bus. For more information, refer to the AWS documentation [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html).
	ScheduleExpression pulumix.Output[*string] `pulumi:"scheduleExpression"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewEventRule registers a new resource with the given unique name, arguments, and options.
func NewEventRule(ctx *pulumi.Context,
	name string, args *EventRuleArgs, opts ...pulumi.ResourceOption) (*EventRule, error) {
	if args == nil {
		args = &EventRuleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventRule
	err := ctx.RegisterResource("aws:cloudwatch/eventRule:EventRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventRule gets an existing EventRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventRuleState, opts ...pulumi.ResourceOption) (*EventRule, error) {
	var resource EventRule
	err := ctx.ReadResource("aws:cloudwatch/eventRule:EventRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventRule resources.
type eventRuleState struct {
	// The Amazon Resource Name (ARN) of the rule.
	Arn *string `pulumi:"arn"`
	// The description of the rule.
	Description *string `pulumi:"description"`
	// The name or ARN of the event bus to associate with this rule.
	// If you omit this, the `default` event bus is used.
	EventBusName *string `pulumi:"eventBusName"`
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required. See full documentation of [Events and Event Patterns in EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html) for details.
	EventPattern *string `pulumi:"eventPattern"`
	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled *bool `pulumi:"isEnabled"`
	// The name of the rule. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`. **Note**: Due to the length of the generated suffix, must be 38 characters or less.
	NamePrefix *string `pulumi:"namePrefix"`
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn *string `pulumi:"roleArn"`
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required. Can only be used on the default event bus. For more information, refer to the AWS documentation [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html).
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type EventRuleState struct {
	// The Amazon Resource Name (ARN) of the rule.
	Arn pulumix.Input[*string]
	// The description of the rule.
	Description pulumix.Input[*string]
	// The name or ARN of the event bus to associate with this rule.
	// If you omit this, the `default` event bus is used.
	EventBusName pulumix.Input[*string]
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required. See full documentation of [Events and Event Patterns in EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html) for details.
	EventPattern pulumix.Input[*string]
	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled pulumix.Input[*bool]
	// The name of the rule. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`. **Note**: Due to the length of the generated suffix, must be 38 characters or less.
	NamePrefix pulumix.Input[*string]
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn pulumix.Input[*string]
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required. Can only be used on the default event bus. For more information, refer to the AWS documentation [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html).
	ScheduleExpression pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (EventRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventRuleState)(nil)).Elem()
}

type eventRuleArgs struct {
	// The description of the rule.
	Description *string `pulumi:"description"`
	// The name or ARN of the event bus to associate with this rule.
	// If you omit this, the `default` event bus is used.
	EventBusName *string `pulumi:"eventBusName"`
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required. See full documentation of [Events and Event Patterns in EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html) for details.
	EventPattern *string `pulumi:"eventPattern"`
	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled *bool `pulumi:"isEnabled"`
	// The name of the rule. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`. **Note**: Due to the length of the generated suffix, must be 38 characters or less.
	NamePrefix *string `pulumi:"namePrefix"`
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn *string `pulumi:"roleArn"`
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required. Can only be used on the default event bus. For more information, refer to the AWS documentation [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html).
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EventRule resource.
type EventRuleArgs struct {
	// The description of the rule.
	Description pulumix.Input[*string]
	// The name or ARN of the event bus to associate with this rule.
	// If you omit this, the `default` event bus is used.
	EventBusName pulumix.Input[*string]
	// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required. See full documentation of [Events and Event Patterns in EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html) for details.
	EventPattern pulumix.Input[*string]
	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled pulumix.Input[*bool]
	// The name of the rule. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`. **Note**: Due to the length of the generated suffix, must be 38 characters or less.
	NamePrefix pulumix.Input[*string]
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn pulumix.Input[*string]
	// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required. Can only be used on the default event bus. For more information, refer to the AWS documentation [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html).
	ScheduleExpression pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (EventRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventRuleArgs)(nil)).Elem()
}

type EventRuleOutput struct{ *pulumi.OutputState }

func (EventRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventRule)(nil)).Elem()
}

func (o EventRuleOutput) ToEventRuleOutput() EventRuleOutput {
	return o
}

func (o EventRuleOutput) ToEventRuleOutputWithContext(ctx context.Context) EventRuleOutput {
	return o
}

func (o EventRuleOutput) ToOutput(ctx context.Context) pulumix.Output[EventRule] {
	return pulumix.Output[EventRule]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the rule.
func (o EventRuleOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the rule.
func (o EventRuleOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name or ARN of the event bus to associate with this rule.
// If you omit this, the `default` event bus is used.
func (o EventRuleOutput) EventBusName() pulumix.Output[*string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.Output[*string] { return v.EventBusName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The event pattern described a JSON object. At least one of `scheduleExpression` or `eventPattern` is required. See full documentation of [Events and Event Patterns in EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html) for details.
func (o EventRuleOutput) EventPattern() pulumix.Output[*string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.Output[*string] { return v.EventPattern })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Whether the rule should be enabled (defaults to `true`).
func (o EventRuleOutput) IsEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.Output[*bool] { return v.IsEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The name of the rule. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
func (o EventRuleOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique name beginning with the specified prefix. Conflicts with `name`. **Note**: Due to the length of the generated suffix, must be 38 characters or less.
func (o EventRuleOutput) NamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.Output[string] { return v.NamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
func (o EventRuleOutput) RoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.Output[*string] { return v.RoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `scheduleExpression` or `eventPattern` is required. Can only be used on the default event bus. For more information, refer to the AWS documentation [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html).
func (o EventRuleOutput) ScheduleExpression() pulumix.Output[*string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.Output[*string] { return v.ScheduleExpression })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o EventRuleOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o EventRuleOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[EventRule](o, func(v EventRule) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(EventRuleOutput{})
}
