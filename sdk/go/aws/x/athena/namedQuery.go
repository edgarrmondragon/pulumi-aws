// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package athena

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Athena Named Query resource.
type NamedQuery struct {
	pulumi.CustomResourceState

	// Database to which the query belongs.
	Database pulumix.Output[string] `pulumi:"database"`
	// Brief explanation of the query. Maximum length of 1024.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Plain language name for the query. Maximum length of 128.
	Name pulumix.Output[string] `pulumi:"name"`
	// Text of the query itself. In other words, all query statements. Maximum length of 262144.
	Query pulumix.Output[string] `pulumi:"query"`
	// Workgroup to which the query belongs. Defaults to `primary`
	Workgroup pulumix.Output[*string] `pulumi:"workgroup"`
}

// NewNamedQuery registers a new resource with the given unique name, arguments, and options.
func NewNamedQuery(ctx *pulumi.Context,
	name string, args *NamedQueryArgs, opts ...pulumi.ResourceOption) (*NamedQuery, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Database == nil {
		return nil, errors.New("invalid value for required argument 'Database'")
	}
	if args.Query == nil {
		return nil, errors.New("invalid value for required argument 'Query'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NamedQuery
	err := ctx.RegisterResource("aws:athena/namedQuery:NamedQuery", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNamedQuery gets an existing NamedQuery resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamedQuery(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NamedQueryState, opts ...pulumi.ResourceOption) (*NamedQuery, error) {
	var resource NamedQuery
	err := ctx.ReadResource("aws:athena/namedQuery:NamedQuery", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NamedQuery resources.
type namedQueryState struct {
	// Database to which the query belongs.
	Database *string `pulumi:"database"`
	// Brief explanation of the query. Maximum length of 1024.
	Description *string `pulumi:"description"`
	// Plain language name for the query. Maximum length of 128.
	Name *string `pulumi:"name"`
	// Text of the query itself. In other words, all query statements. Maximum length of 262144.
	Query *string `pulumi:"query"`
	// Workgroup to which the query belongs. Defaults to `primary`
	Workgroup *string `pulumi:"workgroup"`
}

type NamedQueryState struct {
	// Database to which the query belongs.
	Database pulumix.Input[*string]
	// Brief explanation of the query. Maximum length of 1024.
	Description pulumix.Input[*string]
	// Plain language name for the query. Maximum length of 128.
	Name pulumix.Input[*string]
	// Text of the query itself. In other words, all query statements. Maximum length of 262144.
	Query pulumix.Input[*string]
	// Workgroup to which the query belongs. Defaults to `primary`
	Workgroup pulumix.Input[*string]
}

func (NamedQueryState) ElementType() reflect.Type {
	return reflect.TypeOf((*namedQueryState)(nil)).Elem()
}

type namedQueryArgs struct {
	// Database to which the query belongs.
	Database string `pulumi:"database"`
	// Brief explanation of the query. Maximum length of 1024.
	Description *string `pulumi:"description"`
	// Plain language name for the query. Maximum length of 128.
	Name *string `pulumi:"name"`
	// Text of the query itself. In other words, all query statements. Maximum length of 262144.
	Query string `pulumi:"query"`
	// Workgroup to which the query belongs. Defaults to `primary`
	Workgroup *string `pulumi:"workgroup"`
}

// The set of arguments for constructing a NamedQuery resource.
type NamedQueryArgs struct {
	// Database to which the query belongs.
	Database pulumix.Input[string]
	// Brief explanation of the query. Maximum length of 1024.
	Description pulumix.Input[*string]
	// Plain language name for the query. Maximum length of 128.
	Name pulumix.Input[*string]
	// Text of the query itself. In other words, all query statements. Maximum length of 262144.
	Query pulumix.Input[string]
	// Workgroup to which the query belongs. Defaults to `primary`
	Workgroup pulumix.Input[*string]
}

func (NamedQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*namedQueryArgs)(nil)).Elem()
}

type NamedQueryOutput struct{ *pulumi.OutputState }

func (NamedQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedQuery)(nil)).Elem()
}

func (o NamedQueryOutput) ToNamedQueryOutput() NamedQueryOutput {
	return o
}

func (o NamedQueryOutput) ToNamedQueryOutputWithContext(ctx context.Context) NamedQueryOutput {
	return o
}

func (o NamedQueryOutput) ToOutput(ctx context.Context) pulumix.Output[NamedQuery] {
	return pulumix.Output[NamedQuery]{
		OutputState: o.OutputState,
	}
}

// Database to which the query belongs.
func (o NamedQueryOutput) Database() pulumix.Output[string] {
	value := pulumix.Apply[NamedQuery](o, func(v NamedQuery) pulumix.Output[string] { return v.Database })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Brief explanation of the query. Maximum length of 1024.
func (o NamedQueryOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[NamedQuery](o, func(v NamedQuery) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Plain language name for the query. Maximum length of 128.
func (o NamedQueryOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[NamedQuery](o, func(v NamedQuery) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Text of the query itself. In other words, all query statements. Maximum length of 262144.
func (o NamedQueryOutput) Query() pulumix.Output[string] {
	value := pulumix.Apply[NamedQuery](o, func(v NamedQuery) pulumix.Output[string] { return v.Query })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Workgroup to which the query belongs. Defaults to `primary`
func (o NamedQueryOutput) Workgroup() pulumix.Output[*string] {
	value := pulumix.Apply[NamedQuery](o, func(v NamedQuery) pulumix.Output[*string] { return v.Workgroup })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(NamedQueryOutput{})
}
