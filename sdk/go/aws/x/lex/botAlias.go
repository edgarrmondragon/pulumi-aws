// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Lex Bot Alias resource. For more information see
// [Amazon Lex: How It Works](https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html)
type BotAlias struct {
	pulumi.CustomResourceState

	// The ARN of the bot alias.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name of the bot.
	BotName pulumix.Output[string] `pulumi:"botName"`
	// The name of the bot.
	BotVersion pulumix.Output[string] `pulumi:"botVersion"`
	// Checksum of the bot alias.
	Checksum pulumix.Output[string] `pulumi:"checksum"`
	// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
	ConversationLogs pulumix.GPtrOutput[BotAliasConversationLogs, BotAliasConversationLogsOutput] `pulumi:"conversationLogs"`
	// The date that the bot alias was created.
	CreatedDate pulumix.Output[string] `pulumi:"createdDate"`
	// A description of the alias. Must be less than or equal to 200 characters in length.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.
	LastUpdatedDate pulumix.Output[string] `pulumi:"lastUpdatedDate"`
	// The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumix.Output[string] `pulumi:"name"`
}

// NewBotAlias registers a new resource with the given unique name, arguments, and options.
func NewBotAlias(ctx *pulumi.Context,
	name string, args *BotAliasArgs, opts ...pulumi.ResourceOption) (*BotAlias, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BotName == nil {
		return nil, errors.New("invalid value for required argument 'BotName'")
	}
	if args.BotVersion == nil {
		return nil, errors.New("invalid value for required argument 'BotVersion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BotAlias
	err := ctx.RegisterResource("aws:lex/botAlias:BotAlias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBotAlias gets an existing BotAlias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBotAlias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotAliasState, opts ...pulumi.ResourceOption) (*BotAlias, error) {
	var resource BotAlias
	err := ctx.ReadResource("aws:lex/botAlias:BotAlias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BotAlias resources.
type botAliasState struct {
	// The ARN of the bot alias.
	Arn *string `pulumi:"arn"`
	// The name of the bot.
	BotName *string `pulumi:"botName"`
	// The name of the bot.
	BotVersion *string `pulumi:"botVersion"`
	// Checksum of the bot alias.
	Checksum *string `pulumi:"checksum"`
	// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
	ConversationLogs *BotAliasConversationLogs `pulumi:"conversationLogs"`
	// The date that the bot alias was created.
	CreatedDate *string `pulumi:"createdDate"`
	// A description of the alias. Must be less than or equal to 200 characters in length.
	Description *string `pulumi:"description"`
	// The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.
	LastUpdatedDate *string `pulumi:"lastUpdatedDate"`
	// The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name *string `pulumi:"name"`
}

type BotAliasState struct {
	// The ARN of the bot alias.
	Arn pulumix.Input[*string]
	// The name of the bot.
	BotName pulumix.Input[*string]
	// The name of the bot.
	BotVersion pulumix.Input[*string]
	// Checksum of the bot alias.
	Checksum pulumix.Input[*string]
	// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
	ConversationLogs pulumix.Input[*BotAliasConversationLogsArgs]
	// The date that the bot alias was created.
	CreatedDate pulumix.Input[*string]
	// A description of the alias. Must be less than or equal to 200 characters in length.
	Description pulumix.Input[*string]
	// The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.
	LastUpdatedDate pulumix.Input[*string]
	// The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumix.Input[*string]
}

func (BotAliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*botAliasState)(nil)).Elem()
}

type botAliasArgs struct {
	// The name of the bot.
	BotName string `pulumi:"botName"`
	// The name of the bot.
	BotVersion string `pulumi:"botVersion"`
	// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
	ConversationLogs *BotAliasConversationLogs `pulumi:"conversationLogs"`
	// A description of the alias. Must be less than or equal to 200 characters in length.
	Description *string `pulumi:"description"`
	// The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a BotAlias resource.
type BotAliasArgs struct {
	// The name of the bot.
	BotName pulumix.Input[string]
	// The name of the bot.
	BotVersion pulumix.Input[string]
	// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
	ConversationLogs pulumix.Input[*BotAliasConversationLogsArgs]
	// A description of the alias. Must be less than or equal to 200 characters in length.
	Description pulumix.Input[*string]
	// The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumix.Input[*string]
}

func (BotAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botAliasArgs)(nil)).Elem()
}

type BotAliasOutput struct{ *pulumi.OutputState }

func (BotAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAlias)(nil)).Elem()
}

func (o BotAliasOutput) ToBotAliasOutput() BotAliasOutput {
	return o
}

func (o BotAliasOutput) ToBotAliasOutputWithContext(ctx context.Context) BotAliasOutput {
	return o
}

func (o BotAliasOutput) ToOutput(ctx context.Context) pulumix.Output[BotAlias] {
	return pulumix.Output[BotAlias]{
		OutputState: o.OutputState,
	}
}

// The ARN of the bot alias.
func (o BotAliasOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[BotAlias](o, func(v BotAlias) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the bot.
func (o BotAliasOutput) BotName() pulumix.Output[string] {
	value := pulumix.Apply[BotAlias](o, func(v BotAlias) pulumix.Output[string] { return v.BotName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the bot.
func (o BotAliasOutput) BotVersion() pulumix.Output[string] {
	value := pulumix.Apply[BotAlias](o, func(v BotAlias) pulumix.Output[string] { return v.BotVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Checksum of the bot alias.
func (o BotAliasOutput) Checksum() pulumix.Output[string] {
	value := pulumix.Apply[BotAlias](o, func(v BotAlias) pulumix.Output[string] { return v.Checksum })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
func (o BotAliasOutput) ConversationLogs() pulumix.GPtrOutput[BotAliasConversationLogs, BotAliasConversationLogsOutput] {
	value := pulumix.Apply[BotAlias](o, func(v BotAlias) pulumix.GPtrOutput[BotAliasConversationLogs, BotAliasConversationLogsOutput] {
		return v.ConversationLogs
	})
	unwrapped := pulumix.Flatten[*BotAliasConversationLogs, pulumix.GPtrOutput[BotAliasConversationLogs, BotAliasConversationLogsOutput]](value)
	return pulumix.GPtrOutput[BotAliasConversationLogs, BotAliasConversationLogsOutput]{OutputState: unwrapped.OutputState}
}

// The date that the bot alias was created.
func (o BotAliasOutput) CreatedDate() pulumix.Output[string] {
	value := pulumix.Apply[BotAlias](o, func(v BotAlias) pulumix.Output[string] { return v.CreatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description of the alias. Must be less than or equal to 200 characters in length.
func (o BotAliasOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[BotAlias](o, func(v BotAlias) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.
func (o BotAliasOutput) LastUpdatedDate() pulumix.Output[string] {
	value := pulumix.Apply[BotAlias](o, func(v BotAlias) pulumix.Output[string] { return v.LastUpdatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
func (o BotAliasOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[BotAlias](o, func(v BotAlias) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(BotAliasOutput{})
}
