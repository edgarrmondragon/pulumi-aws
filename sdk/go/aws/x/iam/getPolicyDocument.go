// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Generates an IAM policy document in JSON format for use with resources that expect policy documents such as `iam.Policy`.
//
// Using this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.
func GetPolicyDocument(ctx *pulumi.Context, args *GetPolicyDocumentArgs, opts ...pulumi.InvokeOption) (*GetPolicyDocumentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPolicyDocumentResult
	err := ctx.Invoke("aws:iam/getPolicyDocument:getPolicyDocument", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicyDocument.
type GetPolicyDocumentArgs struct {
	// List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid` from earlier documents in the list. Statements with non-blank `sid`s will also override statements with the same `sid` from `sourcePolicyDocuments`.  Non-overriding statements will be added to the exported document.
	OverridePolicyDocuments []string `pulumi:"overridePolicyDocuments"`
	// ID for the policy document.
	PolicyId *string `pulumi:"policyId"`
	// List of IAM policy documents that are merged together into the exported document. Statements defined in `sourcePolicyDocuments` must have unique `sid`s. Statements with the same `sid` from `overridePolicyDocuments` will override source statements.
	SourcePolicyDocuments []string `pulumi:"sourcePolicyDocuments"`
	// Configuration block for a policy statement. Detailed below.
	Statements []GetPolicyDocumentStatement `pulumi:"statements"`
	// IAM policy document version. Valid values are `2008-10-17` and `2012-10-17`. Defaults to `2012-10-17`. For more information, see the [AWS IAM User Guide](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_version.html).
	Version *string `pulumi:"version"`
}

// A collection of values returned by getPolicyDocument.
type GetPolicyDocumentResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Standard JSON policy document rendered based on the arguments above.
	Json                    string                       `pulumi:"json"`
	OverridePolicyDocuments []string                     `pulumi:"overridePolicyDocuments"`
	PolicyId                *string                      `pulumi:"policyId"`
	SourcePolicyDocuments   []string                     `pulumi:"sourcePolicyDocuments"`
	Statements              []GetPolicyDocumentStatement `pulumi:"statements"`
	Version                 *string                      `pulumi:"version"`
}

func GetPolicyDocumentOutput(ctx *pulumi.Context, args GetPolicyDocumentOutputArgs, opts ...pulumi.InvokeOption) GetPolicyDocumentResultOutput {
	outputResult := pulumix.ApplyErr[*GetPolicyDocumentArgs](args.ToOutput(), func(plainArgs *GetPolicyDocumentArgs) (*GetPolicyDocumentResult, error) {
		return GetPolicyDocument(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetPolicyDocumentResultOutput, *GetPolicyDocumentResult](outputResult)
}

// A collection of arguments for invoking getPolicyDocument.
type GetPolicyDocumentOutputArgs struct {
	// List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid` from earlier documents in the list. Statements with non-blank `sid`s will also override statements with the same `sid` from `sourcePolicyDocuments`.  Non-overriding statements will be added to the exported document.
	OverridePolicyDocuments pulumix.Input[[]string] `pulumi:"overridePolicyDocuments"`
	// ID for the policy document.
	PolicyId pulumix.Input[*string] `pulumi:"policyId"`
	// List of IAM policy documents that are merged together into the exported document. Statements defined in `sourcePolicyDocuments` must have unique `sid`s. Statements with the same `sid` from `overridePolicyDocuments` will override source statements.
	SourcePolicyDocuments pulumix.Input[[]string] `pulumi:"sourcePolicyDocuments"`
	// Configuration block for a policy statement. Detailed below.
	Statements pulumix.Input[[]*GetPolicyDocumentStatementArgs] `pulumi:"statements"`
	// IAM policy document version. Valid values are `2008-10-17` and `2012-10-17`. Defaults to `2012-10-17`. For more information, see the [AWS IAM User Guide](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_version.html).
	Version pulumix.Input[*string] `pulumi:"version"`
}

func (args GetPolicyDocumentOutputArgs) ToOutput() pulumix.Output[*GetPolicyDocumentArgs] {
	allArgs := pulumix.All(
		args.OverridePolicyDocuments.ToOutput(context.Background()).AsAny(),
		args.PolicyId.ToOutput(context.Background()).AsAny(),
		args.SourcePolicyDocuments.ToOutput(context.Background()).AsAny(),
		args.Statements.ToOutput(context.Background()).AsAny(),
		args.Version.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetPolicyDocumentArgs {
		return &GetPolicyDocumentArgs{
			OverridePolicyDocuments: resolvedArgs[0].([]string),
			PolicyId:                resolvedArgs[1].(*string),
			SourcePolicyDocuments:   resolvedArgs[2].([]string),
			Statements:              resolvedArgs[3].([]GetPolicyDocumentStatement),
			Version:                 resolvedArgs[4].(*string),
		}
	})
}

type GetPolicyDocumentResultOutput struct{ *pulumi.OutputState }

func (GetPolicyDocumentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentResult)(nil)).Elem()
}

func (o GetPolicyDocumentResultOutput) ToOutput(context.Context) pulumix.Output[*GetPolicyDocumentResult] {
	return pulumix.Output[*GetPolicyDocumentResult]{
		OutputState: o.OutputState,
	}
}

func (o GetPolicyDocumentResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetPolicyDocumentResult](o, func(v *GetPolicyDocumentResult) string { return v.Id })
}

func (o GetPolicyDocumentResultOutput) Json() pulumix.Output[string] {
	return pulumix.Apply[*GetPolicyDocumentResult](o, func(v *GetPolicyDocumentResult) string { return v.Json })
}

func (o GetPolicyDocumentResultOutput) OverridePolicyDocuments() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetPolicyDocumentResult](o, func(v *GetPolicyDocumentResult) []string { return v.OverridePolicyDocuments })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetPolicyDocumentResultOutput) PolicyId() pulumix.Output[*string] {
	return pulumix.Apply[*GetPolicyDocumentResult](o, func(v *GetPolicyDocumentResult) *string { return v.PolicyId })
}

func (o GetPolicyDocumentResultOutput) SourcePolicyDocuments() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetPolicyDocumentResult](o, func(v *GetPolicyDocumentResult) []string { return v.SourcePolicyDocuments })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetPolicyDocumentResultOutput) Statements() pulumix.GArrayOutput[GetPolicyDocumentStatement, GetPolicyDocumentStatementOutput] {
	value := pulumix.Apply[*GetPolicyDocumentResult](o, func(v *GetPolicyDocumentResult) []GetPolicyDocumentStatement { return v.Statements })
	return pulumix.GArrayOutput[GetPolicyDocumentStatement, GetPolicyDocumentStatementOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetPolicyDocumentResultOutput) Version() pulumix.Output[*string] {
	return pulumix.Apply[*GetPolicyDocumentResult](o, func(v *GetPolicyDocumentResult) *string { return v.Version })
}
