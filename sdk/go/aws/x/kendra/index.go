// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Kendra Index resource.
type Index struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Index.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits pulumix.GPtrOutput[IndexCapacityUnits, IndexCapacityUnitsOutput] `pulumi:"capacityUnits"`
	// The Unix datetime that the index was created.
	CreatedAt pulumix.Output[string] `pulumi:"createdAt"`
	// The description of the Index.
	Description pulumix.Output[*string] `pulumi:"description"`
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates pulumix.GArrayOutput[IndexDocumentMetadataConfigurationUpdate, IndexDocumentMetadataConfigurationUpdateOutput] `pulumi:"documentMetadataConfigurationUpdates"`
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition pulumix.Output[*string] `pulumi:"edition"`
	// When the Status field value is `FAILED`, this contains a message that explains why.
	ErrorMessage pulumix.Output[string] `pulumi:"errorMessage"`
	// A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Detailed below.
	IndexStatistics pulumix.GArrayOutput[IndexIndexStatistic, IndexIndexStatisticOutput] `pulumi:"indexStatistics"`
	// Specifies the name of the Index.
	Name pulumix.Output[string] `pulumi:"name"`
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration pulumix.GPtrOutput[IndexServerSideEncryptionConfiguration, IndexServerSideEncryptionConfigurationOutput] `pulumi:"serverSideEncryptionConfiguration"`
	// The current status of the index. When the value is `ACTIVE`, the index is ready for use. If the Status field value is `FAILED`, the `errorMessage` field contains a message that explains why.
	Status pulumix.Output[string] `pulumi:"status"`
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The Unix datetime that the index was last updated.
	UpdatedAt pulumix.Output[string] `pulumi:"updatedAt"`
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy pulumix.Output[*string] `pulumi:"userContextPolicy"`
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration pulumix.GPtrOutput[IndexUserGroupResolutionConfiguration, IndexUserGroupResolutionConfigurationOutput] `pulumi:"userGroupResolutionConfiguration"`
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations pulumix.GPtrOutput[IndexUserTokenConfigurations, IndexUserTokenConfigurationsOutput] `pulumi:"userTokenConfigurations"`
}

// NewIndex registers a new resource with the given unique name, arguments, and options.
func NewIndex(ctx *pulumi.Context,
	name string, args *IndexArgs, opts ...pulumi.ResourceOption) (*Index, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Index
	err := ctx.RegisterResource("aws:kendra/index:Index", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIndex gets an existing Index resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIndex(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IndexState, opts ...pulumi.ResourceOption) (*Index, error) {
	var resource Index
	err := ctx.ReadResource("aws:kendra/index:Index", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Index resources.
type indexState struct {
	// The Amazon Resource Name (ARN) of the Index.
	Arn *string `pulumi:"arn"`
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits *IndexCapacityUnits `pulumi:"capacityUnits"`
	// The Unix datetime that the index was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The description of the Index.
	Description *string `pulumi:"description"`
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates []IndexDocumentMetadataConfigurationUpdate `pulumi:"documentMetadataConfigurationUpdates"`
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition *string `pulumi:"edition"`
	// When the Status field value is `FAILED`, this contains a message that explains why.
	ErrorMessage *string `pulumi:"errorMessage"`
	// A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Detailed below.
	IndexStatistics []IndexIndexStatistic `pulumi:"indexStatistics"`
	// Specifies the name of the Index.
	Name *string `pulumi:"name"`
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn *string `pulumi:"roleArn"`
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration *IndexServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	// The current status of the index. When the value is `ACTIVE`, the index is ready for use. If the Status field value is `FAILED`, the `errorMessage` field contains a message that explains why.
	Status *string `pulumi:"status"`
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The Unix datetime that the index was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy *string `pulumi:"userContextPolicy"`
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration *IndexUserGroupResolutionConfiguration `pulumi:"userGroupResolutionConfiguration"`
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations *IndexUserTokenConfigurations `pulumi:"userTokenConfigurations"`
}

type IndexState struct {
	// The Amazon Resource Name (ARN) of the Index.
	Arn pulumix.Input[*string]
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits pulumix.Input[*IndexCapacityUnitsArgs]
	// The Unix datetime that the index was created.
	CreatedAt pulumix.Input[*string]
	// The description of the Index.
	Description pulumix.Input[*string]
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates pulumix.Input[[]*IndexDocumentMetadataConfigurationUpdateArgs]
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition pulumix.Input[*string]
	// When the Status field value is `FAILED`, this contains a message that explains why.
	ErrorMessage pulumix.Input[*string]
	// A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Detailed below.
	IndexStatistics pulumix.Input[[]*IndexIndexStatisticArgs]
	// Specifies the name of the Index.
	Name pulumix.Input[*string]
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn pulumix.Input[*string]
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration pulumix.Input[*IndexServerSideEncryptionConfigurationArgs]
	// The current status of the index. When the value is `ACTIVE`, the index is ready for use. If the Status field value is `FAILED`, the `errorMessage` field contains a message that explains why.
	Status pulumix.Input[*string]
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The Unix datetime that the index was last updated.
	UpdatedAt pulumix.Input[*string]
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy pulumix.Input[*string]
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration pulumix.Input[*IndexUserGroupResolutionConfigurationArgs]
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations pulumix.Input[*IndexUserTokenConfigurationsArgs]
}

func (IndexState) ElementType() reflect.Type {
	return reflect.TypeOf((*indexState)(nil)).Elem()
}

type indexArgs struct {
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits *IndexCapacityUnits `pulumi:"capacityUnits"`
	// The description of the Index.
	Description *string `pulumi:"description"`
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates []IndexDocumentMetadataConfigurationUpdate `pulumi:"documentMetadataConfigurationUpdates"`
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition *string `pulumi:"edition"`
	// Specifies the name of the Index.
	Name *string `pulumi:"name"`
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn string `pulumi:"roleArn"`
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration *IndexServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy *string `pulumi:"userContextPolicy"`
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration *IndexUserGroupResolutionConfiguration `pulumi:"userGroupResolutionConfiguration"`
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations *IndexUserTokenConfigurations `pulumi:"userTokenConfigurations"`
}

// The set of arguments for constructing a Index resource.
type IndexArgs struct {
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits pulumix.Input[*IndexCapacityUnitsArgs]
	// The description of the Index.
	Description pulumix.Input[*string]
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates pulumix.Input[[]*IndexDocumentMetadataConfigurationUpdateArgs]
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition pulumix.Input[*string]
	// Specifies the name of the Index.
	Name pulumix.Input[*string]
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn pulumix.Input[string]
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration pulumix.Input[*IndexServerSideEncryptionConfigurationArgs]
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy pulumix.Input[*string]
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration pulumix.Input[*IndexUserGroupResolutionConfigurationArgs]
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations pulumix.Input[*IndexUserTokenConfigurationsArgs]
}

func (IndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*indexArgs)(nil)).Elem()
}

type IndexOutput struct{ *pulumi.OutputState }

func (IndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Index)(nil)).Elem()
}

func (o IndexOutput) ToIndexOutput() IndexOutput {
	return o
}

func (o IndexOutput) ToIndexOutputWithContext(ctx context.Context) IndexOutput {
	return o
}

func (o IndexOutput) ToOutput(ctx context.Context) pulumix.Output[Index] {
	return pulumix.Output[Index]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Index.
func (o IndexOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
func (o IndexOutput) CapacityUnits() pulumix.GPtrOutput[IndexCapacityUnits, IndexCapacityUnitsOutput] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.GPtrOutput[IndexCapacityUnits, IndexCapacityUnitsOutput] { return v.CapacityUnits })
	unwrapped := pulumix.Flatten[*IndexCapacityUnits, pulumix.GPtrOutput[IndexCapacityUnits, IndexCapacityUnitsOutput]](value)
	return pulumix.GPtrOutput[IndexCapacityUnits, IndexCapacityUnitsOutput]{OutputState: unwrapped.OutputState}
}

// The Unix datetime that the index was created.
func (o IndexOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the Index.
func (o IndexOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
func (o IndexOutput) DocumentMetadataConfigurationUpdates() pulumix.GArrayOutput[IndexDocumentMetadataConfigurationUpdate, IndexDocumentMetadataConfigurationUpdateOutput] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.GArrayOutput[IndexDocumentMetadataConfigurationUpdate, IndexDocumentMetadataConfigurationUpdateOutput] {
		return v.DocumentMetadataConfigurationUpdates
	})
	unwrapped := pulumix.Flatten[[]IndexDocumentMetadataConfigurationUpdate, pulumix.GArrayOutput[IndexDocumentMetadataConfigurationUpdate, IndexDocumentMetadataConfigurationUpdateOutput]](value)
	return pulumix.GArrayOutput[IndexDocumentMetadataConfigurationUpdate, IndexDocumentMetadataConfigurationUpdateOutput]{OutputState: unwrapped.OutputState}
}

// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
func (o IndexOutput) Edition() pulumix.Output[*string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[*string] { return v.Edition })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// When the Status field value is `FAILED`, this contains a message that explains why.
func (o IndexOutput) ErrorMessage() pulumix.Output[string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[string] { return v.ErrorMessage })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Detailed below.
func (o IndexOutput) IndexStatistics() pulumix.GArrayOutput[IndexIndexStatistic, IndexIndexStatisticOutput] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.GArrayOutput[IndexIndexStatistic, IndexIndexStatisticOutput] {
		return v.IndexStatistics
	})
	unwrapped := pulumix.Flatten[[]IndexIndexStatistic, pulumix.GArrayOutput[IndexIndexStatistic, IndexIndexStatisticOutput]](value)
	return pulumix.GArrayOutput[IndexIndexStatistic, IndexIndexStatisticOutput]{OutputState: unwrapped.OutputState}
}

// Specifies the name of the Index.
func (o IndexOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
func (o IndexOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
func (o IndexOutput) ServerSideEncryptionConfiguration() pulumix.GPtrOutput[IndexServerSideEncryptionConfiguration, IndexServerSideEncryptionConfigurationOutput] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.GPtrOutput[IndexServerSideEncryptionConfiguration, IndexServerSideEncryptionConfigurationOutput] {
		return v.ServerSideEncryptionConfiguration
	})
	unwrapped := pulumix.Flatten[*IndexServerSideEncryptionConfiguration, pulumix.GPtrOutput[IndexServerSideEncryptionConfiguration, IndexServerSideEncryptionConfigurationOutput]](value)
	return pulumix.GPtrOutput[IndexServerSideEncryptionConfiguration, IndexServerSideEncryptionConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The current status of the index. When the value is `ACTIVE`, the index is ready for use. If the Status field value is `FAILED`, the `errorMessage` field contains a message that explains why.
func (o IndexOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Tags to apply to the Index. If configured with a provider
// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o IndexOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o IndexOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The Unix datetime that the index was last updated.
func (o IndexOutput) UpdatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[string] { return v.UpdatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
func (o IndexOutput) UserContextPolicy() pulumix.Output[*string] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.Output[*string] { return v.UserContextPolicy })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
func (o IndexOutput) UserGroupResolutionConfiguration() pulumix.GPtrOutput[IndexUserGroupResolutionConfiguration, IndexUserGroupResolutionConfigurationOutput] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.GPtrOutput[IndexUserGroupResolutionConfiguration, IndexUserGroupResolutionConfigurationOutput] {
		return v.UserGroupResolutionConfiguration
	})
	unwrapped := pulumix.Flatten[*IndexUserGroupResolutionConfiguration, pulumix.GPtrOutput[IndexUserGroupResolutionConfiguration, IndexUserGroupResolutionConfigurationOutput]](value)
	return pulumix.GPtrOutput[IndexUserGroupResolutionConfiguration, IndexUserGroupResolutionConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// A block that specifies the user token configuration. Detailed below.
func (o IndexOutput) UserTokenConfigurations() pulumix.GPtrOutput[IndexUserTokenConfigurations, IndexUserTokenConfigurationsOutput] {
	value := pulumix.Apply[Index](o, func(v Index) pulumix.GPtrOutput[IndexUserTokenConfigurations, IndexUserTokenConfigurationsOutput] {
		return v.UserTokenConfigurations
	})
	unwrapped := pulumix.Flatten[*IndexUserTokenConfigurations, pulumix.GPtrOutput[IndexUserTokenConfigurations, IndexUserTokenConfigurationsOutput]](value)
	return pulumix.GPtrOutput[IndexUserTokenConfigurations, IndexUserTokenConfigurationsOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(IndexOutput{})
}
