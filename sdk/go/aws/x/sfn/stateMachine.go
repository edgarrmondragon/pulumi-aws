// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sfn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Step Function State Machine resource
type StateMachine struct {
	pulumi.CustomResourceState

	// The ARN of the state machine.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The date the state machine was created.
	CreationDate pulumix.Output[string] `pulumi:"creationDate"`
	// The [Amazon States Language](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) definition of the state machine.
	Definition  pulumix.Output[string] `pulumi:"definition"`
	Description pulumix.Output[string] `pulumi:"description"`
	// Defines what execution history events are logged and where they are logged. The `loggingConfiguration` parameter is only valid when `type` is set to `EXPRESS`. Defaults to `OFF`. For more information see [Logging Express Workflows](https://docs.aws.amazon.com/step-functions/latest/dg/cw-logs.html) and [Log Levels](https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
	LoggingConfiguration pulumix.GPtrOutput[StateMachineLoggingConfiguration, StateMachineLoggingConfigurationOutput] `pulumi:"loggingConfiguration"`
	// The name of the state machine. The name should only contain `0`-`9`, `A`-`Z`, `a`-`z`, `-` and `_`. If omitted, the provider will assign a random, unique name.
	Name pulumix.Output[string] `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Output[string] `pulumi:"namePrefix"`
	// Set to true to publish a version of the state machine during creation. Default: false.
	Publish    pulumix.Output[*bool]  `pulumi:"publish"`
	RevisionId pulumix.Output[string] `pulumi:"revisionId"`
	// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
	RoleArn                pulumix.Output[string] `pulumi:"roleArn"`
	StateMachineVersionArn pulumix.Output[string] `pulumi:"stateMachineVersionArn"`
	// The current status of the state machine. Either `ACTIVE` or `DELETING`.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Selects whether AWS X-Ray tracing is enabled.
	TracingConfiguration pulumix.GPtrOutput[StateMachineTracingConfiguration, StateMachineTracingConfigurationOutput] `pulumi:"tracingConfiguration"`
	// Determines whether a Standard or Express state machine is created. The default is `STANDARD`. You cannot update the type of a state machine once it has been created. Valid values: `STANDARD`, `EXPRESS`.
	Type               pulumix.Output[*string] `pulumi:"type"`
	VersionDescription pulumix.Output[string]  `pulumi:"versionDescription"`
}

// NewStateMachine registers a new resource with the given unique name, arguments, and options.
func NewStateMachine(ctx *pulumi.Context,
	name string, args *StateMachineArgs, opts ...pulumi.ResourceOption) (*StateMachine, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Definition == nil {
		return nil, errors.New("invalid value for required argument 'Definition'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StateMachine
	err := ctx.RegisterResource("aws:sfn/stateMachine:StateMachine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStateMachine gets an existing StateMachine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStateMachine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StateMachineState, opts ...pulumi.ResourceOption) (*StateMachine, error) {
	var resource StateMachine
	err := ctx.ReadResource("aws:sfn/stateMachine:StateMachine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StateMachine resources.
type stateMachineState struct {
	// The ARN of the state machine.
	Arn *string `pulumi:"arn"`
	// The date the state machine was created.
	CreationDate *string `pulumi:"creationDate"`
	// The [Amazon States Language](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) definition of the state machine.
	Definition  *string `pulumi:"definition"`
	Description *string `pulumi:"description"`
	// Defines what execution history events are logged and where they are logged. The `loggingConfiguration` parameter is only valid when `type` is set to `EXPRESS`. Defaults to `OFF`. For more information see [Logging Express Workflows](https://docs.aws.amazon.com/step-functions/latest/dg/cw-logs.html) and [Log Levels](https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
	LoggingConfiguration *StateMachineLoggingConfiguration `pulumi:"loggingConfiguration"`
	// The name of the state machine. The name should only contain `0`-`9`, `A`-`Z`, `a`-`z`, `-` and `_`. If omitted, the provider will assign a random, unique name.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// Set to true to publish a version of the state machine during creation. Default: false.
	Publish    *bool   `pulumi:"publish"`
	RevisionId *string `pulumi:"revisionId"`
	// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
	RoleArn                *string `pulumi:"roleArn"`
	StateMachineVersionArn *string `pulumi:"stateMachineVersionArn"`
	// The current status of the state machine. Either `ACTIVE` or `DELETING`.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Selects whether AWS X-Ray tracing is enabled.
	TracingConfiguration *StateMachineTracingConfiguration `pulumi:"tracingConfiguration"`
	// Determines whether a Standard or Express state machine is created. The default is `STANDARD`. You cannot update the type of a state machine once it has been created. Valid values: `STANDARD`, `EXPRESS`.
	Type               *string `pulumi:"type"`
	VersionDescription *string `pulumi:"versionDescription"`
}

type StateMachineState struct {
	// The ARN of the state machine.
	Arn pulumix.Input[*string]
	// The date the state machine was created.
	CreationDate pulumix.Input[*string]
	// The [Amazon States Language](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) definition of the state machine.
	Definition  pulumix.Input[*string]
	Description pulumix.Input[*string]
	// Defines what execution history events are logged and where they are logged. The `loggingConfiguration` parameter is only valid when `type` is set to `EXPRESS`. Defaults to `OFF`. For more information see [Logging Express Workflows](https://docs.aws.amazon.com/step-functions/latest/dg/cw-logs.html) and [Log Levels](https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
	LoggingConfiguration pulumix.Input[*StateMachineLoggingConfigurationArgs]
	// The name of the state machine. The name should only contain `0`-`9`, `A`-`Z`, `a`-`z`, `-` and `_`. If omitted, the provider will assign a random, unique name.
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// Set to true to publish a version of the state machine during creation. Default: false.
	Publish    pulumix.Input[*bool]
	RevisionId pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
	RoleArn                pulumix.Input[*string]
	StateMachineVersionArn pulumix.Input[*string]
	// The current status of the state machine. Either `ACTIVE` or `DELETING`.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Selects whether AWS X-Ray tracing is enabled.
	TracingConfiguration pulumix.Input[*StateMachineTracingConfigurationArgs]
	// Determines whether a Standard or Express state machine is created. The default is `STANDARD`. You cannot update the type of a state machine once it has been created. Valid values: `STANDARD`, `EXPRESS`.
	Type               pulumix.Input[*string]
	VersionDescription pulumix.Input[*string]
}

func (StateMachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*stateMachineState)(nil)).Elem()
}

type stateMachineArgs struct {
	// The [Amazon States Language](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) definition of the state machine.
	Definition string `pulumi:"definition"`
	// Defines what execution history events are logged and where they are logged. The `loggingConfiguration` parameter is only valid when `type` is set to `EXPRESS`. Defaults to `OFF`. For more information see [Logging Express Workflows](https://docs.aws.amazon.com/step-functions/latest/dg/cw-logs.html) and [Log Levels](https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
	LoggingConfiguration *StateMachineLoggingConfiguration `pulumi:"loggingConfiguration"`
	// The name of the state machine. The name should only contain `0`-`9`, `A`-`Z`, `a`-`z`, `-` and `_`. If omitted, the provider will assign a random, unique name.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// Set to true to publish a version of the state machine during creation. Default: false.
	Publish *bool `pulumi:"publish"`
	// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
	RoleArn string `pulumi:"roleArn"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Selects whether AWS X-Ray tracing is enabled.
	TracingConfiguration *StateMachineTracingConfiguration `pulumi:"tracingConfiguration"`
	// Determines whether a Standard or Express state machine is created. The default is `STANDARD`. You cannot update the type of a state machine once it has been created. Valid values: `STANDARD`, `EXPRESS`.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a StateMachine resource.
type StateMachineArgs struct {
	// The [Amazon States Language](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) definition of the state machine.
	Definition pulumix.Input[string]
	// Defines what execution history events are logged and where they are logged. The `loggingConfiguration` parameter is only valid when `type` is set to `EXPRESS`. Defaults to `OFF`. For more information see [Logging Express Workflows](https://docs.aws.amazon.com/step-functions/latest/dg/cw-logs.html) and [Log Levels](https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
	LoggingConfiguration pulumix.Input[*StateMachineLoggingConfigurationArgs]
	// The name of the state machine. The name should only contain `0`-`9`, `A`-`Z`, `a`-`z`, `-` and `_`. If omitted, the provider will assign a random, unique name.
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// Set to true to publish a version of the state machine during creation. Default: false.
	Publish pulumix.Input[*bool]
	// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
	RoleArn pulumix.Input[string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Selects whether AWS X-Ray tracing is enabled.
	TracingConfiguration pulumix.Input[*StateMachineTracingConfigurationArgs]
	// Determines whether a Standard or Express state machine is created. The default is `STANDARD`. You cannot update the type of a state machine once it has been created. Valid values: `STANDARD`, `EXPRESS`.
	Type pulumix.Input[*string]
}

func (StateMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stateMachineArgs)(nil)).Elem()
}

type StateMachineOutput struct{ *pulumi.OutputState }

func (StateMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachine)(nil)).Elem()
}

func (o StateMachineOutput) ToStateMachineOutput() StateMachineOutput {
	return o
}

func (o StateMachineOutput) ToStateMachineOutputWithContext(ctx context.Context) StateMachineOutput {
	return o
}

func (o StateMachineOutput) ToOutput(ctx context.Context) pulumix.Output[StateMachine] {
	return pulumix.Output[StateMachine]{
		OutputState: o.OutputState,
	}
}

// The ARN of the state machine.
func (o StateMachineOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The date the state machine was created.
func (o StateMachineOutput) CreationDate() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.CreationDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The [Amazon States Language](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) definition of the state machine.
func (o StateMachineOutput) Definition() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.Definition })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o StateMachineOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Defines what execution history events are logged and where they are logged. The `loggingConfiguration` parameter is only valid when `type` is set to `EXPRESS`. Defaults to `OFF`. For more information see [Logging Express Workflows](https://docs.aws.amazon.com/step-functions/latest/dg/cw-logs.html) and [Log Levels](https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
func (o StateMachineOutput) LoggingConfiguration() pulumix.GPtrOutput[StateMachineLoggingConfiguration, StateMachineLoggingConfigurationOutput] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.GPtrOutput[StateMachineLoggingConfiguration, StateMachineLoggingConfigurationOutput] {
		return v.LoggingConfiguration
	})
	unwrapped := pulumix.Flatten[*StateMachineLoggingConfiguration, pulumix.GPtrOutput[StateMachineLoggingConfiguration, StateMachineLoggingConfigurationOutput]](value)
	return pulumix.GPtrOutput[StateMachineLoggingConfiguration, StateMachineLoggingConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The name of the state machine. The name should only contain `0`-`9`, `A`-`Z`, `a`-`z`, `-` and `_`. If omitted, the provider will assign a random, unique name.
func (o StateMachineOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
func (o StateMachineOutput) NamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.NamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Set to true to publish a version of the state machine during creation. Default: false.
func (o StateMachineOutput) Publish() pulumix.Output[*bool] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[*bool] { return v.Publish })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

func (o StateMachineOutput) RevisionId() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.RevisionId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
func (o StateMachineOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o StateMachineOutput) StateMachineVersionArn() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.StateMachineVersionArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The current status of the state machine. Either `ACTIVE` or `DELETING`.
func (o StateMachineOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o StateMachineOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o StateMachineOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Selects whether AWS X-Ray tracing is enabled.
func (o StateMachineOutput) TracingConfiguration() pulumix.GPtrOutput[StateMachineTracingConfiguration, StateMachineTracingConfigurationOutput] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.GPtrOutput[StateMachineTracingConfiguration, StateMachineTracingConfigurationOutput] {
		return v.TracingConfiguration
	})
	unwrapped := pulumix.Flatten[*StateMachineTracingConfiguration, pulumix.GPtrOutput[StateMachineTracingConfiguration, StateMachineTracingConfigurationOutput]](value)
	return pulumix.GPtrOutput[StateMachineTracingConfiguration, StateMachineTracingConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Determines whether a Standard or Express state machine is created. The default is `STANDARD`. You cannot update the type of a state machine once it has been created. Valid values: `STANDARD`, `EXPRESS`.
func (o StateMachineOutput) Type() pulumix.Output[*string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[*string] { return v.Type })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o StateMachineOutput) VersionDescription() pulumix.Output[string] {
	value := pulumix.Apply[StateMachine](o, func(v StateMachine) pulumix.Output[string] { return v.VersionDescription })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(StateMachineOutput{})
}
