// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type CachePolicyParametersInCacheKeyAndForwardedToOrigin struct {
	// Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
	CookiesConfig CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig `pulumi:"cookiesConfig"`
	// Flag determines whether the Accept-Encoding HTTP header is included in the cache key and in requests that CloudFront sends to the origin.
	EnableAcceptEncodingBrotli *bool `pulumi:"enableAcceptEncodingBrotli"`
	// Whether the Accept-Encoding HTTP header is included in the cache key and in requests sent to the origin by CloudFront.
	EnableAcceptEncodingGzip *bool `pulumi:"enableAcceptEncodingGzip"`
	// Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
	HeadersConfig CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig `pulumi:"headersConfig"`
	// Whether any URL query strings in viewer requests are included in the cache key. It also automatically includes these query strings in requests that CloudFront sends to the origin. Please refer to the Query String Config for more information.
	QueryStringsConfig CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig `pulumi:"queryStringsConfig"`
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginArgs struct {
	// Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
	CookiesConfig pulumix.Input[*CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs] `pulumi:"cookiesConfig"`
	// Flag determines whether the Accept-Encoding HTTP header is included in the cache key and in requests that CloudFront sends to the origin.
	EnableAcceptEncodingBrotli pulumix.Input[*bool] `pulumi:"enableAcceptEncodingBrotli"`
	// Whether the Accept-Encoding HTTP header is included in the cache key and in requests sent to the origin by CloudFront.
	EnableAcceptEncodingGzip pulumix.Input[*bool] `pulumi:"enableAcceptEncodingGzip"`
	// Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
	HeadersConfig pulumix.Input[*CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs] `pulumi:"headersConfig"`
	// Whether any URL query strings in viewer requests are included in the cache key. It also automatically includes these query strings in requests that CloudFront sends to the origin. Please refer to the Query String Config for more information.
	QueryStringsConfig pulumix.Input[*CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs] `pulumi:"queryStringsConfig"`
}

func (CachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOrigin)(nil)).Elem()
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return i.ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(context.Background())
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyParametersInCacheKeyAndForwardedToOriginOutput)
}

func (i *CachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ToOutput(ctx context.Context) pulumix.Output[*CachePolicyParametersInCacheKeyAndForwardedToOriginArgs] {
	return pulumix.Val(i)
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginOutput struct{ *pulumi.OutputState }

func (CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOrigin)(nil)).Elem()
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ToOutput(ctx context.Context) pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOrigin] {
	return pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOrigin]{
		OutputState: o.OutputState,
	}
}

// Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) CookiesConfig() pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig, CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput] {
	value := pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig {
		return v.CookiesConfig
	})
	return pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig, CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput]{OutputState: value.OutputState}
}

// Flag determines whether the Accept-Encoding HTTP header is included in the cache key and in requests that CloudFront sends to the origin.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) EnableAcceptEncodingBrotli() pulumix.Output[*bool] {
	return pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) *bool { return v.EnableAcceptEncodingBrotli })
}

// Whether the Accept-Encoding HTTP header is included in the cache key and in requests sent to the origin by CloudFront.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) EnableAcceptEncodingGzip() pulumix.Output[*bool] {
	return pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) *bool { return v.EnableAcceptEncodingGzip })
}

// Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) HeadersConfig() pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig, CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput] {
	value := pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig {
		return v.HeadersConfig
	})
	return pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig, CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput]{OutputState: value.OutputState}
}

// Whether any URL query strings in viewer requests are included in the cache key. It also automatically includes these query strings in requests that CloudFront sends to the origin. Please refer to the Query String Config for more information.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) QueryStringsConfig() pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig, CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput] {
	value := pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {
		return v.QueryStringsConfig
	})
	return pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig, CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput]{OutputState: value.OutputState}
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig struct {
	// Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `cookieBehavior` are `none`, `whitelist`, `allExcept`, and `all`.
	CookieBehavior string `pulumi:"cookieBehavior"`
	// Object that contains a list of cookie names. See Items for more information.
	Cookies *CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies `pulumi:"cookies"`
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs struct {
	// Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `cookieBehavior` are `none`, `whitelist`, `allExcept`, and `all`.
	CookieBehavior pulumix.Input[string] `pulumi:"cookieBehavior"`
	// Object that contains a list of cookie names. See Items for more information.
	Cookies pulumix.Input[*CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs] `pulumi:"cookies"`
}

func (CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig)(nil)).Elem()
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput {
	return i.ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutputWithContext(context.Background())
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput)
}

func (i *CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs] {
	return pulumix.Val(i)
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput struct{ *pulumi.OutputState }

func (CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig)(nil)).Elem()
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig] {
	return pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig]{
		OutputState: o.OutputState,
	}
}

// Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `cookieBehavior` are `none`, `whitelist`, `allExcept`, and `all`.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) CookieBehavior() pulumix.Output[string] {
	return pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig) string {
		return v.CookieBehavior
	})
}

// Object that contains a list of cookie names. See Items for more information.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) Cookies() pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies, CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput] {
	value := pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig) *CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies, CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput]{OutputState: value.OutputState}
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies struct {
	Items []string `pulumi:"items"`
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies)(nil)).Elem()
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput {
	return i.ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutputWithContext(context.Background())
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput)
}

func (i *CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs] {
	return pulumix.Val(i)
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput struct{ *pulumi.OutputState }

func (CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies)(nil)).Elem()
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies] {
	return pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies]{
		OutputState: o.OutputState,
	}
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies) []string {
		return v.Items
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig struct {
	// Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `headerBehavior` are `none` and `whitelist`.
	HeaderBehavior *string `pulumi:"headerBehavior"`
	// Object contains a list of header names. See Items for more information.
	Headers *CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders `pulumi:"headers"`
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs struct {
	// Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `headerBehavior` are `none` and `whitelist`.
	HeaderBehavior pulumix.Input[*string] `pulumi:"headerBehavior"`
	// Object contains a list of header names. See Items for more information.
	Headers pulumix.Input[*CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs] `pulumi:"headers"`
}

func (CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig)(nil)).Elem()
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput {
	return i.ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutputWithContext(context.Background())
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput)
}

func (i *CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs] {
	return pulumix.Val(i)
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput struct{ *pulumi.OutputState }

func (CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig)(nil)).Elem()
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig] {
	return pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig]{
		OutputState: o.OutputState,
	}
}

// Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `headerBehavior` are `none` and `whitelist`.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) HeaderBehavior() pulumix.Output[*string] {
	return pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig) *string {
		return v.HeaderBehavior
	})
}

// Object contains a list of header names. See Items for more information.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) Headers() pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders, CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput] {
	value := pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig) *CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {
		return v.Headers
	})
	return pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders, CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput]{OutputState: value.OutputState}
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders struct {
	Items []string `pulumi:"items"`
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders)(nil)).Elem()
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput {
	return i.ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutputWithContext(context.Background())
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput)
}

func (i *CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs) ToOutput(ctx context.Context) pulumix.Output[*CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs] {
	return pulumix.Val(i)
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput struct{ *pulumi.OutputState }

func (CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders)(nil)).Elem()
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput) ToOutput(ctx context.Context) pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders] {
	return pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders]{
		OutputState: o.OutputState,
	}
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders) []string {
		return v.Items
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig struct {
	// Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `queryStringBehavior` are `none`, `whitelist`, `allExcept`, and `all`.
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
	// Configuration parameter that contains a list of query string names. See Items for more information.
	QueryStrings *CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings `pulumi:"queryStrings"`
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs struct {
	// Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `queryStringBehavior` are `none`, `whitelist`, `allExcept`, and `all`.
	QueryStringBehavior pulumix.Input[string] `pulumi:"queryStringBehavior"`
	// Configuration parameter that contains a list of query string names. See Items for more information.
	QueryStrings pulumix.Input[*CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs] `pulumi:"queryStrings"`
}

func (CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig)(nil)).Elem()
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput {
	return i.ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutputWithContext(context.Background())
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput)
}

func (i *CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs] {
	return pulumix.Val(i)
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput struct{ *pulumi.OutputState }

func (CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig)(nil)).Elem()
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig] {
	return pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig]{
		OutputState: o.OutputState,
	}
}

// Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `queryStringBehavior` are `none`, `whitelist`, `allExcept`, and `all`.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) QueryStringBehavior() pulumix.Output[string] {
	return pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig) string {
		return v.QueryStringBehavior
	})
}

// Configuration parameter that contains a list of query string names. See Items for more information.
func (o CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) QueryStrings() pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings, CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput] {
	value := pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig) *CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {
		return v.QueryStrings
	})
	return pulumix.GPtrOutput[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings, CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput]{OutputState: value.OutputState}
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings struct {
	Items []string `pulumi:"items"`
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings)(nil)).Elem()
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput {
	return i.ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutputWithContext(context.Background())
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput)
}

func (i *CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs) ToOutput(ctx context.Context) pulumix.Output[*CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs] {
	return pulumix.Val(i)
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput struct{ *pulumi.OutputState }

func (CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings)(nil)).Elem()
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput) ToOutput(ctx context.Context) pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings] {
	return pulumix.Output[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings]{
		OutputState: o.OutputState,
	}
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings](o, func(v CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings) []string {
		return v.Items
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ContinuousDeploymentPolicyStagingDistributionDnsNames struct {
	// A list of CloudFront domain names for the staging distribution.
	Items []string `pulumi:"items"`
	// Number of CloudFront domain names in the staging distribution.
	Quantity int `pulumi:"quantity"`
}

type ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs struct {
	// A list of CloudFront domain names for the staging distribution.
	Items pulumix.Input[[]string] `pulumi:"items"`
	// Number of CloudFront domain names in the staging distribution.
	Quantity pulumix.Input[int] `pulumi:"quantity"`
}

func (ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyStagingDistributionDnsNames)(nil)).Elem()
}

func (i ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs) ToContinuousDeploymentPolicyStagingDistributionDnsNamesOutput() ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput {
	return i.ToContinuousDeploymentPolicyStagingDistributionDnsNamesOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs) ToContinuousDeploymentPolicyStagingDistributionDnsNamesOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput)
}

func (i *ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs) ToOutput(ctx context.Context) pulumix.Output[*ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs] {
	return pulumix.Val(i)
}

type ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyStagingDistributionDnsNames)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput) ToContinuousDeploymentPolicyStagingDistributionDnsNamesOutput() ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput {
	return o
}

func (o ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput) ToContinuousDeploymentPolicyStagingDistributionDnsNamesOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput {
	return o
}

func (o ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput) ToOutput(ctx context.Context) pulumix.Output[ContinuousDeploymentPolicyStagingDistributionDnsNames] {
	return pulumix.Output[ContinuousDeploymentPolicyStagingDistributionDnsNames]{
		OutputState: o.OutputState,
	}
}

// A list of CloudFront domain names for the staging distribution.
func (o ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ContinuousDeploymentPolicyStagingDistributionDnsNames](o, func(v ContinuousDeploymentPolicyStagingDistributionDnsNames) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Number of CloudFront domain names in the staging distribution.
func (o ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput) Quantity() pulumix.Output[int] {
	return pulumix.Apply[ContinuousDeploymentPolicyStagingDistributionDnsNames](o, func(v ContinuousDeploymentPolicyStagingDistributionDnsNames) int { return v.Quantity })
}

type ContinuousDeploymentPolicyTrafficConfig struct {
	// Determines which HTTP requests are sent to the staging distribution. See `singleHeaderConfig`.
	SingleHeaderConfig *ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig `pulumi:"singleHeaderConfig"`
	// Contains the percentage of traffic to send to the staging distribution. See `singleWeightConfig`.
	SingleWeightConfig *ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig `pulumi:"singleWeightConfig"`
	// Type of traffic configuration. Valid values are `SingleWeight` and `SingleHeader`.
	Type string `pulumi:"type"`
}

type ContinuousDeploymentPolicyTrafficConfigArgs struct {
	// Determines which HTTP requests are sent to the staging distribution. See `singleHeaderConfig`.
	SingleHeaderConfig pulumix.Input[*ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigArgs] `pulumi:"singleHeaderConfig"`
	// Contains the percentage of traffic to send to the staging distribution. See `singleWeightConfig`.
	SingleWeightConfig pulumix.Input[*ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigArgs] `pulumi:"singleWeightConfig"`
	// Type of traffic configuration. Valid values are `SingleWeight` and `SingleHeader`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (ContinuousDeploymentPolicyTrafficConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfig)(nil)).Elem()
}

func (i ContinuousDeploymentPolicyTrafficConfigArgs) ToContinuousDeploymentPolicyTrafficConfigOutput() ContinuousDeploymentPolicyTrafficConfigOutput {
	return i.ToContinuousDeploymentPolicyTrafficConfigOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyTrafficConfigArgs) ToContinuousDeploymentPolicyTrafficConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyTrafficConfigOutput)
}

func (i *ContinuousDeploymentPolicyTrafficConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ContinuousDeploymentPolicyTrafficConfigArgs] {
	return pulumix.Val(i)
}

type ContinuousDeploymentPolicyTrafficConfigOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyTrafficConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) ToContinuousDeploymentPolicyTrafficConfigOutput() ContinuousDeploymentPolicyTrafficConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) ToContinuousDeploymentPolicyTrafficConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ContinuousDeploymentPolicyTrafficConfig] {
	return pulumix.Output[ContinuousDeploymentPolicyTrafficConfig]{
		OutputState: o.OutputState,
	}
}

// Determines which HTTP requests are sent to the staging distribution. See `singleHeaderConfig`.
func (o ContinuousDeploymentPolicyTrafficConfigOutput) SingleHeaderConfig() pulumix.GPtrOutput[ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig, ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput] {
	value := pulumix.Apply[ContinuousDeploymentPolicyTrafficConfig](o, func(v ContinuousDeploymentPolicyTrafficConfig) *ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig {
		return v.SingleHeaderConfig
	})
	return pulumix.GPtrOutput[ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig, ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput]{OutputState: value.OutputState}
}

// Contains the percentage of traffic to send to the staging distribution. See `singleWeightConfig`.
func (o ContinuousDeploymentPolicyTrafficConfigOutput) SingleWeightConfig() pulumix.GPtrOutput[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig, ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput] {
	value := pulumix.Apply[ContinuousDeploymentPolicyTrafficConfig](o, func(v ContinuousDeploymentPolicyTrafficConfig) *ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig {
		return v.SingleWeightConfig
	})
	return pulumix.GPtrOutput[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig, ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput]{OutputState: value.OutputState}
}

// Type of traffic configuration. Valid values are `SingleWeight` and `SingleHeader`.
func (o ContinuousDeploymentPolicyTrafficConfigOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[ContinuousDeploymentPolicyTrafficConfig](o, func(v ContinuousDeploymentPolicyTrafficConfig) string { return v.Type })
}

type ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig struct {
	// Request header name to send to the staging distribution. The header must contain the prefix `aws-cf-cd-`.
	Header string `pulumi:"header"`
	// Request header value.
	Value string `pulumi:"value"`
}

type ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigArgs struct {
	// Request header name to send to the staging distribution. The header must contain the prefix `aws-cf-cd-`.
	Header pulumix.Input[string] `pulumi:"header"`
	// Request header value.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig)(nil)).Elem()
}

func (i ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigArgs) ToContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput() ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput {
	return i.ToContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigArgs) ToContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput)
}

func (i *ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigArgs] {
	return pulumix.Val(i)
}

type ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput) ToContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput() ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput) ToContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig] {
	return pulumix.Output[ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig]{
		OutputState: o.OutputState,
	}
}

// Request header name to send to the staging distribution. The header must contain the prefix `aws-cf-cd-`.
func (o ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput) Header() pulumix.Output[string] {
	return pulumix.Apply[ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig](o, func(v ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig) string { return v.Header })
}

// Request header value.
func (o ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig](o, func(v ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig) string { return v.Value })
}

type ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig struct {
	// Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user's requests to the staging distribution, while others are sent to the primary distribution. Define the session duration using TTL values. See `sessionStickinessConfig`.
	SessionStickinessConfig *ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig `pulumi:"sessionStickinessConfig"`
	// The percentage of traffic to send to a staging distribution, expressed as a decimal number between `0` and `.15`.
	Weight float64 `pulumi:"weight"`
}

type ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigArgs struct {
	// Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user's requests to the staging distribution, while others are sent to the primary distribution. Define the session duration using TTL values. See `sessionStickinessConfig`.
	SessionStickinessConfig pulumix.Input[*ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs] `pulumi:"sessionStickinessConfig"`
	// The percentage of traffic to send to a staging distribution, expressed as a decimal number between `0` and `.15`.
	Weight pulumix.Input[float64] `pulumi:"weight"`
}

func (ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig)(nil)).Elem()
}

func (i ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigArgs) ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput() ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput {
	return i.ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigArgs) ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput)
}

func (i *ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigArgs] {
	return pulumix.Val(i)
}

type ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput) ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput() ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput) ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig] {
	return pulumix.Output[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig]{
		OutputState: o.OutputState,
	}
}

// Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user's requests to the staging distribution, while others are sent to the primary distribution. Define the session duration using TTL values. See `sessionStickinessConfig`.
func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput) SessionStickinessConfig() pulumix.GPtrOutput[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig, ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput] {
	value := pulumix.Apply[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig](o, func(v ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig) *ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig {
		return v.SessionStickinessConfig
	})
	return pulumix.GPtrOutput[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig, ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput]{OutputState: value.OutputState}
}

// The percentage of traffic to send to a staging distribution, expressed as a decimal number between `0` and `.15`.
func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput) Weight() pulumix.Output[float64] {
	return pulumix.Apply[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig](o, func(v ContinuousDeploymentPolicyTrafficConfigSingleWeightConfig) float64 { return v.Weight })
}

type ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig struct {
	// The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximumTtl`.
	IdleTtl int `pulumi:"idleTtl"`
	// The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idleTtl`.
	MaximumTtl int `pulumi:"maximumTtl"`
}

type ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs struct {
	// The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximumTtl`.
	IdleTtl pulumix.Input[int] `pulumi:"idleTtl"`
	// The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idleTtl`.
	MaximumTtl pulumix.Input[int] `pulumi:"maximumTtl"`
}

func (ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig)(nil)).Elem()
}

func (i ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs) ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput() ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput {
	return i.ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs) ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput)
}

func (i *ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigArgs] {
	return pulumix.Val(i)
}

type ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput) ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput() ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput) ToContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig] {
	return pulumix.Output[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig]{
		OutputState: o.OutputState,
	}
}

// The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximumTtl`.
func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput) IdleTtl() pulumix.Output[int] {
	return pulumix.Apply[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig](o, func(v ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig) int {
		return v.IdleTtl
	})
}

// The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idleTtl`.
func (o ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput) MaximumTtl() pulumix.Output[int] {
	return pulumix.Apply[ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig](o, func(v ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig) int {
		return v.MaximumTtl
	})
}

type DistributionCustomErrorResponse struct {
	// Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
	ErrorCachingMinTtl *int `pulumi:"errorCachingMinTtl"`
	// 4xx or 5xx HTTP status code that you want to customize.
	ErrorCode int `pulumi:"errorCode"`
	// HTTP status code that you want CloudFront to return with the custom error page to the viewer.
	ResponseCode *int `pulumi:"responseCode"`
	// Path of the custom error page (for example, `/custom_404.html`).
	ResponsePagePath *string `pulumi:"responsePagePath"`
}

type DistributionCustomErrorResponseArgs struct {
	// Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
	ErrorCachingMinTtl pulumix.Input[*int] `pulumi:"errorCachingMinTtl"`
	// 4xx or 5xx HTTP status code that you want to customize.
	ErrorCode pulumix.Input[int] `pulumi:"errorCode"`
	// HTTP status code that you want CloudFront to return with the custom error page to the viewer.
	ResponseCode pulumix.Input[*int] `pulumi:"responseCode"`
	// Path of the custom error page (for example, `/custom_404.html`).
	ResponsePagePath pulumix.Input[*string] `pulumi:"responsePagePath"`
}

func (DistributionCustomErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCustomErrorResponse)(nil)).Elem()
}

func (i DistributionCustomErrorResponseArgs) ToDistributionCustomErrorResponseOutput() DistributionCustomErrorResponseOutput {
	return i.ToDistributionCustomErrorResponseOutputWithContext(context.Background())
}

func (i DistributionCustomErrorResponseArgs) ToDistributionCustomErrorResponseOutputWithContext(ctx context.Context) DistributionCustomErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCustomErrorResponseOutput)
}

func (i *DistributionCustomErrorResponseArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionCustomErrorResponseArgs] {
	return pulumix.Val(i)
}

type DistributionCustomErrorResponseOutput struct{ *pulumi.OutputState }

func (DistributionCustomErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCustomErrorResponse)(nil)).Elem()
}

func (o DistributionCustomErrorResponseOutput) ToDistributionCustomErrorResponseOutput() DistributionCustomErrorResponseOutput {
	return o
}

func (o DistributionCustomErrorResponseOutput) ToDistributionCustomErrorResponseOutputWithContext(ctx context.Context) DistributionCustomErrorResponseOutput {
	return o
}

func (o DistributionCustomErrorResponseOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionCustomErrorResponse] {
	return pulumix.Output[DistributionCustomErrorResponse]{
		OutputState: o.OutputState,
	}
}

// Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
func (o DistributionCustomErrorResponseOutput) ErrorCachingMinTtl() pulumix.Output[*int] {
	return pulumix.Apply[DistributionCustomErrorResponse](o, func(v DistributionCustomErrorResponse) *int { return v.ErrorCachingMinTtl })
}

// 4xx or 5xx HTTP status code that you want to customize.
func (o DistributionCustomErrorResponseOutput) ErrorCode() pulumix.Output[int] {
	return pulumix.Apply[DistributionCustomErrorResponse](o, func(v DistributionCustomErrorResponse) int { return v.ErrorCode })
}

// HTTP status code that you want CloudFront to return with the custom error page to the viewer.
func (o DistributionCustomErrorResponseOutput) ResponseCode() pulumix.Output[*int] {
	return pulumix.Apply[DistributionCustomErrorResponse](o, func(v DistributionCustomErrorResponse) *int { return v.ResponseCode })
}

// Path of the custom error page (for example, `/custom_404.html`).
func (o DistributionCustomErrorResponseOutput) ResponsePagePath() pulumix.Output[*string] {
	return pulumix.Apply[DistributionCustomErrorResponse](o, func(v DistributionCustomErrorResponse) *string { return v.ResponsePagePath })
}

type DistributionDefaultCacheBehavior struct {
	// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the `defaultCacheBehavior` either `cachePolicyId` or `forwardedValues` must be set.
	CachePolicyId *string `pulumi:"cachePolicyId"`
	// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
	CachedMethods []string `pulumi:"cachedMethods"`
	// Whether you want CloudFront to automatically compress content for web requests that include `Accept-Encoding: gzip` in the request header (default: `false`).
	Compress *bool `pulumi:"compress"`
	// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an `Cache-Control max-age` or `Expires` header.
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Field level encryption configuration ID.
	FieldLevelEncryptionId *string `pulumi:"fieldLevelEncryptionId"`
	// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
	ForwardedValues *DistributionDefaultCacheBehaviorForwardedValues `pulumi:"forwardedValues"`
	// A config block that triggers a cloudfront function with specific actions (maximum 2).
	FunctionAssociations []DistributionDefaultCacheBehaviorFunctionAssociation `pulumi:"functionAssociations"`
	// A config block that triggers a lambda function with specific actions (maximum 4).
	LambdaFunctionAssociations []DistributionDefaultCacheBehaviorLambdaFunctionAssociation `pulumi:"lambdaFunctionAssociations"`
	// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of `Cache-Control max-age`, `Cache-Control s-maxage`, and `Expires` headers.
	MaxTtl *int `pulumi:"maxTtl"`
	// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
	MinTtl *int `pulumi:"minTtl"`
	// Unique identifier of the origin request policy that is attached to the behavior.
	OriginRequestPolicyId *string `pulumi:"originRequestPolicyId"`
	// ARN of the real-time log configuration that is attached to this cache behavior.
	RealtimeLogConfigArn *string `pulumi:"realtimeLogConfigArn"`
	// Identifier for a response headers policy.
	ResponseHeadersPolicyId *string `pulumi:"responseHeadersPolicyId"`
	// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
	SmoothStreaming *bool `pulumi:"smoothStreaming"`
	// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
	TargetOriginId string `pulumi:"targetOriginId"`
	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedKeyGroups []string `pulumi:"trustedKeyGroups"`
	// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedSigners []string `pulumi:"trustedSigners"`
	// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of `allow-all`, `https-only`, or `redirect-to-https`.
	ViewerProtocolPolicy string `pulumi:"viewerProtocolPolicy"`
}

type DistributionDefaultCacheBehaviorArgs struct {
	// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
	AllowedMethods pulumix.Input[[]string] `pulumi:"allowedMethods"`
	// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the `defaultCacheBehavior` either `cachePolicyId` or `forwardedValues` must be set.
	CachePolicyId pulumix.Input[*string] `pulumi:"cachePolicyId"`
	// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
	CachedMethods pulumix.Input[[]string] `pulumi:"cachedMethods"`
	// Whether you want CloudFront to automatically compress content for web requests that include `Accept-Encoding: gzip` in the request header (default: `false`).
	Compress pulumix.Input[*bool] `pulumi:"compress"`
	// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an `Cache-Control max-age` or `Expires` header.
	DefaultTtl pulumix.Input[*int] `pulumi:"defaultTtl"`
	// Field level encryption configuration ID.
	FieldLevelEncryptionId pulumix.Input[*string] `pulumi:"fieldLevelEncryptionId"`
	// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
	ForwardedValues pulumix.Input[*DistributionDefaultCacheBehaviorForwardedValuesArgs] `pulumi:"forwardedValues"`
	// A config block that triggers a cloudfront function with specific actions (maximum 2).
	FunctionAssociations pulumix.Input[[]*DistributionDefaultCacheBehaviorFunctionAssociationArgs] `pulumi:"functionAssociations"`
	// A config block that triggers a lambda function with specific actions (maximum 4).
	LambdaFunctionAssociations pulumix.Input[[]*DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs] `pulumi:"lambdaFunctionAssociations"`
	// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of `Cache-Control max-age`, `Cache-Control s-maxage`, and `Expires` headers.
	MaxTtl pulumix.Input[*int] `pulumi:"maxTtl"`
	// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
	MinTtl pulumix.Input[*int] `pulumi:"minTtl"`
	// Unique identifier of the origin request policy that is attached to the behavior.
	OriginRequestPolicyId pulumix.Input[*string] `pulumi:"originRequestPolicyId"`
	// ARN of the real-time log configuration that is attached to this cache behavior.
	RealtimeLogConfigArn pulumix.Input[*string] `pulumi:"realtimeLogConfigArn"`
	// Identifier for a response headers policy.
	ResponseHeadersPolicyId pulumix.Input[*string] `pulumi:"responseHeadersPolicyId"`
	// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
	SmoothStreaming pulumix.Input[*bool] `pulumi:"smoothStreaming"`
	// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
	TargetOriginId pulumix.Input[string] `pulumi:"targetOriginId"`
	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedKeyGroups pulumix.Input[[]string] `pulumi:"trustedKeyGroups"`
	// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedSigners pulumix.Input[[]string] `pulumi:"trustedSigners"`
	// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of `allow-all`, `https-only`, or `redirect-to-https`.
	ViewerProtocolPolicy pulumix.Input[string] `pulumi:"viewerProtocolPolicy"`
}

func (DistributionDefaultCacheBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehavior)(nil)).Elem()
}

func (i DistributionDefaultCacheBehaviorArgs) ToDistributionDefaultCacheBehaviorOutput() DistributionDefaultCacheBehaviorOutput {
	return i.ToDistributionDefaultCacheBehaviorOutputWithContext(context.Background())
}

func (i DistributionDefaultCacheBehaviorArgs) ToDistributionDefaultCacheBehaviorOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionDefaultCacheBehaviorOutput)
}

func (i *DistributionDefaultCacheBehaviorArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionDefaultCacheBehaviorArgs] {
	return pulumix.Val(i)
}

type DistributionDefaultCacheBehaviorOutput struct{ *pulumi.OutputState }

func (DistributionDefaultCacheBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehavior)(nil)).Elem()
}

func (o DistributionDefaultCacheBehaviorOutput) ToDistributionDefaultCacheBehaviorOutput() DistributionDefaultCacheBehaviorOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorOutput) ToDistributionDefaultCacheBehaviorOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionDefaultCacheBehavior] {
	return pulumix.Output[DistributionDefaultCacheBehavior]{
		OutputState: o.OutputState,
	}
}

// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
func (o DistributionDefaultCacheBehaviorOutput) AllowedMethods() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) []string { return v.AllowedMethods })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the `defaultCacheBehavior` either `cachePolicyId` or `forwardedValues` must be set.
func (o DistributionDefaultCacheBehaviorOutput) CachePolicyId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *string { return v.CachePolicyId })
}

// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
func (o DistributionDefaultCacheBehaviorOutput) CachedMethods() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) []string { return v.CachedMethods })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Whether you want CloudFront to automatically compress content for web requests that include `Accept-Encoding: gzip` in the request header (default: `false`).
func (o DistributionDefaultCacheBehaviorOutput) Compress() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *bool { return v.Compress })
}

// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an `Cache-Control max-age` or `Expires` header.
func (o DistributionDefaultCacheBehaviorOutput) DefaultTtl() pulumix.Output[*int] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *int { return v.DefaultTtl })
}

// Field level encryption configuration ID.
func (o DistributionDefaultCacheBehaviorOutput) FieldLevelEncryptionId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *string { return v.FieldLevelEncryptionId })
}

// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
func (o DistributionDefaultCacheBehaviorOutput) ForwardedValues() pulumix.GPtrOutput[DistributionDefaultCacheBehaviorForwardedValues, DistributionDefaultCacheBehaviorForwardedValuesOutput] {
	value := pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *DistributionDefaultCacheBehaviorForwardedValues {
		return v.ForwardedValues
	})
	return pulumix.GPtrOutput[DistributionDefaultCacheBehaviorForwardedValues, DistributionDefaultCacheBehaviorForwardedValuesOutput]{OutputState: value.OutputState}
}

// A config block that triggers a cloudfront function with specific actions (maximum 2).
func (o DistributionDefaultCacheBehaviorOutput) FunctionAssociations() pulumix.GArrayOutput[DistributionDefaultCacheBehaviorFunctionAssociation, DistributionDefaultCacheBehaviorFunctionAssociationOutput] {
	value := pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) []DistributionDefaultCacheBehaviorFunctionAssociation {
		return v.FunctionAssociations
	})
	return pulumix.GArrayOutput[DistributionDefaultCacheBehaviorFunctionAssociation, DistributionDefaultCacheBehaviorFunctionAssociationOutput]{OutputState: value.OutputState}
}

// A config block that triggers a lambda function with specific actions (maximum 4).
func (o DistributionDefaultCacheBehaviorOutput) LambdaFunctionAssociations() pulumix.GArrayOutput[DistributionDefaultCacheBehaviorLambdaFunctionAssociation, DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput] {
	value := pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) []DistributionDefaultCacheBehaviorLambdaFunctionAssociation {
		return v.LambdaFunctionAssociations
	})
	return pulumix.GArrayOutput[DistributionDefaultCacheBehaviorLambdaFunctionAssociation, DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput]{OutputState: value.OutputState}
}

// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of `Cache-Control max-age`, `Cache-Control s-maxage`, and `Expires` headers.
func (o DistributionDefaultCacheBehaviorOutput) MaxTtl() pulumix.Output[*int] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *int { return v.MaxTtl })
}

// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
func (o DistributionDefaultCacheBehaviorOutput) MinTtl() pulumix.Output[*int] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *int { return v.MinTtl })
}

// Unique identifier of the origin request policy that is attached to the behavior.
func (o DistributionDefaultCacheBehaviorOutput) OriginRequestPolicyId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *string { return v.OriginRequestPolicyId })
}

// ARN of the real-time log configuration that is attached to this cache behavior.
func (o DistributionDefaultCacheBehaviorOutput) RealtimeLogConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *string { return v.RealtimeLogConfigArn })
}

// Identifier for a response headers policy.
func (o DistributionDefaultCacheBehaviorOutput) ResponseHeadersPolicyId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *string { return v.ResponseHeadersPolicyId })
}

// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
func (o DistributionDefaultCacheBehaviorOutput) SmoothStreaming() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) *bool { return v.SmoothStreaming })
}

// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
func (o DistributionDefaultCacheBehaviorOutput) TargetOriginId() pulumix.Output[string] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) string { return v.TargetOriginId })
}

// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
func (o DistributionDefaultCacheBehaviorOutput) TrustedKeyGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) []string { return v.TrustedKeyGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
func (o DistributionDefaultCacheBehaviorOutput) TrustedSigners() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) []string { return v.TrustedSigners })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of `allow-all`, `https-only`, or `redirect-to-https`.
func (o DistributionDefaultCacheBehaviorOutput) ViewerProtocolPolicy() pulumix.Output[string] {
	return pulumix.Apply[DistributionDefaultCacheBehavior](o, func(v DistributionDefaultCacheBehavior) string { return v.ViewerProtocolPolicy })
}

type DistributionDefaultCacheBehaviorForwardedValues struct {
	// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
	Cookies DistributionDefaultCacheBehaviorForwardedValuesCookies `pulumi:"cookies"`
	// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify `*` to include all headers.
	Headers []string `pulumi:"headers"`
	// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
	QueryString bool `pulumi:"queryString"`
	// When specified, along with a value of `true` for `queryString`, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of `true` for `queryString`, all query string keys are cached.
	QueryStringCacheKeys []string `pulumi:"queryStringCacheKeys"`
}

type DistributionDefaultCacheBehaviorForwardedValuesArgs struct {
	// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
	Cookies pulumix.Input[*DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs] `pulumi:"cookies"`
	// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify `*` to include all headers.
	Headers pulumix.Input[[]string] `pulumi:"headers"`
	// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
	QueryString pulumix.Input[bool] `pulumi:"queryString"`
	// When specified, along with a value of `true` for `queryString`, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of `true` for `queryString`, all query string keys are cached.
	QueryStringCacheKeys pulumix.Input[[]string] `pulumi:"queryStringCacheKeys"`
}

func (DistributionDefaultCacheBehaviorForwardedValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehaviorForwardedValues)(nil)).Elem()
}

func (i DistributionDefaultCacheBehaviorForwardedValuesArgs) ToDistributionDefaultCacheBehaviorForwardedValuesOutput() DistributionDefaultCacheBehaviorForwardedValuesOutput {
	return i.ToDistributionDefaultCacheBehaviorForwardedValuesOutputWithContext(context.Background())
}

func (i DistributionDefaultCacheBehaviorForwardedValuesArgs) ToDistributionDefaultCacheBehaviorForwardedValuesOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorForwardedValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionDefaultCacheBehaviorForwardedValuesOutput)
}

func (i *DistributionDefaultCacheBehaviorForwardedValuesArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionDefaultCacheBehaviorForwardedValuesArgs] {
	return pulumix.Val(i)
}

type DistributionDefaultCacheBehaviorForwardedValuesOutput struct{ *pulumi.OutputState }

func (DistributionDefaultCacheBehaviorForwardedValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehaviorForwardedValues)(nil)).Elem()
}

func (o DistributionDefaultCacheBehaviorForwardedValuesOutput) ToDistributionDefaultCacheBehaviorForwardedValuesOutput() DistributionDefaultCacheBehaviorForwardedValuesOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorForwardedValuesOutput) ToDistributionDefaultCacheBehaviorForwardedValuesOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorForwardedValuesOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorForwardedValuesOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionDefaultCacheBehaviorForwardedValues] {
	return pulumix.Output[DistributionDefaultCacheBehaviorForwardedValues]{
		OutputState: o.OutputState,
	}
}

// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
func (o DistributionDefaultCacheBehaviorForwardedValuesOutput) Cookies() pulumix.GPtrOutput[DistributionDefaultCacheBehaviorForwardedValuesCookies, DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput] {
	value := pulumix.Apply[DistributionDefaultCacheBehaviorForwardedValues](o, func(v DistributionDefaultCacheBehaviorForwardedValues) DistributionDefaultCacheBehaviorForwardedValuesCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[DistributionDefaultCacheBehaviorForwardedValuesCookies, DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput]{OutputState: value.OutputState}
}

// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify `*` to include all headers.
func (o DistributionDefaultCacheBehaviorForwardedValuesOutput) Headers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionDefaultCacheBehaviorForwardedValues](o, func(v DistributionDefaultCacheBehaviorForwardedValues) []string { return v.Headers })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
func (o DistributionDefaultCacheBehaviorForwardedValuesOutput) QueryString() pulumix.Output[bool] {
	return pulumix.Apply[DistributionDefaultCacheBehaviorForwardedValues](o, func(v DistributionDefaultCacheBehaviorForwardedValues) bool { return v.QueryString })
}

// When specified, along with a value of `true` for `queryString`, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of `true` for `queryString`, all query string keys are cached.
func (o DistributionDefaultCacheBehaviorForwardedValuesOutput) QueryStringCacheKeys() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionDefaultCacheBehaviorForwardedValues](o, func(v DistributionDefaultCacheBehaviorForwardedValues) []string { return v.QueryStringCacheKeys })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DistributionDefaultCacheBehaviorForwardedValuesCookies struct {
	// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify `all`, `none` or `whitelist`. If `whitelist`, you must include the subsequent `whitelistedNames`.
	Forward string `pulumi:"forward"`
	// If you have specified `whitelist` to `forward`, the whitelisted cookies that you want CloudFront to forward to your origin.
	WhitelistedNames []string `pulumi:"whitelistedNames"`
}

type DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs struct {
	// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify `all`, `none` or `whitelist`. If `whitelist`, you must include the subsequent `whitelistedNames`.
	Forward pulumix.Input[string] `pulumi:"forward"`
	// If you have specified `whitelist` to `forward`, the whitelisted cookies that you want CloudFront to forward to your origin.
	WhitelistedNames pulumix.Input[[]string] `pulumi:"whitelistedNames"`
}

func (DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehaviorForwardedValuesCookies)(nil)).Elem()
}

func (i DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs) ToDistributionDefaultCacheBehaviorForwardedValuesCookiesOutput() DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput {
	return i.ToDistributionDefaultCacheBehaviorForwardedValuesCookiesOutputWithContext(context.Background())
}

func (i DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs) ToDistributionDefaultCacheBehaviorForwardedValuesCookiesOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput)
}

func (i *DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs] {
	return pulumix.Val(i)
}

type DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput struct{ *pulumi.OutputState }

func (DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehaviorForwardedValuesCookies)(nil)).Elem()
}

func (o DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput) ToDistributionDefaultCacheBehaviorForwardedValuesCookiesOutput() DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput) ToDistributionDefaultCacheBehaviorForwardedValuesCookiesOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionDefaultCacheBehaviorForwardedValuesCookies] {
	return pulumix.Output[DistributionDefaultCacheBehaviorForwardedValuesCookies]{
		OutputState: o.OutputState,
	}
}

// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify `all`, `none` or `whitelist`. If `whitelist`, you must include the subsequent `whitelistedNames`.
func (o DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput) Forward() pulumix.Output[string] {
	return pulumix.Apply[DistributionDefaultCacheBehaviorForwardedValuesCookies](o, func(v DistributionDefaultCacheBehaviorForwardedValuesCookies) string { return v.Forward })
}

// If you have specified `whitelist` to `forward`, the whitelisted cookies that you want CloudFront to forward to your origin.
func (o DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput) WhitelistedNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionDefaultCacheBehaviorForwardedValuesCookies](o, func(v DistributionDefaultCacheBehaviorForwardedValuesCookies) []string { return v.WhitelistedNames })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DistributionDefaultCacheBehaviorFunctionAssociation struct {
	// Specific event to trigger this function. Valid values: `viewer-request` or `viewer-response`.
	EventType string `pulumi:"eventType"`
	// ARN of the CloudFront function.
	FunctionArn string `pulumi:"functionArn"`
}

type DistributionDefaultCacheBehaviorFunctionAssociationArgs struct {
	// Specific event to trigger this function. Valid values: `viewer-request` or `viewer-response`.
	EventType pulumix.Input[string] `pulumi:"eventType"`
	// ARN of the CloudFront function.
	FunctionArn pulumix.Input[string] `pulumi:"functionArn"`
}

func (DistributionDefaultCacheBehaviorFunctionAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehaviorFunctionAssociation)(nil)).Elem()
}

func (i DistributionDefaultCacheBehaviorFunctionAssociationArgs) ToDistributionDefaultCacheBehaviorFunctionAssociationOutput() DistributionDefaultCacheBehaviorFunctionAssociationOutput {
	return i.ToDistributionDefaultCacheBehaviorFunctionAssociationOutputWithContext(context.Background())
}

func (i DistributionDefaultCacheBehaviorFunctionAssociationArgs) ToDistributionDefaultCacheBehaviorFunctionAssociationOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorFunctionAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionDefaultCacheBehaviorFunctionAssociationOutput)
}

func (i *DistributionDefaultCacheBehaviorFunctionAssociationArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionDefaultCacheBehaviorFunctionAssociationArgs] {
	return pulumix.Val(i)
}

type DistributionDefaultCacheBehaviorFunctionAssociationOutput struct{ *pulumi.OutputState }

func (DistributionDefaultCacheBehaviorFunctionAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehaviorFunctionAssociation)(nil)).Elem()
}

func (o DistributionDefaultCacheBehaviorFunctionAssociationOutput) ToDistributionDefaultCacheBehaviorFunctionAssociationOutput() DistributionDefaultCacheBehaviorFunctionAssociationOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorFunctionAssociationOutput) ToDistributionDefaultCacheBehaviorFunctionAssociationOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorFunctionAssociationOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorFunctionAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionDefaultCacheBehaviorFunctionAssociation] {
	return pulumix.Output[DistributionDefaultCacheBehaviorFunctionAssociation]{
		OutputState: o.OutputState,
	}
}

// Specific event to trigger this function. Valid values: `viewer-request` or `viewer-response`.
func (o DistributionDefaultCacheBehaviorFunctionAssociationOutput) EventType() pulumix.Output[string] {
	return pulumix.Apply[DistributionDefaultCacheBehaviorFunctionAssociation](o, func(v DistributionDefaultCacheBehaviorFunctionAssociation) string { return v.EventType })
}

// ARN of the CloudFront function.
func (o DistributionDefaultCacheBehaviorFunctionAssociationOutput) FunctionArn() pulumix.Output[string] {
	return pulumix.Apply[DistributionDefaultCacheBehaviorFunctionAssociation](o, func(v DistributionDefaultCacheBehaviorFunctionAssociation) string { return v.FunctionArn })
}

type DistributionDefaultCacheBehaviorLambdaFunctionAssociation struct {
	// Specific event to trigger this function. Valid values: `viewer-request`, `origin-request`, `viewer-response`, `origin-response`.
	EventType string `pulumi:"eventType"`
	// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
	IncludeBody *bool `pulumi:"includeBody"`
	// ARN of the Lambda function.
	LambdaArn string `pulumi:"lambdaArn"`
}

type DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs struct {
	// Specific event to trigger this function. Valid values: `viewer-request`, `origin-request`, `viewer-response`, `origin-response`.
	EventType pulumix.Input[string] `pulumi:"eventType"`
	// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
	IncludeBody pulumix.Input[*bool] `pulumi:"includeBody"`
	// ARN of the Lambda function.
	LambdaArn pulumix.Input[string] `pulumi:"lambdaArn"`
}

func (DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehaviorLambdaFunctionAssociation)(nil)).Elem()
}

func (i DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs) ToDistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput() DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput {
	return i.ToDistributionDefaultCacheBehaviorLambdaFunctionAssociationOutputWithContext(context.Background())
}

func (i DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs) ToDistributionDefaultCacheBehaviorLambdaFunctionAssociationOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput)
}

func (i *DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs] {
	return pulumix.Val(i)
}

type DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput struct{ *pulumi.OutputState }

func (DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehaviorLambdaFunctionAssociation)(nil)).Elem()
}

func (o DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput) ToDistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput() DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput) ToDistributionDefaultCacheBehaviorLambdaFunctionAssociationOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionDefaultCacheBehaviorLambdaFunctionAssociation] {
	return pulumix.Output[DistributionDefaultCacheBehaviorLambdaFunctionAssociation]{
		OutputState: o.OutputState,
	}
}

// Specific event to trigger this function. Valid values: `viewer-request`, `origin-request`, `viewer-response`, `origin-response`.
func (o DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput) EventType() pulumix.Output[string] {
	return pulumix.Apply[DistributionDefaultCacheBehaviorLambdaFunctionAssociation](o, func(v DistributionDefaultCacheBehaviorLambdaFunctionAssociation) string { return v.EventType })
}

// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
func (o DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput) IncludeBody() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionDefaultCacheBehaviorLambdaFunctionAssociation](o, func(v DistributionDefaultCacheBehaviorLambdaFunctionAssociation) *bool { return v.IncludeBody })
}

// ARN of the Lambda function.
func (o DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput) LambdaArn() pulumix.Output[string] {
	return pulumix.Apply[DistributionDefaultCacheBehaviorLambdaFunctionAssociation](o, func(v DistributionDefaultCacheBehaviorLambdaFunctionAssociation) string { return v.LambdaArn })
}

type DistributionLoggingConfig struct {
	// Amazon S3 bucket to store the access logs in, for example, `myawslogbucket.s3.amazonaws.com`.
	Bucket string `pulumi:"bucket"`
	// Whether to include cookies in access logs (default: `false`).
	IncludeCookies *bool `pulumi:"includeCookies"`
	// Prefix to the access log filenames for this distribution, for example, `myprefix/`.
	Prefix *string `pulumi:"prefix"`
}

type DistributionLoggingConfigArgs struct {
	// Amazon S3 bucket to store the access logs in, for example, `myawslogbucket.s3.amazonaws.com`.
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// Whether to include cookies in access logs (default: `false`).
	IncludeCookies pulumix.Input[*bool] `pulumi:"includeCookies"`
	// Prefix to the access log filenames for this distribution, for example, `myprefix/`.
	Prefix pulumix.Input[*string] `pulumi:"prefix"`
}

func (DistributionLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLoggingConfig)(nil)).Elem()
}

func (i DistributionLoggingConfigArgs) ToDistributionLoggingConfigOutput() DistributionLoggingConfigOutput {
	return i.ToDistributionLoggingConfigOutputWithContext(context.Background())
}

func (i DistributionLoggingConfigArgs) ToDistributionLoggingConfigOutputWithContext(ctx context.Context) DistributionLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLoggingConfigOutput)
}

func (i *DistributionLoggingConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionLoggingConfigArgs] {
	return pulumix.Val(i)
}

type DistributionLoggingConfigOutput struct{ *pulumi.OutputState }

func (DistributionLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLoggingConfig)(nil)).Elem()
}

func (o DistributionLoggingConfigOutput) ToDistributionLoggingConfigOutput() DistributionLoggingConfigOutput {
	return o
}

func (o DistributionLoggingConfigOutput) ToDistributionLoggingConfigOutputWithContext(ctx context.Context) DistributionLoggingConfigOutput {
	return o
}

func (o DistributionLoggingConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionLoggingConfig] {
	return pulumix.Output[DistributionLoggingConfig]{
		OutputState: o.OutputState,
	}
}

// Amazon S3 bucket to store the access logs in, for example, `myawslogbucket.s3.amazonaws.com`.
func (o DistributionLoggingConfigOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[DistributionLoggingConfig](o, func(v DistributionLoggingConfig) string { return v.Bucket })
}

// Whether to include cookies in access logs (default: `false`).
func (o DistributionLoggingConfigOutput) IncludeCookies() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionLoggingConfig](o, func(v DistributionLoggingConfig) *bool { return v.IncludeCookies })
}

// Prefix to the access log filenames for this distribution, for example, `myprefix/`.
func (o DistributionLoggingConfigOutput) Prefix() pulumix.Output[*string] {
	return pulumix.Apply[DistributionLoggingConfig](o, func(v DistributionLoggingConfig) *string { return v.Prefix })
}

type DistributionOrderedCacheBehavior struct {
	// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the `defaultCacheBehavior` either `cachePolicyId` or `forwardedValues` must be set.
	CachePolicyId *string `pulumi:"cachePolicyId"`
	// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
	CachedMethods []string `pulumi:"cachedMethods"`
	// Whether you want CloudFront to automatically compress content for web requests that include `Accept-Encoding: gzip` in the request header (default: `false`).
	Compress *bool `pulumi:"compress"`
	// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an `Cache-Control max-age` or `Expires` header.
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Field level encryption configuration ID.
	FieldLevelEncryptionId *string `pulumi:"fieldLevelEncryptionId"`
	// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
	ForwardedValues *DistributionOrderedCacheBehaviorForwardedValues `pulumi:"forwardedValues"`
	// A config block that triggers a cloudfront function with specific actions (maximum 2).
	FunctionAssociations []DistributionOrderedCacheBehaviorFunctionAssociation `pulumi:"functionAssociations"`
	// A config block that triggers a lambda function with specific actions (maximum 4).
	LambdaFunctionAssociations []DistributionOrderedCacheBehaviorLambdaFunctionAssociation `pulumi:"lambdaFunctionAssociations"`
	// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of `Cache-Control max-age`, `Cache-Control s-maxage`, and `Expires` headers.
	MaxTtl *int `pulumi:"maxTtl"`
	// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
	MinTtl *int `pulumi:"minTtl"`
	// Unique identifier of the origin request policy that is attached to the behavior.
	OriginRequestPolicyId *string `pulumi:"originRequestPolicyId"`
	// Pattern (for example, `images/*.jpg`) that specifies which requests you want this cache behavior to apply to.
	PathPattern string `pulumi:"pathPattern"`
	// ARN of the real-time log configuration that is attached to this cache behavior.
	RealtimeLogConfigArn *string `pulumi:"realtimeLogConfigArn"`
	// Identifier for a response headers policy.
	ResponseHeadersPolicyId *string `pulumi:"responseHeadersPolicyId"`
	// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
	SmoothStreaming *bool `pulumi:"smoothStreaming"`
	// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
	TargetOriginId string `pulumi:"targetOriginId"`
	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedKeyGroups []string `pulumi:"trustedKeyGroups"`
	// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedSigners []string `pulumi:"trustedSigners"`
	// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of `allow-all`, `https-only`, or `redirect-to-https`.
	ViewerProtocolPolicy string `pulumi:"viewerProtocolPolicy"`
}

type DistributionOrderedCacheBehaviorArgs struct {
	// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
	AllowedMethods pulumix.Input[[]string] `pulumi:"allowedMethods"`
	// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the `defaultCacheBehavior` either `cachePolicyId` or `forwardedValues` must be set.
	CachePolicyId pulumix.Input[*string] `pulumi:"cachePolicyId"`
	// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
	CachedMethods pulumix.Input[[]string] `pulumi:"cachedMethods"`
	// Whether you want CloudFront to automatically compress content for web requests that include `Accept-Encoding: gzip` in the request header (default: `false`).
	Compress pulumix.Input[*bool] `pulumi:"compress"`
	// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an `Cache-Control max-age` or `Expires` header.
	DefaultTtl pulumix.Input[*int] `pulumi:"defaultTtl"`
	// Field level encryption configuration ID.
	FieldLevelEncryptionId pulumix.Input[*string] `pulumi:"fieldLevelEncryptionId"`
	// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
	ForwardedValues pulumix.Input[*DistributionOrderedCacheBehaviorForwardedValuesArgs] `pulumi:"forwardedValues"`
	// A config block that triggers a cloudfront function with specific actions (maximum 2).
	FunctionAssociations pulumix.Input[[]*DistributionOrderedCacheBehaviorFunctionAssociationArgs] `pulumi:"functionAssociations"`
	// A config block that triggers a lambda function with specific actions (maximum 4).
	LambdaFunctionAssociations pulumix.Input[[]*DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs] `pulumi:"lambdaFunctionAssociations"`
	// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of `Cache-Control max-age`, `Cache-Control s-maxage`, and `Expires` headers.
	MaxTtl pulumix.Input[*int] `pulumi:"maxTtl"`
	// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
	MinTtl pulumix.Input[*int] `pulumi:"minTtl"`
	// Unique identifier of the origin request policy that is attached to the behavior.
	OriginRequestPolicyId pulumix.Input[*string] `pulumi:"originRequestPolicyId"`
	// Pattern (for example, `images/*.jpg`) that specifies which requests you want this cache behavior to apply to.
	PathPattern pulumix.Input[string] `pulumi:"pathPattern"`
	// ARN of the real-time log configuration that is attached to this cache behavior.
	RealtimeLogConfigArn pulumix.Input[*string] `pulumi:"realtimeLogConfigArn"`
	// Identifier for a response headers policy.
	ResponseHeadersPolicyId pulumix.Input[*string] `pulumi:"responseHeadersPolicyId"`
	// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
	SmoothStreaming pulumix.Input[*bool] `pulumi:"smoothStreaming"`
	// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
	TargetOriginId pulumix.Input[string] `pulumi:"targetOriginId"`
	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedKeyGroups pulumix.Input[[]string] `pulumi:"trustedKeyGroups"`
	// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedSigners pulumix.Input[[]string] `pulumi:"trustedSigners"`
	// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of `allow-all`, `https-only`, or `redirect-to-https`.
	ViewerProtocolPolicy pulumix.Input[string] `pulumi:"viewerProtocolPolicy"`
}

func (DistributionOrderedCacheBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehavior)(nil)).Elem()
}

func (i DistributionOrderedCacheBehaviorArgs) ToDistributionOrderedCacheBehaviorOutput() DistributionOrderedCacheBehaviorOutput {
	return i.ToDistributionOrderedCacheBehaviorOutputWithContext(context.Background())
}

func (i DistributionOrderedCacheBehaviorArgs) ToDistributionOrderedCacheBehaviorOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOrderedCacheBehaviorOutput)
}

func (i *DistributionOrderedCacheBehaviorArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOrderedCacheBehaviorArgs] {
	return pulumix.Val(i)
}

type DistributionOrderedCacheBehaviorOutput struct{ *pulumi.OutputState }

func (DistributionOrderedCacheBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehavior)(nil)).Elem()
}

func (o DistributionOrderedCacheBehaviorOutput) ToDistributionOrderedCacheBehaviorOutput() DistributionOrderedCacheBehaviorOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorOutput) ToDistributionOrderedCacheBehaviorOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOrderedCacheBehavior] {
	return pulumix.Output[DistributionOrderedCacheBehavior]{
		OutputState: o.OutputState,
	}
}

// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
func (o DistributionOrderedCacheBehaviorOutput) AllowedMethods() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) []string { return v.AllowedMethods })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the `defaultCacheBehavior` either `cachePolicyId` or `forwardedValues` must be set.
func (o DistributionOrderedCacheBehaviorOutput) CachePolicyId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *string { return v.CachePolicyId })
}

// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
func (o DistributionOrderedCacheBehaviorOutput) CachedMethods() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) []string { return v.CachedMethods })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Whether you want CloudFront to automatically compress content for web requests that include `Accept-Encoding: gzip` in the request header (default: `false`).
func (o DistributionOrderedCacheBehaviorOutput) Compress() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *bool { return v.Compress })
}

// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an `Cache-Control max-age` or `Expires` header.
func (o DistributionOrderedCacheBehaviorOutput) DefaultTtl() pulumix.Output[*int] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *int { return v.DefaultTtl })
}

// Field level encryption configuration ID.
func (o DistributionOrderedCacheBehaviorOutput) FieldLevelEncryptionId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *string { return v.FieldLevelEncryptionId })
}

// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
func (o DistributionOrderedCacheBehaviorOutput) ForwardedValues() pulumix.GPtrOutput[DistributionOrderedCacheBehaviorForwardedValues, DistributionOrderedCacheBehaviorForwardedValuesOutput] {
	value := pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *DistributionOrderedCacheBehaviorForwardedValues {
		return v.ForwardedValues
	})
	return pulumix.GPtrOutput[DistributionOrderedCacheBehaviorForwardedValues, DistributionOrderedCacheBehaviorForwardedValuesOutput]{OutputState: value.OutputState}
}

// A config block that triggers a cloudfront function with specific actions (maximum 2).
func (o DistributionOrderedCacheBehaviorOutput) FunctionAssociations() pulumix.GArrayOutput[DistributionOrderedCacheBehaviorFunctionAssociation, DistributionOrderedCacheBehaviorFunctionAssociationOutput] {
	value := pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) []DistributionOrderedCacheBehaviorFunctionAssociation {
		return v.FunctionAssociations
	})
	return pulumix.GArrayOutput[DistributionOrderedCacheBehaviorFunctionAssociation, DistributionOrderedCacheBehaviorFunctionAssociationOutput]{OutputState: value.OutputState}
}

// A config block that triggers a lambda function with specific actions (maximum 4).
func (o DistributionOrderedCacheBehaviorOutput) LambdaFunctionAssociations() pulumix.GArrayOutput[DistributionOrderedCacheBehaviorLambdaFunctionAssociation, DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput] {
	value := pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) []DistributionOrderedCacheBehaviorLambdaFunctionAssociation {
		return v.LambdaFunctionAssociations
	})
	return pulumix.GArrayOutput[DistributionOrderedCacheBehaviorLambdaFunctionAssociation, DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput]{OutputState: value.OutputState}
}

// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of `Cache-Control max-age`, `Cache-Control s-maxage`, and `Expires` headers.
func (o DistributionOrderedCacheBehaviorOutput) MaxTtl() pulumix.Output[*int] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *int { return v.MaxTtl })
}

// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
func (o DistributionOrderedCacheBehaviorOutput) MinTtl() pulumix.Output[*int] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *int { return v.MinTtl })
}

// Unique identifier of the origin request policy that is attached to the behavior.
func (o DistributionOrderedCacheBehaviorOutput) OriginRequestPolicyId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *string { return v.OriginRequestPolicyId })
}

// Pattern (for example, `images/*.jpg`) that specifies which requests you want this cache behavior to apply to.
func (o DistributionOrderedCacheBehaviorOutput) PathPattern() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) string { return v.PathPattern })
}

// ARN of the real-time log configuration that is attached to this cache behavior.
func (o DistributionOrderedCacheBehaviorOutput) RealtimeLogConfigArn() pulumix.Output[*string] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *string { return v.RealtimeLogConfigArn })
}

// Identifier for a response headers policy.
func (o DistributionOrderedCacheBehaviorOutput) ResponseHeadersPolicyId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *string { return v.ResponseHeadersPolicyId })
}

// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
func (o DistributionOrderedCacheBehaviorOutput) SmoothStreaming() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) *bool { return v.SmoothStreaming })
}

// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
func (o DistributionOrderedCacheBehaviorOutput) TargetOriginId() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) string { return v.TargetOriginId })
}

// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
func (o DistributionOrderedCacheBehaviorOutput) TrustedKeyGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) []string { return v.TrustedKeyGroups })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
func (o DistributionOrderedCacheBehaviorOutput) TrustedSigners() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) []string { return v.TrustedSigners })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of `allow-all`, `https-only`, or `redirect-to-https`.
func (o DistributionOrderedCacheBehaviorOutput) ViewerProtocolPolicy() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrderedCacheBehavior](o, func(v DistributionOrderedCacheBehavior) string { return v.ViewerProtocolPolicy })
}

type DistributionOrderedCacheBehaviorForwardedValues struct {
	// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
	Cookies DistributionOrderedCacheBehaviorForwardedValuesCookies `pulumi:"cookies"`
	// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify `*` to include all headers.
	Headers []string `pulumi:"headers"`
	// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
	QueryString bool `pulumi:"queryString"`
	// When specified, along with a value of `true` for `queryString`, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of `true` for `queryString`, all query string keys are cached.
	QueryStringCacheKeys []string `pulumi:"queryStringCacheKeys"`
}

type DistributionOrderedCacheBehaviorForwardedValuesArgs struct {
	// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
	Cookies pulumix.Input[*DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs] `pulumi:"cookies"`
	// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify `*` to include all headers.
	Headers pulumix.Input[[]string] `pulumi:"headers"`
	// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
	QueryString pulumix.Input[bool] `pulumi:"queryString"`
	// When specified, along with a value of `true` for `queryString`, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of `true` for `queryString`, all query string keys are cached.
	QueryStringCacheKeys pulumix.Input[[]string] `pulumi:"queryStringCacheKeys"`
}

func (DistributionOrderedCacheBehaviorForwardedValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehaviorForwardedValues)(nil)).Elem()
}

func (i DistributionOrderedCacheBehaviorForwardedValuesArgs) ToDistributionOrderedCacheBehaviorForwardedValuesOutput() DistributionOrderedCacheBehaviorForwardedValuesOutput {
	return i.ToDistributionOrderedCacheBehaviorForwardedValuesOutputWithContext(context.Background())
}

func (i DistributionOrderedCacheBehaviorForwardedValuesArgs) ToDistributionOrderedCacheBehaviorForwardedValuesOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorForwardedValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOrderedCacheBehaviorForwardedValuesOutput)
}

func (i *DistributionOrderedCacheBehaviorForwardedValuesArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOrderedCacheBehaviorForwardedValuesArgs] {
	return pulumix.Val(i)
}

type DistributionOrderedCacheBehaviorForwardedValuesOutput struct{ *pulumi.OutputState }

func (DistributionOrderedCacheBehaviorForwardedValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehaviorForwardedValues)(nil)).Elem()
}

func (o DistributionOrderedCacheBehaviorForwardedValuesOutput) ToDistributionOrderedCacheBehaviorForwardedValuesOutput() DistributionOrderedCacheBehaviorForwardedValuesOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorForwardedValuesOutput) ToDistributionOrderedCacheBehaviorForwardedValuesOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorForwardedValuesOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorForwardedValuesOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOrderedCacheBehaviorForwardedValues] {
	return pulumix.Output[DistributionOrderedCacheBehaviorForwardedValues]{
		OutputState: o.OutputState,
	}
}

// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
func (o DistributionOrderedCacheBehaviorForwardedValuesOutput) Cookies() pulumix.GPtrOutput[DistributionOrderedCacheBehaviorForwardedValuesCookies, DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput] {
	value := pulumix.Apply[DistributionOrderedCacheBehaviorForwardedValues](o, func(v DistributionOrderedCacheBehaviorForwardedValues) DistributionOrderedCacheBehaviorForwardedValuesCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[DistributionOrderedCacheBehaviorForwardedValuesCookies, DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput]{OutputState: value.OutputState}
}

// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify `*` to include all headers.
func (o DistributionOrderedCacheBehaviorForwardedValuesOutput) Headers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionOrderedCacheBehaviorForwardedValues](o, func(v DistributionOrderedCacheBehaviorForwardedValues) []string { return v.Headers })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
func (o DistributionOrderedCacheBehaviorForwardedValuesOutput) QueryString() pulumix.Output[bool] {
	return pulumix.Apply[DistributionOrderedCacheBehaviorForwardedValues](o, func(v DistributionOrderedCacheBehaviorForwardedValues) bool { return v.QueryString })
}

// When specified, along with a value of `true` for `queryString`, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of `true` for `queryString`, all query string keys are cached.
func (o DistributionOrderedCacheBehaviorForwardedValuesOutput) QueryStringCacheKeys() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionOrderedCacheBehaviorForwardedValues](o, func(v DistributionOrderedCacheBehaviorForwardedValues) []string { return v.QueryStringCacheKeys })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DistributionOrderedCacheBehaviorForwardedValuesCookies struct {
	// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify `all`, `none` or `whitelist`. If `whitelist`, you must include the subsequent `whitelistedNames`.
	Forward string `pulumi:"forward"`
	// If you have specified `whitelist` to `forward`, the whitelisted cookies that you want CloudFront to forward to your origin.
	WhitelistedNames []string `pulumi:"whitelistedNames"`
}

type DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs struct {
	// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify `all`, `none` or `whitelist`. If `whitelist`, you must include the subsequent `whitelistedNames`.
	Forward pulumix.Input[string] `pulumi:"forward"`
	// If you have specified `whitelist` to `forward`, the whitelisted cookies that you want CloudFront to forward to your origin.
	WhitelistedNames pulumix.Input[[]string] `pulumi:"whitelistedNames"`
}

func (DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehaviorForwardedValuesCookies)(nil)).Elem()
}

func (i DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs) ToDistributionOrderedCacheBehaviorForwardedValuesCookiesOutput() DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput {
	return i.ToDistributionOrderedCacheBehaviorForwardedValuesCookiesOutputWithContext(context.Background())
}

func (i DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs) ToDistributionOrderedCacheBehaviorForwardedValuesCookiesOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput)
}

func (i *DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs] {
	return pulumix.Val(i)
}

type DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput struct{ *pulumi.OutputState }

func (DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehaviorForwardedValuesCookies)(nil)).Elem()
}

func (o DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput) ToDistributionOrderedCacheBehaviorForwardedValuesCookiesOutput() DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput) ToDistributionOrderedCacheBehaviorForwardedValuesCookiesOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOrderedCacheBehaviorForwardedValuesCookies] {
	return pulumix.Output[DistributionOrderedCacheBehaviorForwardedValuesCookies]{
		OutputState: o.OutputState,
	}
}

// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify `all`, `none` or `whitelist`. If `whitelist`, you must include the subsequent `whitelistedNames`.
func (o DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput) Forward() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrderedCacheBehaviorForwardedValuesCookies](o, func(v DistributionOrderedCacheBehaviorForwardedValuesCookies) string { return v.Forward })
}

// If you have specified `whitelist` to `forward`, the whitelisted cookies that you want CloudFront to forward to your origin.
func (o DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput) WhitelistedNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionOrderedCacheBehaviorForwardedValuesCookies](o, func(v DistributionOrderedCacheBehaviorForwardedValuesCookies) []string { return v.WhitelistedNames })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DistributionOrderedCacheBehaviorFunctionAssociation struct {
	// Specific event to trigger this function. Valid values: `viewer-request` or `viewer-response`.
	EventType string `pulumi:"eventType"`
	// ARN of the CloudFront function.
	FunctionArn string `pulumi:"functionArn"`
}

type DistributionOrderedCacheBehaviorFunctionAssociationArgs struct {
	// Specific event to trigger this function. Valid values: `viewer-request` or `viewer-response`.
	EventType pulumix.Input[string] `pulumi:"eventType"`
	// ARN of the CloudFront function.
	FunctionArn pulumix.Input[string] `pulumi:"functionArn"`
}

func (DistributionOrderedCacheBehaviorFunctionAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehaviorFunctionAssociation)(nil)).Elem()
}

func (i DistributionOrderedCacheBehaviorFunctionAssociationArgs) ToDistributionOrderedCacheBehaviorFunctionAssociationOutput() DistributionOrderedCacheBehaviorFunctionAssociationOutput {
	return i.ToDistributionOrderedCacheBehaviorFunctionAssociationOutputWithContext(context.Background())
}

func (i DistributionOrderedCacheBehaviorFunctionAssociationArgs) ToDistributionOrderedCacheBehaviorFunctionAssociationOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorFunctionAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOrderedCacheBehaviorFunctionAssociationOutput)
}

func (i *DistributionOrderedCacheBehaviorFunctionAssociationArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOrderedCacheBehaviorFunctionAssociationArgs] {
	return pulumix.Val(i)
}

type DistributionOrderedCacheBehaviorFunctionAssociationOutput struct{ *pulumi.OutputState }

func (DistributionOrderedCacheBehaviorFunctionAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehaviorFunctionAssociation)(nil)).Elem()
}

func (o DistributionOrderedCacheBehaviorFunctionAssociationOutput) ToDistributionOrderedCacheBehaviorFunctionAssociationOutput() DistributionOrderedCacheBehaviorFunctionAssociationOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorFunctionAssociationOutput) ToDistributionOrderedCacheBehaviorFunctionAssociationOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorFunctionAssociationOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorFunctionAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOrderedCacheBehaviorFunctionAssociation] {
	return pulumix.Output[DistributionOrderedCacheBehaviorFunctionAssociation]{
		OutputState: o.OutputState,
	}
}

// Specific event to trigger this function. Valid values: `viewer-request` or `viewer-response`.
func (o DistributionOrderedCacheBehaviorFunctionAssociationOutput) EventType() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrderedCacheBehaviorFunctionAssociation](o, func(v DistributionOrderedCacheBehaviorFunctionAssociation) string { return v.EventType })
}

// ARN of the CloudFront function.
func (o DistributionOrderedCacheBehaviorFunctionAssociationOutput) FunctionArn() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrderedCacheBehaviorFunctionAssociation](o, func(v DistributionOrderedCacheBehaviorFunctionAssociation) string { return v.FunctionArn })
}

type DistributionOrderedCacheBehaviorLambdaFunctionAssociation struct {
	// Specific event to trigger this function. Valid values: `viewer-request`, `origin-request`, `viewer-response`, `origin-response`.
	EventType string `pulumi:"eventType"`
	// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
	IncludeBody *bool `pulumi:"includeBody"`
	// ARN of the Lambda function.
	LambdaArn string `pulumi:"lambdaArn"`
}

type DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs struct {
	// Specific event to trigger this function. Valid values: `viewer-request`, `origin-request`, `viewer-response`, `origin-response`.
	EventType pulumix.Input[string] `pulumi:"eventType"`
	// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
	IncludeBody pulumix.Input[*bool] `pulumi:"includeBody"`
	// ARN of the Lambda function.
	LambdaArn pulumix.Input[string] `pulumi:"lambdaArn"`
}

func (DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehaviorLambdaFunctionAssociation)(nil)).Elem()
}

func (i DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs) ToDistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput() DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput {
	return i.ToDistributionOrderedCacheBehaviorLambdaFunctionAssociationOutputWithContext(context.Background())
}

func (i DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs) ToDistributionOrderedCacheBehaviorLambdaFunctionAssociationOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput)
}

func (i *DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs] {
	return pulumix.Val(i)
}

type DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput struct{ *pulumi.OutputState }

func (DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrderedCacheBehaviorLambdaFunctionAssociation)(nil)).Elem()
}

func (o DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput) ToDistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput() DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput) ToDistributionOrderedCacheBehaviorLambdaFunctionAssociationOutputWithContext(ctx context.Context) DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput {
	return o
}

func (o DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOrderedCacheBehaviorLambdaFunctionAssociation] {
	return pulumix.Output[DistributionOrderedCacheBehaviorLambdaFunctionAssociation]{
		OutputState: o.OutputState,
	}
}

// Specific event to trigger this function. Valid values: `viewer-request`, `origin-request`, `viewer-response`, `origin-response`.
func (o DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput) EventType() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrderedCacheBehaviorLambdaFunctionAssociation](o, func(v DistributionOrderedCacheBehaviorLambdaFunctionAssociation) string { return v.EventType })
}

// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
func (o DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput) IncludeBody() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionOrderedCacheBehaviorLambdaFunctionAssociation](o, func(v DistributionOrderedCacheBehaviorLambdaFunctionAssociation) *bool { return v.IncludeBody })
}

// ARN of the Lambda function.
func (o DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput) LambdaArn() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrderedCacheBehaviorLambdaFunctionAssociation](o, func(v DistributionOrderedCacheBehaviorLambdaFunctionAssociation) string { return v.LambdaArn })
}

type DistributionOrigin struct {
	// Number of times that CloudFront attempts to connect to the origin. Must be between 1-3. Defaults to 3.
	ConnectionAttempts *int `pulumi:"connectionAttempts"`
	// Number of seconds that CloudFront waits when trying to establish a connection to the origin. Must be between 1-10. Defaults to 10.
	ConnectionTimeout *int `pulumi:"connectionTimeout"`
	// One or more sub-resources with `name` and `value` parameters that specify header data that will be sent to the origin (multiples allowed).
	CustomHeaders []DistributionOriginCustomHeader `pulumi:"customHeaders"`
	// The CloudFront custom origin configuration information. If an S3 origin is required, use `originAccessControlId` or `s3OriginConfig` instead.
	CustomOriginConfig *DistributionOriginCustomOriginConfig `pulumi:"customOriginConfig"`
	// DNS domain name of either the S3 bucket, or web site of your custom origin.
	DomainName string `pulumi:"domainName"`
	// Unique identifier of a [CloudFront origin access control][8] for this origin.
	OriginAccessControlId *string `pulumi:"originAccessControlId"`
	// Unique identifier for the origin.
	OriginId string `pulumi:"originId"`
	// Optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.
	OriginPath *string `pulumi:"originPath"`
	// The CloudFront Origin Shield configuration information. Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the Amazon CloudFront Developer Guide.
	OriginShield *DistributionOriginOriginShield `pulumi:"originShield"`
	// The CloudFront S3 origin configuration information. If a custom origin is required, use `customOriginConfig` instead.
	S3OriginConfig *DistributionOriginS3OriginConfig `pulumi:"s3OriginConfig"`
}

type DistributionOriginArgs struct {
	// Number of times that CloudFront attempts to connect to the origin. Must be between 1-3. Defaults to 3.
	ConnectionAttempts pulumix.Input[*int] `pulumi:"connectionAttempts"`
	// Number of seconds that CloudFront waits when trying to establish a connection to the origin. Must be between 1-10. Defaults to 10.
	ConnectionTimeout pulumix.Input[*int] `pulumi:"connectionTimeout"`
	// One or more sub-resources with `name` and `value` parameters that specify header data that will be sent to the origin (multiples allowed).
	CustomHeaders pulumix.Input[[]*DistributionOriginCustomHeaderArgs] `pulumi:"customHeaders"`
	// The CloudFront custom origin configuration information. If an S3 origin is required, use `originAccessControlId` or `s3OriginConfig` instead.
	CustomOriginConfig pulumix.Input[*DistributionOriginCustomOriginConfigArgs] `pulumi:"customOriginConfig"`
	// DNS domain name of either the S3 bucket, or web site of your custom origin.
	DomainName pulumix.Input[string] `pulumi:"domainName"`
	// Unique identifier of a [CloudFront origin access control][8] for this origin.
	OriginAccessControlId pulumix.Input[*string] `pulumi:"originAccessControlId"`
	// Unique identifier for the origin.
	OriginId pulumix.Input[string] `pulumi:"originId"`
	// Optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.
	OriginPath pulumix.Input[*string] `pulumi:"originPath"`
	// The CloudFront Origin Shield configuration information. Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the Amazon CloudFront Developer Guide.
	OriginShield pulumix.Input[*DistributionOriginOriginShieldArgs] `pulumi:"originShield"`
	// The CloudFront S3 origin configuration information. If a custom origin is required, use `customOriginConfig` instead.
	S3OriginConfig pulumix.Input[*DistributionOriginS3OriginConfigArgs] `pulumi:"s3OriginConfig"`
}

func (DistributionOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrigin)(nil)).Elem()
}

func (i DistributionOriginArgs) ToDistributionOriginOutput() DistributionOriginOutput {
	return i.ToDistributionOriginOutputWithContext(context.Background())
}

func (i DistributionOriginArgs) ToDistributionOriginOutputWithContext(ctx context.Context) DistributionOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginOutput)
}

func (i *DistributionOriginArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOriginArgs] {
	return pulumix.Val(i)
}

type DistributionOriginOutput struct{ *pulumi.OutputState }

func (DistributionOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrigin)(nil)).Elem()
}

func (o DistributionOriginOutput) ToDistributionOriginOutput() DistributionOriginOutput {
	return o
}

func (o DistributionOriginOutput) ToDistributionOriginOutputWithContext(ctx context.Context) DistributionOriginOutput {
	return o
}

func (o DistributionOriginOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOrigin] {
	return pulumix.Output[DistributionOrigin]{
		OutputState: o.OutputState,
	}
}

// Number of times that CloudFront attempts to connect to the origin. Must be between 1-3. Defaults to 3.
func (o DistributionOriginOutput) ConnectionAttempts() pulumix.Output[*int] {
	return pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) *int { return v.ConnectionAttempts })
}

// Number of seconds that CloudFront waits when trying to establish a connection to the origin. Must be between 1-10. Defaults to 10.
func (o DistributionOriginOutput) ConnectionTimeout() pulumix.Output[*int] {
	return pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) *int { return v.ConnectionTimeout })
}

// One or more sub-resources with `name` and `value` parameters that specify header data that will be sent to the origin (multiples allowed).
func (o DistributionOriginOutput) CustomHeaders() pulumix.GArrayOutput[DistributionOriginCustomHeader, DistributionOriginCustomHeaderOutput] {
	value := pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) []DistributionOriginCustomHeader { return v.CustomHeaders })
	return pulumix.GArrayOutput[DistributionOriginCustomHeader, DistributionOriginCustomHeaderOutput]{OutputState: value.OutputState}
}

// The CloudFront custom origin configuration information. If an S3 origin is required, use `originAccessControlId` or `s3OriginConfig` instead.
func (o DistributionOriginOutput) CustomOriginConfig() pulumix.GPtrOutput[DistributionOriginCustomOriginConfig, DistributionOriginCustomOriginConfigOutput] {
	value := pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) *DistributionOriginCustomOriginConfig { return v.CustomOriginConfig })
	return pulumix.GPtrOutput[DistributionOriginCustomOriginConfig, DistributionOriginCustomOriginConfigOutput]{OutputState: value.OutputState}
}

// DNS domain name of either the S3 bucket, or web site of your custom origin.
func (o DistributionOriginOutput) DomainName() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) string { return v.DomainName })
}

// Unique identifier of a [CloudFront origin access control][8] for this origin.
func (o DistributionOriginOutput) OriginAccessControlId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) *string { return v.OriginAccessControlId })
}

// Unique identifier for the origin.
func (o DistributionOriginOutput) OriginId() pulumix.Output[string] {
	return pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) string { return v.OriginId })
}

// Optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.
func (o DistributionOriginOutput) OriginPath() pulumix.Output[*string] {
	return pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) *string { return v.OriginPath })
}

// The CloudFront Origin Shield configuration information. Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the Amazon CloudFront Developer Guide.
func (o DistributionOriginOutput) OriginShield() pulumix.GPtrOutput[DistributionOriginOriginShield, DistributionOriginOriginShieldOutput] {
	value := pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) *DistributionOriginOriginShield { return v.OriginShield })
	return pulumix.GPtrOutput[DistributionOriginOriginShield, DistributionOriginOriginShieldOutput]{OutputState: value.OutputState}
}

// The CloudFront S3 origin configuration information. If a custom origin is required, use `customOriginConfig` instead.
func (o DistributionOriginOutput) S3OriginConfig() pulumix.GPtrOutput[DistributionOriginS3OriginConfig, DistributionOriginS3OriginConfigOutput] {
	value := pulumix.Apply[DistributionOrigin](o, func(v DistributionOrigin) *DistributionOriginS3OriginConfig { return v.S3OriginConfig })
	return pulumix.GPtrOutput[DistributionOriginS3OriginConfig, DistributionOriginS3OriginConfigOutput]{OutputState: value.OutputState}
}

type DistributionOriginCustomHeader struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

type DistributionOriginCustomHeaderArgs struct {
	Name  pulumix.Input[string] `pulumi:"name"`
	Value pulumix.Input[string] `pulumi:"value"`
}

func (DistributionOriginCustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginCustomHeader)(nil)).Elem()
}

func (i DistributionOriginCustomHeaderArgs) ToDistributionOriginCustomHeaderOutput() DistributionOriginCustomHeaderOutput {
	return i.ToDistributionOriginCustomHeaderOutputWithContext(context.Background())
}

func (i DistributionOriginCustomHeaderArgs) ToDistributionOriginCustomHeaderOutputWithContext(ctx context.Context) DistributionOriginCustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginCustomHeaderOutput)
}

func (i *DistributionOriginCustomHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOriginCustomHeaderArgs] {
	return pulumix.Val(i)
}

type DistributionOriginCustomHeaderOutput struct{ *pulumi.OutputState }

func (DistributionOriginCustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginCustomHeader)(nil)).Elem()
}

func (o DistributionOriginCustomHeaderOutput) ToDistributionOriginCustomHeaderOutput() DistributionOriginCustomHeaderOutput {
	return o
}

func (o DistributionOriginCustomHeaderOutput) ToDistributionOriginCustomHeaderOutputWithContext(ctx context.Context) DistributionOriginCustomHeaderOutput {
	return o
}

func (o DistributionOriginCustomHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOriginCustomHeader] {
	return pulumix.Output[DistributionOriginCustomHeader]{
		OutputState: o.OutputState,
	}
}

func (o DistributionOriginCustomHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[DistributionOriginCustomHeader](o, func(v DistributionOriginCustomHeader) string { return v.Name })
}

func (o DistributionOriginCustomHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[DistributionOriginCustomHeader](o, func(v DistributionOriginCustomHeader) string { return v.Value })
}

type DistributionOriginCustomOriginConfig struct {
	// HTTP port the custom origin listens on.
	HttpPort int `pulumi:"httpPort"`
	// HTTPS port the custom origin listens on.
	HttpsPort int `pulumi:"httpsPort"`
	// The Custom KeepAlive timeout, in seconds. By default, AWS enforces an upper limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout). Defaults to `5`.
	OriginKeepaliveTimeout *int `pulumi:"originKeepaliveTimeout"`
	// Origin protocol policy to apply to your origin. One of `http-only`, `https-only`, or `match-viewer`.
	OriginProtocolPolicy string `pulumi:"originProtocolPolicy"`
	// The Custom Read timeout, in seconds. By default, AWS enforces an upper limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout). Defaults to `30`.
	OriginReadTimeout *int `pulumi:"originReadTimeout"`
	// SSL/TLS protocols that you want CloudFront to use when communicating with your origin over HTTPS. A list of one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
	OriginSslProtocols []string `pulumi:"originSslProtocols"`
}

type DistributionOriginCustomOriginConfigArgs struct {
	// HTTP port the custom origin listens on.
	HttpPort pulumix.Input[int] `pulumi:"httpPort"`
	// HTTPS port the custom origin listens on.
	HttpsPort pulumix.Input[int] `pulumi:"httpsPort"`
	// The Custom KeepAlive timeout, in seconds. By default, AWS enforces an upper limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout). Defaults to `5`.
	OriginKeepaliveTimeout pulumix.Input[*int] `pulumi:"originKeepaliveTimeout"`
	// Origin protocol policy to apply to your origin. One of `http-only`, `https-only`, or `match-viewer`.
	OriginProtocolPolicy pulumix.Input[string] `pulumi:"originProtocolPolicy"`
	// The Custom Read timeout, in seconds. By default, AWS enforces an upper limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout). Defaults to `30`.
	OriginReadTimeout pulumix.Input[*int] `pulumi:"originReadTimeout"`
	// SSL/TLS protocols that you want CloudFront to use when communicating with your origin over HTTPS. A list of one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
	OriginSslProtocols pulumix.Input[[]string] `pulumi:"originSslProtocols"`
}

func (DistributionOriginCustomOriginConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginCustomOriginConfig)(nil)).Elem()
}

func (i DistributionOriginCustomOriginConfigArgs) ToDistributionOriginCustomOriginConfigOutput() DistributionOriginCustomOriginConfigOutput {
	return i.ToDistributionOriginCustomOriginConfigOutputWithContext(context.Background())
}

func (i DistributionOriginCustomOriginConfigArgs) ToDistributionOriginCustomOriginConfigOutputWithContext(ctx context.Context) DistributionOriginCustomOriginConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginCustomOriginConfigOutput)
}

func (i *DistributionOriginCustomOriginConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOriginCustomOriginConfigArgs] {
	return pulumix.Val(i)
}

type DistributionOriginCustomOriginConfigOutput struct{ *pulumi.OutputState }

func (DistributionOriginCustomOriginConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginCustomOriginConfig)(nil)).Elem()
}

func (o DistributionOriginCustomOriginConfigOutput) ToDistributionOriginCustomOriginConfigOutput() DistributionOriginCustomOriginConfigOutput {
	return o
}

func (o DistributionOriginCustomOriginConfigOutput) ToDistributionOriginCustomOriginConfigOutputWithContext(ctx context.Context) DistributionOriginCustomOriginConfigOutput {
	return o
}

func (o DistributionOriginCustomOriginConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOriginCustomOriginConfig] {
	return pulumix.Output[DistributionOriginCustomOriginConfig]{
		OutputState: o.OutputState,
	}
}

// HTTP port the custom origin listens on.
func (o DistributionOriginCustomOriginConfigOutput) HttpPort() pulumix.Output[int] {
	return pulumix.Apply[DistributionOriginCustomOriginConfig](o, func(v DistributionOriginCustomOriginConfig) int { return v.HttpPort })
}

// HTTPS port the custom origin listens on.
func (o DistributionOriginCustomOriginConfigOutput) HttpsPort() pulumix.Output[int] {
	return pulumix.Apply[DistributionOriginCustomOriginConfig](o, func(v DistributionOriginCustomOriginConfig) int { return v.HttpsPort })
}

// The Custom KeepAlive timeout, in seconds. By default, AWS enforces an upper limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout). Defaults to `5`.
func (o DistributionOriginCustomOriginConfigOutput) OriginKeepaliveTimeout() pulumix.Output[*int] {
	return pulumix.Apply[DistributionOriginCustomOriginConfig](o, func(v DistributionOriginCustomOriginConfig) *int { return v.OriginKeepaliveTimeout })
}

// Origin protocol policy to apply to your origin. One of `http-only`, `https-only`, or `match-viewer`.
func (o DistributionOriginCustomOriginConfigOutput) OriginProtocolPolicy() pulumix.Output[string] {
	return pulumix.Apply[DistributionOriginCustomOriginConfig](o, func(v DistributionOriginCustomOriginConfig) string { return v.OriginProtocolPolicy })
}

// The Custom Read timeout, in seconds. By default, AWS enforces an upper limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout). Defaults to `30`.
func (o DistributionOriginCustomOriginConfigOutput) OriginReadTimeout() pulumix.Output[*int] {
	return pulumix.Apply[DistributionOriginCustomOriginConfig](o, func(v DistributionOriginCustomOriginConfig) *int { return v.OriginReadTimeout })
}

// SSL/TLS protocols that you want CloudFront to use when communicating with your origin over HTTPS. A list of one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
func (o DistributionOriginCustomOriginConfigOutput) OriginSslProtocols() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionOriginCustomOriginConfig](o, func(v DistributionOriginCustomOriginConfig) []string { return v.OriginSslProtocols })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DistributionOriginGroup struct {
	// The failover criteria for when to failover to the secondary origin.
	FailoverCriteria DistributionOriginGroupFailoverCriteria `pulumi:"failoverCriteria"`
	// Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
	Members []DistributionOriginGroupMember `pulumi:"members"`
	// Unique identifier for the origin.
	OriginId string `pulumi:"originId"`
}

type DistributionOriginGroupArgs struct {
	// The failover criteria for when to failover to the secondary origin.
	FailoverCriteria pulumix.Input[*DistributionOriginGroupFailoverCriteriaArgs] `pulumi:"failoverCriteria"`
	// Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
	Members pulumix.Input[[]*DistributionOriginGroupMemberArgs] `pulumi:"members"`
	// Unique identifier for the origin.
	OriginId pulumix.Input[string] `pulumi:"originId"`
}

func (DistributionOriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroup)(nil)).Elem()
}

func (i DistributionOriginGroupArgs) ToDistributionOriginGroupOutput() DistributionOriginGroupOutput {
	return i.ToDistributionOriginGroupOutputWithContext(context.Background())
}

func (i DistributionOriginGroupArgs) ToDistributionOriginGroupOutputWithContext(ctx context.Context) DistributionOriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupOutput)
}

func (i *DistributionOriginGroupArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOriginGroupArgs] {
	return pulumix.Val(i)
}

type DistributionOriginGroupOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroup)(nil)).Elem()
}

func (o DistributionOriginGroupOutput) ToDistributionOriginGroupOutput() DistributionOriginGroupOutput {
	return o
}

func (o DistributionOriginGroupOutput) ToDistributionOriginGroupOutputWithContext(ctx context.Context) DistributionOriginGroupOutput {
	return o
}

func (o DistributionOriginGroupOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOriginGroup] {
	return pulumix.Output[DistributionOriginGroup]{
		OutputState: o.OutputState,
	}
}

// The failover criteria for when to failover to the secondary origin.
func (o DistributionOriginGroupOutput) FailoverCriteria() pulumix.GPtrOutput[DistributionOriginGroupFailoverCriteria, DistributionOriginGroupFailoverCriteriaOutput] {
	value := pulumix.Apply[DistributionOriginGroup](o, func(v DistributionOriginGroup) DistributionOriginGroupFailoverCriteria { return v.FailoverCriteria })
	return pulumix.GPtrOutput[DistributionOriginGroupFailoverCriteria, DistributionOriginGroupFailoverCriteriaOutput]{OutputState: value.OutputState}
}

// Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
func (o DistributionOriginGroupOutput) Members() pulumix.GArrayOutput[DistributionOriginGroupMember, DistributionOriginGroupMemberOutput] {
	value := pulumix.Apply[DistributionOriginGroup](o, func(v DistributionOriginGroup) []DistributionOriginGroupMember { return v.Members })
	return pulumix.GArrayOutput[DistributionOriginGroupMember, DistributionOriginGroupMemberOutput]{OutputState: value.OutputState}
}

// Unique identifier for the origin.
func (o DistributionOriginGroupOutput) OriginId() pulumix.Output[string] {
	return pulumix.Apply[DistributionOriginGroup](o, func(v DistributionOriginGroup) string { return v.OriginId })
}

type DistributionOriginGroupFailoverCriteria struct {
	// List of HTTP status codes for the origin group.
	StatusCodes []int `pulumi:"statusCodes"`
}

type DistributionOriginGroupFailoverCriteriaArgs struct {
	// List of HTTP status codes for the origin group.
	StatusCodes pulumix.Input[[]int] `pulumi:"statusCodes"`
}

func (DistributionOriginGroupFailoverCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupFailoverCriteria)(nil)).Elem()
}

func (i DistributionOriginGroupFailoverCriteriaArgs) ToDistributionOriginGroupFailoverCriteriaOutput() DistributionOriginGroupFailoverCriteriaOutput {
	return i.ToDistributionOriginGroupFailoverCriteriaOutputWithContext(context.Background())
}

func (i DistributionOriginGroupFailoverCriteriaArgs) ToDistributionOriginGroupFailoverCriteriaOutputWithContext(ctx context.Context) DistributionOriginGroupFailoverCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupFailoverCriteriaOutput)
}

func (i *DistributionOriginGroupFailoverCriteriaArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOriginGroupFailoverCriteriaArgs] {
	return pulumix.Val(i)
}

type DistributionOriginGroupFailoverCriteriaOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupFailoverCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupFailoverCriteria)(nil)).Elem()
}

func (o DistributionOriginGroupFailoverCriteriaOutput) ToDistributionOriginGroupFailoverCriteriaOutput() DistributionOriginGroupFailoverCriteriaOutput {
	return o
}

func (o DistributionOriginGroupFailoverCriteriaOutput) ToDistributionOriginGroupFailoverCriteriaOutputWithContext(ctx context.Context) DistributionOriginGroupFailoverCriteriaOutput {
	return o
}

func (o DistributionOriginGroupFailoverCriteriaOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOriginGroupFailoverCriteria] {
	return pulumix.Output[DistributionOriginGroupFailoverCriteria]{
		OutputState: o.OutputState,
	}
}

// List of HTTP status codes for the origin group.
func (o DistributionOriginGroupFailoverCriteriaOutput) StatusCodes() pulumix.ArrayOutput[int] {
	value := pulumix.Apply[DistributionOriginGroupFailoverCriteria](o, func(v DistributionOriginGroupFailoverCriteria) []int { return v.StatusCodes })
	return pulumix.ArrayOutput[int]{OutputState: value.OutputState}
}

type DistributionOriginGroupMember struct {
	// Unique identifier for the origin.
	OriginId string `pulumi:"originId"`
}

type DistributionOriginGroupMemberArgs struct {
	// Unique identifier for the origin.
	OriginId pulumix.Input[string] `pulumi:"originId"`
}

func (DistributionOriginGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupMember)(nil)).Elem()
}

func (i DistributionOriginGroupMemberArgs) ToDistributionOriginGroupMemberOutput() DistributionOriginGroupMemberOutput {
	return i.ToDistributionOriginGroupMemberOutputWithContext(context.Background())
}

func (i DistributionOriginGroupMemberArgs) ToDistributionOriginGroupMemberOutputWithContext(ctx context.Context) DistributionOriginGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupMemberOutput)
}

func (i *DistributionOriginGroupMemberArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOriginGroupMemberArgs] {
	return pulumix.Val(i)
}

type DistributionOriginGroupMemberOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupMember)(nil)).Elem()
}

func (o DistributionOriginGroupMemberOutput) ToDistributionOriginGroupMemberOutput() DistributionOriginGroupMemberOutput {
	return o
}

func (o DistributionOriginGroupMemberOutput) ToDistributionOriginGroupMemberOutputWithContext(ctx context.Context) DistributionOriginGroupMemberOutput {
	return o
}

func (o DistributionOriginGroupMemberOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOriginGroupMember] {
	return pulumix.Output[DistributionOriginGroupMember]{
		OutputState: o.OutputState,
	}
}

// Unique identifier for the origin.
func (o DistributionOriginGroupMemberOutput) OriginId() pulumix.Output[string] {
	return pulumix.Apply[DistributionOriginGroupMember](o, func(v DistributionOriginGroupMember) string { return v.OriginId })
}

type DistributionOriginOriginShield struct {
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled bool `pulumi:"enabled"`
	// AWS Region for Origin Shield. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2.
	OriginShieldRegion string `pulumi:"originShieldRegion"`
}

type DistributionOriginOriginShieldArgs struct {
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled pulumix.Input[bool] `pulumi:"enabled"`
	// AWS Region for Origin Shield. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2.
	OriginShieldRegion pulumix.Input[string] `pulumi:"originShieldRegion"`
}

func (DistributionOriginOriginShieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginOriginShield)(nil)).Elem()
}

func (i DistributionOriginOriginShieldArgs) ToDistributionOriginOriginShieldOutput() DistributionOriginOriginShieldOutput {
	return i.ToDistributionOriginOriginShieldOutputWithContext(context.Background())
}

func (i DistributionOriginOriginShieldArgs) ToDistributionOriginOriginShieldOutputWithContext(ctx context.Context) DistributionOriginOriginShieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginOriginShieldOutput)
}

func (i *DistributionOriginOriginShieldArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOriginOriginShieldArgs] {
	return pulumix.Val(i)
}

type DistributionOriginOriginShieldOutput struct{ *pulumi.OutputState }

func (DistributionOriginOriginShieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginOriginShield)(nil)).Elem()
}

func (o DistributionOriginOriginShieldOutput) ToDistributionOriginOriginShieldOutput() DistributionOriginOriginShieldOutput {
	return o
}

func (o DistributionOriginOriginShieldOutput) ToDistributionOriginOriginShieldOutputWithContext(ctx context.Context) DistributionOriginOriginShieldOutput {
	return o
}

func (o DistributionOriginOriginShieldOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOriginOriginShield] {
	return pulumix.Output[DistributionOriginOriginShield]{
		OutputState: o.OutputState,
	}
}

// Whether the distribution is enabled to accept end user requests for content.
func (o DistributionOriginOriginShieldOutput) Enabled() pulumix.Output[bool] {
	return pulumix.Apply[DistributionOriginOriginShield](o, func(v DistributionOriginOriginShield) bool { return v.Enabled })
}

// AWS Region for Origin Shield. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2.
func (o DistributionOriginOriginShieldOutput) OriginShieldRegion() pulumix.Output[string] {
	return pulumix.Apply[DistributionOriginOriginShield](o, func(v DistributionOriginOriginShield) string { return v.OriginShieldRegion })
}

type DistributionOriginS3OriginConfig struct {
	// The CloudFront origin access identity to associate with the origin.
	OriginAccessIdentity string `pulumi:"originAccessIdentity"`
}

type DistributionOriginS3OriginConfigArgs struct {
	// The CloudFront origin access identity to associate with the origin.
	OriginAccessIdentity pulumix.Input[string] `pulumi:"originAccessIdentity"`
}

func (DistributionOriginS3OriginConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginS3OriginConfig)(nil)).Elem()
}

func (i DistributionOriginS3OriginConfigArgs) ToDistributionOriginS3OriginConfigOutput() DistributionOriginS3OriginConfigOutput {
	return i.ToDistributionOriginS3OriginConfigOutputWithContext(context.Background())
}

func (i DistributionOriginS3OriginConfigArgs) ToDistributionOriginS3OriginConfigOutputWithContext(ctx context.Context) DistributionOriginS3OriginConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginS3OriginConfigOutput)
}

func (i *DistributionOriginS3OriginConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionOriginS3OriginConfigArgs] {
	return pulumix.Val(i)
}

type DistributionOriginS3OriginConfigOutput struct{ *pulumi.OutputState }

func (DistributionOriginS3OriginConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginS3OriginConfig)(nil)).Elem()
}

func (o DistributionOriginS3OriginConfigOutput) ToDistributionOriginS3OriginConfigOutput() DistributionOriginS3OriginConfigOutput {
	return o
}

func (o DistributionOriginS3OriginConfigOutput) ToDistributionOriginS3OriginConfigOutputWithContext(ctx context.Context) DistributionOriginS3OriginConfigOutput {
	return o
}

func (o DistributionOriginS3OriginConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionOriginS3OriginConfig] {
	return pulumix.Output[DistributionOriginS3OriginConfig]{
		OutputState: o.OutputState,
	}
}

// The CloudFront origin access identity to associate with the origin.
func (o DistributionOriginS3OriginConfigOutput) OriginAccessIdentity() pulumix.Output[string] {
	return pulumix.Apply[DistributionOriginS3OriginConfig](o, func(v DistributionOriginS3OriginConfig) string { return v.OriginAccessIdentity })
}

type DistributionRestrictions struct {
	GeoRestriction DistributionRestrictionsGeoRestriction `pulumi:"geoRestriction"`
}

type DistributionRestrictionsArgs struct {
	GeoRestriction pulumix.Input[*DistributionRestrictionsGeoRestrictionArgs] `pulumi:"geoRestriction"`
}

func (DistributionRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRestrictions)(nil)).Elem()
}

func (i DistributionRestrictionsArgs) ToDistributionRestrictionsOutput() DistributionRestrictionsOutput {
	return i.ToDistributionRestrictionsOutputWithContext(context.Background())
}

func (i DistributionRestrictionsArgs) ToDistributionRestrictionsOutputWithContext(ctx context.Context) DistributionRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRestrictionsOutput)
}

func (i *DistributionRestrictionsArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionRestrictionsArgs] {
	return pulumix.Val(i)
}

type DistributionRestrictionsOutput struct{ *pulumi.OutputState }

func (DistributionRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRestrictions)(nil)).Elem()
}

func (o DistributionRestrictionsOutput) ToDistributionRestrictionsOutput() DistributionRestrictionsOutput {
	return o
}

func (o DistributionRestrictionsOutput) ToDistributionRestrictionsOutputWithContext(ctx context.Context) DistributionRestrictionsOutput {
	return o
}

func (o DistributionRestrictionsOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionRestrictions] {
	return pulumix.Output[DistributionRestrictions]{
		OutputState: o.OutputState,
	}
}

func (o DistributionRestrictionsOutput) GeoRestriction() pulumix.GPtrOutput[DistributionRestrictionsGeoRestriction, DistributionRestrictionsGeoRestrictionOutput] {
	value := pulumix.Apply[DistributionRestrictions](o, func(v DistributionRestrictions) DistributionRestrictionsGeoRestriction { return v.GeoRestriction })
	return pulumix.GPtrOutput[DistributionRestrictionsGeoRestriction, DistributionRestrictionsGeoRestrictionOutput]{OutputState: value.OutputState}
}

type DistributionRestrictionsGeoRestriction struct {
	// [ISO 3166-1-alpha-2 codes][4] for which you want CloudFront either to distribute your content (`whitelist`) or not distribute your content (`blacklist`). If the type is specified as `none` an empty array can be used.
	Locations []string `pulumi:"locations"`
	// Method that you want to use to restrict distribution of your content by country: `none`, `whitelist`, or `blacklist`.
	RestrictionType string `pulumi:"restrictionType"`
}

type DistributionRestrictionsGeoRestrictionArgs struct {
	// [ISO 3166-1-alpha-2 codes][4] for which you want CloudFront either to distribute your content (`whitelist`) or not distribute your content (`blacklist`). If the type is specified as `none` an empty array can be used.
	Locations pulumix.Input[[]string] `pulumi:"locations"`
	// Method that you want to use to restrict distribution of your content by country: `none`, `whitelist`, or `blacklist`.
	RestrictionType pulumix.Input[string] `pulumi:"restrictionType"`
}

func (DistributionRestrictionsGeoRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRestrictionsGeoRestriction)(nil)).Elem()
}

func (i DistributionRestrictionsGeoRestrictionArgs) ToDistributionRestrictionsGeoRestrictionOutput() DistributionRestrictionsGeoRestrictionOutput {
	return i.ToDistributionRestrictionsGeoRestrictionOutputWithContext(context.Background())
}

func (i DistributionRestrictionsGeoRestrictionArgs) ToDistributionRestrictionsGeoRestrictionOutputWithContext(ctx context.Context) DistributionRestrictionsGeoRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRestrictionsGeoRestrictionOutput)
}

func (i *DistributionRestrictionsGeoRestrictionArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionRestrictionsGeoRestrictionArgs] {
	return pulumix.Val(i)
}

type DistributionRestrictionsGeoRestrictionOutput struct{ *pulumi.OutputState }

func (DistributionRestrictionsGeoRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRestrictionsGeoRestriction)(nil)).Elem()
}

func (o DistributionRestrictionsGeoRestrictionOutput) ToDistributionRestrictionsGeoRestrictionOutput() DistributionRestrictionsGeoRestrictionOutput {
	return o
}

func (o DistributionRestrictionsGeoRestrictionOutput) ToDistributionRestrictionsGeoRestrictionOutputWithContext(ctx context.Context) DistributionRestrictionsGeoRestrictionOutput {
	return o
}

func (o DistributionRestrictionsGeoRestrictionOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionRestrictionsGeoRestriction] {
	return pulumix.Output[DistributionRestrictionsGeoRestriction]{
		OutputState: o.OutputState,
	}
}

// [ISO 3166-1-alpha-2 codes][4] for which you want CloudFront either to distribute your content (`whitelist`) or not distribute your content (`blacklist`). If the type is specified as `none` an empty array can be used.
func (o DistributionRestrictionsGeoRestrictionOutput) Locations() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionRestrictionsGeoRestriction](o, func(v DistributionRestrictionsGeoRestriction) []string { return v.Locations })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Method that you want to use to restrict distribution of your content by country: `none`, `whitelist`, or `blacklist`.
func (o DistributionRestrictionsGeoRestrictionOutput) RestrictionType() pulumix.Output[string] {
	return pulumix.Apply[DistributionRestrictionsGeoRestriction](o, func(v DistributionRestrictionsGeoRestriction) string { return v.RestrictionType })
}

type DistributionTrustedKeyGroup struct {
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled *bool `pulumi:"enabled"`
	// List of nested attributes for each trusted signer
	Items []DistributionTrustedKeyGroupItem `pulumi:"items"`
}

type DistributionTrustedKeyGroupArgs struct {
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// List of nested attributes for each trusted signer
	Items pulumix.Input[[]*DistributionTrustedKeyGroupItemArgs] `pulumi:"items"`
}

func (DistributionTrustedKeyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionTrustedKeyGroup)(nil)).Elem()
}

func (i DistributionTrustedKeyGroupArgs) ToDistributionTrustedKeyGroupOutput() DistributionTrustedKeyGroupOutput {
	return i.ToDistributionTrustedKeyGroupOutputWithContext(context.Background())
}

func (i DistributionTrustedKeyGroupArgs) ToDistributionTrustedKeyGroupOutputWithContext(ctx context.Context) DistributionTrustedKeyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionTrustedKeyGroupOutput)
}

func (i *DistributionTrustedKeyGroupArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionTrustedKeyGroupArgs] {
	return pulumix.Val(i)
}

type DistributionTrustedKeyGroupOutput struct{ *pulumi.OutputState }

func (DistributionTrustedKeyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionTrustedKeyGroup)(nil)).Elem()
}

func (o DistributionTrustedKeyGroupOutput) ToDistributionTrustedKeyGroupOutput() DistributionTrustedKeyGroupOutput {
	return o
}

func (o DistributionTrustedKeyGroupOutput) ToDistributionTrustedKeyGroupOutputWithContext(ctx context.Context) DistributionTrustedKeyGroupOutput {
	return o
}

func (o DistributionTrustedKeyGroupOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionTrustedKeyGroup] {
	return pulumix.Output[DistributionTrustedKeyGroup]{
		OutputState: o.OutputState,
	}
}

// Whether the distribution is enabled to accept end user requests for content.
func (o DistributionTrustedKeyGroupOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionTrustedKeyGroup](o, func(v DistributionTrustedKeyGroup) *bool { return v.Enabled })
}

// List of nested attributes for each trusted signer
func (o DistributionTrustedKeyGroupOutput) Items() pulumix.GArrayOutput[DistributionTrustedKeyGroupItem, DistributionTrustedKeyGroupItemOutput] {
	value := pulumix.Apply[DistributionTrustedKeyGroup](o, func(v DistributionTrustedKeyGroup) []DistributionTrustedKeyGroupItem { return v.Items })
	return pulumix.GArrayOutput[DistributionTrustedKeyGroupItem, DistributionTrustedKeyGroupItemOutput]{OutputState: value.OutputState}
}

type DistributionTrustedKeyGroupItem struct {
	// ID of the key group that contains the public keys.
	KeyGroupId *string `pulumi:"keyGroupId"`
	// Set of active CloudFront key pairs associated with the signer account
	KeyPairIds []string `pulumi:"keyPairIds"`
}

type DistributionTrustedKeyGroupItemArgs struct {
	// ID of the key group that contains the public keys.
	KeyGroupId pulumix.Input[*string] `pulumi:"keyGroupId"`
	// Set of active CloudFront key pairs associated with the signer account
	KeyPairIds pulumix.Input[[]string] `pulumi:"keyPairIds"`
}

func (DistributionTrustedKeyGroupItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionTrustedKeyGroupItem)(nil)).Elem()
}

func (i DistributionTrustedKeyGroupItemArgs) ToDistributionTrustedKeyGroupItemOutput() DistributionTrustedKeyGroupItemOutput {
	return i.ToDistributionTrustedKeyGroupItemOutputWithContext(context.Background())
}

func (i DistributionTrustedKeyGroupItemArgs) ToDistributionTrustedKeyGroupItemOutputWithContext(ctx context.Context) DistributionTrustedKeyGroupItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionTrustedKeyGroupItemOutput)
}

func (i *DistributionTrustedKeyGroupItemArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionTrustedKeyGroupItemArgs] {
	return pulumix.Val(i)
}

type DistributionTrustedKeyGroupItemOutput struct{ *pulumi.OutputState }

func (DistributionTrustedKeyGroupItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionTrustedKeyGroupItem)(nil)).Elem()
}

func (o DistributionTrustedKeyGroupItemOutput) ToDistributionTrustedKeyGroupItemOutput() DistributionTrustedKeyGroupItemOutput {
	return o
}

func (o DistributionTrustedKeyGroupItemOutput) ToDistributionTrustedKeyGroupItemOutputWithContext(ctx context.Context) DistributionTrustedKeyGroupItemOutput {
	return o
}

func (o DistributionTrustedKeyGroupItemOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionTrustedKeyGroupItem] {
	return pulumix.Output[DistributionTrustedKeyGroupItem]{
		OutputState: o.OutputState,
	}
}

// ID of the key group that contains the public keys.
func (o DistributionTrustedKeyGroupItemOutput) KeyGroupId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionTrustedKeyGroupItem](o, func(v DistributionTrustedKeyGroupItem) *string { return v.KeyGroupId })
}

// Set of active CloudFront key pairs associated with the signer account
func (o DistributionTrustedKeyGroupItemOutput) KeyPairIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionTrustedKeyGroupItem](o, func(v DistributionTrustedKeyGroupItem) []string { return v.KeyPairIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DistributionTrustedSigner struct {
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled *bool `pulumi:"enabled"`
	// List of nested attributes for each trusted signer
	Items []DistributionTrustedSignerItem `pulumi:"items"`
}

type DistributionTrustedSignerArgs struct {
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// List of nested attributes for each trusted signer
	Items pulumix.Input[[]*DistributionTrustedSignerItemArgs] `pulumi:"items"`
}

func (DistributionTrustedSignerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionTrustedSigner)(nil)).Elem()
}

func (i DistributionTrustedSignerArgs) ToDistributionTrustedSignerOutput() DistributionTrustedSignerOutput {
	return i.ToDistributionTrustedSignerOutputWithContext(context.Background())
}

func (i DistributionTrustedSignerArgs) ToDistributionTrustedSignerOutputWithContext(ctx context.Context) DistributionTrustedSignerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionTrustedSignerOutput)
}

func (i *DistributionTrustedSignerArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionTrustedSignerArgs] {
	return pulumix.Val(i)
}

type DistributionTrustedSignerOutput struct{ *pulumi.OutputState }

func (DistributionTrustedSignerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionTrustedSigner)(nil)).Elem()
}

func (o DistributionTrustedSignerOutput) ToDistributionTrustedSignerOutput() DistributionTrustedSignerOutput {
	return o
}

func (o DistributionTrustedSignerOutput) ToDistributionTrustedSignerOutputWithContext(ctx context.Context) DistributionTrustedSignerOutput {
	return o
}

func (o DistributionTrustedSignerOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionTrustedSigner] {
	return pulumix.Output[DistributionTrustedSigner]{
		OutputState: o.OutputState,
	}
}

// Whether the distribution is enabled to accept end user requests for content.
func (o DistributionTrustedSignerOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionTrustedSigner](o, func(v DistributionTrustedSigner) *bool { return v.Enabled })
}

// List of nested attributes for each trusted signer
func (o DistributionTrustedSignerOutput) Items() pulumix.GArrayOutput[DistributionTrustedSignerItem, DistributionTrustedSignerItemOutput] {
	value := pulumix.Apply[DistributionTrustedSigner](o, func(v DistributionTrustedSigner) []DistributionTrustedSignerItem { return v.Items })
	return pulumix.GArrayOutput[DistributionTrustedSignerItem, DistributionTrustedSignerItemOutput]{OutputState: value.OutputState}
}

type DistributionTrustedSignerItem struct {
	// AWS account ID or `self`
	AwsAccountNumber *string `pulumi:"awsAccountNumber"`
	// Set of active CloudFront key pairs associated with the signer account
	KeyPairIds []string `pulumi:"keyPairIds"`
}

type DistributionTrustedSignerItemArgs struct {
	// AWS account ID or `self`
	AwsAccountNumber pulumix.Input[*string] `pulumi:"awsAccountNumber"`
	// Set of active CloudFront key pairs associated with the signer account
	KeyPairIds pulumix.Input[[]string] `pulumi:"keyPairIds"`
}

func (DistributionTrustedSignerItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionTrustedSignerItem)(nil)).Elem()
}

func (i DistributionTrustedSignerItemArgs) ToDistributionTrustedSignerItemOutput() DistributionTrustedSignerItemOutput {
	return i.ToDistributionTrustedSignerItemOutputWithContext(context.Background())
}

func (i DistributionTrustedSignerItemArgs) ToDistributionTrustedSignerItemOutputWithContext(ctx context.Context) DistributionTrustedSignerItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionTrustedSignerItemOutput)
}

func (i *DistributionTrustedSignerItemArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionTrustedSignerItemArgs] {
	return pulumix.Val(i)
}

type DistributionTrustedSignerItemOutput struct{ *pulumi.OutputState }

func (DistributionTrustedSignerItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionTrustedSignerItem)(nil)).Elem()
}

func (o DistributionTrustedSignerItemOutput) ToDistributionTrustedSignerItemOutput() DistributionTrustedSignerItemOutput {
	return o
}

func (o DistributionTrustedSignerItemOutput) ToDistributionTrustedSignerItemOutputWithContext(ctx context.Context) DistributionTrustedSignerItemOutput {
	return o
}

func (o DistributionTrustedSignerItemOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionTrustedSignerItem] {
	return pulumix.Output[DistributionTrustedSignerItem]{
		OutputState: o.OutputState,
	}
}

// AWS account ID or `self`
func (o DistributionTrustedSignerItemOutput) AwsAccountNumber() pulumix.Output[*string] {
	return pulumix.Apply[DistributionTrustedSignerItem](o, func(v DistributionTrustedSignerItem) *string { return v.AwsAccountNumber })
}

// Set of active CloudFront key pairs associated with the signer account
func (o DistributionTrustedSignerItemOutput) KeyPairIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DistributionTrustedSignerItem](o, func(v DistributionTrustedSignerItem) []string { return v.KeyPairIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type DistributionViewerCertificate struct {
	// ARN of the [AWS Certificate Manager](https://aws.amazon.com/certificate-manager/) certificate that you wish to use with this distribution. Specify this, `cloudfrontDefaultCertificate`, or `iamCertificateId`.  The ACM certificate must be in  US-EAST-1.
	AcmCertificateArn *string `pulumi:"acmCertificateArn"`
	// `true` if you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution. Specify this, `acmCertificateArn`, or `iamCertificateId`.
	CloudfrontDefaultCertificate *bool `pulumi:"cloudfrontDefaultCertificate"`
	// IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain. Specify this, `acmCertificateArn`, or `cloudfrontDefaultCertificate`.
	IamCertificateId *string `pulumi:"iamCertificateId"`
	// Minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if `cloudfrontDefaultCertificate = false`. See all possible values in [this](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html) table under "Security policy." Some examples include: `TLSv1.2_2019` and `TLSv1.2_2021`. Default: `TLSv1`. **NOTE**: If you are using a custom certificate (specified with `acmCertificateArn` or `iamCertificateId`), and have specified `sni-only` in `sslSupportMethod`, `TLSv1` or later must be specified. If you have specified `vip` in `sslSupportMethod`, only `SSLv3` or `TLSv1` can be specified. If you have specified `cloudfrontDefaultCertificate`, `TLSv1` must be specified.
	MinimumProtocolVersion *string `pulumi:"minimumProtocolVersion"`
	// How you want CloudFront to serve HTTPS requests. One of `vip` or `sni-only`. Required if you specify `acmCertificateArn` or `iamCertificateId`. **NOTE:** `vip` causes CloudFront to use a dedicated IP address and may incur extra charges.
	SslSupportMethod *string `pulumi:"sslSupportMethod"`
}

type DistributionViewerCertificateArgs struct {
	// ARN of the [AWS Certificate Manager](https://aws.amazon.com/certificate-manager/) certificate that you wish to use with this distribution. Specify this, `cloudfrontDefaultCertificate`, or `iamCertificateId`.  The ACM certificate must be in  US-EAST-1.
	AcmCertificateArn pulumix.Input[*string] `pulumi:"acmCertificateArn"`
	// `true` if you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution. Specify this, `acmCertificateArn`, or `iamCertificateId`.
	CloudfrontDefaultCertificate pulumix.Input[*bool] `pulumi:"cloudfrontDefaultCertificate"`
	// IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain. Specify this, `acmCertificateArn`, or `cloudfrontDefaultCertificate`.
	IamCertificateId pulumix.Input[*string] `pulumi:"iamCertificateId"`
	// Minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if `cloudfrontDefaultCertificate = false`. See all possible values in [this](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html) table under "Security policy." Some examples include: `TLSv1.2_2019` and `TLSv1.2_2021`. Default: `TLSv1`. **NOTE**: If you are using a custom certificate (specified with `acmCertificateArn` or `iamCertificateId`), and have specified `sni-only` in `sslSupportMethod`, `TLSv1` or later must be specified. If you have specified `vip` in `sslSupportMethod`, only `SSLv3` or `TLSv1` can be specified. If you have specified `cloudfrontDefaultCertificate`, `TLSv1` must be specified.
	MinimumProtocolVersion pulumix.Input[*string] `pulumi:"minimumProtocolVersion"`
	// How you want CloudFront to serve HTTPS requests. One of `vip` or `sni-only`. Required if you specify `acmCertificateArn` or `iamCertificateId`. **NOTE:** `vip` causes CloudFront to use a dedicated IP address and may incur extra charges.
	SslSupportMethod pulumix.Input[*string] `pulumi:"sslSupportMethod"`
}

func (DistributionViewerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionViewerCertificate)(nil)).Elem()
}

func (i DistributionViewerCertificateArgs) ToDistributionViewerCertificateOutput() DistributionViewerCertificateOutput {
	return i.ToDistributionViewerCertificateOutputWithContext(context.Background())
}

func (i DistributionViewerCertificateArgs) ToDistributionViewerCertificateOutputWithContext(ctx context.Context) DistributionViewerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionViewerCertificateOutput)
}

func (i *DistributionViewerCertificateArgs) ToOutput(ctx context.Context) pulumix.Output[*DistributionViewerCertificateArgs] {
	return pulumix.Val(i)
}

type DistributionViewerCertificateOutput struct{ *pulumi.OutputState }

func (DistributionViewerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionViewerCertificate)(nil)).Elem()
}

func (o DistributionViewerCertificateOutput) ToDistributionViewerCertificateOutput() DistributionViewerCertificateOutput {
	return o
}

func (o DistributionViewerCertificateOutput) ToDistributionViewerCertificateOutputWithContext(ctx context.Context) DistributionViewerCertificateOutput {
	return o
}

func (o DistributionViewerCertificateOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionViewerCertificate] {
	return pulumix.Output[DistributionViewerCertificate]{
		OutputState: o.OutputState,
	}
}

// ARN of the [AWS Certificate Manager](https://aws.amazon.com/certificate-manager/) certificate that you wish to use with this distribution. Specify this, `cloudfrontDefaultCertificate`, or `iamCertificateId`.  The ACM certificate must be in  US-EAST-1.
func (o DistributionViewerCertificateOutput) AcmCertificateArn() pulumix.Output[*string] {
	return pulumix.Apply[DistributionViewerCertificate](o, func(v DistributionViewerCertificate) *string { return v.AcmCertificateArn })
}

// `true` if you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution. Specify this, `acmCertificateArn`, or `iamCertificateId`.
func (o DistributionViewerCertificateOutput) CloudfrontDefaultCertificate() pulumix.Output[*bool] {
	return pulumix.Apply[DistributionViewerCertificate](o, func(v DistributionViewerCertificate) *bool { return v.CloudfrontDefaultCertificate })
}

// IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain. Specify this, `acmCertificateArn`, or `cloudfrontDefaultCertificate`.
func (o DistributionViewerCertificateOutput) IamCertificateId() pulumix.Output[*string] {
	return pulumix.Apply[DistributionViewerCertificate](o, func(v DistributionViewerCertificate) *string { return v.IamCertificateId })
}

// Minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if `cloudfrontDefaultCertificate = false`. See all possible values in [this](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html) table under "Security policy." Some examples include: `TLSv1.2_2019` and `TLSv1.2_2021`. Default: `TLSv1`. **NOTE**: If you are using a custom certificate (specified with `acmCertificateArn` or `iamCertificateId`), and have specified `sni-only` in `sslSupportMethod`, `TLSv1` or later must be specified. If you have specified `vip` in `sslSupportMethod`, only `SSLv3` or `TLSv1` can be specified. If you have specified `cloudfrontDefaultCertificate`, `TLSv1` must be specified.
func (o DistributionViewerCertificateOutput) MinimumProtocolVersion() pulumix.Output[*string] {
	return pulumix.Apply[DistributionViewerCertificate](o, func(v DistributionViewerCertificate) *string { return v.MinimumProtocolVersion })
}

// How you want CloudFront to serve HTTPS requests. One of `vip` or `sni-only`. Required if you specify `acmCertificateArn` or `iamCertificateId`. **NOTE:** `vip` causes CloudFront to use a dedicated IP address and may incur extra charges.
func (o DistributionViewerCertificateOutput) SslSupportMethod() pulumix.Output[*string] {
	return pulumix.Apply[DistributionViewerCertificate](o, func(v DistributionViewerCertificate) *string { return v.SslSupportMethod })
}

type FieldLevelEncryptionConfigContentTypeProfileConfig struct {
	// Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
	ContentTypeProfiles FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles `pulumi:"contentTypeProfiles"`
	// specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
	ForwardWhenContentTypeIsUnknown bool `pulumi:"forwardWhenContentTypeIsUnknown"`
}

type FieldLevelEncryptionConfigContentTypeProfileConfigArgs struct {
	// Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
	ContentTypeProfiles pulumix.Input[*FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs] `pulumi:"contentTypeProfiles"`
	// specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
	ForwardWhenContentTypeIsUnknown pulumix.Input[bool] `pulumi:"forwardWhenContentTypeIsUnknown"`
}

func (FieldLevelEncryptionConfigContentTypeProfileConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigContentTypeProfileConfig)(nil)).Elem()
}

func (i FieldLevelEncryptionConfigContentTypeProfileConfigArgs) ToFieldLevelEncryptionConfigContentTypeProfileConfigOutput() FieldLevelEncryptionConfigContentTypeProfileConfigOutput {
	return i.ToFieldLevelEncryptionConfigContentTypeProfileConfigOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionConfigContentTypeProfileConfigArgs) ToFieldLevelEncryptionConfigContentTypeProfileConfigOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigContentTypeProfileConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionConfigContentTypeProfileConfigOutput)
}

func (i *FieldLevelEncryptionConfigContentTypeProfileConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FieldLevelEncryptionConfigContentTypeProfileConfigArgs] {
	return pulumix.Val(i)
}

type FieldLevelEncryptionConfigContentTypeProfileConfigOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionConfigContentTypeProfileConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigContentTypeProfileConfig)(nil)).Elem()
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigOutput) ToFieldLevelEncryptionConfigContentTypeProfileConfigOutput() FieldLevelEncryptionConfigContentTypeProfileConfigOutput {
	return o
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigOutput) ToFieldLevelEncryptionConfigContentTypeProfileConfigOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigContentTypeProfileConfigOutput {
	return o
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FieldLevelEncryptionConfigContentTypeProfileConfig] {
	return pulumix.Output[FieldLevelEncryptionConfigContentTypeProfileConfig]{
		OutputState: o.OutputState,
	}
}

// Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.
func (o FieldLevelEncryptionConfigContentTypeProfileConfigOutput) ContentTypeProfiles() pulumix.GPtrOutput[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles, FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput] {
	value := pulumix.Apply[FieldLevelEncryptionConfigContentTypeProfileConfig](o, func(v FieldLevelEncryptionConfigContentTypeProfileConfig) FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {
		return v.ContentTypeProfiles
	})
	return pulumix.GPtrOutput[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles, FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput]{OutputState: value.OutputState}
}

// specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
func (o FieldLevelEncryptionConfigContentTypeProfileConfigOutput) ForwardWhenContentTypeIsUnknown() pulumix.Output[bool] {
	return pulumix.Apply[FieldLevelEncryptionConfigContentTypeProfileConfig](o, func(v FieldLevelEncryptionConfigContentTypeProfileConfig) bool {
		return v.ForwardWhenContentTypeIsUnknown
	})
}

type FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles struct {
	Items []FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem `pulumi:"items"`
}

type FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs struct {
	Items pulumix.Input[[]*FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemArgs] `pulumi:"items"`
}

func (FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles)(nil)).Elem()
}

func (i FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs) ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput() FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput {
	return i.ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs) ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput)
}

func (i *FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs) ToOutput(ctx context.Context) pulumix.Output[*FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs] {
	return pulumix.Val(i)
}

type FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles)(nil)).Elem()
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput) ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput() FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput {
	return o
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput) ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput {
	return o
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput) ToOutput(ctx context.Context) pulumix.Output[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles] {
	return pulumix.Output[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles]{
		OutputState: o.OutputState,
	}
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput) Items() pulumix.GArrayOutput[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem, FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput] {
	value := pulumix.Apply[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles](o, func(v FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles) []FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem {
		return v.Items
	})
	return pulumix.GArrayOutput[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem, FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput]{OutputState: value.OutputState}
}

type FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem struct {
	// he content type for a field-level encryption content type-profile mapping. Valid value is `application/x-www-form-urlencoded`.
	ContentType string `pulumi:"contentType"`
	// The format for a field-level encryption content type-profile mapping. Valid value is `URLEncoded`.
	Format string `pulumi:"format"`
	// The profile ID for a field-level encryption content type-profile mapping.
	ProfileId *string `pulumi:"profileId"`
}

type FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemArgs struct {
	// he content type for a field-level encryption content type-profile mapping. Valid value is `application/x-www-form-urlencoded`.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// The format for a field-level encryption content type-profile mapping. Valid value is `URLEncoded`.
	Format pulumix.Input[string] `pulumi:"format"`
	// The profile ID for a field-level encryption content type-profile mapping.
	ProfileId pulumix.Input[*string] `pulumi:"profileId"`
}

func (FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem)(nil)).Elem()
}

func (i FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemArgs) ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput() FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput {
	return i.ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemArgs) ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput)
}

func (i *FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemArgs) ToOutput(ctx context.Context) pulumix.Output[*FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemArgs] {
	return pulumix.Val(i)
}

type FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem)(nil)).Elem()
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput) ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput() FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput {
	return o
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput) ToFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput {
	return o
}

func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput) ToOutput(ctx context.Context) pulumix.Output[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem] {
	return pulumix.Output[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem]{
		OutputState: o.OutputState,
	}
}

// he content type for a field-level encryption content type-profile mapping. Valid value is `application/x-www-form-urlencoded`.
func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem](o, func(v FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem) string {
		return v.ContentType
	})
}

// The format for a field-level encryption content type-profile mapping. Valid value is `URLEncoded`.
func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput) Format() pulumix.Output[string] {
	return pulumix.Apply[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem](o, func(v FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem) string {
		return v.Format
	})
}

// The profile ID for a field-level encryption content type-profile mapping.
func (o FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput) ProfileId() pulumix.Output[*string] {
	return pulumix.Apply[FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem](o, func(v FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItem) *string {
		return v.ProfileId
	})
}

type FieldLevelEncryptionConfigQueryArgProfileConfig struct {
	// Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
	ForwardWhenQueryArgProfileIsUnknown bool `pulumi:"forwardWhenQueryArgProfileIsUnknown"`
	// Object that contains an attribute `items` that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.
	QueryArgProfiles *FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles `pulumi:"queryArgProfiles"`
}

type FieldLevelEncryptionConfigQueryArgProfileConfigArgs struct {
	// Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
	ForwardWhenQueryArgProfileIsUnknown pulumix.Input[bool] `pulumi:"forwardWhenQueryArgProfileIsUnknown"`
	// Object that contains an attribute `items` that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.
	QueryArgProfiles pulumix.Input[*FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesArgs] `pulumi:"queryArgProfiles"`
}

func (FieldLevelEncryptionConfigQueryArgProfileConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigQueryArgProfileConfig)(nil)).Elem()
}

func (i FieldLevelEncryptionConfigQueryArgProfileConfigArgs) ToFieldLevelEncryptionConfigQueryArgProfileConfigOutput() FieldLevelEncryptionConfigQueryArgProfileConfigOutput {
	return i.ToFieldLevelEncryptionConfigQueryArgProfileConfigOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionConfigQueryArgProfileConfigArgs) ToFieldLevelEncryptionConfigQueryArgProfileConfigOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigQueryArgProfileConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionConfigQueryArgProfileConfigOutput)
}

func (i *FieldLevelEncryptionConfigQueryArgProfileConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*FieldLevelEncryptionConfigQueryArgProfileConfigArgs] {
	return pulumix.Val(i)
}

type FieldLevelEncryptionConfigQueryArgProfileConfigOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionConfigQueryArgProfileConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigQueryArgProfileConfig)(nil)).Elem()
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigOutput) ToFieldLevelEncryptionConfigQueryArgProfileConfigOutput() FieldLevelEncryptionConfigQueryArgProfileConfigOutput {
	return o
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigOutput) ToFieldLevelEncryptionConfigQueryArgProfileConfigOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigQueryArgProfileConfigOutput {
	return o
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FieldLevelEncryptionConfigQueryArgProfileConfig] {
	return pulumix.Output[FieldLevelEncryptionConfigQueryArgProfileConfig]{
		OutputState: o.OutputState,
	}
}

// Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
func (o FieldLevelEncryptionConfigQueryArgProfileConfigOutput) ForwardWhenQueryArgProfileIsUnknown() pulumix.Output[bool] {
	return pulumix.Apply[FieldLevelEncryptionConfigQueryArgProfileConfig](o, func(v FieldLevelEncryptionConfigQueryArgProfileConfig) bool {
		return v.ForwardWhenQueryArgProfileIsUnknown
	})
}

// Object that contains an attribute `items` that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.
func (o FieldLevelEncryptionConfigQueryArgProfileConfigOutput) QueryArgProfiles() pulumix.GPtrOutput[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles, FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput] {
	value := pulumix.Apply[FieldLevelEncryptionConfigQueryArgProfileConfig](o, func(v FieldLevelEncryptionConfigQueryArgProfileConfig) *FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {
		return v.QueryArgProfiles
	})
	return pulumix.GPtrOutput[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles, FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput]{OutputState: value.OutputState}
}

type FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles struct {
	Items []FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem `pulumi:"items"`
}

type FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesArgs struct {
	Items pulumix.Input[[]*FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemArgs] `pulumi:"items"`
}

func (FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles)(nil)).Elem()
}

func (i FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesArgs) ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput() FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput {
	return i.ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesArgs) ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput)
}

func (i *FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesArgs) ToOutput(ctx context.Context) pulumix.Output[*FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesArgs] {
	return pulumix.Val(i)
}

type FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles)(nil)).Elem()
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput) ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput() FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput {
	return o
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput) ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput {
	return o
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput) ToOutput(ctx context.Context) pulumix.Output[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles] {
	return pulumix.Output[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles]{
		OutputState: o.OutputState,
	}
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput) Items() pulumix.GArrayOutput[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem, FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput] {
	value := pulumix.Apply[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles](o, func(v FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles) []FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem {
		return v.Items
	})
	return pulumix.GArrayOutput[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem, FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput]{OutputState: value.OutputState}
}

type FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem struct {
	// The profile ID for a field-level encryption content type-profile mapping.
	ProfileId string `pulumi:"profileId"`
	// Query argument for field-level encryption query argument-profile mapping.
	QueryArg string `pulumi:"queryArg"`
}

type FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemArgs struct {
	// The profile ID for a field-level encryption content type-profile mapping.
	ProfileId pulumix.Input[string] `pulumi:"profileId"`
	// Query argument for field-level encryption query argument-profile mapping.
	QueryArg pulumix.Input[string] `pulumi:"queryArg"`
}

func (FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem)(nil)).Elem()
}

func (i FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemArgs) ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput() FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput {
	return i.ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemArgs) ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput)
}

func (i *FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemArgs) ToOutput(ctx context.Context) pulumix.Output[*FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemArgs] {
	return pulumix.Val(i)
}

type FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem)(nil)).Elem()
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput) ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput() FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput {
	return o
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput) ToFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutputWithContext(ctx context.Context) FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput {
	return o
}

func (o FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput) ToOutput(ctx context.Context) pulumix.Output[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem] {
	return pulumix.Output[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem]{
		OutputState: o.OutputState,
	}
}

// The profile ID for a field-level encryption content type-profile mapping.
func (o FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput) ProfileId() pulumix.Output[string] {
	return pulumix.Apply[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem](o, func(v FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem) string { return v.ProfileId })
}

// Query argument for field-level encryption query argument-profile mapping.
func (o FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput) QueryArg() pulumix.Output[string] {
	return pulumix.Apply[FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem](o, func(v FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItem) string { return v.QueryArg })
}

type FieldLevelEncryptionProfileEncryptionEntities struct {
	Items []FieldLevelEncryptionProfileEncryptionEntitiesItem `pulumi:"items"`
}

type FieldLevelEncryptionProfileEncryptionEntitiesArgs struct {
	Items pulumix.Input[[]*FieldLevelEncryptionProfileEncryptionEntitiesItemArgs] `pulumi:"items"`
}

func (FieldLevelEncryptionProfileEncryptionEntitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionProfileEncryptionEntities)(nil)).Elem()
}

func (i FieldLevelEncryptionProfileEncryptionEntitiesArgs) ToFieldLevelEncryptionProfileEncryptionEntitiesOutput() FieldLevelEncryptionProfileEncryptionEntitiesOutput {
	return i.ToFieldLevelEncryptionProfileEncryptionEntitiesOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionProfileEncryptionEntitiesArgs) ToFieldLevelEncryptionProfileEncryptionEntitiesOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileEncryptionEntitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionProfileEncryptionEntitiesOutput)
}

func (i *FieldLevelEncryptionProfileEncryptionEntitiesArgs) ToOutput(ctx context.Context) pulumix.Output[*FieldLevelEncryptionProfileEncryptionEntitiesArgs] {
	return pulumix.Val(i)
}

type FieldLevelEncryptionProfileEncryptionEntitiesOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionProfileEncryptionEntitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionProfileEncryptionEntities)(nil)).Elem()
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesOutput) ToFieldLevelEncryptionProfileEncryptionEntitiesOutput() FieldLevelEncryptionProfileEncryptionEntitiesOutput {
	return o
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesOutput) ToFieldLevelEncryptionProfileEncryptionEntitiesOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileEncryptionEntitiesOutput {
	return o
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesOutput) ToOutput(ctx context.Context) pulumix.Output[FieldLevelEncryptionProfileEncryptionEntities] {
	return pulumix.Output[FieldLevelEncryptionProfileEncryptionEntities]{
		OutputState: o.OutputState,
	}
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesOutput) Items() pulumix.GArrayOutput[FieldLevelEncryptionProfileEncryptionEntitiesItem, FieldLevelEncryptionProfileEncryptionEntitiesItemOutput] {
	value := pulumix.Apply[FieldLevelEncryptionProfileEncryptionEntities](o, func(v FieldLevelEncryptionProfileEncryptionEntities) []FieldLevelEncryptionProfileEncryptionEntitiesItem {
		return v.Items
	})
	return pulumix.GArrayOutput[FieldLevelEncryptionProfileEncryptionEntitiesItem, FieldLevelEncryptionProfileEncryptionEntitiesItemOutput]{OutputState: value.OutputState}
}

type FieldLevelEncryptionProfileEncryptionEntitiesItem struct {
	// Object that contains an attribute `items` that contains the list of field patterns in a field-level encryption content type profile specify the fields that you want to be encrypted.
	FieldPatterns FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns `pulumi:"fieldPatterns"`
	// The provider associated with the public key being used for encryption.
	ProviderId string `pulumi:"providerId"`
	// The public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.
	PublicKeyId string `pulumi:"publicKeyId"`
}

type FieldLevelEncryptionProfileEncryptionEntitiesItemArgs struct {
	// Object that contains an attribute `items` that contains the list of field patterns in a field-level encryption content type profile specify the fields that you want to be encrypted.
	FieldPatterns pulumix.Input[*FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsArgs] `pulumi:"fieldPatterns"`
	// The provider associated with the public key being used for encryption.
	ProviderId pulumix.Input[string] `pulumi:"providerId"`
	// The public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.
	PublicKeyId pulumix.Input[string] `pulumi:"publicKeyId"`
}

func (FieldLevelEncryptionProfileEncryptionEntitiesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionProfileEncryptionEntitiesItem)(nil)).Elem()
}

func (i FieldLevelEncryptionProfileEncryptionEntitiesItemArgs) ToFieldLevelEncryptionProfileEncryptionEntitiesItemOutput() FieldLevelEncryptionProfileEncryptionEntitiesItemOutput {
	return i.ToFieldLevelEncryptionProfileEncryptionEntitiesItemOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionProfileEncryptionEntitiesItemArgs) ToFieldLevelEncryptionProfileEncryptionEntitiesItemOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileEncryptionEntitiesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionProfileEncryptionEntitiesItemOutput)
}

func (i *FieldLevelEncryptionProfileEncryptionEntitiesItemArgs) ToOutput(ctx context.Context) pulumix.Output[*FieldLevelEncryptionProfileEncryptionEntitiesItemArgs] {
	return pulumix.Val(i)
}

type FieldLevelEncryptionProfileEncryptionEntitiesItemOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionProfileEncryptionEntitiesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionProfileEncryptionEntitiesItem)(nil)).Elem()
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesItemOutput) ToFieldLevelEncryptionProfileEncryptionEntitiesItemOutput() FieldLevelEncryptionProfileEncryptionEntitiesItemOutput {
	return o
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesItemOutput) ToFieldLevelEncryptionProfileEncryptionEntitiesItemOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileEncryptionEntitiesItemOutput {
	return o
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesItemOutput) ToOutput(ctx context.Context) pulumix.Output[FieldLevelEncryptionProfileEncryptionEntitiesItem] {
	return pulumix.Output[FieldLevelEncryptionProfileEncryptionEntitiesItem]{
		OutputState: o.OutputState,
	}
}

// Object that contains an attribute `items` that contains the list of field patterns in a field-level encryption content type profile specify the fields that you want to be encrypted.
func (o FieldLevelEncryptionProfileEncryptionEntitiesItemOutput) FieldPatterns() pulumix.GPtrOutput[FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns, FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput] {
	value := pulumix.Apply[FieldLevelEncryptionProfileEncryptionEntitiesItem](o, func(v FieldLevelEncryptionProfileEncryptionEntitiesItem) FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns {
		return v.FieldPatterns
	})
	return pulumix.GPtrOutput[FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns, FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput]{OutputState: value.OutputState}
}

// The provider associated with the public key being used for encryption.
func (o FieldLevelEncryptionProfileEncryptionEntitiesItemOutput) ProviderId() pulumix.Output[string] {
	return pulumix.Apply[FieldLevelEncryptionProfileEncryptionEntitiesItem](o, func(v FieldLevelEncryptionProfileEncryptionEntitiesItem) string { return v.ProviderId })
}

// The public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.
func (o FieldLevelEncryptionProfileEncryptionEntitiesItemOutput) PublicKeyId() pulumix.Output[string] {
	return pulumix.Apply[FieldLevelEncryptionProfileEncryptionEntitiesItem](o, func(v FieldLevelEncryptionProfileEncryptionEntitiesItem) string { return v.PublicKeyId })
}

type FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns struct {
	Items []string `pulumi:"items"`
}

type FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns)(nil)).Elem()
}

func (i FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsArgs) ToFieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput() FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput {
	return i.ToFieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsArgs) ToFieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput)
}

func (i *FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsArgs) ToOutput(ctx context.Context) pulumix.Output[*FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsArgs] {
	return pulumix.Val(i)
}

type FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns)(nil)).Elem()
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput) ToFieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput() FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput {
	return o
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput) ToFieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput {
	return o
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput) ToOutput(ctx context.Context) pulumix.Output[FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns] {
	return pulumix.Output[FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns]{
		OutputState: o.OutputState,
	}
}

func (o FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns](o, func(v FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatterns) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type MonitoringSubscriptionMonitoringSubscription struct {
	// A subscription configuration for additional CloudWatch metrics. See below.
	RealtimeMetricsSubscriptionConfig MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig `pulumi:"realtimeMetricsSubscriptionConfig"`
}

type MonitoringSubscriptionMonitoringSubscriptionArgs struct {
	// A subscription configuration for additional CloudWatch metrics. See below.
	RealtimeMetricsSubscriptionConfig pulumix.Input[*MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs] `pulumi:"realtimeMetricsSubscriptionConfig"`
}

func (MonitoringSubscriptionMonitoringSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSubscriptionMonitoringSubscription)(nil)).Elem()
}

func (i MonitoringSubscriptionMonitoringSubscriptionArgs) ToMonitoringSubscriptionMonitoringSubscriptionOutput() MonitoringSubscriptionMonitoringSubscriptionOutput {
	return i.ToMonitoringSubscriptionMonitoringSubscriptionOutputWithContext(context.Background())
}

func (i MonitoringSubscriptionMonitoringSubscriptionArgs) ToMonitoringSubscriptionMonitoringSubscriptionOutputWithContext(ctx context.Context) MonitoringSubscriptionMonitoringSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSubscriptionMonitoringSubscriptionOutput)
}

func (i *MonitoringSubscriptionMonitoringSubscriptionArgs) ToOutput(ctx context.Context) pulumix.Output[*MonitoringSubscriptionMonitoringSubscriptionArgs] {
	return pulumix.Val(i)
}

type MonitoringSubscriptionMonitoringSubscriptionOutput struct{ *pulumi.OutputState }

func (MonitoringSubscriptionMonitoringSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSubscriptionMonitoringSubscription)(nil)).Elem()
}

func (o MonitoringSubscriptionMonitoringSubscriptionOutput) ToMonitoringSubscriptionMonitoringSubscriptionOutput() MonitoringSubscriptionMonitoringSubscriptionOutput {
	return o
}

func (o MonitoringSubscriptionMonitoringSubscriptionOutput) ToMonitoringSubscriptionMonitoringSubscriptionOutputWithContext(ctx context.Context) MonitoringSubscriptionMonitoringSubscriptionOutput {
	return o
}

func (o MonitoringSubscriptionMonitoringSubscriptionOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringSubscriptionMonitoringSubscription] {
	return pulumix.Output[MonitoringSubscriptionMonitoringSubscription]{
		OutputState: o.OutputState,
	}
}

// A subscription configuration for additional CloudWatch metrics. See below.
func (o MonitoringSubscriptionMonitoringSubscriptionOutput) RealtimeMetricsSubscriptionConfig() pulumix.GPtrOutput[MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig, MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput] {
	value := pulumix.Apply[MonitoringSubscriptionMonitoringSubscription](o, func(v MonitoringSubscriptionMonitoringSubscription) MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig {
		return v.RealtimeMetricsSubscriptionConfig
	})
	return pulumix.GPtrOutput[MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig, MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput]{OutputState: value.OutputState}
}

type MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig struct {
	// A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are `Enabled` and `Disabled`. See below.
	RealtimeMetricsSubscriptionStatus string `pulumi:"realtimeMetricsSubscriptionStatus"`
}

type MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs struct {
	// A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are `Enabled` and `Disabled`. See below.
	RealtimeMetricsSubscriptionStatus pulumix.Input[string] `pulumi:"realtimeMetricsSubscriptionStatus"`
}

func (MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig)(nil)).Elem()
}

func (i MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) ToMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput() MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput {
	return i.ToMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutputWithContext(context.Background())
}

func (i MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) ToMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutputWithContext(ctx context.Context) MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput)
}

func (i *MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs] {
	return pulumix.Val(i)
}

type MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput struct{ *pulumi.OutputState }

func (MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig)(nil)).Elem()
}

func (o MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) ToMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput() MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput {
	return o
}

func (o MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) ToMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutputWithContext(ctx context.Context) MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput {
	return o
}

func (o MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) ToOutput(ctx context.Context) pulumix.Output[MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig] {
	return pulumix.Output[MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig]{
		OutputState: o.OutputState,
	}
}

// A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are `Enabled` and `Disabled`. See below.
func (o MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) RealtimeMetricsSubscriptionStatus() pulumix.Output[string] {
	return pulumix.Apply[MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig](o, func(v MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig) string {
		return v.RealtimeMetricsSubscriptionStatus
	})
}

type OriginRequestPolicyCookiesConfig struct {
	CookieBehavior string                                   `pulumi:"cookieBehavior"`
	Cookies        *OriginRequestPolicyCookiesConfigCookies `pulumi:"cookies"`
}

type OriginRequestPolicyCookiesConfigArgs struct {
	CookieBehavior pulumix.Input[string]                                       `pulumi:"cookieBehavior"`
	Cookies        pulumix.Input[*OriginRequestPolicyCookiesConfigCookiesArgs] `pulumi:"cookies"`
}

func (OriginRequestPolicyCookiesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyCookiesConfig)(nil)).Elem()
}

func (i OriginRequestPolicyCookiesConfigArgs) ToOriginRequestPolicyCookiesConfigOutput() OriginRequestPolicyCookiesConfigOutput {
	return i.ToOriginRequestPolicyCookiesConfigOutputWithContext(context.Background())
}

func (i OriginRequestPolicyCookiesConfigArgs) ToOriginRequestPolicyCookiesConfigOutputWithContext(ctx context.Context) OriginRequestPolicyCookiesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyCookiesConfigOutput)
}

func (i *OriginRequestPolicyCookiesConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*OriginRequestPolicyCookiesConfigArgs] {
	return pulumix.Val(i)
}

type OriginRequestPolicyCookiesConfigOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyCookiesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyCookiesConfig)(nil)).Elem()
}

func (o OriginRequestPolicyCookiesConfigOutput) ToOriginRequestPolicyCookiesConfigOutput() OriginRequestPolicyCookiesConfigOutput {
	return o
}

func (o OriginRequestPolicyCookiesConfigOutput) ToOriginRequestPolicyCookiesConfigOutputWithContext(ctx context.Context) OriginRequestPolicyCookiesConfigOutput {
	return o
}

func (o OriginRequestPolicyCookiesConfigOutput) ToOutput(ctx context.Context) pulumix.Output[OriginRequestPolicyCookiesConfig] {
	return pulumix.Output[OriginRequestPolicyCookiesConfig]{
		OutputState: o.OutputState,
	}
}

func (o OriginRequestPolicyCookiesConfigOutput) CookieBehavior() pulumix.Output[string] {
	return pulumix.Apply[OriginRequestPolicyCookiesConfig](o, func(v OriginRequestPolicyCookiesConfig) string { return v.CookieBehavior })
}

func (o OriginRequestPolicyCookiesConfigOutput) Cookies() pulumix.GPtrOutput[OriginRequestPolicyCookiesConfigCookies, OriginRequestPolicyCookiesConfigCookiesOutput] {
	value := pulumix.Apply[OriginRequestPolicyCookiesConfig](o, func(v OriginRequestPolicyCookiesConfig) *OriginRequestPolicyCookiesConfigCookies { return v.Cookies })
	return pulumix.GPtrOutput[OriginRequestPolicyCookiesConfigCookies, OriginRequestPolicyCookiesConfigCookiesOutput]{OutputState: value.OutputState}
}

type OriginRequestPolicyCookiesConfigCookies struct {
	Items []string `pulumi:"items"`
}

type OriginRequestPolicyCookiesConfigCookiesArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (OriginRequestPolicyCookiesConfigCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyCookiesConfigCookies)(nil)).Elem()
}

func (i OriginRequestPolicyCookiesConfigCookiesArgs) ToOriginRequestPolicyCookiesConfigCookiesOutput() OriginRequestPolicyCookiesConfigCookiesOutput {
	return i.ToOriginRequestPolicyCookiesConfigCookiesOutputWithContext(context.Background())
}

func (i OriginRequestPolicyCookiesConfigCookiesArgs) ToOriginRequestPolicyCookiesConfigCookiesOutputWithContext(ctx context.Context) OriginRequestPolicyCookiesConfigCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyCookiesConfigCookiesOutput)
}

func (i *OriginRequestPolicyCookiesConfigCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*OriginRequestPolicyCookiesConfigCookiesArgs] {
	return pulumix.Val(i)
}

type OriginRequestPolicyCookiesConfigCookiesOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyCookiesConfigCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyCookiesConfigCookies)(nil)).Elem()
}

func (o OriginRequestPolicyCookiesConfigCookiesOutput) ToOriginRequestPolicyCookiesConfigCookiesOutput() OriginRequestPolicyCookiesConfigCookiesOutput {
	return o
}

func (o OriginRequestPolicyCookiesConfigCookiesOutput) ToOriginRequestPolicyCookiesConfigCookiesOutputWithContext(ctx context.Context) OriginRequestPolicyCookiesConfigCookiesOutput {
	return o
}

func (o OriginRequestPolicyCookiesConfigCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[OriginRequestPolicyCookiesConfigCookies] {
	return pulumix.Output[OriginRequestPolicyCookiesConfigCookies]{
		OutputState: o.OutputState,
	}
}

func (o OriginRequestPolicyCookiesConfigCookiesOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OriginRequestPolicyCookiesConfigCookies](o, func(v OriginRequestPolicyCookiesConfigCookies) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type OriginRequestPolicyHeadersConfig struct {
	HeaderBehavior *string                                  `pulumi:"headerBehavior"`
	Headers        *OriginRequestPolicyHeadersConfigHeaders `pulumi:"headers"`
}

type OriginRequestPolicyHeadersConfigArgs struct {
	HeaderBehavior pulumix.Input[*string]                                      `pulumi:"headerBehavior"`
	Headers        pulumix.Input[*OriginRequestPolicyHeadersConfigHeadersArgs] `pulumi:"headers"`
}

func (OriginRequestPolicyHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyHeadersConfig)(nil)).Elem()
}

func (i OriginRequestPolicyHeadersConfigArgs) ToOriginRequestPolicyHeadersConfigOutput() OriginRequestPolicyHeadersConfigOutput {
	return i.ToOriginRequestPolicyHeadersConfigOutputWithContext(context.Background())
}

func (i OriginRequestPolicyHeadersConfigArgs) ToOriginRequestPolicyHeadersConfigOutputWithContext(ctx context.Context) OriginRequestPolicyHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyHeadersConfigOutput)
}

func (i *OriginRequestPolicyHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*OriginRequestPolicyHeadersConfigArgs] {
	return pulumix.Val(i)
}

type OriginRequestPolicyHeadersConfigOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyHeadersConfig)(nil)).Elem()
}

func (o OriginRequestPolicyHeadersConfigOutput) ToOriginRequestPolicyHeadersConfigOutput() OriginRequestPolicyHeadersConfigOutput {
	return o
}

func (o OriginRequestPolicyHeadersConfigOutput) ToOriginRequestPolicyHeadersConfigOutputWithContext(ctx context.Context) OriginRequestPolicyHeadersConfigOutput {
	return o
}

func (o OriginRequestPolicyHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[OriginRequestPolicyHeadersConfig] {
	return pulumix.Output[OriginRequestPolicyHeadersConfig]{
		OutputState: o.OutputState,
	}
}

func (o OriginRequestPolicyHeadersConfigOutput) HeaderBehavior() pulumix.Output[*string] {
	return pulumix.Apply[OriginRequestPolicyHeadersConfig](o, func(v OriginRequestPolicyHeadersConfig) *string { return v.HeaderBehavior })
}

func (o OriginRequestPolicyHeadersConfigOutput) Headers() pulumix.GPtrOutput[OriginRequestPolicyHeadersConfigHeaders, OriginRequestPolicyHeadersConfigHeadersOutput] {
	value := pulumix.Apply[OriginRequestPolicyHeadersConfig](o, func(v OriginRequestPolicyHeadersConfig) *OriginRequestPolicyHeadersConfigHeaders { return v.Headers })
	return pulumix.GPtrOutput[OriginRequestPolicyHeadersConfigHeaders, OriginRequestPolicyHeadersConfigHeadersOutput]{OutputState: value.OutputState}
}

type OriginRequestPolicyHeadersConfigHeaders struct {
	Items []string `pulumi:"items"`
}

type OriginRequestPolicyHeadersConfigHeadersArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (OriginRequestPolicyHeadersConfigHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyHeadersConfigHeaders)(nil)).Elem()
}

func (i OriginRequestPolicyHeadersConfigHeadersArgs) ToOriginRequestPolicyHeadersConfigHeadersOutput() OriginRequestPolicyHeadersConfigHeadersOutput {
	return i.ToOriginRequestPolicyHeadersConfigHeadersOutputWithContext(context.Background())
}

func (i OriginRequestPolicyHeadersConfigHeadersArgs) ToOriginRequestPolicyHeadersConfigHeadersOutputWithContext(ctx context.Context) OriginRequestPolicyHeadersConfigHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyHeadersConfigHeadersOutput)
}

func (i *OriginRequestPolicyHeadersConfigHeadersArgs) ToOutput(ctx context.Context) pulumix.Output[*OriginRequestPolicyHeadersConfigHeadersArgs] {
	return pulumix.Val(i)
}

type OriginRequestPolicyHeadersConfigHeadersOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyHeadersConfigHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyHeadersConfigHeaders)(nil)).Elem()
}

func (o OriginRequestPolicyHeadersConfigHeadersOutput) ToOriginRequestPolicyHeadersConfigHeadersOutput() OriginRequestPolicyHeadersConfigHeadersOutput {
	return o
}

func (o OriginRequestPolicyHeadersConfigHeadersOutput) ToOriginRequestPolicyHeadersConfigHeadersOutputWithContext(ctx context.Context) OriginRequestPolicyHeadersConfigHeadersOutput {
	return o
}

func (o OriginRequestPolicyHeadersConfigHeadersOutput) ToOutput(ctx context.Context) pulumix.Output[OriginRequestPolicyHeadersConfigHeaders] {
	return pulumix.Output[OriginRequestPolicyHeadersConfigHeaders]{
		OutputState: o.OutputState,
	}
}

func (o OriginRequestPolicyHeadersConfigHeadersOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OriginRequestPolicyHeadersConfigHeaders](o, func(v OriginRequestPolicyHeadersConfigHeaders) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type OriginRequestPolicyQueryStringsConfig struct {
	QueryStringBehavior string                                             `pulumi:"queryStringBehavior"`
	QueryStrings        *OriginRequestPolicyQueryStringsConfigQueryStrings `pulumi:"queryStrings"`
}

type OriginRequestPolicyQueryStringsConfigArgs struct {
	QueryStringBehavior pulumix.Input[string]                                                 `pulumi:"queryStringBehavior"`
	QueryStrings        pulumix.Input[*OriginRequestPolicyQueryStringsConfigQueryStringsArgs] `pulumi:"queryStrings"`
}

func (OriginRequestPolicyQueryStringsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyQueryStringsConfig)(nil)).Elem()
}

func (i OriginRequestPolicyQueryStringsConfigArgs) ToOriginRequestPolicyQueryStringsConfigOutput() OriginRequestPolicyQueryStringsConfigOutput {
	return i.ToOriginRequestPolicyQueryStringsConfigOutputWithContext(context.Background())
}

func (i OriginRequestPolicyQueryStringsConfigArgs) ToOriginRequestPolicyQueryStringsConfigOutputWithContext(ctx context.Context) OriginRequestPolicyQueryStringsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyQueryStringsConfigOutput)
}

func (i *OriginRequestPolicyQueryStringsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*OriginRequestPolicyQueryStringsConfigArgs] {
	return pulumix.Val(i)
}

type OriginRequestPolicyQueryStringsConfigOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyQueryStringsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyQueryStringsConfig)(nil)).Elem()
}

func (o OriginRequestPolicyQueryStringsConfigOutput) ToOriginRequestPolicyQueryStringsConfigOutput() OriginRequestPolicyQueryStringsConfigOutput {
	return o
}

func (o OriginRequestPolicyQueryStringsConfigOutput) ToOriginRequestPolicyQueryStringsConfigOutputWithContext(ctx context.Context) OriginRequestPolicyQueryStringsConfigOutput {
	return o
}

func (o OriginRequestPolicyQueryStringsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[OriginRequestPolicyQueryStringsConfig] {
	return pulumix.Output[OriginRequestPolicyQueryStringsConfig]{
		OutputState: o.OutputState,
	}
}

func (o OriginRequestPolicyQueryStringsConfigOutput) QueryStringBehavior() pulumix.Output[string] {
	return pulumix.Apply[OriginRequestPolicyQueryStringsConfig](o, func(v OriginRequestPolicyQueryStringsConfig) string { return v.QueryStringBehavior })
}

func (o OriginRequestPolicyQueryStringsConfigOutput) QueryStrings() pulumix.GPtrOutput[OriginRequestPolicyQueryStringsConfigQueryStrings, OriginRequestPolicyQueryStringsConfigQueryStringsOutput] {
	value := pulumix.Apply[OriginRequestPolicyQueryStringsConfig](o, func(v OriginRequestPolicyQueryStringsConfig) *OriginRequestPolicyQueryStringsConfigQueryStrings {
		return v.QueryStrings
	})
	return pulumix.GPtrOutput[OriginRequestPolicyQueryStringsConfigQueryStrings, OriginRequestPolicyQueryStringsConfigQueryStringsOutput]{OutputState: value.OutputState}
}

type OriginRequestPolicyQueryStringsConfigQueryStrings struct {
	Items []string `pulumi:"items"`
}

type OriginRequestPolicyQueryStringsConfigQueryStringsArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (OriginRequestPolicyQueryStringsConfigQueryStringsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyQueryStringsConfigQueryStrings)(nil)).Elem()
}

func (i OriginRequestPolicyQueryStringsConfigQueryStringsArgs) ToOriginRequestPolicyQueryStringsConfigQueryStringsOutput() OriginRequestPolicyQueryStringsConfigQueryStringsOutput {
	return i.ToOriginRequestPolicyQueryStringsConfigQueryStringsOutputWithContext(context.Background())
}

func (i OriginRequestPolicyQueryStringsConfigQueryStringsArgs) ToOriginRequestPolicyQueryStringsConfigQueryStringsOutputWithContext(ctx context.Context) OriginRequestPolicyQueryStringsConfigQueryStringsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyQueryStringsConfigQueryStringsOutput)
}

func (i *OriginRequestPolicyQueryStringsConfigQueryStringsArgs) ToOutput(ctx context.Context) pulumix.Output[*OriginRequestPolicyQueryStringsConfigQueryStringsArgs] {
	return pulumix.Val(i)
}

type OriginRequestPolicyQueryStringsConfigQueryStringsOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyQueryStringsConfigQueryStringsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyQueryStringsConfigQueryStrings)(nil)).Elem()
}

func (o OriginRequestPolicyQueryStringsConfigQueryStringsOutput) ToOriginRequestPolicyQueryStringsConfigQueryStringsOutput() OriginRequestPolicyQueryStringsConfigQueryStringsOutput {
	return o
}

func (o OriginRequestPolicyQueryStringsConfigQueryStringsOutput) ToOriginRequestPolicyQueryStringsConfigQueryStringsOutputWithContext(ctx context.Context) OriginRequestPolicyQueryStringsConfigQueryStringsOutput {
	return o
}

func (o OriginRequestPolicyQueryStringsConfigQueryStringsOutput) ToOutput(ctx context.Context) pulumix.Output[OriginRequestPolicyQueryStringsConfigQueryStrings] {
	return pulumix.Output[OriginRequestPolicyQueryStringsConfigQueryStrings]{
		OutputState: o.OutputState,
	}
}

func (o OriginRequestPolicyQueryStringsConfigQueryStringsOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OriginRequestPolicyQueryStringsConfigQueryStrings](o, func(v OriginRequestPolicyQueryStringsConfigQueryStrings) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RealtimeLogConfigEndpoint struct {
	// The Amazon Kinesis data stream configuration.
	KinesisStreamConfig RealtimeLogConfigEndpointKinesisStreamConfig `pulumi:"kinesisStreamConfig"`
	// The type of data stream where real-time log data is sent. The only valid value is `Kinesis`.
	StreamType string `pulumi:"streamType"`
}

type RealtimeLogConfigEndpointArgs struct {
	// The Amazon Kinesis data stream configuration.
	KinesisStreamConfig pulumix.Input[*RealtimeLogConfigEndpointKinesisStreamConfigArgs] `pulumi:"kinesisStreamConfig"`
	// The type of data stream where real-time log data is sent. The only valid value is `Kinesis`.
	StreamType pulumix.Input[string] `pulumi:"streamType"`
}

func (RealtimeLogConfigEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfigEndpoint)(nil)).Elem()
}

func (i RealtimeLogConfigEndpointArgs) ToRealtimeLogConfigEndpointOutput() RealtimeLogConfigEndpointOutput {
	return i.ToRealtimeLogConfigEndpointOutputWithContext(context.Background())
}

func (i RealtimeLogConfigEndpointArgs) ToRealtimeLogConfigEndpointOutputWithContext(ctx context.Context) RealtimeLogConfigEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigEndpointOutput)
}

func (i *RealtimeLogConfigEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[*RealtimeLogConfigEndpointArgs] {
	return pulumix.Val(i)
}

type RealtimeLogConfigEndpointOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfigEndpoint)(nil)).Elem()
}

func (o RealtimeLogConfigEndpointOutput) ToRealtimeLogConfigEndpointOutput() RealtimeLogConfigEndpointOutput {
	return o
}

func (o RealtimeLogConfigEndpointOutput) ToRealtimeLogConfigEndpointOutputWithContext(ctx context.Context) RealtimeLogConfigEndpointOutput {
	return o
}

func (o RealtimeLogConfigEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[RealtimeLogConfigEndpoint] {
	return pulumix.Output[RealtimeLogConfigEndpoint]{
		OutputState: o.OutputState,
	}
}

// The Amazon Kinesis data stream configuration.
func (o RealtimeLogConfigEndpointOutput) KinesisStreamConfig() pulumix.GPtrOutput[RealtimeLogConfigEndpointKinesisStreamConfig, RealtimeLogConfigEndpointKinesisStreamConfigOutput] {
	value := pulumix.Apply[RealtimeLogConfigEndpoint](o, func(v RealtimeLogConfigEndpoint) RealtimeLogConfigEndpointKinesisStreamConfig {
		return v.KinesisStreamConfig
	})
	return pulumix.GPtrOutput[RealtimeLogConfigEndpointKinesisStreamConfig, RealtimeLogConfigEndpointKinesisStreamConfigOutput]{OutputState: value.OutputState}
}

// The type of data stream where real-time log data is sent. The only valid value is `Kinesis`.
func (o RealtimeLogConfigEndpointOutput) StreamType() pulumix.Output[string] {
	return pulumix.Apply[RealtimeLogConfigEndpoint](o, func(v RealtimeLogConfigEndpoint) string { return v.StreamType })
}

type RealtimeLogConfigEndpointKinesisStreamConfig struct {
	// The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
	// See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
	RoleArn string `pulumi:"roleArn"`
	// The ARN of the Kinesis data stream.
	StreamArn string `pulumi:"streamArn"`
}

type RealtimeLogConfigEndpointKinesisStreamConfigArgs struct {
	// The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
	// See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
	RoleArn pulumix.Input[string] `pulumi:"roleArn"`
	// The ARN of the Kinesis data stream.
	StreamArn pulumix.Input[string] `pulumi:"streamArn"`
}

func (RealtimeLogConfigEndpointKinesisStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfigEndpointKinesisStreamConfig)(nil)).Elem()
}

func (i RealtimeLogConfigEndpointKinesisStreamConfigArgs) ToRealtimeLogConfigEndpointKinesisStreamConfigOutput() RealtimeLogConfigEndpointKinesisStreamConfigOutput {
	return i.ToRealtimeLogConfigEndpointKinesisStreamConfigOutputWithContext(context.Background())
}

func (i RealtimeLogConfigEndpointKinesisStreamConfigArgs) ToRealtimeLogConfigEndpointKinesisStreamConfigOutputWithContext(ctx context.Context) RealtimeLogConfigEndpointKinesisStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigEndpointKinesisStreamConfigOutput)
}

func (i *RealtimeLogConfigEndpointKinesisStreamConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*RealtimeLogConfigEndpointKinesisStreamConfigArgs] {
	return pulumix.Val(i)
}

type RealtimeLogConfigEndpointKinesisStreamConfigOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigEndpointKinesisStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfigEndpointKinesisStreamConfig)(nil)).Elem()
}

func (o RealtimeLogConfigEndpointKinesisStreamConfigOutput) ToRealtimeLogConfigEndpointKinesisStreamConfigOutput() RealtimeLogConfigEndpointKinesisStreamConfigOutput {
	return o
}

func (o RealtimeLogConfigEndpointKinesisStreamConfigOutput) ToRealtimeLogConfigEndpointKinesisStreamConfigOutputWithContext(ctx context.Context) RealtimeLogConfigEndpointKinesisStreamConfigOutput {
	return o
}

func (o RealtimeLogConfigEndpointKinesisStreamConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RealtimeLogConfigEndpointKinesisStreamConfig] {
	return pulumix.Output[RealtimeLogConfigEndpointKinesisStreamConfig]{
		OutputState: o.OutputState,
	}
}

// The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
// See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
func (o RealtimeLogConfigEndpointKinesisStreamConfigOutput) RoleArn() pulumix.Output[string] {
	return pulumix.Apply[RealtimeLogConfigEndpointKinesisStreamConfig](o, func(v RealtimeLogConfigEndpointKinesisStreamConfig) string { return v.RoleArn })
}

// The ARN of the Kinesis data stream.
func (o RealtimeLogConfigEndpointKinesisStreamConfigOutput) StreamArn() pulumix.Output[string] {
	return pulumix.Apply[RealtimeLogConfigEndpointKinesisStreamConfig](o, func(v RealtimeLogConfigEndpointKinesisStreamConfig) string { return v.StreamArn })
}

type ResponseHeadersPolicyCorsConfig struct {
	// A Boolean value that CloudFront uses as the value for the `Access-Control-Allow-Credentials` HTTP response header.
	AccessControlAllowCredentials bool `pulumi:"accessControlAllowCredentials"`
	// Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the `Access-Control-Allow-Headers` HTTP response header.
	AccessControlAllowHeaders ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders `pulumi:"accessControlAllowHeaders"`
	// Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the `Access-Control-Allow-Methods` HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`
	AccessControlAllowMethods ResponseHeadersPolicyCorsConfigAccessControlAllowMethods `pulumi:"accessControlAllowMethods"`
	// Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the `Access-Control-Allow-Origin` HTTP response header.
	AccessControlAllowOrigins ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins `pulumi:"accessControlAllowOrigins"`
	// Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the `Access-Control-Expose-Headers` HTTP response header.
	AccessControlExposeHeaders *ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders `pulumi:"accessControlExposeHeaders"`
	// A number that CloudFront uses as the value for the `Access-Control-Max-Age` HTTP response header.
	AccessControlMaxAgeSec *int `pulumi:"accessControlMaxAgeSec"`
	// A Boolean value that determines how CloudFront behaves for the HTTP response header.
	OriginOverride bool `pulumi:"originOverride"`
}

type ResponseHeadersPolicyCorsConfigArgs struct {
	// A Boolean value that CloudFront uses as the value for the `Access-Control-Allow-Credentials` HTTP response header.
	AccessControlAllowCredentials pulumix.Input[bool] `pulumi:"accessControlAllowCredentials"`
	// Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the `Access-Control-Allow-Headers` HTTP response header.
	AccessControlAllowHeaders pulumix.Input[*ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersArgs] `pulumi:"accessControlAllowHeaders"`
	// Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the `Access-Control-Allow-Methods` HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`
	AccessControlAllowMethods pulumix.Input[*ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsArgs] `pulumi:"accessControlAllowMethods"`
	// Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the `Access-Control-Allow-Origin` HTTP response header.
	AccessControlAllowOrigins pulumix.Input[*ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsArgs] `pulumi:"accessControlAllowOrigins"`
	// Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the `Access-Control-Expose-Headers` HTTP response header.
	AccessControlExposeHeaders pulumix.Input[*ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersArgs] `pulumi:"accessControlExposeHeaders"`
	// A number that CloudFront uses as the value for the `Access-Control-Max-Age` HTTP response header.
	AccessControlMaxAgeSec pulumix.Input[*int] `pulumi:"accessControlMaxAgeSec"`
	// A Boolean value that determines how CloudFront behaves for the HTTP response header.
	OriginOverride pulumix.Input[bool] `pulumi:"originOverride"`
}

func (ResponseHeadersPolicyCorsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicyCorsConfigArgs) ToResponseHeadersPolicyCorsConfigOutput() ResponseHeadersPolicyCorsConfigOutput {
	return i.ToResponseHeadersPolicyCorsConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCorsConfigArgs) ToResponseHeadersPolicyCorsConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCorsConfigOutput)
}

func (i *ResponseHeadersPolicyCorsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyCorsConfigArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyCorsConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCorsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyCorsConfigOutput) ToResponseHeadersPolicyCorsConfigOutput() ResponseHeadersPolicyCorsConfigOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigOutput) ToResponseHeadersPolicyCorsConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyCorsConfig] {
	return pulumix.Output[ResponseHeadersPolicyCorsConfig]{
		OutputState: o.OutputState,
	}
}

// A Boolean value that CloudFront uses as the value for the `Access-Control-Allow-Credentials` HTTP response header.
func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlAllowCredentials() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicyCorsConfig](o, func(v ResponseHeadersPolicyCorsConfig) bool { return v.AccessControlAllowCredentials })
}

// Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the `Access-Control-Allow-Headers` HTTP response header.
func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlAllowHeaders() pulumix.GPtrOutput[ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders, ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput] {
	value := pulumix.Apply[ResponseHeadersPolicyCorsConfig](o, func(v ResponseHeadersPolicyCorsConfig) ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders {
		return v.AccessControlAllowHeaders
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders, ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput]{OutputState: value.OutputState}
}

// Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the `Access-Control-Allow-Methods` HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`
func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlAllowMethods() pulumix.GPtrOutput[ResponseHeadersPolicyCorsConfigAccessControlAllowMethods, ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput] {
	value := pulumix.Apply[ResponseHeadersPolicyCorsConfig](o, func(v ResponseHeadersPolicyCorsConfig) ResponseHeadersPolicyCorsConfigAccessControlAllowMethods {
		return v.AccessControlAllowMethods
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicyCorsConfigAccessControlAllowMethods, ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput]{OutputState: value.OutputState}
}

// Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the `Access-Control-Allow-Origin` HTTP response header.
func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlAllowOrigins() pulumix.GPtrOutput[ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins, ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput] {
	value := pulumix.Apply[ResponseHeadersPolicyCorsConfig](o, func(v ResponseHeadersPolicyCorsConfig) ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins {
		return v.AccessControlAllowOrigins
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins, ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput]{OutputState: value.OutputState}
}

// Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the `Access-Control-Expose-Headers` HTTP response header.
func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlExposeHeaders() pulumix.GPtrOutput[ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders, ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput] {
	value := pulumix.Apply[ResponseHeadersPolicyCorsConfig](o, func(v ResponseHeadersPolicyCorsConfig) *ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders {
		return v.AccessControlExposeHeaders
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders, ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput]{OutputState: value.OutputState}
}

// A number that CloudFront uses as the value for the `Access-Control-Max-Age` HTTP response header.
func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlMaxAgeSec() pulumix.Output[*int] {
	return pulumix.Apply[ResponseHeadersPolicyCorsConfig](o, func(v ResponseHeadersPolicyCorsConfig) *int { return v.AccessControlMaxAgeSec })
}

// A Boolean value that determines how CloudFront behaves for the HTTP response header.
func (o ResponseHeadersPolicyCorsConfigOutput) OriginOverride() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicyCorsConfig](o, func(v ResponseHeadersPolicyCorsConfig) bool { return v.OriginOverride })
}

type ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders struct {
	Items []string `pulumi:"items"`
}

type ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders)(nil)).Elem()
}

func (i ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersArgs) ToResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput() ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput {
	return i.ToResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersArgs) ToResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput)
}

func (i *ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders)(nil)).Elem()
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput) ToResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput() ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput) ToResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders] {
	return pulumix.Output[ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders]{
		OutputState: o.OutputState,
	}
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders](o, func(v ResponseHeadersPolicyCorsConfigAccessControlAllowHeaders) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ResponseHeadersPolicyCorsConfigAccessControlAllowMethods struct {
	Items []string `pulumi:"items"`
}

type ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfigAccessControlAllowMethods)(nil)).Elem()
}

func (i ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsArgs) ToResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput() ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput {
	return i.ToResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsArgs) ToResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput)
}

func (i *ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfigAccessControlAllowMethods)(nil)).Elem()
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput) ToResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput() ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput) ToResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyCorsConfigAccessControlAllowMethods] {
	return pulumix.Output[ResponseHeadersPolicyCorsConfigAccessControlAllowMethods]{
		OutputState: o.OutputState,
	}
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ResponseHeadersPolicyCorsConfigAccessControlAllowMethods](o, func(v ResponseHeadersPolicyCorsConfigAccessControlAllowMethods) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins struct {
	Items []string `pulumi:"items"`
}

type ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins)(nil)).Elem()
}

func (i ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsArgs) ToResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput() ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput {
	return i.ToResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsArgs) ToResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput)
}

func (i *ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins)(nil)).Elem()
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput) ToResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput() ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput) ToResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins] {
	return pulumix.Output[ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins]{
		OutputState: o.OutputState,
	}
}

func (o ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins](o, func(v ResponseHeadersPolicyCorsConfigAccessControlAllowOrigins) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders struct {
	Items []string `pulumi:"items"`
}

type ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders)(nil)).Elem()
}

func (i ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersArgs) ToResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput() ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput {
	return i.ToResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersArgs) ToResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput)
}

func (i *ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders)(nil)).Elem()
}

func (o ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput) ToResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput() ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput) ToResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders] {
	return pulumix.Output[ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders]{
		OutputState: o.OutputState,
	}
}

func (o ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders](o, func(v ResponseHeadersPolicyCorsConfigAccessControlExposeHeaders) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ResponseHeadersPolicyCustomHeadersConfig struct {
	Items []ResponseHeadersPolicyCustomHeadersConfigItem `pulumi:"items"`
}

type ResponseHeadersPolicyCustomHeadersConfigArgs struct {
	Items pulumix.Input[[]*ResponseHeadersPolicyCustomHeadersConfigItemArgs] `pulumi:"items"`
}

func (ResponseHeadersPolicyCustomHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCustomHeadersConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicyCustomHeadersConfigArgs) ToResponseHeadersPolicyCustomHeadersConfigOutput() ResponseHeadersPolicyCustomHeadersConfigOutput {
	return i.ToResponseHeadersPolicyCustomHeadersConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCustomHeadersConfigArgs) ToResponseHeadersPolicyCustomHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCustomHeadersConfigOutput)
}

func (i *ResponseHeadersPolicyCustomHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyCustomHeadersConfigArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyCustomHeadersConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCustomHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCustomHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyCustomHeadersConfigOutput) ToResponseHeadersPolicyCustomHeadersConfigOutput() ResponseHeadersPolicyCustomHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeadersConfigOutput) ToResponseHeadersPolicyCustomHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyCustomHeadersConfig] {
	return pulumix.Output[ResponseHeadersPolicyCustomHeadersConfig]{
		OutputState: o.OutputState,
	}
}

func (o ResponseHeadersPolicyCustomHeadersConfigOutput) Items() pulumix.GArrayOutput[ResponseHeadersPolicyCustomHeadersConfigItem, ResponseHeadersPolicyCustomHeadersConfigItemOutput] {
	value := pulumix.Apply[ResponseHeadersPolicyCustomHeadersConfig](o, func(v ResponseHeadersPolicyCustomHeadersConfig) []ResponseHeadersPolicyCustomHeadersConfigItem {
		return v.Items
	})
	return pulumix.GArrayOutput[ResponseHeadersPolicyCustomHeadersConfigItem, ResponseHeadersPolicyCustomHeadersConfigItemOutput]{OutputState: value.OutputState}
}

type ResponseHeadersPolicyCustomHeadersConfigItem struct {
	// The HTTP response header name.
	Header string `pulumi:"header"`
	// Whether CloudFront overrides a response header with the same name received from the origin with the header specifies here.
	Override bool `pulumi:"override"`
	// The value for the HTTP response header.
	Value string `pulumi:"value"`
}

type ResponseHeadersPolicyCustomHeadersConfigItemArgs struct {
	// The HTTP response header name.
	Header pulumix.Input[string] `pulumi:"header"`
	// Whether CloudFront overrides a response header with the same name received from the origin with the header specifies here.
	Override pulumix.Input[bool] `pulumi:"override"`
	// The value for the HTTP response header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (ResponseHeadersPolicyCustomHeadersConfigItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCustomHeadersConfigItem)(nil)).Elem()
}

func (i ResponseHeadersPolicyCustomHeadersConfigItemArgs) ToResponseHeadersPolicyCustomHeadersConfigItemOutput() ResponseHeadersPolicyCustomHeadersConfigItemOutput {
	return i.ToResponseHeadersPolicyCustomHeadersConfigItemOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCustomHeadersConfigItemArgs) ToResponseHeadersPolicyCustomHeadersConfigItemOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCustomHeadersConfigItemOutput)
}

func (i *ResponseHeadersPolicyCustomHeadersConfigItemArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyCustomHeadersConfigItemArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyCustomHeadersConfigItemOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCustomHeadersConfigItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCustomHeadersConfigItem)(nil)).Elem()
}

func (o ResponseHeadersPolicyCustomHeadersConfigItemOutput) ToResponseHeadersPolicyCustomHeadersConfigItemOutput() ResponseHeadersPolicyCustomHeadersConfigItemOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeadersConfigItemOutput) ToResponseHeadersPolicyCustomHeadersConfigItemOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigItemOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeadersConfigItemOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyCustomHeadersConfigItem] {
	return pulumix.Output[ResponseHeadersPolicyCustomHeadersConfigItem]{
		OutputState: o.OutputState,
	}
}

// The HTTP response header name.
func (o ResponseHeadersPolicyCustomHeadersConfigItemOutput) Header() pulumix.Output[string] {
	return pulumix.Apply[ResponseHeadersPolicyCustomHeadersConfigItem](o, func(v ResponseHeadersPolicyCustomHeadersConfigItem) string { return v.Header })
}

// Whether CloudFront overrides a response header with the same name received from the origin with the header specifies here.
func (o ResponseHeadersPolicyCustomHeadersConfigItemOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicyCustomHeadersConfigItem](o, func(v ResponseHeadersPolicyCustomHeadersConfigItem) bool { return v.Override })
}

// The value for the HTTP response header.
func (o ResponseHeadersPolicyCustomHeadersConfigItemOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[ResponseHeadersPolicyCustomHeadersConfigItem](o, func(v ResponseHeadersPolicyCustomHeadersConfigItem) string { return v.Value })
}

type ResponseHeadersPolicyRemoveHeadersConfig struct {
	Items []ResponseHeadersPolicyRemoveHeadersConfigItem `pulumi:"items"`
}

type ResponseHeadersPolicyRemoveHeadersConfigArgs struct {
	Items pulumix.Input[[]*ResponseHeadersPolicyRemoveHeadersConfigItemArgs] `pulumi:"items"`
}

func (ResponseHeadersPolicyRemoveHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyRemoveHeadersConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicyRemoveHeadersConfigArgs) ToResponseHeadersPolicyRemoveHeadersConfigOutput() ResponseHeadersPolicyRemoveHeadersConfigOutput {
	return i.ToResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyRemoveHeadersConfigArgs) ToResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyRemoveHeadersConfigOutput)
}

func (i *ResponseHeadersPolicyRemoveHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyRemoveHeadersConfigArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyRemoveHeadersConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyRemoveHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyRemoveHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyRemoveHeadersConfigOutput) ToResponseHeadersPolicyRemoveHeadersConfigOutput() ResponseHeadersPolicyRemoveHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeadersConfigOutput) ToResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyRemoveHeadersConfig] {
	return pulumix.Output[ResponseHeadersPolicyRemoveHeadersConfig]{
		OutputState: o.OutputState,
	}
}

func (o ResponseHeadersPolicyRemoveHeadersConfigOutput) Items() pulumix.GArrayOutput[ResponseHeadersPolicyRemoveHeadersConfigItem, ResponseHeadersPolicyRemoveHeadersConfigItemOutput] {
	value := pulumix.Apply[ResponseHeadersPolicyRemoveHeadersConfig](o, func(v ResponseHeadersPolicyRemoveHeadersConfig) []ResponseHeadersPolicyRemoveHeadersConfigItem {
		return v.Items
	})
	return pulumix.GArrayOutput[ResponseHeadersPolicyRemoveHeadersConfigItem, ResponseHeadersPolicyRemoveHeadersConfigItemOutput]{OutputState: value.OutputState}
}

type ResponseHeadersPolicyRemoveHeadersConfigItem struct {
	// The HTTP response header name.
	Header string `pulumi:"header"`
}

type ResponseHeadersPolicyRemoveHeadersConfigItemArgs struct {
	// The HTTP response header name.
	Header pulumix.Input[string] `pulumi:"header"`
}

func (ResponseHeadersPolicyRemoveHeadersConfigItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyRemoveHeadersConfigItem)(nil)).Elem()
}

func (i ResponseHeadersPolicyRemoveHeadersConfigItemArgs) ToResponseHeadersPolicyRemoveHeadersConfigItemOutput() ResponseHeadersPolicyRemoveHeadersConfigItemOutput {
	return i.ToResponseHeadersPolicyRemoveHeadersConfigItemOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyRemoveHeadersConfigItemArgs) ToResponseHeadersPolicyRemoveHeadersConfigItemOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyRemoveHeadersConfigItemOutput)
}

func (i *ResponseHeadersPolicyRemoveHeadersConfigItemArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyRemoveHeadersConfigItemArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyRemoveHeadersConfigItemOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyRemoveHeadersConfigItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyRemoveHeadersConfigItem)(nil)).Elem()
}

func (o ResponseHeadersPolicyRemoveHeadersConfigItemOutput) ToResponseHeadersPolicyRemoveHeadersConfigItemOutput() ResponseHeadersPolicyRemoveHeadersConfigItemOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeadersConfigItemOutput) ToResponseHeadersPolicyRemoveHeadersConfigItemOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigItemOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeadersConfigItemOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyRemoveHeadersConfigItem] {
	return pulumix.Output[ResponseHeadersPolicyRemoveHeadersConfigItem]{
		OutputState: o.OutputState,
	}
}

// The HTTP response header name.
func (o ResponseHeadersPolicyRemoveHeadersConfigItemOutput) Header() pulumix.Output[string] {
	return pulumix.Apply[ResponseHeadersPolicyRemoveHeadersConfigItem](o, func(v ResponseHeadersPolicyRemoveHeadersConfigItem) string { return v.Header })
}

type ResponseHeadersPolicySecurityHeadersConfig struct {
	// The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header. See Content Security Policy for more information.
	ContentSecurityPolicy *ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy `pulumi:"contentSecurityPolicy"`
	// Determines whether CloudFront includes the `X-Content-Type-Options` HTTP response header with its value set to `nosniff`. See Content Type Options for more information.
	ContentTypeOptions *ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions `pulumi:"contentTypeOptions"`
	// Determines whether CloudFront includes the `X-Frame-Options` HTTP response header and the header’s value. See Frame Options for more information.
	FrameOptions *ResponseHeadersPolicySecurityHeadersConfigFrameOptions `pulumi:"frameOptions"`
	// Determines whether CloudFront includes the `Referrer-Policy` HTTP response header and the header’s value. See Referrer Policy for more information.
	ReferrerPolicy *ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy `pulumi:"referrerPolicy"`
	// Determines whether CloudFront includes the `Strict-Transport-Security` HTTP response header and the header’s value. See Strict Transport Security for more information.
	StrictTransportSecurity *ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity `pulumi:"strictTransportSecurity"`
	// Determine whether CloudFront includes the `X-XSS-Protection` HTTP response header and the header’s value. See XSS Protection for more information.
	XssProtection *ResponseHeadersPolicySecurityHeadersConfigXssProtection `pulumi:"xssProtection"`
}

type ResponseHeadersPolicySecurityHeadersConfigArgs struct {
	// The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header. See Content Security Policy for more information.
	ContentSecurityPolicy pulumix.Input[*ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs] `pulumi:"contentSecurityPolicy"`
	// Determines whether CloudFront includes the `X-Content-Type-Options` HTTP response header with its value set to `nosniff`. See Content Type Options for more information.
	ContentTypeOptions pulumix.Input[*ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsArgs] `pulumi:"contentTypeOptions"`
	// Determines whether CloudFront includes the `X-Frame-Options` HTTP response header and the header’s value. See Frame Options for more information.
	FrameOptions pulumix.Input[*ResponseHeadersPolicySecurityHeadersConfigFrameOptionsArgs] `pulumi:"frameOptions"`
	// Determines whether CloudFront includes the `Referrer-Policy` HTTP response header and the header’s value. See Referrer Policy for more information.
	ReferrerPolicy pulumix.Input[*ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs] `pulumi:"referrerPolicy"`
	// Determines whether CloudFront includes the `Strict-Transport-Security` HTTP response header and the header’s value. See Strict Transport Security for more information.
	StrictTransportSecurity pulumix.Input[*ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs] `pulumi:"strictTransportSecurity"`
	// Determine whether CloudFront includes the `X-XSS-Protection` HTTP response header and the header’s value. See XSS Protection for more information.
	XssProtection pulumix.Input[*ResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs] `pulumi:"xssProtection"`
}

func (ResponseHeadersPolicySecurityHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicySecurityHeadersConfigArgs) ToResponseHeadersPolicySecurityHeadersConfigOutput() ResponseHeadersPolicySecurityHeadersConfigOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicySecurityHeadersConfigArgs) ToResponseHeadersPolicySecurityHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigOutput)
}

func (i *ResponseHeadersPolicySecurityHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicySecurityHeadersConfigArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicySecurityHeadersConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicySecurityHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ToResponseHeadersPolicySecurityHeadersConfigOutput() ResponseHeadersPolicySecurityHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ToResponseHeadersPolicySecurityHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicySecurityHeadersConfig] {
	return pulumix.Output[ResponseHeadersPolicySecurityHeadersConfig]{
		OutputState: o.OutputState,
	}
}

// The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header. See Content Security Policy for more information.
func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ContentSecurityPolicy() pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy, ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput] {
	value := pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfig](o, func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy {
		return v.ContentSecurityPolicy
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy, ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput]{OutputState: value.OutputState}
}

// Determines whether CloudFront includes the `X-Content-Type-Options` HTTP response header with its value set to `nosniff`. See Content Type Options for more information.
func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ContentTypeOptions() pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions, ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput] {
	value := pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfig](o, func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions {
		return v.ContentTypeOptions
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions, ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput]{OutputState: value.OutputState}
}

// Determines whether CloudFront includes the `X-Frame-Options` HTTP response header and the header’s value. See Frame Options for more information.
func (o ResponseHeadersPolicySecurityHeadersConfigOutput) FrameOptions() pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigFrameOptions, ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput] {
	value := pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfig](o, func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicySecurityHeadersConfigFrameOptions {
		return v.FrameOptions
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigFrameOptions, ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput]{OutputState: value.OutputState}
}

// Determines whether CloudFront includes the `Referrer-Policy` HTTP response header and the header’s value. See Referrer Policy for more information.
func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ReferrerPolicy() pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy, ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput] {
	value := pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfig](o, func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy {
		return v.ReferrerPolicy
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy, ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput]{OutputState: value.OutputState}
}

// Determines whether CloudFront includes the `Strict-Transport-Security` HTTP response header and the header’s value. See Strict Transport Security for more information.
func (o ResponseHeadersPolicySecurityHeadersConfigOutput) StrictTransportSecurity() pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity, ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput] {
	value := pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfig](o, func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity {
		return v.StrictTransportSecurity
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity, ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput]{OutputState: value.OutputState}
}

// Determine whether CloudFront includes the `X-XSS-Protection` HTTP response header and the header’s value. See XSS Protection for more information.
func (o ResponseHeadersPolicySecurityHeadersConfigOutput) XssProtection() pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigXssProtection, ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput] {
	value := pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfig](o, func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicySecurityHeadersConfigXssProtection {
		return v.XssProtection
	})
	return pulumix.GPtrOutput[ResponseHeadersPolicySecurityHeadersConfigXssProtection, ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput]{OutputState: value.OutputState}
}

type ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy struct {
	// The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header.
	ContentSecurityPolicy string `pulumi:"contentSecurityPolicy"`
	// Whether CloudFront overrides the `Content-Security-Policy` HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
}

type ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs struct {
	// The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header.
	ContentSecurityPolicy pulumix.Input[string] `pulumi:"contentSecurityPolicy"`
	// Whether CloudFront overrides the `Content-Security-Policy` HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
}

func (ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy)(nil)).Elem()
}

func (i ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs) ToResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput() ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs) ToResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput)
}

func (i *ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy)(nil)).Elem()
}

func (o ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ToResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput() ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ToResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy] {
	return pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy]{
		OutputState: o.OutputState,
	}
}

// The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header.
func (o ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ContentSecurityPolicy() pulumix.Output[string] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy](o, func(v ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy) string {
		return v.ContentSecurityPolicy
	})
}

// Whether CloudFront overrides the `Content-Security-Policy` HTTP response header received from the origin with the one specified in this response headers policy.
func (o ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy](o, func(v ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy) bool { return v.Override })
}

type ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions struct {
	// Whether CloudFront overrides the `X-Content-Type-Options` HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
}

type ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsArgs struct {
	// Whether CloudFront overrides the `X-Content-Type-Options` HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
}

func (ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions)(nil)).Elem()
}

func (i ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsArgs) ToResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput() ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsArgs) ToResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput)
}

func (i *ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions)(nil)).Elem()
}

func (o ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput) ToResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput() ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput) ToResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions] {
	return pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions]{
		OutputState: o.OutputState,
	}
}

// Whether CloudFront overrides the `X-Content-Type-Options` HTTP response header received from the origin with the one specified in this response headers policy.
func (o ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions](o, func(v ResponseHeadersPolicySecurityHeadersConfigContentTypeOptions) bool { return v.Override })
}

type ResponseHeadersPolicySecurityHeadersConfigFrameOptions struct {
	// The value of the `X-Frame-Options` HTTP response header. Valid values: `DENY` | `SAMEORIGIN`
	FrameOption string `pulumi:"frameOption"`
	// Whether CloudFront overrides the `X-Frame-Options` HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
}

type ResponseHeadersPolicySecurityHeadersConfigFrameOptionsArgs struct {
	// The value of the `X-Frame-Options` HTTP response header. Valid values: `DENY` | `SAMEORIGIN`
	FrameOption pulumix.Input[string] `pulumi:"frameOption"`
	// Whether CloudFront overrides the `X-Frame-Options` HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
}

func (ResponseHeadersPolicySecurityHeadersConfigFrameOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigFrameOptions)(nil)).Elem()
}

func (i ResponseHeadersPolicySecurityHeadersConfigFrameOptionsArgs) ToResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput() ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicySecurityHeadersConfigFrameOptionsArgs) ToResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput)
}

func (i *ResponseHeadersPolicySecurityHeadersConfigFrameOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicySecurityHeadersConfigFrameOptionsArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigFrameOptions)(nil)).Elem()
}

func (o ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput) ToResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput() ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput) ToResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigFrameOptions] {
	return pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigFrameOptions]{
		OutputState: o.OutputState,
	}
}

// The value of the `X-Frame-Options` HTTP response header. Valid values: `DENY` | `SAMEORIGIN`
func (o ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput) FrameOption() pulumix.Output[string] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigFrameOptions](o, func(v ResponseHeadersPolicySecurityHeadersConfigFrameOptions) string { return v.FrameOption })
}

// Whether CloudFront overrides the `X-Frame-Options` HTTP response header received from the origin with the one specified in this response headers policy.
func (o ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigFrameOptions](o, func(v ResponseHeadersPolicySecurityHeadersConfigFrameOptions) bool { return v.Override })
}

type ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy struct {
	// Whether CloudFront overrides the `Referrer-Policy` HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
	// The value of the `Referrer-Policy` HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
	ReferrerPolicy string `pulumi:"referrerPolicy"`
}

type ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs struct {
	// Whether CloudFront overrides the `Referrer-Policy` HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
	// The value of the `Referrer-Policy` HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
	ReferrerPolicy pulumix.Input[string] `pulumi:"referrerPolicy"`
}

func (ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy)(nil)).Elem()
}

func (i ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs) ToResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput() ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs) ToResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput)
}

func (i *ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy)(nil)).Elem()
}

func (o ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ToResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput() ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ToResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy] {
	return pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy]{
		OutputState: o.OutputState,
	}
}

// Whether CloudFront overrides the `Referrer-Policy` HTTP response header received from the origin with the one specified in this response headers policy.
func (o ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy](o, func(v ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy) bool { return v.Override })
}

// The value of the `Referrer-Policy` HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
func (o ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ReferrerPolicy() pulumix.Output[string] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy](o, func(v ResponseHeadersPolicySecurityHeadersConfigReferrerPolicy) string { return v.ReferrerPolicy })
}

type ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity struct {
	// A number that CloudFront uses as the value for the `max-age` directive in the `Strict-Transport-Security` HTTP response header.
	AccessControlMaxAgeSec int `pulumi:"accessControlMaxAgeSec"`
	// Whether CloudFront includes the `includeSubDomains` directive in the `Strict-Transport-Security` HTTP response header.
	IncludeSubdomains *bool `pulumi:"includeSubdomains"`
	// Whether CloudFront overrides the `Strict-Transport-Security` HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
	// Whether CloudFront includes the `preload` directive in the `Strict-Transport-Security` HTTP response header.
	Preload *bool `pulumi:"preload"`
}

type ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs struct {
	// A number that CloudFront uses as the value for the `max-age` directive in the `Strict-Transport-Security` HTTP response header.
	AccessControlMaxAgeSec pulumix.Input[int] `pulumi:"accessControlMaxAgeSec"`
	// Whether CloudFront includes the `includeSubDomains` directive in the `Strict-Transport-Security` HTTP response header.
	IncludeSubdomains pulumix.Input[*bool] `pulumi:"includeSubdomains"`
	// Whether CloudFront overrides the `Strict-Transport-Security` HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
	// Whether CloudFront includes the `preload` directive in the `Strict-Transport-Security` HTTP response header.
	Preload pulumix.Input[*bool] `pulumi:"preload"`
}

func (ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity)(nil)).Elem()
}

func (i ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs) ToResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput() ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs) ToResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput)
}

func (i *ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity)(nil)).Elem()
}

func (o ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) ToResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput() ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) ToResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity] {
	return pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity]{
		OutputState: o.OutputState,
	}
}

// A number that CloudFront uses as the value for the `max-age` directive in the `Strict-Transport-Security` HTTP response header.
func (o ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) AccessControlMaxAgeSec() pulumix.Output[int] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity](o, func(v ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity) int {
		return v.AccessControlMaxAgeSec
	})
}

// Whether CloudFront includes the `includeSubDomains` directive in the `Strict-Transport-Security` HTTP response header.
func (o ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) IncludeSubdomains() pulumix.Output[*bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity](o, func(v ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity) *bool {
		return v.IncludeSubdomains
	})
}

// Whether CloudFront overrides the `Strict-Transport-Security` HTTP response header received from the origin with the one specified in this response headers policy.
func (o ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity](o, func(v ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity) bool { return v.Override })
}

// Whether CloudFront includes the `preload` directive in the `Strict-Transport-Security` HTTP response header.
func (o ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) Preload() pulumix.Output[*bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity](o, func(v ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity) *bool { return v.Preload })
}

type ResponseHeadersPolicySecurityHeadersConfigXssProtection struct {
	// Whether CloudFront includes the `mode=block` directive in the `X-XSS-Protection` header.
	ModeBlock *bool `pulumi:"modeBlock"`
	// Whether CloudFront overrides the `X-XSS-Protection` HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
	// A Boolean value that determines the value of the `X-XSS-Protection` HTTP response header. When this setting is `true`, the value of the `X-XSS-Protection` header is `1`. When this setting is `false`, the value of the `X-XSS-Protection` header is `0`.
	Protection bool `pulumi:"protection"`
	// A reporting URI, which CloudFront uses as the value of the report directive in the `X-XSS-Protection` header. You cannot specify a `reportUri` when `modeBlock` is `true`.
	ReportUri *string `pulumi:"reportUri"`
}

type ResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs struct {
	// Whether CloudFront includes the `mode=block` directive in the `X-XSS-Protection` header.
	ModeBlock pulumix.Input[*bool] `pulumi:"modeBlock"`
	// Whether CloudFront overrides the `X-XSS-Protection` HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
	// A Boolean value that determines the value of the `X-XSS-Protection` HTTP response header. When this setting is `true`, the value of the `X-XSS-Protection` header is `1`. When this setting is `false`, the value of the `X-XSS-Protection` header is `0`.
	Protection pulumix.Input[bool] `pulumi:"protection"`
	// A reporting URI, which CloudFront uses as the value of the report directive in the `X-XSS-Protection` header. You cannot specify a `reportUri` when `modeBlock` is `true`.
	ReportUri pulumix.Input[*string] `pulumi:"reportUri"`
}

func (ResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigXssProtection)(nil)).Elem()
}

func (i ResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs) ToResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput() ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigXssProtectionOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs) ToResponseHeadersPolicySecurityHeadersConfigXssProtectionOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput)
}

func (i *ResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigXssProtection)(nil)).Elem()
}

func (o ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ToResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput() ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ToResponseHeadersPolicySecurityHeadersConfigXssProtectionOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigXssProtection] {
	return pulumix.Output[ResponseHeadersPolicySecurityHeadersConfigXssProtection]{
		OutputState: o.OutputState,
	}
}

// Whether CloudFront includes the `mode=block` directive in the `X-XSS-Protection` header.
func (o ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ModeBlock() pulumix.Output[*bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigXssProtection](o, func(v ResponseHeadersPolicySecurityHeadersConfigXssProtection) *bool { return v.ModeBlock })
}

// Whether CloudFront overrides the `X-XSS-Protection` HTTP response header received from the origin with the one specified in this response headers policy.
func (o ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigXssProtection](o, func(v ResponseHeadersPolicySecurityHeadersConfigXssProtection) bool { return v.Override })
}

// A Boolean value that determines the value of the `X-XSS-Protection` HTTP response header. When this setting is `true`, the value of the `X-XSS-Protection` header is `1`. When this setting is `false`, the value of the `X-XSS-Protection` header is `0`.
func (o ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) Protection() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigXssProtection](o, func(v ResponseHeadersPolicySecurityHeadersConfigXssProtection) bool { return v.Protection })
}

// A reporting URI, which CloudFront uses as the value of the report directive in the `X-XSS-Protection` header. You cannot specify a `reportUri` when `modeBlock` is `true`.
func (o ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ReportUri() pulumix.Output[*string] {
	return pulumix.Apply[ResponseHeadersPolicySecurityHeadersConfigXssProtection](o, func(v ResponseHeadersPolicySecurityHeadersConfigXssProtection) *string { return v.ReportUri })
}

type ResponseHeadersPolicyServerTimingHeadersConfig struct {
	// A Whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.
	Enabled bool `pulumi:"enabled"`
	// A number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to. Valid range: Minimum value of 0.0. Maximum value of 100.0.
	SamplingRate float64 `pulumi:"samplingRate"`
}

type ResponseHeadersPolicyServerTimingHeadersConfigArgs struct {
	// A Whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.
	Enabled pulumix.Input[bool] `pulumi:"enabled"`
	// A number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to. Valid range: Minimum value of 0.0. Maximum value of 100.0.
	SamplingRate pulumix.Input[float64] `pulumi:"samplingRate"`
}

func (ResponseHeadersPolicyServerTimingHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyServerTimingHeadersConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicyServerTimingHeadersConfigArgs) ToResponseHeadersPolicyServerTimingHeadersConfigOutput() ResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return i.ToResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyServerTimingHeadersConfigArgs) ToResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyServerTimingHeadersConfigOutput)
}

func (i *ResponseHeadersPolicyServerTimingHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ResponseHeadersPolicyServerTimingHeadersConfigArgs] {
	return pulumix.Val(i)
}

type ResponseHeadersPolicyServerTimingHeadersConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyServerTimingHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyServerTimingHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) ToResponseHeadersPolicyServerTimingHeadersConfigOutput() ResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) ToResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ResponseHeadersPolicyServerTimingHeadersConfig] {
	return pulumix.Output[ResponseHeadersPolicyServerTimingHeadersConfig]{
		OutputState: o.OutputState,
	}
}

// A Whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.
func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) Enabled() pulumix.Output[bool] {
	return pulumix.Apply[ResponseHeadersPolicyServerTimingHeadersConfig](o, func(v ResponseHeadersPolicyServerTimingHeadersConfig) bool { return v.Enabled })
}

// A number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to. Valid range: Minimum value of 0.0. Maximum value of 100.0.
func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) SamplingRate() pulumix.Output[float64] {
	return pulumix.Apply[ResponseHeadersPolicyServerTimingHeadersConfig](o, func(v ResponseHeadersPolicyServerTimingHeadersConfig) float64 { return v.SamplingRate })
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOrigin struct {
	// Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
	CookiesConfigs []GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig `pulumi:"cookiesConfigs"`
	// A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
	EnableAcceptEncodingBrotli bool `pulumi:"enableAcceptEncodingBrotli"`
	// A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
	EnableAcceptEncodingGzip bool `pulumi:"enableAcceptEncodingGzip"`
	// Object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
	HeadersConfigs []GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig `pulumi:"headersConfigs"`
	// Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Query String Config for more information.
	QueryStringsConfigs []GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig `pulumi:"queryStringsConfigs"`
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginArgs struct {
	// Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
	CookiesConfigs pulumix.Input[[]*GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs] `pulumi:"cookiesConfigs"`
	// A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
	EnableAcceptEncodingBrotli pulumix.Input[bool] `pulumi:"enableAcceptEncodingBrotli"`
	// A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
	EnableAcceptEncodingGzip pulumix.Input[bool] `pulumi:"enableAcceptEncodingGzip"`
	// Object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
	HeadersConfigs pulumix.Input[[]*GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs] `pulumi:"headersConfigs"`
	// Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Query String Config for more information.
	QueryStringsConfigs pulumix.Input[[]*GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs] `pulumi:"queryStringsConfigs"`
}

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOrigin)(nil)).Elem()
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return i.ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(context.Background())
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput)
}

func (i *GetCachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCachePolicyParametersInCacheKeyAndForwardedToOriginArgs] {
	return pulumix.Val(i)
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput struct{ *pulumi.OutputState }

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOrigin)(nil)).Elem()
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ToOutput(ctx context.Context) pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOrigin] {
	return pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOrigin]{
		OutputState: o.OutputState,
	}
}

// Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput) CookiesConfigs() pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig, GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput] {
	value := pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOrigin) []GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig {
		return v.CookiesConfigs
	})
	return pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig, GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput]{OutputState: value.OutputState}
}

// A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput) EnableAcceptEncodingBrotli() pulumix.Output[bool] {
	return pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOrigin) bool {
		return v.EnableAcceptEncodingBrotli
	})
}

// A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput) EnableAcceptEncodingGzip() pulumix.Output[bool] {
	return pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOrigin) bool { return v.EnableAcceptEncodingGzip })
}

// Object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput) HeadersConfigs() pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig, GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput] {
	value := pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOrigin) []GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig {
		return v.HeadersConfigs
	})
	return pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig, GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput]{OutputState: value.OutputState}
}

// Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Query String Config for more information.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput) QueryStringsConfigs() pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig, GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput] {
	value := pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOrigin](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOrigin) []GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {
		return v.QueryStringsConfigs
	})
	return pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig, GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput]{OutputState: value.OutputState}
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig struct {
	// Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.
	CookieBehavior string `pulumi:"cookieBehavior"`
	// Object that contains a list of cookie names. See Items for more information.
	Cookies []GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie `pulumi:"cookies"`
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs struct {
	// Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.
	CookieBehavior pulumix.Input[string] `pulumi:"cookieBehavior"`
	// Object that contains a list of cookie names. See Items for more information.
	Cookies pulumix.Input[[]*GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieArgs] `pulumi:"cookies"`
}

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig)(nil)).Elem()
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput {
	return i.ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutputWithContext(context.Background())
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput)
}

func (i *GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs] {
	return pulumix.Val(i)
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput struct{ *pulumi.OutputState }

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig)(nil)).Elem()
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig] {
	return pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig]{
		OutputState: o.OutputState,
	}
}

// Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) CookieBehavior() pulumix.Output[string] {
	return pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig) string {
		return v.CookieBehavior
	})
}

// Object that contains a list of cookie names. See Items for more information.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput) Cookies() pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie, GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput] {
	value := pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfig) []GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie {
		return v.Cookies
	})
	return pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie, GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput]{OutputState: value.OutputState}
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie struct {
	// List of item names (`cookies`, `headers`, or `queryStrings`).
	Items []string `pulumi:"items"`
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieArgs struct {
	// List of item names (`cookies`, `headers`, or `queryStrings`).
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie)(nil)).Elem()
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput {
	return i.ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutputWithContext(context.Background())
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput)
}

func (i *GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieArgs] {
	return pulumix.Val(i)
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput struct{ *pulumi.OutputState }

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie)(nil)).Elem()
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput) ToOutput(ctx context.Context) pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie] {
	return pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie]{
		OutputState: o.OutputState,
	}
}

// List of item names (`cookies`, `headers`, or `queryStrings`).
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookie) []string {
		return v.Items
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig struct {
	// Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`.
	HeaderBehavior string `pulumi:"headerBehavior"`
	// Object that contains a list of header names. See Items for more information.
	Headers []GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader `pulumi:"headers"`
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs struct {
	// Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`.
	HeaderBehavior pulumix.Input[string] `pulumi:"headerBehavior"`
	// Object that contains a list of header names. See Items for more information.
	Headers pulumix.Input[[]*GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderArgs] `pulumi:"headers"`
}

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig)(nil)).Elem()
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput {
	return i.ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutputWithContext(context.Background())
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput)
}

func (i *GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs] {
	return pulumix.Val(i)
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput struct{ *pulumi.OutputState }

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig)(nil)).Elem()
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig] {
	return pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig]{
		OutputState: o.OutputState,
	}
}

// Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) HeaderBehavior() pulumix.Output[string] {
	return pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig) string {
		return v.HeaderBehavior
	})
}

// Object that contains a list of header names. See Items for more information.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput) Headers() pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader, GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput] {
	value := pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfig) []GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader, GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput]{OutputState: value.OutputState}
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader struct {
	// List of item names (`cookies`, `headers`, or `queryStrings`).
	Items []string `pulumi:"items"`
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderArgs struct {
	// List of item names (`cookies`, `headers`, or `queryStrings`).
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader)(nil)).Elem()
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput {
	return i.ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutputWithContext(context.Background())
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput)
}

func (i *GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderArgs] {
	return pulumix.Val(i)
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput struct{ *pulumi.OutputState }

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader)(nil)).Elem()
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader] {
	return pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader]{
		OutputState: o.OutputState,
	}
}

// List of item names (`cookies`, `headers`, or `queryStrings`).
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeader) []string {
		return v.Items
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig struct {
	// Determines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.
	QueryStringBehavior string `pulumi:"queryStringBehavior"`
	// Object that contains a list of query string names. See Items for more information.
	QueryStrings []GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString `pulumi:"queryStrings"`
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs struct {
	// Determines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.
	QueryStringBehavior pulumix.Input[string] `pulumi:"queryStringBehavior"`
	// Object that contains a list of query string names. See Items for more information.
	QueryStrings pulumix.Input[[]*GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringArgs] `pulumi:"queryStrings"`
}

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig)(nil)).Elem()
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput {
	return i.ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutputWithContext(context.Background())
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput)
}

func (i *GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs] {
	return pulumix.Val(i)
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput struct{ *pulumi.OutputState }

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig)(nil)).Elem()
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig] {
	return pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig]{
		OutputState: o.OutputState,
	}
}

// Determines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) QueryStringBehavior() pulumix.Output[string] {
	return pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig) string {
		return v.QueryStringBehavior
	})
}

// Object that contains a list of query string names. See Items for more information.
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput) QueryStrings() pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString, GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput] {
	value := pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig) []GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString {
		return v.QueryStrings
	})
	return pulumix.GArrayOutput[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString, GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput]{OutputState: value.OutputState}
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString struct {
	// List of item names (`cookies`, `headers`, or `queryStrings`).
	Items []string `pulumi:"items"`
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringArgs struct {
	// List of item names (`cookies`, `headers`, or `queryStrings`).
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString)(nil)).Elem()
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput {
	return i.ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutputWithContext(context.Background())
}

func (i GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringArgs) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput)
}

func (i *GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringArgs] {
	return pulumix.Val(i)
}

type GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput struct{ *pulumi.OutputState }

func (GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString)(nil)).Elem()
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput() GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput) ToGetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutputWithContext(ctx context.Context) GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput {
	return o
}

func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString] {
	return pulumix.Output[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString]{
		OutputState: o.OutputState,
	}
}

// List of item names (`cookies`, `headers`, or `queryStrings`).
func (o GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString](o, func(v GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryString) []string {
		return v.Items
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetOriginRequestPolicyCookiesConfig struct {
	CookieBehavior string                                      `pulumi:"cookieBehavior"`
	Cookies        []GetOriginRequestPolicyCookiesConfigCookie `pulumi:"cookies"`
}

type GetOriginRequestPolicyCookiesConfigArgs struct {
	CookieBehavior pulumix.Input[string]                                           `pulumi:"cookieBehavior"`
	Cookies        pulumix.Input[[]*GetOriginRequestPolicyCookiesConfigCookieArgs] `pulumi:"cookies"`
}

func (GetOriginRequestPolicyCookiesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyCookiesConfig)(nil)).Elem()
}

func (i GetOriginRequestPolicyCookiesConfigArgs) ToGetOriginRequestPolicyCookiesConfigOutput() GetOriginRequestPolicyCookiesConfigOutput {
	return i.ToGetOriginRequestPolicyCookiesConfigOutputWithContext(context.Background())
}

func (i GetOriginRequestPolicyCookiesConfigArgs) ToGetOriginRequestPolicyCookiesConfigOutputWithContext(ctx context.Context) GetOriginRequestPolicyCookiesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOriginRequestPolicyCookiesConfigOutput)
}

func (i *GetOriginRequestPolicyCookiesConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetOriginRequestPolicyCookiesConfigArgs] {
	return pulumix.Val(i)
}

type GetOriginRequestPolicyCookiesConfigOutput struct{ *pulumi.OutputState }

func (GetOriginRequestPolicyCookiesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyCookiesConfig)(nil)).Elem()
}

func (o GetOriginRequestPolicyCookiesConfigOutput) ToGetOriginRequestPolicyCookiesConfigOutput() GetOriginRequestPolicyCookiesConfigOutput {
	return o
}

func (o GetOriginRequestPolicyCookiesConfigOutput) ToGetOriginRequestPolicyCookiesConfigOutputWithContext(ctx context.Context) GetOriginRequestPolicyCookiesConfigOutput {
	return o
}

func (o GetOriginRequestPolicyCookiesConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetOriginRequestPolicyCookiesConfig] {
	return pulumix.Output[GetOriginRequestPolicyCookiesConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetOriginRequestPolicyCookiesConfigOutput) CookieBehavior() pulumix.Output[string] {
	return pulumix.Apply[GetOriginRequestPolicyCookiesConfig](o, func(v GetOriginRequestPolicyCookiesConfig) string { return v.CookieBehavior })
}

func (o GetOriginRequestPolicyCookiesConfigOutput) Cookies() pulumix.GArrayOutput[GetOriginRequestPolicyCookiesConfigCookie, GetOriginRequestPolicyCookiesConfigCookieOutput] {
	value := pulumix.Apply[GetOriginRequestPolicyCookiesConfig](o, func(v GetOriginRequestPolicyCookiesConfig) []GetOriginRequestPolicyCookiesConfigCookie {
		return v.Cookies
	})
	return pulumix.GArrayOutput[GetOriginRequestPolicyCookiesConfigCookie, GetOriginRequestPolicyCookiesConfigCookieOutput]{OutputState: value.OutputState}
}

type GetOriginRequestPolicyCookiesConfigCookie struct {
	Items []string `pulumi:"items"`
}

type GetOriginRequestPolicyCookiesConfigCookieArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetOriginRequestPolicyCookiesConfigCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyCookiesConfigCookie)(nil)).Elem()
}

func (i GetOriginRequestPolicyCookiesConfigCookieArgs) ToGetOriginRequestPolicyCookiesConfigCookieOutput() GetOriginRequestPolicyCookiesConfigCookieOutput {
	return i.ToGetOriginRequestPolicyCookiesConfigCookieOutputWithContext(context.Background())
}

func (i GetOriginRequestPolicyCookiesConfigCookieArgs) ToGetOriginRequestPolicyCookiesConfigCookieOutputWithContext(ctx context.Context) GetOriginRequestPolicyCookiesConfigCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOriginRequestPolicyCookiesConfigCookieOutput)
}

func (i *GetOriginRequestPolicyCookiesConfigCookieArgs) ToOutput(ctx context.Context) pulumix.Output[*GetOriginRequestPolicyCookiesConfigCookieArgs] {
	return pulumix.Val(i)
}

type GetOriginRequestPolicyCookiesConfigCookieOutput struct{ *pulumi.OutputState }

func (GetOriginRequestPolicyCookiesConfigCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyCookiesConfigCookie)(nil)).Elem()
}

func (o GetOriginRequestPolicyCookiesConfigCookieOutput) ToGetOriginRequestPolicyCookiesConfigCookieOutput() GetOriginRequestPolicyCookiesConfigCookieOutput {
	return o
}

func (o GetOriginRequestPolicyCookiesConfigCookieOutput) ToGetOriginRequestPolicyCookiesConfigCookieOutputWithContext(ctx context.Context) GetOriginRequestPolicyCookiesConfigCookieOutput {
	return o
}

func (o GetOriginRequestPolicyCookiesConfigCookieOutput) ToOutput(ctx context.Context) pulumix.Output[GetOriginRequestPolicyCookiesConfigCookie] {
	return pulumix.Output[GetOriginRequestPolicyCookiesConfigCookie]{
		OutputState: o.OutputState,
	}
}

func (o GetOriginRequestPolicyCookiesConfigCookieOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetOriginRequestPolicyCookiesConfigCookie](o, func(v GetOriginRequestPolicyCookiesConfigCookie) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetOriginRequestPolicyHeadersConfig struct {
	HeaderBehavior string                                      `pulumi:"headerBehavior"`
	Headers        []GetOriginRequestPolicyHeadersConfigHeader `pulumi:"headers"`
}

type GetOriginRequestPolicyHeadersConfigArgs struct {
	HeaderBehavior pulumix.Input[string]                                           `pulumi:"headerBehavior"`
	Headers        pulumix.Input[[]*GetOriginRequestPolicyHeadersConfigHeaderArgs] `pulumi:"headers"`
}

func (GetOriginRequestPolicyHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyHeadersConfig)(nil)).Elem()
}

func (i GetOriginRequestPolicyHeadersConfigArgs) ToGetOriginRequestPolicyHeadersConfigOutput() GetOriginRequestPolicyHeadersConfigOutput {
	return i.ToGetOriginRequestPolicyHeadersConfigOutputWithContext(context.Background())
}

func (i GetOriginRequestPolicyHeadersConfigArgs) ToGetOriginRequestPolicyHeadersConfigOutputWithContext(ctx context.Context) GetOriginRequestPolicyHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOriginRequestPolicyHeadersConfigOutput)
}

func (i *GetOriginRequestPolicyHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetOriginRequestPolicyHeadersConfigArgs] {
	return pulumix.Val(i)
}

type GetOriginRequestPolicyHeadersConfigOutput struct{ *pulumi.OutputState }

func (GetOriginRequestPolicyHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyHeadersConfig)(nil)).Elem()
}

func (o GetOriginRequestPolicyHeadersConfigOutput) ToGetOriginRequestPolicyHeadersConfigOutput() GetOriginRequestPolicyHeadersConfigOutput {
	return o
}

func (o GetOriginRequestPolicyHeadersConfigOutput) ToGetOriginRequestPolicyHeadersConfigOutputWithContext(ctx context.Context) GetOriginRequestPolicyHeadersConfigOutput {
	return o
}

func (o GetOriginRequestPolicyHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetOriginRequestPolicyHeadersConfig] {
	return pulumix.Output[GetOriginRequestPolicyHeadersConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetOriginRequestPolicyHeadersConfigOutput) HeaderBehavior() pulumix.Output[string] {
	return pulumix.Apply[GetOriginRequestPolicyHeadersConfig](o, func(v GetOriginRequestPolicyHeadersConfig) string { return v.HeaderBehavior })
}

func (o GetOriginRequestPolicyHeadersConfigOutput) Headers() pulumix.GArrayOutput[GetOriginRequestPolicyHeadersConfigHeader, GetOriginRequestPolicyHeadersConfigHeaderOutput] {
	value := pulumix.Apply[GetOriginRequestPolicyHeadersConfig](o, func(v GetOriginRequestPolicyHeadersConfig) []GetOriginRequestPolicyHeadersConfigHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[GetOriginRequestPolicyHeadersConfigHeader, GetOriginRequestPolicyHeadersConfigHeaderOutput]{OutputState: value.OutputState}
}

type GetOriginRequestPolicyHeadersConfigHeader struct {
	Items []string `pulumi:"items"`
}

type GetOriginRequestPolicyHeadersConfigHeaderArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetOriginRequestPolicyHeadersConfigHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyHeadersConfigHeader)(nil)).Elem()
}

func (i GetOriginRequestPolicyHeadersConfigHeaderArgs) ToGetOriginRequestPolicyHeadersConfigHeaderOutput() GetOriginRequestPolicyHeadersConfigHeaderOutput {
	return i.ToGetOriginRequestPolicyHeadersConfigHeaderOutputWithContext(context.Background())
}

func (i GetOriginRequestPolicyHeadersConfigHeaderArgs) ToGetOriginRequestPolicyHeadersConfigHeaderOutputWithContext(ctx context.Context) GetOriginRequestPolicyHeadersConfigHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOriginRequestPolicyHeadersConfigHeaderOutput)
}

func (i *GetOriginRequestPolicyHeadersConfigHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*GetOriginRequestPolicyHeadersConfigHeaderArgs] {
	return pulumix.Val(i)
}

type GetOriginRequestPolicyHeadersConfigHeaderOutput struct{ *pulumi.OutputState }

func (GetOriginRequestPolicyHeadersConfigHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyHeadersConfigHeader)(nil)).Elem()
}

func (o GetOriginRequestPolicyHeadersConfigHeaderOutput) ToGetOriginRequestPolicyHeadersConfigHeaderOutput() GetOriginRequestPolicyHeadersConfigHeaderOutput {
	return o
}

func (o GetOriginRequestPolicyHeadersConfigHeaderOutput) ToGetOriginRequestPolicyHeadersConfigHeaderOutputWithContext(ctx context.Context) GetOriginRequestPolicyHeadersConfigHeaderOutput {
	return o
}

func (o GetOriginRequestPolicyHeadersConfigHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[GetOriginRequestPolicyHeadersConfigHeader] {
	return pulumix.Output[GetOriginRequestPolicyHeadersConfigHeader]{
		OutputState: o.OutputState,
	}
}

func (o GetOriginRequestPolicyHeadersConfigHeaderOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetOriginRequestPolicyHeadersConfigHeader](o, func(v GetOriginRequestPolicyHeadersConfigHeader) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetOriginRequestPolicyQueryStringsConfig struct {
	QueryStringBehavior string                                                `pulumi:"queryStringBehavior"`
	QueryStrings        []GetOriginRequestPolicyQueryStringsConfigQueryString `pulumi:"queryStrings"`
}

type GetOriginRequestPolicyQueryStringsConfigArgs struct {
	QueryStringBehavior pulumix.Input[string]                                                     `pulumi:"queryStringBehavior"`
	QueryStrings        pulumix.Input[[]*GetOriginRequestPolicyQueryStringsConfigQueryStringArgs] `pulumi:"queryStrings"`
}

func (GetOriginRequestPolicyQueryStringsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyQueryStringsConfig)(nil)).Elem()
}

func (i GetOriginRequestPolicyQueryStringsConfigArgs) ToGetOriginRequestPolicyQueryStringsConfigOutput() GetOriginRequestPolicyQueryStringsConfigOutput {
	return i.ToGetOriginRequestPolicyQueryStringsConfigOutputWithContext(context.Background())
}

func (i GetOriginRequestPolicyQueryStringsConfigArgs) ToGetOriginRequestPolicyQueryStringsConfigOutputWithContext(ctx context.Context) GetOriginRequestPolicyQueryStringsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOriginRequestPolicyQueryStringsConfigOutput)
}

func (i *GetOriginRequestPolicyQueryStringsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetOriginRequestPolicyQueryStringsConfigArgs] {
	return pulumix.Val(i)
}

type GetOriginRequestPolicyQueryStringsConfigOutput struct{ *pulumi.OutputState }

func (GetOriginRequestPolicyQueryStringsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyQueryStringsConfig)(nil)).Elem()
}

func (o GetOriginRequestPolicyQueryStringsConfigOutput) ToGetOriginRequestPolicyQueryStringsConfigOutput() GetOriginRequestPolicyQueryStringsConfigOutput {
	return o
}

func (o GetOriginRequestPolicyQueryStringsConfigOutput) ToGetOriginRequestPolicyQueryStringsConfigOutputWithContext(ctx context.Context) GetOriginRequestPolicyQueryStringsConfigOutput {
	return o
}

func (o GetOriginRequestPolicyQueryStringsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetOriginRequestPolicyQueryStringsConfig] {
	return pulumix.Output[GetOriginRequestPolicyQueryStringsConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetOriginRequestPolicyQueryStringsConfigOutput) QueryStringBehavior() pulumix.Output[string] {
	return pulumix.Apply[GetOriginRequestPolicyQueryStringsConfig](o, func(v GetOriginRequestPolicyQueryStringsConfig) string { return v.QueryStringBehavior })
}

func (o GetOriginRequestPolicyQueryStringsConfigOutput) QueryStrings() pulumix.GArrayOutput[GetOriginRequestPolicyQueryStringsConfigQueryString, GetOriginRequestPolicyQueryStringsConfigQueryStringOutput] {
	value := pulumix.Apply[GetOriginRequestPolicyQueryStringsConfig](o, func(v GetOriginRequestPolicyQueryStringsConfig) []GetOriginRequestPolicyQueryStringsConfigQueryString {
		return v.QueryStrings
	})
	return pulumix.GArrayOutput[GetOriginRequestPolicyQueryStringsConfigQueryString, GetOriginRequestPolicyQueryStringsConfigQueryStringOutput]{OutputState: value.OutputState}
}

type GetOriginRequestPolicyQueryStringsConfigQueryString struct {
	Items []string `pulumi:"items"`
}

type GetOriginRequestPolicyQueryStringsConfigQueryStringArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetOriginRequestPolicyQueryStringsConfigQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyQueryStringsConfigQueryString)(nil)).Elem()
}

func (i GetOriginRequestPolicyQueryStringsConfigQueryStringArgs) ToGetOriginRequestPolicyQueryStringsConfigQueryStringOutput() GetOriginRequestPolicyQueryStringsConfigQueryStringOutput {
	return i.ToGetOriginRequestPolicyQueryStringsConfigQueryStringOutputWithContext(context.Background())
}

func (i GetOriginRequestPolicyQueryStringsConfigQueryStringArgs) ToGetOriginRequestPolicyQueryStringsConfigQueryStringOutputWithContext(ctx context.Context) GetOriginRequestPolicyQueryStringsConfigQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOriginRequestPolicyQueryStringsConfigQueryStringOutput)
}

func (i *GetOriginRequestPolicyQueryStringsConfigQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*GetOriginRequestPolicyQueryStringsConfigQueryStringArgs] {
	return pulumix.Val(i)
}

type GetOriginRequestPolicyQueryStringsConfigQueryStringOutput struct{ *pulumi.OutputState }

func (GetOriginRequestPolicyQueryStringsConfigQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOriginRequestPolicyQueryStringsConfigQueryString)(nil)).Elem()
}

func (o GetOriginRequestPolicyQueryStringsConfigQueryStringOutput) ToGetOriginRequestPolicyQueryStringsConfigQueryStringOutput() GetOriginRequestPolicyQueryStringsConfigQueryStringOutput {
	return o
}

func (o GetOriginRequestPolicyQueryStringsConfigQueryStringOutput) ToGetOriginRequestPolicyQueryStringsConfigQueryStringOutputWithContext(ctx context.Context) GetOriginRequestPolicyQueryStringsConfigQueryStringOutput {
	return o
}

func (o GetOriginRequestPolicyQueryStringsConfigQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[GetOriginRequestPolicyQueryStringsConfigQueryString] {
	return pulumix.Output[GetOriginRequestPolicyQueryStringsConfigQueryString]{
		OutputState: o.OutputState,
	}
}

func (o GetOriginRequestPolicyQueryStringsConfigQueryStringOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetOriginRequestPolicyQueryStringsConfigQueryString](o, func(v GetOriginRequestPolicyQueryStringsConfigQueryString) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetRealtimeLogConfigEndpoint struct {
	// (Required) Amazon Kinesis data stream configuration.
	KinesisStreamConfigs []GetRealtimeLogConfigEndpointKinesisStreamConfig `pulumi:"kinesisStreamConfigs"`
	// (Required) Type of data stream where real-time log data is sent. The only valid value is `Kinesis`.
	StreamType string `pulumi:"streamType"`
}

type GetRealtimeLogConfigEndpointArgs struct {
	// (Required) Amazon Kinesis data stream configuration.
	KinesisStreamConfigs pulumix.Input[[]*GetRealtimeLogConfigEndpointKinesisStreamConfigArgs] `pulumi:"kinesisStreamConfigs"`
	// (Required) Type of data stream where real-time log data is sent. The only valid value is `Kinesis`.
	StreamType pulumix.Input[string] `pulumi:"streamType"`
}

func (GetRealtimeLogConfigEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRealtimeLogConfigEndpoint)(nil)).Elem()
}

func (i GetRealtimeLogConfigEndpointArgs) ToGetRealtimeLogConfigEndpointOutput() GetRealtimeLogConfigEndpointOutput {
	return i.ToGetRealtimeLogConfigEndpointOutputWithContext(context.Background())
}

func (i GetRealtimeLogConfigEndpointArgs) ToGetRealtimeLogConfigEndpointOutputWithContext(ctx context.Context) GetRealtimeLogConfigEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRealtimeLogConfigEndpointOutput)
}

func (i *GetRealtimeLogConfigEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRealtimeLogConfigEndpointArgs] {
	return pulumix.Val(i)
}

type GetRealtimeLogConfigEndpointOutput struct{ *pulumi.OutputState }

func (GetRealtimeLogConfigEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRealtimeLogConfigEndpoint)(nil)).Elem()
}

func (o GetRealtimeLogConfigEndpointOutput) ToGetRealtimeLogConfigEndpointOutput() GetRealtimeLogConfigEndpointOutput {
	return o
}

func (o GetRealtimeLogConfigEndpointOutput) ToGetRealtimeLogConfigEndpointOutputWithContext(ctx context.Context) GetRealtimeLogConfigEndpointOutput {
	return o
}

func (o GetRealtimeLogConfigEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetRealtimeLogConfigEndpoint] {
	return pulumix.Output[GetRealtimeLogConfigEndpoint]{
		OutputState: o.OutputState,
	}
}

// (Required) Amazon Kinesis data stream configuration.
func (o GetRealtimeLogConfigEndpointOutput) KinesisStreamConfigs() pulumix.GArrayOutput[GetRealtimeLogConfigEndpointKinesisStreamConfig, GetRealtimeLogConfigEndpointKinesisStreamConfigOutput] {
	value := pulumix.Apply[GetRealtimeLogConfigEndpoint](o, func(v GetRealtimeLogConfigEndpoint) []GetRealtimeLogConfigEndpointKinesisStreamConfig {
		return v.KinesisStreamConfigs
	})
	return pulumix.GArrayOutput[GetRealtimeLogConfigEndpointKinesisStreamConfig, GetRealtimeLogConfigEndpointKinesisStreamConfigOutput]{OutputState: value.OutputState}
}

// (Required) Type of data stream where real-time log data is sent. The only valid value is `Kinesis`.
func (o GetRealtimeLogConfigEndpointOutput) StreamType() pulumix.Output[string] {
	return pulumix.Apply[GetRealtimeLogConfigEndpoint](o, func(v GetRealtimeLogConfigEndpoint) string { return v.StreamType })
}

type GetRealtimeLogConfigEndpointKinesisStreamConfig struct {
	// (Required) ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
	// See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
	RoleArn string `pulumi:"roleArn"`
	// (Required) ARN of the Kinesis data stream.
	StreamArn string `pulumi:"streamArn"`
}

type GetRealtimeLogConfigEndpointKinesisStreamConfigArgs struct {
	// (Required) ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
	// See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
	RoleArn pulumix.Input[string] `pulumi:"roleArn"`
	// (Required) ARN of the Kinesis data stream.
	StreamArn pulumix.Input[string] `pulumi:"streamArn"`
}

func (GetRealtimeLogConfigEndpointKinesisStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRealtimeLogConfigEndpointKinesisStreamConfig)(nil)).Elem()
}

func (i GetRealtimeLogConfigEndpointKinesisStreamConfigArgs) ToGetRealtimeLogConfigEndpointKinesisStreamConfigOutput() GetRealtimeLogConfigEndpointKinesisStreamConfigOutput {
	return i.ToGetRealtimeLogConfigEndpointKinesisStreamConfigOutputWithContext(context.Background())
}

func (i GetRealtimeLogConfigEndpointKinesisStreamConfigArgs) ToGetRealtimeLogConfigEndpointKinesisStreamConfigOutputWithContext(ctx context.Context) GetRealtimeLogConfigEndpointKinesisStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRealtimeLogConfigEndpointKinesisStreamConfigOutput)
}

func (i *GetRealtimeLogConfigEndpointKinesisStreamConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRealtimeLogConfigEndpointKinesisStreamConfigArgs] {
	return pulumix.Val(i)
}

type GetRealtimeLogConfigEndpointKinesisStreamConfigOutput struct{ *pulumi.OutputState }

func (GetRealtimeLogConfigEndpointKinesisStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRealtimeLogConfigEndpointKinesisStreamConfig)(nil)).Elem()
}

func (o GetRealtimeLogConfigEndpointKinesisStreamConfigOutput) ToGetRealtimeLogConfigEndpointKinesisStreamConfigOutput() GetRealtimeLogConfigEndpointKinesisStreamConfigOutput {
	return o
}

func (o GetRealtimeLogConfigEndpointKinesisStreamConfigOutput) ToGetRealtimeLogConfigEndpointKinesisStreamConfigOutputWithContext(ctx context.Context) GetRealtimeLogConfigEndpointKinesisStreamConfigOutput {
	return o
}

func (o GetRealtimeLogConfigEndpointKinesisStreamConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetRealtimeLogConfigEndpointKinesisStreamConfig] {
	return pulumix.Output[GetRealtimeLogConfigEndpointKinesisStreamConfig]{
		OutputState: o.OutputState,
	}
}

// (Required) ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
// See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
func (o GetRealtimeLogConfigEndpointKinesisStreamConfigOutput) RoleArn() pulumix.Output[string] {
	return pulumix.Apply[GetRealtimeLogConfigEndpointKinesisStreamConfig](o, func(v GetRealtimeLogConfigEndpointKinesisStreamConfig) string { return v.RoleArn })
}

// (Required) ARN of the Kinesis data stream.
func (o GetRealtimeLogConfigEndpointKinesisStreamConfigOutput) StreamArn() pulumix.Output[string] {
	return pulumix.Apply[GetRealtimeLogConfigEndpointKinesisStreamConfig](o, func(v GetRealtimeLogConfigEndpointKinesisStreamConfig) string { return v.StreamArn })
}

type GetResponseHeadersPolicyCorsConfig struct {
	// A Boolean value that CloudFront uses as the value for the Access-Control-Allow-Credentials HTTP response header.
	AccessControlAllowCredentials bool `pulumi:"accessControlAllowCredentials"`
	// Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the Access-Control-Allow-Headers HTTP response header.
	AccessControlAllowHeaders []GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader `pulumi:"accessControlAllowHeaders"`
	// Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the Access-Control-Allow-Methods HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`
	AccessControlAllowMethods []GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod `pulumi:"accessControlAllowMethods"`
	// Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the Access-Control-Allow-Origin HTTP response header.
	AccessControlAllowOrigins []GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin `pulumi:"accessControlAllowOrigins"`
	// Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the Access-Control-Expose-Headers HTTP response header.
	AccessControlExposeHeaders []GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader `pulumi:"accessControlExposeHeaders"`
	// A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
	AccessControlMaxAgeSec int  `pulumi:"accessControlMaxAgeSec"`
	OriginOverride         bool `pulumi:"originOverride"`
}

type GetResponseHeadersPolicyCorsConfigArgs struct {
	// A Boolean value that CloudFront uses as the value for the Access-Control-Allow-Credentials HTTP response header.
	AccessControlAllowCredentials pulumix.Input[bool] `pulumi:"accessControlAllowCredentials"`
	// Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the Access-Control-Allow-Headers HTTP response header.
	AccessControlAllowHeaders pulumix.Input[[]*GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderArgs] `pulumi:"accessControlAllowHeaders"`
	// Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the Access-Control-Allow-Methods HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`
	AccessControlAllowMethods pulumix.Input[[]*GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodArgs] `pulumi:"accessControlAllowMethods"`
	// Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the Access-Control-Allow-Origin HTTP response header.
	AccessControlAllowOrigins pulumix.Input[[]*GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginArgs] `pulumi:"accessControlAllowOrigins"`
	// Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the Access-Control-Expose-Headers HTTP response header.
	AccessControlExposeHeaders pulumix.Input[[]*GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderArgs] `pulumi:"accessControlExposeHeaders"`
	// A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
	AccessControlMaxAgeSec pulumix.Input[int]  `pulumi:"accessControlMaxAgeSec"`
	OriginOverride         pulumix.Input[bool] `pulumi:"originOverride"`
}

func (GetResponseHeadersPolicyCorsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfig)(nil)).Elem()
}

func (i GetResponseHeadersPolicyCorsConfigArgs) ToGetResponseHeadersPolicyCorsConfigOutput() GetResponseHeadersPolicyCorsConfigOutput {
	return i.ToGetResponseHeadersPolicyCorsConfigOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyCorsConfigArgs) ToGetResponseHeadersPolicyCorsConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyCorsConfigOutput)
}

func (i *GetResponseHeadersPolicyCorsConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyCorsConfigArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyCorsConfigOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyCorsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfig)(nil)).Elem()
}

func (o GetResponseHeadersPolicyCorsConfigOutput) ToGetResponseHeadersPolicyCorsConfigOutput() GetResponseHeadersPolicyCorsConfigOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigOutput) ToGetResponseHeadersPolicyCorsConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyCorsConfig] {
	return pulumix.Output[GetResponseHeadersPolicyCorsConfig]{
		OutputState: o.OutputState,
	}
}

// A Boolean value that CloudFront uses as the value for the Access-Control-Allow-Credentials HTTP response header.
func (o GetResponseHeadersPolicyCorsConfigOutput) AccessControlAllowCredentials() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicyCorsConfig](o, func(v GetResponseHeadersPolicyCorsConfig) bool { return v.AccessControlAllowCredentials })
}

// Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the Access-Control-Allow-Headers HTTP response header.
func (o GetResponseHeadersPolicyCorsConfigOutput) AccessControlAllowHeaders() pulumix.GArrayOutput[GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader, GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicyCorsConfig](o, func(v GetResponseHeadersPolicyCorsConfig) []GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader {
		return v.AccessControlAllowHeaders
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader, GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput]{OutputState: value.OutputState}
}

// Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the Access-Control-Allow-Methods HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`
func (o GetResponseHeadersPolicyCorsConfigOutput) AccessControlAllowMethods() pulumix.GArrayOutput[GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod, GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicyCorsConfig](o, func(v GetResponseHeadersPolicyCorsConfig) []GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod {
		return v.AccessControlAllowMethods
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod, GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput]{OutputState: value.OutputState}
}

// Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the Access-Control-Allow-Origin HTTP response header.
func (o GetResponseHeadersPolicyCorsConfigOutput) AccessControlAllowOrigins() pulumix.GArrayOutput[GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin, GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicyCorsConfig](o, func(v GetResponseHeadersPolicyCorsConfig) []GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin {
		return v.AccessControlAllowOrigins
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin, GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput]{OutputState: value.OutputState}
}

// Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the Access-Control-Expose-Headers HTTP response header.
func (o GetResponseHeadersPolicyCorsConfigOutput) AccessControlExposeHeaders() pulumix.GArrayOutput[GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader, GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicyCorsConfig](o, func(v GetResponseHeadersPolicyCorsConfig) []GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader {
		return v.AccessControlExposeHeaders
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader, GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput]{OutputState: value.OutputState}
}

// A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
func (o GetResponseHeadersPolicyCorsConfigOutput) AccessControlMaxAgeSec() pulumix.Output[int] {
	return pulumix.Apply[GetResponseHeadersPolicyCorsConfig](o, func(v GetResponseHeadersPolicyCorsConfig) int { return v.AccessControlMaxAgeSec })
}

func (o GetResponseHeadersPolicyCorsConfigOutput) OriginOverride() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicyCorsConfig](o, func(v GetResponseHeadersPolicyCorsConfig) bool { return v.OriginOverride })
}

type GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader struct {
	Items []string `pulumi:"items"`
}

type GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader)(nil)).Elem()
}

func (i GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderArgs) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput() GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput {
	return i.ToGetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderArgs) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput)
}

func (i *GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader)(nil)).Elem()
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput() GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader] {
	return pulumix.Output[GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader]{
		OutputState: o.OutputState,
	}
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader](o, func(v GetResponseHeadersPolicyCorsConfigAccessControlAllowHeader) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod struct {
	Items []string `pulumi:"items"`
}

type GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod)(nil)).Elem()
}

func (i GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodArgs) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput() GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput {
	return i.ToGetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodArgs) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput)
}

func (i *GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod)(nil)).Elem()
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput() GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod] {
	return pulumix.Output[GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod]{
		OutputState: o.OutputState,
	}
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod](o, func(v GetResponseHeadersPolicyCorsConfigAccessControlAllowMethod) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin struct {
	Items []string `pulumi:"items"`
}

type GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin)(nil)).Elem()
}

func (i GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginArgs) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput() GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput {
	return i.ToGetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginArgs) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput)
}

func (i *GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin)(nil)).Elem()
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput() GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput) ToGetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin] {
	return pulumix.Output[GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin]{
		OutputState: o.OutputState,
	}
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin](o, func(v GetResponseHeadersPolicyCorsConfigAccessControlAllowOrigin) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader struct {
	Items []string `pulumi:"items"`
}

type GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderArgs struct {
	Items pulumix.Input[[]string] `pulumi:"items"`
}

func (GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader)(nil)).Elem()
}

func (i GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderArgs) ToGetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput() GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput {
	return i.ToGetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderArgs) ToGetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput)
}

func (i *GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader)(nil)).Elem()
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput) ToGetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput() GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput) ToGetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput {
	return o
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader] {
	return pulumix.Output[GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader]{
		OutputState: o.OutputState,
	}
}

func (o GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput) Items() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader](o, func(v GetResponseHeadersPolicyCorsConfigAccessControlExposeHeader) []string { return v.Items })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetResponseHeadersPolicyCustomHeadersConfig struct {
	Items []GetResponseHeadersPolicyCustomHeadersConfigItem `pulumi:"items"`
}

type GetResponseHeadersPolicyCustomHeadersConfigArgs struct {
	Items pulumix.Input[[]*GetResponseHeadersPolicyCustomHeadersConfigItemArgs] `pulumi:"items"`
}

func (GetResponseHeadersPolicyCustomHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCustomHeadersConfig)(nil)).Elem()
}

func (i GetResponseHeadersPolicyCustomHeadersConfigArgs) ToGetResponseHeadersPolicyCustomHeadersConfigOutput() GetResponseHeadersPolicyCustomHeadersConfigOutput {
	return i.ToGetResponseHeadersPolicyCustomHeadersConfigOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyCustomHeadersConfigArgs) ToGetResponseHeadersPolicyCustomHeadersConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCustomHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyCustomHeadersConfigOutput)
}

func (i *GetResponseHeadersPolicyCustomHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyCustomHeadersConfigArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyCustomHeadersConfigOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyCustomHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCustomHeadersConfig)(nil)).Elem()
}

func (o GetResponseHeadersPolicyCustomHeadersConfigOutput) ToGetResponseHeadersPolicyCustomHeadersConfigOutput() GetResponseHeadersPolicyCustomHeadersConfigOutput {
	return o
}

func (o GetResponseHeadersPolicyCustomHeadersConfigOutput) ToGetResponseHeadersPolicyCustomHeadersConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCustomHeadersConfigOutput {
	return o
}

func (o GetResponseHeadersPolicyCustomHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyCustomHeadersConfig] {
	return pulumix.Output[GetResponseHeadersPolicyCustomHeadersConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetResponseHeadersPolicyCustomHeadersConfigOutput) Items() pulumix.GArrayOutput[GetResponseHeadersPolicyCustomHeadersConfigItem, GetResponseHeadersPolicyCustomHeadersConfigItemOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicyCustomHeadersConfig](o, func(v GetResponseHeadersPolicyCustomHeadersConfig) []GetResponseHeadersPolicyCustomHeadersConfigItem {
		return v.Items
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicyCustomHeadersConfigItem, GetResponseHeadersPolicyCustomHeadersConfigItemOutput]{OutputState: value.OutputState}
}

type GetResponseHeadersPolicyCustomHeadersConfigItem struct {
	// The HTTP header name.
	Header string `pulumi:"header"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
	// Value for the HTTP response header.
	Value string `pulumi:"value"`
}

type GetResponseHeadersPolicyCustomHeadersConfigItemArgs struct {
	// The HTTP header name.
	Header pulumix.Input[string] `pulumi:"header"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
	// Value for the HTTP response header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (GetResponseHeadersPolicyCustomHeadersConfigItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCustomHeadersConfigItem)(nil)).Elem()
}

func (i GetResponseHeadersPolicyCustomHeadersConfigItemArgs) ToGetResponseHeadersPolicyCustomHeadersConfigItemOutput() GetResponseHeadersPolicyCustomHeadersConfigItemOutput {
	return i.ToGetResponseHeadersPolicyCustomHeadersConfigItemOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyCustomHeadersConfigItemArgs) ToGetResponseHeadersPolicyCustomHeadersConfigItemOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCustomHeadersConfigItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyCustomHeadersConfigItemOutput)
}

func (i *GetResponseHeadersPolicyCustomHeadersConfigItemArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyCustomHeadersConfigItemArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyCustomHeadersConfigItemOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyCustomHeadersConfigItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyCustomHeadersConfigItem)(nil)).Elem()
}

func (o GetResponseHeadersPolicyCustomHeadersConfigItemOutput) ToGetResponseHeadersPolicyCustomHeadersConfigItemOutput() GetResponseHeadersPolicyCustomHeadersConfigItemOutput {
	return o
}

func (o GetResponseHeadersPolicyCustomHeadersConfigItemOutput) ToGetResponseHeadersPolicyCustomHeadersConfigItemOutputWithContext(ctx context.Context) GetResponseHeadersPolicyCustomHeadersConfigItemOutput {
	return o
}

func (o GetResponseHeadersPolicyCustomHeadersConfigItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyCustomHeadersConfigItem] {
	return pulumix.Output[GetResponseHeadersPolicyCustomHeadersConfigItem]{
		OutputState: o.OutputState,
	}
}

// The HTTP header name.
func (o GetResponseHeadersPolicyCustomHeadersConfigItemOutput) Header() pulumix.Output[string] {
	return pulumix.Apply[GetResponseHeadersPolicyCustomHeadersConfigItem](o, func(v GetResponseHeadersPolicyCustomHeadersConfigItem) string { return v.Header })
}

// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
func (o GetResponseHeadersPolicyCustomHeadersConfigItemOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicyCustomHeadersConfigItem](o, func(v GetResponseHeadersPolicyCustomHeadersConfigItem) bool { return v.Override })
}

// Value for the HTTP response header.
func (o GetResponseHeadersPolicyCustomHeadersConfigItemOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[GetResponseHeadersPolicyCustomHeadersConfigItem](o, func(v GetResponseHeadersPolicyCustomHeadersConfigItem) string { return v.Value })
}

type GetResponseHeadersPolicyRemoveHeadersConfig struct {
	Items []GetResponseHeadersPolicyRemoveHeadersConfigItem `pulumi:"items"`
}

type GetResponseHeadersPolicyRemoveHeadersConfigArgs struct {
	Items pulumix.Input[[]*GetResponseHeadersPolicyRemoveHeadersConfigItemArgs] `pulumi:"items"`
}

func (GetResponseHeadersPolicyRemoveHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyRemoveHeadersConfig)(nil)).Elem()
}

func (i GetResponseHeadersPolicyRemoveHeadersConfigArgs) ToGetResponseHeadersPolicyRemoveHeadersConfigOutput() GetResponseHeadersPolicyRemoveHeadersConfigOutput {
	return i.ToGetResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyRemoveHeadersConfigArgs) ToGetResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicyRemoveHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyRemoveHeadersConfigOutput)
}

func (i *GetResponseHeadersPolicyRemoveHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyRemoveHeadersConfigArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyRemoveHeadersConfigOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyRemoveHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyRemoveHeadersConfig)(nil)).Elem()
}

func (o GetResponseHeadersPolicyRemoveHeadersConfigOutput) ToGetResponseHeadersPolicyRemoveHeadersConfigOutput() GetResponseHeadersPolicyRemoveHeadersConfigOutput {
	return o
}

func (o GetResponseHeadersPolicyRemoveHeadersConfigOutput) ToGetResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicyRemoveHeadersConfigOutput {
	return o
}

func (o GetResponseHeadersPolicyRemoveHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyRemoveHeadersConfig] {
	return pulumix.Output[GetResponseHeadersPolicyRemoveHeadersConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetResponseHeadersPolicyRemoveHeadersConfigOutput) Items() pulumix.GArrayOutput[GetResponseHeadersPolicyRemoveHeadersConfigItem, GetResponseHeadersPolicyRemoveHeadersConfigItemOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicyRemoveHeadersConfig](o, func(v GetResponseHeadersPolicyRemoveHeadersConfig) []GetResponseHeadersPolicyRemoveHeadersConfigItem {
		return v.Items
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicyRemoveHeadersConfigItem, GetResponseHeadersPolicyRemoveHeadersConfigItemOutput]{OutputState: value.OutputState}
}

type GetResponseHeadersPolicyRemoveHeadersConfigItem struct {
	// The HTTP header name.
	Header string `pulumi:"header"`
}

type GetResponseHeadersPolicyRemoveHeadersConfigItemArgs struct {
	// The HTTP header name.
	Header pulumix.Input[string] `pulumi:"header"`
}

func (GetResponseHeadersPolicyRemoveHeadersConfigItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyRemoveHeadersConfigItem)(nil)).Elem()
}

func (i GetResponseHeadersPolicyRemoveHeadersConfigItemArgs) ToGetResponseHeadersPolicyRemoveHeadersConfigItemOutput() GetResponseHeadersPolicyRemoveHeadersConfigItemOutput {
	return i.ToGetResponseHeadersPolicyRemoveHeadersConfigItemOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyRemoveHeadersConfigItemArgs) ToGetResponseHeadersPolicyRemoveHeadersConfigItemOutputWithContext(ctx context.Context) GetResponseHeadersPolicyRemoveHeadersConfigItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyRemoveHeadersConfigItemOutput)
}

func (i *GetResponseHeadersPolicyRemoveHeadersConfigItemArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyRemoveHeadersConfigItemArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyRemoveHeadersConfigItemOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyRemoveHeadersConfigItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyRemoveHeadersConfigItem)(nil)).Elem()
}

func (o GetResponseHeadersPolicyRemoveHeadersConfigItemOutput) ToGetResponseHeadersPolicyRemoveHeadersConfigItemOutput() GetResponseHeadersPolicyRemoveHeadersConfigItemOutput {
	return o
}

func (o GetResponseHeadersPolicyRemoveHeadersConfigItemOutput) ToGetResponseHeadersPolicyRemoveHeadersConfigItemOutputWithContext(ctx context.Context) GetResponseHeadersPolicyRemoveHeadersConfigItemOutput {
	return o
}

func (o GetResponseHeadersPolicyRemoveHeadersConfigItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyRemoveHeadersConfigItem] {
	return pulumix.Output[GetResponseHeadersPolicyRemoveHeadersConfigItem]{
		OutputState: o.OutputState,
	}
}

// The HTTP header name.
func (o GetResponseHeadersPolicyRemoveHeadersConfigItemOutput) Header() pulumix.Output[string] {
	return pulumix.Apply[GetResponseHeadersPolicyRemoveHeadersConfigItem](o, func(v GetResponseHeadersPolicyRemoveHeadersConfigItem) string { return v.Header })
}

type GetResponseHeadersPolicySecurityHeadersConfig struct {
	// The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
	ContentSecurityPolicies []GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy `pulumi:"contentSecurityPolicies"`
	// A setting that determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff. See Content Type Options for more information.
	ContentTypeOptions []GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption `pulumi:"contentTypeOptions"`
	// Setting that determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value. See Frame Options for more information.
	FrameOptions []GetResponseHeadersPolicySecurityHeadersConfigFrameOption `pulumi:"frameOptions"`
	// Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
	ReferrerPolicies []GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy `pulumi:"referrerPolicies"`
	// Settings that determine whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value. See Strict Transport Security for more information.
	StrictTransportSecurities []GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity `pulumi:"strictTransportSecurities"`
	// Settings that determine whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value. See XSS Protection for more information.
	XssProtections []GetResponseHeadersPolicySecurityHeadersConfigXssProtection `pulumi:"xssProtections"`
}

type GetResponseHeadersPolicySecurityHeadersConfigArgs struct {
	// The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
	ContentSecurityPolicies pulumix.Input[[]*GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs] `pulumi:"contentSecurityPolicies"`
	// A setting that determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff. See Content Type Options for more information.
	ContentTypeOptions pulumix.Input[[]*GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionArgs] `pulumi:"contentTypeOptions"`
	// Setting that determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value. See Frame Options for more information.
	FrameOptions pulumix.Input[[]*GetResponseHeadersPolicySecurityHeadersConfigFrameOptionArgs] `pulumi:"frameOptions"`
	// Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
	ReferrerPolicies pulumix.Input[[]*GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs] `pulumi:"referrerPolicies"`
	// Settings that determine whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value. See Strict Transport Security for more information.
	StrictTransportSecurities pulumix.Input[[]*GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs] `pulumi:"strictTransportSecurities"`
	// Settings that determine whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value. See XSS Protection for more information.
	XssProtections pulumix.Input[[]*GetResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs] `pulumi:"xssProtections"`
}

func (GetResponseHeadersPolicySecurityHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfig)(nil)).Elem()
}

func (i GetResponseHeadersPolicySecurityHeadersConfigArgs) ToGetResponseHeadersPolicySecurityHeadersConfigOutput() GetResponseHeadersPolicySecurityHeadersConfigOutput {
	return i.ToGetResponseHeadersPolicySecurityHeadersConfigOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicySecurityHeadersConfigArgs) ToGetResponseHeadersPolicySecurityHeadersConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicySecurityHeadersConfigOutput)
}

func (i *GetResponseHeadersPolicySecurityHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicySecurityHeadersConfigArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicySecurityHeadersConfigOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicySecurityHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfig)(nil)).Elem()
}

func (o GetResponseHeadersPolicySecurityHeadersConfigOutput) ToGetResponseHeadersPolicySecurityHeadersConfigOutput() GetResponseHeadersPolicySecurityHeadersConfigOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigOutput) ToGetResponseHeadersPolicySecurityHeadersConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfig] {
	return pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfig]{
		OutputState: o.OutputState,
	}
}

// The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
func (o GetResponseHeadersPolicySecurityHeadersConfigOutput) ContentSecurityPolicies() pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy, GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfig](o, func(v GetResponseHeadersPolicySecurityHeadersConfig) []GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy {
		return v.ContentSecurityPolicies
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy, GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput]{OutputState: value.OutputState}
}

// A setting that determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff. See Content Type Options for more information.
func (o GetResponseHeadersPolicySecurityHeadersConfigOutput) ContentTypeOptions() pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption, GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfig](o, func(v GetResponseHeadersPolicySecurityHeadersConfig) []GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption {
		return v.ContentTypeOptions
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption, GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput]{OutputState: value.OutputState}
}

// Setting that determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value. See Frame Options for more information.
func (o GetResponseHeadersPolicySecurityHeadersConfigOutput) FrameOptions() pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigFrameOption, GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfig](o, func(v GetResponseHeadersPolicySecurityHeadersConfig) []GetResponseHeadersPolicySecurityHeadersConfigFrameOption {
		return v.FrameOptions
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigFrameOption, GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput]{OutputState: value.OutputState}
}

// Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
func (o GetResponseHeadersPolicySecurityHeadersConfigOutput) ReferrerPolicies() pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy, GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfig](o, func(v GetResponseHeadersPolicySecurityHeadersConfig) []GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy {
		return v.ReferrerPolicies
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy, GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput]{OutputState: value.OutputState}
}

// Settings that determine whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value. See Strict Transport Security for more information.
func (o GetResponseHeadersPolicySecurityHeadersConfigOutput) StrictTransportSecurities() pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity, GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfig](o, func(v GetResponseHeadersPolicySecurityHeadersConfig) []GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity {
		return v.StrictTransportSecurities
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity, GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput]{OutputState: value.OutputState}
}

// Settings that determine whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value. See XSS Protection for more information.
func (o GetResponseHeadersPolicySecurityHeadersConfigOutput) XssProtections() pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigXssProtection, GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput] {
	value := pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfig](o, func(v GetResponseHeadersPolicySecurityHeadersConfig) []GetResponseHeadersPolicySecurityHeadersConfigXssProtection {
		return v.XssProtections
	})
	return pulumix.GArrayOutput[GetResponseHeadersPolicySecurityHeadersConfigXssProtection, GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput]{OutputState: value.OutputState}
}

type GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy struct {
	// The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
	ContentSecurityPolicy string `pulumi:"contentSecurityPolicy"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
}

type GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs struct {
	// The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
	ContentSecurityPolicy pulumix.Input[string] `pulumi:"contentSecurityPolicy"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
}

func (GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy)(nil)).Elem()
}

func (i GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs) ToGetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput() GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput {
	return i.ToGetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs) ToGetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput)
}

func (i *GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy)(nil)).Elem()
}

func (o GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ToGetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput() GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ToGetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy] {
	return pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy]{
		OutputState: o.OutputState,
	}
}

// The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.
func (o GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) ContentSecurityPolicy() pulumix.Output[string] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy](o, func(v GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy) string {
		return v.ContentSecurityPolicy
	})
}

// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
func (o GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy](o, func(v GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicy) bool { return v.Override })
}

type GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption struct {
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
}

type GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionArgs struct {
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
}

func (GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption)(nil)).Elem()
}

func (i GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionArgs) ToGetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput() GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput {
	return i.ToGetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionArgs) ToGetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput)
}

func (i *GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption)(nil)).Elem()
}

func (o GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput) ToGetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput() GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput) ToGetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption] {
	return pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption]{
		OutputState: o.OutputState,
	}
}

// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
func (o GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption](o, func(v GetResponseHeadersPolicySecurityHeadersConfigContentTypeOption) bool { return v.Override })
}

type GetResponseHeadersPolicySecurityHeadersConfigFrameOption struct {
	// Value of the X-Frame-Options HTTP response header. Valid values: `DENY` | `SAMEORIGIN`
	FrameOption string `pulumi:"frameOption"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
}

type GetResponseHeadersPolicySecurityHeadersConfigFrameOptionArgs struct {
	// Value of the X-Frame-Options HTTP response header. Valid values: `DENY` | `SAMEORIGIN`
	FrameOption pulumix.Input[string] `pulumi:"frameOption"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
}

func (GetResponseHeadersPolicySecurityHeadersConfigFrameOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigFrameOption)(nil)).Elem()
}

func (i GetResponseHeadersPolicySecurityHeadersConfigFrameOptionArgs) ToGetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput() GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput {
	return i.ToGetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicySecurityHeadersConfigFrameOptionArgs) ToGetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput)
}

func (i *GetResponseHeadersPolicySecurityHeadersConfigFrameOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicySecurityHeadersConfigFrameOptionArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigFrameOption)(nil)).Elem()
}

func (o GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput) ToGetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput() GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput) ToGetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigFrameOption] {
	return pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigFrameOption]{
		OutputState: o.OutputState,
	}
}

// Value of the X-Frame-Options HTTP response header. Valid values: `DENY` | `SAMEORIGIN`
func (o GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput) FrameOption() pulumix.Output[string] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigFrameOption](o, func(v GetResponseHeadersPolicySecurityHeadersConfigFrameOption) string { return v.FrameOption })
}

// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
func (o GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigFrameOption](o, func(v GetResponseHeadersPolicySecurityHeadersConfigFrameOption) bool { return v.Override })
}

type GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy struct {
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
	// Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
	ReferrerPolicy string `pulumi:"referrerPolicy"`
}

type GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs struct {
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
	// Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
	ReferrerPolicy pulumix.Input[string] `pulumi:"referrerPolicy"`
}

func (GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy)(nil)).Elem()
}

func (i GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs) ToGetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput() GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput {
	return i.ToGetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs) ToGetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput)
}

func (i *GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy)(nil)).Elem()
}

func (o GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ToGetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput() GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ToGetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy] {
	return pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy]{
		OutputState: o.OutputState,
	}
}

// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
func (o GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy](o, func(v GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy) bool { return v.Override })
}

// Value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`
func (o GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput) ReferrerPolicy() pulumix.Output[string] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy](o, func(v GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicy) string { return v.ReferrerPolicy })
}

type GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity struct {
	// A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
	AccessControlMaxAgeSec int `pulumi:"accessControlMaxAgeSec"`
	// Whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.
	IncludeSubdomains bool `pulumi:"includeSubdomains"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
	// Whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.
	Preload bool `pulumi:"preload"`
}

type GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs struct {
	// A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
	AccessControlMaxAgeSec pulumix.Input[int] `pulumi:"accessControlMaxAgeSec"`
	// Whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.
	IncludeSubdomains pulumix.Input[bool] `pulumi:"includeSubdomains"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
	// Whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.
	Preload pulumix.Input[bool] `pulumi:"preload"`
}

func (GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity)(nil)).Elem()
}

func (i GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs) ToGetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput() GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput {
	return i.ToGetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs) ToGetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput)
}

func (i *GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity)(nil)).Elem()
}

func (o GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) ToGetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput() GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) ToGetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity] {
	return pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity]{
		OutputState: o.OutputState,
	}
}

// A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.
func (o GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) AccessControlMaxAgeSec() pulumix.Output[int] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity](o, func(v GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity) int {
		return v.AccessControlMaxAgeSec
	})
}

// Whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.
func (o GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) IncludeSubdomains() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity](o, func(v GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity) bool {
		return v.IncludeSubdomains
	})
}

// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
func (o GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity](o, func(v GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity) bool { return v.Override })
}

// Whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.
func (o GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput) Preload() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity](o, func(v GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurity) bool { return v.Preload })
}

type GetResponseHeadersPolicySecurityHeadersConfigXssProtection struct {
	// Whether CloudFront includes the mode=block directive in the X-XSS-Protection header.
	ModeBlock bool `pulumi:"modeBlock"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override bool `pulumi:"override"`
	// Boolean value that determines the value of the X-XSS-Protection HTTP response header. When this setting is true, the value of the X-XSS-Protection header is 1. When this setting is false, the value of the X-XSS-Protection header is 0.
	Protection bool `pulumi:"protection"`
	// Whether CloudFront sets a reporting URI in the X-XSS-Protection header.
	ReportUri string `pulumi:"reportUri"`
}

type GetResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs struct {
	// Whether CloudFront includes the mode=block directive in the X-XSS-Protection header.
	ModeBlock pulumix.Input[bool] `pulumi:"modeBlock"`
	// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
	Override pulumix.Input[bool] `pulumi:"override"`
	// Boolean value that determines the value of the X-XSS-Protection HTTP response header. When this setting is true, the value of the X-XSS-Protection header is 1. When this setting is false, the value of the X-XSS-Protection header is 0.
	Protection pulumix.Input[bool] `pulumi:"protection"`
	// Whether CloudFront sets a reporting URI in the X-XSS-Protection header.
	ReportUri pulumix.Input[string] `pulumi:"reportUri"`
}

func (GetResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigXssProtection)(nil)).Elem()
}

func (i GetResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs) ToGetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput() GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput {
	return i.ToGetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs) ToGetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput)
}

func (i *GetResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicySecurityHeadersConfigXssProtectionArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicySecurityHeadersConfigXssProtection)(nil)).Elem()
}

func (o GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ToGetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput() GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ToGetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutputWithContext(ctx context.Context) GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput {
	return o
}

func (o GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigXssProtection] {
	return pulumix.Output[GetResponseHeadersPolicySecurityHeadersConfigXssProtection]{
		OutputState: o.OutputState,
	}
}

// Whether CloudFront includes the mode=block directive in the X-XSS-Protection header.
func (o GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ModeBlock() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigXssProtection](o, func(v GetResponseHeadersPolicySecurityHeadersConfigXssProtection) bool { return v.ModeBlock })
}

// Whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.
func (o GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) Override() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigXssProtection](o, func(v GetResponseHeadersPolicySecurityHeadersConfigXssProtection) bool { return v.Override })
}

// Boolean value that determines the value of the X-XSS-Protection HTTP response header. When this setting is true, the value of the X-XSS-Protection header is 1. When this setting is false, the value of the X-XSS-Protection header is 0.
func (o GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) Protection() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigXssProtection](o, func(v GetResponseHeadersPolicySecurityHeadersConfigXssProtection) bool { return v.Protection })
}

// Whether CloudFront sets a reporting URI in the X-XSS-Protection header.
func (o GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput) ReportUri() pulumix.Output[string] {
	return pulumix.Apply[GetResponseHeadersPolicySecurityHeadersConfigXssProtection](o, func(v GetResponseHeadersPolicySecurityHeadersConfigXssProtection) string { return v.ReportUri })
}

type GetResponseHeadersPolicyServerTimingHeadersConfig struct {
	// Whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.
	Enabled bool `pulumi:"enabled"`
	// Number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to.
	SamplingRate float64 `pulumi:"samplingRate"`
}

type GetResponseHeadersPolicyServerTimingHeadersConfigArgs struct {
	// Whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.
	Enabled pulumix.Input[bool] `pulumi:"enabled"`
	// Number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to.
	SamplingRate pulumix.Input[float64] `pulumi:"samplingRate"`
}

func (GetResponseHeadersPolicyServerTimingHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyServerTimingHeadersConfig)(nil)).Elem()
}

func (i GetResponseHeadersPolicyServerTimingHeadersConfigArgs) ToGetResponseHeadersPolicyServerTimingHeadersConfigOutput() GetResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return i.ToGetResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(context.Background())
}

func (i GetResponseHeadersPolicyServerTimingHeadersConfigArgs) ToGetResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponseHeadersPolicyServerTimingHeadersConfigOutput)
}

func (i *GetResponseHeadersPolicyServerTimingHeadersConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*GetResponseHeadersPolicyServerTimingHeadersConfigArgs] {
	return pulumix.Val(i)
}

type GetResponseHeadersPolicyServerTimingHeadersConfigOutput struct{ *pulumi.OutputState }

func (GetResponseHeadersPolicyServerTimingHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponseHeadersPolicyServerTimingHeadersConfig)(nil)).Elem()
}

func (o GetResponseHeadersPolicyServerTimingHeadersConfigOutput) ToGetResponseHeadersPolicyServerTimingHeadersConfigOutput() GetResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return o
}

func (o GetResponseHeadersPolicyServerTimingHeadersConfigOutput) ToGetResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(ctx context.Context) GetResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return o
}

func (o GetResponseHeadersPolicyServerTimingHeadersConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetResponseHeadersPolicyServerTimingHeadersConfig] {
	return pulumix.Output[GetResponseHeadersPolicyServerTimingHeadersConfig]{
		OutputState: o.OutputState,
	}
}

// Whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.
func (o GetResponseHeadersPolicyServerTimingHeadersConfigOutput) Enabled() pulumix.Output[bool] {
	return pulumix.Apply[GetResponseHeadersPolicyServerTimingHeadersConfig](o, func(v GetResponseHeadersPolicyServerTimingHeadersConfig) bool { return v.Enabled })
}

// Number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to.
func (o GetResponseHeadersPolicyServerTimingHeadersConfigOutput) SamplingRate() pulumix.Output[float64] {
	return pulumix.Apply[GetResponseHeadersPolicyServerTimingHeadersConfig](o, func(v GetResponseHeadersPolicyServerTimingHeadersConfig) float64 { return v.SamplingRate })
}

func init() {
	pulumi.RegisterOutputType(CachePolicyParametersInCacheKeyAndForwardedToOriginOutput{})
	pulumi.RegisterOutputType(CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput{})
	pulumi.RegisterOutputType(CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesOutput{})
	pulumi.RegisterOutputType(CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput{})
	pulumi.RegisterOutputType(CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersOutput{})
	pulumi.RegisterOutputType(CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput{})
	pulumi.RegisterOutputType(CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyStagingDistributionDnsNamesOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyTrafficConfigOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyTrafficConfigSingleHeaderConfigOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfigOutput{})
	pulumi.RegisterOutputType(DistributionCustomErrorResponseOutput{})
	pulumi.RegisterOutputType(DistributionDefaultCacheBehaviorOutput{})
	pulumi.RegisterOutputType(DistributionDefaultCacheBehaviorForwardedValuesOutput{})
	pulumi.RegisterOutputType(DistributionDefaultCacheBehaviorForwardedValuesCookiesOutput{})
	pulumi.RegisterOutputType(DistributionDefaultCacheBehaviorFunctionAssociationOutput{})
	pulumi.RegisterOutputType(DistributionDefaultCacheBehaviorLambdaFunctionAssociationOutput{})
	pulumi.RegisterOutputType(DistributionLoggingConfigOutput{})
	pulumi.RegisterOutputType(DistributionOrderedCacheBehaviorOutput{})
	pulumi.RegisterOutputType(DistributionOrderedCacheBehaviorForwardedValuesOutput{})
	pulumi.RegisterOutputType(DistributionOrderedCacheBehaviorForwardedValuesCookiesOutput{})
	pulumi.RegisterOutputType(DistributionOrderedCacheBehaviorFunctionAssociationOutput{})
	pulumi.RegisterOutputType(DistributionOrderedCacheBehaviorLambdaFunctionAssociationOutput{})
	pulumi.RegisterOutputType(DistributionOriginOutput{})
	pulumi.RegisterOutputType(DistributionOriginCustomHeaderOutput{})
	pulumi.RegisterOutputType(DistributionOriginCustomOriginConfigOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupFailoverCriteriaOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupMemberOutput{})
	pulumi.RegisterOutputType(DistributionOriginOriginShieldOutput{})
	pulumi.RegisterOutputType(DistributionOriginS3OriginConfigOutput{})
	pulumi.RegisterOutputType(DistributionRestrictionsOutput{})
	pulumi.RegisterOutputType(DistributionRestrictionsGeoRestrictionOutput{})
	pulumi.RegisterOutputType(DistributionTrustedKeyGroupOutput{})
	pulumi.RegisterOutputType(DistributionTrustedKeyGroupItemOutput{})
	pulumi.RegisterOutputType(DistributionTrustedSignerOutput{})
	pulumi.RegisterOutputType(DistributionTrustedSignerItemOutput{})
	pulumi.RegisterOutputType(DistributionViewerCertificateOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionConfigContentTypeProfileConfigOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionConfigQueryArgProfileConfigOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionProfileEncryptionEntitiesOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionProfileEncryptionEntitiesItemOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionProfileEncryptionEntitiesItemFieldPatternsOutput{})
	pulumi.RegisterOutputType(MonitoringSubscriptionMonitoringSubscriptionOutput{})
	pulumi.RegisterOutputType(MonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyCookiesConfigOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyCookiesConfigCookiesOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyHeadersConfigOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyHeadersConfigHeadersOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyQueryStringsConfigOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyQueryStringsConfigQueryStringsOutput{})
	pulumi.RegisterOutputType(RealtimeLogConfigEndpointOutput{})
	pulumi.RegisterOutputType(RealtimeLogConfigEndpointKinesisStreamConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCorsConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCorsConfigAccessControlAllowHeadersOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCorsConfigAccessControlAllowMethodsOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCorsConfigAccessControlAllowOriginsOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCorsConfigAccessControlExposeHeadersOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCustomHeadersConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCustomHeadersConfigItemOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyRemoveHeadersConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyRemoveHeadersConfigItemOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicySecurityHeadersConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicySecurityHeadersConfigContentTypeOptionsOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicySecurityHeadersConfigFrameOptionsOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyServerTimingHeadersConfigOutput{})
	pulumi.RegisterOutputType(GetCachePolicyParametersInCacheKeyAndForwardedToOriginOutput{})
	pulumi.RegisterOutputType(GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigOutput{})
	pulumi.RegisterOutputType(GetCachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookieOutput{})
	pulumi.RegisterOutputType(GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigOutput{})
	pulumi.RegisterOutputType(GetCachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaderOutput{})
	pulumi.RegisterOutputType(GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigOutput{})
	pulumi.RegisterOutputType(GetCachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringOutput{})
	pulumi.RegisterOutputType(GetOriginRequestPolicyCookiesConfigOutput{})
	pulumi.RegisterOutputType(GetOriginRequestPolicyCookiesConfigCookieOutput{})
	pulumi.RegisterOutputType(GetOriginRequestPolicyHeadersConfigOutput{})
	pulumi.RegisterOutputType(GetOriginRequestPolicyHeadersConfigHeaderOutput{})
	pulumi.RegisterOutputType(GetOriginRequestPolicyQueryStringsConfigOutput{})
	pulumi.RegisterOutputType(GetOriginRequestPolicyQueryStringsConfigQueryStringOutput{})
	pulumi.RegisterOutputType(GetRealtimeLogConfigEndpointOutput{})
	pulumi.RegisterOutputType(GetRealtimeLogConfigEndpointKinesisStreamConfigOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyCorsConfigOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyCorsConfigAccessControlAllowHeaderOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyCorsConfigAccessControlAllowMethodOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyCorsConfigAccessControlAllowOriginOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyCorsConfigAccessControlExposeHeaderOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyCustomHeadersConfigOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyCustomHeadersConfigItemOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyRemoveHeadersConfigOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyRemoveHeadersConfigItemOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicySecurityHeadersConfigOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicySecurityHeadersConfigContentSecurityPolicyOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicySecurityHeadersConfigContentTypeOptionOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicySecurityHeadersConfigFrameOptionOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicySecurityHeadersConfigReferrerPolicyOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicySecurityHeadersConfigStrictTransportSecurityOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicySecurityHeadersConfigXssProtectionOutput{})
	pulumi.RegisterOutputType(GetResponseHeadersPolicyServerTimingHeadersConfigOutput{})
}
