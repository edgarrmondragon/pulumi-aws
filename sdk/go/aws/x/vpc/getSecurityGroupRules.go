// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can be useful for getting back a set of security group rule IDs.
func GetSecurityGroupRules(ctx *pulumi.Context, args *GetSecurityGroupRulesArgs, opts ...pulumi.InvokeOption) (*GetSecurityGroupRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityGroupRulesResult
	err := ctx.Invoke("aws:vpc/getSecurityGroupRules:getSecurityGroupRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityGroupRules.
type GetSecurityGroupRulesArgs struct {
	// Custom filter block as described below.
	Filters []GetSecurityGroupRulesFilter `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match
	// a pair on the desired security group rule.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getSecurityGroupRules.
type GetSecurityGroupRulesResult struct {
	Filters []GetSecurityGroupRulesFilter `pulumi:"filters"`
	Id      string                        `pulumi:"id"`
	// List of all the security group rule IDs found.
	Ids  []string          `pulumi:"ids"`
	Tags map[string]string `pulumi:"tags"`
}

func GetSecurityGroupRulesOutput(ctx *pulumi.Context, args GetSecurityGroupRulesOutputArgs, opts ...pulumi.InvokeOption) GetSecurityGroupRulesResultOutput {
	outputResult := pulumix.ApplyErr[*GetSecurityGroupRulesArgs](args.ToOutput(), func(plainArgs *GetSecurityGroupRulesArgs) (*GetSecurityGroupRulesResult, error) {
		return GetSecurityGroupRules(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetSecurityGroupRulesResultOutput, *GetSecurityGroupRulesResult](outputResult)
}

// A collection of arguments for invoking getSecurityGroupRules.
type GetSecurityGroupRulesOutputArgs struct {
	// Custom filter block as described below.
	Filters pulumix.Input[[]*GetSecurityGroupRulesFilterArgs] `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match
	// a pair on the desired security group rule.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetSecurityGroupRulesOutputArgs) ToOutput() pulumix.Output[*GetSecurityGroupRulesArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetSecurityGroupRulesArgs {
		return &GetSecurityGroupRulesArgs{
			Filters: resolvedArgs[0].([]GetSecurityGroupRulesFilter),
			Tags:    resolvedArgs[1].(map[string]string),
		}
	})
}

type GetSecurityGroupRulesResultOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupRulesResult)(nil)).Elem()
}

func (o GetSecurityGroupRulesResultOutput) ToOutput(context.Context) pulumix.Output[*GetSecurityGroupRulesResult] {
	return pulumix.Output[*GetSecurityGroupRulesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSecurityGroupRulesResultOutput) Filters() pulumix.GArrayOutput[GetSecurityGroupRulesFilter, GetSecurityGroupRulesFilterOutput] {
	value := pulumix.Apply[*GetSecurityGroupRulesResult](o, func(v *GetSecurityGroupRulesResult) []GetSecurityGroupRulesFilter { return v.Filters })
	return pulumix.GArrayOutput[GetSecurityGroupRulesFilter, GetSecurityGroupRulesFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetSecurityGroupRulesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetSecurityGroupRulesResult](o, func(v *GetSecurityGroupRulesResult) string { return v.Id })
}

func (o GetSecurityGroupRulesResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetSecurityGroupRulesResult](o, func(v *GetSecurityGroupRulesResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetSecurityGroupRulesResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetSecurityGroupRulesResult](o, func(v *GetSecurityGroupRulesResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
