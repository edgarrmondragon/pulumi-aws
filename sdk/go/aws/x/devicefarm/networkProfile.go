// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devicefarm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage AWS Device Farm Network Profiles.
// âˆ‚
// > **NOTE:** AWS currently has limited regional support for Device Farm (e.g., `us-west-2`). See [AWS Device Farm endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/devicefarm.html) for information on supported regions.
type NetworkProfile struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name of this network profile.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The description of the network profile.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	DownlinkBandwidthBits pulumix.Output[*int] `pulumi:"downlinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	DownlinkDelayMs pulumix.Output[*int] `pulumi:"downlinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	DownlinkJitterMs pulumix.Output[*int] `pulumi:"downlinkJitterMs"`
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	DownlinkLossPercent pulumix.Output[*int] `pulumi:"downlinkLossPercent"`
	// The name for the network profile.
	Name pulumix.Output[string] `pulumi:"name"`
	// The ARN of the project for the network profile.
	ProjectArn pulumix.Output[string] `pulumi:"projectArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
	Type pulumix.Output[*string] `pulumi:"type"`
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	UplinkBandwidthBits pulumix.Output[*int] `pulumi:"uplinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	UplinkDelayMs pulumix.Output[*int] `pulumi:"uplinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	UplinkJitterMs pulumix.Output[*int] `pulumi:"uplinkJitterMs"`
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	UplinkLossPercent pulumix.Output[*int] `pulumi:"uplinkLossPercent"`
}

// NewNetworkProfile registers a new resource with the given unique name, arguments, and options.
func NewNetworkProfile(ctx *pulumi.Context,
	name string, args *NetworkProfileArgs, opts ...pulumi.ResourceOption) (*NetworkProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectArn == nil {
		return nil, errors.New("invalid value for required argument 'ProjectArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkProfile
	err := ctx.RegisterResource("aws:devicefarm/networkProfile:NetworkProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkProfile gets an existing NetworkProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkProfileState, opts ...pulumi.ResourceOption) (*NetworkProfile, error) {
	var resource NetworkProfile
	err := ctx.ReadResource("aws:devicefarm/networkProfile:NetworkProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkProfile resources.
type networkProfileState struct {
	// The Amazon Resource Name of this network profile.
	Arn *string `pulumi:"arn"`
	// The description of the network profile.
	Description *string `pulumi:"description"`
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	DownlinkBandwidthBits *int `pulumi:"downlinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	DownlinkDelayMs *int `pulumi:"downlinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	DownlinkJitterMs *int `pulumi:"downlinkJitterMs"`
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	DownlinkLossPercent *int `pulumi:"downlinkLossPercent"`
	// The name for the network profile.
	Name *string `pulumi:"name"`
	// The ARN of the project for the network profile.
	ProjectArn *string `pulumi:"projectArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
	Type *string `pulumi:"type"`
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	UplinkBandwidthBits *int `pulumi:"uplinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	UplinkDelayMs *int `pulumi:"uplinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	UplinkJitterMs *int `pulumi:"uplinkJitterMs"`
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	UplinkLossPercent *int `pulumi:"uplinkLossPercent"`
}

type NetworkProfileState struct {
	// The Amazon Resource Name of this network profile.
	Arn pulumix.Input[*string]
	// The description of the network profile.
	Description pulumix.Input[*string]
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	DownlinkBandwidthBits pulumix.Input[*int]
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	DownlinkDelayMs pulumix.Input[*int]
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	DownlinkJitterMs pulumix.Input[*int]
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	DownlinkLossPercent pulumix.Input[*int]
	// The name for the network profile.
	Name pulumix.Input[*string]
	// The ARN of the project for the network profile.
	ProjectArn pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
	Type pulumix.Input[*string]
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	UplinkBandwidthBits pulumix.Input[*int]
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	UplinkDelayMs pulumix.Input[*int]
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	UplinkJitterMs pulumix.Input[*int]
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	UplinkLossPercent pulumix.Input[*int]
}

func (NetworkProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkProfileState)(nil)).Elem()
}

type networkProfileArgs struct {
	// The description of the network profile.
	Description *string `pulumi:"description"`
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	DownlinkBandwidthBits *int `pulumi:"downlinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	DownlinkDelayMs *int `pulumi:"downlinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	DownlinkJitterMs *int `pulumi:"downlinkJitterMs"`
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	DownlinkLossPercent *int `pulumi:"downlinkLossPercent"`
	// The name for the network profile.
	Name *string `pulumi:"name"`
	// The ARN of the project for the network profile.
	ProjectArn string `pulumi:"projectArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
	Type *string `pulumi:"type"`
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	UplinkBandwidthBits *int `pulumi:"uplinkBandwidthBits"`
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	UplinkDelayMs *int `pulumi:"uplinkDelayMs"`
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	UplinkJitterMs *int `pulumi:"uplinkJitterMs"`
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	UplinkLossPercent *int `pulumi:"uplinkLossPercent"`
}

// The set of arguments for constructing a NetworkProfile resource.
type NetworkProfileArgs struct {
	// The description of the network profile.
	Description pulumix.Input[*string]
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	DownlinkBandwidthBits pulumix.Input[*int]
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	DownlinkDelayMs pulumix.Input[*int]
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	DownlinkJitterMs pulumix.Input[*int]
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	DownlinkLossPercent pulumix.Input[*int]
	// The name for the network profile.
	Name pulumix.Input[*string]
	// The ARN of the project for the network profile.
	ProjectArn pulumix.Input[string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
	Type pulumix.Input[*string]
	// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
	UplinkBandwidthBits pulumix.Input[*int]
	// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
	UplinkDelayMs pulumix.Input[*int]
	// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
	UplinkJitterMs pulumix.Input[*int]
	// Proportion of received packets that fail to arrive from `0` to `100` percent.
	UplinkLossPercent pulumix.Input[*int]
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkProfileArgs)(nil)).Elem()
}

type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToOutput(ctx context.Context) pulumix.Output[NetworkProfile] {
	return pulumix.Output[NetworkProfile]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name of this network profile.
func (o NetworkProfileOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the network profile.
func (o NetworkProfileOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
func (o NetworkProfileOutput) DownlinkBandwidthBits() pulumix.Output[*int] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*int] { return v.DownlinkBandwidthBits })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
func (o NetworkProfileOutput) DownlinkDelayMs() pulumix.Output[*int] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*int] { return v.DownlinkDelayMs })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
func (o NetworkProfileOutput) DownlinkJitterMs() pulumix.Output[*int] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*int] { return v.DownlinkJitterMs })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Proportion of received packets that fail to arrive from `0` to `100` percent.
func (o NetworkProfileOutput) DownlinkLossPercent() pulumix.Output[*int] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*int] { return v.DownlinkLossPercent })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The name for the network profile.
func (o NetworkProfileOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the project for the network profile.
func (o NetworkProfileOutput) ProjectArn() pulumix.Output[string] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[string] { return v.ProjectArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o NetworkProfileOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o NetworkProfileOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
func (o NetworkProfileOutput) Type() pulumix.Output[*string] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*string] { return v.Type })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
func (o NetworkProfileOutput) UplinkBandwidthBits() pulumix.Output[*int] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*int] { return v.UplinkBandwidthBits })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
func (o NetworkProfileOutput) UplinkDelayMs() pulumix.Output[*int] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*int] { return v.UplinkDelayMs })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
func (o NetworkProfileOutput) UplinkJitterMs() pulumix.Output[*int] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*int] { return v.UplinkJitterMs })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Proportion of received packets that fail to arrive from `0` to `100` percent.
func (o NetworkProfileOutput) UplinkLossPercent() pulumix.Output[*int] {
	value := pulumix.Apply[NetworkProfile](o, func(v NetworkProfile) pulumix.Output[*int] { return v.UplinkLossPercent })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

func init() {
	pulumi.RegisterOutputType(NetworkProfileOutput{})
}
