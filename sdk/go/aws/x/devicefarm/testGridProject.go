// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devicefarm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage AWS Device Farm Test Grid Projects.
//
// > **NOTE:** AWS currently has limited regional support for Device Farm (e.g., `us-west-2`). See [AWS Device Farm endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/devicefarm.html) for information on supported regions.
type TestGridProject struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name of this Test Grid Project.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Human-readable description of the project.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The name of the Selenium testing project.
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The VPC security groups and subnets that are attached to a project. See VPC Config below.
	VpcConfig pulumix.GPtrOutput[TestGridProjectVpcConfig, TestGridProjectVpcConfigOutput] `pulumi:"vpcConfig"`
}

// NewTestGridProject registers a new resource with the given unique name, arguments, and options.
func NewTestGridProject(ctx *pulumi.Context,
	name string, args *TestGridProjectArgs, opts ...pulumi.ResourceOption) (*TestGridProject, error) {
	if args == nil {
		args = &TestGridProjectArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TestGridProject
	err := ctx.RegisterResource("aws:devicefarm/testGridProject:TestGridProject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTestGridProject gets an existing TestGridProject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTestGridProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TestGridProjectState, opts ...pulumi.ResourceOption) (*TestGridProject, error) {
	var resource TestGridProject
	err := ctx.ReadResource("aws:devicefarm/testGridProject:TestGridProject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TestGridProject resources.
type testGridProjectState struct {
	// The Amazon Resource Name of this Test Grid Project.
	Arn *string `pulumi:"arn"`
	// Human-readable description of the project.
	Description *string `pulumi:"description"`
	// The name of the Selenium testing project.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The VPC security groups and subnets that are attached to a project. See VPC Config below.
	VpcConfig *TestGridProjectVpcConfig `pulumi:"vpcConfig"`
}

type TestGridProjectState struct {
	// The Amazon Resource Name of this Test Grid Project.
	Arn pulumix.Input[*string]
	// Human-readable description of the project.
	Description pulumix.Input[*string]
	// The name of the Selenium testing project.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The VPC security groups and subnets that are attached to a project. See VPC Config below.
	VpcConfig pulumix.Input[*TestGridProjectVpcConfigArgs]
}

func (TestGridProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*testGridProjectState)(nil)).Elem()
}

type testGridProjectArgs struct {
	// Human-readable description of the project.
	Description *string `pulumi:"description"`
	// The name of the Selenium testing project.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The VPC security groups and subnets that are attached to a project. See VPC Config below.
	VpcConfig *TestGridProjectVpcConfig `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a TestGridProject resource.
type TestGridProjectArgs struct {
	// Human-readable description of the project.
	Description pulumix.Input[*string]
	// The name of the Selenium testing project.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The VPC security groups and subnets that are attached to a project. See VPC Config below.
	VpcConfig pulumix.Input[*TestGridProjectVpcConfigArgs]
}

func (TestGridProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*testGridProjectArgs)(nil)).Elem()
}

type TestGridProjectOutput struct{ *pulumi.OutputState }

func (TestGridProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TestGridProject)(nil)).Elem()
}

func (o TestGridProjectOutput) ToTestGridProjectOutput() TestGridProjectOutput {
	return o
}

func (o TestGridProjectOutput) ToTestGridProjectOutputWithContext(ctx context.Context) TestGridProjectOutput {
	return o
}

func (o TestGridProjectOutput) ToOutput(ctx context.Context) pulumix.Output[TestGridProject] {
	return pulumix.Output[TestGridProject]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name of this Test Grid Project.
func (o TestGridProjectOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[TestGridProject](o, func(v TestGridProject) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Human-readable description of the project.
func (o TestGridProjectOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[TestGridProject](o, func(v TestGridProject) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the Selenium testing project.
func (o TestGridProjectOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[TestGridProject](o, func(v TestGridProject) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TestGridProjectOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[TestGridProject](o, func(v TestGridProject) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TestGridProjectOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[TestGridProject](o, func(v TestGridProject) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The VPC security groups and subnets that are attached to a project. See VPC Config below.
func (o TestGridProjectOutput) VpcConfig() pulumix.GPtrOutput[TestGridProjectVpcConfig, TestGridProjectVpcConfigOutput] {
	value := pulumix.Apply[TestGridProject](o, func(v TestGridProject) pulumix.GPtrOutput[TestGridProjectVpcConfig, TestGridProjectVpcConfigOutput] {
		return v.VpcConfig
	})
	unwrapped := pulumix.Flatten[*TestGridProjectVpcConfig, pulumix.GPtrOutput[TestGridProjectVpcConfig, TestGridProjectVpcConfigOutput]](value)
	return pulumix.GPtrOutput[TestGridProjectVpcConfig, TestGridProjectVpcConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(TestGridProjectOutput{})
}
