// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an API Gateway Documentation Version.
type DocumentationVersion struct {
	pulumi.CustomResourceState

	// Description of the API documentation version.
	Description pulumix.Output[*string] `pulumi:"description"`
	// ID of the associated Rest API
	RestApiId pulumix.Output[string] `pulumi:"restApiId"`
	// Version identifier of the API documentation snapshot.
	Version pulumix.Output[string] `pulumi:"version"`
}

// NewDocumentationVersion registers a new resource with the given unique name, arguments, and options.
func NewDocumentationVersion(ctx *pulumi.Context,
	name string, args *DocumentationVersionArgs, opts ...pulumi.ResourceOption) (*DocumentationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RestApiId == nil {
		return nil, errors.New("invalid value for required argument 'RestApiId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DocumentationVersion
	err := ctx.RegisterResource("aws:apigateway/documentationVersion:DocumentationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDocumentationVersion gets an existing DocumentationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDocumentationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DocumentationVersionState, opts ...pulumi.ResourceOption) (*DocumentationVersion, error) {
	var resource DocumentationVersion
	err := ctx.ReadResource("aws:apigateway/documentationVersion:DocumentationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DocumentationVersion resources.
type documentationVersionState struct {
	// Description of the API documentation version.
	Description *string `pulumi:"description"`
	// ID of the associated Rest API
	RestApiId *string `pulumi:"restApiId"`
	// Version identifier of the API documentation snapshot.
	Version *string `pulumi:"version"`
}

type DocumentationVersionState struct {
	// Description of the API documentation version.
	Description pulumix.Input[*string]
	// ID of the associated Rest API
	RestApiId pulumix.Input[*string]
	// Version identifier of the API documentation snapshot.
	Version pulumix.Input[*string]
}

func (DocumentationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*documentationVersionState)(nil)).Elem()
}

type documentationVersionArgs struct {
	// Description of the API documentation version.
	Description *string `pulumi:"description"`
	// ID of the associated Rest API
	RestApiId string `pulumi:"restApiId"`
	// Version identifier of the API documentation snapshot.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a DocumentationVersion resource.
type DocumentationVersionArgs struct {
	// Description of the API documentation version.
	Description pulumix.Input[*string]
	// ID of the associated Rest API
	RestApiId pulumix.Input[string]
	// Version identifier of the API documentation snapshot.
	Version pulumix.Input[string]
}

func (DocumentationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*documentationVersionArgs)(nil)).Elem()
}

type DocumentationVersionOutput struct{ *pulumi.OutputState }

func (DocumentationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentationVersion)(nil)).Elem()
}

func (o DocumentationVersionOutput) ToDocumentationVersionOutput() DocumentationVersionOutput {
	return o
}

func (o DocumentationVersionOutput) ToDocumentationVersionOutputWithContext(ctx context.Context) DocumentationVersionOutput {
	return o
}

func (o DocumentationVersionOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentationVersion] {
	return pulumix.Output[DocumentationVersion]{
		OutputState: o.OutputState,
	}
}

// Description of the API documentation version.
func (o DocumentationVersionOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[DocumentationVersion](o, func(v DocumentationVersion) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ID of the associated Rest API
func (o DocumentationVersionOutput) RestApiId() pulumix.Output[string] {
	value := pulumix.Apply[DocumentationVersion](o, func(v DocumentationVersion) pulumix.Output[string] { return v.RestApiId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Version identifier of the API documentation snapshot.
func (o DocumentationVersionOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[DocumentationVersion](o, func(v DocumentationVersion) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(DocumentationVersionOutput{})
}
