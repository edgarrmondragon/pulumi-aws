// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker Image resource.
type Image struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this Image.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The description of the image.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The display name of the image. When the image is added to a domain (must be unique to the domain).
	DisplayName pulumix.Output[*string] `pulumi:"displayName"`
	// The name of the image. Must be unique to your account.
	ImageName pulumix.Output[string] `pulumi:"imageName"`
	// The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewImage registers a new resource with the given unique name, arguments, and options.
func NewImage(ctx *pulumi.Context,
	name string, args *ImageArgs, opts ...pulumi.ResourceOption) (*Image, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageName == nil {
		return nil, errors.New("invalid value for required argument 'ImageName'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Image
	err := ctx.RegisterResource("aws:sagemaker/image:Image", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImage gets an existing Image resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageState, opts ...pulumi.ResourceOption) (*Image, error) {
	var resource Image
	err := ctx.ReadResource("aws:sagemaker/image:Image", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Image resources.
type imageState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Image.
	Arn *string `pulumi:"arn"`
	// The description of the image.
	Description *string `pulumi:"description"`
	// The display name of the image. When the image is added to a domain (must be unique to the domain).
	DisplayName *string `pulumi:"displayName"`
	// The name of the image. Must be unique to your account.
	ImageName *string `pulumi:"imageName"`
	// The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
	RoleArn *string `pulumi:"roleArn"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ImageState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Image.
	Arn pulumix.Input[*string]
	// The description of the image.
	Description pulumix.Input[*string]
	// The display name of the image. When the image is added to a domain (must be unique to the domain).
	DisplayName pulumix.Input[*string]
	// The name of the image. Must be unique to your account.
	ImageName pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
	RoleArn pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageState)(nil)).Elem()
}

type imageArgs struct {
	// The description of the image.
	Description *string `pulumi:"description"`
	// The display name of the image. When the image is added to a domain (must be unique to the domain).
	DisplayName *string `pulumi:"displayName"`
	// The name of the image. Must be unique to your account.
	ImageName string `pulumi:"imageName"`
	// The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
	RoleArn string `pulumi:"roleArn"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Image resource.
type ImageArgs struct {
	// The description of the image.
	Description pulumix.Input[*string]
	// The display name of the image. When the image is added to a domain (must be unique to the domain).
	DisplayName pulumix.Input[*string]
	// The name of the image. Must be unique to your account.
	ImageName pulumix.Input[string]
	// The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
	RoleArn pulumix.Input[string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageArgs)(nil)).Elem()
}

type ImageOutput struct{ *pulumi.OutputState }

func (ImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Image)(nil)).Elem()
}

func (o ImageOutput) ToImageOutput() ImageOutput {
	return o
}

func (o ImageOutput) ToImageOutputWithContext(ctx context.Context) ImageOutput {
	return o
}

func (o ImageOutput) ToOutput(ctx context.Context) pulumix.Output[Image] {
	return pulumix.Output[Image]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) assigned by AWS to this Image.
func (o ImageOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the image.
func (o ImageOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The display name of the image. When the image is added to a domain (must be unique to the domain).
func (o ImageOutput) DisplayName() pulumix.Output[*string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[*string] { return v.DisplayName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the image. Must be unique to your account.
func (o ImageOutput) ImageName() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.ImageName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
func (o ImageOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ImageOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ImageOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Image](o, func(v Image) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ImageOutput{})
}
