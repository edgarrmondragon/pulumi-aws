// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an SSM Parameter resource.
//
// > **Note:** `overwrite` also makes it possible to overwrite an existing SSM Parameter that's not created by the provider before. This argument has been deprecated and will be removed in v6.0.0 of the provider. For more information on how this affects the behavior of this resource, see this issue comment.
type Parameter struct {
	pulumi.CustomResourceState

	// Regular expression used to validate the parameter value.
	AllowedPattern pulumix.Output[*string] `pulumi:"allowedPattern"`
	// ARN of the parameter.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Data type of the parameter. Valid values: `text`, `aws:ssm:integration` and `aws:ec2:image` for AMI format, see the [Native parameter support for Amazon Machine Image IDs](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html).
	DataType pulumix.Output[string] `pulumi:"dataType"`
	// Description of the parameter.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Value of the parameter. **Use caution:** This value is _never_ marked as sensitive in the preview. This argument is not valid with a `type` of `SecureString`.
	InsecureValue pulumix.Output[string] `pulumi:"insecureValue"`
	// KMS key ID or ARN for encrypting a SecureString.
	KeyId pulumix.Output[string] `pulumi:"keyId"`
	// Name of the parameter. If the name contains a path (e.g., any forward slashes (`/`)), it must be fully qualified with a leading forward slash (`/`). For additional requirements and constraints, see the [AWS SSM User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html).
	Name pulumix.Output[string] `pulumi:"name"`
	// Overwrite an existing parameter. If not specified, defaults to `false` if the resource has not been created by Pulumi to avoid overwrite of existing resource, and will default to `true` otherwise (Pulumi lifecycle rules should then be used to manage the update behavior).
	//
	// Deprecated: this attribute has been deprecated
	Overwrite pulumix.Output[*bool] `pulumi:"overwrite"`
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Parameter tier to assign to the parameter. If not specified, will use the default parameter tier for the region. Valid tiers are `Standard`, `Advanced`, and `Intelligent-Tiering`. Downgrading an `Advanced` tier parameter to `Standard` will recreate the resource. For more information on parameter tiers, see the [AWS SSM Parameter tier comparison and guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html).
	Tier pulumix.Output[*string] `pulumi:"tier"`
	// Type of the parameter. Valid types are `String`, `StringList` and `SecureString`.
	//
	// The following arguments are optional:
	Type pulumix.Output[string] `pulumi:"type"`
	// Value of the parameter. This value is always marked as sensitive in the plan output, regardless of `type`.
	//
	// > **NOTE:** `aws:ssm:integration` dataType parameters must be of the type `SecureString` and the name must start with the prefix `/d9d01087-4a3f-49e0-b0b4-d568d7826553/ssm/integrations/webhook/`. See [here](https://docs.aws.amazon.com/systems-manager/latest/userguide/creating-integrations.html) for information on the usage of `aws:ssm:integration` parameters.
	Value pulumix.Output[string] `pulumi:"value"`
	// Version of the parameter.
	Version pulumix.Output[int] `pulumi:"version"`
}

// NewParameter registers a new resource with the given unique name, arguments, and options.
func NewParameter(ctx *pulumi.Context,
	name string, args *ParameterArgs, opts ...pulumi.ResourceOption) (*Parameter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Value != nil {
		untypedSecretValue := pulumi.ToSecret(args.Value.ToOutput(ctx.Context()).Untyped())
		args.Value = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"value",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Parameter
	err := ctx.RegisterResource("aws:ssm/parameter:Parameter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetParameter gets an existing Parameter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetParameter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ParameterState, opts ...pulumi.ResourceOption) (*Parameter, error) {
	var resource Parameter
	err := ctx.ReadResource("aws:ssm/parameter:Parameter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Parameter resources.
type parameterState struct {
	// Regular expression used to validate the parameter value.
	AllowedPattern *string `pulumi:"allowedPattern"`
	// ARN of the parameter.
	Arn *string `pulumi:"arn"`
	// Data type of the parameter. Valid values: `text`, `aws:ssm:integration` and `aws:ec2:image` for AMI format, see the [Native parameter support for Amazon Machine Image IDs](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html).
	DataType *string `pulumi:"dataType"`
	// Description of the parameter.
	Description *string `pulumi:"description"`
	// Value of the parameter. **Use caution:** This value is _never_ marked as sensitive in the preview. This argument is not valid with a `type` of `SecureString`.
	InsecureValue *string `pulumi:"insecureValue"`
	// KMS key ID or ARN for encrypting a SecureString.
	KeyId *string `pulumi:"keyId"`
	// Name of the parameter. If the name contains a path (e.g., any forward slashes (`/`)), it must be fully qualified with a leading forward slash (`/`). For additional requirements and constraints, see the [AWS SSM User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html).
	Name *string `pulumi:"name"`
	// Overwrite an existing parameter. If not specified, defaults to `false` if the resource has not been created by Pulumi to avoid overwrite of existing resource, and will default to `true` otherwise (Pulumi lifecycle rules should then be used to manage the update behavior).
	//
	// Deprecated: this attribute has been deprecated
	Overwrite *bool `pulumi:"overwrite"`
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Parameter tier to assign to the parameter. If not specified, will use the default parameter tier for the region. Valid tiers are `Standard`, `Advanced`, and `Intelligent-Tiering`. Downgrading an `Advanced` tier parameter to `Standard` will recreate the resource. For more information on parameter tiers, see the [AWS SSM Parameter tier comparison and guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html).
	Tier *string `pulumi:"tier"`
	// Type of the parameter. Valid types are `String`, `StringList` and `SecureString`.
	//
	// The following arguments are optional:
	Type *string `pulumi:"type"`
	// Value of the parameter. This value is always marked as sensitive in the plan output, regardless of `type`.
	//
	// > **NOTE:** `aws:ssm:integration` dataType parameters must be of the type `SecureString` and the name must start with the prefix `/d9d01087-4a3f-49e0-b0b4-d568d7826553/ssm/integrations/webhook/`. See [here](https://docs.aws.amazon.com/systems-manager/latest/userguide/creating-integrations.html) for information on the usage of `aws:ssm:integration` parameters.
	Value *string `pulumi:"value"`
	// Version of the parameter.
	Version *int `pulumi:"version"`
}

type ParameterState struct {
	// Regular expression used to validate the parameter value.
	AllowedPattern pulumix.Input[*string]
	// ARN of the parameter.
	Arn pulumix.Input[*string]
	// Data type of the parameter. Valid values: `text`, `aws:ssm:integration` and `aws:ec2:image` for AMI format, see the [Native parameter support for Amazon Machine Image IDs](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html).
	DataType pulumix.Input[*string]
	// Description of the parameter.
	Description pulumix.Input[*string]
	// Value of the parameter. **Use caution:** This value is _never_ marked as sensitive in the preview. This argument is not valid with a `type` of `SecureString`.
	InsecureValue pulumix.Input[*string]
	// KMS key ID or ARN for encrypting a SecureString.
	KeyId pulumix.Input[*string]
	// Name of the parameter. If the name contains a path (e.g., any forward slashes (`/`)), it must be fully qualified with a leading forward slash (`/`). For additional requirements and constraints, see the [AWS SSM User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html).
	Name pulumix.Input[*string]
	// Overwrite an existing parameter. If not specified, defaults to `false` if the resource has not been created by Pulumi to avoid overwrite of existing resource, and will default to `true` otherwise (Pulumi lifecycle rules should then be used to manage the update behavior).
	//
	// Deprecated: this attribute has been deprecated
	Overwrite pulumix.Input[*bool]
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Parameter tier to assign to the parameter. If not specified, will use the default parameter tier for the region. Valid tiers are `Standard`, `Advanced`, and `Intelligent-Tiering`. Downgrading an `Advanced` tier parameter to `Standard` will recreate the resource. For more information on parameter tiers, see the [AWS SSM Parameter tier comparison and guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html).
	Tier pulumix.Input[*string]
	// Type of the parameter. Valid types are `String`, `StringList` and `SecureString`.
	//
	// The following arguments are optional:
	Type pulumix.Input[*string]
	// Value of the parameter. This value is always marked as sensitive in the plan output, regardless of `type`.
	//
	// > **NOTE:** `aws:ssm:integration` dataType parameters must be of the type `SecureString` and the name must start with the prefix `/d9d01087-4a3f-49e0-b0b4-d568d7826553/ssm/integrations/webhook/`. See [here](https://docs.aws.amazon.com/systems-manager/latest/userguide/creating-integrations.html) for information on the usage of `aws:ssm:integration` parameters.
	Value pulumix.Input[*string]
	// Version of the parameter.
	Version pulumix.Input[*int]
}

func (ParameterState) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterState)(nil)).Elem()
}

type parameterArgs struct {
	// Regular expression used to validate the parameter value.
	AllowedPattern *string `pulumi:"allowedPattern"`
	// ARN of the parameter.
	Arn *string `pulumi:"arn"`
	// Data type of the parameter. Valid values: `text`, `aws:ssm:integration` and `aws:ec2:image` for AMI format, see the [Native parameter support for Amazon Machine Image IDs](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html).
	DataType *string `pulumi:"dataType"`
	// Description of the parameter.
	Description *string `pulumi:"description"`
	// Value of the parameter. **Use caution:** This value is _never_ marked as sensitive in the preview. This argument is not valid with a `type` of `SecureString`.
	InsecureValue *string `pulumi:"insecureValue"`
	// KMS key ID or ARN for encrypting a SecureString.
	KeyId *string `pulumi:"keyId"`
	// Name of the parameter. If the name contains a path (e.g., any forward slashes (`/`)), it must be fully qualified with a leading forward slash (`/`). For additional requirements and constraints, see the [AWS SSM User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html).
	Name *string `pulumi:"name"`
	// Overwrite an existing parameter. If not specified, defaults to `false` if the resource has not been created by Pulumi to avoid overwrite of existing resource, and will default to `true` otherwise (Pulumi lifecycle rules should then be used to manage the update behavior).
	//
	// Deprecated: this attribute has been deprecated
	Overwrite *bool `pulumi:"overwrite"`
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Parameter tier to assign to the parameter. If not specified, will use the default parameter tier for the region. Valid tiers are `Standard`, `Advanced`, and `Intelligent-Tiering`. Downgrading an `Advanced` tier parameter to `Standard` will recreate the resource. For more information on parameter tiers, see the [AWS SSM Parameter tier comparison and guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html).
	Tier *string `pulumi:"tier"`
	// Type of the parameter. Valid types are `String`, `StringList` and `SecureString`.
	//
	// The following arguments are optional:
	Type string `pulumi:"type"`
	// Value of the parameter. This value is always marked as sensitive in the plan output, regardless of `type`.
	//
	// > **NOTE:** `aws:ssm:integration` dataType parameters must be of the type `SecureString` and the name must start with the prefix `/d9d01087-4a3f-49e0-b0b4-d568d7826553/ssm/integrations/webhook/`. See [here](https://docs.aws.amazon.com/systems-manager/latest/userguide/creating-integrations.html) for information on the usage of `aws:ssm:integration` parameters.
	Value *string `pulumi:"value"`
}

// The set of arguments for constructing a Parameter resource.
type ParameterArgs struct {
	// Regular expression used to validate the parameter value.
	AllowedPattern pulumix.Input[*string]
	// ARN of the parameter.
	Arn pulumix.Input[*string]
	// Data type of the parameter. Valid values: `text`, `aws:ssm:integration` and `aws:ec2:image` for AMI format, see the [Native parameter support for Amazon Machine Image IDs](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html).
	DataType pulumix.Input[*string]
	// Description of the parameter.
	Description pulumix.Input[*string]
	// Value of the parameter. **Use caution:** This value is _never_ marked as sensitive in the preview. This argument is not valid with a `type` of `SecureString`.
	InsecureValue pulumix.Input[*string]
	// KMS key ID or ARN for encrypting a SecureString.
	KeyId pulumix.Input[*string]
	// Name of the parameter. If the name contains a path (e.g., any forward slashes (`/`)), it must be fully qualified with a leading forward slash (`/`). For additional requirements and constraints, see the [AWS SSM User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html).
	Name pulumix.Input[*string]
	// Overwrite an existing parameter. If not specified, defaults to `false` if the resource has not been created by Pulumi to avoid overwrite of existing resource, and will default to `true` otherwise (Pulumi lifecycle rules should then be used to manage the update behavior).
	//
	// Deprecated: this attribute has been deprecated
	Overwrite pulumix.Input[*bool]
	// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Parameter tier to assign to the parameter. If not specified, will use the default parameter tier for the region. Valid tiers are `Standard`, `Advanced`, and `Intelligent-Tiering`. Downgrading an `Advanced` tier parameter to `Standard` will recreate the resource. For more information on parameter tiers, see the [AWS SSM Parameter tier comparison and guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html).
	Tier pulumix.Input[*string]
	// Type of the parameter. Valid types are `String`, `StringList` and `SecureString`.
	//
	// The following arguments are optional:
	Type pulumix.Input[string]
	// Value of the parameter. This value is always marked as sensitive in the plan output, regardless of `type`.
	//
	// > **NOTE:** `aws:ssm:integration` dataType parameters must be of the type `SecureString` and the name must start with the prefix `/d9d01087-4a3f-49e0-b0b4-d568d7826553/ssm/integrations/webhook/`. See [here](https://docs.aws.amazon.com/systems-manager/latest/userguide/creating-integrations.html) for information on the usage of `aws:ssm:integration` parameters.
	Value pulumix.Input[*string]
}

func (ParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterArgs)(nil)).Elem()
}

type ParameterOutput struct{ *pulumi.OutputState }

func (ParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Parameter)(nil)).Elem()
}

func (o ParameterOutput) ToParameterOutput() ParameterOutput {
	return o
}

func (o ParameterOutput) ToParameterOutputWithContext(ctx context.Context) ParameterOutput {
	return o
}

func (o ParameterOutput) ToOutput(ctx context.Context) pulumix.Output[Parameter] {
	return pulumix.Output[Parameter]{
		OutputState: o.OutputState,
	}
}

// Regular expression used to validate the parameter value.
func (o ParameterOutput) AllowedPattern() pulumix.Output[*string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[*string] { return v.AllowedPattern })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN of the parameter.
func (o ParameterOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Data type of the parameter. Valid values: `text`, `aws:ssm:integration` and `aws:ec2:image` for AMI format, see the [Native parameter support for Amazon Machine Image IDs](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html).
func (o ParameterOutput) DataType() pulumix.Output[string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[string] { return v.DataType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the parameter.
func (o ParameterOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Value of the parameter. **Use caution:** This value is _never_ marked as sensitive in the preview. This argument is not valid with a `type` of `SecureString`.
func (o ParameterOutput) InsecureValue() pulumix.Output[string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[string] { return v.InsecureValue })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// KMS key ID or ARN for encrypting a SecureString.
func (o ParameterOutput) KeyId() pulumix.Output[string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[string] { return v.KeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the parameter. If the name contains a path (e.g., any forward slashes (`/`)), it must be fully qualified with a leading forward slash (`/`). For additional requirements and constraints, see the [AWS SSM User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html).
func (o ParameterOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Overwrite an existing parameter. If not specified, defaults to `false` if the resource has not been created by Pulumi to avoid overwrite of existing resource, and will default to `true` otherwise (Pulumi lifecycle rules should then be used to manage the update behavior).
//
// Deprecated: this attribute has been deprecated
func (o ParameterOutput) Overwrite() pulumix.Output[*bool] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[*bool] { return v.Overwrite })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Map of tags to assign to the object. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ParameterOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ParameterOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Parameter tier to assign to the parameter. If not specified, will use the default parameter tier for the region. Valid tiers are `Standard`, `Advanced`, and `Intelligent-Tiering`. Downgrading an `Advanced` tier parameter to `Standard` will recreate the resource. For more information on parameter tiers, see the [AWS SSM Parameter tier comparison and guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html).
func (o ParameterOutput) Tier() pulumix.Output[*string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[*string] { return v.Tier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Type of the parameter. Valid types are `String`, `StringList` and `SecureString`.
//
// The following arguments are optional:
func (o ParameterOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Value of the parameter. This value is always marked as sensitive in the plan output, regardless of `type`.
//
// > **NOTE:** `aws:ssm:integration` dataType parameters must be of the type `SecureString` and the name must start with the prefix `/d9d01087-4a3f-49e0-b0b4-d568d7826553/ssm/integrations/webhook/`. See [here](https://docs.aws.amazon.com/systems-manager/latest/userguide/creating-integrations.html) for information on the usage of `aws:ssm:integration` parameters.
func (o ParameterOutput) Value() pulumix.Output[string] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[string] { return v.Value })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Version of the parameter.
func (o ParameterOutput) Version() pulumix.Output[int] {
	value := pulumix.Apply[Parameter](o, func(v Parameter) pulumix.Output[int] { return v.Version })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(ParameterOutput{})
}
