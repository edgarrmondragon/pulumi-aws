// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic MapReduce Studio Session Mapping.
type StudioSessionMapping struct {
	pulumi.CustomResourceState

	// The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityId pulumix.Output[string] `pulumi:"identityId"`
	// The name of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityName pulumix.Output[string] `pulumi:"identityName"`
	// Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
	IdentityType pulumix.Output[string] `pulumi:"identityType"`
	// The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
	SessionPolicyArn pulumix.Output[string] `pulumi:"sessionPolicyArn"`
	// The ID of the Amazon EMR Studio to which the user or group will be mapped.
	StudioId pulumix.Output[string] `pulumi:"studioId"`
}

// NewStudioSessionMapping registers a new resource with the given unique name, arguments, and options.
func NewStudioSessionMapping(ctx *pulumi.Context,
	name string, args *StudioSessionMappingArgs, opts ...pulumi.ResourceOption) (*StudioSessionMapping, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityType == nil {
		return nil, errors.New("invalid value for required argument 'IdentityType'")
	}
	if args.SessionPolicyArn == nil {
		return nil, errors.New("invalid value for required argument 'SessionPolicyArn'")
	}
	if args.StudioId == nil {
		return nil, errors.New("invalid value for required argument 'StudioId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StudioSessionMapping
	err := ctx.RegisterResource("aws:emr/studioSessionMapping:StudioSessionMapping", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStudioSessionMapping gets an existing StudioSessionMapping resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStudioSessionMapping(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StudioSessionMappingState, opts ...pulumi.ResourceOption) (*StudioSessionMapping, error) {
	var resource StudioSessionMapping
	err := ctx.ReadResource("aws:emr/studioSessionMapping:StudioSessionMapping", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StudioSessionMapping resources.
type studioSessionMappingState struct {
	// The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityId *string `pulumi:"identityId"`
	// The name of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityName *string `pulumi:"identityName"`
	// Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
	IdentityType *string `pulumi:"identityType"`
	// The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
	SessionPolicyArn *string `pulumi:"sessionPolicyArn"`
	// The ID of the Amazon EMR Studio to which the user or group will be mapped.
	StudioId *string `pulumi:"studioId"`
}

type StudioSessionMappingState struct {
	// The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityId pulumix.Input[*string]
	// The name of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityName pulumix.Input[*string]
	// Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
	IdentityType pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
	SessionPolicyArn pulumix.Input[*string]
	// The ID of the Amazon EMR Studio to which the user or group will be mapped.
	StudioId pulumix.Input[*string]
}

func (StudioSessionMappingState) ElementType() reflect.Type {
	return reflect.TypeOf((*studioSessionMappingState)(nil)).Elem()
}

type studioSessionMappingArgs struct {
	// The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityId *string `pulumi:"identityId"`
	// The name of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityName *string `pulumi:"identityName"`
	// Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
	IdentityType string `pulumi:"identityType"`
	// The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
	SessionPolicyArn string `pulumi:"sessionPolicyArn"`
	// The ID of the Amazon EMR Studio to which the user or group will be mapped.
	StudioId string `pulumi:"studioId"`
}

// The set of arguments for constructing a StudioSessionMapping resource.
type StudioSessionMappingArgs struct {
	// The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityId pulumix.Input[*string]
	// The name of the user or group from the Amazon Web Services SSO Identity Store.
	IdentityName pulumix.Input[*string]
	// Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
	IdentityType pulumix.Input[string]
	// The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
	SessionPolicyArn pulumix.Input[string]
	// The ID of the Amazon EMR Studio to which the user or group will be mapped.
	StudioId pulumix.Input[string]
}

func (StudioSessionMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*studioSessionMappingArgs)(nil)).Elem()
}

type StudioSessionMappingOutput struct{ *pulumi.OutputState }

func (StudioSessionMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioSessionMapping)(nil)).Elem()
}

func (o StudioSessionMappingOutput) ToStudioSessionMappingOutput() StudioSessionMappingOutput {
	return o
}

func (o StudioSessionMappingOutput) ToStudioSessionMappingOutputWithContext(ctx context.Context) StudioSessionMappingOutput {
	return o
}

func (o StudioSessionMappingOutput) ToOutput(ctx context.Context) pulumix.Output[StudioSessionMapping] {
	return pulumix.Output[StudioSessionMapping]{
		OutputState: o.OutputState,
	}
}

// The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
func (o StudioSessionMappingOutput) IdentityId() pulumix.Output[string] {
	value := pulumix.Apply[StudioSessionMapping](o, func(v StudioSessionMapping) pulumix.Output[string] { return v.IdentityId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the user or group from the Amazon Web Services SSO Identity Store.
func (o StudioSessionMappingOutput) IdentityName() pulumix.Output[string] {
	value := pulumix.Apply[StudioSessionMapping](o, func(v StudioSessionMapping) pulumix.Output[string] { return v.IdentityName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
func (o StudioSessionMappingOutput) IdentityType() pulumix.Output[string] {
	value := pulumix.Apply[StudioSessionMapping](o, func(v StudioSessionMapping) pulumix.Output[string] { return v.IdentityType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
func (o StudioSessionMappingOutput) SessionPolicyArn() pulumix.Output[string] {
	value := pulumix.Apply[StudioSessionMapping](o, func(v StudioSessionMapping) pulumix.Output[string] { return v.SessionPolicyArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the Amazon EMR Studio to which the user or group will be mapped.
func (o StudioSessionMappingOutput) StudioId() pulumix.Output[string] {
	value := pulumix.Apply[StudioSessionMapping](o, func(v StudioSessionMapping) pulumix.Output[string] { return v.StudioId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(StudioSessionMappingOutput{})
}
