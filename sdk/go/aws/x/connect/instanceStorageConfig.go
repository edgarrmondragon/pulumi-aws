// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect Instance Storage Config resource. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
type InstanceStorageConfig struct {
	pulumi.CustomResourceState

	// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
	AssociationId pulumix.Output[string] `pulumi:"associationId"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Output[string] `pulumi:"instanceId"`
	// A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS`.
	ResourceType pulumix.Output[string] `pulumi:"resourceType"`
	// Specifies the storage configuration options for the Connect Instance. Documented below.
	StorageConfig pulumix.GPtrOutput[InstanceStorageConfigStorageConfig, InstanceStorageConfigStorageConfigOutput] `pulumi:"storageConfig"`
}

// NewInstanceStorageConfig registers a new resource with the given unique name, arguments, and options.
func NewInstanceStorageConfig(ctx *pulumi.Context,
	name string, args *InstanceStorageConfigArgs, opts ...pulumi.ResourceOption) (*InstanceStorageConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	if args.StorageConfig == nil {
		return nil, errors.New("invalid value for required argument 'StorageConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceStorageConfig
	err := ctx.RegisterResource("aws:connect/instanceStorageConfig:InstanceStorageConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceStorageConfig gets an existing InstanceStorageConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceStorageConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceStorageConfigState, opts ...pulumi.ResourceOption) (*InstanceStorageConfig, error) {
	var resource InstanceStorageConfig
	err := ctx.ReadResource("aws:connect/instanceStorageConfig:InstanceStorageConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceStorageConfig resources.
type instanceStorageConfigState struct {
	// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
	AssociationId *string `pulumi:"associationId"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId *string `pulumi:"instanceId"`
	// A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS`.
	ResourceType *string `pulumi:"resourceType"`
	// Specifies the storage configuration options for the Connect Instance. Documented below.
	StorageConfig *InstanceStorageConfigStorageConfig `pulumi:"storageConfig"`
}

type InstanceStorageConfigState struct {
	// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
	AssociationId pulumix.Input[*string]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[*string]
	// A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS`.
	ResourceType pulumix.Input[*string]
	// Specifies the storage configuration options for the Connect Instance. Documented below.
	StorageConfig pulumix.Input[*InstanceStorageConfigStorageConfigArgs]
}

func (InstanceStorageConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceStorageConfigState)(nil)).Elem()
}

type instanceStorageConfigArgs struct {
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId string `pulumi:"instanceId"`
	// A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS`.
	ResourceType string `pulumi:"resourceType"`
	// Specifies the storage configuration options for the Connect Instance. Documented below.
	StorageConfig InstanceStorageConfigStorageConfig `pulumi:"storageConfig"`
}

// The set of arguments for constructing a InstanceStorageConfig resource.
type InstanceStorageConfigArgs struct {
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[string]
	// A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS`.
	ResourceType pulumix.Input[string]
	// Specifies the storage configuration options for the Connect Instance. Documented below.
	StorageConfig pulumix.Input[*InstanceStorageConfigStorageConfigArgs]
}

func (InstanceStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceStorageConfigArgs)(nil)).Elem()
}

type InstanceStorageConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfig)(nil)).Elem()
}

func (o InstanceStorageConfigOutput) ToInstanceStorageConfigOutput() InstanceStorageConfigOutput {
	return o
}

func (o InstanceStorageConfigOutput) ToInstanceStorageConfigOutputWithContext(ctx context.Context) InstanceStorageConfigOutput {
	return o
}

func (o InstanceStorageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfig] {
	return pulumix.Output[InstanceStorageConfig]{
		OutputState: o.OutputState,
	}
}

// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
func (o InstanceStorageConfigOutput) AssociationId() pulumix.Output[string] {
	value := pulumix.Apply[InstanceStorageConfig](o, func(v InstanceStorageConfig) pulumix.Output[string] { return v.AssociationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the identifier of the hosting Amazon Connect Instance.
func (o InstanceStorageConfigOutput) InstanceId() pulumix.Output[string] {
	value := pulumix.Apply[InstanceStorageConfig](o, func(v InstanceStorageConfig) pulumix.Output[string] { return v.InstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS`.
func (o InstanceStorageConfigOutput) ResourceType() pulumix.Output[string] {
	value := pulumix.Apply[InstanceStorageConfig](o, func(v InstanceStorageConfig) pulumix.Output[string] { return v.ResourceType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the storage configuration options for the Connect Instance. Documented below.
func (o InstanceStorageConfigOutput) StorageConfig() pulumix.GPtrOutput[InstanceStorageConfigStorageConfig, InstanceStorageConfigStorageConfigOutput] {
	value := pulumix.Apply[InstanceStorageConfig](o, func(v InstanceStorageConfig) pulumix.GPtrOutput[InstanceStorageConfigStorageConfig, InstanceStorageConfigStorageConfigOutput] {
		return v.StorageConfig
	})
	unwrapped := pulumix.Flatten[*InstanceStorageConfigStorageConfig, pulumix.GPtrOutput[InstanceStorageConfigStorageConfig, InstanceStorageConfigStorageConfigOutput]](value)
	return pulumix.GPtrOutput[InstanceStorageConfigStorageConfig, InstanceStorageConfigStorageConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(InstanceStorageConfigOutput{})
}
