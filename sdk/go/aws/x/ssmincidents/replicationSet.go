// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmincidents

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource for managing a replication set in AWS Systems Manager Incident Manager.
//
// > **NOTE:** Deleting a replication set also deletes all Incident Manager related data including response plans, incident records, contacts and escalation plans.
type ReplicationSet struct {
	pulumi.CustomResourceState

	// The ARN of the replication set.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ARN of the user who created the replication set.
	CreatedBy pulumix.Output[string] `pulumi:"createdBy"`
	// If `true`, the last region in a replication set cannot be deleted.
	DeletionProtected pulumix.Output[bool] `pulumi:"deletionProtected"`
	// A timestamp showing when the replication set was last modified.
	LastModifiedBy pulumix.Output[string]                                                 `pulumi:"lastModifiedBy"`
	Regions        pulumix.GArrayOutput[ReplicationSetRegion, ReplicationSetRegionOutput] `pulumi:"regions"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status pulumix.Output[string] `pulumi:"status"`
	// Tags applied to the replication set.
	//
	// For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewReplicationSet registers a new resource with the given unique name, arguments, and options.
func NewReplicationSet(ctx *pulumi.Context,
	name string, args *ReplicationSetArgs, opts ...pulumi.ResourceOption) (*ReplicationSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Regions == nil {
		return nil, errors.New("invalid value for required argument 'Regions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReplicationSet
	err := ctx.RegisterResource("aws:ssmincidents/replicationSet:ReplicationSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplicationSet gets an existing ReplicationSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicationSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicationSetState, opts ...pulumi.ResourceOption) (*ReplicationSet, error) {
	var resource ReplicationSet
	err := ctx.ReadResource("aws:ssmincidents/replicationSet:ReplicationSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReplicationSet resources.
type replicationSetState struct {
	// The ARN of the replication set.
	Arn *string `pulumi:"arn"`
	// The ARN of the user who created the replication set.
	CreatedBy *string `pulumi:"createdBy"`
	// If `true`, the last region in a replication set cannot be deleted.
	DeletionProtected *bool `pulumi:"deletionProtected"`
	// A timestamp showing when the replication set was last modified.
	LastModifiedBy *string                `pulumi:"lastModifiedBy"`
	Regions        []ReplicationSetRegion `pulumi:"regions"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status *string `pulumi:"status"`
	// Tags applied to the replication set.
	//
	// For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ReplicationSetState struct {
	// The ARN of the replication set.
	Arn pulumix.Input[*string]
	// The ARN of the user who created the replication set.
	CreatedBy pulumix.Input[*string]
	// If `true`, the last region in a replication set cannot be deleted.
	DeletionProtected pulumix.Input[*bool]
	// A timestamp showing when the replication set was last modified.
	LastModifiedBy pulumix.Input[*string]
	Regions        pulumix.Input[[]*ReplicationSetRegionArgs]
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status pulumix.Input[*string]
	// Tags applied to the replication set.
	//
	// For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ReplicationSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationSetState)(nil)).Elem()
}

type replicationSetArgs struct {
	Regions []ReplicationSetRegion `pulumi:"regions"`
	// Tags applied to the replication set.
	//
	// For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ReplicationSet resource.
type ReplicationSetArgs struct {
	Regions pulumix.Input[[]*ReplicationSetRegionArgs]
	// Tags applied to the replication set.
	//
	// For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
	Tags pulumix.Input[map[string]string]
}

func (ReplicationSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationSetArgs)(nil)).Elem()
}

type ReplicationSetOutput struct{ *pulumi.OutputState }

func (ReplicationSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSet)(nil)).Elem()
}

func (o ReplicationSetOutput) ToReplicationSetOutput() ReplicationSetOutput {
	return o
}

func (o ReplicationSetOutput) ToReplicationSetOutputWithContext(ctx context.Context) ReplicationSetOutput {
	return o
}

func (o ReplicationSetOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationSet] {
	return pulumix.Output[ReplicationSet]{
		OutputState: o.OutputState,
	}
}

// The ARN of the replication set.
func (o ReplicationSetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationSet](o, func(v ReplicationSet) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the user who created the replication set.
func (o ReplicationSetOutput) CreatedBy() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationSet](o, func(v ReplicationSet) pulumix.Output[string] { return v.CreatedBy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If `true`, the last region in a replication set cannot be deleted.
func (o ReplicationSetOutput) DeletionProtected() pulumix.Output[bool] {
	value := pulumix.Apply[ReplicationSet](o, func(v ReplicationSet) pulumix.Output[bool] { return v.DeletionProtected })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// A timestamp showing when the replication set was last modified.
func (o ReplicationSetOutput) LastModifiedBy() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationSet](o, func(v ReplicationSet) pulumix.Output[string] { return v.LastModifiedBy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o ReplicationSetOutput) Regions() pulumix.GArrayOutput[ReplicationSetRegion, ReplicationSetRegionOutput] {
	value := pulumix.Apply[ReplicationSet](o, func(v ReplicationSet) pulumix.GArrayOutput[ReplicationSetRegion, ReplicationSetRegionOutput] {
		return v.Regions
	})
	unwrapped := pulumix.Flatten[[]ReplicationSetRegion, pulumix.GArrayOutput[ReplicationSetRegion, ReplicationSetRegionOutput]](value)
	return pulumix.GArrayOutput[ReplicationSetRegion, ReplicationSetRegionOutput]{OutputState: unwrapped.OutputState}
}

// The current status of the Region.
// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
func (o ReplicationSetOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationSet](o, func(v ReplicationSet) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Tags applied to the replication set.
//
// For information about the maximum allowed number of Regions and tag value constraints, see [CreateReplicationSet in the *AWS Systems Manager Incident Manager API Reference*](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateReplicationSet.html).
func (o ReplicationSetOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ReplicationSet](o, func(v ReplicationSet) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ReplicationSetOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ReplicationSet](o, func(v ReplicationSet) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ReplicationSetOutput{})
}
