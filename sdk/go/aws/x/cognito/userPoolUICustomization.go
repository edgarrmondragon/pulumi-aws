// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Cognito User Pool UI Customization resource.
//
// > **Note:** To use this resource, the user pool must have a domain associated with it. For more information, see the Amazon Cognito Developer Guide on [Customizing the Built-in Sign-In and Sign-up Webpages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-app-ui-customization.html).
type UserPoolUICustomization struct {
	pulumi.CustomResourceState

	// The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `imageFile` settings will be used for every client that has no UI customization set previously.
	ClientId pulumix.Output[*string] `pulumi:"clientId"`
	// The creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
	CreationDate pulumix.Output[string] `pulumi:"creationDate"`
	// The CSS values in the UI customization, provided as a String. At least one of `css` or `imageFile` is required.
	Css pulumix.Output[*string] `pulumi:"css"`
	// The CSS version number.
	CssVersion pulumix.Output[string] `pulumi:"cssVersion"`
	// The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `imageFile` is required.
	ImageFile pulumix.Output[*string] `pulumi:"imageFile"`
	// The logo image URL for the UI customization.
	ImageUrl pulumix.Output[string] `pulumi:"imageUrl"`
	// The last-modified date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
	LastModifiedDate pulumix.Output[string] `pulumi:"lastModifiedDate"`
	// The user pool ID for the user pool.
	UserPoolId pulumix.Output[string] `pulumi:"userPoolId"`
}

// NewUserPoolUICustomization registers a new resource with the given unique name, arguments, and options.
func NewUserPoolUICustomization(ctx *pulumi.Context,
	name string, args *UserPoolUICustomizationArgs, opts ...pulumi.ResourceOption) (*UserPoolUICustomization, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UserPoolId == nil {
		return nil, errors.New("invalid value for required argument 'UserPoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserPoolUICustomization
	err := ctx.RegisterResource("aws:cognito/userPoolUICustomization:UserPoolUICustomization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserPoolUICustomization gets an existing UserPoolUICustomization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserPoolUICustomization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserPoolUICustomizationState, opts ...pulumi.ResourceOption) (*UserPoolUICustomization, error) {
	var resource UserPoolUICustomization
	err := ctx.ReadResource("aws:cognito/userPoolUICustomization:UserPoolUICustomization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserPoolUICustomization resources.
type userPoolUICustomizationState struct {
	// The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `imageFile` settings will be used for every client that has no UI customization set previously.
	ClientId *string `pulumi:"clientId"`
	// The creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
	CreationDate *string `pulumi:"creationDate"`
	// The CSS values in the UI customization, provided as a String. At least one of `css` or `imageFile` is required.
	Css *string `pulumi:"css"`
	// The CSS version number.
	CssVersion *string `pulumi:"cssVersion"`
	// The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `imageFile` is required.
	ImageFile *string `pulumi:"imageFile"`
	// The logo image URL for the UI customization.
	ImageUrl *string `pulumi:"imageUrl"`
	// The last-modified date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
	LastModifiedDate *string `pulumi:"lastModifiedDate"`
	// The user pool ID for the user pool.
	UserPoolId *string `pulumi:"userPoolId"`
}

type UserPoolUICustomizationState struct {
	// The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `imageFile` settings will be used for every client that has no UI customization set previously.
	ClientId pulumix.Input[*string]
	// The creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
	CreationDate pulumix.Input[*string]
	// The CSS values in the UI customization, provided as a String. At least one of `css` or `imageFile` is required.
	Css pulumix.Input[*string]
	// The CSS version number.
	CssVersion pulumix.Input[*string]
	// The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `imageFile` is required.
	ImageFile pulumix.Input[*string]
	// The logo image URL for the UI customization.
	ImageUrl pulumix.Input[*string]
	// The last-modified date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
	LastModifiedDate pulumix.Input[*string]
	// The user pool ID for the user pool.
	UserPoolId pulumix.Input[*string]
}

func (UserPoolUICustomizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolUICustomizationState)(nil)).Elem()
}

type userPoolUICustomizationArgs struct {
	// The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `imageFile` settings will be used for every client that has no UI customization set previously.
	ClientId *string `pulumi:"clientId"`
	// The CSS values in the UI customization, provided as a String. At least one of `css` or `imageFile` is required.
	Css *string `pulumi:"css"`
	// The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `imageFile` is required.
	ImageFile *string `pulumi:"imageFile"`
	// The user pool ID for the user pool.
	UserPoolId string `pulumi:"userPoolId"`
}

// The set of arguments for constructing a UserPoolUICustomization resource.
type UserPoolUICustomizationArgs struct {
	// The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `imageFile` settings will be used for every client that has no UI customization set previously.
	ClientId pulumix.Input[*string]
	// The CSS values in the UI customization, provided as a String. At least one of `css` or `imageFile` is required.
	Css pulumix.Input[*string]
	// The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `imageFile` is required.
	ImageFile pulumix.Input[*string]
	// The user pool ID for the user pool.
	UserPoolId pulumix.Input[string]
}

func (UserPoolUICustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolUICustomizationArgs)(nil)).Elem()
}

type UserPoolUICustomizationOutput struct{ *pulumi.OutputState }

func (UserPoolUICustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUICustomization)(nil)).Elem()
}

func (o UserPoolUICustomizationOutput) ToUserPoolUICustomizationOutput() UserPoolUICustomizationOutput {
	return o
}

func (o UserPoolUICustomizationOutput) ToUserPoolUICustomizationOutputWithContext(ctx context.Context) UserPoolUICustomizationOutput {
	return o
}

func (o UserPoolUICustomizationOutput) ToOutput(ctx context.Context) pulumix.Output[UserPoolUICustomization] {
	return pulumix.Output[UserPoolUICustomization]{
		OutputState: o.OutputState,
	}
}

// The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `imageFile` settings will be used for every client that has no UI customization set previously.
func (o UserPoolUICustomizationOutput) ClientId() pulumix.Output[*string] {
	value := pulumix.Apply[UserPoolUICustomization](o, func(v UserPoolUICustomization) pulumix.Output[*string] { return v.ClientId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
func (o UserPoolUICustomizationOutput) CreationDate() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolUICustomization](o, func(v UserPoolUICustomization) pulumix.Output[string] { return v.CreationDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The CSS values in the UI customization, provided as a String. At least one of `css` or `imageFile` is required.
func (o UserPoolUICustomizationOutput) Css() pulumix.Output[*string] {
	value := pulumix.Apply[UserPoolUICustomization](o, func(v UserPoolUICustomization) pulumix.Output[*string] { return v.Css })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The CSS version number.
func (o UserPoolUICustomizationOutput) CssVersion() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolUICustomization](o, func(v UserPoolUICustomization) pulumix.Output[string] { return v.CssVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `imageFile` is required.
func (o UserPoolUICustomizationOutput) ImageFile() pulumix.Output[*string] {
	value := pulumix.Apply[UserPoolUICustomization](o, func(v UserPoolUICustomization) pulumix.Output[*string] { return v.ImageFile })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The logo image URL for the UI customization.
func (o UserPoolUICustomizationOutput) ImageUrl() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolUICustomization](o, func(v UserPoolUICustomization) pulumix.Output[string] { return v.ImageUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The last-modified date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
func (o UserPoolUICustomizationOutput) LastModifiedDate() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolUICustomization](o, func(v UserPoolUICustomization) pulumix.Output[string] { return v.LastModifiedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The user pool ID for the user pool.
func (o UserPoolUICustomizationOutput) UserPoolId() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolUICustomization](o, func(v UserPoolUICustomization) pulumix.Output[string] { return v.UserPoolId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(UserPoolUICustomizationOutput{})
}
