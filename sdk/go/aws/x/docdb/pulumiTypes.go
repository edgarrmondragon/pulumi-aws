// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package docdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ClusterParameterGroupParameter struct {
	// Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
	ApplyMethod *string `pulumi:"applyMethod"`
	// The name of the DocumentDB parameter.
	Name string `pulumi:"name"`
	// The value of the DocumentDB parameter.
	Value string `pulumi:"value"`
}

type ClusterParameterGroupParameterArgs struct {
	// Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
	ApplyMethod pulumix.Input[*string] `pulumi:"applyMethod"`
	// The name of the DocumentDB parameter.
	Name pulumix.Input[string] `pulumi:"name"`
	// The value of the DocumentDB parameter.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (ClusterParameterGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupParameter)(nil)).Elem()
}

func (i ClusterParameterGroupParameterArgs) ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput {
	return i.ToClusterParameterGroupParameterOutputWithContext(context.Background())
}

func (i ClusterParameterGroupParameterArgs) ToClusterParameterGroupParameterOutputWithContext(ctx context.Context) ClusterParameterGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterGroupParameterOutput)
}

func (i *ClusterParameterGroupParameterArgs) ToOutput(ctx context.Context) pulumix.Output[*ClusterParameterGroupParameterArgs] {
	return pulumix.Val(i)
}

type ClusterParameterGroupParameterOutput struct{ *pulumi.OutputState }

func (ClusterParameterGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupParameter)(nil)).Elem()
}

func (o ClusterParameterGroupParameterOutput) ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput {
	return o
}

func (o ClusterParameterGroupParameterOutput) ToClusterParameterGroupParameterOutputWithContext(ctx context.Context) ClusterParameterGroupParameterOutput {
	return o
}

func (o ClusterParameterGroupParameterOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterParameterGroupParameter] {
	return pulumix.Output[ClusterParameterGroupParameter]{
		OutputState: o.OutputState,
	}
}

// Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
func (o ClusterParameterGroupParameterOutput) ApplyMethod() pulumix.Output[*string] {
	return pulumix.Apply[ClusterParameterGroupParameter](o, func(v ClusterParameterGroupParameter) *string { return v.ApplyMethod })
}

// The name of the DocumentDB parameter.
func (o ClusterParameterGroupParameterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[ClusterParameterGroupParameter](o, func(v ClusterParameterGroupParameter) string { return v.Name })
}

// The value of the DocumentDB parameter.
func (o ClusterParameterGroupParameterOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[ClusterParameterGroupParameter](o, func(v ClusterParameterGroupParameter) string { return v.Value })
}

type GlobalClusterGlobalClusterMember struct {
	// Amazon Resource Name (ARN) of member DB Cluster.
	DbClusterArn *string `pulumi:"dbClusterArn"`
	// Whether the member is the primary DB Cluster.
	IsWriter *bool `pulumi:"isWriter"`
}

type GlobalClusterGlobalClusterMemberArgs struct {
	// Amazon Resource Name (ARN) of member DB Cluster.
	DbClusterArn pulumix.Input[*string] `pulumi:"dbClusterArn"`
	// Whether the member is the primary DB Cluster.
	IsWriter pulumix.Input[*bool] `pulumi:"isWriter"`
}

func (GlobalClusterGlobalClusterMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (i GlobalClusterGlobalClusterMemberArgs) ToGlobalClusterGlobalClusterMemberOutput() GlobalClusterGlobalClusterMemberOutput {
	return i.ToGlobalClusterGlobalClusterMemberOutputWithContext(context.Background())
}

func (i GlobalClusterGlobalClusterMemberArgs) ToGlobalClusterGlobalClusterMemberOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterGlobalClusterMemberOutput)
}

func (i *GlobalClusterGlobalClusterMemberArgs) ToOutput(ctx context.Context) pulumix.Output[*GlobalClusterGlobalClusterMemberArgs] {
	return pulumix.Val(i)
}

type GlobalClusterGlobalClusterMemberOutput struct{ *pulumi.OutputState }

func (GlobalClusterGlobalClusterMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (o GlobalClusterGlobalClusterMemberOutput) ToGlobalClusterGlobalClusterMemberOutput() GlobalClusterGlobalClusterMemberOutput {
	return o
}

func (o GlobalClusterGlobalClusterMemberOutput) ToGlobalClusterGlobalClusterMemberOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberOutput {
	return o
}

func (o GlobalClusterGlobalClusterMemberOutput) ToOutput(ctx context.Context) pulumix.Output[GlobalClusterGlobalClusterMember] {
	return pulumix.Output[GlobalClusterGlobalClusterMember]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of member DB Cluster.
func (o GlobalClusterGlobalClusterMemberOutput) DbClusterArn() pulumix.Output[*string] {
	return pulumix.Apply[GlobalClusterGlobalClusterMember](o, func(v GlobalClusterGlobalClusterMember) *string { return v.DbClusterArn })
}

// Whether the member is the primary DB Cluster.
func (o GlobalClusterGlobalClusterMemberOutput) IsWriter() pulumix.Output[*bool] {
	return pulumix.Apply[GlobalClusterGlobalClusterMember](o, func(v GlobalClusterGlobalClusterMember) *bool { return v.IsWriter })
}

func init() {
	pulumi.RegisterOutputType(ClusterParameterGroupParameterOutput{})
	pulumi.RegisterOutputType(GlobalClusterGlobalClusterMemberOutput{})
}
