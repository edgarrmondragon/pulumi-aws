// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AppConfig Configuration Profile resource.
type ConfigurationProfile struct {
	pulumi.CustomResourceState

	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId pulumix.Output[string] `pulumi:"applicationId"`
	// ARN of the AppConfig Configuration Profile.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The configuration profile ID.
	ConfigurationProfileId pulumix.Output[string] `pulumi:"configurationProfileId"`
	// Description of the configuration profile. Can be at most 1024 characters.
	Description pulumix.Output[*string] `pulumi:"description"`
	// URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify `hosted`. For an SSM document, specify either the document name in the format `ssm-document://<Document_name>` or the ARN. For a parameter, specify either the parameter name in the format `ssm-parameter://<Parameter_name>` or the ARN. For an Amazon S3 object, specify the URI in the following format: `s3://<bucket>/<objectKey>`.
	LocationUri pulumix.Output[string] `pulumi:"locationUri"`
	// Name for the configuration profile. Must be between 1 and 64 characters in length.
	Name pulumix.Output[string] `pulumi:"name"`
	// ARN of an IAM role with permission to access the configuration at the specified `locationUri`. A retrieval role ARN is not required for configurations stored in the AWS AppConfig `hosted` configuration store. It is required for all other sources that store your configuration.
	RetrievalRoleArn pulumix.Output[*string] `pulumi:"retrievalRoleArn"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Type of configurations contained in the profile. Valid values: `AWS.AppConfig.FeatureFlags` and `AWS.Freeform`.  Default: `AWS.Freeform`.
	Type pulumix.Output[*string] `pulumi:"type"`
	// Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
	Validators pulumix.GArrayOutput[ConfigurationProfileValidator, ConfigurationProfileValidatorOutput] `pulumi:"validators"`
}

// NewConfigurationProfile registers a new resource with the given unique name, arguments, and options.
func NewConfigurationProfile(ctx *pulumi.Context,
	name string, args *ConfigurationProfileArgs, opts ...pulumi.ResourceOption) (*ConfigurationProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.LocationUri == nil {
		return nil, errors.New("invalid value for required argument 'LocationUri'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigurationProfile
	err := ctx.RegisterResource("aws:appconfig/configurationProfile:ConfigurationProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationProfile gets an existing ConfigurationProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationProfileState, opts ...pulumi.ResourceOption) (*ConfigurationProfile, error) {
	var resource ConfigurationProfile
	err := ctx.ReadResource("aws:appconfig/configurationProfile:ConfigurationProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationProfile resources.
type configurationProfileState struct {
	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId *string `pulumi:"applicationId"`
	// ARN of the AppConfig Configuration Profile.
	Arn *string `pulumi:"arn"`
	// The configuration profile ID.
	ConfigurationProfileId *string `pulumi:"configurationProfileId"`
	// Description of the configuration profile. Can be at most 1024 characters.
	Description *string `pulumi:"description"`
	// URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify `hosted`. For an SSM document, specify either the document name in the format `ssm-document://<Document_name>` or the ARN. For a parameter, specify either the parameter name in the format `ssm-parameter://<Parameter_name>` or the ARN. For an Amazon S3 object, specify the URI in the following format: `s3://<bucket>/<objectKey>`.
	LocationUri *string `pulumi:"locationUri"`
	// Name for the configuration profile. Must be between 1 and 64 characters in length.
	Name *string `pulumi:"name"`
	// ARN of an IAM role with permission to access the configuration at the specified `locationUri`. A retrieval role ARN is not required for configurations stored in the AWS AppConfig `hosted` configuration store. It is required for all other sources that store your configuration.
	RetrievalRoleArn *string `pulumi:"retrievalRoleArn"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Type of configurations contained in the profile. Valid values: `AWS.AppConfig.FeatureFlags` and `AWS.Freeform`.  Default: `AWS.Freeform`.
	Type *string `pulumi:"type"`
	// Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
	Validators []ConfigurationProfileValidator `pulumi:"validators"`
}

type ConfigurationProfileState struct {
	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId pulumix.Input[*string]
	// ARN of the AppConfig Configuration Profile.
	Arn pulumix.Input[*string]
	// The configuration profile ID.
	ConfigurationProfileId pulumix.Input[*string]
	// Description of the configuration profile. Can be at most 1024 characters.
	Description pulumix.Input[*string]
	// URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify `hosted`. For an SSM document, specify either the document name in the format `ssm-document://<Document_name>` or the ARN. For a parameter, specify either the parameter name in the format `ssm-parameter://<Parameter_name>` or the ARN. For an Amazon S3 object, specify the URI in the following format: `s3://<bucket>/<objectKey>`.
	LocationUri pulumix.Input[*string]
	// Name for the configuration profile. Must be between 1 and 64 characters in length.
	Name pulumix.Input[*string]
	// ARN of an IAM role with permission to access the configuration at the specified `locationUri`. A retrieval role ARN is not required for configurations stored in the AWS AppConfig `hosted` configuration store. It is required for all other sources that store your configuration.
	RetrievalRoleArn pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Type of configurations contained in the profile. Valid values: `AWS.AppConfig.FeatureFlags` and `AWS.Freeform`.  Default: `AWS.Freeform`.
	Type pulumix.Input[*string]
	// Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
	Validators pulumix.Input[[]*ConfigurationProfileValidatorArgs]
}

func (ConfigurationProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationProfileState)(nil)).Elem()
}

type configurationProfileArgs struct {
	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId string `pulumi:"applicationId"`
	// Description of the configuration profile. Can be at most 1024 characters.
	Description *string `pulumi:"description"`
	// URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify `hosted`. For an SSM document, specify either the document name in the format `ssm-document://<Document_name>` or the ARN. For a parameter, specify either the parameter name in the format `ssm-parameter://<Parameter_name>` or the ARN. For an Amazon S3 object, specify the URI in the following format: `s3://<bucket>/<objectKey>`.
	LocationUri string `pulumi:"locationUri"`
	// Name for the configuration profile. Must be between 1 and 64 characters in length.
	Name *string `pulumi:"name"`
	// ARN of an IAM role with permission to access the configuration at the specified `locationUri`. A retrieval role ARN is not required for configurations stored in the AWS AppConfig `hosted` configuration store. It is required for all other sources that store your configuration.
	RetrievalRoleArn *string `pulumi:"retrievalRoleArn"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Type of configurations contained in the profile. Valid values: `AWS.AppConfig.FeatureFlags` and `AWS.Freeform`.  Default: `AWS.Freeform`.
	Type *string `pulumi:"type"`
	// Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
	Validators []ConfigurationProfileValidator `pulumi:"validators"`
}

// The set of arguments for constructing a ConfigurationProfile resource.
type ConfigurationProfileArgs struct {
	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId pulumix.Input[string]
	// Description of the configuration profile. Can be at most 1024 characters.
	Description pulumix.Input[*string]
	// URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify `hosted`. For an SSM document, specify either the document name in the format `ssm-document://<Document_name>` or the ARN. For a parameter, specify either the parameter name in the format `ssm-parameter://<Parameter_name>` or the ARN. For an Amazon S3 object, specify the URI in the following format: `s3://<bucket>/<objectKey>`.
	LocationUri pulumix.Input[string]
	// Name for the configuration profile. Must be between 1 and 64 characters in length.
	Name pulumix.Input[*string]
	// ARN of an IAM role with permission to access the configuration at the specified `locationUri`. A retrieval role ARN is not required for configurations stored in the AWS AppConfig `hosted` configuration store. It is required for all other sources that store your configuration.
	RetrievalRoleArn pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Type of configurations contained in the profile. Valid values: `AWS.AppConfig.FeatureFlags` and `AWS.Freeform`.  Default: `AWS.Freeform`.
	Type pulumix.Input[*string]
	// Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
	Validators pulumix.Input[[]*ConfigurationProfileValidatorArgs]
}

func (ConfigurationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationProfileArgs)(nil)).Elem()
}

type ConfigurationProfileOutput struct{ *pulumi.OutputState }

func (ConfigurationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationProfile)(nil)).Elem()
}

func (o ConfigurationProfileOutput) ToConfigurationProfileOutput() ConfigurationProfileOutput {
	return o
}

func (o ConfigurationProfileOutput) ToConfigurationProfileOutputWithContext(ctx context.Context) ConfigurationProfileOutput {
	return o
}

func (o ConfigurationProfileOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationProfile] {
	return pulumix.Output[ConfigurationProfile]{
		OutputState: o.OutputState,
	}
}

// Application ID. Must be between 4 and 7 characters in length.
func (o ConfigurationProfileOutput) ApplicationId() pulumix.Output[string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.Output[string] { return v.ApplicationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the AppConfig Configuration Profile.
func (o ConfigurationProfileOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The configuration profile ID.
func (o ConfigurationProfileOutput) ConfigurationProfileId() pulumix.Output[string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.Output[string] { return v.ConfigurationProfileId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the configuration profile. Can be at most 1024 characters.
func (o ConfigurationProfileOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify `hosted`. For an SSM document, specify either the document name in the format `ssm-document://<Document_name>` or the ARN. For a parameter, specify either the parameter name in the format `ssm-parameter://<Parameter_name>` or the ARN. For an Amazon S3 object, specify the URI in the following format: `s3://<bucket>/<objectKey>`.
func (o ConfigurationProfileOutput) LocationUri() pulumix.Output[string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.Output[string] { return v.LocationUri })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name for the configuration profile. Must be between 1 and 64 characters in length.
func (o ConfigurationProfileOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of an IAM role with permission to access the configuration at the specified `locationUri`. A retrieval role ARN is not required for configurations stored in the AWS AppConfig `hosted` configuration store. It is required for all other sources that store your configuration.
func (o ConfigurationProfileOutput) RetrievalRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.Output[*string] { return v.RetrievalRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ConfigurationProfileOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ConfigurationProfileOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Type of configurations contained in the profile. Valid values: `AWS.AppConfig.FeatureFlags` and `AWS.Freeform`.  Default: `AWS.Freeform`.
func (o ConfigurationProfileOutput) Type() pulumix.Output[*string] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.Output[*string] { return v.Type })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
func (o ConfigurationProfileOutput) Validators() pulumix.GArrayOutput[ConfigurationProfileValidator, ConfigurationProfileValidatorOutput] {
	value := pulumix.Apply[ConfigurationProfile](o, func(v ConfigurationProfile) pulumix.GArrayOutput[ConfigurationProfileValidator, ConfigurationProfileValidatorOutput] {
		return v.Validators
	})
	unwrapped := pulumix.Flatten[[]ConfigurationProfileValidator, pulumix.GArrayOutput[ConfigurationProfileValidator, ConfigurationProfileValidatorOutput]](value)
	return pulumix.GArrayOutput[ConfigurationProfileValidator, ConfigurationProfileValidatorOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ConfigurationProfileOutput{})
}
