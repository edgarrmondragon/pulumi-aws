// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outposts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about an Outposts Site.
func GetSite(ctx *pulumi.Context, args *GetSiteArgs, opts ...pulumi.InvokeOption) (*GetSiteResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSiteResult
	err := ctx.Invoke("aws:outposts/getSite:getSite", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSite.
type GetSiteArgs struct {
	// Identifier of the Site.
	Id *string `pulumi:"id"`
	// Name of the Site.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getSite.
type GetSiteResult struct {
	// AWS Account identifier.
	AccountId string `pulumi:"accountId"`
	// Description.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
}

func GetSiteOutput(ctx *pulumi.Context, args GetSiteOutputArgs, opts ...pulumi.InvokeOption) GetSiteResultOutput {
	outputResult := pulumix.ApplyErr[*GetSiteArgs](args.ToOutput(), func(plainArgs *GetSiteArgs) (*GetSiteResult, error) {
		return GetSite(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetSiteResultOutput, *GetSiteResult](outputResult)
}

// A collection of arguments for invoking getSite.
type GetSiteOutputArgs struct {
	// Identifier of the Site.
	Id pulumix.Input[*string] `pulumi:"id"`
	// Name of the Site.
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (args GetSiteOutputArgs) ToOutput() pulumix.Output[*GetSiteArgs] {
	allArgs := pulumix.All(
		args.Id.ToOutput(context.Background()).AsAny(),
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetSiteArgs {
		return &GetSiteArgs{
			Id:   resolvedArgs[0].(*string),
			Name: resolvedArgs[1].(*string),
		}
	})
}

type GetSiteResultOutput struct{ *pulumi.OutputState }

func (GetSiteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSiteResult)(nil)).Elem()
}

func (o GetSiteResultOutput) ToOutput(context.Context) pulumix.Output[*GetSiteResult] {
	return pulumix.Output[*GetSiteResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSiteResultOutput) AccountId() pulumix.Output[string] {
	return pulumix.Apply[*GetSiteResult](o, func(v *GetSiteResult) string { return v.AccountId })
}

func (o GetSiteResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*GetSiteResult](o, func(v *GetSiteResult) string { return v.Description })
}

func (o GetSiteResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetSiteResult](o, func(v *GetSiteResult) string { return v.Id })
}

func (o GetSiteResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*GetSiteResult](o, func(v *GetSiteResult) string { return v.Name })
}
