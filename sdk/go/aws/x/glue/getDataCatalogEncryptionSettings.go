// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can be used to fetch information about AWS Glue Data Catalog Encryption Settings.
func LookupDataCatalogEncryptionSettings(ctx *pulumi.Context, args *LookupDataCatalogEncryptionSettingsArgs, opts ...pulumi.InvokeOption) (*LookupDataCatalogEncryptionSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataCatalogEncryptionSettingsResult
	err := ctx.Invoke("aws:glue/getDataCatalogEncryptionSettings:getDataCatalogEncryptionSettings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataCatalogEncryptionSettings.
type LookupDataCatalogEncryptionSettingsArgs struct {
	// ID of the Data Catalog. This is typically the AWS account ID.
	CatalogId string `pulumi:"catalogId"`
}

// A collection of values returned by getDataCatalogEncryptionSettings.
type LookupDataCatalogEncryptionSettingsResult struct {
	CatalogId string `pulumi:"catalogId"`
	// The security configuration to set. see Data Catalog Encryption Settings.
	DataCatalogEncryptionSettings []GetDataCatalogEncryptionSettingsDataCatalogEncryptionSetting `pulumi:"dataCatalogEncryptionSettings"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func LookupDataCatalogEncryptionSettingsOutput(ctx *pulumi.Context, args LookupDataCatalogEncryptionSettingsOutputArgs, opts ...pulumi.InvokeOption) LookupDataCatalogEncryptionSettingsResultOutput {
	outputResult := pulumix.ApplyErr[*LookupDataCatalogEncryptionSettingsArgs](args.ToOutput(), func(plainArgs *LookupDataCatalogEncryptionSettingsArgs) (*LookupDataCatalogEncryptionSettingsResult, error) {
		return LookupDataCatalogEncryptionSettings(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupDataCatalogEncryptionSettingsResultOutput, *LookupDataCatalogEncryptionSettingsResult](outputResult)
}

// A collection of arguments for invoking getDataCatalogEncryptionSettings.
type LookupDataCatalogEncryptionSettingsOutputArgs struct {
	// ID of the Data Catalog. This is typically the AWS account ID.
	CatalogId pulumix.Input[string] `pulumi:"catalogId"`
}

func (args LookupDataCatalogEncryptionSettingsOutputArgs) ToOutput() pulumix.Output[*LookupDataCatalogEncryptionSettingsArgs] {
	allArgs := pulumix.All(
		args.CatalogId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupDataCatalogEncryptionSettingsArgs {
		return &LookupDataCatalogEncryptionSettingsArgs{
			CatalogId: resolvedArgs[0].(string),
		}
	})
}

type LookupDataCatalogEncryptionSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupDataCatalogEncryptionSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataCatalogEncryptionSettingsResult)(nil)).Elem()
}

func (o LookupDataCatalogEncryptionSettingsResultOutput) ToOutput(context.Context) pulumix.Output[*LookupDataCatalogEncryptionSettingsResult] {
	return pulumix.Output[*LookupDataCatalogEncryptionSettingsResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupDataCatalogEncryptionSettingsResultOutput) CatalogId() pulumix.Output[string] {
	return pulumix.Apply[*LookupDataCatalogEncryptionSettingsResult](o, func(v *LookupDataCatalogEncryptionSettingsResult) string { return v.CatalogId })
}

func (o LookupDataCatalogEncryptionSettingsResultOutput) DataCatalogEncryptionSettings() pulumix.GArrayOutput[GetDataCatalogEncryptionSettingsDataCatalogEncryptionSetting, GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingOutput] {
	value := pulumix.Apply[*LookupDataCatalogEncryptionSettingsResult](o, func(v *LookupDataCatalogEncryptionSettingsResult) []GetDataCatalogEncryptionSettingsDataCatalogEncryptionSetting {
		return v.DataCatalogEncryptionSettings
	})
	return pulumix.GArrayOutput[GetDataCatalogEncryptionSettingsDataCatalogEncryptionSetting, GetDataCatalogEncryptionSettingsDataCatalogEncryptionSettingOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataCatalogEncryptionSettingsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupDataCatalogEncryptionSettingsResult](o, func(v *LookupDataCatalogEncryptionSettingsResult) string { return v.Id })
}
