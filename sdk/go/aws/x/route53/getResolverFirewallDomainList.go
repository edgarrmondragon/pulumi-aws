// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `route53.ResolverFirewallDomainList` Retrieves the specified firewall domain list.
//
// This data source allows to retrieve details about a specific a Route 53 Resolver DNS Firewall domain list.
func LookupResolverFirewallDomainList(ctx *pulumi.Context, args *LookupResolverFirewallDomainListArgs, opts ...pulumi.InvokeOption) (*LookupResolverFirewallDomainListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResolverFirewallDomainListResult
	err := ctx.Invoke("aws:route53/getResolverFirewallDomainList:getResolverFirewallDomainList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolverFirewallDomainList.
type LookupResolverFirewallDomainListArgs struct {
	// The ID of the domain list.
	//
	// The following attribute is additionally exported:
	FirewallDomainListId string `pulumi:"firewallDomainListId"`
}

// A collection of values returned by getResolverFirewallDomainList.
type LookupResolverFirewallDomainListResult struct {
	Arn                  string `pulumi:"arn"`
	CreationTime         string `pulumi:"creationTime"`
	CreatorRequestId     string `pulumi:"creatorRequestId"`
	DomainCount          int    `pulumi:"domainCount"`
	FirewallDomainListId string `pulumi:"firewallDomainListId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	ManagedOwnerName string `pulumi:"managedOwnerName"`
	ModificationTime string `pulumi:"modificationTime"`
	Name             string `pulumi:"name"`
	Status           string `pulumi:"status"`
	StatusMessage    string `pulumi:"statusMessage"`
}

func LookupResolverFirewallDomainListOutput(ctx *pulumi.Context, args LookupResolverFirewallDomainListOutputArgs, opts ...pulumi.InvokeOption) LookupResolverFirewallDomainListResultOutput {
	outputResult := pulumix.ApplyErr[*LookupResolverFirewallDomainListArgs](args.ToOutput(), func(plainArgs *LookupResolverFirewallDomainListArgs) (*LookupResolverFirewallDomainListResult, error) {
		return LookupResolverFirewallDomainList(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupResolverFirewallDomainListResultOutput, *LookupResolverFirewallDomainListResult](outputResult)
}

// A collection of arguments for invoking getResolverFirewallDomainList.
type LookupResolverFirewallDomainListOutputArgs struct {
	// The ID of the domain list.
	//
	// The following attribute is additionally exported:
	FirewallDomainListId pulumix.Input[string] `pulumi:"firewallDomainListId"`
}

func (args LookupResolverFirewallDomainListOutputArgs) ToOutput() pulumix.Output[*LookupResolverFirewallDomainListArgs] {
	allArgs := pulumix.All(
		args.FirewallDomainListId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupResolverFirewallDomainListArgs {
		return &LookupResolverFirewallDomainListArgs{
			FirewallDomainListId: resolvedArgs[0].(string),
		}
	})
}

type LookupResolverFirewallDomainListResultOutput struct{ *pulumi.OutputState }

func (LookupResolverFirewallDomainListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverFirewallDomainListResult)(nil)).Elem()
}

func (o LookupResolverFirewallDomainListResultOutput) ToOutput(context.Context) pulumix.Output[*LookupResolverFirewallDomainListResult] {
	return pulumix.Output[*LookupResolverFirewallDomainListResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupResolverFirewallDomainListResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.Arn })
}

func (o LookupResolverFirewallDomainListResultOutput) CreationTime() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.CreationTime })
}

func (o LookupResolverFirewallDomainListResultOutput) CreatorRequestId() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.CreatorRequestId })
}

func (o LookupResolverFirewallDomainListResultOutput) DomainCount() pulumix.Output[int] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) int { return v.DomainCount })
}

func (o LookupResolverFirewallDomainListResultOutput) FirewallDomainListId() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.FirewallDomainListId })
}

func (o LookupResolverFirewallDomainListResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.Id })
}

func (o LookupResolverFirewallDomainListResultOutput) ManagedOwnerName() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.ManagedOwnerName })
}

func (o LookupResolverFirewallDomainListResultOutput) ModificationTime() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.ModificationTime })
}

func (o LookupResolverFirewallDomainListResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.Name })
}

func (o LookupResolverFirewallDomainListResultOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.Status })
}

func (o LookupResolverFirewallDomainListResultOutput) StatusMessage() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallDomainListResult](o, func(v *LookupResolverFirewallDomainListResult) string { return v.StatusMessage })
}
