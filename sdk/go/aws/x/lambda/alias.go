// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a Lambda function alias. Creates an alias that points to the specified Lambda function version.
//
// For information about Lambda and how to use it, see [What is AWS Lambda?](http://docs.aws.amazon.com/lambda/latest/dg/welcome.html)
// For information about function aliases, see [CreateAlias](http://docs.aws.amazon.com/lambda/latest/dg/API_CreateAlias.html) and [AliasRoutingConfiguration](https://docs.aws.amazon.com/lambda/latest/dg/API_AliasRoutingConfiguration.html) in the API docs.
type Alias struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) identifying your Lambda function alias.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Description of the alias.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Lambda Function name or ARN.
	FunctionName pulumix.Output[string] `pulumi:"functionName"`
	// Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
	FunctionVersion pulumix.Output[string] `pulumi:"functionVersion"`
	// The ARN to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`
	InvokeArn pulumix.Output[string] `pulumi:"invokeArn"`
	// Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
	Name pulumix.Output[string] `pulumi:"name"`
	// The Lambda alias' route configuration settings. Fields documented below
	RoutingConfig pulumix.GPtrOutput[AliasRoutingConfig, AliasRoutingConfigOutput] `pulumi:"routingConfig"`
}

// NewAlias registers a new resource with the given unique name, arguments, and options.
func NewAlias(ctx *pulumi.Context,
	name string, args *AliasArgs, opts ...pulumi.ResourceOption) (*Alias, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	if args.FunctionVersion == nil {
		return nil, errors.New("invalid value for required argument 'FunctionVersion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Alias
	err := ctx.RegisterResource("aws:lambda/alias:Alias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlias gets an existing Alias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AliasState, opts ...pulumi.ResourceOption) (*Alias, error) {
	var resource Alias
	err := ctx.ReadResource("aws:lambda/alias:Alias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Alias resources.
type aliasState struct {
	// The Amazon Resource Name (ARN) identifying your Lambda function alias.
	Arn *string `pulumi:"arn"`
	// Description of the alias.
	Description *string `pulumi:"description"`
	// Lambda Function name or ARN.
	FunctionName *string `pulumi:"functionName"`
	// Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
	FunctionVersion *string `pulumi:"functionVersion"`
	// The ARN to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`
	InvokeArn *string `pulumi:"invokeArn"`
	// Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
	Name *string `pulumi:"name"`
	// The Lambda alias' route configuration settings. Fields documented below
	RoutingConfig *AliasRoutingConfig `pulumi:"routingConfig"`
}

type AliasState struct {
	// The Amazon Resource Name (ARN) identifying your Lambda function alias.
	Arn pulumix.Input[*string]
	// Description of the alias.
	Description pulumix.Input[*string]
	// Lambda Function name or ARN.
	FunctionName pulumix.Input[*string]
	// Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
	FunctionVersion pulumix.Input[*string]
	// The ARN to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`
	InvokeArn pulumix.Input[*string]
	// Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
	Name pulumix.Input[*string]
	// The Lambda alias' route configuration settings. Fields documented below
	RoutingConfig pulumix.Input[*AliasRoutingConfigArgs]
}

func (AliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*aliasState)(nil)).Elem()
}

type aliasArgs struct {
	// Description of the alias.
	Description *string `pulumi:"description"`
	// Lambda Function name or ARN.
	FunctionName string `pulumi:"functionName"`
	// Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
	FunctionVersion string `pulumi:"functionVersion"`
	// Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
	Name *string `pulumi:"name"`
	// The Lambda alias' route configuration settings. Fields documented below
	RoutingConfig *AliasRoutingConfig `pulumi:"routingConfig"`
}

// The set of arguments for constructing a Alias resource.
type AliasArgs struct {
	// Description of the alias.
	Description pulumix.Input[*string]
	// Lambda Function name or ARN.
	FunctionName pulumix.Input[string]
	// Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
	FunctionVersion pulumix.Input[string]
	// Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
	Name pulumix.Input[*string]
	// The Lambda alias' route configuration settings. Fields documented below
	RoutingConfig pulumix.Input[*AliasRoutingConfigArgs]
}

func (AliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aliasArgs)(nil)).Elem()
}

type AliasOutput struct{ *pulumi.OutputState }

func (AliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Alias)(nil)).Elem()
}

func (o AliasOutput) ToAliasOutput() AliasOutput {
	return o
}

func (o AliasOutput) ToAliasOutputWithContext(ctx context.Context) AliasOutput {
	return o
}

func (o AliasOutput) ToOutput(ctx context.Context) pulumix.Output[Alias] {
	return pulumix.Output[Alias]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) identifying your Lambda function alias.
func (o AliasOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the alias.
func (o AliasOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Lambda Function name or ARN.
func (o AliasOutput) FunctionName() pulumix.Output[string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[string] { return v.FunctionName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
func (o AliasOutput) FunctionVersion() pulumix.Output[string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[string] { return v.FunctionVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN to be used for invoking Lambda Function from API Gateway - to be used in `apigateway.Integration`'s `uri`
func (o AliasOutput) InvokeArn() pulumix.Output[string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[string] { return v.InvokeArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
func (o AliasOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Lambda alias' route configuration settings. Fields documented below
func (o AliasOutput) RoutingConfig() pulumix.GPtrOutput[AliasRoutingConfig, AliasRoutingConfigOutput] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.GPtrOutput[AliasRoutingConfig, AliasRoutingConfigOutput] { return v.RoutingConfig })
	unwrapped := pulumix.Flatten[*AliasRoutingConfig, pulumix.GPtrOutput[AliasRoutingConfig, AliasRoutingConfigOutput]](value)
	return pulumix.GPtrOutput[AliasRoutingConfig, AliasRoutingConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(AliasOutput{})
}
