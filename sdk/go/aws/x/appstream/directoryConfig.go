// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AppStream Directory Config.
type DirectoryConfig struct {
	pulumi.CustomResourceState

	// Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// Fully qualified name of the directory.
	DirectoryName pulumix.Output[string] `pulumi:"directoryName"`
	// Distinguished names of the organizational units for computer accounts.
	OrganizationalUnitDistinguishedNames pulumix.ArrayOutput[string] `pulumi:"organizationalUnitDistinguishedNames"`
	// Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `serviceAccountCredentials` below.
	ServiceAccountCredentials pulumix.GPtrOutput[DirectoryConfigServiceAccountCredentials, DirectoryConfigServiceAccountCredentialsOutput] `pulumi:"serviceAccountCredentials"`
}

// NewDirectoryConfig registers a new resource with the given unique name, arguments, and options.
func NewDirectoryConfig(ctx *pulumi.Context,
	name string, args *DirectoryConfigArgs, opts ...pulumi.ResourceOption) (*DirectoryConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DirectoryName == nil {
		return nil, errors.New("invalid value for required argument 'DirectoryName'")
	}
	if args.OrganizationalUnitDistinguishedNames == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationalUnitDistinguishedNames'")
	}
	if args.ServiceAccountCredentials == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountCredentials'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DirectoryConfig
	err := ctx.RegisterResource("aws:appstream/directoryConfig:DirectoryConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectoryConfig gets an existing DirectoryConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectoryConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectoryConfigState, opts ...pulumi.ResourceOption) (*DirectoryConfig, error) {
	var resource DirectoryConfig
	err := ctx.ReadResource("aws:appstream/directoryConfig:DirectoryConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DirectoryConfig resources.
type directoryConfigState struct {
	// Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
	CreatedTime *string `pulumi:"createdTime"`
	// Fully qualified name of the directory.
	DirectoryName *string `pulumi:"directoryName"`
	// Distinguished names of the organizational units for computer accounts.
	OrganizationalUnitDistinguishedNames []string `pulumi:"organizationalUnitDistinguishedNames"`
	// Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `serviceAccountCredentials` below.
	ServiceAccountCredentials *DirectoryConfigServiceAccountCredentials `pulumi:"serviceAccountCredentials"`
}

type DirectoryConfigState struct {
	// Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
	CreatedTime pulumix.Input[*string]
	// Fully qualified name of the directory.
	DirectoryName pulumix.Input[*string]
	// Distinguished names of the organizational units for computer accounts.
	OrganizationalUnitDistinguishedNames pulumix.Input[[]string]
	// Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `serviceAccountCredentials` below.
	ServiceAccountCredentials pulumix.Input[*DirectoryConfigServiceAccountCredentialsArgs]
}

func (DirectoryConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryConfigState)(nil)).Elem()
}

type directoryConfigArgs struct {
	// Fully qualified name of the directory.
	DirectoryName string `pulumi:"directoryName"`
	// Distinguished names of the organizational units for computer accounts.
	OrganizationalUnitDistinguishedNames []string `pulumi:"organizationalUnitDistinguishedNames"`
	// Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `serviceAccountCredentials` below.
	ServiceAccountCredentials DirectoryConfigServiceAccountCredentials `pulumi:"serviceAccountCredentials"`
}

// The set of arguments for constructing a DirectoryConfig resource.
type DirectoryConfigArgs struct {
	// Fully qualified name of the directory.
	DirectoryName pulumix.Input[string]
	// Distinguished names of the organizational units for computer accounts.
	OrganizationalUnitDistinguishedNames pulumix.Input[[]string]
	// Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `serviceAccountCredentials` below.
	ServiceAccountCredentials pulumix.Input[*DirectoryConfigServiceAccountCredentialsArgs]
}

func (DirectoryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryConfigArgs)(nil)).Elem()
}

type DirectoryConfigOutput struct{ *pulumi.OutputState }

func (DirectoryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConfig)(nil)).Elem()
}

func (o DirectoryConfigOutput) ToDirectoryConfigOutput() DirectoryConfigOutput {
	return o
}

func (o DirectoryConfigOutput) ToDirectoryConfigOutputWithContext(ctx context.Context) DirectoryConfigOutput {
	return o
}

func (o DirectoryConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DirectoryConfig] {
	return pulumix.Output[DirectoryConfig]{
		OutputState: o.OutputState,
	}
}

// Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
func (o DirectoryConfigOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[DirectoryConfig](o, func(v DirectoryConfig) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Fully qualified name of the directory.
func (o DirectoryConfigOutput) DirectoryName() pulumix.Output[string] {
	value := pulumix.Apply[DirectoryConfig](o, func(v DirectoryConfig) pulumix.Output[string] { return v.DirectoryName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Distinguished names of the organizational units for computer accounts.
func (o DirectoryConfigOutput) OrganizationalUnitDistinguishedNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DirectoryConfig](o, func(v DirectoryConfig) pulumix.ArrayOutput[string] { return v.OrganizationalUnitDistinguishedNames })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `serviceAccountCredentials` below.
func (o DirectoryConfigOutput) ServiceAccountCredentials() pulumix.GPtrOutput[DirectoryConfigServiceAccountCredentials, DirectoryConfigServiceAccountCredentialsOutput] {
	value := pulumix.Apply[DirectoryConfig](o, func(v DirectoryConfig) pulumix.GPtrOutput[DirectoryConfigServiceAccountCredentials, DirectoryConfigServiceAccountCredentialsOutput] {
		return v.ServiceAccountCredentials
	})
	unwrapped := pulumix.Flatten[*DirectoryConfigServiceAccountCredentials, pulumix.GPtrOutput[DirectoryConfigServiceAccountCredentials, DirectoryConfigServiceAccountCredentialsOutput]](value)
	return pulumix.GPtrOutput[DirectoryConfigServiceAccountCredentials, DirectoryConfigServiceAccountCredentialsOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DirectoryConfigOutput{})
}
