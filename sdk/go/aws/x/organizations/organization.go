// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to create an organization.
//
// !> **WARNING:** When migrating from a `featureSet` of `CONSOLIDATED_BILLING` to `ALL`, the Organization account owner will received an email stating the following: "You started the process to enable all features for your AWS organization. As part of that process, all member accounts that joined your organization by invitation must approve the change. You donâ€™t need approval from member accounts that you directly created from within your AWS organization." After all member accounts have accepted the invitation, the Organization account owner must then finalize the changes via the [AWS Console](https://console.aws.amazon.com/organizations/home#/organization/settings/migration-progress). Until these steps are performed, the provider will perpetually show a difference, and the `DescribeOrganization` API will continue to show the `FeatureSet` as `CONSOLIDATED_BILLING`. See the [AWS Organizations documentation](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html) for more information.
//
// !> **WARNING:** [Warning from the AWS Docs](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html): "We recommend that you enable integration between AWS Organizations and the specified AWS service by using the console or commands that are provided by the specified service. Doing so ensures that the service is aware that it can create the resources that are required for the integration. How the service creates those resources in the organization's accounts depends on that service. For more information, see the documentation for the other AWS service."
type Organization struct {
	pulumi.CustomResourceState

	// List of organization accounts including the master account. For a list excluding the master account, see the `nonMasterAccounts` attribute. All elements have these attributes:
	Accounts pulumix.GArrayOutput[OrganizationAccount, OrganizationAccountOutput] `pulumi:"accounts"`
	// ARN of the root
	Arn pulumix.Output[string] `pulumi:"arn"`
	// List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `featureSet` set to `ALL`. Some services do not support enablement via this endpoint, see [warning in aws docs](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html).
	AwsServiceAccessPrincipals pulumix.ArrayOutput[string] `pulumi:"awsServiceAccessPrincipals"`
	// List of Organizations policy types to enable in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g., `AISERVICES_OPT_OUT_POLICY`, `BACKUP_POLICY`, `SERVICE_CONTROL_POLICY`, and `TAG_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
	EnabledPolicyTypes pulumix.ArrayOutput[string] `pulumi:"enabledPolicyTypes"`
	// Specify "ALL" (default) or "CONSOLIDATED_BILLING".
	FeatureSet pulumix.Output[*string] `pulumi:"featureSet"`
	// ARN of the master account
	MasterAccountArn pulumix.Output[string] `pulumi:"masterAccountArn"`
	// Email address of the master account
	MasterAccountEmail pulumix.Output[string] `pulumi:"masterAccountEmail"`
	// Identifier of the master account
	MasterAccountId pulumix.Output[string] `pulumi:"masterAccountId"`
	// List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:
	NonMasterAccounts pulumix.GArrayOutput[OrganizationNonMasterAccount, OrganizationNonMasterAccountOutput] `pulumi:"nonMasterAccounts"`
	// List of organization roots. All elements have these attributes:
	Roots pulumix.GArrayOutput[OrganizationRoot, OrganizationRootOutput] `pulumi:"roots"`
}

// NewOrganization registers a new resource with the given unique name, arguments, and options.
func NewOrganization(ctx *pulumi.Context,
	name string, args *OrganizationArgs, opts ...pulumi.ResourceOption) (*Organization, error) {
	if args == nil {
		args = &OrganizationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Organization
	err := ctx.RegisterResource("aws:organizations/organization:Organization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganization gets an existing Organization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationState, opts ...pulumi.ResourceOption) (*Organization, error) {
	var resource Organization
	err := ctx.ReadResource("aws:organizations/organization:Organization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Organization resources.
type organizationState struct {
	// List of organization accounts including the master account. For a list excluding the master account, see the `nonMasterAccounts` attribute. All elements have these attributes:
	Accounts []OrganizationAccount `pulumi:"accounts"`
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `featureSet` set to `ALL`. Some services do not support enablement via this endpoint, see [warning in aws docs](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html).
	AwsServiceAccessPrincipals []string `pulumi:"awsServiceAccessPrincipals"`
	// List of Organizations policy types to enable in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g., `AISERVICES_OPT_OUT_POLICY`, `BACKUP_POLICY`, `SERVICE_CONTROL_POLICY`, and `TAG_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
	EnabledPolicyTypes []string `pulumi:"enabledPolicyTypes"`
	// Specify "ALL" (default) or "CONSOLIDATED_BILLING".
	FeatureSet *string `pulumi:"featureSet"`
	// ARN of the master account
	MasterAccountArn *string `pulumi:"masterAccountArn"`
	// Email address of the master account
	MasterAccountEmail *string `pulumi:"masterAccountEmail"`
	// Identifier of the master account
	MasterAccountId *string `pulumi:"masterAccountId"`
	// List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:
	NonMasterAccounts []OrganizationNonMasterAccount `pulumi:"nonMasterAccounts"`
	// List of organization roots. All elements have these attributes:
	Roots []OrganizationRoot `pulumi:"roots"`
}

type OrganizationState struct {
	// List of organization accounts including the master account. For a list excluding the master account, see the `nonMasterAccounts` attribute. All elements have these attributes:
	Accounts pulumix.Input[[]*OrganizationAccountArgs]
	// ARN of the root
	Arn pulumix.Input[*string]
	// List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `featureSet` set to `ALL`. Some services do not support enablement via this endpoint, see [warning in aws docs](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html).
	AwsServiceAccessPrincipals pulumix.Input[[]string]
	// List of Organizations policy types to enable in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g., `AISERVICES_OPT_OUT_POLICY`, `BACKUP_POLICY`, `SERVICE_CONTROL_POLICY`, and `TAG_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
	EnabledPolicyTypes pulumix.Input[[]string]
	// Specify "ALL" (default) or "CONSOLIDATED_BILLING".
	FeatureSet pulumix.Input[*string]
	// ARN of the master account
	MasterAccountArn pulumix.Input[*string]
	// Email address of the master account
	MasterAccountEmail pulumix.Input[*string]
	// Identifier of the master account
	MasterAccountId pulumix.Input[*string]
	// List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:
	NonMasterAccounts pulumix.Input[[]*OrganizationNonMasterAccountArgs]
	// List of organization roots. All elements have these attributes:
	Roots pulumix.Input[[]*OrganizationRootArgs]
}

func (OrganizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationState)(nil)).Elem()
}

type organizationArgs struct {
	// List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `featureSet` set to `ALL`. Some services do not support enablement via this endpoint, see [warning in aws docs](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html).
	AwsServiceAccessPrincipals []string `pulumi:"awsServiceAccessPrincipals"`
	// List of Organizations policy types to enable in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g., `AISERVICES_OPT_OUT_POLICY`, `BACKUP_POLICY`, `SERVICE_CONTROL_POLICY`, and `TAG_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
	EnabledPolicyTypes []string `pulumi:"enabledPolicyTypes"`
	// Specify "ALL" (default) or "CONSOLIDATED_BILLING".
	FeatureSet *string `pulumi:"featureSet"`
}

// The set of arguments for constructing a Organization resource.
type OrganizationArgs struct {
	// List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `featureSet` set to `ALL`. Some services do not support enablement via this endpoint, see [warning in aws docs](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html).
	AwsServiceAccessPrincipals pulumix.Input[[]string]
	// List of Organizations policy types to enable in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g., `AISERVICES_OPT_OUT_POLICY`, `BACKUP_POLICY`, `SERVICE_CONTROL_POLICY`, and `TAG_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
	EnabledPolicyTypes pulumix.Input[[]string]
	// Specify "ALL" (default) or "CONSOLIDATED_BILLING".
	FeatureSet pulumix.Input[*string]
}

func (OrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationArgs)(nil)).Elem()
}

type OrganizationOutput struct{ *pulumi.OutputState }

func (OrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Organization)(nil)).Elem()
}

func (o OrganizationOutput) ToOrganizationOutput() OrganizationOutput {
	return o
}

func (o OrganizationOutput) ToOrganizationOutputWithContext(ctx context.Context) OrganizationOutput {
	return o
}

func (o OrganizationOutput) ToOutput(ctx context.Context) pulumix.Output[Organization] {
	return pulumix.Output[Organization]{
		OutputState: o.OutputState,
	}
}

// List of organization accounts including the master account. For a list excluding the master account, see the `nonMasterAccounts` attribute. All elements have these attributes:
func (o OrganizationOutput) Accounts() pulumix.GArrayOutput[OrganizationAccount, OrganizationAccountOutput] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.GArrayOutput[OrganizationAccount, OrganizationAccountOutput] {
		return v.Accounts
	})
	unwrapped := pulumix.Flatten[[]OrganizationAccount, pulumix.GArrayOutput[OrganizationAccount, OrganizationAccountOutput]](value)
	return pulumix.GArrayOutput[OrganizationAccount, OrganizationAccountOutput]{OutputState: unwrapped.OutputState}
}

// ARN of the root
func (o OrganizationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `featureSet` set to `ALL`. Some services do not support enablement via this endpoint, see [warning in aws docs](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html).
func (o OrganizationOutput) AwsServiceAccessPrincipals() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.ArrayOutput[string] { return v.AwsServiceAccessPrincipals })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// List of Organizations policy types to enable in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g., `AISERVICES_OPT_OUT_POLICY`, `BACKUP_POLICY`, `SERVICE_CONTROL_POLICY`, and `TAG_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
func (o OrganizationOutput) EnabledPolicyTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.ArrayOutput[string] { return v.EnabledPolicyTypes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Specify "ALL" (default) or "CONSOLIDATED_BILLING".
func (o OrganizationOutput) FeatureSet() pulumix.Output[*string] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.Output[*string] { return v.FeatureSet })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN of the master account
func (o OrganizationOutput) MasterAccountArn() pulumix.Output[string] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.Output[string] { return v.MasterAccountArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Email address of the master account
func (o OrganizationOutput) MasterAccountEmail() pulumix.Output[string] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.Output[string] { return v.MasterAccountEmail })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of the master account
func (o OrganizationOutput) MasterAccountId() pulumix.Output[string] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.Output[string] { return v.MasterAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:
func (o OrganizationOutput) NonMasterAccounts() pulumix.GArrayOutput[OrganizationNonMasterAccount, OrganizationNonMasterAccountOutput] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.GArrayOutput[OrganizationNonMasterAccount, OrganizationNonMasterAccountOutput] {
		return v.NonMasterAccounts
	})
	unwrapped := pulumix.Flatten[[]OrganizationNonMasterAccount, pulumix.GArrayOutput[OrganizationNonMasterAccount, OrganizationNonMasterAccountOutput]](value)
	return pulumix.GArrayOutput[OrganizationNonMasterAccount, OrganizationNonMasterAccountOutput]{OutputState: unwrapped.OutputState}
}

// List of organization roots. All elements have these attributes:
func (o OrganizationOutput) Roots() pulumix.GArrayOutput[OrganizationRoot, OrganizationRootOutput] {
	value := pulumix.Apply[Organization](o, func(v Organization) pulumix.GArrayOutput[OrganizationRoot, OrganizationRootOutput] { return v.Roots })
	unwrapped := pulumix.Flatten[[]OrganizationRoot, pulumix.GArrayOutput[OrganizationRoot, OrganizationRootOutput]](value)
	return pulumix.GArrayOutput[OrganizationRoot, OrganizationRootOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(OrganizationOutput{})
}
