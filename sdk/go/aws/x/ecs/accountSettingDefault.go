// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an ECS default account setting for a specific ECS Resource name within a specific region. More information can be found on the [ECS Developer Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html).
//
// > **NOTE:** The AWS API does not delete this resource. When you run `destroy`, the provider will attempt to disable the setting.
//
// > **NOTE:** Your AWS account may not support disabling `containerInstanceLongArnFormat`, `serviceLongArnFormat`, and `taskLongArnFormat`. If your account does not support disabling these, "destroying" this resource will not disable the setting nor cause a provider error. However, the AWS Provider will log an AWS error: `InvalidParameterException: You can no longer disable Long Arn settings`.
type AccountSettingDefault struct {
	pulumi.CustomResourceState

	// Name of the account setting to set. Valid values are `serviceLongArnFormat`, `taskLongArnFormat`, `containerInstanceLongArnFormat`, `awsvpcTrunking` and `containerInsights`.
	Name         pulumix.Output[string] `pulumi:"name"`
	PrincipalArn pulumix.Output[string] `pulumi:"principalArn"`
	// State of the setting. Valid values are `enabled` and `disabled`.
	Value pulumix.Output[string] `pulumi:"value"`
}

// NewAccountSettingDefault registers a new resource with the given unique name, arguments, and options.
func NewAccountSettingDefault(ctx *pulumi.Context,
	name string, args *AccountSettingDefaultArgs, opts ...pulumi.ResourceOption) (*AccountSettingDefault, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountSettingDefault
	err := ctx.RegisterResource("aws:ecs/accountSettingDefault:AccountSettingDefault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountSettingDefault gets an existing AccountSettingDefault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountSettingDefault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountSettingDefaultState, opts ...pulumi.ResourceOption) (*AccountSettingDefault, error) {
	var resource AccountSettingDefault
	err := ctx.ReadResource("aws:ecs/accountSettingDefault:AccountSettingDefault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountSettingDefault resources.
type accountSettingDefaultState struct {
	// Name of the account setting to set. Valid values are `serviceLongArnFormat`, `taskLongArnFormat`, `containerInstanceLongArnFormat`, `awsvpcTrunking` and `containerInsights`.
	Name         *string `pulumi:"name"`
	PrincipalArn *string `pulumi:"principalArn"`
	// State of the setting. Valid values are `enabled` and `disabled`.
	Value *string `pulumi:"value"`
}

type AccountSettingDefaultState struct {
	// Name of the account setting to set. Valid values are `serviceLongArnFormat`, `taskLongArnFormat`, `containerInstanceLongArnFormat`, `awsvpcTrunking` and `containerInsights`.
	Name         pulumix.Input[*string]
	PrincipalArn pulumix.Input[*string]
	// State of the setting. Valid values are `enabled` and `disabled`.
	Value pulumix.Input[*string]
}

func (AccountSettingDefaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountSettingDefaultState)(nil)).Elem()
}

type accountSettingDefaultArgs struct {
	// Name of the account setting to set. Valid values are `serviceLongArnFormat`, `taskLongArnFormat`, `containerInstanceLongArnFormat`, `awsvpcTrunking` and `containerInsights`.
	Name *string `pulumi:"name"`
	// State of the setting. Valid values are `enabled` and `disabled`.
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a AccountSettingDefault resource.
type AccountSettingDefaultArgs struct {
	// Name of the account setting to set. Valid values are `serviceLongArnFormat`, `taskLongArnFormat`, `containerInstanceLongArnFormat`, `awsvpcTrunking` and `containerInsights`.
	Name pulumix.Input[*string]
	// State of the setting. Valid values are `enabled` and `disabled`.
	Value pulumix.Input[string]
}

func (AccountSettingDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountSettingDefaultArgs)(nil)).Elem()
}

type AccountSettingDefaultOutput struct{ *pulumi.OutputState }

func (AccountSettingDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountSettingDefault)(nil)).Elem()
}

func (o AccountSettingDefaultOutput) ToAccountSettingDefaultOutput() AccountSettingDefaultOutput {
	return o
}

func (o AccountSettingDefaultOutput) ToAccountSettingDefaultOutputWithContext(ctx context.Context) AccountSettingDefaultOutput {
	return o
}

func (o AccountSettingDefaultOutput) ToOutput(ctx context.Context) pulumix.Output[AccountSettingDefault] {
	return pulumix.Output[AccountSettingDefault]{
		OutputState: o.OutputState,
	}
}

// Name of the account setting to set. Valid values are `serviceLongArnFormat`, `taskLongArnFormat`, `containerInstanceLongArnFormat`, `awsvpcTrunking` and `containerInsights`.
func (o AccountSettingDefaultOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[AccountSettingDefault](o, func(v AccountSettingDefault) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AccountSettingDefaultOutput) PrincipalArn() pulumix.Output[string] {
	value := pulumix.Apply[AccountSettingDefault](o, func(v AccountSettingDefault) pulumix.Output[string] { return v.PrincipalArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// State of the setting. Valid values are `enabled` and `disabled`.
func (o AccountSettingDefaultOutput) Value() pulumix.Output[string] {
	value := pulumix.Apply[AccountSettingDefault](o, func(v AccountSettingDefault) pulumix.Output[string] { return v.Value })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(AccountSettingDefaultOutput{})
}
