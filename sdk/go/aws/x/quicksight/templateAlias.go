// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS QuickSight Template Alias.
type TemplateAlias struct {
	pulumi.CustomResourceState

	// Display name of the template alias.
	AliasName pulumix.Output[string] `pulumi:"aliasName"`
	// Amazon Resource Name (ARN) of the template alias.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId pulumix.Output[string] `pulumi:"awsAccountId"`
	// ID of the template.
	TemplateId pulumix.Output[string] `pulumi:"templateId"`
	// Version number of the template.
	//
	// The following arguments are optional:
	TemplateVersionNumber pulumix.Output[int] `pulumi:"templateVersionNumber"`
}

// NewTemplateAlias registers a new resource with the given unique name, arguments, and options.
func NewTemplateAlias(ctx *pulumi.Context,
	name string, args *TemplateAliasArgs, opts ...pulumi.ResourceOption) (*TemplateAlias, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AliasName == nil {
		return nil, errors.New("invalid value for required argument 'AliasName'")
	}
	if args.TemplateId == nil {
		return nil, errors.New("invalid value for required argument 'TemplateId'")
	}
	if args.TemplateVersionNumber == nil {
		return nil, errors.New("invalid value for required argument 'TemplateVersionNumber'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TemplateAlias
	err := ctx.RegisterResource("aws:quicksight/templateAlias:TemplateAlias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTemplateAlias gets an existing TemplateAlias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTemplateAlias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TemplateAliasState, opts ...pulumi.ResourceOption) (*TemplateAlias, error) {
	var resource TemplateAlias
	err := ctx.ReadResource("aws:quicksight/templateAlias:TemplateAlias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TemplateAlias resources.
type templateAliasState struct {
	// Display name of the template alias.
	AliasName *string `pulumi:"aliasName"`
	// Amazon Resource Name (ARN) of the template alias.
	Arn *string `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// ID of the template.
	TemplateId *string `pulumi:"templateId"`
	// Version number of the template.
	//
	// The following arguments are optional:
	TemplateVersionNumber *int `pulumi:"templateVersionNumber"`
}

type TemplateAliasState struct {
	// Display name of the template alias.
	AliasName pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the template alias.
	Arn pulumix.Input[*string]
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// ID of the template.
	TemplateId pulumix.Input[*string]
	// Version number of the template.
	//
	// The following arguments are optional:
	TemplateVersionNumber pulumix.Input[*int]
}

func (TemplateAliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*templateAliasState)(nil)).Elem()
}

type templateAliasArgs struct {
	// Display name of the template alias.
	AliasName string `pulumi:"aliasName"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// ID of the template.
	TemplateId string `pulumi:"templateId"`
	// Version number of the template.
	//
	// The following arguments are optional:
	TemplateVersionNumber int `pulumi:"templateVersionNumber"`
}

// The set of arguments for constructing a TemplateAlias resource.
type TemplateAliasArgs struct {
	// Display name of the template alias.
	AliasName pulumix.Input[string]
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// ID of the template.
	TemplateId pulumix.Input[string]
	// Version number of the template.
	//
	// The following arguments are optional:
	TemplateVersionNumber pulumix.Input[int]
}

func (TemplateAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*templateAliasArgs)(nil)).Elem()
}

type TemplateAliasOutput struct{ *pulumi.OutputState }

func (TemplateAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAlias)(nil)).Elem()
}

func (o TemplateAliasOutput) ToTemplateAliasOutput() TemplateAliasOutput {
	return o
}

func (o TemplateAliasOutput) ToTemplateAliasOutputWithContext(ctx context.Context) TemplateAliasOutput {
	return o
}

func (o TemplateAliasOutput) ToOutput(ctx context.Context) pulumix.Output[TemplateAlias] {
	return pulumix.Output[TemplateAlias]{
		OutputState: o.OutputState,
	}
}

// Display name of the template alias.
func (o TemplateAliasOutput) AliasName() pulumix.Output[string] {
	value := pulumix.Apply[TemplateAlias](o, func(v TemplateAlias) pulumix.Output[string] { return v.AliasName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the template alias.
func (o TemplateAliasOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[TemplateAlias](o, func(v TemplateAlias) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS account ID.
func (o TemplateAliasOutput) AwsAccountId() pulumix.Output[string] {
	value := pulumix.Apply[TemplateAlias](o, func(v TemplateAlias) pulumix.Output[string] { return v.AwsAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the template.
func (o TemplateAliasOutput) TemplateId() pulumix.Output[string] {
	value := pulumix.Apply[TemplateAlias](o, func(v TemplateAlias) pulumix.Output[string] { return v.TemplateId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Version number of the template.
//
// The following arguments are optional:
func (o TemplateAliasOutput) TemplateVersionNumber() pulumix.Output[int] {
	value := pulumix.Apply[TemplateAlias](o, func(v TemplateAlias) pulumix.Output[int] { return v.TemplateVersionNumber })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(TemplateAliasOutput{})
}
