// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a FSx Lustre File System. See the [FSx Lustre Guide](https://docs.aws.amazon.com/fsx/latest/LustreGuide/what-is.html) for more information.
//
// > **NOTE:** `autoImportPolicy`, `exportPath`, `importPath` and `importedFileChunkSize` are not supported with the `PERSISTENT_2` deployment type. Use `fsx.DataRepositoryAssociation` instead.
type LustreFileSystem struct {
	pulumi.CustomResourceState

	// Amazon Resource Name of the file system.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// How Amazon FSx keeps your file and directory listings up to date as you add or modify objects in your linked S3 bucket. see [Auto Import Data Repo](https://docs.aws.amazon.com/fsx/latest/LustreGuide/autoimport-data-repo.html) for more details. Only supported on `PERSISTENT_1` deployment types.
	AutoImportPolicy pulumix.Output[string] `pulumi:"autoImportPolicy"`
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type.
	AutomaticBackupRetentionDays pulumix.Output[int] `pulumi:"automaticBackupRetentionDays"`
	// The ID of the source backup to create the filesystem from.
	BackupId pulumix.Output[*string] `pulumi:"backupId"`
	// A boolean flag indicating whether tags for the file system should be copied to backups. Applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. The default value is false.
	CopyTagsToBackups pulumix.Output[*bool] `pulumi:"copyTagsToBackups"`
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime pulumix.Output[string] `pulumi:"dailyAutomaticBackupStartTime"`
	// Sets the data compression configuration for the file system. Valid values are `LZ4` and `NONE`. Default value is `NONE`. Unsetting this value reverts the compression type back to `NONE`.
	DataCompressionType pulumix.Output[*string] `pulumi:"dataCompressionType"`
	// The filesystem deployment type. One of: `SCRATCH_1`, `SCRATCH_2`, `PERSISTENT_1`, `PERSISTENT_2`.
	DeploymentType pulumix.Output[*string] `pulumi:"deploymentType"`
	// DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
	DnsName pulumix.Output[string] `pulumi:"dnsName"`
	// The type of drive cache used by `PERSISTENT_1` filesystems that are provisioned with `HDD` storage_type. Required for `HDD` storage_type, set to either `READ` or `NONE`.
	DriveCacheType pulumix.Output[*string] `pulumi:"driveCacheType"`
	// S3 URI (with optional prefix) where the root of your Amazon FSx file system is exported. Can only be specified with `importPath` argument and the path must use the same Amazon S3 bucket as specified in `importPath`. Set equal to `importPath` to overwrite files on export. Defaults to `s3://{IMPORT BUCKET}/FSxLustre{CREATION TIMESTAMP}`. Only supported on `PERSISTENT_1` deployment types.
	ExportPath pulumix.Output[string] `pulumi:"exportPath"`
	// Sets the Lustre version for the file system that you're creating. Valid values are 2.10 for `SCRATCH_1`, `SCRATCH_2` and `PERSISTENT_1` deployment types. Valid values for 2.12 include all deployment types.
	FileSystemTypeVersion pulumix.Output[string] `pulumi:"fileSystemTypeVersion"`
	// S3 URI (with optional prefix) that you're using as the data repository for your FSx for Lustre file system. For example, `s3://example-bucket/optional-prefix/`. Only supported on `PERSISTENT_1` deployment types.
	ImportPath pulumix.Output[*string] `pulumi:"importPath"`
	// For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. Can only be specified with `importPath` argument. Defaults to `1024`. Minimum of `1` and maximum of `512000`. Only supported on `PERSISTENT_1` deployment types.
	ImportedFileChunkSize pulumix.Output[int] `pulumi:"importedFileChunkSize"`
	// ARN for the KMS Key to encrypt the file system at rest, applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Defaults to an AWS managed KMS Key.
	KmsKeyId pulumix.Output[string] `pulumi:"kmsKeyId"`
	// The Lustre logging configuration used when creating an Amazon FSx for Lustre file system. When logging is enabled, Lustre logs error and warning events for data repositories associated with your file system to Amazon CloudWatch Logs.
	LogConfiguration pulumix.GPtrOutput[LustreFileSystemLogConfiguration, LustreFileSystemLogConfigurationOutput] `pulumi:"logConfiguration"`
	// The value to be used when mounting the filesystem.
	MountName pulumix.Output[string] `pulumi:"mountName"`
	// Set of Elastic Network Interface identifiers from which the file system is accessible. As explained in the [documentation](https://docs.aws.amazon.com/fsx/latest/LustreGuide/mounting-on-premises.html), the first network interface returned is the primary network interface.
	NetworkInterfaceIds pulumix.ArrayOutput[string] `pulumi:"networkInterfaceIds"`
	// AWS account identifier that created the file system.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// Describes the amount of read and write throughput for each 1 tebibyte of storage, in MB/s/TiB, required for the `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Valid values for `PERSISTENT_1` deploymentType and `SSD` storageType are 50, 100, 200. Valid values for `PERSISTENT_1` deploymentType and `HDD` storageType are 12, 40. Valid values for `PERSISTENT_2` deploymentType and `  SSD ` storageType are 125, 250, 500, 1000.
	PerUnitStorageThroughput pulumix.Output[*int] `pulumi:"perUnitStorageThroughput"`
	// The Lustre root squash configuration used when creating an Amazon FSx for Lustre file system. When enabled, root squash restricts root-level access from clients that try to access your file system as a root user.
	RootSquashConfiguration pulumix.GPtrOutput[LustreFileSystemRootSquashConfiguration, LustreFileSystemRootSquashConfigurationOutput] `pulumi:"rootSquashConfiguration"`
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"securityGroupIds"`
	// The storage capacity (GiB) of the file system. Minimum of `1200`. See more details at [Allowed values for Fsx storage capacity](https://docs.aws.amazon.com/fsx/latest/APIReference/API_CreateFileSystem.html#FSx-CreateFileSystem-request-StorageCapacity). Update is allowed only for `SCRATCH_2`, `PERSISTENT_1` and `PERSISTENT_2` deployment types, See more details at [Fsx Storage Capacity Update](https://docs.aws.amazon.com/fsx/latest/APIReference/API_UpdateFileSystem.html#FSx-UpdateFileSystem-request-StorageCapacity). Required when not creating filesystem for a backup.
	StorageCapacity pulumix.Output[*int] `pulumi:"storageCapacity"`
	// The filesystem storage type. Either `SSD` or `HDD`, defaults to `SSD`. `HDD` is only supported on `PERSISTENT_1` deployment types.
	StorageType pulumix.Output[*string] `pulumi:"storageType"`
	// A list of IDs for the subnets that the file system will be accessible from. File systems currently support only one subnet. The file server is also launched in that subnet's Availability Zone.
	SubnetIds pulumix.Output[string] `pulumi:"subnetIds"`
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Identifier of the Virtual Private Cloud for the file system.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime pulumix.Output[string] `pulumi:"weeklyMaintenanceStartTime"`
}

// NewLustreFileSystem registers a new resource with the given unique name, arguments, and options.
func NewLustreFileSystem(ctx *pulumi.Context,
	name string, args *LustreFileSystemArgs, opts ...pulumi.ResourceOption) (*LustreFileSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LustreFileSystem
	err := ctx.RegisterResource("aws:fsx/lustreFileSystem:LustreFileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLustreFileSystem gets an existing LustreFileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLustreFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LustreFileSystemState, opts ...pulumi.ResourceOption) (*LustreFileSystem, error) {
	var resource LustreFileSystem
	err := ctx.ReadResource("aws:fsx/lustreFileSystem:LustreFileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LustreFileSystem resources.
type lustreFileSystemState struct {
	// Amazon Resource Name of the file system.
	Arn *string `pulumi:"arn"`
	// How Amazon FSx keeps your file and directory listings up to date as you add or modify objects in your linked S3 bucket. see [Auto Import Data Repo](https://docs.aws.amazon.com/fsx/latest/LustreGuide/autoimport-data-repo.html) for more details. Only supported on `PERSISTENT_1` deployment types.
	AutoImportPolicy *string `pulumi:"autoImportPolicy"`
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type.
	AutomaticBackupRetentionDays *int `pulumi:"automaticBackupRetentionDays"`
	// The ID of the source backup to create the filesystem from.
	BackupId *string `pulumi:"backupId"`
	// A boolean flag indicating whether tags for the file system should be copied to backups. Applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. The default value is false.
	CopyTagsToBackups *bool `pulumi:"copyTagsToBackups"`
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime *string `pulumi:"dailyAutomaticBackupStartTime"`
	// Sets the data compression configuration for the file system. Valid values are `LZ4` and `NONE`. Default value is `NONE`. Unsetting this value reverts the compression type back to `NONE`.
	DataCompressionType *string `pulumi:"dataCompressionType"`
	// The filesystem deployment type. One of: `SCRATCH_1`, `SCRATCH_2`, `PERSISTENT_1`, `PERSISTENT_2`.
	DeploymentType *string `pulumi:"deploymentType"`
	// DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
	DnsName *string `pulumi:"dnsName"`
	// The type of drive cache used by `PERSISTENT_1` filesystems that are provisioned with `HDD` storage_type. Required for `HDD` storage_type, set to either `READ` or `NONE`.
	DriveCacheType *string `pulumi:"driveCacheType"`
	// S3 URI (with optional prefix) where the root of your Amazon FSx file system is exported. Can only be specified with `importPath` argument and the path must use the same Amazon S3 bucket as specified in `importPath`. Set equal to `importPath` to overwrite files on export. Defaults to `s3://{IMPORT BUCKET}/FSxLustre{CREATION TIMESTAMP}`. Only supported on `PERSISTENT_1` deployment types.
	ExportPath *string `pulumi:"exportPath"`
	// Sets the Lustre version for the file system that you're creating. Valid values are 2.10 for `SCRATCH_1`, `SCRATCH_2` and `PERSISTENT_1` deployment types. Valid values for 2.12 include all deployment types.
	FileSystemTypeVersion *string `pulumi:"fileSystemTypeVersion"`
	// S3 URI (with optional prefix) that you're using as the data repository for your FSx for Lustre file system. For example, `s3://example-bucket/optional-prefix/`. Only supported on `PERSISTENT_1` deployment types.
	ImportPath *string `pulumi:"importPath"`
	// For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. Can only be specified with `importPath` argument. Defaults to `1024`. Minimum of `1` and maximum of `512000`. Only supported on `PERSISTENT_1` deployment types.
	ImportedFileChunkSize *int `pulumi:"importedFileChunkSize"`
	// ARN for the KMS Key to encrypt the file system at rest, applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Defaults to an AWS managed KMS Key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Lustre logging configuration used when creating an Amazon FSx for Lustre file system. When logging is enabled, Lustre logs error and warning events for data repositories associated with your file system to Amazon CloudWatch Logs.
	LogConfiguration *LustreFileSystemLogConfiguration `pulumi:"logConfiguration"`
	// The value to be used when mounting the filesystem.
	MountName *string `pulumi:"mountName"`
	// Set of Elastic Network Interface identifiers from which the file system is accessible. As explained in the [documentation](https://docs.aws.amazon.com/fsx/latest/LustreGuide/mounting-on-premises.html), the first network interface returned is the primary network interface.
	NetworkInterfaceIds []string `pulumi:"networkInterfaceIds"`
	// AWS account identifier that created the file system.
	OwnerId *string `pulumi:"ownerId"`
	// Describes the amount of read and write throughput for each 1 tebibyte of storage, in MB/s/TiB, required for the `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Valid values for `PERSISTENT_1` deploymentType and `SSD` storageType are 50, 100, 200. Valid values for `PERSISTENT_1` deploymentType and `HDD` storageType are 12, 40. Valid values for `PERSISTENT_2` deploymentType and `  SSD ` storageType are 125, 250, 500, 1000.
	PerUnitStorageThroughput *int `pulumi:"perUnitStorageThroughput"`
	// The Lustre root squash configuration used when creating an Amazon FSx for Lustre file system. When enabled, root squash restricts root-level access from clients that try to access your file system as a root user.
	RootSquashConfiguration *LustreFileSystemRootSquashConfiguration `pulumi:"rootSquashConfiguration"`
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The storage capacity (GiB) of the file system. Minimum of `1200`. See more details at [Allowed values for Fsx storage capacity](https://docs.aws.amazon.com/fsx/latest/APIReference/API_CreateFileSystem.html#FSx-CreateFileSystem-request-StorageCapacity). Update is allowed only for `SCRATCH_2`, `PERSISTENT_1` and `PERSISTENT_2` deployment types, See more details at [Fsx Storage Capacity Update](https://docs.aws.amazon.com/fsx/latest/APIReference/API_UpdateFileSystem.html#FSx-UpdateFileSystem-request-StorageCapacity). Required when not creating filesystem for a backup.
	StorageCapacity *int `pulumi:"storageCapacity"`
	// The filesystem storage type. Either `SSD` or `HDD`, defaults to `SSD`. `HDD` is only supported on `PERSISTENT_1` deployment types.
	StorageType *string `pulumi:"storageType"`
	// A list of IDs for the subnets that the file system will be accessible from. File systems currently support only one subnet. The file server is also launched in that subnet's Availability Zone.
	SubnetIds *string `pulumi:"subnetIds"`
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Identifier of the Virtual Private Cloud for the file system.
	VpcId *string `pulumi:"vpcId"`
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime *string `pulumi:"weeklyMaintenanceStartTime"`
}

type LustreFileSystemState struct {
	// Amazon Resource Name of the file system.
	Arn pulumix.Input[*string]
	// How Amazon FSx keeps your file and directory listings up to date as you add or modify objects in your linked S3 bucket. see [Auto Import Data Repo](https://docs.aws.amazon.com/fsx/latest/LustreGuide/autoimport-data-repo.html) for more details. Only supported on `PERSISTENT_1` deployment types.
	AutoImportPolicy pulumix.Input[*string]
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type.
	AutomaticBackupRetentionDays pulumix.Input[*int]
	// The ID of the source backup to create the filesystem from.
	BackupId pulumix.Input[*string]
	// A boolean flag indicating whether tags for the file system should be copied to backups. Applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. The default value is false.
	CopyTagsToBackups pulumix.Input[*bool]
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime pulumix.Input[*string]
	// Sets the data compression configuration for the file system. Valid values are `LZ4` and `NONE`. Default value is `NONE`. Unsetting this value reverts the compression type back to `NONE`.
	DataCompressionType pulumix.Input[*string]
	// The filesystem deployment type. One of: `SCRATCH_1`, `SCRATCH_2`, `PERSISTENT_1`, `PERSISTENT_2`.
	DeploymentType pulumix.Input[*string]
	// DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
	DnsName pulumix.Input[*string]
	// The type of drive cache used by `PERSISTENT_1` filesystems that are provisioned with `HDD` storage_type. Required for `HDD` storage_type, set to either `READ` or `NONE`.
	DriveCacheType pulumix.Input[*string]
	// S3 URI (with optional prefix) where the root of your Amazon FSx file system is exported. Can only be specified with `importPath` argument and the path must use the same Amazon S3 bucket as specified in `importPath`. Set equal to `importPath` to overwrite files on export. Defaults to `s3://{IMPORT BUCKET}/FSxLustre{CREATION TIMESTAMP}`. Only supported on `PERSISTENT_1` deployment types.
	ExportPath pulumix.Input[*string]
	// Sets the Lustre version for the file system that you're creating. Valid values are 2.10 for `SCRATCH_1`, `SCRATCH_2` and `PERSISTENT_1` deployment types. Valid values for 2.12 include all deployment types.
	FileSystemTypeVersion pulumix.Input[*string]
	// S3 URI (with optional prefix) that you're using as the data repository for your FSx for Lustre file system. For example, `s3://example-bucket/optional-prefix/`. Only supported on `PERSISTENT_1` deployment types.
	ImportPath pulumix.Input[*string]
	// For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. Can only be specified with `importPath` argument. Defaults to `1024`. Minimum of `1` and maximum of `512000`. Only supported on `PERSISTENT_1` deployment types.
	ImportedFileChunkSize pulumix.Input[*int]
	// ARN for the KMS Key to encrypt the file system at rest, applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Defaults to an AWS managed KMS Key.
	KmsKeyId pulumix.Input[*string]
	// The Lustre logging configuration used when creating an Amazon FSx for Lustre file system. When logging is enabled, Lustre logs error and warning events for data repositories associated with your file system to Amazon CloudWatch Logs.
	LogConfiguration pulumix.Input[*LustreFileSystemLogConfigurationArgs]
	// The value to be used when mounting the filesystem.
	MountName pulumix.Input[*string]
	// Set of Elastic Network Interface identifiers from which the file system is accessible. As explained in the [documentation](https://docs.aws.amazon.com/fsx/latest/LustreGuide/mounting-on-premises.html), the first network interface returned is the primary network interface.
	NetworkInterfaceIds pulumix.Input[[]string]
	// AWS account identifier that created the file system.
	OwnerId pulumix.Input[*string]
	// Describes the amount of read and write throughput for each 1 tebibyte of storage, in MB/s/TiB, required for the `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Valid values for `PERSISTENT_1` deploymentType and `SSD` storageType are 50, 100, 200. Valid values for `PERSISTENT_1` deploymentType and `HDD` storageType are 12, 40. Valid values for `PERSISTENT_2` deploymentType and `  SSD ` storageType are 125, 250, 500, 1000.
	PerUnitStorageThroughput pulumix.Input[*int]
	// The Lustre root squash configuration used when creating an Amazon FSx for Lustre file system. When enabled, root squash restricts root-level access from clients that try to access your file system as a root user.
	RootSquashConfiguration pulumix.Input[*LustreFileSystemRootSquashConfigurationArgs]
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds pulumix.Input[[]string]
	// The storage capacity (GiB) of the file system. Minimum of `1200`. See more details at [Allowed values for Fsx storage capacity](https://docs.aws.amazon.com/fsx/latest/APIReference/API_CreateFileSystem.html#FSx-CreateFileSystem-request-StorageCapacity). Update is allowed only for `SCRATCH_2`, `PERSISTENT_1` and `PERSISTENT_2` deployment types, See more details at [Fsx Storage Capacity Update](https://docs.aws.amazon.com/fsx/latest/APIReference/API_UpdateFileSystem.html#FSx-UpdateFileSystem-request-StorageCapacity). Required when not creating filesystem for a backup.
	StorageCapacity pulumix.Input[*int]
	// The filesystem storage type. Either `SSD` or `HDD`, defaults to `SSD`. `HDD` is only supported on `PERSISTENT_1` deployment types.
	StorageType pulumix.Input[*string]
	// A list of IDs for the subnets that the file system will be accessible from. File systems currently support only one subnet. The file server is also launched in that subnet's Availability Zone.
	SubnetIds pulumix.Input[*string]
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Identifier of the Virtual Private Cloud for the file system.
	VpcId pulumix.Input[*string]
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime pulumix.Input[*string]
}

func (LustreFileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*lustreFileSystemState)(nil)).Elem()
}

type lustreFileSystemArgs struct {
	// How Amazon FSx keeps your file and directory listings up to date as you add or modify objects in your linked S3 bucket. see [Auto Import Data Repo](https://docs.aws.amazon.com/fsx/latest/LustreGuide/autoimport-data-repo.html) for more details. Only supported on `PERSISTENT_1` deployment types.
	AutoImportPolicy *string `pulumi:"autoImportPolicy"`
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type.
	AutomaticBackupRetentionDays *int `pulumi:"automaticBackupRetentionDays"`
	// The ID of the source backup to create the filesystem from.
	BackupId *string `pulumi:"backupId"`
	// A boolean flag indicating whether tags for the file system should be copied to backups. Applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. The default value is false.
	CopyTagsToBackups *bool `pulumi:"copyTagsToBackups"`
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime *string `pulumi:"dailyAutomaticBackupStartTime"`
	// Sets the data compression configuration for the file system. Valid values are `LZ4` and `NONE`. Default value is `NONE`. Unsetting this value reverts the compression type back to `NONE`.
	DataCompressionType *string `pulumi:"dataCompressionType"`
	// The filesystem deployment type. One of: `SCRATCH_1`, `SCRATCH_2`, `PERSISTENT_1`, `PERSISTENT_2`.
	DeploymentType *string `pulumi:"deploymentType"`
	// The type of drive cache used by `PERSISTENT_1` filesystems that are provisioned with `HDD` storage_type. Required for `HDD` storage_type, set to either `READ` or `NONE`.
	DriveCacheType *string `pulumi:"driveCacheType"`
	// S3 URI (with optional prefix) where the root of your Amazon FSx file system is exported. Can only be specified with `importPath` argument and the path must use the same Amazon S3 bucket as specified in `importPath`. Set equal to `importPath` to overwrite files on export. Defaults to `s3://{IMPORT BUCKET}/FSxLustre{CREATION TIMESTAMP}`. Only supported on `PERSISTENT_1` deployment types.
	ExportPath *string `pulumi:"exportPath"`
	// Sets the Lustre version for the file system that you're creating. Valid values are 2.10 for `SCRATCH_1`, `SCRATCH_2` and `PERSISTENT_1` deployment types. Valid values for 2.12 include all deployment types.
	FileSystemTypeVersion *string `pulumi:"fileSystemTypeVersion"`
	// S3 URI (with optional prefix) that you're using as the data repository for your FSx for Lustre file system. For example, `s3://example-bucket/optional-prefix/`. Only supported on `PERSISTENT_1` deployment types.
	ImportPath *string `pulumi:"importPath"`
	// For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. Can only be specified with `importPath` argument. Defaults to `1024`. Minimum of `1` and maximum of `512000`. Only supported on `PERSISTENT_1` deployment types.
	ImportedFileChunkSize *int `pulumi:"importedFileChunkSize"`
	// ARN for the KMS Key to encrypt the file system at rest, applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Defaults to an AWS managed KMS Key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Lustre logging configuration used when creating an Amazon FSx for Lustre file system. When logging is enabled, Lustre logs error and warning events for data repositories associated with your file system to Amazon CloudWatch Logs.
	LogConfiguration *LustreFileSystemLogConfiguration `pulumi:"logConfiguration"`
	// Describes the amount of read and write throughput for each 1 tebibyte of storage, in MB/s/TiB, required for the `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Valid values for `PERSISTENT_1` deploymentType and `SSD` storageType are 50, 100, 200. Valid values for `PERSISTENT_1` deploymentType and `HDD` storageType are 12, 40. Valid values for `PERSISTENT_2` deploymentType and `  SSD ` storageType are 125, 250, 500, 1000.
	PerUnitStorageThroughput *int `pulumi:"perUnitStorageThroughput"`
	// The Lustre root squash configuration used when creating an Amazon FSx for Lustre file system. When enabled, root squash restricts root-level access from clients that try to access your file system as a root user.
	RootSquashConfiguration *LustreFileSystemRootSquashConfiguration `pulumi:"rootSquashConfiguration"`
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The storage capacity (GiB) of the file system. Minimum of `1200`. See more details at [Allowed values for Fsx storage capacity](https://docs.aws.amazon.com/fsx/latest/APIReference/API_CreateFileSystem.html#FSx-CreateFileSystem-request-StorageCapacity). Update is allowed only for `SCRATCH_2`, `PERSISTENT_1` and `PERSISTENT_2` deployment types, See more details at [Fsx Storage Capacity Update](https://docs.aws.amazon.com/fsx/latest/APIReference/API_UpdateFileSystem.html#FSx-UpdateFileSystem-request-StorageCapacity). Required when not creating filesystem for a backup.
	StorageCapacity *int `pulumi:"storageCapacity"`
	// The filesystem storage type. Either `SSD` or `HDD`, defaults to `SSD`. `HDD` is only supported on `PERSISTENT_1` deployment types.
	StorageType *string `pulumi:"storageType"`
	// A list of IDs for the subnets that the file system will be accessible from. File systems currently support only one subnet. The file server is also launched in that subnet's Availability Zone.
	SubnetIds string `pulumi:"subnetIds"`
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime *string `pulumi:"weeklyMaintenanceStartTime"`
}

// The set of arguments for constructing a LustreFileSystem resource.
type LustreFileSystemArgs struct {
	// How Amazon FSx keeps your file and directory listings up to date as you add or modify objects in your linked S3 bucket. see [Auto Import Data Repo](https://docs.aws.amazon.com/fsx/latest/LustreGuide/autoimport-data-repo.html) for more details. Only supported on `PERSISTENT_1` deployment types.
	AutoImportPolicy pulumix.Input[*string]
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type.
	AutomaticBackupRetentionDays pulumix.Input[*int]
	// The ID of the source backup to create the filesystem from.
	BackupId pulumix.Input[*string]
	// A boolean flag indicating whether tags for the file system should be copied to backups. Applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. The default value is false.
	CopyTagsToBackups pulumix.Input[*bool]
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime pulumix.Input[*string]
	// Sets the data compression configuration for the file system. Valid values are `LZ4` and `NONE`. Default value is `NONE`. Unsetting this value reverts the compression type back to `NONE`.
	DataCompressionType pulumix.Input[*string]
	// The filesystem deployment type. One of: `SCRATCH_1`, `SCRATCH_2`, `PERSISTENT_1`, `PERSISTENT_2`.
	DeploymentType pulumix.Input[*string]
	// The type of drive cache used by `PERSISTENT_1` filesystems that are provisioned with `HDD` storage_type. Required for `HDD` storage_type, set to either `READ` or `NONE`.
	DriveCacheType pulumix.Input[*string]
	// S3 URI (with optional prefix) where the root of your Amazon FSx file system is exported. Can only be specified with `importPath` argument and the path must use the same Amazon S3 bucket as specified in `importPath`. Set equal to `importPath` to overwrite files on export. Defaults to `s3://{IMPORT BUCKET}/FSxLustre{CREATION TIMESTAMP}`. Only supported on `PERSISTENT_1` deployment types.
	ExportPath pulumix.Input[*string]
	// Sets the Lustre version for the file system that you're creating. Valid values are 2.10 for `SCRATCH_1`, `SCRATCH_2` and `PERSISTENT_1` deployment types. Valid values for 2.12 include all deployment types.
	FileSystemTypeVersion pulumix.Input[*string]
	// S3 URI (with optional prefix) that you're using as the data repository for your FSx for Lustre file system. For example, `s3://example-bucket/optional-prefix/`. Only supported on `PERSISTENT_1` deployment types.
	ImportPath pulumix.Input[*string]
	// For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. Can only be specified with `importPath` argument. Defaults to `1024`. Minimum of `1` and maximum of `512000`. Only supported on `PERSISTENT_1` deployment types.
	ImportedFileChunkSize pulumix.Input[*int]
	// ARN for the KMS Key to encrypt the file system at rest, applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Defaults to an AWS managed KMS Key.
	KmsKeyId pulumix.Input[*string]
	// The Lustre logging configuration used when creating an Amazon FSx for Lustre file system. When logging is enabled, Lustre logs error and warning events for data repositories associated with your file system to Amazon CloudWatch Logs.
	LogConfiguration pulumix.Input[*LustreFileSystemLogConfigurationArgs]
	// Describes the amount of read and write throughput for each 1 tebibyte of storage, in MB/s/TiB, required for the `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Valid values for `PERSISTENT_1` deploymentType and `SSD` storageType are 50, 100, 200. Valid values for `PERSISTENT_1` deploymentType and `HDD` storageType are 12, 40. Valid values for `PERSISTENT_2` deploymentType and `  SSD ` storageType are 125, 250, 500, 1000.
	PerUnitStorageThroughput pulumix.Input[*int]
	// The Lustre root squash configuration used when creating an Amazon FSx for Lustre file system. When enabled, root squash restricts root-level access from clients that try to access your file system as a root user.
	RootSquashConfiguration pulumix.Input[*LustreFileSystemRootSquashConfigurationArgs]
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds pulumix.Input[[]string]
	// The storage capacity (GiB) of the file system. Minimum of `1200`. See more details at [Allowed values for Fsx storage capacity](https://docs.aws.amazon.com/fsx/latest/APIReference/API_CreateFileSystem.html#FSx-CreateFileSystem-request-StorageCapacity). Update is allowed only for `SCRATCH_2`, `PERSISTENT_1` and `PERSISTENT_2` deployment types, See more details at [Fsx Storage Capacity Update](https://docs.aws.amazon.com/fsx/latest/APIReference/API_UpdateFileSystem.html#FSx-UpdateFileSystem-request-StorageCapacity). Required when not creating filesystem for a backup.
	StorageCapacity pulumix.Input[*int]
	// The filesystem storage type. Either `SSD` or `HDD`, defaults to `SSD`. `HDD` is only supported on `PERSISTENT_1` deployment types.
	StorageType pulumix.Input[*string]
	// A list of IDs for the subnets that the file system will be accessible from. File systems currently support only one subnet. The file server is also launched in that subnet's Availability Zone.
	SubnetIds pulumix.Input[string]
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime pulumix.Input[*string]
}

func (LustreFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lustreFileSystemArgs)(nil)).Elem()
}

type LustreFileSystemOutput struct{ *pulumi.OutputState }

func (LustreFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LustreFileSystem)(nil)).Elem()
}

func (o LustreFileSystemOutput) ToLustreFileSystemOutput() LustreFileSystemOutput {
	return o
}

func (o LustreFileSystemOutput) ToLustreFileSystemOutputWithContext(ctx context.Context) LustreFileSystemOutput {
	return o
}

func (o LustreFileSystemOutput) ToOutput(ctx context.Context) pulumix.Output[LustreFileSystem] {
	return pulumix.Output[LustreFileSystem]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name of the file system.
func (o LustreFileSystemOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// How Amazon FSx keeps your file and directory listings up to date as you add or modify objects in your linked S3 bucket. see [Auto Import Data Repo](https://docs.aws.amazon.com/fsx/latest/LustreGuide/autoimport-data-repo.html) for more details. Only supported on `PERSISTENT_1` deployment types.
func (o LustreFileSystemOutput) AutoImportPolicy() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.AutoImportPolicy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type.
func (o LustreFileSystemOutput) AutomaticBackupRetentionDays() pulumix.Output[int] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[int] { return v.AutomaticBackupRetentionDays })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The ID of the source backup to create the filesystem from.
func (o LustreFileSystemOutput) BackupId() pulumix.Output[*string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[*string] { return v.BackupId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A boolean flag indicating whether tags for the file system should be copied to backups. Applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. The default value is false.
func (o LustreFileSystemOutput) CopyTagsToBackups() pulumix.Output[*bool] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[*bool] { return v.CopyTagsToBackups })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. only valid for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Requires `automaticBackupRetentionDays` to be set.
func (o LustreFileSystemOutput) DailyAutomaticBackupStartTime() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.DailyAutomaticBackupStartTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Sets the data compression configuration for the file system. Valid values are `LZ4` and `NONE`. Default value is `NONE`. Unsetting this value reverts the compression type back to `NONE`.
func (o LustreFileSystemOutput) DataCompressionType() pulumix.Output[*string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[*string] { return v.DataCompressionType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The filesystem deployment type. One of: `SCRATCH_1`, `SCRATCH_2`, `PERSISTENT_1`, `PERSISTENT_2`.
func (o LustreFileSystemOutput) DeploymentType() pulumix.Output[*string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[*string] { return v.DeploymentType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
func (o LustreFileSystemOutput) DnsName() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.DnsName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of drive cache used by `PERSISTENT_1` filesystems that are provisioned with `HDD` storage_type. Required for `HDD` storage_type, set to either `READ` or `NONE`.
func (o LustreFileSystemOutput) DriveCacheType() pulumix.Output[*string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[*string] { return v.DriveCacheType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// S3 URI (with optional prefix) where the root of your Amazon FSx file system is exported. Can only be specified with `importPath` argument and the path must use the same Amazon S3 bucket as specified in `importPath`. Set equal to `importPath` to overwrite files on export. Defaults to `s3://{IMPORT BUCKET}/FSxLustre{CREATION TIMESTAMP}`. Only supported on `PERSISTENT_1` deployment types.
func (o LustreFileSystemOutput) ExportPath() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.ExportPath })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Sets the Lustre version for the file system that you're creating. Valid values are 2.10 for `SCRATCH_1`, `SCRATCH_2` and `PERSISTENT_1` deployment types. Valid values for 2.12 include all deployment types.
func (o LustreFileSystemOutput) FileSystemTypeVersion() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.FileSystemTypeVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// S3 URI (with optional prefix) that you're using as the data repository for your FSx for Lustre file system. For example, `s3://example-bucket/optional-prefix/`. Only supported on `PERSISTENT_1` deployment types.
func (o LustreFileSystemOutput) ImportPath() pulumix.Output[*string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[*string] { return v.ImportPath })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. Can only be specified with `importPath` argument. Defaults to `1024`. Minimum of `1` and maximum of `512000`. Only supported on `PERSISTENT_1` deployment types.
func (o LustreFileSystemOutput) ImportedFileChunkSize() pulumix.Output[int] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[int] { return v.ImportedFileChunkSize })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// ARN for the KMS Key to encrypt the file system at rest, applicable for `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Defaults to an AWS managed KMS Key.
func (o LustreFileSystemOutput) KmsKeyId() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.KmsKeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Lustre logging configuration used when creating an Amazon FSx for Lustre file system. When logging is enabled, Lustre logs error and warning events for data repositories associated with your file system to Amazon CloudWatch Logs.
func (o LustreFileSystemOutput) LogConfiguration() pulumix.GPtrOutput[LustreFileSystemLogConfiguration, LustreFileSystemLogConfigurationOutput] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.GPtrOutput[LustreFileSystemLogConfiguration, LustreFileSystemLogConfigurationOutput] {
		return v.LogConfiguration
	})
	unwrapped := pulumix.Flatten[*LustreFileSystemLogConfiguration, pulumix.GPtrOutput[LustreFileSystemLogConfiguration, LustreFileSystemLogConfigurationOutput]](value)
	return pulumix.GPtrOutput[LustreFileSystemLogConfiguration, LustreFileSystemLogConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The value to be used when mounting the filesystem.
func (o LustreFileSystemOutput) MountName() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.MountName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Set of Elastic Network Interface identifiers from which the file system is accessible. As explained in the [documentation](https://docs.aws.amazon.com/fsx/latest/LustreGuide/mounting-on-premises.html), the first network interface returned is the primary network interface.
func (o LustreFileSystemOutput) NetworkInterfaceIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.ArrayOutput[string] { return v.NetworkInterfaceIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// AWS account identifier that created the file system.
func (o LustreFileSystemOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Describes the amount of read and write throughput for each 1 tebibyte of storage, in MB/s/TiB, required for the `PERSISTENT_1` and `PERSISTENT_2` deployment_type. Valid values for `PERSISTENT_1` deploymentType and `SSD` storageType are 50, 100, 200. Valid values for `PERSISTENT_1` deploymentType and `HDD` storageType are 12, 40. Valid values for `PERSISTENT_2` deploymentType and `  SSD ` storageType are 125, 250, 500, 1000.
func (o LustreFileSystemOutput) PerUnitStorageThroughput() pulumix.Output[*int] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[*int] { return v.PerUnitStorageThroughput })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The Lustre root squash configuration used when creating an Amazon FSx for Lustre file system. When enabled, root squash restricts root-level access from clients that try to access your file system as a root user.
func (o LustreFileSystemOutput) RootSquashConfiguration() pulumix.GPtrOutput[LustreFileSystemRootSquashConfiguration, LustreFileSystemRootSquashConfigurationOutput] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.GPtrOutput[LustreFileSystemRootSquashConfiguration, LustreFileSystemRootSquashConfigurationOutput] {
		return v.RootSquashConfiguration
	})
	unwrapped := pulumix.Flatten[*LustreFileSystemRootSquashConfiguration, pulumix.GPtrOutput[LustreFileSystemRootSquashConfiguration, LustreFileSystemRootSquashConfigurationOutput]](value)
	return pulumix.GPtrOutput[LustreFileSystemRootSquashConfiguration, LustreFileSystemRootSquashConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
func (o LustreFileSystemOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.ArrayOutput[string] { return v.SecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The storage capacity (GiB) of the file system. Minimum of `1200`. See more details at [Allowed values for Fsx storage capacity](https://docs.aws.amazon.com/fsx/latest/APIReference/API_CreateFileSystem.html#FSx-CreateFileSystem-request-StorageCapacity). Update is allowed only for `SCRATCH_2`, `PERSISTENT_1` and `PERSISTENT_2` deployment types, See more details at [Fsx Storage Capacity Update](https://docs.aws.amazon.com/fsx/latest/APIReference/API_UpdateFileSystem.html#FSx-UpdateFileSystem-request-StorageCapacity). Required when not creating filesystem for a backup.
func (o LustreFileSystemOutput) StorageCapacity() pulumix.Output[*int] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[*int] { return v.StorageCapacity })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The filesystem storage type. Either `SSD` or `HDD`, defaults to `SSD`. `HDD` is only supported on `PERSISTENT_1` deployment types.
func (o LustreFileSystemOutput) StorageType() pulumix.Output[*string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[*string] { return v.StorageType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A list of IDs for the subnets that the file system will be accessible from. File systems currently support only one subnet. The file server is also launched in that subnet's Availability Zone.
func (o LustreFileSystemOutput) SubnetIds() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.SubnetIds })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o LustreFileSystemOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o LustreFileSystemOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Identifier of the Virtual Private Cloud for the file system.
func (o LustreFileSystemOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
func (o LustreFileSystemOutput) WeeklyMaintenanceStartTime() pulumix.Output[string] {
	value := pulumix.Apply[LustreFileSystem](o, func(v LustreFileSystem) pulumix.Output[string] { return v.WeeklyMaintenanceStartTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(LustreFileSystemOutput{})
}
