// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `waf.getSubscribedRuleGroup` retrieves information about a Managed WAF Rule Group from AWS Marketplace (needs to be subscribed to first).
func GetSubscribedRuleGroup(ctx *pulumi.Context, args *GetSubscribedRuleGroupArgs, opts ...pulumi.InvokeOption) (*GetSubscribedRuleGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscribedRuleGroupResult
	err := ctx.Invoke("aws:waf/getSubscribedRuleGroup:getSubscribedRuleGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscribedRuleGroup.
type GetSubscribedRuleGroupArgs struct {
	// Name of the WAF rule group.
	MetricName *string `pulumi:"metricName"`
	// Name of the WAF rule group.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getSubscribedRuleGroup.
type GetSubscribedRuleGroupResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	MetricName *string `pulumi:"metricName"`
	Name       *string `pulumi:"name"`
}

func GetSubscribedRuleGroupOutput(ctx *pulumi.Context, args GetSubscribedRuleGroupOutputArgs, opts ...pulumi.InvokeOption) GetSubscribedRuleGroupResultOutput {
	outputResult := pulumix.ApplyErr[*GetSubscribedRuleGroupArgs](args.ToOutput(), func(plainArgs *GetSubscribedRuleGroupArgs) (*GetSubscribedRuleGroupResult, error) {
		return GetSubscribedRuleGroup(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetSubscribedRuleGroupResultOutput, *GetSubscribedRuleGroupResult](outputResult)
}

// A collection of arguments for invoking getSubscribedRuleGroup.
type GetSubscribedRuleGroupOutputArgs struct {
	// Name of the WAF rule group.
	MetricName pulumix.Input[*string] `pulumi:"metricName"`
	// Name of the WAF rule group.
	Name pulumix.Input[*string] `pulumi:"name"`
}

func (args GetSubscribedRuleGroupOutputArgs) ToOutput() pulumix.Output[*GetSubscribedRuleGroupArgs] {
	allArgs := pulumix.All(
		args.MetricName.ToOutput(context.Background()).AsAny(),
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetSubscribedRuleGroupArgs {
		return &GetSubscribedRuleGroupArgs{
			MetricName: resolvedArgs[0].(*string),
			Name:       resolvedArgs[1].(*string),
		}
	})
}

type GetSubscribedRuleGroupResultOutput struct{ *pulumi.OutputState }

func (GetSubscribedRuleGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribedRuleGroupResult)(nil)).Elem()
}

func (o GetSubscribedRuleGroupResultOutput) ToOutput(context.Context) pulumix.Output[*GetSubscribedRuleGroupResult] {
	return pulumix.Output[*GetSubscribedRuleGroupResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSubscribedRuleGroupResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetSubscribedRuleGroupResult](o, func(v *GetSubscribedRuleGroupResult) string { return v.Id })
}

func (o GetSubscribedRuleGroupResultOutput) MetricName() pulumix.Output[*string] {
	return pulumix.Apply[*GetSubscribedRuleGroupResult](o, func(v *GetSubscribedRuleGroupResult) *string { return v.MetricName })
}

func (o GetSubscribedRuleGroupResultOutput) Name() pulumix.Output[*string] {
	return pulumix.Apply[*GetSubscribedRuleGroupResult](o, func(v *GetSubscribedRuleGroupResult) *string { return v.Name })
}
