// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a VPC Endpoint Route Table Association
type VpcEndpointRouteTableAssociation struct {
	pulumi.CustomResourceState

	// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
	RouteTableId pulumix.Output[string] `pulumi:"routeTableId"`
	// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
	VpcEndpointId pulumix.Output[string] `pulumi:"vpcEndpointId"`
}

// NewVpcEndpointRouteTableAssociation registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointRouteTableAssociation(ctx *pulumi.Context,
	name string, args *VpcEndpointRouteTableAssociationArgs, opts ...pulumi.ResourceOption) (*VpcEndpointRouteTableAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'RouteTableId'")
	}
	if args.VpcEndpointId == nil {
		return nil, errors.New("invalid value for required argument 'VpcEndpointId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcEndpointRouteTableAssociation
	err := ctx.RegisterResource("aws:ec2/vpcEndpointRouteTableAssociation:VpcEndpointRouteTableAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointRouteTableAssociation gets an existing VpcEndpointRouteTableAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointRouteTableAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointRouteTableAssociationState, opts ...pulumi.ResourceOption) (*VpcEndpointRouteTableAssociation, error) {
	var resource VpcEndpointRouteTableAssociation
	err := ctx.ReadResource("aws:ec2/vpcEndpointRouteTableAssociation:VpcEndpointRouteTableAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpointRouteTableAssociation resources.
type vpcEndpointRouteTableAssociationState struct {
	// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
	RouteTableId *string `pulumi:"routeTableId"`
	// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
}

type VpcEndpointRouteTableAssociationState struct {
	// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
	RouteTableId pulumix.Input[*string]
	// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
	VpcEndpointId pulumix.Input[*string]
}

func (VpcEndpointRouteTableAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointRouteTableAssociationState)(nil)).Elem()
}

type vpcEndpointRouteTableAssociationArgs struct {
	// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
	RouteTableId string `pulumi:"routeTableId"`
	// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
	VpcEndpointId string `pulumi:"vpcEndpointId"`
}

// The set of arguments for constructing a VpcEndpointRouteTableAssociation resource.
type VpcEndpointRouteTableAssociationArgs struct {
	// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
	RouteTableId pulumix.Input[string]
	// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
	VpcEndpointId pulumix.Input[string]
}

func (VpcEndpointRouteTableAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointRouteTableAssociationArgs)(nil)).Elem()
}

type VpcEndpointRouteTableAssociationOutput struct{ *pulumi.OutputState }

func (VpcEndpointRouteTableAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointRouteTableAssociation)(nil)).Elem()
}

func (o VpcEndpointRouteTableAssociationOutput) ToVpcEndpointRouteTableAssociationOutput() VpcEndpointRouteTableAssociationOutput {
	return o
}

func (o VpcEndpointRouteTableAssociationOutput) ToVpcEndpointRouteTableAssociationOutputWithContext(ctx context.Context) VpcEndpointRouteTableAssociationOutput {
	return o
}

func (o VpcEndpointRouteTableAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[VpcEndpointRouteTableAssociation] {
	return pulumix.Output[VpcEndpointRouteTableAssociation]{
		OutputState: o.OutputState,
	}
}

// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
func (o VpcEndpointRouteTableAssociationOutput) RouteTableId() pulumix.Output[string] {
	value := pulumix.Apply[VpcEndpointRouteTableAssociation](o, func(v VpcEndpointRouteTableAssociation) pulumix.Output[string] { return v.RouteTableId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
func (o VpcEndpointRouteTableAssociationOutput) VpcEndpointId() pulumix.Output[string] {
	value := pulumix.Apply[VpcEndpointRouteTableAssociation](o, func(v VpcEndpointRouteTableAssociation) pulumix.Output[string] { return v.VpcEndpointId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(VpcEndpointRouteTableAssociationOutput{})
}
