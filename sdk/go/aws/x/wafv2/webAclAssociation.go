// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a WAFv2 Web ACL Association.
//
// > **NOTE on associating a WAFv2 Web ACL with a Cloudfront distribution:** Do not use this resource to associate a WAFv2 Web ACL with a Cloudfront Distribution. The [AWS API call backing this resource](https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html) notes that you should use the `webAclId` property on the `cloudfrontDistribution` instead.
//
// [1]: https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html
type WebAclAssociation struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, or an Amazon Cognito User Pool.
	ResourceArn pulumix.Output[string] `pulumi:"resourceArn"`
	// The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
	WebAclArn pulumix.Output[string] `pulumi:"webAclArn"`
}

// NewWebAclAssociation registers a new resource with the given unique name, arguments, and options.
func NewWebAclAssociation(ctx *pulumi.Context,
	name string, args *WebAclAssociationArgs, opts ...pulumi.ResourceOption) (*WebAclAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceArn'")
	}
	if args.WebAclArn == nil {
		return nil, errors.New("invalid value for required argument 'WebAclArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAclAssociation
	err := ctx.RegisterResource("aws:wafv2/webAclAssociation:WebAclAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAclAssociation gets an existing WebAclAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAclAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAclAssociationState, opts ...pulumi.ResourceOption) (*WebAclAssociation, error) {
	var resource WebAclAssociation
	err := ctx.ReadResource("aws:wafv2/webAclAssociation:WebAclAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAclAssociation resources.
type webAclAssociationState struct {
	// The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, or an Amazon Cognito User Pool.
	ResourceArn *string `pulumi:"resourceArn"`
	// The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
	WebAclArn *string `pulumi:"webAclArn"`
}

type WebAclAssociationState struct {
	// The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, or an Amazon Cognito User Pool.
	ResourceArn pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
	WebAclArn pulumix.Input[*string]
}

func (WebAclAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclAssociationState)(nil)).Elem()
}

type webAclAssociationArgs struct {
	// The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, or an Amazon Cognito User Pool.
	ResourceArn string `pulumi:"resourceArn"`
	// The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
	WebAclArn string `pulumi:"webAclArn"`
}

// The set of arguments for constructing a WebAclAssociation resource.
type WebAclAssociationArgs struct {
	// The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, or an Amazon Cognito User Pool.
	ResourceArn pulumix.Input[string]
	// The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
	WebAclArn pulumix.Input[string]
}

func (WebAclAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclAssociationArgs)(nil)).Elem()
}

type WebAclAssociationOutput struct{ *pulumi.OutputState }

func (WebAclAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclAssociation)(nil)).Elem()
}

func (o WebAclAssociationOutput) ToWebAclAssociationOutput() WebAclAssociationOutput {
	return o
}

func (o WebAclAssociationOutput) ToWebAclAssociationOutputWithContext(ctx context.Context) WebAclAssociationOutput {
	return o
}

func (o WebAclAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclAssociation] {
	return pulumix.Output[WebAclAssociation]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, or an Amazon Cognito User Pool.
func (o WebAclAssociationOutput) ResourceArn() pulumix.Output[string] {
	value := pulumix.Apply[WebAclAssociation](o, func(v WebAclAssociation) pulumix.Output[string] { return v.ResourceArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
func (o WebAclAssociationOutput) WebAclArn() pulumix.Output[string] {
	value := pulumix.Apply[WebAclAssociation](o, func(v WebAclAssociation) pulumix.Output[string] { return v.WebAclArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(WebAclAssociationOutput{})
}
