// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elastictranscoder

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic Transcoder pipeline resource.
type Pipeline struct {
	pulumi.CustomResourceState

	// The ARN of the Elastictranscoder pipeline.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn pulumix.Output[*string] `pulumi:"awsKmsKeyArn"`
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig pulumix.GPtrOutput[PipelineContentConfig, PipelineContentConfigOutput] `pulumi:"contentConfig"`
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions pulumix.GArrayOutput[PipelineContentConfigPermission, PipelineContentConfigPermissionOutput] `pulumi:"contentConfigPermissions"`
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket pulumix.Output[string] `pulumi:"inputBucket"`
	// The name of the pipeline. Maximum 40 characters
	Name pulumix.Output[string] `pulumi:"name"`
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications pulumix.GPtrOutput[PipelineNotifications, PipelineNotificationsOutput] `pulumi:"notifications"`
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket pulumix.Output[string] `pulumi:"outputBucket"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role pulumix.Output[string] `pulumi:"role"`
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig pulumix.GPtrOutput[PipelineThumbnailConfig, PipelineThumbnailConfigOutput] `pulumi:"thumbnailConfig"`
	// The permissions for the `thumbnailConfig` object. (documented below)
	//
	// The `contentConfig` object specifies information about the Amazon S3 bucket in
	// which you want Elastic Transcoder to save transcoded files and playlists: which
	// bucket to use, and the storage class that you want to assign to the files. If
	// you specify values for `contentConfig`, you must also specify values for
	// `thumbnailConfig`. If you specify values for `contentConfig` and
	// `thumbnailConfig`, omit the `outputBucket` object.
	ThumbnailConfigPermissions pulumix.GArrayOutput[PipelineThumbnailConfigPermission, PipelineThumbnailConfigPermissionOutput] `pulumi:"thumbnailConfigPermissions"`
}

// NewPipeline registers a new resource with the given unique name, arguments, and options.
func NewPipeline(ctx *pulumi.Context,
	name string, args *PipelineArgs, opts ...pulumi.ResourceOption) (*Pipeline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InputBucket == nil {
		return nil, errors.New("invalid value for required argument 'InputBucket'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Pipeline
	err := ctx.RegisterResource("aws:elastictranscoder/pipeline:Pipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPipeline gets an existing Pipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PipelineState, opts ...pulumi.ResourceOption) (*Pipeline, error) {
	var resource Pipeline
	err := ctx.ReadResource("aws:elastictranscoder/pipeline:Pipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Pipeline resources.
type pipelineState struct {
	// The ARN of the Elastictranscoder pipeline.
	Arn *string `pulumi:"arn"`
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn *string `pulumi:"awsKmsKeyArn"`
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig *PipelineContentConfig `pulumi:"contentConfig"`
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions []PipelineContentConfigPermission `pulumi:"contentConfigPermissions"`
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket *string `pulumi:"inputBucket"`
	// The name of the pipeline. Maximum 40 characters
	Name *string `pulumi:"name"`
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications *PipelineNotifications `pulumi:"notifications"`
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket *string `pulumi:"outputBucket"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role *string `pulumi:"role"`
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig *PipelineThumbnailConfig `pulumi:"thumbnailConfig"`
	// The permissions for the `thumbnailConfig` object. (documented below)
	//
	// The `contentConfig` object specifies information about the Amazon S3 bucket in
	// which you want Elastic Transcoder to save transcoded files and playlists: which
	// bucket to use, and the storage class that you want to assign to the files. If
	// you specify values for `contentConfig`, you must also specify values for
	// `thumbnailConfig`. If you specify values for `contentConfig` and
	// `thumbnailConfig`, omit the `outputBucket` object.
	ThumbnailConfigPermissions []PipelineThumbnailConfigPermission `pulumi:"thumbnailConfigPermissions"`
}

type PipelineState struct {
	// The ARN of the Elastictranscoder pipeline.
	Arn pulumix.Input[*string]
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn pulumix.Input[*string]
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig pulumix.Input[*PipelineContentConfigArgs]
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions pulumix.Input[[]*PipelineContentConfigPermissionArgs]
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket pulumix.Input[*string]
	// The name of the pipeline. Maximum 40 characters
	Name pulumix.Input[*string]
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications pulumix.Input[*PipelineNotificationsArgs]
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket pulumix.Input[*string]
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role pulumix.Input[*string]
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig pulumix.Input[*PipelineThumbnailConfigArgs]
	// The permissions for the `thumbnailConfig` object. (documented below)
	//
	// The `contentConfig` object specifies information about the Amazon S3 bucket in
	// which you want Elastic Transcoder to save transcoded files and playlists: which
	// bucket to use, and the storage class that you want to assign to the files. If
	// you specify values for `contentConfig`, you must also specify values for
	// `thumbnailConfig`. If you specify values for `contentConfig` and
	// `thumbnailConfig`, omit the `outputBucket` object.
	ThumbnailConfigPermissions pulumix.Input[[]*PipelineThumbnailConfigPermissionArgs]
}

func (PipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineState)(nil)).Elem()
}

type pipelineArgs struct {
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn *string `pulumi:"awsKmsKeyArn"`
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig *PipelineContentConfig `pulumi:"contentConfig"`
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions []PipelineContentConfigPermission `pulumi:"contentConfigPermissions"`
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket string `pulumi:"inputBucket"`
	// The name of the pipeline. Maximum 40 characters
	Name *string `pulumi:"name"`
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications *PipelineNotifications `pulumi:"notifications"`
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket *string `pulumi:"outputBucket"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role string `pulumi:"role"`
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig *PipelineThumbnailConfig `pulumi:"thumbnailConfig"`
	// The permissions for the `thumbnailConfig` object. (documented below)
	//
	// The `contentConfig` object specifies information about the Amazon S3 bucket in
	// which you want Elastic Transcoder to save transcoded files and playlists: which
	// bucket to use, and the storage class that you want to assign to the files. If
	// you specify values for `contentConfig`, you must also specify values for
	// `thumbnailConfig`. If you specify values for `contentConfig` and
	// `thumbnailConfig`, omit the `outputBucket` object.
	ThumbnailConfigPermissions []PipelineThumbnailConfigPermission `pulumi:"thumbnailConfigPermissions"`
}

// The set of arguments for constructing a Pipeline resource.
type PipelineArgs struct {
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn pulumix.Input[*string]
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig pulumix.Input[*PipelineContentConfigArgs]
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions pulumix.Input[[]*PipelineContentConfigPermissionArgs]
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket pulumix.Input[string]
	// The name of the pipeline. Maximum 40 characters
	Name pulumix.Input[*string]
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications pulumix.Input[*PipelineNotificationsArgs]
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket pulumix.Input[*string]
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role pulumix.Input[string]
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig pulumix.Input[*PipelineThumbnailConfigArgs]
	// The permissions for the `thumbnailConfig` object. (documented below)
	//
	// The `contentConfig` object specifies information about the Amazon S3 bucket in
	// which you want Elastic Transcoder to save transcoded files and playlists: which
	// bucket to use, and the storage class that you want to assign to the files. If
	// you specify values for `contentConfig`, you must also specify values for
	// `thumbnailConfig`. If you specify values for `contentConfig` and
	// `thumbnailConfig`, omit the `outputBucket` object.
	ThumbnailConfigPermissions pulumix.Input[[]*PipelineThumbnailConfigPermissionArgs]
}

func (PipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineArgs)(nil)).Elem()
}

type PipelineOutput struct{ *pulumi.OutputState }

func (PipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Pipeline)(nil)).Elem()
}

func (o PipelineOutput) ToPipelineOutput() PipelineOutput {
	return o
}

func (o PipelineOutput) ToPipelineOutputWithContext(ctx context.Context) PipelineOutput {
	return o
}

func (o PipelineOutput) ToOutput(ctx context.Context) pulumix.Output[Pipeline] {
	return pulumix.Output[Pipeline]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Elastictranscoder pipeline.
func (o PipelineOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
func (o PipelineOutput) AwsKmsKeyArn() pulumix.Output[*string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[*string] { return v.AwsKmsKeyArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
func (o PipelineOutput) ContentConfig() pulumix.GPtrOutput[PipelineContentConfig, PipelineContentConfigOutput] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.GPtrOutput[PipelineContentConfig, PipelineContentConfigOutput] {
		return v.ContentConfig
	})
	unwrapped := pulumix.Flatten[*PipelineContentConfig, pulumix.GPtrOutput[PipelineContentConfig, PipelineContentConfigOutput]](value)
	return pulumix.GPtrOutput[PipelineContentConfig, PipelineContentConfigOutput]{OutputState: unwrapped.OutputState}
}

// The permissions for the `contentConfig` object. (documented below)
func (o PipelineOutput) ContentConfigPermissions() pulumix.GArrayOutput[PipelineContentConfigPermission, PipelineContentConfigPermissionOutput] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.GArrayOutput[PipelineContentConfigPermission, PipelineContentConfigPermissionOutput] {
		return v.ContentConfigPermissions
	})
	unwrapped := pulumix.Flatten[[]PipelineContentConfigPermission, pulumix.GArrayOutput[PipelineContentConfigPermission, PipelineContentConfigPermissionOutput]](value)
	return pulumix.GArrayOutput[PipelineContentConfigPermission, PipelineContentConfigPermissionOutput]{OutputState: unwrapped.OutputState}
}

// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
func (o PipelineOutput) InputBucket() pulumix.Output[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[string] { return v.InputBucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the pipeline. Maximum 40 characters
func (o PipelineOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
func (o PipelineOutput) Notifications() pulumix.GPtrOutput[PipelineNotifications, PipelineNotificationsOutput] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.GPtrOutput[PipelineNotifications, PipelineNotificationsOutput] {
		return v.Notifications
	})
	unwrapped := pulumix.Flatten[*PipelineNotifications, pulumix.GPtrOutput[PipelineNotifications, PipelineNotificationsOutput]](value)
	return pulumix.GPtrOutput[PipelineNotifications, PipelineNotificationsOutput]{OutputState: unwrapped.OutputState}
}

// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
func (o PipelineOutput) OutputBucket() pulumix.Output[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[string] { return v.OutputBucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
func (o PipelineOutput) Role() pulumix.Output[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[string] { return v.Role })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
func (o PipelineOutput) ThumbnailConfig() pulumix.GPtrOutput[PipelineThumbnailConfig, PipelineThumbnailConfigOutput] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.GPtrOutput[PipelineThumbnailConfig, PipelineThumbnailConfigOutput] {
		return v.ThumbnailConfig
	})
	unwrapped := pulumix.Flatten[*PipelineThumbnailConfig, pulumix.GPtrOutput[PipelineThumbnailConfig, PipelineThumbnailConfigOutput]](value)
	return pulumix.GPtrOutput[PipelineThumbnailConfig, PipelineThumbnailConfigOutput]{OutputState: unwrapped.OutputState}
}

// The permissions for the `thumbnailConfig` object. (documented below)
//
// The `contentConfig` object specifies information about the Amazon S3 bucket in
// which you want Elastic Transcoder to save transcoded files and playlists: which
// bucket to use, and the storage class that you want to assign to the files. If
// you specify values for `contentConfig`, you must also specify values for
// `thumbnailConfig`. If you specify values for `contentConfig` and
// `thumbnailConfig`, omit the `outputBucket` object.
func (o PipelineOutput) ThumbnailConfigPermissions() pulumix.GArrayOutput[PipelineThumbnailConfigPermission, PipelineThumbnailConfigPermissionOutput] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.GArrayOutput[PipelineThumbnailConfigPermission, PipelineThumbnailConfigPermissionOutput] {
		return v.ThumbnailConfigPermissions
	})
	unwrapped := pulumix.Flatten[[]PipelineThumbnailConfigPermission, pulumix.GArrayOutput[PipelineThumbnailConfigPermission, PipelineThumbnailConfigPermissionOutput]](value)
	return pulumix.GArrayOutput[PipelineThumbnailConfigPermission, PipelineThumbnailConfigPermissionOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(PipelineOutput{})
}
