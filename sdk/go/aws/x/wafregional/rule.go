// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an WAF Regional Rule Resource for use with Application Load Balancer.
type Rule struct {
	pulumi.CustomResourceState

	// The ARN of the WAF Regional Rule.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName pulumix.Output[string] `pulumi:"metricName"`
	// The name or description of the rule.
	Name pulumix.Output[string] `pulumi:"name"`
	// The objects to include in a rule (documented below).
	Predicates pulumix.GArrayOutput[RulePredicate, RulePredicateOutput] `pulumi:"predicates"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewRule registers a new resource with the given unique name, arguments, and options.
func NewRule(ctx *pulumi.Context,
	name string, args *RuleArgs, opts ...pulumi.ResourceOption) (*Rule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MetricName == nil {
		return nil, errors.New("invalid value for required argument 'MetricName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Rule
	err := ctx.RegisterResource("aws:wafregional/rule:Rule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRule gets an existing Rule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleState, opts ...pulumi.ResourceOption) (*Rule, error) {
	var resource Rule
	err := ctx.ReadResource("aws:wafregional/rule:Rule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Rule resources.
type ruleState struct {
	// The ARN of the WAF Regional Rule.
	Arn *string `pulumi:"arn"`
	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName *string `pulumi:"metricName"`
	// The name or description of the rule.
	Name *string `pulumi:"name"`
	// The objects to include in a rule (documented below).
	Predicates []RulePredicate `pulumi:"predicates"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type RuleState struct {
	// The ARN of the WAF Regional Rule.
	Arn pulumix.Input[*string]
	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName pulumix.Input[*string]
	// The name or description of the rule.
	Name pulumix.Input[*string]
	// The objects to include in a rule (documented below).
	Predicates pulumix.Input[[]*RulePredicateArgs]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (RuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleState)(nil)).Elem()
}

type ruleArgs struct {
	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName string `pulumi:"metricName"`
	// The name or description of the rule.
	Name *string `pulumi:"name"`
	// The objects to include in a rule (documented below).
	Predicates []RulePredicate `pulumi:"predicates"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Rule resource.
type RuleArgs struct {
	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName pulumix.Input[string]
	// The name or description of the rule.
	Name pulumix.Input[*string]
	// The objects to include in a rule (documented below).
	Predicates pulumix.Input[[]*RulePredicateArgs]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (RuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleArgs)(nil)).Elem()
}

type RuleOutput struct{ *pulumi.OutputState }

func (RuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Rule)(nil)).Elem()
}

func (o RuleOutput) ToRuleOutput() RuleOutput {
	return o
}

func (o RuleOutput) ToRuleOutputWithContext(ctx context.Context) RuleOutput {
	return o
}

func (o RuleOutput) ToOutput(ctx context.Context) pulumix.Output[Rule] {
	return pulumix.Output[Rule]{
		OutputState: o.OutputState,
	}
}

// The ARN of the WAF Regional Rule.
func (o RuleOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Rule](o, func(v Rule) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name or description for the Amazon CloudWatch metric of this rule.
func (o RuleOutput) MetricName() pulumix.Output[string] {
	value := pulumix.Apply[Rule](o, func(v Rule) pulumix.Output[string] { return v.MetricName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name or description of the rule.
func (o RuleOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Rule](o, func(v Rule) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The objects to include in a rule (documented below).
func (o RuleOutput) Predicates() pulumix.GArrayOutput[RulePredicate, RulePredicateOutput] {
	value := pulumix.Apply[Rule](o, func(v Rule) pulumix.GArrayOutput[RulePredicate, RulePredicateOutput] { return v.Predicates })
	unwrapped := pulumix.Flatten[[]RulePredicate, pulumix.GArrayOutput[RulePredicate, RulePredicateOutput]](value)
	return pulumix.GArrayOutput[RulePredicate, RulePredicateOutput]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o RuleOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Rule](o, func(v Rule) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o RuleOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Rule](o, func(v Rule) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(RuleOutput{})
}
