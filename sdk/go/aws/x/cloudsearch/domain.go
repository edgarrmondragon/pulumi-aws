// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudsearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an CloudSearch domain resource.
//
// The provider waits for the domain to become `Active` when applying a configuration.
type Domain struct {
	pulumi.CustomResourceState

	// The domain's ARN.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The service endpoint for updating documents in a search domain.
	DocumentServiceEndpoint pulumix.Output[string] `pulumi:"documentServiceEndpoint"`
	// An internally generated unique identifier for the domain.
	DomainId pulumix.Output[string] `pulumi:"domainId"`
	// Domain endpoint options. Documented below.
	EndpointOptions pulumix.GPtrOutput[DomainEndpointOptions, DomainEndpointOptionsOutput] `pulumi:"endpointOptions"`
	// The index fields for documents added to the domain. Documented below.
	IndexFields pulumix.GArrayOutput[DomainIndexField, DomainIndexFieldOutput] `pulumi:"indexFields"`
	// Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
	MultiAz pulumix.Output[bool] `pulumi:"multiAz"`
	// The name of the CloudSearch domain.
	Name pulumix.Output[string] `pulumi:"name"`
	// Domain scaling parameters. Documented below.
	ScalingParameters pulumix.GPtrOutput[DomainScalingParameters, DomainScalingParametersOutput] `pulumi:"scalingParameters"`
	// The service endpoint for requesting search results from a search domain.
	SearchServiceEndpoint pulumix.Output[string] `pulumi:"searchServiceEndpoint"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		args = &DomainArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Domain
	err := ctx.RegisterResource("aws:cloudsearch/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("aws:cloudsearch/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	// The domain's ARN.
	Arn *string `pulumi:"arn"`
	// The service endpoint for updating documents in a search domain.
	DocumentServiceEndpoint *string `pulumi:"documentServiceEndpoint"`
	// An internally generated unique identifier for the domain.
	DomainId *string `pulumi:"domainId"`
	// Domain endpoint options. Documented below.
	EndpointOptions *DomainEndpointOptions `pulumi:"endpointOptions"`
	// The index fields for documents added to the domain. Documented below.
	IndexFields []DomainIndexField `pulumi:"indexFields"`
	// Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
	MultiAz *bool `pulumi:"multiAz"`
	// The name of the CloudSearch domain.
	Name *string `pulumi:"name"`
	// Domain scaling parameters. Documented below.
	ScalingParameters *DomainScalingParameters `pulumi:"scalingParameters"`
	// The service endpoint for requesting search results from a search domain.
	SearchServiceEndpoint *string `pulumi:"searchServiceEndpoint"`
}

type DomainState struct {
	// The domain's ARN.
	Arn pulumix.Input[*string]
	// The service endpoint for updating documents in a search domain.
	DocumentServiceEndpoint pulumix.Input[*string]
	// An internally generated unique identifier for the domain.
	DomainId pulumix.Input[*string]
	// Domain endpoint options. Documented below.
	EndpointOptions pulumix.Input[*DomainEndpointOptionsArgs]
	// The index fields for documents added to the domain. Documented below.
	IndexFields pulumix.Input[[]*DomainIndexFieldArgs]
	// Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
	MultiAz pulumix.Input[*bool]
	// The name of the CloudSearch domain.
	Name pulumix.Input[*string]
	// Domain scaling parameters. Documented below.
	ScalingParameters pulumix.Input[*DomainScalingParametersArgs]
	// The service endpoint for requesting search results from a search domain.
	SearchServiceEndpoint pulumix.Input[*string]
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	// Domain endpoint options. Documented below.
	EndpointOptions *DomainEndpointOptions `pulumi:"endpointOptions"`
	// The index fields for documents added to the domain. Documented below.
	IndexFields []DomainIndexField `pulumi:"indexFields"`
	// Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
	MultiAz *bool `pulumi:"multiAz"`
	// The name of the CloudSearch domain.
	Name *string `pulumi:"name"`
	// Domain scaling parameters. Documented below.
	ScalingParameters *DomainScalingParameters `pulumi:"scalingParameters"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// Domain endpoint options. Documented below.
	EndpointOptions pulumix.Input[*DomainEndpointOptionsArgs]
	// The index fields for documents added to the domain. Documented below.
	IndexFields pulumix.Input[[]*DomainIndexFieldArgs]
	// Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
	MultiAz pulumix.Input[*bool]
	// The name of the CloudSearch domain.
	Name pulumix.Input[*string]
	// Domain scaling parameters. Documented below.
	ScalingParameters pulumix.Input[*DomainScalingParametersArgs]
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainOutput struct{ *pulumi.OutputState }

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Domain)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

func (o DomainOutput) ToOutput(ctx context.Context) pulumix.Output[Domain] {
	return pulumix.Output[Domain]{
		OutputState: o.OutputState,
	}
}

// The domain's ARN.
func (o DomainOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The service endpoint for updating documents in a search domain.
func (o DomainOutput) DocumentServiceEndpoint() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.DocumentServiceEndpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An internally generated unique identifier for the domain.
func (o DomainOutput) DomainId() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.DomainId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Domain endpoint options. Documented below.
func (o DomainOutput) EndpointOptions() pulumix.GPtrOutput[DomainEndpointOptions, DomainEndpointOptionsOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainEndpointOptions, DomainEndpointOptionsOutput] {
		return v.EndpointOptions
	})
	unwrapped := pulumix.Flatten[*DomainEndpointOptions, pulumix.GPtrOutput[DomainEndpointOptions, DomainEndpointOptionsOutput]](value)
	return pulumix.GPtrOutput[DomainEndpointOptions, DomainEndpointOptionsOutput]{OutputState: unwrapped.OutputState}
}

// The index fields for documents added to the domain. Documented below.
func (o DomainOutput) IndexFields() pulumix.GArrayOutput[DomainIndexField, DomainIndexFieldOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GArrayOutput[DomainIndexField, DomainIndexFieldOutput] { return v.IndexFields })
	unwrapped := pulumix.Flatten[[]DomainIndexField, pulumix.GArrayOutput[DomainIndexField, DomainIndexFieldOutput]](value)
	return pulumix.GArrayOutput[DomainIndexField, DomainIndexFieldOutput]{OutputState: unwrapped.OutputState}
}

// Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
func (o DomainOutput) MultiAz() pulumix.Output[bool] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[bool] { return v.MultiAz })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// The name of the CloudSearch domain.
func (o DomainOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Domain scaling parameters. Documented below.
func (o DomainOutput) ScalingParameters() pulumix.GPtrOutput[DomainScalingParameters, DomainScalingParametersOutput] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.GPtrOutput[DomainScalingParameters, DomainScalingParametersOutput] {
		return v.ScalingParameters
	})
	unwrapped := pulumix.Flatten[*DomainScalingParameters, pulumix.GPtrOutput[DomainScalingParameters, DomainScalingParametersOutput]](value)
	return pulumix.GPtrOutput[DomainScalingParameters, DomainScalingParametersOutput]{OutputState: unwrapped.OutputState}
}

// The service endpoint for requesting search results from a search domain.
func (o DomainOutput) SearchServiceEndpoint() pulumix.Output[string] {
	value := pulumix.Apply[Domain](o, func(v Domain) pulumix.Output[string] { return v.SearchServiceEndpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(DomainOutput{})
}
