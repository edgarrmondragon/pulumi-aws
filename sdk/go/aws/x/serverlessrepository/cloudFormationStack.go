// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package serverlessrepository

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Deploys an Application CloudFormation Stack from the Serverless Application Repository.
type CloudFormationStack struct {
	pulumi.CustomResourceState

	// The ARN of the application from the Serverless Application Repository.
	ApplicationId pulumix.Output[string] `pulumi:"applicationId"`
	// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities pulumix.ArrayOutput[string] `pulumi:"capabilities"`
	// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of outputs from the stack.
	Outputs pulumix.MapOutput[string] `pulumi:"outputs"`
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters pulumix.MapOutput[string] `pulumi:"parameters"`
	// The version of the application to deploy. If not supplied, deploys the latest version.
	SemanticVersion pulumix.Output[string] `pulumi:"semanticVersion"`
	// A list of tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewCloudFormationStack registers a new resource with the given unique name, arguments, and options.
func NewCloudFormationStack(ctx *pulumi.Context,
	name string, args *CloudFormationStackArgs, opts ...pulumi.ResourceOption) (*CloudFormationStack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.Capabilities == nil {
		return nil, errors.New("invalid value for required argument 'Capabilities'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudFormationStack
	err := ctx.RegisterResource("aws:serverlessrepository/cloudFormationStack:CloudFormationStack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudFormationStack gets an existing CloudFormationStack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudFormationStack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudFormationStackState, opts ...pulumi.ResourceOption) (*CloudFormationStack, error) {
	var resource CloudFormationStack
	err := ctx.ReadResource("aws:serverlessrepository/cloudFormationStack:CloudFormationStack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudFormationStack resources.
type cloudFormationStackState struct {
	// The ARN of the application from the Serverless Application Repository.
	ApplicationId *string `pulumi:"applicationId"`
	// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities []string `pulumi:"capabilities"`
	// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
	Name *string `pulumi:"name"`
	// A map of outputs from the stack.
	Outputs map[string]string `pulumi:"outputs"`
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters map[string]string `pulumi:"parameters"`
	// The version of the application to deploy. If not supplied, deploys the latest version.
	SemanticVersion *string `pulumi:"semanticVersion"`
	// A list of tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type CloudFormationStackState struct {
	// The ARN of the application from the Serverless Application Repository.
	ApplicationId pulumix.Input[*string]
	// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities pulumix.Input[[]string]
	// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
	Name pulumix.Input[*string]
	// A map of outputs from the stack.
	Outputs pulumix.Input[map[string]string]
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters pulumix.Input[map[string]string]
	// The version of the application to deploy. If not supplied, deploys the latest version.
	SemanticVersion pulumix.Input[*string]
	// A list of tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (CloudFormationStackState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudFormationStackState)(nil)).Elem()
}

type cloudFormationStackArgs struct {
	// The ARN of the application from the Serverless Application Repository.
	ApplicationId string `pulumi:"applicationId"`
	// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities []string `pulumi:"capabilities"`
	// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
	Name *string `pulumi:"name"`
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters map[string]string `pulumi:"parameters"`
	// The version of the application to deploy. If not supplied, deploys the latest version.
	SemanticVersion *string `pulumi:"semanticVersion"`
	// A list of tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CloudFormationStack resource.
type CloudFormationStackArgs struct {
	// The ARN of the application from the Serverless Application Repository.
	ApplicationId pulumix.Input[string]
	// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
	Capabilities pulumix.Input[[]string]
	// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
	Name pulumix.Input[*string]
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters pulumix.Input[map[string]string]
	// The version of the application to deploy. If not supplied, deploys the latest version.
	SemanticVersion pulumix.Input[*string]
	// A list of tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (CloudFormationStackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudFormationStackArgs)(nil)).Elem()
}

type CloudFormationStackOutput struct{ *pulumi.OutputState }

func (CloudFormationStackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudFormationStack)(nil)).Elem()
}

func (o CloudFormationStackOutput) ToCloudFormationStackOutput() CloudFormationStackOutput {
	return o
}

func (o CloudFormationStackOutput) ToCloudFormationStackOutputWithContext(ctx context.Context) CloudFormationStackOutput {
	return o
}

func (o CloudFormationStackOutput) ToOutput(ctx context.Context) pulumix.Output[CloudFormationStack] {
	return pulumix.Output[CloudFormationStack]{
		OutputState: o.OutputState,
	}
}

// The ARN of the application from the Serverless Application Repository.
func (o CloudFormationStackOutput) ApplicationId() pulumix.Output[string] {
	value := pulumix.Apply[CloudFormationStack](o, func(v CloudFormationStack) pulumix.Output[string] { return v.ApplicationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
func (o CloudFormationStackOutput) Capabilities() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[CloudFormationStack](o, func(v CloudFormationStack) pulumix.ArrayOutput[string] { return v.Capabilities })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
func (o CloudFormationStackOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[CloudFormationStack](o, func(v CloudFormationStack) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of outputs from the stack.
func (o CloudFormationStackOutput) Outputs() pulumix.MapOutput[string] {
	value := pulumix.Apply[CloudFormationStack](o, func(v CloudFormationStack) pulumix.MapOutput[string] { return v.Outputs })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of Parameter structures that specify input parameters for the stack.
func (o CloudFormationStackOutput) Parameters() pulumix.MapOutput[string] {
	value := pulumix.Apply[CloudFormationStack](o, func(v CloudFormationStack) pulumix.MapOutput[string] { return v.Parameters })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The version of the application to deploy. If not supplied, deploys the latest version.
func (o CloudFormationStackOutput) SemanticVersion() pulumix.Output[string] {
	value := pulumix.Apply[CloudFormationStack](o, func(v CloudFormationStack) pulumix.Output[string] { return v.SemanticVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of tags to associate with this stack. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CloudFormationStackOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[CloudFormationStack](o, func(v CloudFormationStack) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CloudFormationStackOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[CloudFormationStack](o, func(v CloudFormationStack) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(CloudFormationStackOutput{})
}
