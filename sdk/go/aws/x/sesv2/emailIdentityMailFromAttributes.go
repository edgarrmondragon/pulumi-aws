// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sesv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS SESv2 (Simple Email V2) Email Identity Mail From Attributes.
type EmailIdentityMailFromAttributes struct {
	pulumi.CustomResourceState

	// The action to take if the required MX record isn't found when you send an email. Valid values: `USE_DEFAULT_VALUE`, `REJECT_MESSAGE`.
	BehaviorOnMxFailure pulumix.Output[*string] `pulumi:"behaviorOnMxFailure"`
	// The verified email identity.
	EmailIdentity pulumix.Output[string] `pulumi:"emailIdentity"`
	// The custom MAIL FROM domain that you want the verified identity to use. Required if `behaviorOnMxFailure` is `REJECT_MESSAGE`.
	MailFromDomain pulumix.Output[*string] `pulumi:"mailFromDomain"`
}

// NewEmailIdentityMailFromAttributes registers a new resource with the given unique name, arguments, and options.
func NewEmailIdentityMailFromAttributes(ctx *pulumi.Context,
	name string, args *EmailIdentityMailFromAttributesArgs, opts ...pulumi.ResourceOption) (*EmailIdentityMailFromAttributes, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EmailIdentity == nil {
		return nil, errors.New("invalid value for required argument 'EmailIdentity'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EmailIdentityMailFromAttributes
	err := ctx.RegisterResource("aws:sesv2/emailIdentityMailFromAttributes:EmailIdentityMailFromAttributes", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailIdentityMailFromAttributes gets an existing EmailIdentityMailFromAttributes resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailIdentityMailFromAttributes(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailIdentityMailFromAttributesState, opts ...pulumi.ResourceOption) (*EmailIdentityMailFromAttributes, error) {
	var resource EmailIdentityMailFromAttributes
	err := ctx.ReadResource("aws:sesv2/emailIdentityMailFromAttributes:EmailIdentityMailFromAttributes", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailIdentityMailFromAttributes resources.
type emailIdentityMailFromAttributesState struct {
	// The action to take if the required MX record isn't found when you send an email. Valid values: `USE_DEFAULT_VALUE`, `REJECT_MESSAGE`.
	BehaviorOnMxFailure *string `pulumi:"behaviorOnMxFailure"`
	// The verified email identity.
	EmailIdentity *string `pulumi:"emailIdentity"`
	// The custom MAIL FROM domain that you want the verified identity to use. Required if `behaviorOnMxFailure` is `REJECT_MESSAGE`.
	MailFromDomain *string `pulumi:"mailFromDomain"`
}

type EmailIdentityMailFromAttributesState struct {
	// The action to take if the required MX record isn't found when you send an email. Valid values: `USE_DEFAULT_VALUE`, `REJECT_MESSAGE`.
	BehaviorOnMxFailure pulumix.Input[*string]
	// The verified email identity.
	EmailIdentity pulumix.Input[*string]
	// The custom MAIL FROM domain that you want the verified identity to use. Required if `behaviorOnMxFailure` is `REJECT_MESSAGE`.
	MailFromDomain pulumix.Input[*string]
}

func (EmailIdentityMailFromAttributesState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailIdentityMailFromAttributesState)(nil)).Elem()
}

type emailIdentityMailFromAttributesArgs struct {
	// The action to take if the required MX record isn't found when you send an email. Valid values: `USE_DEFAULT_VALUE`, `REJECT_MESSAGE`.
	BehaviorOnMxFailure *string `pulumi:"behaviorOnMxFailure"`
	// The verified email identity.
	EmailIdentity string `pulumi:"emailIdentity"`
	// The custom MAIL FROM domain that you want the verified identity to use. Required if `behaviorOnMxFailure` is `REJECT_MESSAGE`.
	MailFromDomain *string `pulumi:"mailFromDomain"`
}

// The set of arguments for constructing a EmailIdentityMailFromAttributes resource.
type EmailIdentityMailFromAttributesArgs struct {
	// The action to take if the required MX record isn't found when you send an email. Valid values: `USE_DEFAULT_VALUE`, `REJECT_MESSAGE`.
	BehaviorOnMxFailure pulumix.Input[*string]
	// The verified email identity.
	EmailIdentity pulumix.Input[string]
	// The custom MAIL FROM domain that you want the verified identity to use. Required if `behaviorOnMxFailure` is `REJECT_MESSAGE`.
	MailFromDomain pulumix.Input[*string]
}

func (EmailIdentityMailFromAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailIdentityMailFromAttributesArgs)(nil)).Elem()
}

type EmailIdentityMailFromAttributesOutput struct{ *pulumi.OutputState }

func (EmailIdentityMailFromAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailIdentityMailFromAttributes)(nil)).Elem()
}

func (o EmailIdentityMailFromAttributesOutput) ToEmailIdentityMailFromAttributesOutput() EmailIdentityMailFromAttributesOutput {
	return o
}

func (o EmailIdentityMailFromAttributesOutput) ToEmailIdentityMailFromAttributesOutputWithContext(ctx context.Context) EmailIdentityMailFromAttributesOutput {
	return o
}

func (o EmailIdentityMailFromAttributesOutput) ToOutput(ctx context.Context) pulumix.Output[EmailIdentityMailFromAttributes] {
	return pulumix.Output[EmailIdentityMailFromAttributes]{
		OutputState: o.OutputState,
	}
}

// The action to take if the required MX record isn't found when you send an email. Valid values: `USE_DEFAULT_VALUE`, `REJECT_MESSAGE`.
func (o EmailIdentityMailFromAttributesOutput) BehaviorOnMxFailure() pulumix.Output[*string] {
	value := pulumix.Apply[EmailIdentityMailFromAttributes](o, func(v EmailIdentityMailFromAttributes) pulumix.Output[*string] { return v.BehaviorOnMxFailure })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The verified email identity.
func (o EmailIdentityMailFromAttributesOutput) EmailIdentity() pulumix.Output[string] {
	value := pulumix.Apply[EmailIdentityMailFromAttributes](o, func(v EmailIdentityMailFromAttributes) pulumix.Output[string] { return v.EmailIdentity })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The custom MAIL FROM domain that you want the verified identity to use. Required if `behaviorOnMxFailure` is `REJECT_MESSAGE`.
func (o EmailIdentityMailFromAttributesOutput) MailFromDomain() pulumix.Output[*string] {
	value := pulumix.Apply[EmailIdentityMailFromAttributes](o, func(v EmailIdentityMailFromAttributes) pulumix.Output[*string] { return v.MailFromDomain })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(EmailIdentityMailFromAttributesOutput{})
}
