// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource for controlling versioning on an S3 bucket.
// Deleting this resource will either suspend versioning on the associated S3 bucket or
// simply remove the resource from state if the associated S3 bucket is unversioned.
//
// For more information, see [How S3 versioning works](https://docs.aws.amazon.com/AmazonS3/latest/userguide/manage-versioning-examples.html).
//
// > **NOTE:** If you are enabling versioning on the bucket for the first time, AWS recommends that you wait for 15 minutes after enabling versioning before issuing write operations (PUT or DELETE) on objects in the bucket.
type BucketVersioningV2 struct {
	pulumi.CustomResourceState

	// Name of the S3 bucket.
	Bucket pulumix.Output[string] `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Output[*string] `pulumi:"expectedBucketOwner"`
	// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
	Mfa pulumix.Output[*string] `pulumi:"mfa"`
	// Configuration block for the versioning parameters. See below.
	VersioningConfiguration pulumix.GPtrOutput[BucketVersioningV2VersioningConfiguration, BucketVersioningV2VersioningConfigurationOutput] `pulumi:"versioningConfiguration"`
}

// NewBucketVersioningV2 registers a new resource with the given unique name, arguments, and options.
func NewBucketVersioningV2(ctx *pulumi.Context,
	name string, args *BucketVersioningV2Args, opts ...pulumi.ResourceOption) (*BucketVersioningV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.VersioningConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'VersioningConfiguration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketVersioningV2
	err := ctx.RegisterResource("aws:s3/bucketVersioningV2:BucketVersioningV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketVersioningV2 gets an existing BucketVersioningV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketVersioningV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketVersioningV2State, opts ...pulumi.ResourceOption) (*BucketVersioningV2, error) {
	var resource BucketVersioningV2
	err := ctx.ReadResource("aws:s3/bucketVersioningV2:BucketVersioningV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketVersioningV2 resources.
type bucketVersioningV2State struct {
	// Name of the S3 bucket.
	Bucket *string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
	Mfa *string `pulumi:"mfa"`
	// Configuration block for the versioning parameters. See below.
	VersioningConfiguration *BucketVersioningV2VersioningConfiguration `pulumi:"versioningConfiguration"`
}

type BucketVersioningV2State struct {
	// Name of the S3 bucket.
	Bucket pulumix.Input[*string]
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Input[*string]
	// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
	Mfa pulumix.Input[*string]
	// Configuration block for the versioning parameters. See below.
	VersioningConfiguration pulumix.Input[*BucketVersioningV2VersioningConfigurationArgs]
}

func (BucketVersioningV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketVersioningV2State)(nil)).Elem()
}

type bucketVersioningV2Args struct {
	// Name of the S3 bucket.
	Bucket string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
	Mfa *string `pulumi:"mfa"`
	// Configuration block for the versioning parameters. See below.
	VersioningConfiguration BucketVersioningV2VersioningConfiguration `pulumi:"versioningConfiguration"`
}

// The set of arguments for constructing a BucketVersioningV2 resource.
type BucketVersioningV2Args struct {
	// Name of the S3 bucket.
	Bucket pulumix.Input[string]
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Input[*string]
	// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
	Mfa pulumix.Input[*string]
	// Configuration block for the versioning parameters. See below.
	VersioningConfiguration pulumix.Input[*BucketVersioningV2VersioningConfigurationArgs]
}

func (BucketVersioningV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketVersioningV2Args)(nil)).Elem()
}

type BucketVersioningV2Output struct{ *pulumi.OutputState }

func (BucketVersioningV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioningV2)(nil)).Elem()
}

func (o BucketVersioningV2Output) ToBucketVersioningV2Output() BucketVersioningV2Output {
	return o
}

func (o BucketVersioningV2Output) ToBucketVersioningV2OutputWithContext(ctx context.Context) BucketVersioningV2Output {
	return o
}

func (o BucketVersioningV2Output) ToOutput(ctx context.Context) pulumix.Output[BucketVersioningV2] {
	return pulumix.Output[BucketVersioningV2]{
		OutputState: o.OutputState,
	}
}

// Name of the S3 bucket.
func (o BucketVersioningV2Output) Bucket() pulumix.Output[string] {
	value := pulumix.Apply[BucketVersioningV2](o, func(v BucketVersioningV2) pulumix.Output[string] { return v.Bucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Account ID of the expected bucket owner.
func (o BucketVersioningV2Output) ExpectedBucketOwner() pulumix.Output[*string] {
	value := pulumix.Apply[BucketVersioningV2](o, func(v BucketVersioningV2) pulumix.Output[*string] { return v.ExpectedBucketOwner })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
func (o BucketVersioningV2Output) Mfa() pulumix.Output[*string] {
	value := pulumix.Apply[BucketVersioningV2](o, func(v BucketVersioningV2) pulumix.Output[*string] { return v.Mfa })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block for the versioning parameters. See below.
func (o BucketVersioningV2Output) VersioningConfiguration() pulumix.GPtrOutput[BucketVersioningV2VersioningConfiguration, BucketVersioningV2VersioningConfigurationOutput] {
	value := pulumix.Apply[BucketVersioningV2](o, func(v BucketVersioningV2) pulumix.GPtrOutput[BucketVersioningV2VersioningConfiguration, BucketVersioningV2VersioningConfigurationOutput] {
		return v.VersioningConfiguration
	})
	unwrapped := pulumix.Flatten[*BucketVersioningV2VersioningConfiguration, pulumix.GPtrOutput[BucketVersioningV2VersioningConfiguration, BucketVersioningV2VersioningConfigurationOutput]](value)
	return pulumix.GPtrOutput[BucketVersioningV2VersioningConfiguration, BucketVersioningV2VersioningConfigurationOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(BucketVersioningV2Output{})
}
