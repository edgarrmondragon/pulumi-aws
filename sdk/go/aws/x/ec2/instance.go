// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an EC2 instance resource. This allows instances to be created, updated, and deleted.
type Instance struct {
	pulumi.CustomResourceState

	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami pulumix.Output[string] `pulumi:"ami"`
	// ARN of the instance.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress pulumix.Output[bool] `pulumi:"associatePublicIpAddress"`
	// AZ to start the instance in.
	AvailabilityZone pulumix.Output[string] `pulumi:"availabilityZone"`
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification pulumix.GPtrOutput[InstanceCapacityReservationSpecification, InstanceCapacityReservationSpecificationOutput] `pulumi:"capacityReservationSpecification"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount pulumix.Output[int] `pulumi:"cpuCoreCount"`
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions pulumix.GPtrOutput[InstanceCpuOptions, InstanceCpuOptionsOutput] `pulumi:"cpuOptions"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore pulumix.Output[int] `pulumi:"cpuThreadsPerCore"`
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification pulumix.GPtrOutput[InstanceCreditSpecification, InstanceCreditSpecificationOutput] `pulumi:"creditSpecification"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumix.Output[bool] `pulumi:"disableApiStop"`
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination pulumix.Output[bool] `pulumi:"disableApiTermination"`
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices pulumix.GArrayOutput[InstanceEbsBlockDevice, InstanceEbsBlockDeviceOutput] `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized pulumix.Output[bool] `pulumi:"ebsOptimized"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions pulumix.GPtrOutput[InstanceEnclaveOptions, InstanceEnclaveOptionsOutput] `pulumi:"enclaveOptions"`
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices pulumix.GArrayOutput[InstanceEphemeralBlockDevice, InstanceEphemeralBlockDeviceOutput] `pulumi:"ephemeralBlockDevices"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumix.Output[*bool] `pulumi:"getPasswordData"`
	// If true, the launched EC2 instance will support hibernation.
	Hibernation pulumix.Output[*bool] `pulumi:"hibernation"`
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId pulumix.Output[string] `pulumi:"hostId"`
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn pulumix.Output[string] `pulumi:"hostResourceGroupArn"`
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile pulumix.Output[string] `pulumi:"iamInstanceProfile"`
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior pulumix.Output[string] `pulumi:"instanceInitiatedShutdownBehavior"`
	// Indicates whether this is a Spot Instance or a Scheduled Instance.
	InstanceLifecycle pulumix.Output[string] `pulumi:"instanceLifecycle"`
	// Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
	InstanceMarketOptions pulumix.GPtrOutput[InstanceInstanceMarketOptions, InstanceInstanceMarketOptionsOutput] `pulumi:"instanceMarketOptions"`
	// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
	InstanceState pulumix.Output[string] `pulumi:"instanceState"`
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType pulumix.Output[string] `pulumi:"instanceType"`
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount pulumix.Output[int] `pulumi:"ipv6AddressCount"`
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses pulumix.ArrayOutput[string] `pulumi:"ipv6Addresses"`
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName pulumix.Output[string] `pulumi:"keyName"`
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate pulumix.GPtrOutput[InstanceLaunchTemplate, InstanceLaunchTemplateOutput] `pulumi:"launchTemplate"`
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions pulumix.GPtrOutput[InstanceMaintenanceOptions, InstanceMaintenanceOptionsOutput] `pulumi:"maintenanceOptions"`
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions pulumix.GPtrOutput[InstanceMetadataOptions, InstanceMetadataOptionsOutput] `pulumi:"metadataOptions"`
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring pulumix.Output[bool] `pulumi:"monitoring"`
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces pulumix.GArrayOutput[InstanceNetworkInterface, InstanceNetworkInterfaceOutput] `pulumi:"networkInterfaces"`
	// ARN of the Outpost the instance is assigned to.
	OutpostArn pulumix.Output[string] `pulumi:"outpostArn"`
	// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	PasswordData pulumix.Output[string] `pulumi:"passwordData"`
	// Placement Group to start the instance in.
	PlacementGroup pulumix.Output[string] `pulumi:"placementGroup"`
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber pulumix.Output[int] `pulumi:"placementPartitionNumber"`
	// ID of the instance's primary network interface.
	PrimaryNetworkInterfaceId pulumix.Output[string] `pulumi:"primaryNetworkInterfaceId"`
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns pulumix.Output[string] `pulumi:"privateDns"`
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions pulumix.GPtrOutput[InstancePrivateDnsNameOptions, InstancePrivateDnsNameOptionsOutput] `pulumi:"privateDnsNameOptions"`
	// Private IP address to associate with the instance in a VPC.
	PrivateIp pulumix.Output[string] `pulumi:"privateIp"`
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns pulumix.Output[string] `pulumi:"publicDns"`
	// Public IP address assigned to the instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp` as this field will change after the EIP is attached.
	PublicIp pulumix.Output[string] `pulumi:"publicIp"`
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice pulumix.GPtrOutput[InstanceRootBlockDevice, InstanceRootBlockDeviceOutput] `pulumi:"rootBlockDevice"`
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps pulumix.ArrayOutput[string] `pulumi:"secondaryPrivateIps"`
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups pulumix.ArrayOutput[string] `pulumi:"securityGroups"`
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck pulumix.Output[*bool] `pulumi:"sourceDestCheck"`
	// If the request is a Spot Instance request, the ID of the request.
	SpotInstanceRequestId pulumix.Output[string] `pulumi:"spotInstanceRequestId"`
	// VPC Subnet ID to launch in.
	SubnetId pulumix.Output[string] `pulumi:"subnetId"`
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy pulumix.Output[string] `pulumi:"tenancy"`
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData pulumix.Output[string] `pulumi:"userData"`
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 pulumix.Output[string] `pulumi:"userDataBase64"`
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange pulumix.Output[*bool] `pulumi:"userDataReplaceOnChange"`
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags pulumix.MapOutput[string] `pulumi:"volumeTags"`
	// List of security group IDs to associate with.
	VpcSecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"vpcSecurityGroupIds"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		args = &InstanceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("aws:ec2/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws:ec2/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami *string `pulumi:"ami"`
	// ARN of the instance.
	Arn *string `pulumi:"arn"`
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress *bool `pulumi:"associatePublicIpAddress"`
	// AZ to start the instance in.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification *InstanceCapacityReservationSpecification `pulumi:"capacityReservationSpecification"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount *int `pulumi:"cpuCoreCount"`
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions *InstanceCpuOptions `pulumi:"cpuOptions"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore *int `pulumi:"cpuThreadsPerCore"`
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification *InstanceCreditSpecification `pulumi:"creditSpecification"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop *bool `pulumi:"disableApiStop"`
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination *bool `pulumi:"disableApiTermination"`
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices []InstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions *InstanceEnclaveOptions `pulumi:"enclaveOptions"`
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices []InstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData *bool `pulumi:"getPasswordData"`
	// If true, the launched EC2 instance will support hibernation.
	Hibernation *bool `pulumi:"hibernation"`
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId *string `pulumi:"hostId"`
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn *string `pulumi:"hostResourceGroupArn"`
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile interface{} `pulumi:"iamInstanceProfile"`
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior *string `pulumi:"instanceInitiatedShutdownBehavior"`
	// Indicates whether this is a Spot Instance or a Scheduled Instance.
	InstanceLifecycle *string `pulumi:"instanceLifecycle"`
	// Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
	InstanceMarketOptions *InstanceInstanceMarketOptions `pulumi:"instanceMarketOptions"`
	// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
	InstanceState *string `pulumi:"instanceState"`
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType *string `pulumi:"instanceType"`
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName *string `pulumi:"keyName"`
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate *InstanceLaunchTemplate `pulumi:"launchTemplate"`
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions *InstanceMaintenanceOptions `pulumi:"maintenanceOptions"`
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions *InstanceMetadataOptions `pulumi:"metadataOptions"`
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring *bool `pulumi:"monitoring"`
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces []InstanceNetworkInterface `pulumi:"networkInterfaces"`
	// ARN of the Outpost the instance is assigned to.
	OutpostArn *string `pulumi:"outpostArn"`
	// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	PasswordData *string `pulumi:"passwordData"`
	// Placement Group to start the instance in.
	PlacementGroup *string `pulumi:"placementGroup"`
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber *int `pulumi:"placementPartitionNumber"`
	// ID of the instance's primary network interface.
	PrimaryNetworkInterfaceId *string `pulumi:"primaryNetworkInterfaceId"`
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns *string `pulumi:"privateDns"`
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions *InstancePrivateDnsNameOptions `pulumi:"privateDnsNameOptions"`
	// Private IP address to associate with the instance in a VPC.
	PrivateIp *string `pulumi:"privateIp"`
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns *string `pulumi:"publicDns"`
	// Public IP address assigned to the instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp` as this field will change after the EIP is attached.
	PublicIp *string `pulumi:"publicIp"`
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice *InstanceRootBlockDevice `pulumi:"rootBlockDevice"`
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps []string `pulumi:"secondaryPrivateIps"`
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck *bool `pulumi:"sourceDestCheck"`
	// If the request is a Spot Instance request, the ID of the request.
	SpotInstanceRequestId *string `pulumi:"spotInstanceRequestId"`
	// VPC Subnet ID to launch in.
	SubnetId *string `pulumi:"subnetId"`
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy *string `pulumi:"tenancy"`
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData *string `pulumi:"userData"`
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 *string `pulumi:"userDataBase64"`
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange *bool `pulumi:"userDataReplaceOnChange"`
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags map[string]string `pulumi:"volumeTags"`
	// List of security group IDs to associate with.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

type InstanceState struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami pulumix.Input[*string]
	// ARN of the instance.
	Arn pulumix.Input[*string]
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress pulumix.Input[*bool]
	// AZ to start the instance in.
	AvailabilityZone pulumix.Input[*string]
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification pulumix.Input[*InstanceCapacityReservationSpecificationArgs]
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount pulumix.Input[*int]
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions pulumix.Input[*InstanceCpuOptionsArgs]
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore pulumix.Input[*int]
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification pulumix.Input[*InstanceCreditSpecificationArgs]
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumix.Input[*bool]
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination pulumix.Input[*bool]
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices pulumix.Input[[]*InstanceEbsBlockDeviceArgs]
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized pulumix.Input[*bool]
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions pulumix.Input[*InstanceEnclaveOptionsArgs]
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices pulumix.Input[[]*InstanceEphemeralBlockDeviceArgs]
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumix.Input[*bool]
	// If true, the launched EC2 instance will support hibernation.
	Hibernation pulumix.Input[*bool]
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId pulumix.Input[*string]
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn pulumix.Input[*string]
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile pulumix.Input[*any]
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior pulumix.Input[*string]
	// Indicates whether this is a Spot Instance or a Scheduled Instance.
	InstanceLifecycle pulumix.Input[*string]
	// Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
	InstanceMarketOptions pulumix.Input[*InstanceInstanceMarketOptionsArgs]
	// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
	InstanceState pulumix.Input[*string]
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType pulumix.Input[*string]
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount pulumix.Input[*int]
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses pulumix.Input[[]string]
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName pulumix.Input[*string]
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate pulumix.Input[*InstanceLaunchTemplateArgs]
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions pulumix.Input[*InstanceMaintenanceOptionsArgs]
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions pulumix.Input[*InstanceMetadataOptionsArgs]
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring pulumix.Input[*bool]
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces pulumix.Input[[]*InstanceNetworkInterfaceArgs]
	// ARN of the Outpost the instance is assigned to.
	OutpostArn pulumix.Input[*string]
	// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	PasswordData pulumix.Input[*string]
	// Placement Group to start the instance in.
	PlacementGroup pulumix.Input[*string]
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber pulumix.Input[*int]
	// ID of the instance's primary network interface.
	PrimaryNetworkInterfaceId pulumix.Input[*string]
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns pulumix.Input[*string]
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions pulumix.Input[*InstancePrivateDnsNameOptionsArgs]
	// Private IP address to associate with the instance in a VPC.
	PrivateIp pulumix.Input[*string]
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns pulumix.Input[*string]
	// Public IP address assigned to the instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp` as this field will change after the EIP is attached.
	PublicIp pulumix.Input[*string]
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice pulumix.Input[*InstanceRootBlockDeviceArgs]
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps pulumix.Input[[]string]
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups pulumix.Input[[]string]
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck pulumix.Input[*bool]
	// If the request is a Spot Instance request, the ID of the request.
	SpotInstanceRequestId pulumix.Input[*string]
	// VPC Subnet ID to launch in.
	SubnetId pulumix.Input[*string]
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy pulumix.Input[*string]
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData pulumix.Input[*string]
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 pulumix.Input[*string]
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange pulumix.Input[*bool]
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags pulumix.Input[map[string]string]
	// List of security group IDs to associate with.
	VpcSecurityGroupIds pulumix.Input[[]string]
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami *string `pulumi:"ami"`
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress *bool `pulumi:"associatePublicIpAddress"`
	// AZ to start the instance in.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification *InstanceCapacityReservationSpecification `pulumi:"capacityReservationSpecification"`
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount *int `pulumi:"cpuCoreCount"`
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions *InstanceCpuOptions `pulumi:"cpuOptions"`
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore *int `pulumi:"cpuThreadsPerCore"`
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification *InstanceCreditSpecification `pulumi:"creditSpecification"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop *bool `pulumi:"disableApiStop"`
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination *bool `pulumi:"disableApiTermination"`
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices []InstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions *InstanceEnclaveOptions `pulumi:"enclaveOptions"`
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices []InstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData *bool `pulumi:"getPasswordData"`
	// If true, the launched EC2 instance will support hibernation.
	Hibernation *bool `pulumi:"hibernation"`
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId *string `pulumi:"hostId"`
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn *string `pulumi:"hostResourceGroupArn"`
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile interface{} `pulumi:"iamInstanceProfile"`
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior *string `pulumi:"instanceInitiatedShutdownBehavior"`
	// Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
	InstanceMarketOptions *InstanceInstanceMarketOptions `pulumi:"instanceMarketOptions"`
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType *string `pulumi:"instanceType"`
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName *string `pulumi:"keyName"`
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate *InstanceLaunchTemplate `pulumi:"launchTemplate"`
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions *InstanceMaintenanceOptions `pulumi:"maintenanceOptions"`
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions *InstanceMetadataOptions `pulumi:"metadataOptions"`
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring *bool `pulumi:"monitoring"`
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces []InstanceNetworkInterface `pulumi:"networkInterfaces"`
	// Placement Group to start the instance in.
	PlacementGroup *string `pulumi:"placementGroup"`
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber *int `pulumi:"placementPartitionNumber"`
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions *InstancePrivateDnsNameOptions `pulumi:"privateDnsNameOptions"`
	// Private IP address to associate with the instance in a VPC.
	PrivateIp *string `pulumi:"privateIp"`
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice *InstanceRootBlockDevice `pulumi:"rootBlockDevice"`
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps []string `pulumi:"secondaryPrivateIps"`
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck *bool `pulumi:"sourceDestCheck"`
	// VPC Subnet ID to launch in.
	SubnetId *string `pulumi:"subnetId"`
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy *string `pulumi:"tenancy"`
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData *string `pulumi:"userData"`
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 *string `pulumi:"userDataBase64"`
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange *bool `pulumi:"userDataReplaceOnChange"`
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags map[string]string `pulumi:"volumeTags"`
	// List of security group IDs to associate with.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
	Ami pulumix.Input[*string]
	// Whether to associate a public IP address with an instance in a VPC.
	AssociatePublicIpAddress pulumix.Input[*bool]
	// AZ to start the instance in.
	AvailabilityZone pulumix.Input[*string]
	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	//
	// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
	CapacityReservationSpecification pulumix.Input[*InstanceCapacityReservationSpecificationArgs]
	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuCoreCount pulumix.Input[*int]
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions pulumix.Input[*InstanceCpuOptionsArgs]
	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
	//
	// Deprecated: use 'cpu_options' argument instead
	CpuThreadsPerCore pulumix.Input[*int]
	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	CreditSpecification pulumix.Input[*InstanceCreditSpecificationArgs]
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumix.Input[*bool]
	// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
	DisableApiTermination pulumix.Input[*bool]
	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	EbsBlockDevices pulumix.Input[[]*InstanceEbsBlockDeviceArgs]
	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
	EbsOptimized pulumix.Input[*bool]
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions pulumix.Input[*InstanceEnclaveOptionsArgs]
	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	EphemeralBlockDevices pulumix.Input[[]*InstanceEphemeralBlockDeviceArgs]
	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
	GetPasswordData pulumix.Input[*bool]
	// If true, the launched EC2 instance will support hibernation.
	Hibernation pulumix.Input[*bool]
	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	HostId pulumix.Input[*string]
	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
	HostResourceGroupArn pulumix.Input[*string]
	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
	IamInstanceProfile pulumix.Input[*any]
	// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
	InstanceInitiatedShutdownBehavior pulumix.Input[*string]
	// Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
	InstanceMarketOptions pulumix.Input[*InstanceInstanceMarketOptionsArgs]
	// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	InstanceType pulumix.Input[*string]
	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	Ipv6AddressCount pulumix.Input[*int]
	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	Ipv6Addresses pulumix.Input[[]string]
	// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
	KeyName pulumix.Input[*string]
	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	LaunchTemplate pulumix.Input[*InstanceLaunchTemplateArgs]
	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions pulumix.Input[*InstanceMaintenanceOptionsArgs]
	// Customize the metadata options of the instance. See Metadata Options below for more details.
	MetadataOptions pulumix.Input[*InstanceMetadataOptionsArgs]
	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	Monitoring pulumix.Input[*bool]
	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	NetworkInterfaces pulumix.Input[[]*InstanceNetworkInterfaceArgs]
	// Placement Group to start the instance in.
	PlacementGroup pulumix.Input[*string]
	// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
	PlacementPartitionNumber pulumix.Input[*int]
	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions pulumix.Input[*InstancePrivateDnsNameOptionsArgs]
	// Private IP address to associate with the instance in a VPC.
	PrivateIp pulumix.Input[*string]
	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	RootBlockDevice pulumix.Input[*InstanceRootBlockDeviceArgs]
	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
	SecondaryPrivateIps pulumix.Input[[]string]
	// List of security group names to associate with.
	//
	// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
	//
	// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
	SecurityGroups pulumix.Input[[]string]
	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	SourceDestCheck pulumix.Input[*bool]
	// VPC Subnet ID to launch in.
	SubnetId pulumix.Input[*string]
	// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
	Tenancy pulumix.Input[*string]
	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserData pulumix.Input[*string]
	// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
	UserDataBase64 pulumix.Input[*string]
	// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
	UserDataReplaceOnChange pulumix.Input[*bool]
	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	//
	// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
	VolumeTags pulumix.Input[map[string]string]
	// List of security group IDs to associate with.
	VpcSecurityGroupIds pulumix.Input[[]string]
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func (o InstanceOutput) ToOutput(ctx context.Context) pulumix.Output[Instance] {
	return pulumix.Output[Instance]{
		OutputState: o.OutputState,
	}
}

// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
func (o InstanceOutput) Ami() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.Ami })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the instance.
func (o InstanceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to associate a public IP address with an instance in a VPC.
func (o InstanceOutput) AssociatePublicIpAddress() pulumix.Output[bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[bool] { return v.AssociatePublicIpAddress })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// AZ to start the instance in.
func (o InstanceOutput) AvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.AvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
//
// > **NOTE:** Changing `cpuCoreCount` and/or `cpuThreadsPerCore` will cause the resource to be destroyed and re-created.
func (o InstanceOutput) CapacityReservationSpecification() pulumix.GPtrOutput[InstanceCapacityReservationSpecification, InstanceCapacityReservationSpecificationOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceCapacityReservationSpecification, InstanceCapacityReservationSpecificationOutput] {
		return v.CapacityReservationSpecification
	})
	unwrapped := pulumix.Flatten[*InstanceCapacityReservationSpecification, pulumix.GPtrOutput[InstanceCapacityReservationSpecification, InstanceCapacityReservationSpecificationOutput]](value)
	return pulumix.GPtrOutput[InstanceCapacityReservationSpecification, InstanceCapacityReservationSpecificationOutput]{OutputState: unwrapped.OutputState}
}

// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
//
// Deprecated: use 'cpu_options' argument instead
func (o InstanceOutput) CpuCoreCount() pulumix.Output[int] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[int] { return v.CpuCoreCount })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The CPU options for the instance. See CPU Options below for more details.
func (o InstanceOutput) CpuOptions() pulumix.GPtrOutput[InstanceCpuOptions, InstanceCpuOptionsOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceCpuOptions, InstanceCpuOptionsOutput] { return v.CpuOptions })
	unwrapped := pulumix.Flatten[*InstanceCpuOptions, pulumix.GPtrOutput[InstanceCpuOptions, InstanceCpuOptionsOutput]](value)
	return pulumix.GPtrOutput[InstanceCpuOptions, InstanceCpuOptionsOutput]{OutputState: unwrapped.OutputState}
}

// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
//
// Deprecated: use 'cpu_options' argument instead
func (o InstanceOutput) CpuThreadsPerCore() pulumix.Output[int] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[int] { return v.CpuThreadsPerCore })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
func (o InstanceOutput) CreditSpecification() pulumix.GPtrOutput[InstanceCreditSpecification, InstanceCreditSpecificationOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceCreditSpecification, InstanceCreditSpecificationOutput] {
		return v.CreditSpecification
	})
	unwrapped := pulumix.Flatten[*InstanceCreditSpecification, pulumix.GPtrOutput[InstanceCreditSpecification, InstanceCreditSpecificationOutput]](value)
	return pulumix.GPtrOutput[InstanceCreditSpecification, InstanceCreditSpecificationOutput]{OutputState: unwrapped.OutputState}
}

// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
func (o InstanceOutput) DisableApiStop() pulumix.Output[bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[bool] { return v.DisableApiStop })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
func (o InstanceOutput) DisableApiTermination() pulumix.Output[bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[bool] { return v.DisableApiTermination })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
func (o InstanceOutput) EbsBlockDevices() pulumix.GArrayOutput[InstanceEbsBlockDevice, InstanceEbsBlockDeviceOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GArrayOutput[InstanceEbsBlockDevice, InstanceEbsBlockDeviceOutput] {
		return v.EbsBlockDevices
	})
	unwrapped := pulumix.Flatten[[]InstanceEbsBlockDevice, pulumix.GArrayOutput[InstanceEbsBlockDevice, InstanceEbsBlockDeviceOutput]](value)
	return pulumix.GArrayOutput[InstanceEbsBlockDevice, InstanceEbsBlockDeviceOutput]{OutputState: unwrapped.OutputState}
}

// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
func (o InstanceOutput) EbsOptimized() pulumix.Output[bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[bool] { return v.EbsOptimized })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
func (o InstanceOutput) EnclaveOptions() pulumix.GPtrOutput[InstanceEnclaveOptions, InstanceEnclaveOptionsOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceEnclaveOptions, InstanceEnclaveOptionsOutput] {
		return v.EnclaveOptions
	})
	unwrapped := pulumix.Flatten[*InstanceEnclaveOptions, pulumix.GPtrOutput[InstanceEnclaveOptions, InstanceEnclaveOptionsOutput]](value)
	return pulumix.GPtrOutput[InstanceEnclaveOptions, InstanceEnclaveOptionsOutput]{OutputState: unwrapped.OutputState}
}

// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
func (o InstanceOutput) EphemeralBlockDevices() pulumix.GArrayOutput[InstanceEphemeralBlockDevice, InstanceEphemeralBlockDeviceOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GArrayOutput[InstanceEphemeralBlockDevice, InstanceEphemeralBlockDeviceOutput] {
		return v.EphemeralBlockDevices
	})
	unwrapped := pulumix.Flatten[[]InstanceEphemeralBlockDevice, pulumix.GArrayOutput[InstanceEphemeralBlockDevice, InstanceEphemeralBlockDeviceOutput]](value)
	return pulumix.GArrayOutput[InstanceEphemeralBlockDevice, InstanceEphemeralBlockDeviceOutput]{OutputState: unwrapped.OutputState}
}

// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
func (o InstanceOutput) GetPasswordData() pulumix.Output[*bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*bool] { return v.GetPasswordData })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// If true, the launched EC2 instance will support hibernation.
func (o InstanceOutput) Hibernation() pulumix.Output[*bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*bool] { return v.Hibernation })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
func (o InstanceOutput) HostId() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.HostId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
func (o InstanceOutput) HostResourceGroupArn() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.HostResourceGroupArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
func (o InstanceOutput) IamInstanceProfile() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.IamInstanceProfile })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
func (o InstanceOutput) InstanceInitiatedShutdownBehavior() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.InstanceInitiatedShutdownBehavior })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether this is a Spot Instance or a Scheduled Instance.
func (o InstanceOutput) InstanceLifecycle() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.InstanceLifecycle })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
func (o InstanceOutput) InstanceMarketOptions() pulumix.GPtrOutput[InstanceInstanceMarketOptions, InstanceInstanceMarketOptionsOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceInstanceMarketOptions, InstanceInstanceMarketOptionsOutput] {
		return v.InstanceMarketOptions
	})
	unwrapped := pulumix.Flatten[*InstanceInstanceMarketOptions, pulumix.GPtrOutput[InstanceInstanceMarketOptions, InstanceInstanceMarketOptionsOutput]](value)
	return pulumix.GPtrOutput[InstanceInstanceMarketOptions, InstanceInstanceMarketOptionsOutput]{OutputState: unwrapped.OutputState}
}

// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
func (o InstanceOutput) InstanceState() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.InstanceState })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
func (o InstanceOutput) InstanceType() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.InstanceType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
func (o InstanceOutput) Ipv6AddressCount() pulumix.Output[int] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[int] { return v.Ipv6AddressCount })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
func (o InstanceOutput) Ipv6Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.ArrayOutput[string] { return v.Ipv6Addresses })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Key name of the Key Pair to use for the instance; which can be managed using the `ec2.KeyPair` resource.
func (o InstanceOutput) KeyName() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.KeyName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
func (o InstanceOutput) LaunchTemplate() pulumix.GPtrOutput[InstanceLaunchTemplate, InstanceLaunchTemplateOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceLaunchTemplate, InstanceLaunchTemplateOutput] {
		return v.LaunchTemplate
	})
	unwrapped := pulumix.Flatten[*InstanceLaunchTemplate, pulumix.GPtrOutput[InstanceLaunchTemplate, InstanceLaunchTemplateOutput]](value)
	return pulumix.GPtrOutput[InstanceLaunchTemplate, InstanceLaunchTemplateOutput]{OutputState: unwrapped.OutputState}
}

// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
func (o InstanceOutput) MaintenanceOptions() pulumix.GPtrOutput[InstanceMaintenanceOptions, InstanceMaintenanceOptionsOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceMaintenanceOptions, InstanceMaintenanceOptionsOutput] {
		return v.MaintenanceOptions
	})
	unwrapped := pulumix.Flatten[*InstanceMaintenanceOptions, pulumix.GPtrOutput[InstanceMaintenanceOptions, InstanceMaintenanceOptionsOutput]](value)
	return pulumix.GPtrOutput[InstanceMaintenanceOptions, InstanceMaintenanceOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Customize the metadata options of the instance. See Metadata Options below for more details.
func (o InstanceOutput) MetadataOptions() pulumix.GPtrOutput[InstanceMetadataOptions, InstanceMetadataOptionsOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceMetadataOptions, InstanceMetadataOptionsOutput] {
		return v.MetadataOptions
	})
	unwrapped := pulumix.Flatten[*InstanceMetadataOptions, pulumix.GPtrOutput[InstanceMetadataOptions, InstanceMetadataOptionsOutput]](value)
	return pulumix.GPtrOutput[InstanceMetadataOptions, InstanceMetadataOptionsOutput]{OutputState: unwrapped.OutputState}
}

// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
func (o InstanceOutput) Monitoring() pulumix.Output[bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[bool] { return v.Monitoring })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
func (o InstanceOutput) NetworkInterfaces() pulumix.GArrayOutput[InstanceNetworkInterface, InstanceNetworkInterfaceOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GArrayOutput[InstanceNetworkInterface, InstanceNetworkInterfaceOutput] {
		return v.NetworkInterfaces
	})
	unwrapped := pulumix.Flatten[[]InstanceNetworkInterface, pulumix.GArrayOutput[InstanceNetworkInterface, InstanceNetworkInterfaceOutput]](value)
	return pulumix.GArrayOutput[InstanceNetworkInterface, InstanceNetworkInterfaceOutput]{OutputState: unwrapped.OutputState}
}

// ARN of the Outpost the instance is assigned to.
func (o InstanceOutput) OutpostArn() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.OutpostArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `getPasswordData` is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
func (o InstanceOutput) PasswordData() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.PasswordData })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Placement Group to start the instance in.
func (o InstanceOutput) PlacementGroup() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.PlacementGroup })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Number of the partition the instance is in. Valid only if the `ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
func (o InstanceOutput) PlacementPartitionNumber() pulumix.Output[int] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[int] { return v.PlacementPartitionNumber })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// ID of the instance's primary network interface.
func (o InstanceOutput) PrimaryNetworkInterfaceId() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.PrimaryNetworkInterfaceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
func (o InstanceOutput) PrivateDns() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.PrivateDns })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
func (o InstanceOutput) PrivateDnsNameOptions() pulumix.GPtrOutput[InstancePrivateDnsNameOptions, InstancePrivateDnsNameOptionsOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstancePrivateDnsNameOptions, InstancePrivateDnsNameOptionsOutput] {
		return v.PrivateDnsNameOptions
	})
	unwrapped := pulumix.Flatten[*InstancePrivateDnsNameOptions, pulumix.GPtrOutput[InstancePrivateDnsNameOptions, InstancePrivateDnsNameOptionsOutput]](value)
	return pulumix.GPtrOutput[InstancePrivateDnsNameOptions, InstancePrivateDnsNameOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Private IP address to associate with the instance in a VPC.
func (o InstanceOutput) PrivateIp() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.PrivateIp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
func (o InstanceOutput) PublicDns() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.PublicDns })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Public IP address assigned to the instance, if applicable. **NOTE**: If you are using an `ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `publicIp` as this field will change after the EIP is attached.
func (o InstanceOutput) PublicIp() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.PublicIp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
func (o InstanceOutput) RootBlockDevice() pulumix.GPtrOutput[InstanceRootBlockDevice, InstanceRootBlockDeviceOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceRootBlockDevice, InstanceRootBlockDeviceOutput] {
		return v.RootBlockDevice
	})
	unwrapped := pulumix.Flatten[*InstanceRootBlockDevice, pulumix.GPtrOutput[InstanceRootBlockDevice, InstanceRootBlockDeviceOutput]](value)
	return pulumix.GPtrOutput[InstanceRootBlockDevice, InstanceRootBlockDeviceOutput]{OutputState: unwrapped.OutputState}
}

// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
func (o InstanceOutput) SecondaryPrivateIps() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.ArrayOutput[string] { return v.SecondaryPrivateIps })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// List of security group names to associate with.
//
// > **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
//
// Deprecated: Use of `securityGroups` is discouraged as it does not allow for changes and will force your instance to be replaced if changes are made. To avoid this, use `vpcSecurityGroupIds` which allows for updates.
func (o InstanceOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.ArrayOutput[string] { return v.SecurityGroups })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
func (o InstanceOutput) SourceDestCheck() pulumix.Output[*bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*bool] { return v.SourceDestCheck })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// If the request is a Spot Instance request, the ID of the request.
func (o InstanceOutput) SpotInstanceRequestId() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.SpotInstanceRequestId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// VPC Subnet ID to launch in.
func (o InstanceOutput) SubnetId() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.SubnetId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o InstanceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o InstanceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
func (o InstanceOutput) Tenancy() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.Tenancy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
func (o InstanceOutput) UserData() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.UserData })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate.
func (o InstanceOutput) UserDataBase64() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.UserDataBase64 })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate when set to `true`. Defaults to `false` if not set.
func (o InstanceOutput) UserDataReplaceOnChange() pulumix.Output[*bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*bool] { return v.UserDataReplaceOnChange })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Map of tags to assign, at instance-creation time, to root and EBS volumes.
//
// > **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `ec2.Instance` configuration, such as using `tags` in an `ebs.Volume` resource attached via `ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
func (o InstanceOutput) VolumeTags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.MapOutput[string] { return v.VolumeTags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// List of security group IDs to associate with.
func (o InstanceOutput) VpcSecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.ArrayOutput[string] { return v.VpcSecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(InstanceOutput{})
}
