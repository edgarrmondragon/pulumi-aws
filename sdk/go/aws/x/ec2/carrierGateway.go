// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EC2 Carrier Gateway. See the AWS [documentation](https://docs.aws.amazon.com/vpc/latest/userguide/Carrier_Gateway.html) for more information.
type CarrierGateway struct {
	pulumi.CustomResourceState

	// The ARN of the carrier gateway.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The AWS account ID of the owner of the carrier gateway.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The ID of the VPC to associate with the carrier gateway.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
}

// NewCarrierGateway registers a new resource with the given unique name, arguments, and options.
func NewCarrierGateway(ctx *pulumi.Context,
	name string, args *CarrierGatewayArgs, opts ...pulumi.ResourceOption) (*CarrierGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CarrierGateway
	err := ctx.RegisterResource("aws:ec2/carrierGateway:CarrierGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCarrierGateway gets an existing CarrierGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCarrierGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CarrierGatewayState, opts ...pulumi.ResourceOption) (*CarrierGateway, error) {
	var resource CarrierGateway
	err := ctx.ReadResource("aws:ec2/carrierGateway:CarrierGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CarrierGateway resources.
type carrierGatewayState struct {
	// The ARN of the carrier gateway.
	Arn *string `pulumi:"arn"`
	// The AWS account ID of the owner of the carrier gateway.
	OwnerId *string `pulumi:"ownerId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The ID of the VPC to associate with the carrier gateway.
	VpcId *string `pulumi:"vpcId"`
}

type CarrierGatewayState struct {
	// The ARN of the carrier gateway.
	Arn pulumix.Input[*string]
	// The AWS account ID of the owner of the carrier gateway.
	OwnerId pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The ID of the VPC to associate with the carrier gateway.
	VpcId pulumix.Input[*string]
}

func (CarrierGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*carrierGatewayState)(nil)).Elem()
}

type carrierGatewayArgs struct {
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the VPC to associate with the carrier gateway.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a CarrierGateway resource.
type CarrierGatewayArgs struct {
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The ID of the VPC to associate with the carrier gateway.
	VpcId pulumix.Input[string]
}

func (CarrierGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*carrierGatewayArgs)(nil)).Elem()
}

type CarrierGatewayOutput struct{ *pulumi.OutputState }

func (CarrierGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CarrierGateway)(nil)).Elem()
}

func (o CarrierGatewayOutput) ToCarrierGatewayOutput() CarrierGatewayOutput {
	return o
}

func (o CarrierGatewayOutput) ToCarrierGatewayOutputWithContext(ctx context.Context) CarrierGatewayOutput {
	return o
}

func (o CarrierGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[CarrierGateway] {
	return pulumix.Output[CarrierGateway]{
		OutputState: o.OutputState,
	}
}

// The ARN of the carrier gateway.
func (o CarrierGatewayOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[CarrierGateway](o, func(v CarrierGateway) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS account ID of the owner of the carrier gateway.
func (o CarrierGatewayOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[CarrierGateway](o, func(v CarrierGateway) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CarrierGatewayOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[CarrierGateway](o, func(v CarrierGateway) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CarrierGatewayOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[CarrierGateway](o, func(v CarrierGateway) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The ID of the VPC to associate with the carrier gateway.
func (o CarrierGatewayOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[CarrierGateway](o, func(v CarrierGateway) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(CarrierGatewayOutput{})
}
