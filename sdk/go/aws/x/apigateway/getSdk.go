// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func GetSdk(ctx *pulumi.Context, args *GetSdkArgs, opts ...pulumi.InvokeOption) (*GetSdkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSdkResult
	err := ctx.Invoke("aws:apigateway/getSdk:getSdk", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSdk.
type GetSdkArgs struct {
	// Key-value map of query string parameters `sdkType` properties of the SDK. For SDK Type of `objectivec` or `swift`, a parameter named `classPrefix` is required. For SDK Type of `android`, parameters named `groupId`, `artifactId`, `artifactVersion`, and `invokerPackage` are required. For SDK Type of `java`, parameters named `serviceName` and `javaPackageName` are required.
	Parameters map[string]string `pulumi:"parameters"`
	// Identifier of the associated REST API.
	RestApiId string `pulumi:"restApiId"`
	// Language for the generated SDK. Currently `java`, `javascript`, `android`, `objectivec` (for iOS), `swift` (for iOS), and `ruby` are supported.
	SdkType string `pulumi:"sdkType"`
	// Name of the Stage that will be exported.
	StageName string `pulumi:"stageName"`
}

// A collection of values returned by getSdk.
type GetSdkResult struct {
	// SDK as a string.
	Body string `pulumi:"body"`
	// Content-disposition header value in the HTTP response.
	ContentDisposition string `pulumi:"contentDisposition"`
	// Content-type header value in the HTTP response.
	ContentType string `pulumi:"contentType"`
	// The provider-assigned unique ID for this managed resource.
	Id         string            `pulumi:"id"`
	Parameters map[string]string `pulumi:"parameters"`
	RestApiId  string            `pulumi:"restApiId"`
	SdkType    string            `pulumi:"sdkType"`
	StageName  string            `pulumi:"stageName"`
}

func GetSdkOutput(ctx *pulumi.Context, args GetSdkOutputArgs, opts ...pulumi.InvokeOption) GetSdkResultOutput {
	outputResult := pulumix.ApplyErr[*GetSdkArgs](args.ToOutput(), func(plainArgs *GetSdkArgs) (*GetSdkResult, error) {
		return GetSdk(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetSdkResultOutput, *GetSdkResult](outputResult)
}

// A collection of arguments for invoking getSdk.
type GetSdkOutputArgs struct {
	// Key-value map of query string parameters `sdkType` properties of the SDK. For SDK Type of `objectivec` or `swift`, a parameter named `classPrefix` is required. For SDK Type of `android`, parameters named `groupId`, `artifactId`, `artifactVersion`, and `invokerPackage` are required. For SDK Type of `java`, parameters named `serviceName` and `javaPackageName` are required.
	Parameters pulumix.Input[map[string]string] `pulumi:"parameters"`
	// Identifier of the associated REST API.
	RestApiId pulumix.Input[string] `pulumi:"restApiId"`
	// Language for the generated SDK. Currently `java`, `javascript`, `android`, `objectivec` (for iOS), `swift` (for iOS), and `ruby` are supported.
	SdkType pulumix.Input[string] `pulumi:"sdkType"`
	// Name of the Stage that will be exported.
	StageName pulumix.Input[string] `pulumi:"stageName"`
}

func (args GetSdkOutputArgs) ToOutput() pulumix.Output[*GetSdkArgs] {
	allArgs := pulumix.All(
		args.Parameters.ToOutput(context.Background()).AsAny(),
		args.RestApiId.ToOutput(context.Background()).AsAny(),
		args.SdkType.ToOutput(context.Background()).AsAny(),
		args.StageName.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetSdkArgs {
		return &GetSdkArgs{
			Parameters: resolvedArgs[0].(map[string]string),
			RestApiId:  resolvedArgs[1].(string),
			SdkType:    resolvedArgs[2].(string),
			StageName:  resolvedArgs[3].(string),
		}
	})
}

type GetSdkResultOutput struct{ *pulumi.OutputState }

func (GetSdkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdkResult)(nil)).Elem()
}

func (o GetSdkResultOutput) ToOutput(context.Context) pulumix.Output[*GetSdkResult] {
	return pulumix.Output[*GetSdkResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSdkResultOutput) Body() pulumix.Output[string] {
	return pulumix.Apply[*GetSdkResult](o, func(v *GetSdkResult) string { return v.Body })
}

func (o GetSdkResultOutput) ContentDisposition() pulumix.Output[string] {
	return pulumix.Apply[*GetSdkResult](o, func(v *GetSdkResult) string { return v.ContentDisposition })
}

func (o GetSdkResultOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[*GetSdkResult](o, func(v *GetSdkResult) string { return v.ContentType })
}

func (o GetSdkResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetSdkResult](o, func(v *GetSdkResult) string { return v.Id })
}

func (o GetSdkResultOutput) Parameters() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetSdkResult](o, func(v *GetSdkResult) map[string]string { return v.Parameters })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetSdkResultOutput) RestApiId() pulumix.Output[string] {
	return pulumix.Apply[*GetSdkResult](o, func(v *GetSdkResult) string { return v.RestApiId })
}

func (o GetSdkResultOutput) SdkType() pulumix.Output[string] {
	return pulumix.Apply[*GetSdkResult](o, func(v *GetSdkResult) string { return v.SdkType })
}

func (o GetSdkResultOutput) StageName() pulumix.Output[string] {
	return pulumix.Apply[*GetSdkResult](o, func(v *GetSdkResult) string { return v.StageName })
}
