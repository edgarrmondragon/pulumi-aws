// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages selection conditions for AWS Backup plan resources.
type Selection struct {
	pulumi.CustomResourceState

	// A list of conditions that you define to assign resources to your backup plans using tags.
	Conditions pulumix.GArrayOutput[SelectionCondition, SelectionConditionOutput] `pulumi:"conditions"`
	// The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
	IamRoleArn pulumix.Output[string] `pulumi:"iamRoleArn"`
	// The display name of a resource selection document.
	Name pulumix.Output[string] `pulumi:"name"`
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
	NotResources pulumix.ArrayOutput[string] `pulumi:"notResources"`
	// The backup plan ID to be associated with the selection of resources.
	PlanId pulumix.Output[string] `pulumi:"planId"`
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
	Resources pulumix.ArrayOutput[string] `pulumi:"resources"`
	// Tag-based conditions used to specify a set of resources to assign to a backup plan.
	SelectionTags pulumix.GArrayOutput[SelectionSelectionTag, SelectionSelectionTagOutput] `pulumi:"selectionTags"`
}

// NewSelection registers a new resource with the given unique name, arguments, and options.
func NewSelection(ctx *pulumi.Context,
	name string, args *SelectionArgs, opts ...pulumi.ResourceOption) (*Selection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IamRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'IamRoleArn'")
	}
	if args.PlanId == nil {
		return nil, errors.New("invalid value for required argument 'PlanId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Selection
	err := ctx.RegisterResource("aws:backup/selection:Selection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSelection gets an existing Selection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSelection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SelectionState, opts ...pulumi.ResourceOption) (*Selection, error) {
	var resource Selection
	err := ctx.ReadResource("aws:backup/selection:Selection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Selection resources.
type selectionState struct {
	// A list of conditions that you define to assign resources to your backup plans using tags.
	Conditions []SelectionCondition `pulumi:"conditions"`
	// The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
	IamRoleArn *string `pulumi:"iamRoleArn"`
	// The display name of a resource selection document.
	Name *string `pulumi:"name"`
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
	NotResources []string `pulumi:"notResources"`
	// The backup plan ID to be associated with the selection of resources.
	PlanId *string `pulumi:"planId"`
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
	Resources []string `pulumi:"resources"`
	// Tag-based conditions used to specify a set of resources to assign to a backup plan.
	SelectionTags []SelectionSelectionTag `pulumi:"selectionTags"`
}

type SelectionState struct {
	// A list of conditions that you define to assign resources to your backup plans using tags.
	Conditions pulumix.Input[[]*SelectionConditionArgs]
	// The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
	IamRoleArn pulumix.Input[*string]
	// The display name of a resource selection document.
	Name pulumix.Input[*string]
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
	NotResources pulumix.Input[[]string]
	// The backup plan ID to be associated with the selection of resources.
	PlanId pulumix.Input[*string]
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
	Resources pulumix.Input[[]string]
	// Tag-based conditions used to specify a set of resources to assign to a backup plan.
	SelectionTags pulumix.Input[[]*SelectionSelectionTagArgs]
}

func (SelectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*selectionState)(nil)).Elem()
}

type selectionArgs struct {
	// A list of conditions that you define to assign resources to your backup plans using tags.
	Conditions []SelectionCondition `pulumi:"conditions"`
	// The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
	IamRoleArn string `pulumi:"iamRoleArn"`
	// The display name of a resource selection document.
	Name *string `pulumi:"name"`
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
	NotResources []string `pulumi:"notResources"`
	// The backup plan ID to be associated with the selection of resources.
	PlanId string `pulumi:"planId"`
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
	Resources []string `pulumi:"resources"`
	// Tag-based conditions used to specify a set of resources to assign to a backup plan.
	SelectionTags []SelectionSelectionTag `pulumi:"selectionTags"`
}

// The set of arguments for constructing a Selection resource.
type SelectionArgs struct {
	// A list of conditions that you define to assign resources to your backup plans using tags.
	Conditions pulumix.Input[[]*SelectionConditionArgs]
	// The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
	IamRoleArn pulumix.Input[string]
	// The display name of a resource selection document.
	Name pulumix.Input[*string]
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
	NotResources pulumix.Input[[]string]
	// The backup plan ID to be associated with the selection of resources.
	PlanId pulumix.Input[string]
	// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
	Resources pulumix.Input[[]string]
	// Tag-based conditions used to specify a set of resources to assign to a backup plan.
	SelectionTags pulumix.Input[[]*SelectionSelectionTagArgs]
}

func (SelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*selectionArgs)(nil)).Elem()
}

type SelectionOutput struct{ *pulumi.OutputState }

func (SelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Selection)(nil)).Elem()
}

func (o SelectionOutput) ToSelectionOutput() SelectionOutput {
	return o
}

func (o SelectionOutput) ToSelectionOutputWithContext(ctx context.Context) SelectionOutput {
	return o
}

func (o SelectionOutput) ToOutput(ctx context.Context) pulumix.Output[Selection] {
	return pulumix.Output[Selection]{
		OutputState: o.OutputState,
	}
}

// A list of conditions that you define to assign resources to your backup plans using tags.
func (o SelectionOutput) Conditions() pulumix.GArrayOutput[SelectionCondition, SelectionConditionOutput] {
	value := pulumix.Apply[Selection](o, func(v Selection) pulumix.GArrayOutput[SelectionCondition, SelectionConditionOutput] {
		return v.Conditions
	})
	unwrapped := pulumix.Flatten[[]SelectionCondition, pulumix.GArrayOutput[SelectionCondition, SelectionConditionOutput]](value)
	return pulumix.GArrayOutput[SelectionCondition, SelectionConditionOutput]{OutputState: unwrapped.OutputState}
}

// The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
func (o SelectionOutput) IamRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[Selection](o, func(v Selection) pulumix.Output[string] { return v.IamRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The display name of a resource selection document.
func (o SelectionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Selection](o, func(v Selection) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
func (o SelectionOutput) NotResources() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Selection](o, func(v Selection) pulumix.ArrayOutput[string] { return v.NotResources })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The backup plan ID to be associated with the selection of resources.
func (o SelectionOutput) PlanId() pulumix.Output[string] {
	value := pulumix.Apply[Selection](o, func(v Selection) pulumix.Output[string] { return v.PlanId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
func (o SelectionOutput) Resources() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Selection](o, func(v Selection) pulumix.ArrayOutput[string] { return v.Resources })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Tag-based conditions used to specify a set of resources to assign to a backup plan.
func (o SelectionOutput) SelectionTags() pulumix.GArrayOutput[SelectionSelectionTag, SelectionSelectionTagOutput] {
	value := pulumix.Apply[Selection](o, func(v Selection) pulumix.GArrayOutput[SelectionSelectionTag, SelectionSelectionTagOutput] {
		return v.SelectionTags
	})
	unwrapped := pulumix.Flatten[[]SelectionSelectionTag, pulumix.GArrayOutput[SelectionSelectionTag, SelectionSelectionTagOutput]](value)
	return pulumix.GArrayOutput[SelectionSelectionTag, SelectionSelectionTagOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(SelectionOutput{})
}
