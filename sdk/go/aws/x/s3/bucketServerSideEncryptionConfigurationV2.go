// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a S3 bucket server-side encryption configuration resource.
//
// > **NOTE:** Destroying an `s3.BucketServerSideEncryptionConfigurationV2` resource resets the bucket to [Amazon S3 bucket default encryption](https://docs.aws.amazon.com/AmazonS3/latest/userguide/default-encryption-faq.html).
type BucketServerSideEncryptionConfigurationV2 struct {
	pulumi.CustomResourceState

	// ID (name) of the bucket.
	Bucket pulumix.Output[string] `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Output[*string] `pulumi:"expectedBucketOwner"`
	// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
	Rules pulumix.GArrayOutput[BucketServerSideEncryptionConfigurationV2Rule, BucketServerSideEncryptionConfigurationV2RuleOutput] `pulumi:"rules"`
}

// NewBucketServerSideEncryptionConfigurationV2 registers a new resource with the given unique name, arguments, and options.
func NewBucketServerSideEncryptionConfigurationV2(ctx *pulumi.Context,
	name string, args *BucketServerSideEncryptionConfigurationV2Args, opts ...pulumi.ResourceOption) (*BucketServerSideEncryptionConfigurationV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketServerSideEncryptionConfigurationV2
	err := ctx.RegisterResource("aws:s3/bucketServerSideEncryptionConfigurationV2:BucketServerSideEncryptionConfigurationV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketServerSideEncryptionConfigurationV2 gets an existing BucketServerSideEncryptionConfigurationV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketServerSideEncryptionConfigurationV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketServerSideEncryptionConfigurationV2State, opts ...pulumi.ResourceOption) (*BucketServerSideEncryptionConfigurationV2, error) {
	var resource BucketServerSideEncryptionConfigurationV2
	err := ctx.ReadResource("aws:s3/bucketServerSideEncryptionConfigurationV2:BucketServerSideEncryptionConfigurationV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketServerSideEncryptionConfigurationV2 resources.
type bucketServerSideEncryptionConfigurationV2State struct {
	// ID (name) of the bucket.
	Bucket *string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
	Rules []BucketServerSideEncryptionConfigurationV2Rule `pulumi:"rules"`
}

type BucketServerSideEncryptionConfigurationV2State struct {
	// ID (name) of the bucket.
	Bucket pulumix.Input[*string]
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Input[*string]
	// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
	Rules pulumix.Input[[]*BucketServerSideEncryptionConfigurationV2RuleArgs]
}

func (BucketServerSideEncryptionConfigurationV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketServerSideEncryptionConfigurationV2State)(nil)).Elem()
}

type bucketServerSideEncryptionConfigurationV2Args struct {
	// ID (name) of the bucket.
	Bucket string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
	Rules []BucketServerSideEncryptionConfigurationV2Rule `pulumi:"rules"`
}

// The set of arguments for constructing a BucketServerSideEncryptionConfigurationV2 resource.
type BucketServerSideEncryptionConfigurationV2Args struct {
	// ID (name) of the bucket.
	Bucket pulumix.Input[string]
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Input[*string]
	// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
	Rules pulumix.Input[[]*BucketServerSideEncryptionConfigurationV2RuleArgs]
}

func (BucketServerSideEncryptionConfigurationV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketServerSideEncryptionConfigurationV2Args)(nil)).Elem()
}

type BucketServerSideEncryptionConfigurationV2Output struct{ *pulumi.OutputState }

func (BucketServerSideEncryptionConfigurationV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionConfigurationV2)(nil)).Elem()
}

func (o BucketServerSideEncryptionConfigurationV2Output) ToBucketServerSideEncryptionConfigurationV2Output() BucketServerSideEncryptionConfigurationV2Output {
	return o
}

func (o BucketServerSideEncryptionConfigurationV2Output) ToBucketServerSideEncryptionConfigurationV2OutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationV2Output {
	return o
}

func (o BucketServerSideEncryptionConfigurationV2Output) ToOutput(ctx context.Context) pulumix.Output[BucketServerSideEncryptionConfigurationV2] {
	return pulumix.Output[BucketServerSideEncryptionConfigurationV2]{
		OutputState: o.OutputState,
	}
}

// ID (name) of the bucket.
func (o BucketServerSideEncryptionConfigurationV2Output) Bucket() pulumix.Output[string] {
	value := pulumix.Apply[BucketServerSideEncryptionConfigurationV2](o, func(v BucketServerSideEncryptionConfigurationV2) pulumix.Output[string] { return v.Bucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Account ID of the expected bucket owner.
func (o BucketServerSideEncryptionConfigurationV2Output) ExpectedBucketOwner() pulumix.Output[*string] {
	value := pulumix.Apply[BucketServerSideEncryptionConfigurationV2](o, func(v BucketServerSideEncryptionConfigurationV2) pulumix.Output[*string] {
		return v.ExpectedBucketOwner
	})
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
func (o BucketServerSideEncryptionConfigurationV2Output) Rules() pulumix.GArrayOutput[BucketServerSideEncryptionConfigurationV2Rule, BucketServerSideEncryptionConfigurationV2RuleOutput] {
	value := pulumix.Apply[BucketServerSideEncryptionConfigurationV2](o, func(v BucketServerSideEncryptionConfigurationV2) pulumix.GArrayOutput[BucketServerSideEncryptionConfigurationV2Rule, BucketServerSideEncryptionConfigurationV2RuleOutput] {
		return v.Rules
	})
	unwrapped := pulumix.Flatten[[]BucketServerSideEncryptionConfigurationV2Rule, pulumix.GArrayOutput[BucketServerSideEncryptionConfigurationV2Rule, BucketServerSideEncryptionConfigurationV2RuleOutput]](value)
	return pulumix.GArrayOutput[BucketServerSideEncryptionConfigurationV2Rule, BucketServerSideEncryptionConfigurationV2RuleOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(BucketServerSideEncryptionConfigurationV2Output{})
}
