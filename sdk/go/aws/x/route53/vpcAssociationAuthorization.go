// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Authorizes a VPC in a different account to be associated with a local Route53 Hosted Zone.
type VpcAssociationAuthorization struct {
	pulumi.CustomResourceState

	// The VPC to authorize for association with the private hosted zone.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
	// The VPC's region. Defaults to the region of the AWS provider.
	VpcRegion pulumix.Output[string] `pulumi:"vpcRegion"`
	// The ID of the private hosted zone that you want to authorize associating a VPC with.
	ZoneId pulumix.Output[string] `pulumi:"zoneId"`
}

// NewVpcAssociationAuthorization registers a new resource with the given unique name, arguments, and options.
func NewVpcAssociationAuthorization(ctx *pulumi.Context,
	name string, args *VpcAssociationAuthorizationArgs, opts ...pulumi.ResourceOption) (*VpcAssociationAuthorization, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcAssociationAuthorization
	err := ctx.RegisterResource("aws:route53/vpcAssociationAuthorization:VpcAssociationAuthorization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcAssociationAuthorization gets an existing VpcAssociationAuthorization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcAssociationAuthorization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcAssociationAuthorizationState, opts ...pulumi.ResourceOption) (*VpcAssociationAuthorization, error) {
	var resource VpcAssociationAuthorization
	err := ctx.ReadResource("aws:route53/vpcAssociationAuthorization:VpcAssociationAuthorization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcAssociationAuthorization resources.
type vpcAssociationAuthorizationState struct {
	// The VPC to authorize for association with the private hosted zone.
	VpcId *string `pulumi:"vpcId"`
	// The VPC's region. Defaults to the region of the AWS provider.
	VpcRegion *string `pulumi:"vpcRegion"`
	// The ID of the private hosted zone that you want to authorize associating a VPC with.
	ZoneId *string `pulumi:"zoneId"`
}

type VpcAssociationAuthorizationState struct {
	// The VPC to authorize for association with the private hosted zone.
	VpcId pulumix.Input[*string]
	// The VPC's region. Defaults to the region of the AWS provider.
	VpcRegion pulumix.Input[*string]
	// The ID of the private hosted zone that you want to authorize associating a VPC with.
	ZoneId pulumix.Input[*string]
}

func (VpcAssociationAuthorizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAssociationAuthorizationState)(nil)).Elem()
}

type vpcAssociationAuthorizationArgs struct {
	// The VPC to authorize for association with the private hosted zone.
	VpcId string `pulumi:"vpcId"`
	// The VPC's region. Defaults to the region of the AWS provider.
	VpcRegion *string `pulumi:"vpcRegion"`
	// The ID of the private hosted zone that you want to authorize associating a VPC with.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a VpcAssociationAuthorization resource.
type VpcAssociationAuthorizationArgs struct {
	// The VPC to authorize for association with the private hosted zone.
	VpcId pulumix.Input[string]
	// The VPC's region. Defaults to the region of the AWS provider.
	VpcRegion pulumix.Input[*string]
	// The ID of the private hosted zone that you want to authorize associating a VPC with.
	ZoneId pulumix.Input[string]
}

func (VpcAssociationAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAssociationAuthorizationArgs)(nil)).Elem()
}

type VpcAssociationAuthorizationOutput struct{ *pulumi.OutputState }

func (VpcAssociationAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAssociationAuthorization)(nil)).Elem()
}

func (o VpcAssociationAuthorizationOutput) ToVpcAssociationAuthorizationOutput() VpcAssociationAuthorizationOutput {
	return o
}

func (o VpcAssociationAuthorizationOutput) ToVpcAssociationAuthorizationOutputWithContext(ctx context.Context) VpcAssociationAuthorizationOutput {
	return o
}

func (o VpcAssociationAuthorizationOutput) ToOutput(ctx context.Context) pulumix.Output[VpcAssociationAuthorization] {
	return pulumix.Output[VpcAssociationAuthorization]{
		OutputState: o.OutputState,
	}
}

// The VPC to authorize for association with the private hosted zone.
func (o VpcAssociationAuthorizationOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[VpcAssociationAuthorization](o, func(v VpcAssociationAuthorization) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The VPC's region. Defaults to the region of the AWS provider.
func (o VpcAssociationAuthorizationOutput) VpcRegion() pulumix.Output[string] {
	value := pulumix.Apply[VpcAssociationAuthorization](o, func(v VpcAssociationAuthorization) pulumix.Output[string] { return v.VpcRegion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the private hosted zone that you want to authorize associating a VPC with.
func (o VpcAssociationAuthorizationOutput) ZoneId() pulumix.Output[string] {
	value := pulumix.Apply[VpcAssociationAuthorization](o, func(v VpcAssociationAuthorization) pulumix.Output[string] { return v.ZoneId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(VpcAssociationAuthorizationOutput{})
}
