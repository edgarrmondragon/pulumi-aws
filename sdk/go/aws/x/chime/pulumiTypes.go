// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chime

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type SdkvoiceGlobalSettingsVoiceConnector struct {
	// The S3 bucket that stores the Voice Connector's call detail records.
	CdrBucket *string `pulumi:"cdrBucket"`
}

type SdkvoiceGlobalSettingsVoiceConnectorArgs struct {
	// The S3 bucket that stores the Voice Connector's call detail records.
	CdrBucket pulumix.Input[*string] `pulumi:"cdrBucket"`
}

func (SdkvoiceGlobalSettingsVoiceConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdkvoiceGlobalSettingsVoiceConnector)(nil)).Elem()
}

func (i SdkvoiceGlobalSettingsVoiceConnectorArgs) ToSdkvoiceGlobalSettingsVoiceConnectorOutput() SdkvoiceGlobalSettingsVoiceConnectorOutput {
	return i.ToSdkvoiceGlobalSettingsVoiceConnectorOutputWithContext(context.Background())
}

func (i SdkvoiceGlobalSettingsVoiceConnectorArgs) ToSdkvoiceGlobalSettingsVoiceConnectorOutputWithContext(ctx context.Context) SdkvoiceGlobalSettingsVoiceConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdkvoiceGlobalSettingsVoiceConnectorOutput)
}

func (i *SdkvoiceGlobalSettingsVoiceConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[*SdkvoiceGlobalSettingsVoiceConnectorArgs] {
	return pulumix.Val(i)
}

type SdkvoiceGlobalSettingsVoiceConnectorOutput struct{ *pulumi.OutputState }

func (SdkvoiceGlobalSettingsVoiceConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdkvoiceGlobalSettingsVoiceConnector)(nil)).Elem()
}

func (o SdkvoiceGlobalSettingsVoiceConnectorOutput) ToSdkvoiceGlobalSettingsVoiceConnectorOutput() SdkvoiceGlobalSettingsVoiceConnectorOutput {
	return o
}

func (o SdkvoiceGlobalSettingsVoiceConnectorOutput) ToSdkvoiceGlobalSettingsVoiceConnectorOutputWithContext(ctx context.Context) SdkvoiceGlobalSettingsVoiceConnectorOutput {
	return o
}

func (o SdkvoiceGlobalSettingsVoiceConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[SdkvoiceGlobalSettingsVoiceConnector] {
	return pulumix.Output[SdkvoiceGlobalSettingsVoiceConnector]{
		OutputState: o.OutputState,
	}
}

// The S3 bucket that stores the Voice Connector's call detail records.
func (o SdkvoiceGlobalSettingsVoiceConnectorOutput) CdrBucket() pulumix.Output[*string] {
	return pulumix.Apply[SdkvoiceGlobalSettingsVoiceConnector](o, func(v SdkvoiceGlobalSettingsVoiceConnector) *string { return v.CdrBucket })
}

type SdkvoiceSipMediaApplicationEndpoints struct {
	// Valid Amazon Resource Name (ARN) of the Lambda function, version, or alias. The function must be created in the same AWS Region as the SIP media application.
	LambdaArn string `pulumi:"lambdaArn"`
}

type SdkvoiceSipMediaApplicationEndpointsArgs struct {
	// Valid Amazon Resource Name (ARN) of the Lambda function, version, or alias. The function must be created in the same AWS Region as the SIP media application.
	LambdaArn pulumix.Input[string] `pulumi:"lambdaArn"`
}

func (SdkvoiceSipMediaApplicationEndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdkvoiceSipMediaApplicationEndpoints)(nil)).Elem()
}

func (i SdkvoiceSipMediaApplicationEndpointsArgs) ToSdkvoiceSipMediaApplicationEndpointsOutput() SdkvoiceSipMediaApplicationEndpointsOutput {
	return i.ToSdkvoiceSipMediaApplicationEndpointsOutputWithContext(context.Background())
}

func (i SdkvoiceSipMediaApplicationEndpointsArgs) ToSdkvoiceSipMediaApplicationEndpointsOutputWithContext(ctx context.Context) SdkvoiceSipMediaApplicationEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdkvoiceSipMediaApplicationEndpointsOutput)
}

func (i *SdkvoiceSipMediaApplicationEndpointsArgs) ToOutput(ctx context.Context) pulumix.Output[*SdkvoiceSipMediaApplicationEndpointsArgs] {
	return pulumix.Val(i)
}

type SdkvoiceSipMediaApplicationEndpointsOutput struct{ *pulumi.OutputState }

func (SdkvoiceSipMediaApplicationEndpointsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdkvoiceSipMediaApplicationEndpoints)(nil)).Elem()
}

func (o SdkvoiceSipMediaApplicationEndpointsOutput) ToSdkvoiceSipMediaApplicationEndpointsOutput() SdkvoiceSipMediaApplicationEndpointsOutput {
	return o
}

func (o SdkvoiceSipMediaApplicationEndpointsOutput) ToSdkvoiceSipMediaApplicationEndpointsOutputWithContext(ctx context.Context) SdkvoiceSipMediaApplicationEndpointsOutput {
	return o
}

func (o SdkvoiceSipMediaApplicationEndpointsOutput) ToOutput(ctx context.Context) pulumix.Output[SdkvoiceSipMediaApplicationEndpoints] {
	return pulumix.Output[SdkvoiceSipMediaApplicationEndpoints]{
		OutputState: o.OutputState,
	}
}

// Valid Amazon Resource Name (ARN) of the Lambda function, version, or alias. The function must be created in the same AWS Region as the SIP media application.
func (o SdkvoiceSipMediaApplicationEndpointsOutput) LambdaArn() pulumix.Output[string] {
	return pulumix.Apply[SdkvoiceSipMediaApplicationEndpoints](o, func(v SdkvoiceSipMediaApplicationEndpoints) string { return v.LambdaArn })
}

type SdkvoiceSipRuleTargetApplication struct {
	// The AWS Region of the target application.
	AwsRegion string `pulumi:"awsRegion"`
	// Priority of the SIP media application in the target list.
	Priority int `pulumi:"priority"`
	// The SIP media application ID.
	SipMediaApplicationId string `pulumi:"sipMediaApplicationId"`
}

type SdkvoiceSipRuleTargetApplicationArgs struct {
	// The AWS Region of the target application.
	AwsRegion pulumix.Input[string] `pulumi:"awsRegion"`
	// Priority of the SIP media application in the target list.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The SIP media application ID.
	SipMediaApplicationId pulumix.Input[string] `pulumi:"sipMediaApplicationId"`
}

func (SdkvoiceSipRuleTargetApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdkvoiceSipRuleTargetApplication)(nil)).Elem()
}

func (i SdkvoiceSipRuleTargetApplicationArgs) ToSdkvoiceSipRuleTargetApplicationOutput() SdkvoiceSipRuleTargetApplicationOutput {
	return i.ToSdkvoiceSipRuleTargetApplicationOutputWithContext(context.Background())
}

func (i SdkvoiceSipRuleTargetApplicationArgs) ToSdkvoiceSipRuleTargetApplicationOutputWithContext(ctx context.Context) SdkvoiceSipRuleTargetApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdkvoiceSipRuleTargetApplicationOutput)
}

func (i *SdkvoiceSipRuleTargetApplicationArgs) ToOutput(ctx context.Context) pulumix.Output[*SdkvoiceSipRuleTargetApplicationArgs] {
	return pulumix.Val(i)
}

type SdkvoiceSipRuleTargetApplicationOutput struct{ *pulumi.OutputState }

func (SdkvoiceSipRuleTargetApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdkvoiceSipRuleTargetApplication)(nil)).Elem()
}

func (o SdkvoiceSipRuleTargetApplicationOutput) ToSdkvoiceSipRuleTargetApplicationOutput() SdkvoiceSipRuleTargetApplicationOutput {
	return o
}

func (o SdkvoiceSipRuleTargetApplicationOutput) ToSdkvoiceSipRuleTargetApplicationOutputWithContext(ctx context.Context) SdkvoiceSipRuleTargetApplicationOutput {
	return o
}

func (o SdkvoiceSipRuleTargetApplicationOutput) ToOutput(ctx context.Context) pulumix.Output[SdkvoiceSipRuleTargetApplication] {
	return pulumix.Output[SdkvoiceSipRuleTargetApplication]{
		OutputState: o.OutputState,
	}
}

// The AWS Region of the target application.
func (o SdkvoiceSipRuleTargetApplicationOutput) AwsRegion() pulumix.Output[string] {
	return pulumix.Apply[SdkvoiceSipRuleTargetApplication](o, func(v SdkvoiceSipRuleTargetApplication) string { return v.AwsRegion })
}

// Priority of the SIP media application in the target list.
func (o SdkvoiceSipRuleTargetApplicationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[SdkvoiceSipRuleTargetApplication](o, func(v SdkvoiceSipRuleTargetApplication) int { return v.Priority })
}

// The SIP media application ID.
func (o SdkvoiceSipRuleTargetApplicationOutput) SipMediaApplicationId() pulumix.Output[string] {
	return pulumix.Apply[SdkvoiceSipRuleTargetApplication](o, func(v SdkvoiceSipRuleTargetApplication) string { return v.SipMediaApplicationId })
}

type SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration struct {
	// ARN for KMS Key.
	//
	// The following arguments are optional:
	KmsKeyArn string `pulumi:"kmsKeyArn"`
}

type SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationArgs struct {
	// ARN for KMS Key.
	//
	// The following arguments are optional:
	KmsKeyArn pulumix.Input[string] `pulumi:"kmsKeyArn"`
}

func (SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationArgs) ToSdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput() SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput {
	return i.ToSdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutputWithContext(context.Background())
}

func (i SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationArgs) ToSdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput)
}

func (i *SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationArgs] {
	return pulumix.Val(i)
}

type SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput) ToSdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput() SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput {
	return o
}

func (o SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput) ToSdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput {
	return o
}

func (o SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration] {
	return pulumix.Output[SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration]{
		OutputState: o.OutputState,
	}
}

// ARN for KMS Key.
//
// The following arguments are optional:
func (o SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput) KmsKeyArn() pulumix.Output[string] {
	return pulumix.Apply[SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration](o, func(v SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration) string { return v.KmsKeyArn })
}

type VoiceConnectorGroupConnector struct {
	// The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.
	Priority int `pulumi:"priority"`
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId string `pulumi:"voiceConnectorId"`
}

type VoiceConnectorGroupConnectorArgs struct {
	// The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumix.Input[string] `pulumi:"voiceConnectorId"`
}

func (VoiceConnectorGroupConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorGroupConnector)(nil)).Elem()
}

func (i VoiceConnectorGroupConnectorArgs) ToVoiceConnectorGroupConnectorOutput() VoiceConnectorGroupConnectorOutput {
	return i.ToVoiceConnectorGroupConnectorOutputWithContext(context.Background())
}

func (i VoiceConnectorGroupConnectorArgs) ToVoiceConnectorGroupConnectorOutputWithContext(ctx context.Context) VoiceConnectorGroupConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorGroupConnectorOutput)
}

func (i *VoiceConnectorGroupConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[*VoiceConnectorGroupConnectorArgs] {
	return pulumix.Val(i)
}

type VoiceConnectorGroupConnectorOutput struct{ *pulumi.OutputState }

func (VoiceConnectorGroupConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorGroupConnector)(nil)).Elem()
}

func (o VoiceConnectorGroupConnectorOutput) ToVoiceConnectorGroupConnectorOutput() VoiceConnectorGroupConnectorOutput {
	return o
}

func (o VoiceConnectorGroupConnectorOutput) ToVoiceConnectorGroupConnectorOutputWithContext(ctx context.Context) VoiceConnectorGroupConnectorOutput {
	return o
}

func (o VoiceConnectorGroupConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[VoiceConnectorGroupConnector] {
	return pulumix.Output[VoiceConnectorGroupConnector]{
		OutputState: o.OutputState,
	}
}

// The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first.
func (o VoiceConnectorGroupConnectorOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[VoiceConnectorGroupConnector](o, func(v VoiceConnectorGroupConnector) int { return v.Priority })
}

// The Amazon Chime Voice Connector ID.
func (o VoiceConnectorGroupConnectorOutput) VoiceConnectorId() pulumix.Output[string] {
	return pulumix.Apply[VoiceConnectorGroupConnector](o, func(v VoiceConnectorGroupConnector) string { return v.VoiceConnectorId })
}

type VoiceConnectorOrganizationRoute struct {
	// The FQDN or IP address to contact for origination traffic.
	Host string `pulumi:"host"`
	// The designated origination route port. Defaults to `5060`.
	Port *int `pulumi:"port"`
	// The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first.
	Priority int `pulumi:"priority"`
	// The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.
	Protocol string `pulumi:"protocol"`
	// The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight.
	Weight int `pulumi:"weight"`
}

type VoiceConnectorOrganizationRouteArgs struct {
	// The FQDN or IP address to contact for origination traffic.
	Host pulumix.Input[string] `pulumi:"host"`
	// The designated origination route port. Defaults to `5060`.
	Port pulumix.Input[*int] `pulumi:"port"`
	// The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.
	Protocol pulumix.Input[string] `pulumi:"protocol"`
	// The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight.
	Weight pulumix.Input[int] `pulumi:"weight"`
}

func (VoiceConnectorOrganizationRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorOrganizationRoute)(nil)).Elem()
}

func (i VoiceConnectorOrganizationRouteArgs) ToVoiceConnectorOrganizationRouteOutput() VoiceConnectorOrganizationRouteOutput {
	return i.ToVoiceConnectorOrganizationRouteOutputWithContext(context.Background())
}

func (i VoiceConnectorOrganizationRouteArgs) ToVoiceConnectorOrganizationRouteOutputWithContext(ctx context.Context) VoiceConnectorOrganizationRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorOrganizationRouteOutput)
}

func (i *VoiceConnectorOrganizationRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*VoiceConnectorOrganizationRouteArgs] {
	return pulumix.Val(i)
}

type VoiceConnectorOrganizationRouteOutput struct{ *pulumi.OutputState }

func (VoiceConnectorOrganizationRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorOrganizationRoute)(nil)).Elem()
}

func (o VoiceConnectorOrganizationRouteOutput) ToVoiceConnectorOrganizationRouteOutput() VoiceConnectorOrganizationRouteOutput {
	return o
}

func (o VoiceConnectorOrganizationRouteOutput) ToVoiceConnectorOrganizationRouteOutputWithContext(ctx context.Context) VoiceConnectorOrganizationRouteOutput {
	return o
}

func (o VoiceConnectorOrganizationRouteOutput) ToOutput(ctx context.Context) pulumix.Output[VoiceConnectorOrganizationRoute] {
	return pulumix.Output[VoiceConnectorOrganizationRoute]{
		OutputState: o.OutputState,
	}
}

// The FQDN or IP address to contact for origination traffic.
func (o VoiceConnectorOrganizationRouteOutput) Host() pulumix.Output[string] {
	return pulumix.Apply[VoiceConnectorOrganizationRoute](o, func(v VoiceConnectorOrganizationRoute) string { return v.Host })
}

// The designated origination route port. Defaults to `5060`.
func (o VoiceConnectorOrganizationRouteOutput) Port() pulumix.Output[*int] {
	return pulumix.Apply[VoiceConnectorOrganizationRoute](o, func(v VoiceConnectorOrganizationRoute) *int { return v.Port })
}

// The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first.
func (o VoiceConnectorOrganizationRouteOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[VoiceConnectorOrganizationRoute](o, func(v VoiceConnectorOrganizationRoute) int { return v.Priority })
}

// The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.
func (o VoiceConnectorOrganizationRouteOutput) Protocol() pulumix.Output[string] {
	return pulumix.Apply[VoiceConnectorOrganizationRoute](o, func(v VoiceConnectorOrganizationRoute) string { return v.Protocol })
}

// The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight.
func (o VoiceConnectorOrganizationRouteOutput) Weight() pulumix.Output[int] {
	return pulumix.Apply[VoiceConnectorOrganizationRoute](o, func(v VoiceConnectorOrganizationRoute) int { return v.Weight })
}

type VoiceConnectorStreamingMediaInsightsConfiguration struct {
	// The media insights configuration that will be invoked by the Voice Connector.
	ConfigurationArn *string `pulumi:"configurationArn"`
	// When `true`, the media insights configuration is not enabled. Defaults to `false`.
	Disabled *bool `pulumi:"disabled"`
}

type VoiceConnectorStreamingMediaInsightsConfigurationArgs struct {
	// The media insights configuration that will be invoked by the Voice Connector.
	ConfigurationArn pulumix.Input[*string] `pulumi:"configurationArn"`
	// When `true`, the media insights configuration is not enabled. Defaults to `false`.
	Disabled pulumix.Input[*bool] `pulumi:"disabled"`
}

func (VoiceConnectorStreamingMediaInsightsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorStreamingMediaInsightsConfiguration)(nil)).Elem()
}

func (i VoiceConnectorStreamingMediaInsightsConfigurationArgs) ToVoiceConnectorStreamingMediaInsightsConfigurationOutput() VoiceConnectorStreamingMediaInsightsConfigurationOutput {
	return i.ToVoiceConnectorStreamingMediaInsightsConfigurationOutputWithContext(context.Background())
}

func (i VoiceConnectorStreamingMediaInsightsConfigurationArgs) ToVoiceConnectorStreamingMediaInsightsConfigurationOutputWithContext(ctx context.Context) VoiceConnectorStreamingMediaInsightsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorStreamingMediaInsightsConfigurationOutput)
}

func (i *VoiceConnectorStreamingMediaInsightsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*VoiceConnectorStreamingMediaInsightsConfigurationArgs] {
	return pulumix.Val(i)
}

type VoiceConnectorStreamingMediaInsightsConfigurationOutput struct{ *pulumi.OutputState }

func (VoiceConnectorStreamingMediaInsightsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorStreamingMediaInsightsConfiguration)(nil)).Elem()
}

func (o VoiceConnectorStreamingMediaInsightsConfigurationOutput) ToVoiceConnectorStreamingMediaInsightsConfigurationOutput() VoiceConnectorStreamingMediaInsightsConfigurationOutput {
	return o
}

func (o VoiceConnectorStreamingMediaInsightsConfigurationOutput) ToVoiceConnectorStreamingMediaInsightsConfigurationOutputWithContext(ctx context.Context) VoiceConnectorStreamingMediaInsightsConfigurationOutput {
	return o
}

func (o VoiceConnectorStreamingMediaInsightsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[VoiceConnectorStreamingMediaInsightsConfiguration] {
	return pulumix.Output[VoiceConnectorStreamingMediaInsightsConfiguration]{
		OutputState: o.OutputState,
	}
}

// The media insights configuration that will be invoked by the Voice Connector.
func (o VoiceConnectorStreamingMediaInsightsConfigurationOutput) ConfigurationArn() pulumix.Output[*string] {
	return pulumix.Apply[VoiceConnectorStreamingMediaInsightsConfiguration](o, func(v VoiceConnectorStreamingMediaInsightsConfiguration) *string { return v.ConfigurationArn })
}

// When `true`, the media insights configuration is not enabled. Defaults to `false`.
func (o VoiceConnectorStreamingMediaInsightsConfigurationOutput) Disabled() pulumix.Output[*bool] {
	return pulumix.Apply[VoiceConnectorStreamingMediaInsightsConfiguration](o, func(v VoiceConnectorStreamingMediaInsightsConfiguration) *bool { return v.Disabled })
}

type VoiceConnectorTerminationCredentialsCredential struct {
	// RFC2617 compliant password associated with the SIP credentials.
	Password string `pulumi:"password"`
	// RFC2617 compliant username associated with the SIP credentials.
	Username string `pulumi:"username"`
}

type VoiceConnectorTerminationCredentialsCredentialArgs struct {
	// RFC2617 compliant password associated with the SIP credentials.
	Password pulumix.Input[string] `pulumi:"password"`
	// RFC2617 compliant username associated with the SIP credentials.
	Username pulumix.Input[string] `pulumi:"username"`
}

func (VoiceConnectorTerminationCredentialsCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorTerminationCredentialsCredential)(nil)).Elem()
}

func (i VoiceConnectorTerminationCredentialsCredentialArgs) ToVoiceConnectorTerminationCredentialsCredentialOutput() VoiceConnectorTerminationCredentialsCredentialOutput {
	return i.ToVoiceConnectorTerminationCredentialsCredentialOutputWithContext(context.Background())
}

func (i VoiceConnectorTerminationCredentialsCredentialArgs) ToVoiceConnectorTerminationCredentialsCredentialOutputWithContext(ctx context.Context) VoiceConnectorTerminationCredentialsCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorTerminationCredentialsCredentialOutput)
}

func (i *VoiceConnectorTerminationCredentialsCredentialArgs) ToOutput(ctx context.Context) pulumix.Output[*VoiceConnectorTerminationCredentialsCredentialArgs] {
	return pulumix.Val(i)
}

type VoiceConnectorTerminationCredentialsCredentialOutput struct{ *pulumi.OutputState }

func (VoiceConnectorTerminationCredentialsCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorTerminationCredentialsCredential)(nil)).Elem()
}

func (o VoiceConnectorTerminationCredentialsCredentialOutput) ToVoiceConnectorTerminationCredentialsCredentialOutput() VoiceConnectorTerminationCredentialsCredentialOutput {
	return o
}

func (o VoiceConnectorTerminationCredentialsCredentialOutput) ToVoiceConnectorTerminationCredentialsCredentialOutputWithContext(ctx context.Context) VoiceConnectorTerminationCredentialsCredentialOutput {
	return o
}

func (o VoiceConnectorTerminationCredentialsCredentialOutput) ToOutput(ctx context.Context) pulumix.Output[VoiceConnectorTerminationCredentialsCredential] {
	return pulumix.Output[VoiceConnectorTerminationCredentialsCredential]{
		OutputState: o.OutputState,
	}
}

// RFC2617 compliant password associated with the SIP credentials.
func (o VoiceConnectorTerminationCredentialsCredentialOutput) Password() pulumix.Output[string] {
	return pulumix.Apply[VoiceConnectorTerminationCredentialsCredential](o, func(v VoiceConnectorTerminationCredentialsCredential) string { return v.Password })
}

// RFC2617 compliant username associated with the SIP credentials.
func (o VoiceConnectorTerminationCredentialsCredentialOutput) Username() pulumix.Output[string] {
	return pulumix.Apply[VoiceConnectorTerminationCredentialsCredential](o, func(v VoiceConnectorTerminationCredentialsCredential) string { return v.Username })
}

func init() {
	pulumi.RegisterOutputType(SdkvoiceGlobalSettingsVoiceConnectorOutput{})
	pulumi.RegisterOutputType(SdkvoiceSipMediaApplicationEndpointsOutput{})
	pulumi.RegisterOutputType(SdkvoiceSipRuleTargetApplicationOutput{})
	pulumi.RegisterOutputType(SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(VoiceConnectorGroupConnectorOutput{})
	pulumi.RegisterOutputType(VoiceConnectorOrganizationRouteOutput{})
	pulumi.RegisterOutputType(VoiceConnectorStreamingMediaInsightsConfigurationOutput{})
	pulumi.RegisterOutputType(VoiceConnectorTerminationCredentialsCredentialOutput{})
}
