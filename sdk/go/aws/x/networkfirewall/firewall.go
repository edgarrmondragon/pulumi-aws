// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AWS Network Firewall Firewall Resource
type Firewall struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) that identifies the firewall.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
	DeleteProtection pulumix.Output[*bool] `pulumi:"deleteProtection"`
	// A friendly description of the firewall.
	Description pulumix.Output[*string] `pulumi:"description"`
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration pulumix.GPtrOutput[FirewallEncryptionConfiguration, FirewallEncryptionConfigurationOutput] `pulumi:"encryptionConfiguration"`
	// The Amazon Resource Name (ARN) of the VPC Firewall policy.
	FirewallPolicyArn pulumix.Output[string] `pulumi:"firewallPolicyArn"`
	// A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
	FirewallPolicyChangeProtection pulumix.Output[*bool] `pulumi:"firewallPolicyChangeProtection"`
	// Nested list of information about the current status of the firewall.
	FirewallStatuses pulumix.GArrayOutput[FirewallFirewallStatus, FirewallFirewallStatusOutput] `pulumi:"firewallStatuses"`
	// A friendly name of the firewall.
	Name pulumix.Output[string] `pulumi:"name"`
	// A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
	SubnetChangeProtection pulumix.Output[*bool] `pulumi:"subnetChangeProtection"`
	// Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
	SubnetMappings pulumix.GArrayOutput[FirewallSubnetMapping, FirewallSubnetMappingOutput] `pulumi:"subnetMappings"`
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// A string token used when updating a firewall.
	UpdateToken pulumix.Output[string] `pulumi:"updateToken"`
	// The unique identifier of the VPC where AWS Network Firewall should create the firewall.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
}

// NewFirewall registers a new resource with the given unique name, arguments, and options.
func NewFirewall(ctx *pulumi.Context,
	name string, args *FirewallArgs, opts ...pulumi.ResourceOption) (*Firewall, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallPolicyArn == nil {
		return nil, errors.New("invalid value for required argument 'FirewallPolicyArn'")
	}
	if args.SubnetMappings == nil {
		return nil, errors.New("invalid value for required argument 'SubnetMappings'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Firewall
	err := ctx.RegisterResource("aws:networkfirewall/firewall:Firewall", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewall gets an existing Firewall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallState, opts ...pulumi.ResourceOption) (*Firewall, error) {
	var resource Firewall
	err := ctx.ReadResource("aws:networkfirewall/firewall:Firewall", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Firewall resources.
type firewallState struct {
	// The Amazon Resource Name (ARN) that identifies the firewall.
	Arn *string `pulumi:"arn"`
	// A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
	DeleteProtection *bool `pulumi:"deleteProtection"`
	// A friendly description of the firewall.
	Description *string `pulumi:"description"`
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration *FirewallEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// The Amazon Resource Name (ARN) of the VPC Firewall policy.
	FirewallPolicyArn *string `pulumi:"firewallPolicyArn"`
	// A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
	FirewallPolicyChangeProtection *bool `pulumi:"firewallPolicyChangeProtection"`
	// Nested list of information about the current status of the firewall.
	FirewallStatuses []FirewallFirewallStatus `pulumi:"firewallStatuses"`
	// A friendly name of the firewall.
	Name *string `pulumi:"name"`
	// A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
	SubnetChangeProtection *bool `pulumi:"subnetChangeProtection"`
	// Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
	SubnetMappings []FirewallSubnetMapping `pulumi:"subnetMappings"`
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// A string token used when updating a firewall.
	UpdateToken *string `pulumi:"updateToken"`
	// The unique identifier of the VPC where AWS Network Firewall should create the firewall.
	VpcId *string `pulumi:"vpcId"`
}

type FirewallState struct {
	// The Amazon Resource Name (ARN) that identifies the firewall.
	Arn pulumix.Input[*string]
	// A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
	DeleteProtection pulumix.Input[*bool]
	// A friendly description of the firewall.
	Description pulumix.Input[*string]
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration pulumix.Input[*FirewallEncryptionConfigurationArgs]
	// The Amazon Resource Name (ARN) of the VPC Firewall policy.
	FirewallPolicyArn pulumix.Input[*string]
	// A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
	FirewallPolicyChangeProtection pulumix.Input[*bool]
	// Nested list of information about the current status of the firewall.
	FirewallStatuses pulumix.Input[[]*FirewallFirewallStatusArgs]
	// A friendly name of the firewall.
	Name pulumix.Input[*string]
	// A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
	SubnetChangeProtection pulumix.Input[*bool]
	// Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
	SubnetMappings pulumix.Input[[]*FirewallSubnetMappingArgs]
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// A string token used when updating a firewall.
	UpdateToken pulumix.Input[*string]
	// The unique identifier of the VPC where AWS Network Firewall should create the firewall.
	VpcId pulumix.Input[*string]
}

func (FirewallState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallState)(nil)).Elem()
}

type firewallArgs struct {
	// A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
	DeleteProtection *bool `pulumi:"deleteProtection"`
	// A friendly description of the firewall.
	Description *string `pulumi:"description"`
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration *FirewallEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// The Amazon Resource Name (ARN) of the VPC Firewall policy.
	FirewallPolicyArn string `pulumi:"firewallPolicyArn"`
	// A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
	FirewallPolicyChangeProtection *bool `pulumi:"firewallPolicyChangeProtection"`
	// A friendly name of the firewall.
	Name *string `pulumi:"name"`
	// A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
	SubnetChangeProtection *bool `pulumi:"subnetChangeProtection"`
	// Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
	SubnetMappings []FirewallSubnetMapping `pulumi:"subnetMappings"`
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The unique identifier of the VPC where AWS Network Firewall should create the firewall.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Firewall resource.
type FirewallArgs struct {
	// A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
	DeleteProtection pulumix.Input[*bool]
	// A friendly description of the firewall.
	Description pulumix.Input[*string]
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration pulumix.Input[*FirewallEncryptionConfigurationArgs]
	// The Amazon Resource Name (ARN) of the VPC Firewall policy.
	FirewallPolicyArn pulumix.Input[string]
	// A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
	FirewallPolicyChangeProtection pulumix.Input[*bool]
	// A friendly name of the firewall.
	Name pulumix.Input[*string]
	// A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
	SubnetChangeProtection pulumix.Input[*bool]
	// Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
	SubnetMappings pulumix.Input[[]*FirewallSubnetMappingArgs]
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The unique identifier of the VPC where AWS Network Firewall should create the firewall.
	VpcId pulumix.Input[string]
}

func (FirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallArgs)(nil)).Elem()
}

type FirewallOutput struct{ *pulumi.OutputState }

func (FirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Firewall)(nil)).Elem()
}

func (o FirewallOutput) ToFirewallOutput() FirewallOutput {
	return o
}

func (o FirewallOutput) ToFirewallOutputWithContext(ctx context.Context) FirewallOutput {
	return o
}

func (o FirewallOutput) ToOutput(ctx context.Context) pulumix.Output[Firewall] {
	return pulumix.Output[Firewall]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) that identifies the firewall.
func (o FirewallOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A boolean flag indicating whether it is possible to delete the firewall. Defaults to `false`.
func (o FirewallOutput) DeleteProtection() pulumix.Output[*bool] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.Output[*bool] { return v.DeleteProtection })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A friendly description of the firewall.
func (o FirewallOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// KMS encryption configuration settings. See Encryption Configuration below for details.
func (o FirewallOutput) EncryptionConfiguration() pulumix.GPtrOutput[FirewallEncryptionConfiguration, FirewallEncryptionConfigurationOutput] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.GPtrOutput[FirewallEncryptionConfiguration, FirewallEncryptionConfigurationOutput] {
		return v.EncryptionConfiguration
	})
	unwrapped := pulumix.Flatten[*FirewallEncryptionConfiguration, pulumix.GPtrOutput[FirewallEncryptionConfiguration, FirewallEncryptionConfigurationOutput]](value)
	return pulumix.GPtrOutput[FirewallEncryptionConfiguration, FirewallEncryptionConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) of the VPC Firewall policy.
func (o FirewallOutput) FirewallPolicyArn() pulumix.Output[string] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.Output[string] { return v.FirewallPolicyArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A boolean flag indicating whether it is possible to change the associated firewall policy. Defaults to `false`.
func (o FirewallOutput) FirewallPolicyChangeProtection() pulumix.Output[*bool] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.Output[*bool] { return v.FirewallPolicyChangeProtection })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Nested list of information about the current status of the firewall.
func (o FirewallOutput) FirewallStatuses() pulumix.GArrayOutput[FirewallFirewallStatus, FirewallFirewallStatusOutput] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.GArrayOutput[FirewallFirewallStatus, FirewallFirewallStatusOutput] {
		return v.FirewallStatuses
	})
	unwrapped := pulumix.Flatten[[]FirewallFirewallStatus, pulumix.GArrayOutput[FirewallFirewallStatus, FirewallFirewallStatusOutput]](value)
	return pulumix.GArrayOutput[FirewallFirewallStatus, FirewallFirewallStatusOutput]{OutputState: unwrapped.OutputState}
}

// A friendly name of the firewall.
func (o FirewallOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A boolean flag indicating whether it is possible to change the associated subnet(s). Defaults to `false`.
func (o FirewallOutput) SubnetChangeProtection() pulumix.Output[*bool] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.Output[*bool] { return v.SubnetChangeProtection })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
func (o FirewallOutput) SubnetMappings() pulumix.GArrayOutput[FirewallSubnetMapping, FirewallSubnetMappingOutput] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.GArrayOutput[FirewallSubnetMapping, FirewallSubnetMappingOutput] {
		return v.SubnetMappings
	})
	unwrapped := pulumix.Flatten[[]FirewallSubnetMapping, pulumix.GArrayOutput[FirewallSubnetMapping, FirewallSubnetMappingOutput]](value)
	return pulumix.GArrayOutput[FirewallSubnetMapping, FirewallSubnetMappingOutput]{OutputState: unwrapped.OutputState}
}

// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FirewallOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FirewallOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A string token used when updating a firewall.
func (o FirewallOutput) UpdateToken() pulumix.Output[string] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.Output[string] { return v.UpdateToken })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The unique identifier of the VPC where AWS Network Firewall should create the firewall.
func (o FirewallOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[Firewall](o, func(v Firewall) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(FirewallOutput{})
}
