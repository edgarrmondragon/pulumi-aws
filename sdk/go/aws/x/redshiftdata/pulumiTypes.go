// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshiftdata

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type StatementParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

type StatementParameterArgs struct {
	Name  pulumix.Input[string] `pulumi:"name"`
	Value pulumix.Input[string] `pulumi:"value"`
}

func (StatementParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementParameter)(nil)).Elem()
}

func (i StatementParameterArgs) ToStatementParameterOutput() StatementParameterOutput {
	return i.ToStatementParameterOutputWithContext(context.Background())
}

func (i StatementParameterArgs) ToStatementParameterOutputWithContext(ctx context.Context) StatementParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatementParameterOutput)
}

func (i *StatementParameterArgs) ToOutput(ctx context.Context) pulumix.Output[*StatementParameterArgs] {
	return pulumix.Val(i)
}

type StatementParameterOutput struct{ *pulumi.OutputState }

func (StatementParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementParameter)(nil)).Elem()
}

func (o StatementParameterOutput) ToStatementParameterOutput() StatementParameterOutput {
	return o
}

func (o StatementParameterOutput) ToStatementParameterOutputWithContext(ctx context.Context) StatementParameterOutput {
	return o
}

func (o StatementParameterOutput) ToOutput(ctx context.Context) pulumix.Output[StatementParameter] {
	return pulumix.Output[StatementParameter]{
		OutputState: o.OutputState,
	}
}

func (o StatementParameterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[StatementParameter](o, func(v StatementParameter) string { return v.Name })
}

func (o StatementParameterOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[StatementParameter](o, func(v StatementParameter) string { return v.Value })
}

func init() {
	pulumi.RegisterOutputType(StatementParameterOutput{})
}
