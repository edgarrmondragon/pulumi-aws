// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CodeDeploy CustomActionType
type CustomActionType struct {
	pulumi.CustomResourceState

	// The action ARN.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category pulumix.Output[string] `pulumi:"category"`
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties pulumix.GArrayOutput[CustomActionTypeConfigurationProperty, CustomActionTypeConfigurationPropertyOutput] `pulumi:"configurationProperties"`
	// The details of the input artifact for the action.
	InputArtifactDetails pulumix.GPtrOutput[CustomActionTypeInputArtifactDetails, CustomActionTypeInputArtifactDetailsOutput] `pulumi:"inputArtifactDetails"`
	// The details of the output artifact of the action.
	OutputArtifactDetails pulumix.GPtrOutput[CustomActionTypeOutputArtifactDetails, CustomActionTypeOutputArtifactDetailsOutput] `pulumi:"outputArtifactDetails"`
	// The creator of the action being called.
	Owner pulumix.Output[string] `pulumi:"owner"`
	// The provider of the service used in the custom action
	ProviderName pulumix.Output[string] `pulumi:"providerName"`
	// The settings for an action type.
	Settings pulumix.GPtrOutput[CustomActionTypeSettings, CustomActionTypeSettingsOutput] `pulumi:"settings"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The version identifier of the custom action.
	Version pulumix.Output[string] `pulumi:"version"`
}

// NewCustomActionType registers a new resource with the given unique name, arguments, and options.
func NewCustomActionType(ctx *pulumi.Context,
	name string, args *CustomActionTypeArgs, opts ...pulumi.ResourceOption) (*CustomActionType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Category == nil {
		return nil, errors.New("invalid value for required argument 'Category'")
	}
	if args.InputArtifactDetails == nil {
		return nil, errors.New("invalid value for required argument 'InputArtifactDetails'")
	}
	if args.OutputArtifactDetails == nil {
		return nil, errors.New("invalid value for required argument 'OutputArtifactDetails'")
	}
	if args.ProviderName == nil {
		return nil, errors.New("invalid value for required argument 'ProviderName'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomActionType
	err := ctx.RegisterResource("aws:codepipeline/customActionType:CustomActionType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomActionType gets an existing CustomActionType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomActionType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomActionTypeState, opts ...pulumi.ResourceOption) (*CustomActionType, error) {
	var resource CustomActionType
	err := ctx.ReadResource("aws:codepipeline/customActionType:CustomActionType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomActionType resources.
type customActionTypeState struct {
	// The action ARN.
	Arn *string `pulumi:"arn"`
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category *string `pulumi:"category"`
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties []CustomActionTypeConfigurationProperty `pulumi:"configurationProperties"`
	// The details of the input artifact for the action.
	InputArtifactDetails *CustomActionTypeInputArtifactDetails `pulumi:"inputArtifactDetails"`
	// The details of the output artifact of the action.
	OutputArtifactDetails *CustomActionTypeOutputArtifactDetails `pulumi:"outputArtifactDetails"`
	// The creator of the action being called.
	Owner *string `pulumi:"owner"`
	// The provider of the service used in the custom action
	ProviderName *string `pulumi:"providerName"`
	// The settings for an action type.
	Settings *CustomActionTypeSettings `pulumi:"settings"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The version identifier of the custom action.
	Version *string `pulumi:"version"`
}

type CustomActionTypeState struct {
	// The action ARN.
	Arn pulumix.Input[*string]
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category pulumix.Input[*string]
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties pulumix.Input[[]*CustomActionTypeConfigurationPropertyArgs]
	// The details of the input artifact for the action.
	InputArtifactDetails pulumix.Input[*CustomActionTypeInputArtifactDetailsArgs]
	// The details of the output artifact of the action.
	OutputArtifactDetails pulumix.Input[*CustomActionTypeOutputArtifactDetailsArgs]
	// The creator of the action being called.
	Owner pulumix.Input[*string]
	// The provider of the service used in the custom action
	ProviderName pulumix.Input[*string]
	// The settings for an action type.
	Settings pulumix.Input[*CustomActionTypeSettingsArgs]
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The version identifier of the custom action.
	Version pulumix.Input[*string]
}

func (CustomActionTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*customActionTypeState)(nil)).Elem()
}

type customActionTypeArgs struct {
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category string `pulumi:"category"`
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties []CustomActionTypeConfigurationProperty `pulumi:"configurationProperties"`
	// The details of the input artifact for the action.
	InputArtifactDetails CustomActionTypeInputArtifactDetails `pulumi:"inputArtifactDetails"`
	// The details of the output artifact of the action.
	OutputArtifactDetails CustomActionTypeOutputArtifactDetails `pulumi:"outputArtifactDetails"`
	// The provider of the service used in the custom action
	ProviderName string `pulumi:"providerName"`
	// The settings for an action type.
	Settings *CustomActionTypeSettings `pulumi:"settings"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The version identifier of the custom action.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a CustomActionType resource.
type CustomActionTypeArgs struct {
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category pulumix.Input[string]
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties pulumix.Input[[]*CustomActionTypeConfigurationPropertyArgs]
	// The details of the input artifact for the action.
	InputArtifactDetails pulumix.Input[*CustomActionTypeInputArtifactDetailsArgs]
	// The details of the output artifact of the action.
	OutputArtifactDetails pulumix.Input[*CustomActionTypeOutputArtifactDetailsArgs]
	// The provider of the service used in the custom action
	ProviderName pulumix.Input[string]
	// The settings for an action type.
	Settings pulumix.Input[*CustomActionTypeSettingsArgs]
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The version identifier of the custom action.
	Version pulumix.Input[string]
}

func (CustomActionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customActionTypeArgs)(nil)).Elem()
}

type CustomActionTypeOutput struct{ *pulumi.OutputState }

func (CustomActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionType)(nil)).Elem()
}

func (o CustomActionTypeOutput) ToCustomActionTypeOutput() CustomActionTypeOutput {
	return o
}

func (o CustomActionTypeOutput) ToCustomActionTypeOutputWithContext(ctx context.Context) CustomActionTypeOutput {
	return o
}

func (o CustomActionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[CustomActionType] {
	return pulumix.Output[CustomActionType]{
		OutputState: o.OutputState,
	}
}

// The action ARN.
func (o CustomActionTypeOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
func (o CustomActionTypeOutput) Category() pulumix.Output[string] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.Output[string] { return v.Category })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The configuration properties for the custom action. Max 10 items.
func (o CustomActionTypeOutput) ConfigurationProperties() pulumix.GArrayOutput[CustomActionTypeConfigurationProperty, CustomActionTypeConfigurationPropertyOutput] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.GArrayOutput[CustomActionTypeConfigurationProperty, CustomActionTypeConfigurationPropertyOutput] {
		return v.ConfigurationProperties
	})
	unwrapped := pulumix.Flatten[[]CustomActionTypeConfigurationProperty, pulumix.GArrayOutput[CustomActionTypeConfigurationProperty, CustomActionTypeConfigurationPropertyOutput]](value)
	return pulumix.GArrayOutput[CustomActionTypeConfigurationProperty, CustomActionTypeConfigurationPropertyOutput]{OutputState: unwrapped.OutputState}
}

// The details of the input artifact for the action.
func (o CustomActionTypeOutput) InputArtifactDetails() pulumix.GPtrOutput[CustomActionTypeInputArtifactDetails, CustomActionTypeInputArtifactDetailsOutput] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.GPtrOutput[CustomActionTypeInputArtifactDetails, CustomActionTypeInputArtifactDetailsOutput] {
		return v.InputArtifactDetails
	})
	unwrapped := pulumix.Flatten[*CustomActionTypeInputArtifactDetails, pulumix.GPtrOutput[CustomActionTypeInputArtifactDetails, CustomActionTypeInputArtifactDetailsOutput]](value)
	return pulumix.GPtrOutput[CustomActionTypeInputArtifactDetails, CustomActionTypeInputArtifactDetailsOutput]{OutputState: unwrapped.OutputState}
}

// The details of the output artifact of the action.
func (o CustomActionTypeOutput) OutputArtifactDetails() pulumix.GPtrOutput[CustomActionTypeOutputArtifactDetails, CustomActionTypeOutputArtifactDetailsOutput] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.GPtrOutput[CustomActionTypeOutputArtifactDetails, CustomActionTypeOutputArtifactDetailsOutput] {
		return v.OutputArtifactDetails
	})
	unwrapped := pulumix.Flatten[*CustomActionTypeOutputArtifactDetails, pulumix.GPtrOutput[CustomActionTypeOutputArtifactDetails, CustomActionTypeOutputArtifactDetailsOutput]](value)
	return pulumix.GPtrOutput[CustomActionTypeOutputArtifactDetails, CustomActionTypeOutputArtifactDetailsOutput]{OutputState: unwrapped.OutputState}
}

// The creator of the action being called.
func (o CustomActionTypeOutput) Owner() pulumix.Output[string] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.Output[string] { return v.Owner })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The provider of the service used in the custom action
func (o CustomActionTypeOutput) ProviderName() pulumix.Output[string] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.Output[string] { return v.ProviderName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The settings for an action type.
func (o CustomActionTypeOutput) Settings() pulumix.GPtrOutput[CustomActionTypeSettings, CustomActionTypeSettingsOutput] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.GPtrOutput[CustomActionTypeSettings, CustomActionTypeSettingsOutput] {
		return v.Settings
	})
	unwrapped := pulumix.Flatten[*CustomActionTypeSettings, pulumix.GPtrOutput[CustomActionTypeSettings, CustomActionTypeSettingsOutput]](value)
	return pulumix.GPtrOutput[CustomActionTypeSettings, CustomActionTypeSettingsOutput]{OutputState: unwrapped.OutputState}
}

// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CustomActionTypeOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CustomActionTypeOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The version identifier of the custom action.
func (o CustomActionTypeOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[CustomActionType](o, func(v CustomActionType) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(CustomActionTypeOutput{})
}
