// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS QuickSight Folder Membership.
type FolderMembership struct {
	pulumi.CustomResourceState

	// AWS account ID.
	AwsAccountId pulumix.Output[string] `pulumi:"awsAccountId"`
	// Identifier for the folder.
	FolderId pulumix.Output[string] `pulumi:"folderId"`
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId pulumix.Output[string] `pulumi:"memberId"`
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType pulumix.Output[string] `pulumi:"memberType"`
}

// NewFolderMembership registers a new resource with the given unique name, arguments, and options.
func NewFolderMembership(ctx *pulumi.Context,
	name string, args *FolderMembershipArgs, opts ...pulumi.ResourceOption) (*FolderMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FolderId == nil {
		return nil, errors.New("invalid value for required argument 'FolderId'")
	}
	if args.MemberId == nil {
		return nil, errors.New("invalid value for required argument 'MemberId'")
	}
	if args.MemberType == nil {
		return nil, errors.New("invalid value for required argument 'MemberType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FolderMembership
	err := ctx.RegisterResource("aws:quicksight/folderMembership:FolderMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFolderMembership gets an existing FolderMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFolderMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FolderMembershipState, opts ...pulumi.ResourceOption) (*FolderMembership, error) {
	var resource FolderMembership
	err := ctx.ReadResource("aws:quicksight/folderMembership:FolderMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FolderMembership resources.
type folderMembershipState struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Identifier for the folder.
	FolderId *string `pulumi:"folderId"`
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId *string `pulumi:"memberId"`
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType *string `pulumi:"memberType"`
}

type FolderMembershipState struct {
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// Identifier for the folder.
	FolderId pulumix.Input[*string]
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId pulumix.Input[*string]
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType pulumix.Input[*string]
}

func (FolderMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*folderMembershipState)(nil)).Elem()
}

type folderMembershipArgs struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Identifier for the folder.
	FolderId string `pulumi:"folderId"`
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId string `pulumi:"memberId"`
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType string `pulumi:"memberType"`
}

// The set of arguments for constructing a FolderMembership resource.
type FolderMembershipArgs struct {
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// Identifier for the folder.
	FolderId pulumix.Input[string]
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId pulumix.Input[string]
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType pulumix.Input[string]
}

func (FolderMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*folderMembershipArgs)(nil)).Elem()
}

type FolderMembershipOutput struct{ *pulumi.OutputState }

func (FolderMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FolderMembership)(nil)).Elem()
}

func (o FolderMembershipOutput) ToFolderMembershipOutput() FolderMembershipOutput {
	return o
}

func (o FolderMembershipOutput) ToFolderMembershipOutputWithContext(ctx context.Context) FolderMembershipOutput {
	return o
}

func (o FolderMembershipOutput) ToOutput(ctx context.Context) pulumix.Output[FolderMembership] {
	return pulumix.Output[FolderMembership]{
		OutputState: o.OutputState,
	}
}

// AWS account ID.
func (o FolderMembershipOutput) AwsAccountId() pulumix.Output[string] {
	value := pulumix.Apply[FolderMembership](o, func(v FolderMembership) pulumix.Output[string] { return v.AwsAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier for the folder.
func (o FolderMembershipOutput) FolderId() pulumix.Output[string] {
	value := pulumix.Apply[FolderMembership](o, func(v FolderMembership) pulumix.Output[string] { return v.FolderId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the asset (the dashboard, analysis, or dataset).
func (o FolderMembershipOutput) MemberId() pulumix.Output[string] {
	value := pulumix.Apply[FolderMembership](o, func(v FolderMembership) pulumix.Output[string] { return v.MemberId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
//
// The following arguments are optional:
func (o FolderMembershipOutput) MemberType() pulumix.Output[string] {
	value := pulumix.Apply[FolderMembership](o, func(v FolderMembership) pulumix.Output[string] { return v.MemberType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(FolderMembershipOutput{})
}
