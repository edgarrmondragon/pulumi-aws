// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an S3 Storage Lens configuration.
type StorageLensConfiguration struct {
	pulumi.CustomResourceState

	// The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Output[string] `pulumi:"accountId"`
	// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ID of the S3 Storage Lens configuration.
	ConfigId pulumix.Output[string] `pulumi:"configId"`
	// The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
	StorageLensConfiguration pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfiguration, StorageLensConfigurationStorageLensConfigurationOutput] `pulumi:"storageLensConfiguration"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewStorageLensConfiguration registers a new resource with the given unique name, arguments, and options.
func NewStorageLensConfiguration(ctx *pulumi.Context,
	name string, args *StorageLensConfigurationArgs, opts ...pulumi.ResourceOption) (*StorageLensConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.StorageLensConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'StorageLensConfiguration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StorageLensConfiguration
	err := ctx.RegisterResource("aws:s3control/storageLensConfiguration:StorageLensConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageLensConfiguration gets an existing StorageLensConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageLensConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageLensConfigurationState, opts ...pulumi.ResourceOption) (*StorageLensConfiguration, error) {
	var resource StorageLensConfiguration
	err := ctx.ReadResource("aws:s3control/storageLensConfiguration:StorageLensConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageLensConfiguration resources.
type storageLensConfigurationState struct {
	// The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
	AccountId *string `pulumi:"accountId"`
	// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
	Arn *string `pulumi:"arn"`
	// The ID of the S3 Storage Lens configuration.
	ConfigId *string `pulumi:"configId"`
	// The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
	StorageLensConfiguration *StorageLensConfigurationStorageLensConfiguration `pulumi:"storageLensConfiguration"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type StorageLensConfigurationState struct {
	// The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
	Arn pulumix.Input[*string]
	// The ID of the S3 Storage Lens configuration.
	ConfigId pulumix.Input[*string]
	// The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
	StorageLensConfiguration pulumix.Input[*StorageLensConfigurationStorageLensConfigurationArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (StorageLensConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageLensConfigurationState)(nil)).Elem()
}

type storageLensConfigurationArgs struct {
	// The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
	AccountId *string `pulumi:"accountId"`
	// The ID of the S3 Storage Lens configuration.
	ConfigId string `pulumi:"configId"`
	// The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
	StorageLensConfiguration StorageLensConfigurationStorageLensConfiguration `pulumi:"storageLensConfiguration"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a StorageLensConfiguration resource.
type StorageLensConfigurationArgs struct {
	// The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Input[*string]
	// The ID of the S3 Storage Lens configuration.
	ConfigId pulumix.Input[string]
	// The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
	StorageLensConfiguration pulumix.Input[*StorageLensConfigurationStorageLensConfigurationArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (StorageLensConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageLensConfigurationArgs)(nil)).Elem()
}

type StorageLensConfigurationOutput struct{ *pulumi.OutputState }

func (StorageLensConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageLensConfiguration)(nil)).Elem()
}

func (o StorageLensConfigurationOutput) ToStorageLensConfigurationOutput() StorageLensConfigurationOutput {
	return o
}

func (o StorageLensConfigurationOutput) ToStorageLensConfigurationOutputWithContext(ctx context.Context) StorageLensConfigurationOutput {
	return o
}

func (o StorageLensConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[StorageLensConfiguration] {
	return pulumix.Output[StorageLensConfiguration]{
		OutputState: o.OutputState,
	}
}

// The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
func (o StorageLensConfigurationOutput) AccountId() pulumix.Output[string] {
	value := pulumix.Apply[StorageLensConfiguration](o, func(v StorageLensConfiguration) pulumix.Output[string] { return v.AccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the Amazon Web Services organization.
func (o StorageLensConfigurationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[StorageLensConfiguration](o, func(v StorageLensConfiguration) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the S3 Storage Lens configuration.
func (o StorageLensConfigurationOutput) ConfigId() pulumix.Output[string] {
	value := pulumix.Apply[StorageLensConfiguration](o, func(v StorageLensConfiguration) pulumix.Output[string] { return v.ConfigId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
func (o StorageLensConfigurationOutput) StorageLensConfiguration() pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfiguration, StorageLensConfigurationStorageLensConfigurationOutput] {
	value := pulumix.Apply[StorageLensConfiguration](o, func(v StorageLensConfiguration) pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfiguration, StorageLensConfigurationStorageLensConfigurationOutput] {
		return v.StorageLensConfiguration
	})
	unwrapped := pulumix.Flatten[*StorageLensConfigurationStorageLensConfiguration, pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfiguration, StorageLensConfigurationStorageLensConfigurationOutput]](value)
	return pulumix.GPtrOutput[StorageLensConfigurationStorageLensConfiguration, StorageLensConfigurationStorageLensConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o StorageLensConfigurationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[StorageLensConfiguration](o, func(v StorageLensConfiguration) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o StorageLensConfigurationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[StorageLensConfiguration](o, func(v StorageLensConfiguration) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(StorageLensConfigurationOutput{})
}
