// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Associates a customer gateway with a device and optionally, with a link.
// If you specify a link, it must be associated with the specified device.
type CustomerGatewayAssociation struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the customer gateway.
	CustomerGatewayArn pulumix.Output[string] `pulumi:"customerGatewayArn"`
	// The ID of the device.
	DeviceId pulumix.Output[string] `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId pulumix.Output[string] `pulumi:"globalNetworkId"`
	// The ID of the link.
	LinkId pulumix.Output[*string] `pulumi:"linkId"`
}

// NewCustomerGatewayAssociation registers a new resource with the given unique name, arguments, and options.
func NewCustomerGatewayAssociation(ctx *pulumi.Context,
	name string, args *CustomerGatewayAssociationArgs, opts ...pulumi.ResourceOption) (*CustomerGatewayAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomerGatewayArn == nil {
		return nil, errors.New("invalid value for required argument 'CustomerGatewayArn'")
	}
	if args.DeviceId == nil {
		return nil, errors.New("invalid value for required argument 'DeviceId'")
	}
	if args.GlobalNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'GlobalNetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomerGatewayAssociation
	err := ctx.RegisterResource("aws:networkmanager/customerGatewayAssociation:CustomerGatewayAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomerGatewayAssociation gets an existing CustomerGatewayAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomerGatewayAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomerGatewayAssociationState, opts ...pulumi.ResourceOption) (*CustomerGatewayAssociation, error) {
	var resource CustomerGatewayAssociation
	err := ctx.ReadResource("aws:networkmanager/customerGatewayAssociation:CustomerGatewayAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomerGatewayAssociation resources.
type customerGatewayAssociationState struct {
	// The Amazon Resource Name (ARN) of the customer gateway.
	CustomerGatewayArn *string `pulumi:"customerGatewayArn"`
	// The ID of the device.
	DeviceId *string `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId *string `pulumi:"globalNetworkId"`
	// The ID of the link.
	LinkId *string `pulumi:"linkId"`
}

type CustomerGatewayAssociationState struct {
	// The Amazon Resource Name (ARN) of the customer gateway.
	CustomerGatewayArn pulumix.Input[*string]
	// The ID of the device.
	DeviceId pulumix.Input[*string]
	// The ID of the global network.
	GlobalNetworkId pulumix.Input[*string]
	// The ID of the link.
	LinkId pulumix.Input[*string]
}

func (CustomerGatewayAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*customerGatewayAssociationState)(nil)).Elem()
}

type customerGatewayAssociationArgs struct {
	// The Amazon Resource Name (ARN) of the customer gateway.
	CustomerGatewayArn string `pulumi:"customerGatewayArn"`
	// The ID of the device.
	DeviceId string `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// The ID of the link.
	LinkId *string `pulumi:"linkId"`
}

// The set of arguments for constructing a CustomerGatewayAssociation resource.
type CustomerGatewayAssociationArgs struct {
	// The Amazon Resource Name (ARN) of the customer gateway.
	CustomerGatewayArn pulumix.Input[string]
	// The ID of the device.
	DeviceId pulumix.Input[string]
	// The ID of the global network.
	GlobalNetworkId pulumix.Input[string]
	// The ID of the link.
	LinkId pulumix.Input[*string]
}

func (CustomerGatewayAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customerGatewayAssociationArgs)(nil)).Elem()
}

type CustomerGatewayAssociationOutput struct{ *pulumi.OutputState }

func (CustomerGatewayAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerGatewayAssociation)(nil)).Elem()
}

func (o CustomerGatewayAssociationOutput) ToCustomerGatewayAssociationOutput() CustomerGatewayAssociationOutput {
	return o
}

func (o CustomerGatewayAssociationOutput) ToCustomerGatewayAssociationOutputWithContext(ctx context.Context) CustomerGatewayAssociationOutput {
	return o
}

func (o CustomerGatewayAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[CustomerGatewayAssociation] {
	return pulumix.Output[CustomerGatewayAssociation]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the customer gateway.
func (o CustomerGatewayAssociationOutput) CustomerGatewayArn() pulumix.Output[string] {
	value := pulumix.Apply[CustomerGatewayAssociation](o, func(v CustomerGatewayAssociation) pulumix.Output[string] { return v.CustomerGatewayArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the device.
func (o CustomerGatewayAssociationOutput) DeviceId() pulumix.Output[string] {
	value := pulumix.Apply[CustomerGatewayAssociation](o, func(v CustomerGatewayAssociation) pulumix.Output[string] { return v.DeviceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the global network.
func (o CustomerGatewayAssociationOutput) GlobalNetworkId() pulumix.Output[string] {
	value := pulumix.Apply[CustomerGatewayAssociation](o, func(v CustomerGatewayAssociation) pulumix.Output[string] { return v.GlobalNetworkId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the link.
func (o CustomerGatewayAssociationOutput) LinkId() pulumix.Output[*string] {
	value := pulumix.Apply[CustomerGatewayAssociation](o, func(v CustomerGatewayAssociation) pulumix.Output[*string] { return v.LinkId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(CustomerGatewayAssociationOutput{})
}
