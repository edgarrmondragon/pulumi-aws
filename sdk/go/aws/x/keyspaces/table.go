// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keyspaces

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Keyspaces Table.
//
// More information about Keyspaces tables can be found in the [Keyspaces Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/working-with-tables.html).
type Table struct {
	pulumi.CustomResourceState

	// The ARN of the table.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies the read/write throughput capacity mode for the table.
	CapacitySpecification pulumix.GPtrOutput[TableCapacitySpecification, TableCapacitySpecificationOutput] `pulumi:"capacitySpecification"`
	// Enables client-side timestamps for the table. By default, the setting is disabled.
	ClientSideTimestamps pulumix.GPtrOutput[TableClientSideTimestamps, TableClientSideTimestampsOutput] `pulumi:"clientSideTimestamps"`
	// A description of the table.
	Comment pulumix.GPtrOutput[TableComment, TableCommentOutput] `pulumi:"comment"`
	// The default Time to Live setting in seconds for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl).
	DefaultTimeToLive pulumix.Output[*int] `pulumi:"defaultTimeToLive"`
	// Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html).
	EncryptionSpecification pulumix.GPtrOutput[TableEncryptionSpecification, TableEncryptionSpecificationOutput] `pulumi:"encryptionSpecification"`
	// The name of the keyspace that the table is going to be created in.
	KeyspaceName pulumix.Output[string] `pulumi:"keyspaceName"`
	// Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html).
	PointInTimeRecovery pulumix.GPtrOutput[TablePointInTimeRecovery, TablePointInTimeRecoveryOutput] `pulumi:"pointInTimeRecovery"`
	// Describes the schema of the table.
	SchemaDefinition pulumix.GPtrOutput[TableSchemaDefinition, TableSchemaDefinitionOutput] `pulumi:"schemaDefinition"`
	// The name of the table.
	//
	// The following arguments are optional:
	TableName pulumix.Output[string] `pulumi:"tableName"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Enables Time to Live custom settings for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html).
	Ttl pulumix.GPtrOutput[TableTtl, TableTtlOutput] `pulumi:"ttl"`
}

// NewTable registers a new resource with the given unique name, arguments, and options.
func NewTable(ctx *pulumi.Context,
	name string, args *TableArgs, opts ...pulumi.ResourceOption) (*Table, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KeyspaceName == nil {
		return nil, errors.New("invalid value for required argument 'KeyspaceName'")
	}
	if args.SchemaDefinition == nil {
		return nil, errors.New("invalid value for required argument 'SchemaDefinition'")
	}
	if args.TableName == nil {
		return nil, errors.New("invalid value for required argument 'TableName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Table
	err := ctx.RegisterResource("aws:keyspaces/table:Table", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTable gets an existing Table resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TableState, opts ...pulumi.ResourceOption) (*Table, error) {
	var resource Table
	err := ctx.ReadResource("aws:keyspaces/table:Table", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Table resources.
type tableState struct {
	// The ARN of the table.
	Arn *string `pulumi:"arn"`
	// Specifies the read/write throughput capacity mode for the table.
	CapacitySpecification *TableCapacitySpecification `pulumi:"capacitySpecification"`
	// Enables client-side timestamps for the table. By default, the setting is disabled.
	ClientSideTimestamps *TableClientSideTimestamps `pulumi:"clientSideTimestamps"`
	// A description of the table.
	Comment *TableComment `pulumi:"comment"`
	// The default Time to Live setting in seconds for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl).
	DefaultTimeToLive *int `pulumi:"defaultTimeToLive"`
	// Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html).
	EncryptionSpecification *TableEncryptionSpecification `pulumi:"encryptionSpecification"`
	// The name of the keyspace that the table is going to be created in.
	KeyspaceName *string `pulumi:"keyspaceName"`
	// Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html).
	PointInTimeRecovery *TablePointInTimeRecovery `pulumi:"pointInTimeRecovery"`
	// Describes the schema of the table.
	SchemaDefinition *TableSchemaDefinition `pulumi:"schemaDefinition"`
	// The name of the table.
	//
	// The following arguments are optional:
	TableName *string `pulumi:"tableName"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Enables Time to Live custom settings for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html).
	Ttl *TableTtl `pulumi:"ttl"`
}

type TableState struct {
	// The ARN of the table.
	Arn pulumix.Input[*string]
	// Specifies the read/write throughput capacity mode for the table.
	CapacitySpecification pulumix.Input[*TableCapacitySpecificationArgs]
	// Enables client-side timestamps for the table. By default, the setting is disabled.
	ClientSideTimestamps pulumix.Input[*TableClientSideTimestampsArgs]
	// A description of the table.
	Comment pulumix.Input[*TableCommentArgs]
	// The default Time to Live setting in seconds for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl).
	DefaultTimeToLive pulumix.Input[*int]
	// Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html).
	EncryptionSpecification pulumix.Input[*TableEncryptionSpecificationArgs]
	// The name of the keyspace that the table is going to be created in.
	KeyspaceName pulumix.Input[*string]
	// Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html).
	PointInTimeRecovery pulumix.Input[*TablePointInTimeRecoveryArgs]
	// Describes the schema of the table.
	SchemaDefinition pulumix.Input[*TableSchemaDefinitionArgs]
	// The name of the table.
	//
	// The following arguments are optional:
	TableName pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Enables Time to Live custom settings for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html).
	Ttl pulumix.Input[*TableTtlArgs]
}

func (TableState) ElementType() reflect.Type {
	return reflect.TypeOf((*tableState)(nil)).Elem()
}

type tableArgs struct {
	// Specifies the read/write throughput capacity mode for the table.
	CapacitySpecification *TableCapacitySpecification `pulumi:"capacitySpecification"`
	// Enables client-side timestamps for the table. By default, the setting is disabled.
	ClientSideTimestamps *TableClientSideTimestamps `pulumi:"clientSideTimestamps"`
	// A description of the table.
	Comment *TableComment `pulumi:"comment"`
	// The default Time to Live setting in seconds for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl).
	DefaultTimeToLive *int `pulumi:"defaultTimeToLive"`
	// Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html).
	EncryptionSpecification *TableEncryptionSpecification `pulumi:"encryptionSpecification"`
	// The name of the keyspace that the table is going to be created in.
	KeyspaceName string `pulumi:"keyspaceName"`
	// Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html).
	PointInTimeRecovery *TablePointInTimeRecovery `pulumi:"pointInTimeRecovery"`
	// Describes the schema of the table.
	SchemaDefinition TableSchemaDefinition `pulumi:"schemaDefinition"`
	// The name of the table.
	//
	// The following arguments are optional:
	TableName string `pulumi:"tableName"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Enables Time to Live custom settings for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html).
	Ttl *TableTtl `pulumi:"ttl"`
}

// The set of arguments for constructing a Table resource.
type TableArgs struct {
	// Specifies the read/write throughput capacity mode for the table.
	CapacitySpecification pulumix.Input[*TableCapacitySpecificationArgs]
	// Enables client-side timestamps for the table. By default, the setting is disabled.
	ClientSideTimestamps pulumix.Input[*TableClientSideTimestampsArgs]
	// A description of the table.
	Comment pulumix.Input[*TableCommentArgs]
	// The default Time to Live setting in seconds for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl).
	DefaultTimeToLive pulumix.Input[*int]
	// Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html).
	EncryptionSpecification pulumix.Input[*TableEncryptionSpecificationArgs]
	// The name of the keyspace that the table is going to be created in.
	KeyspaceName pulumix.Input[string]
	// Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html).
	PointInTimeRecovery pulumix.Input[*TablePointInTimeRecoveryArgs]
	// Describes the schema of the table.
	SchemaDefinition pulumix.Input[*TableSchemaDefinitionArgs]
	// The name of the table.
	//
	// The following arguments are optional:
	TableName pulumix.Input[string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Enables Time to Live custom settings for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html).
	Ttl pulumix.Input[*TableTtlArgs]
}

func (TableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tableArgs)(nil)).Elem()
}

type TableOutput struct{ *pulumi.OutputState }

func (TableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Table)(nil)).Elem()
}

func (o TableOutput) ToTableOutput() TableOutput {
	return o
}

func (o TableOutput) ToTableOutputWithContext(ctx context.Context) TableOutput {
	return o
}

func (o TableOutput) ToOutput(ctx context.Context) pulumix.Output[Table] {
	return pulumix.Output[Table]{
		OutputState: o.OutputState,
	}
}

// The ARN of the table.
func (o TableOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the read/write throughput capacity mode for the table.
func (o TableOutput) CapacitySpecification() pulumix.GPtrOutput[TableCapacitySpecification, TableCapacitySpecificationOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TableCapacitySpecification, TableCapacitySpecificationOutput] {
		return v.CapacitySpecification
	})
	unwrapped := pulumix.Flatten[*TableCapacitySpecification, pulumix.GPtrOutput[TableCapacitySpecification, TableCapacitySpecificationOutput]](value)
	return pulumix.GPtrOutput[TableCapacitySpecification, TableCapacitySpecificationOutput]{OutputState: unwrapped.OutputState}
}

// Enables client-side timestamps for the table. By default, the setting is disabled.
func (o TableOutput) ClientSideTimestamps() pulumix.GPtrOutput[TableClientSideTimestamps, TableClientSideTimestampsOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TableClientSideTimestamps, TableClientSideTimestampsOutput] {
		return v.ClientSideTimestamps
	})
	unwrapped := pulumix.Flatten[*TableClientSideTimestamps, pulumix.GPtrOutput[TableClientSideTimestamps, TableClientSideTimestampsOutput]](value)
	return pulumix.GPtrOutput[TableClientSideTimestamps, TableClientSideTimestampsOutput]{OutputState: unwrapped.OutputState}
}

// A description of the table.
func (o TableOutput) Comment() pulumix.GPtrOutput[TableComment, TableCommentOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TableComment, TableCommentOutput] { return v.Comment })
	unwrapped := pulumix.Flatten[*TableComment, pulumix.GPtrOutput[TableComment, TableCommentOutput]](value)
	return pulumix.GPtrOutput[TableComment, TableCommentOutput]{OutputState: unwrapped.OutputState}
}

// The default Time to Live setting in seconds for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl).
func (o TableOutput) DefaultTimeToLive() pulumix.Output[*int] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.Output[*int] { return v.DefaultTimeToLive })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html).
func (o TableOutput) EncryptionSpecification() pulumix.GPtrOutput[TableEncryptionSpecification, TableEncryptionSpecificationOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TableEncryptionSpecification, TableEncryptionSpecificationOutput] {
		return v.EncryptionSpecification
	})
	unwrapped := pulumix.Flatten[*TableEncryptionSpecification, pulumix.GPtrOutput[TableEncryptionSpecification, TableEncryptionSpecificationOutput]](value)
	return pulumix.GPtrOutput[TableEncryptionSpecification, TableEncryptionSpecificationOutput]{OutputState: unwrapped.OutputState}
}

// The name of the keyspace that the table is going to be created in.
func (o TableOutput) KeyspaceName() pulumix.Output[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.Output[string] { return v.KeyspaceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html).
func (o TableOutput) PointInTimeRecovery() pulumix.GPtrOutput[TablePointInTimeRecovery, TablePointInTimeRecoveryOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TablePointInTimeRecovery, TablePointInTimeRecoveryOutput] {
		return v.PointInTimeRecovery
	})
	unwrapped := pulumix.Flatten[*TablePointInTimeRecovery, pulumix.GPtrOutput[TablePointInTimeRecovery, TablePointInTimeRecoveryOutput]](value)
	return pulumix.GPtrOutput[TablePointInTimeRecovery, TablePointInTimeRecoveryOutput]{OutputState: unwrapped.OutputState}
}

// Describes the schema of the table.
func (o TableOutput) SchemaDefinition() pulumix.GPtrOutput[TableSchemaDefinition, TableSchemaDefinitionOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TableSchemaDefinition, TableSchemaDefinitionOutput] {
		return v.SchemaDefinition
	})
	unwrapped := pulumix.Flatten[*TableSchemaDefinition, pulumix.GPtrOutput[TableSchemaDefinition, TableSchemaDefinitionOutput]](value)
	return pulumix.GPtrOutput[TableSchemaDefinition, TableSchemaDefinitionOutput]{OutputState: unwrapped.OutputState}
}

// The name of the table.
//
// The following arguments are optional:
func (o TableOutput) TableName() pulumix.Output[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.Output[string] { return v.TableName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TableOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TableOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Enables Time to Live custom settings for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html).
func (o TableOutput) Ttl() pulumix.GPtrOutput[TableTtl, TableTtlOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TableTtl, TableTtlOutput] { return v.Ttl })
	unwrapped := pulumix.Flatten[*TableTtl, pulumix.GPtrOutput[TableTtl, TableTtlOutput]](value)
	return pulumix.GPtrOutput[TableTtl, TableTtlOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(TableOutput{})
}
