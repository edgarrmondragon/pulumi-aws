// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a WAF Regional Byte Match Set Resource for use with Application Load Balancer.
type ByteMatchSet struct {
	pulumi.CustomResourceState

	// Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests. ByteMatchTuple documented below.
	ByteMatchTuples pulumix.GArrayOutput[ByteMatchSetByteMatchTuple, ByteMatchSetByteMatchTupleOutput] `pulumi:"byteMatchTuples"`
	// The name or description of the ByteMatchSet.
	Name pulumix.Output[string] `pulumi:"name"`
}

// NewByteMatchSet registers a new resource with the given unique name, arguments, and options.
func NewByteMatchSet(ctx *pulumi.Context,
	name string, args *ByteMatchSetArgs, opts ...pulumi.ResourceOption) (*ByteMatchSet, error) {
	if args == nil {
		args = &ByteMatchSetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ByteMatchSet
	err := ctx.RegisterResource("aws:wafregional/byteMatchSet:ByteMatchSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetByteMatchSet gets an existing ByteMatchSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetByteMatchSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ByteMatchSetState, opts ...pulumi.ResourceOption) (*ByteMatchSet, error) {
	var resource ByteMatchSet
	err := ctx.ReadResource("aws:wafregional/byteMatchSet:ByteMatchSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ByteMatchSet resources.
type byteMatchSetState struct {
	// Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests. ByteMatchTuple documented below.
	ByteMatchTuples []ByteMatchSetByteMatchTuple `pulumi:"byteMatchTuples"`
	// The name or description of the ByteMatchSet.
	Name *string `pulumi:"name"`
}

type ByteMatchSetState struct {
	// Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests. ByteMatchTuple documented below.
	ByteMatchTuples pulumix.Input[[]*ByteMatchSetByteMatchTupleArgs]
	// The name or description of the ByteMatchSet.
	Name pulumix.Input[*string]
}

func (ByteMatchSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*byteMatchSetState)(nil)).Elem()
}

type byteMatchSetArgs struct {
	// Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests. ByteMatchTuple documented below.
	ByteMatchTuples []ByteMatchSetByteMatchTuple `pulumi:"byteMatchTuples"`
	// The name or description of the ByteMatchSet.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ByteMatchSet resource.
type ByteMatchSetArgs struct {
	// Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests. ByteMatchTuple documented below.
	ByteMatchTuples pulumix.Input[[]*ByteMatchSetByteMatchTupleArgs]
	// The name or description of the ByteMatchSet.
	Name pulumix.Input[*string]
}

func (ByteMatchSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*byteMatchSetArgs)(nil)).Elem()
}

type ByteMatchSetOutput struct{ *pulumi.OutputState }

func (ByteMatchSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ByteMatchSet)(nil)).Elem()
}

func (o ByteMatchSetOutput) ToByteMatchSetOutput() ByteMatchSetOutput {
	return o
}

func (o ByteMatchSetOutput) ToByteMatchSetOutputWithContext(ctx context.Context) ByteMatchSetOutput {
	return o
}

func (o ByteMatchSetOutput) ToOutput(ctx context.Context) pulumix.Output[ByteMatchSet] {
	return pulumix.Output[ByteMatchSet]{
		OutputState: o.OutputState,
	}
}

// Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests. ByteMatchTuple documented below.
func (o ByteMatchSetOutput) ByteMatchTuples() pulumix.GArrayOutput[ByteMatchSetByteMatchTuple, ByteMatchSetByteMatchTupleOutput] {
	value := pulumix.Apply[ByteMatchSet](o, func(v ByteMatchSet) pulumix.GArrayOutput[ByteMatchSetByteMatchTuple, ByteMatchSetByteMatchTupleOutput] {
		return v.ByteMatchTuples
	})
	unwrapped := pulumix.Flatten[[]ByteMatchSetByteMatchTuple, pulumix.GArrayOutput[ByteMatchSetByteMatchTuple, ByteMatchSetByteMatchTupleOutput]](value)
	return pulumix.GArrayOutput[ByteMatchSetByteMatchTuple, ByteMatchSetByteMatchTupleOutput]{OutputState: unwrapped.OutputState}
}

// The name or description of the ByteMatchSet.
func (o ByteMatchSetOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ByteMatchSet](o, func(v ByteMatchSet) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ByteMatchSetOutput{})
}
