// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ivs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS IVS (Interactive Video) Stream Key.
func GetStreamKey(ctx *pulumi.Context, args *GetStreamKeyArgs, opts ...pulumi.InvokeOption) (*GetStreamKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStreamKeyResult
	err := ctx.Invoke("aws:ivs/getStreamKey:getStreamKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamKey.
type GetStreamKeyArgs struct {
	// ARN of the Channel.
	ChannelArn string `pulumi:"channelArn"`
	// Map of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getStreamKey.
type GetStreamKeyResult struct {
	// ARN of the Stream Key.
	Arn        string `pulumi:"arn"`
	ChannelArn string `pulumi:"channelArn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Map of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Stream Key value.
	Value string `pulumi:"value"`
}

func GetStreamKeyOutput(ctx *pulumi.Context, args GetStreamKeyOutputArgs, opts ...pulumi.InvokeOption) GetStreamKeyResultOutput {
	outputResult := pulumix.ApplyErr[*GetStreamKeyArgs](args.ToOutput(), func(plainArgs *GetStreamKeyArgs) (*GetStreamKeyResult, error) {
		return GetStreamKey(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetStreamKeyResultOutput, *GetStreamKeyResult](outputResult)
}

// A collection of arguments for invoking getStreamKey.
type GetStreamKeyOutputArgs struct {
	// ARN of the Channel.
	ChannelArn pulumix.Input[string] `pulumi:"channelArn"`
	// Map of tags assigned to the resource.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetStreamKeyOutputArgs) ToOutput() pulumix.Output[*GetStreamKeyArgs] {
	allArgs := pulumix.All(
		args.ChannelArn.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetStreamKeyArgs {
		return &GetStreamKeyArgs{
			ChannelArn: resolvedArgs[0].(string),
			Tags:       resolvedArgs[1].(map[string]string),
		}
	})
}

type GetStreamKeyResultOutput struct{ *pulumi.OutputState }

func (GetStreamKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamKeyResult)(nil)).Elem()
}

func (o GetStreamKeyResultOutput) ToOutput(context.Context) pulumix.Output[*GetStreamKeyResult] {
	return pulumix.Output[*GetStreamKeyResult]{
		OutputState: o.OutputState,
	}
}

func (o GetStreamKeyResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*GetStreamKeyResult](o, func(v *GetStreamKeyResult) string { return v.Arn })
}

func (o GetStreamKeyResultOutput) ChannelArn() pulumix.Output[string] {
	return pulumix.Apply[*GetStreamKeyResult](o, func(v *GetStreamKeyResult) string { return v.ChannelArn })
}

func (o GetStreamKeyResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetStreamKeyResult](o, func(v *GetStreamKeyResult) string { return v.Id })
}

func (o GetStreamKeyResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetStreamKeyResult](o, func(v *GetStreamKeyResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetStreamKeyResultOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[*GetStreamKeyResult](o, func(v *GetStreamKeyResult) string { return v.Value })
}
