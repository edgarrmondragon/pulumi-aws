// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an S3 Object Lambda Access Point resource policy.
type ObjectLambdaAccessPointPolicy struct {
	pulumi.CustomResourceState

	// The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Output[string] `pulumi:"accountId"`
	// Indicates whether this access point currently has a policy that allows public access.
	HasPublicAccessPolicy pulumix.Output[bool] `pulumi:"hasPublicAccessPolicy"`
	// The name of the Object Lambda Access Point.
	Name pulumix.Output[string] `pulumi:"name"`
	// The Object Lambda Access Point resource policy document.
	Policy pulumix.Output[string] `pulumi:"policy"`
}

// NewObjectLambdaAccessPointPolicy registers a new resource with the given unique name, arguments, and options.
func NewObjectLambdaAccessPointPolicy(ctx *pulumi.Context,
	name string, args *ObjectLambdaAccessPointPolicyArgs, opts ...pulumi.ResourceOption) (*ObjectLambdaAccessPointPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectLambdaAccessPointPolicy
	err := ctx.RegisterResource("aws:s3control/objectLambdaAccessPointPolicy:ObjectLambdaAccessPointPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectLambdaAccessPointPolicy gets an existing ObjectLambdaAccessPointPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectLambdaAccessPointPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectLambdaAccessPointPolicyState, opts ...pulumi.ResourceOption) (*ObjectLambdaAccessPointPolicy, error) {
	var resource ObjectLambdaAccessPointPolicy
	err := ctx.ReadResource("aws:s3control/objectLambdaAccessPointPolicy:ObjectLambdaAccessPointPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectLambdaAccessPointPolicy resources.
type objectLambdaAccessPointPolicyState struct {
	// The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId *string `pulumi:"accountId"`
	// Indicates whether this access point currently has a policy that allows public access.
	HasPublicAccessPolicy *bool `pulumi:"hasPublicAccessPolicy"`
	// The name of the Object Lambda Access Point.
	Name *string `pulumi:"name"`
	// The Object Lambda Access Point resource policy document.
	Policy *string `pulumi:"policy"`
}

type ObjectLambdaAccessPointPolicyState struct {
	// The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Input[*string]
	// Indicates whether this access point currently has a policy that allows public access.
	HasPublicAccessPolicy pulumix.Input[*bool]
	// The name of the Object Lambda Access Point.
	Name pulumix.Input[*string]
	// The Object Lambda Access Point resource policy document.
	Policy pulumix.Input[*string]
}

func (ObjectLambdaAccessPointPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectLambdaAccessPointPolicyState)(nil)).Elem()
}

type objectLambdaAccessPointPolicyArgs struct {
	// The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId *string `pulumi:"accountId"`
	// The name of the Object Lambda Access Point.
	Name *string `pulumi:"name"`
	// The Object Lambda Access Point resource policy document.
	Policy string `pulumi:"policy"`
}

// The set of arguments for constructing a ObjectLambdaAccessPointPolicy resource.
type ObjectLambdaAccessPointPolicyArgs struct {
	// The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Input[*string]
	// The name of the Object Lambda Access Point.
	Name pulumix.Input[*string]
	// The Object Lambda Access Point resource policy document.
	Policy pulumix.Input[string]
}

func (ObjectLambdaAccessPointPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectLambdaAccessPointPolicyArgs)(nil)).Elem()
}

type ObjectLambdaAccessPointPolicyOutput struct{ *pulumi.OutputState }

func (ObjectLambdaAccessPointPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectLambdaAccessPointPolicy)(nil)).Elem()
}

func (o ObjectLambdaAccessPointPolicyOutput) ToObjectLambdaAccessPointPolicyOutput() ObjectLambdaAccessPointPolicyOutput {
	return o
}

func (o ObjectLambdaAccessPointPolicyOutput) ToObjectLambdaAccessPointPolicyOutputWithContext(ctx context.Context) ObjectLambdaAccessPointPolicyOutput {
	return o
}

func (o ObjectLambdaAccessPointPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[ObjectLambdaAccessPointPolicy] {
	return pulumix.Output[ObjectLambdaAccessPointPolicy]{
		OutputState: o.OutputState,
	}
}

// The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the AWS provider.
func (o ObjectLambdaAccessPointPolicyOutput) AccountId() pulumix.Output[string] {
	value := pulumix.Apply[ObjectLambdaAccessPointPolicy](o, func(v ObjectLambdaAccessPointPolicy) pulumix.Output[string] { return v.AccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether this access point currently has a policy that allows public access.
func (o ObjectLambdaAccessPointPolicyOutput) HasPublicAccessPolicy() pulumix.Output[bool] {
	value := pulumix.Apply[ObjectLambdaAccessPointPolicy](o, func(v ObjectLambdaAccessPointPolicy) pulumix.Output[bool] { return v.HasPublicAccessPolicy })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// The name of the Object Lambda Access Point.
func (o ObjectLambdaAccessPointPolicyOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ObjectLambdaAccessPointPolicy](o, func(v ObjectLambdaAccessPointPolicy) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Object Lambda Access Point resource policy document.
func (o ObjectLambdaAccessPointPolicyOutput) Policy() pulumix.Output[string] {
	value := pulumix.Apply[ObjectLambdaAccessPointPolicy](o, func(v ObjectLambdaAccessPointPolicy) pulumix.Output[string] { return v.Policy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ObjectLambdaAccessPointPolicyOutput{})
}
