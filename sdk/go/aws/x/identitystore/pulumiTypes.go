// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identitystore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type GroupExternalId struct {
	// The identifier issued to this resource by an external identity provider.
	Id *string `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer *string `pulumi:"issuer"`
}

type GroupExternalIdArgs struct {
	// The identifier issued to this resource by an external identity provider.
	Id pulumix.Input[*string] `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer pulumix.Input[*string] `pulumi:"issuer"`
}

func (GroupExternalIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupExternalId)(nil)).Elem()
}

func (i GroupExternalIdArgs) ToGroupExternalIdOutput() GroupExternalIdOutput {
	return i.ToGroupExternalIdOutputWithContext(context.Background())
}

func (i GroupExternalIdArgs) ToGroupExternalIdOutputWithContext(ctx context.Context) GroupExternalIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupExternalIdOutput)
}

func (i *GroupExternalIdArgs) ToOutput(ctx context.Context) pulumix.Output[*GroupExternalIdArgs] {
	return pulumix.Val(i)
}

type GroupExternalIdOutput struct{ *pulumi.OutputState }

func (GroupExternalIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupExternalId)(nil)).Elem()
}

func (o GroupExternalIdOutput) ToGroupExternalIdOutput() GroupExternalIdOutput {
	return o
}

func (o GroupExternalIdOutput) ToGroupExternalIdOutputWithContext(ctx context.Context) GroupExternalIdOutput {
	return o
}

func (o GroupExternalIdOutput) ToOutput(ctx context.Context) pulumix.Output[GroupExternalId] {
	return pulumix.Output[GroupExternalId]{
		OutputState: o.OutputState,
	}
}

// The identifier issued to this resource by an external identity provider.
func (o GroupExternalIdOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[GroupExternalId](o, func(v GroupExternalId) *string { return v.Id })
}

// The issuer for an external identifier.
func (o GroupExternalIdOutput) Issuer() pulumix.Output[*string] {
	return pulumix.Apply[GroupExternalId](o, func(v GroupExternalId) *string { return v.Issuer })
}

type UserAddresses struct {
	// The country that this address is in.
	Country *string `pulumi:"country"`
	// The name that is typically displayed when the address is shown for display.
	Formatted *string `pulumi:"formatted"`
	// The address locality.
	Locality *string `pulumi:"locality"`
	// The postal code of the address.
	PostalCode *string `pulumi:"postalCode"`
	// When `true`, this is the primary address associated with the user.
	Primary *bool `pulumi:"primary"`
	// The region of the address.
	Region *string `pulumi:"region"`
	// The street of the address.
	StreetAddress *string `pulumi:"streetAddress"`
	// The type of address.
	Type *string `pulumi:"type"`
}

type UserAddressesArgs struct {
	// The country that this address is in.
	Country pulumix.Input[*string] `pulumi:"country"`
	// The name that is typically displayed when the address is shown for display.
	Formatted pulumix.Input[*string] `pulumi:"formatted"`
	// The address locality.
	Locality pulumix.Input[*string] `pulumi:"locality"`
	// The postal code of the address.
	PostalCode pulumix.Input[*string] `pulumi:"postalCode"`
	// When `true`, this is the primary address associated with the user.
	Primary pulumix.Input[*bool] `pulumi:"primary"`
	// The region of the address.
	Region pulumix.Input[*string] `pulumi:"region"`
	// The street of the address.
	StreetAddress pulumix.Input[*string] `pulumi:"streetAddress"`
	// The type of address.
	Type pulumix.Input[*string] `pulumi:"type"`
}

func (UserAddressesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAddresses)(nil)).Elem()
}

func (i UserAddressesArgs) ToUserAddressesOutput() UserAddressesOutput {
	return i.ToUserAddressesOutputWithContext(context.Background())
}

func (i UserAddressesArgs) ToUserAddressesOutputWithContext(ctx context.Context) UserAddressesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAddressesOutput)
}

func (i *UserAddressesArgs) ToOutput(ctx context.Context) pulumix.Output[*UserAddressesArgs] {
	return pulumix.Val(i)
}

type UserAddressesOutput struct{ *pulumi.OutputState }

func (UserAddressesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAddresses)(nil)).Elem()
}

func (o UserAddressesOutput) ToUserAddressesOutput() UserAddressesOutput {
	return o
}

func (o UserAddressesOutput) ToUserAddressesOutputWithContext(ctx context.Context) UserAddressesOutput {
	return o
}

func (o UserAddressesOutput) ToOutput(ctx context.Context) pulumix.Output[UserAddresses] {
	return pulumix.Output[UserAddresses]{
		OutputState: o.OutputState,
	}
}

// The country that this address is in.
func (o UserAddressesOutput) Country() pulumix.Output[*string] {
	return pulumix.Apply[UserAddresses](o, func(v UserAddresses) *string { return v.Country })
}

// The name that is typically displayed when the address is shown for display.
func (o UserAddressesOutput) Formatted() pulumix.Output[*string] {
	return pulumix.Apply[UserAddresses](o, func(v UserAddresses) *string { return v.Formatted })
}

// The address locality.
func (o UserAddressesOutput) Locality() pulumix.Output[*string] {
	return pulumix.Apply[UserAddresses](o, func(v UserAddresses) *string { return v.Locality })
}

// The postal code of the address.
func (o UserAddressesOutput) PostalCode() pulumix.Output[*string] {
	return pulumix.Apply[UserAddresses](o, func(v UserAddresses) *string { return v.PostalCode })
}

// When `true`, this is the primary address associated with the user.
func (o UserAddressesOutput) Primary() pulumix.Output[*bool] {
	return pulumix.Apply[UserAddresses](o, func(v UserAddresses) *bool { return v.Primary })
}

// The region of the address.
func (o UserAddressesOutput) Region() pulumix.Output[*string] {
	return pulumix.Apply[UserAddresses](o, func(v UserAddresses) *string { return v.Region })
}

// The street of the address.
func (o UserAddressesOutput) StreetAddress() pulumix.Output[*string] {
	return pulumix.Apply[UserAddresses](o, func(v UserAddresses) *string { return v.StreetAddress })
}

// The type of address.
func (o UserAddressesOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[UserAddresses](o, func(v UserAddresses) *string { return v.Type })
}

type UserEmails struct {
	// When `true`, this is the primary email associated with the user.
	Primary *bool `pulumi:"primary"`
	// The type of email.
	Type *string `pulumi:"type"`
	// The email address. This value must be unique across the identity store.
	Value *string `pulumi:"value"`
}

type UserEmailsArgs struct {
	// When `true`, this is the primary email associated with the user.
	Primary pulumix.Input[*bool] `pulumi:"primary"`
	// The type of email.
	Type pulumix.Input[*string] `pulumi:"type"`
	// The email address. This value must be unique across the identity store.
	Value pulumix.Input[*string] `pulumi:"value"`
}

func (UserEmailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserEmails)(nil)).Elem()
}

func (i UserEmailsArgs) ToUserEmailsOutput() UserEmailsOutput {
	return i.ToUserEmailsOutputWithContext(context.Background())
}

func (i UserEmailsArgs) ToUserEmailsOutputWithContext(ctx context.Context) UserEmailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserEmailsOutput)
}

func (i *UserEmailsArgs) ToOutput(ctx context.Context) pulumix.Output[*UserEmailsArgs] {
	return pulumix.Val(i)
}

type UserEmailsOutput struct{ *pulumi.OutputState }

func (UserEmailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserEmails)(nil)).Elem()
}

func (o UserEmailsOutput) ToUserEmailsOutput() UserEmailsOutput {
	return o
}

func (o UserEmailsOutput) ToUserEmailsOutputWithContext(ctx context.Context) UserEmailsOutput {
	return o
}

func (o UserEmailsOutput) ToOutput(ctx context.Context) pulumix.Output[UserEmails] {
	return pulumix.Output[UserEmails]{
		OutputState: o.OutputState,
	}
}

// When `true`, this is the primary email associated with the user.
func (o UserEmailsOutput) Primary() pulumix.Output[*bool] {
	return pulumix.Apply[UserEmails](o, func(v UserEmails) *bool { return v.Primary })
}

// The type of email.
func (o UserEmailsOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[UserEmails](o, func(v UserEmails) *string { return v.Type })
}

// The email address. This value must be unique across the identity store.
func (o UserEmailsOutput) Value() pulumix.Output[*string] {
	return pulumix.Apply[UserEmails](o, func(v UserEmails) *string { return v.Value })
}

type UserExternalId struct {
	// The identifier issued to this resource by an external identity provider.
	Id *string `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer *string `pulumi:"issuer"`
}

type UserExternalIdArgs struct {
	// The identifier issued to this resource by an external identity provider.
	Id pulumix.Input[*string] `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer pulumix.Input[*string] `pulumi:"issuer"`
}

func (UserExternalIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserExternalId)(nil)).Elem()
}

func (i UserExternalIdArgs) ToUserExternalIdOutput() UserExternalIdOutput {
	return i.ToUserExternalIdOutputWithContext(context.Background())
}

func (i UserExternalIdArgs) ToUserExternalIdOutputWithContext(ctx context.Context) UserExternalIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserExternalIdOutput)
}

func (i *UserExternalIdArgs) ToOutput(ctx context.Context) pulumix.Output[*UserExternalIdArgs] {
	return pulumix.Val(i)
}

type UserExternalIdOutput struct{ *pulumi.OutputState }

func (UserExternalIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserExternalId)(nil)).Elem()
}

func (o UserExternalIdOutput) ToUserExternalIdOutput() UserExternalIdOutput {
	return o
}

func (o UserExternalIdOutput) ToUserExternalIdOutputWithContext(ctx context.Context) UserExternalIdOutput {
	return o
}

func (o UserExternalIdOutput) ToOutput(ctx context.Context) pulumix.Output[UserExternalId] {
	return pulumix.Output[UserExternalId]{
		OutputState: o.OutputState,
	}
}

// The identifier issued to this resource by an external identity provider.
func (o UserExternalIdOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[UserExternalId](o, func(v UserExternalId) *string { return v.Id })
}

// The issuer for an external identifier.
func (o UserExternalIdOutput) Issuer() pulumix.Output[*string] {
	return pulumix.Apply[UserExternalId](o, func(v UserExternalId) *string { return v.Issuer })
}

type UserName struct {
	// The family name of the user.
	FamilyName string `pulumi:"familyName"`
	// The name that is typically displayed when the name is shown for display.
	Formatted *string `pulumi:"formatted"`
	// The given name of the user.
	//
	// The following arguments are optional:
	GivenName string `pulumi:"givenName"`
	// The honorific prefix of the user.
	HonorificPrefix *string `pulumi:"honorificPrefix"`
	// The honorific suffix of the user.
	HonorificSuffix *string `pulumi:"honorificSuffix"`
	// The middle name of the user.
	MiddleName *string `pulumi:"middleName"`
}

type UserNameArgs struct {
	// The family name of the user.
	FamilyName pulumix.Input[string] `pulumi:"familyName"`
	// The name that is typically displayed when the name is shown for display.
	Formatted pulumix.Input[*string] `pulumi:"formatted"`
	// The given name of the user.
	//
	// The following arguments are optional:
	GivenName pulumix.Input[string] `pulumi:"givenName"`
	// The honorific prefix of the user.
	HonorificPrefix pulumix.Input[*string] `pulumi:"honorificPrefix"`
	// The honorific suffix of the user.
	HonorificSuffix pulumix.Input[*string] `pulumi:"honorificSuffix"`
	// The middle name of the user.
	MiddleName pulumix.Input[*string] `pulumi:"middleName"`
}

func (UserNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserName)(nil)).Elem()
}

func (i UserNameArgs) ToUserNameOutput() UserNameOutput {
	return i.ToUserNameOutputWithContext(context.Background())
}

func (i UserNameArgs) ToUserNameOutputWithContext(ctx context.Context) UserNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserNameOutput)
}

func (i *UserNameArgs) ToOutput(ctx context.Context) pulumix.Output[*UserNameArgs] {
	return pulumix.Val(i)
}

type UserNameOutput struct{ *pulumi.OutputState }

func (UserNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserName)(nil)).Elem()
}

func (o UserNameOutput) ToUserNameOutput() UserNameOutput {
	return o
}

func (o UserNameOutput) ToUserNameOutputWithContext(ctx context.Context) UserNameOutput {
	return o
}

func (o UserNameOutput) ToOutput(ctx context.Context) pulumix.Output[UserName] {
	return pulumix.Output[UserName]{
		OutputState: o.OutputState,
	}
}

// The family name of the user.
func (o UserNameOutput) FamilyName() pulumix.Output[string] {
	return pulumix.Apply[UserName](o, func(v UserName) string { return v.FamilyName })
}

// The name that is typically displayed when the name is shown for display.
func (o UserNameOutput) Formatted() pulumix.Output[*string] {
	return pulumix.Apply[UserName](o, func(v UserName) *string { return v.Formatted })
}

// The given name of the user.
//
// The following arguments are optional:
func (o UserNameOutput) GivenName() pulumix.Output[string] {
	return pulumix.Apply[UserName](o, func(v UserName) string { return v.GivenName })
}

// The honorific prefix of the user.
func (o UserNameOutput) HonorificPrefix() pulumix.Output[*string] {
	return pulumix.Apply[UserName](o, func(v UserName) *string { return v.HonorificPrefix })
}

// The honorific suffix of the user.
func (o UserNameOutput) HonorificSuffix() pulumix.Output[*string] {
	return pulumix.Apply[UserName](o, func(v UserName) *string { return v.HonorificSuffix })
}

// The middle name of the user.
func (o UserNameOutput) MiddleName() pulumix.Output[*string] {
	return pulumix.Apply[UserName](o, func(v UserName) *string { return v.MiddleName })
}

type UserPhoneNumbers struct {
	// When `true`, this is the primary phone number associated with the user.
	Primary *bool `pulumi:"primary"`
	// The type of phone number.
	Type *string `pulumi:"type"`
	// The user's phone number.
	Value *string `pulumi:"value"`
}

type UserPhoneNumbersArgs struct {
	// When `true`, this is the primary phone number associated with the user.
	Primary pulumix.Input[*bool] `pulumi:"primary"`
	// The type of phone number.
	Type pulumix.Input[*string] `pulumi:"type"`
	// The user's phone number.
	Value pulumix.Input[*string] `pulumi:"value"`
}

func (UserPhoneNumbersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneNumbers)(nil)).Elem()
}

func (i UserPhoneNumbersArgs) ToUserPhoneNumbersOutput() UserPhoneNumbersOutput {
	return i.ToUserPhoneNumbersOutputWithContext(context.Background())
}

func (i UserPhoneNumbersArgs) ToUserPhoneNumbersOutputWithContext(ctx context.Context) UserPhoneNumbersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPhoneNumbersOutput)
}

func (i *UserPhoneNumbersArgs) ToOutput(ctx context.Context) pulumix.Output[*UserPhoneNumbersArgs] {
	return pulumix.Val(i)
}

type UserPhoneNumbersOutput struct{ *pulumi.OutputState }

func (UserPhoneNumbersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneNumbers)(nil)).Elem()
}

func (o UserPhoneNumbersOutput) ToUserPhoneNumbersOutput() UserPhoneNumbersOutput {
	return o
}

func (o UserPhoneNumbersOutput) ToUserPhoneNumbersOutputWithContext(ctx context.Context) UserPhoneNumbersOutput {
	return o
}

func (o UserPhoneNumbersOutput) ToOutput(ctx context.Context) pulumix.Output[UserPhoneNumbers] {
	return pulumix.Output[UserPhoneNumbers]{
		OutputState: o.OutputState,
	}
}

// When `true`, this is the primary phone number associated with the user.
func (o UserPhoneNumbersOutput) Primary() pulumix.Output[*bool] {
	return pulumix.Apply[UserPhoneNumbers](o, func(v UserPhoneNumbers) *bool { return v.Primary })
}

// The type of phone number.
func (o UserPhoneNumbersOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[UserPhoneNumbers](o, func(v UserPhoneNumbers) *string { return v.Type })
}

// The user's phone number.
func (o UserPhoneNumbersOutput) Value() pulumix.Output[*string] {
	return pulumix.Apply[UserPhoneNumbers](o, func(v UserPhoneNumbers) *string { return v.Value })
}

type GetGroupAlternateIdentifier struct {
	// Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
	ExternalId *GetGroupAlternateIdentifierExternalId `pulumi:"externalId"`
	// An entity attribute that's unique to a specific entity. Detailed below.
	//
	// > Exactly one of the above arguments must be provided.
	UniqueAttribute *GetGroupAlternateIdentifierUniqueAttribute `pulumi:"uniqueAttribute"`
}

type GetGroupAlternateIdentifierArgs struct {
	// Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
	ExternalId pulumix.Input[*GetGroupAlternateIdentifierExternalIdArgs] `pulumi:"externalId"`
	// An entity attribute that's unique to a specific entity. Detailed below.
	//
	// > Exactly one of the above arguments must be provided.
	UniqueAttribute pulumix.Input[*GetGroupAlternateIdentifierUniqueAttributeArgs] `pulumi:"uniqueAttribute"`
}

func (GetGroupAlternateIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupAlternateIdentifier)(nil)).Elem()
}

func (i GetGroupAlternateIdentifierArgs) ToGetGroupAlternateIdentifierOutput() GetGroupAlternateIdentifierOutput {
	return i.ToGetGroupAlternateIdentifierOutputWithContext(context.Background())
}

func (i GetGroupAlternateIdentifierArgs) ToGetGroupAlternateIdentifierOutputWithContext(ctx context.Context) GetGroupAlternateIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupAlternateIdentifierOutput)
}

func (i *GetGroupAlternateIdentifierArgs) ToOutput(ctx context.Context) pulumix.Output[*GetGroupAlternateIdentifierArgs] {
	return pulumix.Val(i)
}

type GetGroupAlternateIdentifierOutput struct{ *pulumi.OutputState }

func (GetGroupAlternateIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupAlternateIdentifier)(nil)).Elem()
}

func (o GetGroupAlternateIdentifierOutput) ToGetGroupAlternateIdentifierOutput() GetGroupAlternateIdentifierOutput {
	return o
}

func (o GetGroupAlternateIdentifierOutput) ToGetGroupAlternateIdentifierOutputWithContext(ctx context.Context) GetGroupAlternateIdentifierOutput {
	return o
}

func (o GetGroupAlternateIdentifierOutput) ToOutput(ctx context.Context) pulumix.Output[GetGroupAlternateIdentifier] {
	return pulumix.Output[GetGroupAlternateIdentifier]{
		OutputState: o.OutputState,
	}
}

// Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
func (o GetGroupAlternateIdentifierOutput) ExternalId() pulumix.GPtrOutput[GetGroupAlternateIdentifierExternalId, GetGroupAlternateIdentifierExternalIdOutput] {
	value := pulumix.Apply[GetGroupAlternateIdentifier](o, func(v GetGroupAlternateIdentifier) *GetGroupAlternateIdentifierExternalId { return v.ExternalId })
	return pulumix.GPtrOutput[GetGroupAlternateIdentifierExternalId, GetGroupAlternateIdentifierExternalIdOutput]{OutputState: value.OutputState}
}

// An entity attribute that's unique to a specific entity. Detailed below.
//
// > Exactly one of the above arguments must be provided.
func (o GetGroupAlternateIdentifierOutput) UniqueAttribute() pulumix.GPtrOutput[GetGroupAlternateIdentifierUniqueAttribute, GetGroupAlternateIdentifierUniqueAttributeOutput] {
	value := pulumix.Apply[GetGroupAlternateIdentifier](o, func(v GetGroupAlternateIdentifier) *GetGroupAlternateIdentifierUniqueAttribute {
		return v.UniqueAttribute
	})
	return pulumix.GPtrOutput[GetGroupAlternateIdentifierUniqueAttribute, GetGroupAlternateIdentifierUniqueAttributeOutput]{OutputState: value.OutputState}
}

type GetGroupAlternateIdentifierExternalId struct {
	// The identifier issued to this resource by an external identity provider.
	Id string `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer string `pulumi:"issuer"`
}

type GetGroupAlternateIdentifierExternalIdArgs struct {
	// The identifier issued to this resource by an external identity provider.
	Id pulumix.Input[string] `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer pulumix.Input[string] `pulumi:"issuer"`
}

func (GetGroupAlternateIdentifierExternalIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupAlternateIdentifierExternalId)(nil)).Elem()
}

func (i GetGroupAlternateIdentifierExternalIdArgs) ToGetGroupAlternateIdentifierExternalIdOutput() GetGroupAlternateIdentifierExternalIdOutput {
	return i.ToGetGroupAlternateIdentifierExternalIdOutputWithContext(context.Background())
}

func (i GetGroupAlternateIdentifierExternalIdArgs) ToGetGroupAlternateIdentifierExternalIdOutputWithContext(ctx context.Context) GetGroupAlternateIdentifierExternalIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupAlternateIdentifierExternalIdOutput)
}

func (i *GetGroupAlternateIdentifierExternalIdArgs) ToOutput(ctx context.Context) pulumix.Output[*GetGroupAlternateIdentifierExternalIdArgs] {
	return pulumix.Val(i)
}

type GetGroupAlternateIdentifierExternalIdOutput struct{ *pulumi.OutputState }

func (GetGroupAlternateIdentifierExternalIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupAlternateIdentifierExternalId)(nil)).Elem()
}

func (o GetGroupAlternateIdentifierExternalIdOutput) ToGetGroupAlternateIdentifierExternalIdOutput() GetGroupAlternateIdentifierExternalIdOutput {
	return o
}

func (o GetGroupAlternateIdentifierExternalIdOutput) ToGetGroupAlternateIdentifierExternalIdOutputWithContext(ctx context.Context) GetGroupAlternateIdentifierExternalIdOutput {
	return o
}

func (o GetGroupAlternateIdentifierExternalIdOutput) ToOutput(ctx context.Context) pulumix.Output[GetGroupAlternateIdentifierExternalId] {
	return pulumix.Output[GetGroupAlternateIdentifierExternalId]{
		OutputState: o.OutputState,
	}
}

// The identifier issued to this resource by an external identity provider.
func (o GetGroupAlternateIdentifierExternalIdOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetGroupAlternateIdentifierExternalId](o, func(v GetGroupAlternateIdentifierExternalId) string { return v.Id })
}

// The issuer for an external identifier.
func (o GetGroupAlternateIdentifierExternalIdOutput) Issuer() pulumix.Output[string] {
	return pulumix.Apply[GetGroupAlternateIdentifierExternalId](o, func(v GetGroupAlternateIdentifierExternalId) string { return v.Issuer })
}

type GetGroupAlternateIdentifierUniqueAttribute struct {
	// Attribute path that is used to specify which attribute name to search. For example: `DisplayName`. Refer to the [Group data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html).
	AttributePath string `pulumi:"attributePath"`
	// Value for an attribute.
	AttributeValue string `pulumi:"attributeValue"`
}

type GetGroupAlternateIdentifierUniqueAttributeArgs struct {
	// Attribute path that is used to specify which attribute name to search. For example: `DisplayName`. Refer to the [Group data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html).
	AttributePath pulumix.Input[string] `pulumi:"attributePath"`
	// Value for an attribute.
	AttributeValue pulumix.Input[string] `pulumi:"attributeValue"`
}

func (GetGroupAlternateIdentifierUniqueAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupAlternateIdentifierUniqueAttribute)(nil)).Elem()
}

func (i GetGroupAlternateIdentifierUniqueAttributeArgs) ToGetGroupAlternateIdentifierUniqueAttributeOutput() GetGroupAlternateIdentifierUniqueAttributeOutput {
	return i.ToGetGroupAlternateIdentifierUniqueAttributeOutputWithContext(context.Background())
}

func (i GetGroupAlternateIdentifierUniqueAttributeArgs) ToGetGroupAlternateIdentifierUniqueAttributeOutputWithContext(ctx context.Context) GetGroupAlternateIdentifierUniqueAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupAlternateIdentifierUniqueAttributeOutput)
}

func (i *GetGroupAlternateIdentifierUniqueAttributeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetGroupAlternateIdentifierUniqueAttributeArgs] {
	return pulumix.Val(i)
}

type GetGroupAlternateIdentifierUniqueAttributeOutput struct{ *pulumi.OutputState }

func (GetGroupAlternateIdentifierUniqueAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupAlternateIdentifierUniqueAttribute)(nil)).Elem()
}

func (o GetGroupAlternateIdentifierUniqueAttributeOutput) ToGetGroupAlternateIdentifierUniqueAttributeOutput() GetGroupAlternateIdentifierUniqueAttributeOutput {
	return o
}

func (o GetGroupAlternateIdentifierUniqueAttributeOutput) ToGetGroupAlternateIdentifierUniqueAttributeOutputWithContext(ctx context.Context) GetGroupAlternateIdentifierUniqueAttributeOutput {
	return o
}

func (o GetGroupAlternateIdentifierUniqueAttributeOutput) ToOutput(ctx context.Context) pulumix.Output[GetGroupAlternateIdentifierUniqueAttribute] {
	return pulumix.Output[GetGroupAlternateIdentifierUniqueAttribute]{
		OutputState: o.OutputState,
	}
}

// Attribute path that is used to specify which attribute name to search. For example: `DisplayName`. Refer to the [Group data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html).
func (o GetGroupAlternateIdentifierUniqueAttributeOutput) AttributePath() pulumix.Output[string] {
	return pulumix.Apply[GetGroupAlternateIdentifierUniqueAttribute](o, func(v GetGroupAlternateIdentifierUniqueAttribute) string { return v.AttributePath })
}

// Value for an attribute.
func (o GetGroupAlternateIdentifierUniqueAttributeOutput) AttributeValue() pulumix.Output[string] {
	return pulumix.Apply[GetGroupAlternateIdentifierUniqueAttribute](o, func(v GetGroupAlternateIdentifierUniqueAttribute) string { return v.AttributeValue })
}

type GetGroupExternalId struct {
	// The identifier issued to this resource by an external identity provider.
	Id string `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer string `pulumi:"issuer"`
}

type GetGroupExternalIdArgs struct {
	// The identifier issued to this resource by an external identity provider.
	Id pulumix.Input[string] `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer pulumix.Input[string] `pulumi:"issuer"`
}

func (GetGroupExternalIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupExternalId)(nil)).Elem()
}

func (i GetGroupExternalIdArgs) ToGetGroupExternalIdOutput() GetGroupExternalIdOutput {
	return i.ToGetGroupExternalIdOutputWithContext(context.Background())
}

func (i GetGroupExternalIdArgs) ToGetGroupExternalIdOutputWithContext(ctx context.Context) GetGroupExternalIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupExternalIdOutput)
}

func (i *GetGroupExternalIdArgs) ToOutput(ctx context.Context) pulumix.Output[*GetGroupExternalIdArgs] {
	return pulumix.Val(i)
}

type GetGroupExternalIdOutput struct{ *pulumi.OutputState }

func (GetGroupExternalIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupExternalId)(nil)).Elem()
}

func (o GetGroupExternalIdOutput) ToGetGroupExternalIdOutput() GetGroupExternalIdOutput {
	return o
}

func (o GetGroupExternalIdOutput) ToGetGroupExternalIdOutputWithContext(ctx context.Context) GetGroupExternalIdOutput {
	return o
}

func (o GetGroupExternalIdOutput) ToOutput(ctx context.Context) pulumix.Output[GetGroupExternalId] {
	return pulumix.Output[GetGroupExternalId]{
		OutputState: o.OutputState,
	}
}

// The identifier issued to this resource by an external identity provider.
func (o GetGroupExternalIdOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetGroupExternalId](o, func(v GetGroupExternalId) string { return v.Id })
}

// The issuer for an external identifier.
func (o GetGroupExternalIdOutput) Issuer() pulumix.Output[string] {
	return pulumix.Apply[GetGroupExternalId](o, func(v GetGroupExternalId) string { return v.Issuer })
}

type GetUserAddress struct {
	// The country that this address is in.
	Country string `pulumi:"country"`
	// The name that is typically displayed when the name is shown for display.
	Formatted string `pulumi:"formatted"`
	// The address locality.
	Locality string `pulumi:"locality"`
	// The postal code of the address.
	PostalCode string `pulumi:"postalCode"`
	// When `true`, this is the primary phone number associated with the user.
	Primary bool `pulumi:"primary"`
	// The region of the address.
	Region string `pulumi:"region"`
	// The street of the address.
	StreetAddress string `pulumi:"streetAddress"`
	// The type of phone number.
	Type string `pulumi:"type"`
}

type GetUserAddressArgs struct {
	// The country that this address is in.
	Country pulumix.Input[string] `pulumi:"country"`
	// The name that is typically displayed when the name is shown for display.
	Formatted pulumix.Input[string] `pulumi:"formatted"`
	// The address locality.
	Locality pulumix.Input[string] `pulumi:"locality"`
	// The postal code of the address.
	PostalCode pulumix.Input[string] `pulumi:"postalCode"`
	// When `true`, this is the primary phone number associated with the user.
	Primary pulumix.Input[bool] `pulumi:"primary"`
	// The region of the address.
	Region pulumix.Input[string] `pulumi:"region"`
	// The street of the address.
	StreetAddress pulumix.Input[string] `pulumi:"streetAddress"`
	// The type of phone number.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetUserAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAddress)(nil)).Elem()
}

func (i GetUserAddressArgs) ToGetUserAddressOutput() GetUserAddressOutput {
	return i.ToGetUserAddressOutputWithContext(context.Background())
}

func (i GetUserAddressArgs) ToGetUserAddressOutputWithContext(ctx context.Context) GetUserAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAddressOutput)
}

func (i *GetUserAddressArgs) ToOutput(ctx context.Context) pulumix.Output[*GetUserAddressArgs] {
	return pulumix.Val(i)
}

type GetUserAddressOutput struct{ *pulumi.OutputState }

func (GetUserAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAddress)(nil)).Elem()
}

func (o GetUserAddressOutput) ToGetUserAddressOutput() GetUserAddressOutput {
	return o
}

func (o GetUserAddressOutput) ToGetUserAddressOutputWithContext(ctx context.Context) GetUserAddressOutput {
	return o
}

func (o GetUserAddressOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserAddress] {
	return pulumix.Output[GetUserAddress]{
		OutputState: o.OutputState,
	}
}

// The country that this address is in.
func (o GetUserAddressOutput) Country() pulumix.Output[string] {
	return pulumix.Apply[GetUserAddress](o, func(v GetUserAddress) string { return v.Country })
}

// The name that is typically displayed when the name is shown for display.
func (o GetUserAddressOutput) Formatted() pulumix.Output[string] {
	return pulumix.Apply[GetUserAddress](o, func(v GetUserAddress) string { return v.Formatted })
}

// The address locality.
func (o GetUserAddressOutput) Locality() pulumix.Output[string] {
	return pulumix.Apply[GetUserAddress](o, func(v GetUserAddress) string { return v.Locality })
}

// The postal code of the address.
func (o GetUserAddressOutput) PostalCode() pulumix.Output[string] {
	return pulumix.Apply[GetUserAddress](o, func(v GetUserAddress) string { return v.PostalCode })
}

// When `true`, this is the primary phone number associated with the user.
func (o GetUserAddressOutput) Primary() pulumix.Output[bool] {
	return pulumix.Apply[GetUserAddress](o, func(v GetUserAddress) bool { return v.Primary })
}

// The region of the address.
func (o GetUserAddressOutput) Region() pulumix.Output[string] {
	return pulumix.Apply[GetUserAddress](o, func(v GetUserAddress) string { return v.Region })
}

// The street of the address.
func (o GetUserAddressOutput) StreetAddress() pulumix.Output[string] {
	return pulumix.Apply[GetUserAddress](o, func(v GetUserAddress) string { return v.StreetAddress })
}

// The type of phone number.
func (o GetUserAddressOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetUserAddress](o, func(v GetUserAddress) string { return v.Type })
}

type GetUserAlternateIdentifier struct {
	// Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
	ExternalId *GetUserAlternateIdentifierExternalId `pulumi:"externalId"`
	// An entity attribute that's unique to a specific entity. Detailed below.
	//
	// > Exactly one of the above arguments must be provided.
	UniqueAttribute *GetUserAlternateIdentifierUniqueAttribute `pulumi:"uniqueAttribute"`
}

type GetUserAlternateIdentifierArgs struct {
	// Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
	ExternalId pulumix.Input[*GetUserAlternateIdentifierExternalIdArgs] `pulumi:"externalId"`
	// An entity attribute that's unique to a specific entity. Detailed below.
	//
	// > Exactly one of the above arguments must be provided.
	UniqueAttribute pulumix.Input[*GetUserAlternateIdentifierUniqueAttributeArgs] `pulumi:"uniqueAttribute"`
}

func (GetUserAlternateIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAlternateIdentifier)(nil)).Elem()
}

func (i GetUserAlternateIdentifierArgs) ToGetUserAlternateIdentifierOutput() GetUserAlternateIdentifierOutput {
	return i.ToGetUserAlternateIdentifierOutputWithContext(context.Background())
}

func (i GetUserAlternateIdentifierArgs) ToGetUserAlternateIdentifierOutputWithContext(ctx context.Context) GetUserAlternateIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAlternateIdentifierOutput)
}

func (i *GetUserAlternateIdentifierArgs) ToOutput(ctx context.Context) pulumix.Output[*GetUserAlternateIdentifierArgs] {
	return pulumix.Val(i)
}

type GetUserAlternateIdentifierOutput struct{ *pulumi.OutputState }

func (GetUserAlternateIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAlternateIdentifier)(nil)).Elem()
}

func (o GetUserAlternateIdentifierOutput) ToGetUserAlternateIdentifierOutput() GetUserAlternateIdentifierOutput {
	return o
}

func (o GetUserAlternateIdentifierOutput) ToGetUserAlternateIdentifierOutputWithContext(ctx context.Context) GetUserAlternateIdentifierOutput {
	return o
}

func (o GetUserAlternateIdentifierOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserAlternateIdentifier] {
	return pulumix.Output[GetUserAlternateIdentifier]{
		OutputState: o.OutputState,
	}
}

// Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
func (o GetUserAlternateIdentifierOutput) ExternalId() pulumix.GPtrOutput[GetUserAlternateIdentifierExternalId, GetUserAlternateIdentifierExternalIdOutput] {
	value := pulumix.Apply[GetUserAlternateIdentifier](o, func(v GetUserAlternateIdentifier) *GetUserAlternateIdentifierExternalId { return v.ExternalId })
	return pulumix.GPtrOutput[GetUserAlternateIdentifierExternalId, GetUserAlternateIdentifierExternalIdOutput]{OutputState: value.OutputState}
}

// An entity attribute that's unique to a specific entity. Detailed below.
//
// > Exactly one of the above arguments must be provided.
func (o GetUserAlternateIdentifierOutput) UniqueAttribute() pulumix.GPtrOutput[GetUserAlternateIdentifierUniqueAttribute, GetUserAlternateIdentifierUniqueAttributeOutput] {
	value := pulumix.Apply[GetUserAlternateIdentifier](o, func(v GetUserAlternateIdentifier) *GetUserAlternateIdentifierUniqueAttribute {
		return v.UniqueAttribute
	})
	return pulumix.GPtrOutput[GetUserAlternateIdentifierUniqueAttribute, GetUserAlternateIdentifierUniqueAttributeOutput]{OutputState: value.OutputState}
}

type GetUserAlternateIdentifierExternalId struct {
	// The identifier issued to this resource by an external identity provider.
	Id string `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer string `pulumi:"issuer"`
}

type GetUserAlternateIdentifierExternalIdArgs struct {
	// The identifier issued to this resource by an external identity provider.
	Id pulumix.Input[string] `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer pulumix.Input[string] `pulumi:"issuer"`
}

func (GetUserAlternateIdentifierExternalIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAlternateIdentifierExternalId)(nil)).Elem()
}

func (i GetUserAlternateIdentifierExternalIdArgs) ToGetUserAlternateIdentifierExternalIdOutput() GetUserAlternateIdentifierExternalIdOutput {
	return i.ToGetUserAlternateIdentifierExternalIdOutputWithContext(context.Background())
}

func (i GetUserAlternateIdentifierExternalIdArgs) ToGetUserAlternateIdentifierExternalIdOutputWithContext(ctx context.Context) GetUserAlternateIdentifierExternalIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAlternateIdentifierExternalIdOutput)
}

func (i *GetUserAlternateIdentifierExternalIdArgs) ToOutput(ctx context.Context) pulumix.Output[*GetUserAlternateIdentifierExternalIdArgs] {
	return pulumix.Val(i)
}

type GetUserAlternateIdentifierExternalIdOutput struct{ *pulumi.OutputState }

func (GetUserAlternateIdentifierExternalIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAlternateIdentifierExternalId)(nil)).Elem()
}

func (o GetUserAlternateIdentifierExternalIdOutput) ToGetUserAlternateIdentifierExternalIdOutput() GetUserAlternateIdentifierExternalIdOutput {
	return o
}

func (o GetUserAlternateIdentifierExternalIdOutput) ToGetUserAlternateIdentifierExternalIdOutputWithContext(ctx context.Context) GetUserAlternateIdentifierExternalIdOutput {
	return o
}

func (o GetUserAlternateIdentifierExternalIdOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserAlternateIdentifierExternalId] {
	return pulumix.Output[GetUserAlternateIdentifierExternalId]{
		OutputState: o.OutputState,
	}
}

// The identifier issued to this resource by an external identity provider.
func (o GetUserAlternateIdentifierExternalIdOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetUserAlternateIdentifierExternalId](o, func(v GetUserAlternateIdentifierExternalId) string { return v.Id })
}

// The issuer for an external identifier.
func (o GetUserAlternateIdentifierExternalIdOutput) Issuer() pulumix.Output[string] {
	return pulumix.Apply[GetUserAlternateIdentifierExternalId](o, func(v GetUserAlternateIdentifierExternalId) string { return v.Issuer })
}

type GetUserAlternateIdentifierUniqueAttribute struct {
	// Attribute path that is used to specify which attribute name to search. For example: `UserName`. Refer to the [User data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html).
	AttributePath string `pulumi:"attributePath"`
	// Value for an attribute.
	AttributeValue string `pulumi:"attributeValue"`
}

type GetUserAlternateIdentifierUniqueAttributeArgs struct {
	// Attribute path that is used to specify which attribute name to search. For example: `UserName`. Refer to the [User data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html).
	AttributePath pulumix.Input[string] `pulumi:"attributePath"`
	// Value for an attribute.
	AttributeValue pulumix.Input[string] `pulumi:"attributeValue"`
}

func (GetUserAlternateIdentifierUniqueAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAlternateIdentifierUniqueAttribute)(nil)).Elem()
}

func (i GetUserAlternateIdentifierUniqueAttributeArgs) ToGetUserAlternateIdentifierUniqueAttributeOutput() GetUserAlternateIdentifierUniqueAttributeOutput {
	return i.ToGetUserAlternateIdentifierUniqueAttributeOutputWithContext(context.Background())
}

func (i GetUserAlternateIdentifierUniqueAttributeArgs) ToGetUserAlternateIdentifierUniqueAttributeOutputWithContext(ctx context.Context) GetUserAlternateIdentifierUniqueAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAlternateIdentifierUniqueAttributeOutput)
}

func (i *GetUserAlternateIdentifierUniqueAttributeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetUserAlternateIdentifierUniqueAttributeArgs] {
	return pulumix.Val(i)
}

type GetUserAlternateIdentifierUniqueAttributeOutput struct{ *pulumi.OutputState }

func (GetUserAlternateIdentifierUniqueAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAlternateIdentifierUniqueAttribute)(nil)).Elem()
}

func (o GetUserAlternateIdentifierUniqueAttributeOutput) ToGetUserAlternateIdentifierUniqueAttributeOutput() GetUserAlternateIdentifierUniqueAttributeOutput {
	return o
}

func (o GetUserAlternateIdentifierUniqueAttributeOutput) ToGetUserAlternateIdentifierUniqueAttributeOutputWithContext(ctx context.Context) GetUserAlternateIdentifierUniqueAttributeOutput {
	return o
}

func (o GetUserAlternateIdentifierUniqueAttributeOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserAlternateIdentifierUniqueAttribute] {
	return pulumix.Output[GetUserAlternateIdentifierUniqueAttribute]{
		OutputState: o.OutputState,
	}
}

// Attribute path that is used to specify which attribute name to search. For example: `UserName`. Refer to the [User data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html).
func (o GetUserAlternateIdentifierUniqueAttributeOutput) AttributePath() pulumix.Output[string] {
	return pulumix.Apply[GetUserAlternateIdentifierUniqueAttribute](o, func(v GetUserAlternateIdentifierUniqueAttribute) string { return v.AttributePath })
}

// Value for an attribute.
func (o GetUserAlternateIdentifierUniqueAttributeOutput) AttributeValue() pulumix.Output[string] {
	return pulumix.Apply[GetUserAlternateIdentifierUniqueAttribute](o, func(v GetUserAlternateIdentifierUniqueAttribute) string { return v.AttributeValue })
}

type GetUserEmail struct {
	// When `true`, this is the primary phone number associated with the user.
	Primary bool `pulumi:"primary"`
	// The type of phone number.
	Type string `pulumi:"type"`
	// The user's phone number.
	Value string `pulumi:"value"`
}

type GetUserEmailArgs struct {
	// When `true`, this is the primary phone number associated with the user.
	Primary pulumix.Input[bool] `pulumi:"primary"`
	// The type of phone number.
	Type pulumix.Input[string] `pulumi:"type"`
	// The user's phone number.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (GetUserEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserEmail)(nil)).Elem()
}

func (i GetUserEmailArgs) ToGetUserEmailOutput() GetUserEmailOutput {
	return i.ToGetUserEmailOutputWithContext(context.Background())
}

func (i GetUserEmailArgs) ToGetUserEmailOutputWithContext(ctx context.Context) GetUserEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserEmailOutput)
}

func (i *GetUserEmailArgs) ToOutput(ctx context.Context) pulumix.Output[*GetUserEmailArgs] {
	return pulumix.Val(i)
}

type GetUserEmailOutput struct{ *pulumi.OutputState }

func (GetUserEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserEmail)(nil)).Elem()
}

func (o GetUserEmailOutput) ToGetUserEmailOutput() GetUserEmailOutput {
	return o
}

func (o GetUserEmailOutput) ToGetUserEmailOutputWithContext(ctx context.Context) GetUserEmailOutput {
	return o
}

func (o GetUserEmailOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserEmail] {
	return pulumix.Output[GetUserEmail]{
		OutputState: o.OutputState,
	}
}

// When `true`, this is the primary phone number associated with the user.
func (o GetUserEmailOutput) Primary() pulumix.Output[bool] {
	return pulumix.Apply[GetUserEmail](o, func(v GetUserEmail) bool { return v.Primary })
}

// The type of phone number.
func (o GetUserEmailOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetUserEmail](o, func(v GetUserEmail) string { return v.Type })
}

// The user's phone number.
func (o GetUserEmailOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[GetUserEmail](o, func(v GetUserEmail) string { return v.Value })
}

type GetUserExternalId struct {
	// The identifier issued to this resource by an external identity provider.
	Id string `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer string `pulumi:"issuer"`
}

type GetUserExternalIdArgs struct {
	// The identifier issued to this resource by an external identity provider.
	Id pulumix.Input[string] `pulumi:"id"`
	// The issuer for an external identifier.
	Issuer pulumix.Input[string] `pulumi:"issuer"`
}

func (GetUserExternalIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserExternalId)(nil)).Elem()
}

func (i GetUserExternalIdArgs) ToGetUserExternalIdOutput() GetUserExternalIdOutput {
	return i.ToGetUserExternalIdOutputWithContext(context.Background())
}

func (i GetUserExternalIdArgs) ToGetUserExternalIdOutputWithContext(ctx context.Context) GetUserExternalIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserExternalIdOutput)
}

func (i *GetUserExternalIdArgs) ToOutput(ctx context.Context) pulumix.Output[*GetUserExternalIdArgs] {
	return pulumix.Val(i)
}

type GetUserExternalIdOutput struct{ *pulumi.OutputState }

func (GetUserExternalIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserExternalId)(nil)).Elem()
}

func (o GetUserExternalIdOutput) ToGetUserExternalIdOutput() GetUserExternalIdOutput {
	return o
}

func (o GetUserExternalIdOutput) ToGetUserExternalIdOutputWithContext(ctx context.Context) GetUserExternalIdOutput {
	return o
}

func (o GetUserExternalIdOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserExternalId] {
	return pulumix.Output[GetUserExternalId]{
		OutputState: o.OutputState,
	}
}

// The identifier issued to this resource by an external identity provider.
func (o GetUserExternalIdOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetUserExternalId](o, func(v GetUserExternalId) string { return v.Id })
}

// The issuer for an external identifier.
func (o GetUserExternalIdOutput) Issuer() pulumix.Output[string] {
	return pulumix.Apply[GetUserExternalId](o, func(v GetUserExternalId) string { return v.Issuer })
}

type GetUserName struct {
	// The family name of the user.
	FamilyName string `pulumi:"familyName"`
	// The name that is typically displayed when the name is shown for display.
	Formatted string `pulumi:"formatted"`
	// The given name of the user.
	GivenName string `pulumi:"givenName"`
	// The honorific prefix of the user.
	HonorificPrefix string `pulumi:"honorificPrefix"`
	// The honorific suffix of the user.
	HonorificSuffix string `pulumi:"honorificSuffix"`
	// The middle name of the user.
	MiddleName string `pulumi:"middleName"`
}

type GetUserNameArgs struct {
	// The family name of the user.
	FamilyName pulumix.Input[string] `pulumi:"familyName"`
	// The name that is typically displayed when the name is shown for display.
	Formatted pulumix.Input[string] `pulumi:"formatted"`
	// The given name of the user.
	GivenName pulumix.Input[string] `pulumi:"givenName"`
	// The honorific prefix of the user.
	HonorificPrefix pulumix.Input[string] `pulumi:"honorificPrefix"`
	// The honorific suffix of the user.
	HonorificSuffix pulumix.Input[string] `pulumi:"honorificSuffix"`
	// The middle name of the user.
	MiddleName pulumix.Input[string] `pulumi:"middleName"`
}

func (GetUserNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserName)(nil)).Elem()
}

func (i GetUserNameArgs) ToGetUserNameOutput() GetUserNameOutput {
	return i.ToGetUserNameOutputWithContext(context.Background())
}

func (i GetUserNameArgs) ToGetUserNameOutputWithContext(ctx context.Context) GetUserNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserNameOutput)
}

func (i *GetUserNameArgs) ToOutput(ctx context.Context) pulumix.Output[*GetUserNameArgs] {
	return pulumix.Val(i)
}

type GetUserNameOutput struct{ *pulumi.OutputState }

func (GetUserNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserName)(nil)).Elem()
}

func (o GetUserNameOutput) ToGetUserNameOutput() GetUserNameOutput {
	return o
}

func (o GetUserNameOutput) ToGetUserNameOutputWithContext(ctx context.Context) GetUserNameOutput {
	return o
}

func (o GetUserNameOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserName] {
	return pulumix.Output[GetUserName]{
		OutputState: o.OutputState,
	}
}

// The family name of the user.
func (o GetUserNameOutput) FamilyName() pulumix.Output[string] {
	return pulumix.Apply[GetUserName](o, func(v GetUserName) string { return v.FamilyName })
}

// The name that is typically displayed when the name is shown for display.
func (o GetUserNameOutput) Formatted() pulumix.Output[string] {
	return pulumix.Apply[GetUserName](o, func(v GetUserName) string { return v.Formatted })
}

// The given name of the user.
func (o GetUserNameOutput) GivenName() pulumix.Output[string] {
	return pulumix.Apply[GetUserName](o, func(v GetUserName) string { return v.GivenName })
}

// The honorific prefix of the user.
func (o GetUserNameOutput) HonorificPrefix() pulumix.Output[string] {
	return pulumix.Apply[GetUserName](o, func(v GetUserName) string { return v.HonorificPrefix })
}

// The honorific suffix of the user.
func (o GetUserNameOutput) HonorificSuffix() pulumix.Output[string] {
	return pulumix.Apply[GetUserName](o, func(v GetUserName) string { return v.HonorificSuffix })
}

// The middle name of the user.
func (o GetUserNameOutput) MiddleName() pulumix.Output[string] {
	return pulumix.Apply[GetUserName](o, func(v GetUserName) string { return v.MiddleName })
}

type GetUserPhoneNumber struct {
	// When `true`, this is the primary phone number associated with the user.
	Primary bool `pulumi:"primary"`
	// The type of phone number.
	Type string `pulumi:"type"`
	// The user's phone number.
	Value string `pulumi:"value"`
}

type GetUserPhoneNumberArgs struct {
	// When `true`, this is the primary phone number associated with the user.
	Primary pulumix.Input[bool] `pulumi:"primary"`
	// The type of phone number.
	Type pulumix.Input[string] `pulumi:"type"`
	// The user's phone number.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (GetUserPhoneNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPhoneNumber)(nil)).Elem()
}

func (i GetUserPhoneNumberArgs) ToGetUserPhoneNumberOutput() GetUserPhoneNumberOutput {
	return i.ToGetUserPhoneNumberOutputWithContext(context.Background())
}

func (i GetUserPhoneNumberArgs) ToGetUserPhoneNumberOutputWithContext(ctx context.Context) GetUserPhoneNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPhoneNumberOutput)
}

func (i *GetUserPhoneNumberArgs) ToOutput(ctx context.Context) pulumix.Output[*GetUserPhoneNumberArgs] {
	return pulumix.Val(i)
}

type GetUserPhoneNumberOutput struct{ *pulumi.OutputState }

func (GetUserPhoneNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPhoneNumber)(nil)).Elem()
}

func (o GetUserPhoneNumberOutput) ToGetUserPhoneNumberOutput() GetUserPhoneNumberOutput {
	return o
}

func (o GetUserPhoneNumberOutput) ToGetUserPhoneNumberOutputWithContext(ctx context.Context) GetUserPhoneNumberOutput {
	return o
}

func (o GetUserPhoneNumberOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserPhoneNumber] {
	return pulumix.Output[GetUserPhoneNumber]{
		OutputState: o.OutputState,
	}
}

// When `true`, this is the primary phone number associated with the user.
func (o GetUserPhoneNumberOutput) Primary() pulumix.Output[bool] {
	return pulumix.Apply[GetUserPhoneNumber](o, func(v GetUserPhoneNumber) bool { return v.Primary })
}

// The type of phone number.
func (o GetUserPhoneNumberOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetUserPhoneNumber](o, func(v GetUserPhoneNumber) string { return v.Type })
}

// The user's phone number.
func (o GetUserPhoneNumberOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[GetUserPhoneNumber](o, func(v GetUserPhoneNumber) string { return v.Value })
}

func init() {
	pulumi.RegisterOutputType(GroupExternalIdOutput{})
	pulumi.RegisterOutputType(UserAddressesOutput{})
	pulumi.RegisterOutputType(UserEmailsOutput{})
	pulumi.RegisterOutputType(UserExternalIdOutput{})
	pulumi.RegisterOutputType(UserNameOutput{})
	pulumi.RegisterOutputType(UserPhoneNumbersOutput{})
	pulumi.RegisterOutputType(GetGroupAlternateIdentifierOutput{})
	pulumi.RegisterOutputType(GetGroupAlternateIdentifierExternalIdOutput{})
	pulumi.RegisterOutputType(GetGroupAlternateIdentifierUniqueAttributeOutput{})
	pulumi.RegisterOutputType(GetGroupExternalIdOutput{})
	pulumi.RegisterOutputType(GetUserAddressOutput{})
	pulumi.RegisterOutputType(GetUserAlternateIdentifierOutput{})
	pulumi.RegisterOutputType(GetUserAlternateIdentifierExternalIdOutput{})
	pulumi.RegisterOutputType(GetUserAlternateIdentifierUniqueAttributeOutput{})
	pulumi.RegisterOutputType(GetUserEmailOutput{})
	pulumi.RegisterOutputType(GetUserExternalIdOutput{})
	pulumi.RegisterOutputType(GetUserNameOutput{})
	pulumi.RegisterOutputType(GetUserPhoneNumberOutput{})
}
