// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on an Amazon MSK Cluster.
//
// > **Note:** This data sources returns information on _provisioned_ clusters.
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("aws:msk/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	// Name of the cluster.
	ClusterName string `pulumi:"clusterName"`
	// Map of key-value pairs assigned to the cluster.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	// ARN of the MSK cluster.
	Arn string `pulumi:"arn"`
	// Comma separated list of one or more hostname:port pairs of kafka brokers suitable to bootstrap connectivity to the kafka cluster. Contains a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `PLAINTEXT` or `TLS_PLAINTEXT`. The resource sorts values alphabetically. AWS may not always return all endpoints so this value is not guaranteed to be stable across applies.
	BootstrapBrokers string `pulumi:"bootstrapBrokers"`
	// One or more DNS names (or IP addresses) and SASL IAM port pairs. For example, `b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198`. This attribute will have a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `TLS_PLAINTEXT` or `TLS` and `client_authentication.0.sasl.0.iam` is set to `true` and `broker_node_group_info.0.connectivity_info.0.public_access.0.type` is set to `SERVICE_PROVIDED_EIPS` and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
	BootstrapBrokersPublicSaslIam string `pulumi:"bootstrapBrokersPublicSaslIam"`
	// One or more DNS names (or IP addresses) and SASL SCRAM port pairs. For example, `b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196`. This attribute will have a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `TLS_PLAINTEXT` or `TLS` and `client_authentication.0.sasl.0.scram` is set to `true` and `broker_node_group_info.0.connectivity_info.0.public_access.0.type` is set to `SERVICE_PROVIDED_EIPS` and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
	BootstrapBrokersPublicSaslScram string `pulumi:"bootstrapBrokersPublicSaslScram"`
	// One or more DNS names (or IP addresses) and TLS port pairs. For example, `b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194`. This attribute will have a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `TLS_PLAINTEXT` or `TLS` and `broker_node_group_info.0.connectivity_info.0.public_access.0.type` is set to `SERVICE_PROVIDED_EIPS` and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
	BootstrapBrokersPublicTls string `pulumi:"bootstrapBrokersPublicTls"`
	// One or more DNS names (or IP addresses) and SASL IAM port pairs. For example, `b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098`. This attribute will have a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `TLS_PLAINTEXT` or `TLS` and `client_authentication.0.sasl.0.iam` is set to `true`. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
	BootstrapBrokersSaslIam string `pulumi:"bootstrapBrokersSaslIam"`
	// One or more DNS names (or IP addresses) and SASL SCRAM port pairs. For example, `b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096`. This attribute will have a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `TLS_PLAINTEXT` or `TLS` and `client_authentication.0.sasl.0.scram` is set to `true`. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
	BootstrapBrokersSaslScram string `pulumi:"bootstrapBrokersSaslScram"`
	// One or more DNS names (or IP addresses) and TLS port pairs. For example, `b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094`. This attribute will have a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `TLS_PLAINTEXT` or `TLS`. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
	BootstrapBrokersTls string `pulumi:"bootstrapBrokersTls"`
	ClusterName         string `pulumi:"clusterName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Apache Kafka version.
	KafkaVersion string `pulumi:"kafkaVersion"`
	// Number of broker nodes in the cluster.
	NumberOfBrokerNodes int `pulumi:"numberOfBrokerNodes"`
	// Map of key-value pairs assigned to the cluster.
	Tags map[string]string `pulumi:"tags"`
	// A comma separated list of one or more hostname:port pairs to use to connect to the Apache Zookeeper cluster. The returned values are sorted alphbetically. The AWS API may not return all endpoints, so this value is not guaranteed to be stable across applies.
	ZookeeperConnectString string `pulumi:"zookeeperConnectString"`
	// A comma separated list of one or more hostname:port pairs to use to connect to the Apache Zookeeper cluster via TLS. The returned values are sorted alphabetically. The AWS API may not return all endpoints, so this value is not guaranteed to be stable across applies.
	ZookeeperConnectStringTls string `pulumi:"zookeeperConnectStringTls"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	outputResult := pulumix.ApplyErr[*LookupClusterArgs](args.ToOutput(), func(plainArgs *LookupClusterArgs) (*LookupClusterResult, error) {
		return LookupCluster(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupClusterResultOutput, *LookupClusterResult](outputResult)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	// Name of the cluster.
	ClusterName pulumix.Input[string] `pulumi:"clusterName"`
	// Map of key-value pairs assigned to the cluster.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupClusterOutputArgs) ToOutput() pulumix.Output[*LookupClusterArgs] {
	allArgs := pulumix.All(
		args.ClusterName.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupClusterArgs {
		return &LookupClusterArgs{
			ClusterName: resolvedArgs[0].(string),
			Tags:        resolvedArgs[1].(map[string]string),
		}
	})
}

type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToOutput(context.Context) pulumix.Output[*LookupClusterResult] {
	return pulumix.Output[*LookupClusterResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupClusterResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.Arn })
}

func (o LookupClusterResultOutput) BootstrapBrokers() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.BootstrapBrokers })
}

func (o LookupClusterResultOutput) BootstrapBrokersPublicSaslIam() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.BootstrapBrokersPublicSaslIam })
}

func (o LookupClusterResultOutput) BootstrapBrokersPublicSaslScram() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.BootstrapBrokersPublicSaslScram })
}

func (o LookupClusterResultOutput) BootstrapBrokersPublicTls() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.BootstrapBrokersPublicTls })
}

func (o LookupClusterResultOutput) BootstrapBrokersSaslIam() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.BootstrapBrokersSaslIam })
}

func (o LookupClusterResultOutput) BootstrapBrokersSaslScram() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.BootstrapBrokersSaslScram })
}

func (o LookupClusterResultOutput) BootstrapBrokersTls() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.BootstrapBrokersTls })
}

func (o LookupClusterResultOutput) ClusterName() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.ClusterName })
}

func (o LookupClusterResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.Id })
}

func (o LookupClusterResultOutput) KafkaVersion() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.KafkaVersion })
}

func (o LookupClusterResultOutput) NumberOfBrokerNodes() pulumix.Output[int] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) int { return v.NumberOfBrokerNodes })
}

func (o LookupClusterResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupClusterResultOutput) ZookeeperConnectString() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.ZookeeperConnectString })
}

func (o LookupClusterResultOutput) ZookeeperConnectStringTls() pulumix.Output[string] {
	return pulumix.Apply[*LookupClusterResult](o, func(v *LookupClusterResult) string { return v.ZookeeperConnectStringTls })
}
