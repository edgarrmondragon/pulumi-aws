// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Route 53 Resolver DNS Firewall domain list resource.
type ResolverFirewallDomainList struct {
	pulumi.CustomResourceState

	// The ARN (Amazon Resource Name) of the domain list.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A array of domains for the firewall domain list.
	Domains pulumix.ArrayOutput[string] `pulumi:"domains"`
	// A name that lets you identify the domain list, to manage and use it.
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewResolverFirewallDomainList registers a new resource with the given unique name, arguments, and options.
func NewResolverFirewallDomainList(ctx *pulumi.Context,
	name string, args *ResolverFirewallDomainListArgs, opts ...pulumi.ResourceOption) (*ResolverFirewallDomainList, error) {
	if args == nil {
		args = &ResolverFirewallDomainListArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResolverFirewallDomainList
	err := ctx.RegisterResource("aws:route53/resolverFirewallDomainList:ResolverFirewallDomainList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResolverFirewallDomainList gets an existing ResolverFirewallDomainList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResolverFirewallDomainList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResolverFirewallDomainListState, opts ...pulumi.ResourceOption) (*ResolverFirewallDomainList, error) {
	var resource ResolverFirewallDomainList
	err := ctx.ReadResource("aws:route53/resolverFirewallDomainList:ResolverFirewallDomainList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResolverFirewallDomainList resources.
type resolverFirewallDomainListState struct {
	// The ARN (Amazon Resource Name) of the domain list.
	Arn *string `pulumi:"arn"`
	// A array of domains for the firewall domain list.
	Domains []string `pulumi:"domains"`
	// A name that lets you identify the domain list, to manage and use it.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ResolverFirewallDomainListState struct {
	// The ARN (Amazon Resource Name) of the domain list.
	Arn pulumix.Input[*string]
	// A array of domains for the firewall domain list.
	Domains pulumix.Input[[]string]
	// A name that lets you identify the domain list, to manage and use it.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ResolverFirewallDomainListState) ElementType() reflect.Type {
	return reflect.TypeOf((*resolverFirewallDomainListState)(nil)).Elem()
}

type resolverFirewallDomainListArgs struct {
	// A array of domains for the firewall domain list.
	Domains []string `pulumi:"domains"`
	// A name that lets you identify the domain list, to manage and use it.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ResolverFirewallDomainList resource.
type ResolverFirewallDomainListArgs struct {
	// A array of domains for the firewall domain list.
	Domains pulumix.Input[[]string]
	// A name that lets you identify the domain list, to manage and use it.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ResolverFirewallDomainListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resolverFirewallDomainListArgs)(nil)).Elem()
}

type ResolverFirewallDomainListOutput struct{ *pulumi.OutputState }

func (ResolverFirewallDomainListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverFirewallDomainList)(nil)).Elem()
}

func (o ResolverFirewallDomainListOutput) ToResolverFirewallDomainListOutput() ResolverFirewallDomainListOutput {
	return o
}

func (o ResolverFirewallDomainListOutput) ToResolverFirewallDomainListOutputWithContext(ctx context.Context) ResolverFirewallDomainListOutput {
	return o
}

func (o ResolverFirewallDomainListOutput) ToOutput(ctx context.Context) pulumix.Output[ResolverFirewallDomainList] {
	return pulumix.Output[ResolverFirewallDomainList]{
		OutputState: o.OutputState,
	}
}

// The ARN (Amazon Resource Name) of the domain list.
func (o ResolverFirewallDomainListOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallDomainList](o, func(v ResolverFirewallDomainList) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A array of domains for the firewall domain list.
func (o ResolverFirewallDomainListOutput) Domains() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ResolverFirewallDomainList](o, func(v ResolverFirewallDomainList) pulumix.ArrayOutput[string] { return v.Domains })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A name that lets you identify the domain list, to manage and use it.
func (o ResolverFirewallDomainListOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallDomainList](o, func(v ResolverFirewallDomainList) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ResolverFirewallDomainListOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ResolverFirewallDomainList](o, func(v ResolverFirewallDomainList) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ResolverFirewallDomainListOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ResolverFirewallDomainList](o, func(v ResolverFirewallDomainList) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ResolverFirewallDomainListOutput{})
}
