// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS VPC Lattice Listener.
type Listener struct {
	pulumi.CustomResourceState

	// ARN of the listener.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Date and time that the listener was created, specified in ISO-8601 format.
	CreatedAt pulumix.Output[string] `pulumi:"createdAt"`
	// Default action block for the default listener rule. Default action blocks are defined below.
	DefaultAction pulumix.GPtrOutput[ListenerDefaultAction, ListenerDefaultActionOutput] `pulumi:"defaultAction"`
	LastUpdatedAt pulumix.Output[string]                                                 `pulumi:"lastUpdatedAt"`
	// Standalone ID of the listener, e.g. `listener-0a1b2c3d4e5f6g`.
	ListenerId pulumix.Output[string] `pulumi:"listenerId"`
	// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	Name pulumix.Output[string] `pulumi:"name"`
	// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
	Port pulumix.Output[int] `pulumi:"port"`
	// Protocol for the listener. Supported values are `HTTP` or `HTTPS`
	Protocol pulumix.Output[string] `pulumi:"protocol"`
	// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	ServiceArn pulumix.Output[string] `pulumi:"serviceArn"`
	// ID of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	// > **NOTE:** You must specify one of the following arguments: `serviceArn` or `serviceIdentifier`.
	ServiceIdentifier pulumix.Output[string] `pulumi:"serviceIdentifier"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewListener registers a new resource with the given unique name, arguments, and options.
func NewListener(ctx *pulumi.Context,
	name string, args *ListenerArgs, opts ...pulumi.ResourceOption) (*Listener, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultAction == nil {
		return nil, errors.New("invalid value for required argument 'DefaultAction'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Listener
	err := ctx.RegisterResource("aws:vpclattice/listener:Listener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetListener gets an existing Listener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ListenerState, opts ...pulumi.ResourceOption) (*Listener, error) {
	var resource Listener
	err := ctx.ReadResource("aws:vpclattice/listener:Listener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Listener resources.
type listenerState struct {
	// ARN of the listener.
	Arn *string `pulumi:"arn"`
	// Date and time that the listener was created, specified in ISO-8601 format.
	CreatedAt *string `pulumi:"createdAt"`
	// Default action block for the default listener rule. Default action blocks are defined below.
	DefaultAction *ListenerDefaultAction `pulumi:"defaultAction"`
	LastUpdatedAt *string                `pulumi:"lastUpdatedAt"`
	// Standalone ID of the listener, e.g. `listener-0a1b2c3d4e5f6g`.
	ListenerId *string `pulumi:"listenerId"`
	// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	Name *string `pulumi:"name"`
	// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
	Port *int `pulumi:"port"`
	// Protocol for the listener. Supported values are `HTTP` or `HTTPS`
	Protocol *string `pulumi:"protocol"`
	// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	ServiceArn *string `pulumi:"serviceArn"`
	// ID of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	// > **NOTE:** You must specify one of the following arguments: `serviceArn` or `serviceIdentifier`.
	ServiceIdentifier *string `pulumi:"serviceIdentifier"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ListenerState struct {
	// ARN of the listener.
	Arn pulumix.Input[*string]
	// Date and time that the listener was created, specified in ISO-8601 format.
	CreatedAt pulumix.Input[*string]
	// Default action block for the default listener rule. Default action blocks are defined below.
	DefaultAction pulumix.Input[*ListenerDefaultActionArgs]
	LastUpdatedAt pulumix.Input[*string]
	// Standalone ID of the listener, e.g. `listener-0a1b2c3d4e5f6g`.
	ListenerId pulumix.Input[*string]
	// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	Name pulumix.Input[*string]
	// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
	Port pulumix.Input[*int]
	// Protocol for the listener. Supported values are `HTTP` or `HTTPS`
	Protocol pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	ServiceArn pulumix.Input[*string]
	// ID of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	// > **NOTE:** You must specify one of the following arguments: `serviceArn` or `serviceIdentifier`.
	ServiceIdentifier pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.Input[map[string]string]
	TagsAll pulumix.Input[map[string]string]
}

func (ListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerState)(nil)).Elem()
}

type listenerArgs struct {
	// Default action block for the default listener rule. Default action blocks are defined below.
	DefaultAction ListenerDefaultAction `pulumi:"defaultAction"`
	// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	Name *string `pulumi:"name"`
	// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
	Port *int `pulumi:"port"`
	// Protocol for the listener. Supported values are `HTTP` or `HTTPS`
	Protocol string `pulumi:"protocol"`
	// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	ServiceArn *string `pulumi:"serviceArn"`
	// ID of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	// > **NOTE:** You must specify one of the following arguments: `serviceArn` or `serviceIdentifier`.
	ServiceIdentifier *string `pulumi:"serviceIdentifier"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Listener resource.
type ListenerArgs struct {
	// Default action block for the default listener rule. Default action blocks are defined below.
	DefaultAction pulumix.Input[*ListenerDefaultActionArgs]
	// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	Name pulumix.Input[*string]
	// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
	Port pulumix.Input[*int]
	// Protocol for the listener. Supported values are `HTTP` or `HTTPS`
	Protocol pulumix.Input[string]
	// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	ServiceArn pulumix.Input[*string]
	// ID of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
	// > **NOTE:** You must specify one of the following arguments: `serviceArn` or `serviceIdentifier`.
	ServiceIdentifier pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*listenerArgs)(nil)).Elem()
}

type ListenerOutput struct{ *pulumi.OutputState }

func (ListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Listener)(nil)).Elem()
}

func (o ListenerOutput) ToListenerOutput() ListenerOutput {
	return o
}

func (o ListenerOutput) ToListenerOutputWithContext(ctx context.Context) ListenerOutput {
	return o
}

func (o ListenerOutput) ToOutput(ctx context.Context) pulumix.Output[Listener] {
	return pulumix.Output[Listener]{
		OutputState: o.OutputState,
	}
}

// ARN of the listener.
func (o ListenerOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date and time that the listener was created, specified in ISO-8601 format.
func (o ListenerOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Default action block for the default listener rule. Default action blocks are defined below.
func (o ListenerOutput) DefaultAction() pulumix.GPtrOutput[ListenerDefaultAction, ListenerDefaultActionOutput] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.GPtrOutput[ListenerDefaultAction, ListenerDefaultActionOutput] {
		return v.DefaultAction
	})
	unwrapped := pulumix.Flatten[*ListenerDefaultAction, pulumix.GPtrOutput[ListenerDefaultAction, ListenerDefaultActionOutput]](value)
	return pulumix.GPtrOutput[ListenerDefaultAction, ListenerDefaultActionOutput]{OutputState: unwrapped.OutputState}
}

func (o ListenerOutput) LastUpdatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.Output[string] { return v.LastUpdatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Standalone ID of the listener, e.g. `listener-0a1b2c3d4e5f6g`.
func (o ListenerOutput) ListenerId() pulumix.Output[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.Output[string] { return v.ListenerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
func (o ListenerOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
func (o ListenerOutput) Port() pulumix.Output[int] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.Output[int] { return v.Port })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Protocol for the listener. Supported values are `HTTP` or `HTTPS`
func (o ListenerOutput) Protocol() pulumix.Output[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.Output[string] { return v.Protocol })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
func (o ListenerOutput) ServiceArn() pulumix.Output[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.Output[string] { return v.ServiceArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the VPC Lattice service. You must include either the `serviceArn` or `serviceIdentifier` arguments.
// > **NOTE:** You must specify one of the following arguments: `serviceArn` or `serviceIdentifier`.
func (o ListenerOutput) ServiceIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.Output[string] { return v.ServiceIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ListenerOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o ListenerOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Listener](o, func(v Listener) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ListenerOutput{})
}
