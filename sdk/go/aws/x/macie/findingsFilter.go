// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package macie

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an [Amazon Macie Findings Filter](https://docs.aws.amazon.com/macie/latest/APIReference/findingsfilters-id.html).
type FindingsFilter struct {
	pulumi.CustomResourceState

	// The action to perform on findings that meet the filter criteria (`findingCriteria`). Valid values are: `ARCHIVE`, suppress (automatically archive) the findings; and, `NOOP`, don't perform any action on the findings.
	Action pulumix.Output[string] `pulumi:"action"`
	// The Amazon Resource Name (ARN) of the Findings Filter.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A custom description of the filter. The description can contain as many as 512 characters.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The criteria to use to filter findings.
	FindingCriteria pulumix.GPtrOutput[FindingsFilterFindingCriteria, FindingsFilterFindingCriteriaOutput] `pulumi:"findingCriteria"`
	// A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Output[string] `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Output[string] `pulumi:"namePrefix"`
	// The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.
	Position pulumix.Output[int] `pulumi:"position"`
	// A map of key-value pairs that specifies the tags to associate with the filter.
	Tags    pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewFindingsFilter registers a new resource with the given unique name, arguments, and options.
func NewFindingsFilter(ctx *pulumi.Context,
	name string, args *FindingsFilterArgs, opts ...pulumi.ResourceOption) (*FindingsFilter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.FindingCriteria == nil {
		return nil, errors.New("invalid value for required argument 'FindingCriteria'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FindingsFilter
	err := ctx.RegisterResource("aws:macie/findingsFilter:FindingsFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFindingsFilter gets an existing FindingsFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFindingsFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FindingsFilterState, opts ...pulumi.ResourceOption) (*FindingsFilter, error) {
	var resource FindingsFilter
	err := ctx.ReadResource("aws:macie/findingsFilter:FindingsFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FindingsFilter resources.
type findingsFilterState struct {
	// The action to perform on findings that meet the filter criteria (`findingCriteria`). Valid values are: `ARCHIVE`, suppress (automatically archive) the findings; and, `NOOP`, don't perform any action on the findings.
	Action *string `pulumi:"action"`
	// The Amazon Resource Name (ARN) of the Findings Filter.
	Arn *string `pulumi:"arn"`
	// A custom description of the filter. The description can contain as many as 512 characters.
	Description *string `pulumi:"description"`
	// The criteria to use to filter findings.
	FindingCriteria *FindingsFilterFindingCriteria `pulumi:"findingCriteria"`
	// A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.
	Position *int `pulumi:"position"`
	// A map of key-value pairs that specifies the tags to associate with the filter.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type FindingsFilterState struct {
	// The action to perform on findings that meet the filter criteria (`findingCriteria`). Valid values are: `ARCHIVE`, suppress (automatically archive) the findings; and, `NOOP`, don't perform any action on the findings.
	Action pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the Findings Filter.
	Arn pulumix.Input[*string]
	// A custom description of the filter. The description can contain as many as 512 characters.
	Description pulumix.Input[*string]
	// The criteria to use to filter findings.
	FindingCriteria pulumix.Input[*FindingsFilterFindingCriteriaArgs]
	// A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.
	Position pulumix.Input[*int]
	// A map of key-value pairs that specifies the tags to associate with the filter.
	Tags    pulumix.Input[map[string]string]
	TagsAll pulumix.Input[map[string]string]
}

func (FindingsFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*findingsFilterState)(nil)).Elem()
}

type findingsFilterArgs struct {
	// The action to perform on findings that meet the filter criteria (`findingCriteria`). Valid values are: `ARCHIVE`, suppress (automatically archive) the findings; and, `NOOP`, don't perform any action on the findings.
	Action string `pulumi:"action"`
	// A custom description of the filter. The description can contain as many as 512 characters.
	Description *string `pulumi:"description"`
	// The criteria to use to filter findings.
	FindingCriteria FindingsFilterFindingCriteria `pulumi:"findingCriteria"`
	// A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.
	Position *int `pulumi:"position"`
	// A map of key-value pairs that specifies the tags to associate with the filter.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a FindingsFilter resource.
type FindingsFilterArgs struct {
	// The action to perform on findings that meet the filter criteria (`findingCriteria`). Valid values are: `ARCHIVE`, suppress (automatically archive) the findings; and, `NOOP`, don't perform any action on the findings.
	Action pulumix.Input[string]
	// A custom description of the filter. The description can contain as many as 512 characters.
	Description pulumix.Input[*string]
	// The criteria to use to filter findings.
	FindingCriteria pulumix.Input[*FindingsFilterFindingCriteriaArgs]
	// A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.
	Position pulumix.Input[*int]
	// A map of key-value pairs that specifies the tags to associate with the filter.
	Tags pulumix.Input[map[string]string]
}

func (FindingsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*findingsFilterArgs)(nil)).Elem()
}

type FindingsFilterOutput struct{ *pulumi.OutputState }

func (FindingsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FindingsFilter)(nil)).Elem()
}

func (o FindingsFilterOutput) ToFindingsFilterOutput() FindingsFilterOutput {
	return o
}

func (o FindingsFilterOutput) ToFindingsFilterOutputWithContext(ctx context.Context) FindingsFilterOutput {
	return o
}

func (o FindingsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[FindingsFilter] {
	return pulumix.Output[FindingsFilter]{
		OutputState: o.OutputState,
	}
}

// The action to perform on findings that meet the filter criteria (`findingCriteria`). Valid values are: `ARCHIVE`, suppress (automatically archive) the findings; and, `NOOP`, don't perform any action on the findings.
func (o FindingsFilterOutput) Action() pulumix.Output[string] {
	value := pulumix.Apply[FindingsFilter](o, func(v FindingsFilter) pulumix.Output[string] { return v.Action })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the Findings Filter.
func (o FindingsFilterOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[FindingsFilter](o, func(v FindingsFilter) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A custom description of the filter. The description can contain as many as 512 characters.
func (o FindingsFilterOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[FindingsFilter](o, func(v FindingsFilter) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The criteria to use to filter findings.
func (o FindingsFilterOutput) FindingCriteria() pulumix.GPtrOutput[FindingsFilterFindingCriteria, FindingsFilterFindingCriteriaOutput] {
	value := pulumix.Apply[FindingsFilter](o, func(v FindingsFilter) pulumix.GPtrOutput[FindingsFilterFindingCriteria, FindingsFilterFindingCriteriaOutput] {
		return v.FindingCriteria
	})
	unwrapped := pulumix.Flatten[*FindingsFilterFindingCriteria, pulumix.GPtrOutput[FindingsFilterFindingCriteria, FindingsFilterFindingCriteriaOutput]](value)
	return pulumix.GPtrOutput[FindingsFilterFindingCriteria, FindingsFilterFindingCriteriaOutput]{OutputState: unwrapped.OutputState}
}

// A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters. If omitted, the provider will assign a random, unique name. Conflicts with `namePrefix`.
func (o FindingsFilterOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[FindingsFilter](o, func(v FindingsFilter) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
func (o FindingsFilterOutput) NamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[FindingsFilter](o, func(v FindingsFilter) pulumix.Output[string] { return v.NamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.
func (o FindingsFilterOutput) Position() pulumix.Output[int] {
	value := pulumix.Apply[FindingsFilter](o, func(v FindingsFilter) pulumix.Output[int] { return v.Position })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// A map of key-value pairs that specifies the tags to associate with the filter.
func (o FindingsFilterOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[FindingsFilter](o, func(v FindingsFilter) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o FindingsFilterOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[FindingsFilter](o, func(v FindingsFilter) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(FindingsFilterOutput{})
}
