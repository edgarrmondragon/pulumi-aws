// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53recoverycontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ClusterClusterEndpoint struct {
	// Cluster endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// Region of the endpoint.
	Region *string `pulumi:"region"`
}

type ClusterClusterEndpointArgs struct {
	// Cluster endpoint.
	Endpoint pulumix.Input[*string] `pulumi:"endpoint"`
	// Region of the endpoint.
	Region pulumix.Input[*string] `pulumi:"region"`
}

func (ClusterClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterEndpoint)(nil)).Elem()
}

func (i ClusterClusterEndpointArgs) ToClusterClusterEndpointOutput() ClusterClusterEndpointOutput {
	return i.ToClusterClusterEndpointOutputWithContext(context.Background())
}

func (i ClusterClusterEndpointArgs) ToClusterClusterEndpointOutputWithContext(ctx context.Context) ClusterClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterEndpointOutput)
}

func (i *ClusterClusterEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[*ClusterClusterEndpointArgs] {
	return pulumix.Val(i)
}

type ClusterClusterEndpointOutput struct{ *pulumi.OutputState }

func (ClusterClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterEndpoint)(nil)).Elem()
}

func (o ClusterClusterEndpointOutput) ToClusterClusterEndpointOutput() ClusterClusterEndpointOutput {
	return o
}

func (o ClusterClusterEndpointOutput) ToClusterClusterEndpointOutputWithContext(ctx context.Context) ClusterClusterEndpointOutput {
	return o
}

func (o ClusterClusterEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterClusterEndpoint] {
	return pulumix.Output[ClusterClusterEndpoint]{
		OutputState: o.OutputState,
	}
}

// Cluster endpoint.
func (o ClusterClusterEndpointOutput) Endpoint() pulumix.Output[*string] {
	return pulumix.Apply[ClusterClusterEndpoint](o, func(v ClusterClusterEndpoint) *string { return v.Endpoint })
}

// Region of the endpoint.
func (o ClusterClusterEndpointOutput) Region() pulumix.Output[*string] {
	return pulumix.Apply[ClusterClusterEndpoint](o, func(v ClusterClusterEndpoint) *string { return v.Region })
}

type SafetyRuleRuleConfig struct {
	// Logical negation of the rule.
	Inverted bool `pulumi:"inverted"`
	// Number of controls that must be set when you specify an `ATLEAST` type rule.
	Threshold int `pulumi:"threshold"`
	// Rule type. Valid values are `ATLEAST`, `AND`, and `OR`.
	Type string `pulumi:"type"`
}

type SafetyRuleRuleConfigArgs struct {
	// Logical negation of the rule.
	Inverted pulumix.Input[bool] `pulumi:"inverted"`
	// Number of controls that must be set when you specify an `ATLEAST` type rule.
	Threshold pulumix.Input[int] `pulumi:"threshold"`
	// Rule type. Valid values are `ATLEAST`, `AND`, and `OR`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (SafetyRuleRuleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SafetyRuleRuleConfig)(nil)).Elem()
}

func (i SafetyRuleRuleConfigArgs) ToSafetyRuleRuleConfigOutput() SafetyRuleRuleConfigOutput {
	return i.ToSafetyRuleRuleConfigOutputWithContext(context.Background())
}

func (i SafetyRuleRuleConfigArgs) ToSafetyRuleRuleConfigOutputWithContext(ctx context.Context) SafetyRuleRuleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SafetyRuleRuleConfigOutput)
}

func (i *SafetyRuleRuleConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*SafetyRuleRuleConfigArgs] {
	return pulumix.Val(i)
}

type SafetyRuleRuleConfigOutput struct{ *pulumi.OutputState }

func (SafetyRuleRuleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SafetyRuleRuleConfig)(nil)).Elem()
}

func (o SafetyRuleRuleConfigOutput) ToSafetyRuleRuleConfigOutput() SafetyRuleRuleConfigOutput {
	return o
}

func (o SafetyRuleRuleConfigOutput) ToSafetyRuleRuleConfigOutputWithContext(ctx context.Context) SafetyRuleRuleConfigOutput {
	return o
}

func (o SafetyRuleRuleConfigOutput) ToOutput(ctx context.Context) pulumix.Output[SafetyRuleRuleConfig] {
	return pulumix.Output[SafetyRuleRuleConfig]{
		OutputState: o.OutputState,
	}
}

// Logical negation of the rule.
func (o SafetyRuleRuleConfigOutput) Inverted() pulumix.Output[bool] {
	return pulumix.Apply[SafetyRuleRuleConfig](o, func(v SafetyRuleRuleConfig) bool { return v.Inverted })
}

// Number of controls that must be set when you specify an `ATLEAST` type rule.
func (o SafetyRuleRuleConfigOutput) Threshold() pulumix.Output[int] {
	return pulumix.Apply[SafetyRuleRuleConfig](o, func(v SafetyRuleRuleConfig) int { return v.Threshold })
}

// Rule type. Valid values are `ATLEAST`, `AND`, and `OR`.
func (o SafetyRuleRuleConfigOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[SafetyRuleRuleConfig](o, func(v SafetyRuleRuleConfig) string { return v.Type })
}

func init() {
	pulumi.RegisterOutputType(ClusterClusterEndpointOutput{})
	pulumi.RegisterOutputType(SafetyRuleRuleConfigOutput{})
}
