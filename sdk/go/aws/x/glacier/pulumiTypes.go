// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glacier

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type VaultNotification struct {
	// You can configure a vault to publish a notification for `ArchiveRetrievalCompleted` and `InventoryRetrievalCompleted` events.
	Events []string `pulumi:"events"`
	// The SNS Topic ARN.
	SnsTopic string `pulumi:"snsTopic"`
}

type VaultNotificationArgs struct {
	// You can configure a vault to publish a notification for `ArchiveRetrievalCompleted` and `InventoryRetrievalCompleted` events.
	Events pulumix.Input[[]string] `pulumi:"events"`
	// The SNS Topic ARN.
	SnsTopic pulumix.Input[string] `pulumi:"snsTopic"`
}

func (VaultNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultNotification)(nil)).Elem()
}

func (i VaultNotificationArgs) ToVaultNotificationOutput() VaultNotificationOutput {
	return i.ToVaultNotificationOutputWithContext(context.Background())
}

func (i VaultNotificationArgs) ToVaultNotificationOutputWithContext(ctx context.Context) VaultNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultNotificationOutput)
}

func (i *VaultNotificationArgs) ToOutput(ctx context.Context) pulumix.Output[*VaultNotificationArgs] {
	return pulumix.Val(i)
}

type VaultNotificationOutput struct{ *pulumi.OutputState }

func (VaultNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VaultNotification)(nil)).Elem()
}

func (o VaultNotificationOutput) ToVaultNotificationOutput() VaultNotificationOutput {
	return o
}

func (o VaultNotificationOutput) ToVaultNotificationOutputWithContext(ctx context.Context) VaultNotificationOutput {
	return o
}

func (o VaultNotificationOutput) ToOutput(ctx context.Context) pulumix.Output[VaultNotification] {
	return pulumix.Output[VaultNotification]{
		OutputState: o.OutputState,
	}
}

// You can configure a vault to publish a notification for `ArchiveRetrievalCompleted` and `InventoryRetrievalCompleted` events.
func (o VaultNotificationOutput) Events() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[VaultNotification](o, func(v VaultNotification) []string { return v.Events })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The SNS Topic ARN.
func (o VaultNotificationOutput) SnsTopic() pulumix.Output[string] {
	return pulumix.Apply[VaultNotification](o, func(v VaultNotification) string { return v.SnsTopic })
}

func init() {
	pulumi.RegisterOutputType(VaultNotificationOutput{})
}
