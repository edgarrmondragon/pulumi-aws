// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directoryservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Simple or Managed Microsoft directory in AWS Directory Service.
type Directory struct {
	pulumi.CustomResourceState

	// The access URL for the directory, such as `http://alias.awsapps.com`.
	AccessUrl pulumix.Output[string] `pulumi:"accessUrl"`
	// The alias for the directory (must be unique amongst all aliases in AWS). Required for `enableSso`.
	Alias pulumix.Output[string] `pulumi:"alias"`
	// Connector related information about the directory. Fields documented below.
	ConnectSettings pulumix.GPtrOutput[DirectoryConnectSettings, DirectoryConnectSettingsOutput] `pulumi:"connectSettings"`
	// A textual description for the directory.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The number of domain controllers desired in the directory. Minimum value of `2`. Scaling of domain controllers is only supported for `MicrosoftAD` directories.
	DesiredNumberOfDomainControllers pulumix.Output[int] `pulumi:"desiredNumberOfDomainControllers"`
	// A list of IP addresses of the DNS servers for the directory or connector.
	DnsIpAddresses pulumix.ArrayOutput[string] `pulumi:"dnsIpAddresses"`
	// The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise`.
	Edition pulumix.Output[string] `pulumi:"edition"`
	// Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
	EnableSso pulumix.Output[*bool] `pulumi:"enableSso"`
	// The fully qualified name for the directory, such as `corp.example.com`
	Name pulumix.Output[string] `pulumi:"name"`
	// The password for the directory administrator or connector user.
	Password pulumix.Output[string] `pulumi:"password"`
	// The ID of the security group created by the directory.
	SecurityGroupId pulumix.Output[string] `pulumi:"securityGroupId"`
	// The short name of the directory, such as `CORP`.
	ShortName pulumix.Output[string] `pulumi:"shortName"`
	// (For `SimpleAD` and `ADConnector` types) The size of the directory (`Small` or `Large` are accepted values). `Large` by default.
	Size pulumix.Output[string] `pulumi:"size"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
	Type pulumix.Output[*string] `pulumi:"type"`
	// VPC related information about the directory. Fields documented below.
	VpcSettings pulumix.GPtrOutput[DirectoryVpcSettings, DirectoryVpcSettingsOutput] `pulumi:"vpcSettings"`
}

// NewDirectory registers a new resource with the given unique name, arguments, and options.
func NewDirectory(ctx *pulumi.Context,
	name string, args *DirectoryArgs, opts ...pulumi.ResourceOption) (*Directory, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Password != nil {
		untypedSecretValue := pulumi.ToSecret(args.Password.ToOutput(ctx.Context()).Untyped())
		args.Password = pulumix.MustConvertTyped[string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Directory
	err := ctx.RegisterResource("aws:directoryservice/directory:Directory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectory gets an existing Directory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectoryState, opts ...pulumi.ResourceOption) (*Directory, error) {
	var resource Directory
	err := ctx.ReadResource("aws:directoryservice/directory:Directory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Directory resources.
type directoryState struct {
	// The access URL for the directory, such as `http://alias.awsapps.com`.
	AccessUrl *string `pulumi:"accessUrl"`
	// The alias for the directory (must be unique amongst all aliases in AWS). Required for `enableSso`.
	Alias *string `pulumi:"alias"`
	// Connector related information about the directory. Fields documented below.
	ConnectSettings *DirectoryConnectSettings `pulumi:"connectSettings"`
	// A textual description for the directory.
	Description *string `pulumi:"description"`
	// The number of domain controllers desired in the directory. Minimum value of `2`. Scaling of domain controllers is only supported for `MicrosoftAD` directories.
	DesiredNumberOfDomainControllers *int `pulumi:"desiredNumberOfDomainControllers"`
	// A list of IP addresses of the DNS servers for the directory or connector.
	DnsIpAddresses []string `pulumi:"dnsIpAddresses"`
	// The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise`.
	Edition *string `pulumi:"edition"`
	// Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
	EnableSso *bool `pulumi:"enableSso"`
	// The fully qualified name for the directory, such as `corp.example.com`
	Name *string `pulumi:"name"`
	// The password for the directory administrator or connector user.
	Password *string `pulumi:"password"`
	// The ID of the security group created by the directory.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The short name of the directory, such as `CORP`.
	ShortName *string `pulumi:"shortName"`
	// (For `SimpleAD` and `ADConnector` types) The size of the directory (`Small` or `Large` are accepted values). `Large` by default.
	Size *string `pulumi:"size"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
	Type *string `pulumi:"type"`
	// VPC related information about the directory. Fields documented below.
	VpcSettings *DirectoryVpcSettings `pulumi:"vpcSettings"`
}

type DirectoryState struct {
	// The access URL for the directory, such as `http://alias.awsapps.com`.
	AccessUrl pulumix.Input[*string]
	// The alias for the directory (must be unique amongst all aliases in AWS). Required for `enableSso`.
	Alias pulumix.Input[*string]
	// Connector related information about the directory. Fields documented below.
	ConnectSettings pulumix.Input[*DirectoryConnectSettingsArgs]
	// A textual description for the directory.
	Description pulumix.Input[*string]
	// The number of domain controllers desired in the directory. Minimum value of `2`. Scaling of domain controllers is only supported for `MicrosoftAD` directories.
	DesiredNumberOfDomainControllers pulumix.Input[*int]
	// A list of IP addresses of the DNS servers for the directory or connector.
	DnsIpAddresses pulumix.Input[[]string]
	// The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise`.
	Edition pulumix.Input[*string]
	// Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
	EnableSso pulumix.Input[*bool]
	// The fully qualified name for the directory, such as `corp.example.com`
	Name pulumix.Input[*string]
	// The password for the directory administrator or connector user.
	Password pulumix.Input[*string]
	// The ID of the security group created by the directory.
	SecurityGroupId pulumix.Input[*string]
	// The short name of the directory, such as `CORP`.
	ShortName pulumix.Input[*string]
	// (For `SimpleAD` and `ADConnector` types) The size of the directory (`Small` or `Large` are accepted values). `Large` by default.
	Size pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
	Type pulumix.Input[*string]
	// VPC related information about the directory. Fields documented below.
	VpcSettings pulumix.Input[*DirectoryVpcSettingsArgs]
}

func (DirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryState)(nil)).Elem()
}

type directoryArgs struct {
	// The alias for the directory (must be unique amongst all aliases in AWS). Required for `enableSso`.
	Alias *string `pulumi:"alias"`
	// Connector related information about the directory. Fields documented below.
	ConnectSettings *DirectoryConnectSettings `pulumi:"connectSettings"`
	// A textual description for the directory.
	Description *string `pulumi:"description"`
	// The number of domain controllers desired in the directory. Minimum value of `2`. Scaling of domain controllers is only supported for `MicrosoftAD` directories.
	DesiredNumberOfDomainControllers *int `pulumi:"desiredNumberOfDomainControllers"`
	// The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise`.
	Edition *string `pulumi:"edition"`
	// Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
	EnableSso *bool `pulumi:"enableSso"`
	// The fully qualified name for the directory, such as `corp.example.com`
	Name string `pulumi:"name"`
	// The password for the directory administrator or connector user.
	Password string `pulumi:"password"`
	// The short name of the directory, such as `CORP`.
	ShortName *string `pulumi:"shortName"`
	// (For `SimpleAD` and `ADConnector` types) The size of the directory (`Small` or `Large` are accepted values). `Large` by default.
	Size *string `pulumi:"size"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
	Type *string `pulumi:"type"`
	// VPC related information about the directory. Fields documented below.
	VpcSettings *DirectoryVpcSettings `pulumi:"vpcSettings"`
}

// The set of arguments for constructing a Directory resource.
type DirectoryArgs struct {
	// The alias for the directory (must be unique amongst all aliases in AWS). Required for `enableSso`.
	Alias pulumix.Input[*string]
	// Connector related information about the directory. Fields documented below.
	ConnectSettings pulumix.Input[*DirectoryConnectSettingsArgs]
	// A textual description for the directory.
	Description pulumix.Input[*string]
	// The number of domain controllers desired in the directory. Minimum value of `2`. Scaling of domain controllers is only supported for `MicrosoftAD` directories.
	DesiredNumberOfDomainControllers pulumix.Input[*int]
	// The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise`.
	Edition pulumix.Input[*string]
	// Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
	EnableSso pulumix.Input[*bool]
	// The fully qualified name for the directory, such as `corp.example.com`
	Name pulumix.Input[string]
	// The password for the directory administrator or connector user.
	Password pulumix.Input[string]
	// The short name of the directory, such as `CORP`.
	ShortName pulumix.Input[*string]
	// (For `SimpleAD` and `ADConnector` types) The size of the directory (`Small` or `Large` are accepted values). `Large` by default.
	Size pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
	Type pulumix.Input[*string]
	// VPC related information about the directory. Fields documented below.
	VpcSettings pulumix.Input[*DirectoryVpcSettingsArgs]
}

func (DirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryArgs)(nil)).Elem()
}

type DirectoryOutput struct{ *pulumi.OutputState }

func (DirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Directory)(nil)).Elem()
}

func (o DirectoryOutput) ToDirectoryOutput() DirectoryOutput {
	return o
}

func (o DirectoryOutput) ToDirectoryOutputWithContext(ctx context.Context) DirectoryOutput {
	return o
}

func (o DirectoryOutput) ToOutput(ctx context.Context) pulumix.Output[Directory] {
	return pulumix.Output[Directory]{
		OutputState: o.OutputState,
	}
}

// The access URL for the directory, such as `http://alias.awsapps.com`.
func (o DirectoryOutput) AccessUrl() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.AccessUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The alias for the directory (must be unique amongst all aliases in AWS). Required for `enableSso`.
func (o DirectoryOutput) Alias() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.Alias })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Connector related information about the directory. Fields documented below.
func (o DirectoryOutput) ConnectSettings() pulumix.GPtrOutput[DirectoryConnectSettings, DirectoryConnectSettingsOutput] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.GPtrOutput[DirectoryConnectSettings, DirectoryConnectSettingsOutput] {
		return v.ConnectSettings
	})
	unwrapped := pulumix.Flatten[*DirectoryConnectSettings, pulumix.GPtrOutput[DirectoryConnectSettings, DirectoryConnectSettingsOutput]](value)
	return pulumix.GPtrOutput[DirectoryConnectSettings, DirectoryConnectSettingsOutput]{OutputState: unwrapped.OutputState}
}

// A textual description for the directory.
func (o DirectoryOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The number of domain controllers desired in the directory. Minimum value of `2`. Scaling of domain controllers is only supported for `MicrosoftAD` directories.
func (o DirectoryOutput) DesiredNumberOfDomainControllers() pulumix.Output[int] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[int] { return v.DesiredNumberOfDomainControllers })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// A list of IP addresses of the DNS servers for the directory or connector.
func (o DirectoryOutput) DnsIpAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.ArrayOutput[string] { return v.DnsIpAddresses })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise`.
func (o DirectoryOutput) Edition() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.Edition })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
func (o DirectoryOutput) EnableSso() pulumix.Output[*bool] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[*bool] { return v.EnableSso })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The fully qualified name for the directory, such as `corp.example.com`
func (o DirectoryOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The password for the directory administrator or connector user.
func (o DirectoryOutput) Password() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.Password })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the security group created by the directory.
func (o DirectoryOutput) SecurityGroupId() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.SecurityGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The short name of the directory, such as `CORP`.
func (o DirectoryOutput) ShortName() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.ShortName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// (For `SimpleAD` and `ADConnector` types) The size of the directory (`Small` or `Large` are accepted values). `Large` by default.
func (o DirectoryOutput) Size() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.Size })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DirectoryOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DirectoryOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
func (o DirectoryOutput) Type() pulumix.Output[*string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[*string] { return v.Type })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// VPC related information about the directory. Fields documented below.
func (o DirectoryOutput) VpcSettings() pulumix.GPtrOutput[DirectoryVpcSettings, DirectoryVpcSettingsOutput] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.GPtrOutput[DirectoryVpcSettings, DirectoryVpcSettingsOutput] {
		return v.VpcSettings
	})
	unwrapped := pulumix.Flatten[*DirectoryVpcSettings, pulumix.GPtrOutput[DirectoryVpcSettings, DirectoryVpcSettingsOutput]](value)
	return pulumix.GPtrOutput[DirectoryVpcSettings, DirectoryVpcSettingsOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DirectoryOutput{})
}
