// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud9

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an environment member to an AWS Cloud9 development environment.
type EnvironmentMembership struct {
	pulumi.CustomResourceState

	// The ID of the environment that contains the environment member you want to add.
	EnvironmentId pulumix.Output[string] `pulumi:"environmentId"`
	// The type of environment member permissions you want to associate with this environment member. Allowed values are `read-only` and `read-write` .
	Permissions pulumix.Output[string] `pulumi:"permissions"`
	// The Amazon Resource Name (ARN) of the environment member you want to add.
	UserArn pulumix.Output[string] `pulumi:"userArn"`
	// he user ID in AWS Identity and Access Management (AWS IAM) of the environment member.
	UserId pulumix.Output[string] `pulumi:"userId"`
}

// NewEnvironmentMembership registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentMembership(ctx *pulumi.Context,
	name string, args *EnvironmentMembershipArgs, opts ...pulumi.ResourceOption) (*EnvironmentMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.Permissions == nil {
		return nil, errors.New("invalid value for required argument 'Permissions'")
	}
	if args.UserArn == nil {
		return nil, errors.New("invalid value for required argument 'UserArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentMembership
	err := ctx.RegisterResource("aws:cloud9/environmentMembership:EnvironmentMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentMembership gets an existing EnvironmentMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentMembershipState, opts ...pulumi.ResourceOption) (*EnvironmentMembership, error) {
	var resource EnvironmentMembership
	err := ctx.ReadResource("aws:cloud9/environmentMembership:EnvironmentMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentMembership resources.
type environmentMembershipState struct {
	// The ID of the environment that contains the environment member you want to add.
	EnvironmentId *string `pulumi:"environmentId"`
	// The type of environment member permissions you want to associate with this environment member. Allowed values are `read-only` and `read-write` .
	Permissions *string `pulumi:"permissions"`
	// The Amazon Resource Name (ARN) of the environment member you want to add.
	UserArn *string `pulumi:"userArn"`
	// he user ID in AWS Identity and Access Management (AWS IAM) of the environment member.
	UserId *string `pulumi:"userId"`
}

type EnvironmentMembershipState struct {
	// The ID of the environment that contains the environment member you want to add.
	EnvironmentId pulumix.Input[*string]
	// The type of environment member permissions you want to associate with this environment member. Allowed values are `read-only` and `read-write` .
	Permissions pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the environment member you want to add.
	UserArn pulumix.Input[*string]
	// he user ID in AWS Identity and Access Management (AWS IAM) of the environment member.
	UserId pulumix.Input[*string]
}

func (EnvironmentMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentMembershipState)(nil)).Elem()
}

type environmentMembershipArgs struct {
	// The ID of the environment that contains the environment member you want to add.
	EnvironmentId string `pulumi:"environmentId"`
	// The type of environment member permissions you want to associate with this environment member. Allowed values are `read-only` and `read-write` .
	Permissions string `pulumi:"permissions"`
	// The Amazon Resource Name (ARN) of the environment member you want to add.
	UserArn string `pulumi:"userArn"`
}

// The set of arguments for constructing a EnvironmentMembership resource.
type EnvironmentMembershipArgs struct {
	// The ID of the environment that contains the environment member you want to add.
	EnvironmentId pulumix.Input[string]
	// The type of environment member permissions you want to associate with this environment member. Allowed values are `read-only` and `read-write` .
	Permissions pulumix.Input[string]
	// The Amazon Resource Name (ARN) of the environment member you want to add.
	UserArn pulumix.Input[string]
}

func (EnvironmentMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentMembershipArgs)(nil)).Elem()
}

type EnvironmentMembershipOutput struct{ *pulumi.OutputState }

func (EnvironmentMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMembership)(nil)).Elem()
}

func (o EnvironmentMembershipOutput) ToEnvironmentMembershipOutput() EnvironmentMembershipOutput {
	return o
}

func (o EnvironmentMembershipOutput) ToEnvironmentMembershipOutputWithContext(ctx context.Context) EnvironmentMembershipOutput {
	return o
}

func (o EnvironmentMembershipOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentMembership] {
	return pulumix.Output[EnvironmentMembership]{
		OutputState: o.OutputState,
	}
}

// The ID of the environment that contains the environment member you want to add.
func (o EnvironmentMembershipOutput) EnvironmentId() pulumix.Output[string] {
	value := pulumix.Apply[EnvironmentMembership](o, func(v EnvironmentMembership) pulumix.Output[string] { return v.EnvironmentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of environment member permissions you want to associate with this environment member. Allowed values are `read-only` and `read-write` .
func (o EnvironmentMembershipOutput) Permissions() pulumix.Output[string] {
	value := pulumix.Apply[EnvironmentMembership](o, func(v EnvironmentMembership) pulumix.Output[string] { return v.Permissions })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the environment member you want to add.
func (o EnvironmentMembershipOutput) UserArn() pulumix.Output[string] {
	value := pulumix.Apply[EnvironmentMembership](o, func(v EnvironmentMembership) pulumix.Output[string] { return v.UserArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// he user ID in AWS Identity and Access Management (AWS IAM) of the environment member.
func (o EnvironmentMembershipOutput) UserId() pulumix.Output[string] {
	value := pulumix.Apply[EnvironmentMembership](o, func(v EnvironmentMembership) pulumix.Output[string] { return v.UserId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentMembershipOutput{})
}
