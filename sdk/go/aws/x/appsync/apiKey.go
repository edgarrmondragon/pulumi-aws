// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AppSync API Key.
type ApiKey struct {
	pulumi.CustomResourceState

	// ID of the associated AppSync API
	ApiId pulumix.Output[string] `pulumi:"apiId"`
	// API key description. Defaults to "Managed by Pulumi".
	Description pulumix.Output[string] `pulumi:"description"`
	// RFC3339 string representation of the expiry date. Rounded down to nearest hour. By default, it is 7 days from the date of creation.
	Expires pulumix.Output[*string] `pulumi:"expires"`
	// API key
	Key pulumix.Output[string] `pulumi:"key"`
}

// NewApiKey registers a new resource with the given unique name, arguments, and options.
func NewApiKey(ctx *pulumi.Context,
	name string, args *ApiKeyArgs, opts ...pulumi.ResourceOption) (*ApiKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.Description == nil {
		args.Description = pulumix.Ptr("Managed by Pulumi")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"key",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiKey
	err := ctx.RegisterResource("aws:appsync/apiKey:ApiKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiKey gets an existing ApiKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiKeyState, opts ...pulumi.ResourceOption) (*ApiKey, error) {
	var resource ApiKey
	err := ctx.ReadResource("aws:appsync/apiKey:ApiKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiKey resources.
type apiKeyState struct {
	// ID of the associated AppSync API
	ApiId *string `pulumi:"apiId"`
	// API key description. Defaults to "Managed by Pulumi".
	Description *string `pulumi:"description"`
	// RFC3339 string representation of the expiry date. Rounded down to nearest hour. By default, it is 7 days from the date of creation.
	Expires *string `pulumi:"expires"`
	// API key
	Key *string `pulumi:"key"`
}

type ApiKeyState struct {
	// ID of the associated AppSync API
	ApiId pulumix.Input[*string]
	// API key description. Defaults to "Managed by Pulumi".
	Description pulumix.Input[*string]
	// RFC3339 string representation of the expiry date. Rounded down to nearest hour. By default, it is 7 days from the date of creation.
	Expires pulumix.Input[*string]
	// API key
	Key pulumix.Input[*string]
}

func (ApiKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiKeyState)(nil)).Elem()
}

type apiKeyArgs struct {
	// ID of the associated AppSync API
	ApiId string `pulumi:"apiId"`
	// API key description. Defaults to "Managed by Pulumi".
	Description *string `pulumi:"description"`
	// RFC3339 string representation of the expiry date. Rounded down to nearest hour. By default, it is 7 days from the date of creation.
	Expires *string `pulumi:"expires"`
}

// The set of arguments for constructing a ApiKey resource.
type ApiKeyArgs struct {
	// ID of the associated AppSync API
	ApiId pulumix.Input[string]
	// API key description. Defaults to "Managed by Pulumi".
	Description pulumix.Input[*string]
	// RFC3339 string representation of the expiry date. Rounded down to nearest hour. By default, it is 7 days from the date of creation.
	Expires pulumix.Input[*string]
}

func (ApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiKeyArgs)(nil)).Elem()
}

type ApiKeyOutput struct{ *pulumi.OutputState }

func (ApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKey)(nil)).Elem()
}

func (o ApiKeyOutput) ToApiKeyOutput() ApiKeyOutput {
	return o
}

func (o ApiKeyOutput) ToApiKeyOutputWithContext(ctx context.Context) ApiKeyOutput {
	return o
}

func (o ApiKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ApiKey] {
	return pulumix.Output[ApiKey]{
		OutputState: o.OutputState,
	}
}

// ID of the associated AppSync API
func (o ApiKeyOutput) ApiId() pulumix.Output[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[string] { return v.ApiId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// API key description. Defaults to "Managed by Pulumi".
func (o ApiKeyOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// RFC3339 string representation of the expiry date. Rounded down to nearest hour. By default, it is 7 days from the date of creation.
func (o ApiKeyOutput) Expires() pulumix.Output[*string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[*string] { return v.Expires })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// API key
func (o ApiKeyOutput) Key() pulumix.Output[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[string] { return v.Key })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ApiKeyOutput{})
}
