// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mwaa

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type EnvironmentLastUpdated struct {
	// The Created At date of the MWAA Environment
	// * `logging_configuration[0].<LOG_CONFIGURATION_TYPE>[0].cloud_watch_log_group_arn` - Provides the ARN for the CloudWatch group where the logs will be published
	CreatedAt *string                       `pulumi:"createdAt"`
	Errors    []EnvironmentLastUpdatedError `pulumi:"errors"`
	// The status of the Amazon MWAA Environment
	Status *string `pulumi:"status"`
}

type EnvironmentLastUpdatedArgs struct {
	// The Created At date of the MWAA Environment
	// * `logging_configuration[0].<LOG_CONFIGURATION_TYPE>[0].cloud_watch_log_group_arn` - Provides the ARN for the CloudWatch group where the logs will be published
	CreatedAt pulumix.Input[*string]                            `pulumi:"createdAt"`
	Errors    pulumix.Input[[]*EnvironmentLastUpdatedErrorArgs] `pulumi:"errors"`
	// The status of the Amazon MWAA Environment
	Status pulumix.Input[*string] `pulumi:"status"`
}

func (EnvironmentLastUpdatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLastUpdated)(nil)).Elem()
}

func (i EnvironmentLastUpdatedArgs) ToEnvironmentLastUpdatedOutput() EnvironmentLastUpdatedOutput {
	return i.ToEnvironmentLastUpdatedOutputWithContext(context.Background())
}

func (i EnvironmentLastUpdatedArgs) ToEnvironmentLastUpdatedOutputWithContext(ctx context.Context) EnvironmentLastUpdatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentLastUpdatedOutput)
}

func (i *EnvironmentLastUpdatedArgs) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentLastUpdatedArgs] {
	return pulumix.Val(i)
}

type EnvironmentLastUpdatedOutput struct{ *pulumi.OutputState }

func (EnvironmentLastUpdatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLastUpdated)(nil)).Elem()
}

func (o EnvironmentLastUpdatedOutput) ToEnvironmentLastUpdatedOutput() EnvironmentLastUpdatedOutput {
	return o
}

func (o EnvironmentLastUpdatedOutput) ToEnvironmentLastUpdatedOutputWithContext(ctx context.Context) EnvironmentLastUpdatedOutput {
	return o
}

func (o EnvironmentLastUpdatedOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentLastUpdated] {
	return pulumix.Output[EnvironmentLastUpdated]{
		OutputState: o.OutputState,
	}
}

// The Created At date of the MWAA Environment
// * `logging_configuration[0].<LOG_CONFIGURATION_TYPE>[0].cloud_watch_log_group_arn` - Provides the ARN for the CloudWatch group where the logs will be published
func (o EnvironmentLastUpdatedOutput) CreatedAt() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLastUpdated](o, func(v EnvironmentLastUpdated) *string { return v.CreatedAt })
}

func (o EnvironmentLastUpdatedOutput) Errors() pulumix.GArrayOutput[EnvironmentLastUpdatedError, EnvironmentLastUpdatedErrorOutput] {
	value := pulumix.Apply[EnvironmentLastUpdated](o, func(v EnvironmentLastUpdated) []EnvironmentLastUpdatedError { return v.Errors })
	return pulumix.GArrayOutput[EnvironmentLastUpdatedError, EnvironmentLastUpdatedErrorOutput]{OutputState: value.OutputState}
}

// The status of the Amazon MWAA Environment
func (o EnvironmentLastUpdatedOutput) Status() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLastUpdated](o, func(v EnvironmentLastUpdated) *string { return v.Status })
}

type EnvironmentLastUpdatedError struct {
	ErrorCode    *string `pulumi:"errorCode"`
	ErrorMessage *string `pulumi:"errorMessage"`
}

type EnvironmentLastUpdatedErrorArgs struct {
	ErrorCode    pulumix.Input[*string] `pulumi:"errorCode"`
	ErrorMessage pulumix.Input[*string] `pulumi:"errorMessage"`
}

func (EnvironmentLastUpdatedErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLastUpdatedError)(nil)).Elem()
}

func (i EnvironmentLastUpdatedErrorArgs) ToEnvironmentLastUpdatedErrorOutput() EnvironmentLastUpdatedErrorOutput {
	return i.ToEnvironmentLastUpdatedErrorOutputWithContext(context.Background())
}

func (i EnvironmentLastUpdatedErrorArgs) ToEnvironmentLastUpdatedErrorOutputWithContext(ctx context.Context) EnvironmentLastUpdatedErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentLastUpdatedErrorOutput)
}

func (i *EnvironmentLastUpdatedErrorArgs) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentLastUpdatedErrorArgs] {
	return pulumix.Val(i)
}

type EnvironmentLastUpdatedErrorOutput struct{ *pulumi.OutputState }

func (EnvironmentLastUpdatedErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLastUpdatedError)(nil)).Elem()
}

func (o EnvironmentLastUpdatedErrorOutput) ToEnvironmentLastUpdatedErrorOutput() EnvironmentLastUpdatedErrorOutput {
	return o
}

func (o EnvironmentLastUpdatedErrorOutput) ToEnvironmentLastUpdatedErrorOutputWithContext(ctx context.Context) EnvironmentLastUpdatedErrorOutput {
	return o
}

func (o EnvironmentLastUpdatedErrorOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentLastUpdatedError] {
	return pulumix.Output[EnvironmentLastUpdatedError]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentLastUpdatedErrorOutput) ErrorCode() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLastUpdatedError](o, func(v EnvironmentLastUpdatedError) *string { return v.ErrorCode })
}

func (o EnvironmentLastUpdatedErrorOutput) ErrorMessage() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLastUpdatedError](o, func(v EnvironmentLastUpdatedError) *string { return v.ErrorMessage })
}

type EnvironmentLoggingConfiguration struct {
	// (Optional) Log configuration options for processing DAGs. See Module logging configuration for more information. Disabled by default.
	DagProcessingLogs *EnvironmentLoggingConfigurationDagProcessingLogs `pulumi:"dagProcessingLogs"`
	// Log configuration options for the schedulers. See Module logging configuration for more information. Disabled by default.
	SchedulerLogs *EnvironmentLoggingConfigurationSchedulerLogs `pulumi:"schedulerLogs"`
	// Log configuration options for DAG tasks. See Module logging configuration for more information. Enabled by default with `INFO` log level.
	TaskLogs *EnvironmentLoggingConfigurationTaskLogs `pulumi:"taskLogs"`
	// Log configuration options for the webservers. See Module logging configuration for more information. Disabled by default.
	WebserverLogs *EnvironmentLoggingConfigurationWebserverLogs `pulumi:"webserverLogs"`
	// Log configuration options for the workers. See Module logging configuration for more information. Disabled by default.
	WorkerLogs *EnvironmentLoggingConfigurationWorkerLogs `pulumi:"workerLogs"`
}

type EnvironmentLoggingConfigurationArgs struct {
	// (Optional) Log configuration options for processing DAGs. See Module logging configuration for more information. Disabled by default.
	DagProcessingLogs pulumix.Input[*EnvironmentLoggingConfigurationDagProcessingLogsArgs] `pulumi:"dagProcessingLogs"`
	// Log configuration options for the schedulers. See Module logging configuration for more information. Disabled by default.
	SchedulerLogs pulumix.Input[*EnvironmentLoggingConfigurationSchedulerLogsArgs] `pulumi:"schedulerLogs"`
	// Log configuration options for DAG tasks. See Module logging configuration for more information. Enabled by default with `INFO` log level.
	TaskLogs pulumix.Input[*EnvironmentLoggingConfigurationTaskLogsArgs] `pulumi:"taskLogs"`
	// Log configuration options for the webservers. See Module logging configuration for more information. Disabled by default.
	WebserverLogs pulumix.Input[*EnvironmentLoggingConfigurationWebserverLogsArgs] `pulumi:"webserverLogs"`
	// Log configuration options for the workers. See Module logging configuration for more information. Disabled by default.
	WorkerLogs pulumix.Input[*EnvironmentLoggingConfigurationWorkerLogsArgs] `pulumi:"workerLogs"`
}

func (EnvironmentLoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfiguration)(nil)).Elem()
}

func (i EnvironmentLoggingConfigurationArgs) ToEnvironmentLoggingConfigurationOutput() EnvironmentLoggingConfigurationOutput {
	return i.ToEnvironmentLoggingConfigurationOutputWithContext(context.Background())
}

func (i EnvironmentLoggingConfigurationArgs) ToEnvironmentLoggingConfigurationOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentLoggingConfigurationOutput)
}

func (i *EnvironmentLoggingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentLoggingConfigurationArgs] {
	return pulumix.Val(i)
}

type EnvironmentLoggingConfigurationOutput struct{ *pulumi.OutputState }

func (EnvironmentLoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfiguration)(nil)).Elem()
}

func (o EnvironmentLoggingConfigurationOutput) ToEnvironmentLoggingConfigurationOutput() EnvironmentLoggingConfigurationOutput {
	return o
}

func (o EnvironmentLoggingConfigurationOutput) ToEnvironmentLoggingConfigurationOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationOutput {
	return o
}

func (o EnvironmentLoggingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentLoggingConfiguration] {
	return pulumix.Output[EnvironmentLoggingConfiguration]{
		OutputState: o.OutputState,
	}
}

// (Optional) Log configuration options for processing DAGs. See Module logging configuration for more information. Disabled by default.
func (o EnvironmentLoggingConfigurationOutput) DagProcessingLogs() pulumix.GPtrOutput[EnvironmentLoggingConfigurationDagProcessingLogs, EnvironmentLoggingConfigurationDagProcessingLogsOutput] {
	value := pulumix.Apply[EnvironmentLoggingConfiguration](o, func(v EnvironmentLoggingConfiguration) *EnvironmentLoggingConfigurationDagProcessingLogs {
		return v.DagProcessingLogs
	})
	return pulumix.GPtrOutput[EnvironmentLoggingConfigurationDagProcessingLogs, EnvironmentLoggingConfigurationDagProcessingLogsOutput]{OutputState: value.OutputState}
}

// Log configuration options for the schedulers. See Module logging configuration for more information. Disabled by default.
func (o EnvironmentLoggingConfigurationOutput) SchedulerLogs() pulumix.GPtrOutput[EnvironmentLoggingConfigurationSchedulerLogs, EnvironmentLoggingConfigurationSchedulerLogsOutput] {
	value := pulumix.Apply[EnvironmentLoggingConfiguration](o, func(v EnvironmentLoggingConfiguration) *EnvironmentLoggingConfigurationSchedulerLogs {
		return v.SchedulerLogs
	})
	return pulumix.GPtrOutput[EnvironmentLoggingConfigurationSchedulerLogs, EnvironmentLoggingConfigurationSchedulerLogsOutput]{OutputState: value.OutputState}
}

// Log configuration options for DAG tasks. See Module logging configuration for more information. Enabled by default with `INFO` log level.
func (o EnvironmentLoggingConfigurationOutput) TaskLogs() pulumix.GPtrOutput[EnvironmentLoggingConfigurationTaskLogs, EnvironmentLoggingConfigurationTaskLogsOutput] {
	value := pulumix.Apply[EnvironmentLoggingConfiguration](o, func(v EnvironmentLoggingConfiguration) *EnvironmentLoggingConfigurationTaskLogs { return v.TaskLogs })
	return pulumix.GPtrOutput[EnvironmentLoggingConfigurationTaskLogs, EnvironmentLoggingConfigurationTaskLogsOutput]{OutputState: value.OutputState}
}

// Log configuration options for the webservers. See Module logging configuration for more information. Disabled by default.
func (o EnvironmentLoggingConfigurationOutput) WebserverLogs() pulumix.GPtrOutput[EnvironmentLoggingConfigurationWebserverLogs, EnvironmentLoggingConfigurationWebserverLogsOutput] {
	value := pulumix.Apply[EnvironmentLoggingConfiguration](o, func(v EnvironmentLoggingConfiguration) *EnvironmentLoggingConfigurationWebserverLogs {
		return v.WebserverLogs
	})
	return pulumix.GPtrOutput[EnvironmentLoggingConfigurationWebserverLogs, EnvironmentLoggingConfigurationWebserverLogsOutput]{OutputState: value.OutputState}
}

// Log configuration options for the workers. See Module logging configuration for more information. Disabled by default.
func (o EnvironmentLoggingConfigurationOutput) WorkerLogs() pulumix.GPtrOutput[EnvironmentLoggingConfigurationWorkerLogs, EnvironmentLoggingConfigurationWorkerLogsOutput] {
	value := pulumix.Apply[EnvironmentLoggingConfiguration](o, func(v EnvironmentLoggingConfiguration) *EnvironmentLoggingConfigurationWorkerLogs {
		return v.WorkerLogs
	})
	return pulumix.GPtrOutput[EnvironmentLoggingConfigurationWorkerLogs, EnvironmentLoggingConfigurationWorkerLogsOutput]{OutputState: value.OutputState}
}

type EnvironmentLoggingConfigurationDagProcessingLogs struct {
	CloudWatchLogGroupArn *string `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled *bool `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel *string `pulumi:"logLevel"`
}

type EnvironmentLoggingConfigurationDagProcessingLogsArgs struct {
	CloudWatchLogGroupArn pulumix.Input[*string] `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel pulumix.Input[*string] `pulumi:"logLevel"`
}

func (EnvironmentLoggingConfigurationDagProcessingLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationDagProcessingLogs)(nil)).Elem()
}

func (i EnvironmentLoggingConfigurationDagProcessingLogsArgs) ToEnvironmentLoggingConfigurationDagProcessingLogsOutput() EnvironmentLoggingConfigurationDagProcessingLogsOutput {
	return i.ToEnvironmentLoggingConfigurationDagProcessingLogsOutputWithContext(context.Background())
}

func (i EnvironmentLoggingConfigurationDagProcessingLogsArgs) ToEnvironmentLoggingConfigurationDagProcessingLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationDagProcessingLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentLoggingConfigurationDagProcessingLogsOutput)
}

func (i *EnvironmentLoggingConfigurationDagProcessingLogsArgs) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentLoggingConfigurationDagProcessingLogsArgs] {
	return pulumix.Val(i)
}

type EnvironmentLoggingConfigurationDagProcessingLogsOutput struct{ *pulumi.OutputState }

func (EnvironmentLoggingConfigurationDagProcessingLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationDagProcessingLogs)(nil)).Elem()
}

func (o EnvironmentLoggingConfigurationDagProcessingLogsOutput) ToEnvironmentLoggingConfigurationDagProcessingLogsOutput() EnvironmentLoggingConfigurationDagProcessingLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationDagProcessingLogsOutput) ToEnvironmentLoggingConfigurationDagProcessingLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationDagProcessingLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationDagProcessingLogsOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentLoggingConfigurationDagProcessingLogs] {
	return pulumix.Output[EnvironmentLoggingConfigurationDagProcessingLogs]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentLoggingConfigurationDagProcessingLogsOutput) CloudWatchLogGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationDagProcessingLogs](o, func(v EnvironmentLoggingConfigurationDagProcessingLogs) *string { return v.CloudWatchLogGroupArn })
}

// Enabling or disabling the collection of logs
func (o EnvironmentLoggingConfigurationDagProcessingLogsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[EnvironmentLoggingConfigurationDagProcessingLogs](o, func(v EnvironmentLoggingConfigurationDagProcessingLogs) *bool { return v.Enabled })
}

// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
func (o EnvironmentLoggingConfigurationDagProcessingLogsOutput) LogLevel() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationDagProcessingLogs](o, func(v EnvironmentLoggingConfigurationDagProcessingLogs) *string { return v.LogLevel })
}

type EnvironmentLoggingConfigurationSchedulerLogs struct {
	CloudWatchLogGroupArn *string `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled *bool `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel *string `pulumi:"logLevel"`
}

type EnvironmentLoggingConfigurationSchedulerLogsArgs struct {
	CloudWatchLogGroupArn pulumix.Input[*string] `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel pulumix.Input[*string] `pulumi:"logLevel"`
}

func (EnvironmentLoggingConfigurationSchedulerLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationSchedulerLogs)(nil)).Elem()
}

func (i EnvironmentLoggingConfigurationSchedulerLogsArgs) ToEnvironmentLoggingConfigurationSchedulerLogsOutput() EnvironmentLoggingConfigurationSchedulerLogsOutput {
	return i.ToEnvironmentLoggingConfigurationSchedulerLogsOutputWithContext(context.Background())
}

func (i EnvironmentLoggingConfigurationSchedulerLogsArgs) ToEnvironmentLoggingConfigurationSchedulerLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationSchedulerLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentLoggingConfigurationSchedulerLogsOutput)
}

func (i *EnvironmentLoggingConfigurationSchedulerLogsArgs) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentLoggingConfigurationSchedulerLogsArgs] {
	return pulumix.Val(i)
}

type EnvironmentLoggingConfigurationSchedulerLogsOutput struct{ *pulumi.OutputState }

func (EnvironmentLoggingConfigurationSchedulerLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationSchedulerLogs)(nil)).Elem()
}

func (o EnvironmentLoggingConfigurationSchedulerLogsOutput) ToEnvironmentLoggingConfigurationSchedulerLogsOutput() EnvironmentLoggingConfigurationSchedulerLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationSchedulerLogsOutput) ToEnvironmentLoggingConfigurationSchedulerLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationSchedulerLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationSchedulerLogsOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentLoggingConfigurationSchedulerLogs] {
	return pulumix.Output[EnvironmentLoggingConfigurationSchedulerLogs]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentLoggingConfigurationSchedulerLogsOutput) CloudWatchLogGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationSchedulerLogs](o, func(v EnvironmentLoggingConfigurationSchedulerLogs) *string { return v.CloudWatchLogGroupArn })
}

// Enabling or disabling the collection of logs
func (o EnvironmentLoggingConfigurationSchedulerLogsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[EnvironmentLoggingConfigurationSchedulerLogs](o, func(v EnvironmentLoggingConfigurationSchedulerLogs) *bool { return v.Enabled })
}

// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
func (o EnvironmentLoggingConfigurationSchedulerLogsOutput) LogLevel() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationSchedulerLogs](o, func(v EnvironmentLoggingConfigurationSchedulerLogs) *string { return v.LogLevel })
}

type EnvironmentLoggingConfigurationTaskLogs struct {
	CloudWatchLogGroupArn *string `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled *bool `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel *string `pulumi:"logLevel"`
}

type EnvironmentLoggingConfigurationTaskLogsArgs struct {
	CloudWatchLogGroupArn pulumix.Input[*string] `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel pulumix.Input[*string] `pulumi:"logLevel"`
}

func (EnvironmentLoggingConfigurationTaskLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationTaskLogs)(nil)).Elem()
}

func (i EnvironmentLoggingConfigurationTaskLogsArgs) ToEnvironmentLoggingConfigurationTaskLogsOutput() EnvironmentLoggingConfigurationTaskLogsOutput {
	return i.ToEnvironmentLoggingConfigurationTaskLogsOutputWithContext(context.Background())
}

func (i EnvironmentLoggingConfigurationTaskLogsArgs) ToEnvironmentLoggingConfigurationTaskLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationTaskLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentLoggingConfigurationTaskLogsOutput)
}

func (i *EnvironmentLoggingConfigurationTaskLogsArgs) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentLoggingConfigurationTaskLogsArgs] {
	return pulumix.Val(i)
}

type EnvironmentLoggingConfigurationTaskLogsOutput struct{ *pulumi.OutputState }

func (EnvironmentLoggingConfigurationTaskLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationTaskLogs)(nil)).Elem()
}

func (o EnvironmentLoggingConfigurationTaskLogsOutput) ToEnvironmentLoggingConfigurationTaskLogsOutput() EnvironmentLoggingConfigurationTaskLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationTaskLogsOutput) ToEnvironmentLoggingConfigurationTaskLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationTaskLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationTaskLogsOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentLoggingConfigurationTaskLogs] {
	return pulumix.Output[EnvironmentLoggingConfigurationTaskLogs]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentLoggingConfigurationTaskLogsOutput) CloudWatchLogGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationTaskLogs](o, func(v EnvironmentLoggingConfigurationTaskLogs) *string { return v.CloudWatchLogGroupArn })
}

// Enabling or disabling the collection of logs
func (o EnvironmentLoggingConfigurationTaskLogsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[EnvironmentLoggingConfigurationTaskLogs](o, func(v EnvironmentLoggingConfigurationTaskLogs) *bool { return v.Enabled })
}

// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
func (o EnvironmentLoggingConfigurationTaskLogsOutput) LogLevel() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationTaskLogs](o, func(v EnvironmentLoggingConfigurationTaskLogs) *string { return v.LogLevel })
}

type EnvironmentLoggingConfigurationWebserverLogs struct {
	CloudWatchLogGroupArn *string `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled *bool `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel *string `pulumi:"logLevel"`
}

type EnvironmentLoggingConfigurationWebserverLogsArgs struct {
	CloudWatchLogGroupArn pulumix.Input[*string] `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel pulumix.Input[*string] `pulumi:"logLevel"`
}

func (EnvironmentLoggingConfigurationWebserverLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationWebserverLogs)(nil)).Elem()
}

func (i EnvironmentLoggingConfigurationWebserverLogsArgs) ToEnvironmentLoggingConfigurationWebserverLogsOutput() EnvironmentLoggingConfigurationWebserverLogsOutput {
	return i.ToEnvironmentLoggingConfigurationWebserverLogsOutputWithContext(context.Background())
}

func (i EnvironmentLoggingConfigurationWebserverLogsArgs) ToEnvironmentLoggingConfigurationWebserverLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationWebserverLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentLoggingConfigurationWebserverLogsOutput)
}

func (i *EnvironmentLoggingConfigurationWebserverLogsArgs) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentLoggingConfigurationWebserverLogsArgs] {
	return pulumix.Val(i)
}

type EnvironmentLoggingConfigurationWebserverLogsOutput struct{ *pulumi.OutputState }

func (EnvironmentLoggingConfigurationWebserverLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationWebserverLogs)(nil)).Elem()
}

func (o EnvironmentLoggingConfigurationWebserverLogsOutput) ToEnvironmentLoggingConfigurationWebserverLogsOutput() EnvironmentLoggingConfigurationWebserverLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationWebserverLogsOutput) ToEnvironmentLoggingConfigurationWebserverLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationWebserverLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationWebserverLogsOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentLoggingConfigurationWebserverLogs] {
	return pulumix.Output[EnvironmentLoggingConfigurationWebserverLogs]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentLoggingConfigurationWebserverLogsOutput) CloudWatchLogGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationWebserverLogs](o, func(v EnvironmentLoggingConfigurationWebserverLogs) *string { return v.CloudWatchLogGroupArn })
}

// Enabling or disabling the collection of logs
func (o EnvironmentLoggingConfigurationWebserverLogsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[EnvironmentLoggingConfigurationWebserverLogs](o, func(v EnvironmentLoggingConfigurationWebserverLogs) *bool { return v.Enabled })
}

// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
func (o EnvironmentLoggingConfigurationWebserverLogsOutput) LogLevel() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationWebserverLogs](o, func(v EnvironmentLoggingConfigurationWebserverLogs) *string { return v.LogLevel })
}

type EnvironmentLoggingConfigurationWorkerLogs struct {
	CloudWatchLogGroupArn *string `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled *bool `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel *string `pulumi:"logLevel"`
}

type EnvironmentLoggingConfigurationWorkerLogsArgs struct {
	CloudWatchLogGroupArn pulumix.Input[*string] `pulumi:"cloudWatchLogGroupArn"`
	// Enabling or disabling the collection of logs
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
	LogLevel pulumix.Input[*string] `pulumi:"logLevel"`
}

func (EnvironmentLoggingConfigurationWorkerLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationWorkerLogs)(nil)).Elem()
}

func (i EnvironmentLoggingConfigurationWorkerLogsArgs) ToEnvironmentLoggingConfigurationWorkerLogsOutput() EnvironmentLoggingConfigurationWorkerLogsOutput {
	return i.ToEnvironmentLoggingConfigurationWorkerLogsOutputWithContext(context.Background())
}

func (i EnvironmentLoggingConfigurationWorkerLogsArgs) ToEnvironmentLoggingConfigurationWorkerLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationWorkerLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentLoggingConfigurationWorkerLogsOutput)
}

func (i *EnvironmentLoggingConfigurationWorkerLogsArgs) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentLoggingConfigurationWorkerLogsArgs] {
	return pulumix.Val(i)
}

type EnvironmentLoggingConfigurationWorkerLogsOutput struct{ *pulumi.OutputState }

func (EnvironmentLoggingConfigurationWorkerLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentLoggingConfigurationWorkerLogs)(nil)).Elem()
}

func (o EnvironmentLoggingConfigurationWorkerLogsOutput) ToEnvironmentLoggingConfigurationWorkerLogsOutput() EnvironmentLoggingConfigurationWorkerLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationWorkerLogsOutput) ToEnvironmentLoggingConfigurationWorkerLogsOutputWithContext(ctx context.Context) EnvironmentLoggingConfigurationWorkerLogsOutput {
	return o
}

func (o EnvironmentLoggingConfigurationWorkerLogsOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentLoggingConfigurationWorkerLogs] {
	return pulumix.Output[EnvironmentLoggingConfigurationWorkerLogs]{
		OutputState: o.OutputState,
	}
}

func (o EnvironmentLoggingConfigurationWorkerLogsOutput) CloudWatchLogGroupArn() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationWorkerLogs](o, func(v EnvironmentLoggingConfigurationWorkerLogs) *string { return v.CloudWatchLogGroupArn })
}

// Enabling or disabling the collection of logs
func (o EnvironmentLoggingConfigurationWorkerLogsOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[EnvironmentLoggingConfigurationWorkerLogs](o, func(v EnvironmentLoggingConfigurationWorkerLogs) *bool { return v.Enabled })
}

// Logging level. Valid values: `CRITICAL`, `ERROR`, `WARNING`, `INFO`, `DEBUG`. Will be `INFO` by default.
func (o EnvironmentLoggingConfigurationWorkerLogsOutput) LogLevel() pulumix.Output[*string] {
	return pulumix.Apply[EnvironmentLoggingConfigurationWorkerLogs](o, func(v EnvironmentLoggingConfigurationWorkerLogs) *string { return v.LogLevel })
}

type EnvironmentNetworkConfiguration struct {
	// Security groups IDs for the environment. At least one of the security group needs to allow MWAA resources to talk to each other, otherwise MWAA cannot be provisioned.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The private subnet IDs in which the environment should be created. MWAA requires two subnets.
	SubnetIds []string `pulumi:"subnetIds"`
}

type EnvironmentNetworkConfigurationArgs struct {
	// Security groups IDs for the environment. At least one of the security group needs to allow MWAA resources to talk to each other, otherwise MWAA cannot be provisioned.
	SecurityGroupIds pulumix.Input[[]string] `pulumi:"securityGroupIds"`
	// The private subnet IDs in which the environment should be created. MWAA requires two subnets.
	SubnetIds pulumix.Input[[]string] `pulumi:"subnetIds"`
}

func (EnvironmentNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentNetworkConfiguration)(nil)).Elem()
}

func (i EnvironmentNetworkConfigurationArgs) ToEnvironmentNetworkConfigurationOutput() EnvironmentNetworkConfigurationOutput {
	return i.ToEnvironmentNetworkConfigurationOutputWithContext(context.Background())
}

func (i EnvironmentNetworkConfigurationArgs) ToEnvironmentNetworkConfigurationOutputWithContext(ctx context.Context) EnvironmentNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentNetworkConfigurationOutput)
}

func (i *EnvironmentNetworkConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*EnvironmentNetworkConfigurationArgs] {
	return pulumix.Val(i)
}

type EnvironmentNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (EnvironmentNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentNetworkConfiguration)(nil)).Elem()
}

func (o EnvironmentNetworkConfigurationOutput) ToEnvironmentNetworkConfigurationOutput() EnvironmentNetworkConfigurationOutput {
	return o
}

func (o EnvironmentNetworkConfigurationOutput) ToEnvironmentNetworkConfigurationOutputWithContext(ctx context.Context) EnvironmentNetworkConfigurationOutput {
	return o
}

func (o EnvironmentNetworkConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[EnvironmentNetworkConfiguration] {
	return pulumix.Output[EnvironmentNetworkConfiguration]{
		OutputState: o.OutputState,
	}
}

// Security groups IDs for the environment. At least one of the security group needs to allow MWAA resources to talk to each other, otherwise MWAA cannot be provisioned.
func (o EnvironmentNetworkConfigurationOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[EnvironmentNetworkConfiguration](o, func(v EnvironmentNetworkConfiguration) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The private subnet IDs in which the environment should be created. MWAA requires two subnets.
func (o EnvironmentNetworkConfigurationOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[EnvironmentNetworkConfiguration](o, func(v EnvironmentNetworkConfiguration) []string { return v.SubnetIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func init() {
	pulumi.RegisterOutputType(EnvironmentLastUpdatedOutput{})
	pulumi.RegisterOutputType(EnvironmentLastUpdatedErrorOutput{})
	pulumi.RegisterOutputType(EnvironmentLoggingConfigurationOutput{})
	pulumi.RegisterOutputType(EnvironmentLoggingConfigurationDagProcessingLogsOutput{})
	pulumi.RegisterOutputType(EnvironmentLoggingConfigurationSchedulerLogsOutput{})
	pulumi.RegisterOutputType(EnvironmentLoggingConfigurationTaskLogsOutput{})
	pulumi.RegisterOutputType(EnvironmentLoggingConfigurationWebserverLogsOutput{})
	pulumi.RegisterOutputType(EnvironmentLoggingConfigurationWorkerLogsOutput{})
	pulumi.RegisterOutputType(EnvironmentNetworkConfigurationOutput{})
}
