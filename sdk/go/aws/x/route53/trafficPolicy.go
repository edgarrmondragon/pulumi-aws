// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Route53 Traffic Policy.
type TrafficPolicy struct {
	pulumi.CustomResourceState

	// Comment for the traffic policy.
	Comment pulumix.Output[*string] `pulumi:"comment"`
	// Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the [AWS Route53 Traffic Policy document format](https://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html)
	//
	// The following arguments are optional:
	Document pulumix.Output[string] `pulumi:"document"`
	// Name of the traffic policy.
	Name pulumix.Output[string] `pulumi:"name"`
	// DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.
	Type pulumix.Output[string] `pulumi:"type"`
	// Version number of the traffic policy. This value is automatically incremented by AWS after each update of this resource.
	Version pulumix.Output[int] `pulumi:"version"`
}

// NewTrafficPolicy registers a new resource with the given unique name, arguments, and options.
func NewTrafficPolicy(ctx *pulumi.Context,
	name string, args *TrafficPolicyArgs, opts ...pulumi.ResourceOption) (*TrafficPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Document == nil {
		return nil, errors.New("invalid value for required argument 'Document'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrafficPolicy
	err := ctx.RegisterResource("aws:route53/trafficPolicy:TrafficPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficPolicy gets an existing TrafficPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficPolicyState, opts ...pulumi.ResourceOption) (*TrafficPolicy, error) {
	var resource TrafficPolicy
	err := ctx.ReadResource("aws:route53/trafficPolicy:TrafficPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficPolicy resources.
type trafficPolicyState struct {
	// Comment for the traffic policy.
	Comment *string `pulumi:"comment"`
	// Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the [AWS Route53 Traffic Policy document format](https://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html)
	//
	// The following arguments are optional:
	Document *string `pulumi:"document"`
	// Name of the traffic policy.
	Name *string `pulumi:"name"`
	// DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.
	Type *string `pulumi:"type"`
	// Version number of the traffic policy. This value is automatically incremented by AWS after each update of this resource.
	Version *int `pulumi:"version"`
}

type TrafficPolicyState struct {
	// Comment for the traffic policy.
	Comment pulumix.Input[*string]
	// Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the [AWS Route53 Traffic Policy document format](https://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html)
	//
	// The following arguments are optional:
	Document pulumix.Input[*string]
	// Name of the traffic policy.
	Name pulumix.Input[*string]
	// DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.
	Type pulumix.Input[*string]
	// Version number of the traffic policy. This value is automatically incremented by AWS after each update of this resource.
	Version pulumix.Input[*int]
}

func (TrafficPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficPolicyState)(nil)).Elem()
}

type trafficPolicyArgs struct {
	// Comment for the traffic policy.
	Comment *string `pulumi:"comment"`
	// Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the [AWS Route53 Traffic Policy document format](https://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html)
	//
	// The following arguments are optional:
	Document string `pulumi:"document"`
	// Name of the traffic policy.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a TrafficPolicy resource.
type TrafficPolicyArgs struct {
	// Comment for the traffic policy.
	Comment pulumix.Input[*string]
	// Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the [AWS Route53 Traffic Policy document format](https://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html)
	//
	// The following arguments are optional:
	Document pulumix.Input[string]
	// Name of the traffic policy.
	Name pulumix.Input[*string]
}

func (TrafficPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficPolicyArgs)(nil)).Elem()
}

type TrafficPolicyOutput struct{ *pulumi.OutputState }

func (TrafficPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficPolicy)(nil)).Elem()
}

func (o TrafficPolicyOutput) ToTrafficPolicyOutput() TrafficPolicyOutput {
	return o
}

func (o TrafficPolicyOutput) ToTrafficPolicyOutputWithContext(ctx context.Context) TrafficPolicyOutput {
	return o
}

func (o TrafficPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[TrafficPolicy] {
	return pulumix.Output[TrafficPolicy]{
		OutputState: o.OutputState,
	}
}

// Comment for the traffic policy.
func (o TrafficPolicyOutput) Comment() pulumix.Output[*string] {
	value := pulumix.Apply[TrafficPolicy](o, func(v TrafficPolicy) pulumix.Output[*string] { return v.Comment })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the [AWS Route53 Traffic Policy document format](https://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html)
//
// The following arguments are optional:
func (o TrafficPolicyOutput) Document() pulumix.Output[string] {
	value := pulumix.Apply[TrafficPolicy](o, func(v TrafficPolicy) pulumix.Output[string] { return v.Document })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the traffic policy.
func (o TrafficPolicyOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[TrafficPolicy](o, func(v TrafficPolicy) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.
func (o TrafficPolicyOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[TrafficPolicy](o, func(v TrafficPolicy) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Version number of the traffic policy. This value is automatically incremented by AWS after each update of this resource.
func (o TrafficPolicyOutput) Version() pulumix.Output[int] {
	value := pulumix.Apply[TrafficPolicy](o, func(v TrafficPolicy) pulumix.Output[int] { return v.Version })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(TrafficPolicyOutput{})
}
