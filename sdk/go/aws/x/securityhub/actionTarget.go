// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates Security Hub custom action.
type ActionTarget struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the Security Hub custom action target.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name of the custom action target.
	Description pulumix.Output[string] `pulumi:"description"`
	// The ID for the custom action target.
	Identifier pulumix.Output[string] `pulumi:"identifier"`
	// The description for the custom action target.
	Name pulumix.Output[string] `pulumi:"name"`
}

// NewActionTarget registers a new resource with the given unique name, arguments, and options.
func NewActionTarget(ctx *pulumi.Context,
	name string, args *ActionTargetArgs, opts ...pulumi.ResourceOption) (*ActionTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ActionTarget
	err := ctx.RegisterResource("aws:securityhub/actionTarget:ActionTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActionTarget gets an existing ActionTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActionTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActionTargetState, opts ...pulumi.ResourceOption) (*ActionTarget, error) {
	var resource ActionTarget
	err := ctx.ReadResource("aws:securityhub/actionTarget:ActionTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ActionTarget resources.
type actionTargetState struct {
	// Amazon Resource Name (ARN) of the Security Hub custom action target.
	Arn *string `pulumi:"arn"`
	// The name of the custom action target.
	Description *string `pulumi:"description"`
	// The ID for the custom action target.
	Identifier *string `pulumi:"identifier"`
	// The description for the custom action target.
	Name *string `pulumi:"name"`
}

type ActionTargetState struct {
	// Amazon Resource Name (ARN) of the Security Hub custom action target.
	Arn pulumix.Input[*string]
	// The name of the custom action target.
	Description pulumix.Input[*string]
	// The ID for the custom action target.
	Identifier pulumix.Input[*string]
	// The description for the custom action target.
	Name pulumix.Input[*string]
}

func (ActionTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*actionTargetState)(nil)).Elem()
}

type actionTargetArgs struct {
	// The name of the custom action target.
	Description string `pulumi:"description"`
	// The ID for the custom action target.
	Identifier string `pulumi:"identifier"`
	// The description for the custom action target.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ActionTarget resource.
type ActionTargetArgs struct {
	// The name of the custom action target.
	Description pulumix.Input[string]
	// The ID for the custom action target.
	Identifier pulumix.Input[string]
	// The description for the custom action target.
	Name pulumix.Input[*string]
}

func (ActionTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*actionTargetArgs)(nil)).Elem()
}

type ActionTargetOutput struct{ *pulumi.OutputState }

func (ActionTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionTarget)(nil)).Elem()
}

func (o ActionTargetOutput) ToActionTargetOutput() ActionTargetOutput {
	return o
}

func (o ActionTargetOutput) ToActionTargetOutputWithContext(ctx context.Context) ActionTargetOutput {
	return o
}

func (o ActionTargetOutput) ToOutput(ctx context.Context) pulumix.Output[ActionTarget] {
	return pulumix.Output[ActionTarget]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the Security Hub custom action target.
func (o ActionTargetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ActionTarget](o, func(v ActionTarget) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the custom action target.
func (o ActionTargetOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[ActionTarget](o, func(v ActionTarget) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID for the custom action target.
func (o ActionTargetOutput) Identifier() pulumix.Output[string] {
	value := pulumix.Apply[ActionTarget](o, func(v ActionTarget) pulumix.Output[string] { return v.Identifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description for the custom action target.
func (o ActionTargetOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ActionTarget](o, func(v ActionTarget) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ActionTargetOutput{})
}
