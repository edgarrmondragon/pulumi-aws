// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an SSM Parameter data source.
func LookupParameter(ctx *pulumi.Context, args *LookupParameterArgs, opts ...pulumi.InvokeOption) (*LookupParameterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupParameterResult
	err := ctx.Invoke("aws:ssm/getParameter:getParameter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getParameter.
type LookupParameterArgs struct {
	// Name of the parameter.
	Name string `pulumi:"name"`
	// Whether to return decrypted `SecureString` value. Defaults to `true`.
	//
	// In addition to all arguments above, the following attributes are exported:
	WithDecryption *bool `pulumi:"withDecryption"`
}

// A collection of values returned by getParameter.
type LookupParameterResult struct {
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	InsecureValue  string `pulumi:"insecureValue"`
	Name           string `pulumi:"name"`
	Type           string `pulumi:"type"`
	Value          string `pulumi:"value"`
	Version        int    `pulumi:"version"`
	WithDecryption *bool  `pulumi:"withDecryption"`
}

func LookupParameterOutput(ctx *pulumi.Context, args LookupParameterOutputArgs, opts ...pulumi.InvokeOption) LookupParameterResultOutput {
	outputResult := pulumix.ApplyErr[*LookupParameterArgs](args.ToOutput(), func(plainArgs *LookupParameterArgs) (*LookupParameterResult, error) {
		return LookupParameter(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupParameterResultOutput, *LookupParameterResult](outputResult)
}

// A collection of arguments for invoking getParameter.
type LookupParameterOutputArgs struct {
	// Name of the parameter.
	Name pulumix.Input[string] `pulumi:"name"`
	// Whether to return decrypted `SecureString` value. Defaults to `true`.
	//
	// In addition to all arguments above, the following attributes are exported:
	WithDecryption pulumix.Input[*bool] `pulumi:"withDecryption"`
}

func (args LookupParameterOutputArgs) ToOutput() pulumix.Output[*LookupParameterArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny(),
		args.WithDecryption.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupParameterArgs {
		return &LookupParameterArgs{
			Name:           resolvedArgs[0].(string),
			WithDecryption: resolvedArgs[1].(*bool),
		}
	})
}

type LookupParameterResultOutput struct{ *pulumi.OutputState }

func (LookupParameterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupParameterResult)(nil)).Elem()
}

func (o LookupParameterResultOutput) ToOutput(context.Context) pulumix.Output[*LookupParameterResult] {
	return pulumix.Output[*LookupParameterResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupParameterResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterResult](o, func(v *LookupParameterResult) string { return v.Arn })
}

func (o LookupParameterResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterResult](o, func(v *LookupParameterResult) string { return v.Id })
}

func (o LookupParameterResultOutput) InsecureValue() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterResult](o, func(v *LookupParameterResult) string { return v.InsecureValue })
}

func (o LookupParameterResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterResult](o, func(v *LookupParameterResult) string { return v.Name })
}

func (o LookupParameterResultOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterResult](o, func(v *LookupParameterResult) string { return v.Type })
}

func (o LookupParameterResultOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterResult](o, func(v *LookupParameterResult) string { return v.Value })
}

func (o LookupParameterResultOutput) Version() pulumix.Output[int] {
	return pulumix.Apply[*LookupParameterResult](o, func(v *LookupParameterResult) int { return v.Version })
}

func (o LookupParameterResultOutput) WithDecryption() pulumix.Output[*bool] {
	return pulumix.Apply[*LookupParameterResult](o, func(v *LookupParameterResult) *bool { return v.WithDecryption })
}
