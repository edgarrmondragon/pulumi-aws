// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a VPC/Subnet/ENI/Transit Gateway/Transit Gateway Attachment Flow Log to capture IP traffic for a specific network
// interface, subnet, or VPC. Logs are sent to a CloudWatch Log Group, a S3 Bucket, or Amazon Kinesis Data Firehose
type FlowLog struct {
	pulumi.CustomResourceState

	// The ARN of the Flow Log.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
	DeliverCrossAccountRole pulumix.Output[*string] `pulumi:"deliverCrossAccountRole"`
	// Describes the destination options for a flow log. More details below.
	DestinationOptions pulumix.GPtrOutput[FlowLogDestinationOptions, FlowLogDestinationOptionsOutput] `pulumi:"destinationOptions"`
	// Elastic Network Interface ID to attach to
	EniId pulumix.Output[*string] `pulumi:"eniId"`
	// The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
	IamRoleArn pulumix.Output[*string] `pulumi:"iamRoleArn"`
	// The ARN of the logging destination. Either `logDestination` or `logGroupName` must be set.
	LogDestination pulumix.Output[string] `pulumi:"logDestination"`
	// The type of the logging destination. Valid values: `cloud-watch-logs`, `s3`, `kinesis-data-firehose`. Default: `cloud-watch-logs`.
	LogDestinationType pulumix.Output[*string] `pulumi:"logDestinationType"`
	// The fields to include in the flow log record, in the order in which they should appear.
	LogFormat pulumix.Output[string] `pulumi:"logFormat"`
	// **Deprecated:** Use `logDestination` instead. The name of the CloudWatch log group. Either `logGroupName` or `logDestination` must be set.
	//
	// Deprecated: use 'log_destination' argument instead
	LogGroupName pulumix.Output[string] `pulumi:"logGroupName"`
	// The maximum interval of time
	// during which a flow of packets is captured and aggregated into a flow
	// log record. Valid Values: `60` seconds (1 minute) or `600` seconds (10
	// minutes). Default: `600`. When `transitGatewayId` or `transitGatewayAttachmentId` is specified, `maxAggregationInterval` *must* be 60 seconds (1 minute).
	MaxAggregationInterval pulumix.Output[*int] `pulumi:"maxAggregationInterval"`
	// Subnet ID to attach to
	SubnetId pulumix.Output[*string] `pulumi:"subnetId"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`.
	TrafficType pulumix.Output[*string] `pulumi:"trafficType"`
	// Transit Gateway Attachment ID to attach to
	TransitGatewayAttachmentId pulumix.Output[*string] `pulumi:"transitGatewayAttachmentId"`
	// Transit Gateway ID to attach to
	TransitGatewayId pulumix.Output[*string] `pulumi:"transitGatewayId"`
	// VPC ID to attach to
	VpcId pulumix.Output[*string] `pulumi:"vpcId"`
}

// NewFlowLog registers a new resource with the given unique name, arguments, and options.
func NewFlowLog(ctx *pulumi.Context,
	name string, args *FlowLogArgs, opts ...pulumi.ResourceOption) (*FlowLog, error) {
	if args == nil {
		args = &FlowLogArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlowLog
	err := ctx.RegisterResource("aws:ec2/flowLog:FlowLog", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlowLog gets an existing FlowLog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlowLog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlowLogState, opts ...pulumi.ResourceOption) (*FlowLog, error) {
	var resource FlowLog
	err := ctx.ReadResource("aws:ec2/flowLog:FlowLog", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlowLog resources.
type flowLogState struct {
	// The ARN of the Flow Log.
	Arn *string `pulumi:"arn"`
	// ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
	DeliverCrossAccountRole *string `pulumi:"deliverCrossAccountRole"`
	// Describes the destination options for a flow log. More details below.
	DestinationOptions *FlowLogDestinationOptions `pulumi:"destinationOptions"`
	// Elastic Network Interface ID to attach to
	EniId *string `pulumi:"eniId"`
	// The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
	IamRoleArn *string `pulumi:"iamRoleArn"`
	// The ARN of the logging destination. Either `logDestination` or `logGroupName` must be set.
	LogDestination *string `pulumi:"logDestination"`
	// The type of the logging destination. Valid values: `cloud-watch-logs`, `s3`, `kinesis-data-firehose`. Default: `cloud-watch-logs`.
	LogDestinationType *string `pulumi:"logDestinationType"`
	// The fields to include in the flow log record, in the order in which they should appear.
	LogFormat *string `pulumi:"logFormat"`
	// **Deprecated:** Use `logDestination` instead. The name of the CloudWatch log group. Either `logGroupName` or `logDestination` must be set.
	//
	// Deprecated: use 'log_destination' argument instead
	LogGroupName *string `pulumi:"logGroupName"`
	// The maximum interval of time
	// during which a flow of packets is captured and aggregated into a flow
	// log record. Valid Values: `60` seconds (1 minute) or `600` seconds (10
	// minutes). Default: `600`. When `transitGatewayId` or `transitGatewayAttachmentId` is specified, `maxAggregationInterval` *must* be 60 seconds (1 minute).
	MaxAggregationInterval *int `pulumi:"maxAggregationInterval"`
	// Subnet ID to attach to
	SubnetId *string `pulumi:"subnetId"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`.
	TrafficType *string `pulumi:"trafficType"`
	// Transit Gateway Attachment ID to attach to
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	// Transit Gateway ID to attach to
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// VPC ID to attach to
	VpcId *string `pulumi:"vpcId"`
}

type FlowLogState struct {
	// The ARN of the Flow Log.
	Arn pulumix.Input[*string]
	// ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
	DeliverCrossAccountRole pulumix.Input[*string]
	// Describes the destination options for a flow log. More details below.
	DestinationOptions pulumix.Input[*FlowLogDestinationOptionsArgs]
	// Elastic Network Interface ID to attach to
	EniId pulumix.Input[*string]
	// The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
	IamRoleArn pulumix.Input[*string]
	// The ARN of the logging destination. Either `logDestination` or `logGroupName` must be set.
	LogDestination pulumix.Input[*string]
	// The type of the logging destination. Valid values: `cloud-watch-logs`, `s3`, `kinesis-data-firehose`. Default: `cloud-watch-logs`.
	LogDestinationType pulumix.Input[*string]
	// The fields to include in the flow log record, in the order in which they should appear.
	LogFormat pulumix.Input[*string]
	// **Deprecated:** Use `logDestination` instead. The name of the CloudWatch log group. Either `logGroupName` or `logDestination` must be set.
	//
	// Deprecated: use 'log_destination' argument instead
	LogGroupName pulumix.Input[*string]
	// The maximum interval of time
	// during which a flow of packets is captured and aggregated into a flow
	// log record. Valid Values: `60` seconds (1 minute) or `600` seconds (10
	// minutes). Default: `600`. When `transitGatewayId` or `transitGatewayAttachmentId` is specified, `maxAggregationInterval` *must* be 60 seconds (1 minute).
	MaxAggregationInterval pulumix.Input[*int]
	// Subnet ID to attach to
	SubnetId pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`.
	TrafficType pulumix.Input[*string]
	// Transit Gateway Attachment ID to attach to
	TransitGatewayAttachmentId pulumix.Input[*string]
	// Transit Gateway ID to attach to
	TransitGatewayId pulumix.Input[*string]
	// VPC ID to attach to
	VpcId pulumix.Input[*string]
}

func (FlowLogState) ElementType() reflect.Type {
	return reflect.TypeOf((*flowLogState)(nil)).Elem()
}

type flowLogArgs struct {
	// ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
	DeliverCrossAccountRole *string `pulumi:"deliverCrossAccountRole"`
	// Describes the destination options for a flow log. More details below.
	DestinationOptions *FlowLogDestinationOptions `pulumi:"destinationOptions"`
	// Elastic Network Interface ID to attach to
	EniId *string `pulumi:"eniId"`
	// The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
	IamRoleArn *string `pulumi:"iamRoleArn"`
	// The ARN of the logging destination. Either `logDestination` or `logGroupName` must be set.
	LogDestination *string `pulumi:"logDestination"`
	// The type of the logging destination. Valid values: `cloud-watch-logs`, `s3`, `kinesis-data-firehose`. Default: `cloud-watch-logs`.
	LogDestinationType *string `pulumi:"logDestinationType"`
	// The fields to include in the flow log record, in the order in which they should appear.
	LogFormat *string `pulumi:"logFormat"`
	// **Deprecated:** Use `logDestination` instead. The name of the CloudWatch log group. Either `logGroupName` or `logDestination` must be set.
	//
	// Deprecated: use 'log_destination' argument instead
	LogGroupName *string `pulumi:"logGroupName"`
	// The maximum interval of time
	// during which a flow of packets is captured and aggregated into a flow
	// log record. Valid Values: `60` seconds (1 minute) or `600` seconds (10
	// minutes). Default: `600`. When `transitGatewayId` or `transitGatewayAttachmentId` is specified, `maxAggregationInterval` *must* be 60 seconds (1 minute).
	MaxAggregationInterval *int `pulumi:"maxAggregationInterval"`
	// Subnet ID to attach to
	SubnetId *string `pulumi:"subnetId"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`.
	TrafficType *string `pulumi:"trafficType"`
	// Transit Gateway Attachment ID to attach to
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	// Transit Gateway ID to attach to
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// VPC ID to attach to
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a FlowLog resource.
type FlowLogArgs struct {
	// ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
	DeliverCrossAccountRole pulumix.Input[*string]
	// Describes the destination options for a flow log. More details below.
	DestinationOptions pulumix.Input[*FlowLogDestinationOptionsArgs]
	// Elastic Network Interface ID to attach to
	EniId pulumix.Input[*string]
	// The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
	IamRoleArn pulumix.Input[*string]
	// The ARN of the logging destination. Either `logDestination` or `logGroupName` must be set.
	LogDestination pulumix.Input[*string]
	// The type of the logging destination. Valid values: `cloud-watch-logs`, `s3`, `kinesis-data-firehose`. Default: `cloud-watch-logs`.
	LogDestinationType pulumix.Input[*string]
	// The fields to include in the flow log record, in the order in which they should appear.
	LogFormat pulumix.Input[*string]
	// **Deprecated:** Use `logDestination` instead. The name of the CloudWatch log group. Either `logGroupName` or `logDestination` must be set.
	//
	// Deprecated: use 'log_destination' argument instead
	LogGroupName pulumix.Input[*string]
	// The maximum interval of time
	// during which a flow of packets is captured and aggregated into a flow
	// log record. Valid Values: `60` seconds (1 minute) or `600` seconds (10
	// minutes). Default: `600`. When `transitGatewayId` or `transitGatewayAttachmentId` is specified, `maxAggregationInterval` *must* be 60 seconds (1 minute).
	MaxAggregationInterval pulumix.Input[*int]
	// Subnet ID to attach to
	SubnetId pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`.
	TrafficType pulumix.Input[*string]
	// Transit Gateway Attachment ID to attach to
	TransitGatewayAttachmentId pulumix.Input[*string]
	// Transit Gateway ID to attach to
	TransitGatewayId pulumix.Input[*string]
	// VPC ID to attach to
	VpcId pulumix.Input[*string]
}

func (FlowLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flowLogArgs)(nil)).Elem()
}

type FlowLogOutput struct{ *pulumi.OutputState }

func (FlowLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLog)(nil)).Elem()
}

func (o FlowLogOutput) ToFlowLogOutput() FlowLogOutput {
	return o
}

func (o FlowLogOutput) ToFlowLogOutputWithContext(ctx context.Context) FlowLogOutput {
	return o
}

func (o FlowLogOutput) ToOutput(ctx context.Context) pulumix.Output[FlowLog] {
	return pulumix.Output[FlowLog]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Flow Log.
func (o FlowLogOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
func (o FlowLogOutput) DeliverCrossAccountRole() pulumix.Output[*string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*string] { return v.DeliverCrossAccountRole })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Describes the destination options for a flow log. More details below.
func (o FlowLogOutput) DestinationOptions() pulumix.GPtrOutput[FlowLogDestinationOptions, FlowLogDestinationOptionsOutput] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.GPtrOutput[FlowLogDestinationOptions, FlowLogDestinationOptionsOutput] {
		return v.DestinationOptions
	})
	unwrapped := pulumix.Flatten[*FlowLogDestinationOptions, pulumix.GPtrOutput[FlowLogDestinationOptions, FlowLogDestinationOptionsOutput]](value)
	return pulumix.GPtrOutput[FlowLogDestinationOptions, FlowLogDestinationOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Elastic Network Interface ID to attach to
func (o FlowLogOutput) EniId() pulumix.Output[*string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*string] { return v.EniId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
func (o FlowLogOutput) IamRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*string] { return v.IamRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN of the logging destination. Either `logDestination` or `logGroupName` must be set.
func (o FlowLogOutput) LogDestination() pulumix.Output[string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[string] { return v.LogDestination })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of the logging destination. Valid values: `cloud-watch-logs`, `s3`, `kinesis-data-firehose`. Default: `cloud-watch-logs`.
func (o FlowLogOutput) LogDestinationType() pulumix.Output[*string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*string] { return v.LogDestinationType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The fields to include in the flow log record, in the order in which they should appear.
func (o FlowLogOutput) LogFormat() pulumix.Output[string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[string] { return v.LogFormat })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// **Deprecated:** Use `logDestination` instead. The name of the CloudWatch log group. Either `logGroupName` or `logDestination` must be set.
//
// Deprecated: use 'log_destination' argument instead
func (o FlowLogOutput) LogGroupName() pulumix.Output[string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[string] { return v.LogGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The maximum interval of time
// during which a flow of packets is captured and aggregated into a flow
// log record. Valid Values: `60` seconds (1 minute) or `600` seconds (10
// minutes). Default: `600`. When `transitGatewayId` or `transitGatewayAttachmentId` is specified, `maxAggregationInterval` *must* be 60 seconds (1 minute).
func (o FlowLogOutput) MaxAggregationInterval() pulumix.Output[*int] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*int] { return v.MaxAggregationInterval })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Subnet ID to attach to
func (o FlowLogOutput) SubnetId() pulumix.Output[*string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*string] { return v.SubnetId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FlowLogOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FlowLogOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`.
func (o FlowLogOutput) TrafficType() pulumix.Output[*string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*string] { return v.TrafficType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Transit Gateway Attachment ID to attach to
func (o FlowLogOutput) TransitGatewayAttachmentId() pulumix.Output[*string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*string] { return v.TransitGatewayAttachmentId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Transit Gateway ID to attach to
func (o FlowLogOutput) TransitGatewayId() pulumix.Output[*string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*string] { return v.TransitGatewayId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// VPC ID to attach to
func (o FlowLogOutput) VpcId() pulumix.Output[*string] {
	value := pulumix.Apply[FlowLog](o, func(v FlowLog) pulumix.Output[*string] { return v.VpcId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(FlowLogOutput{})
}
