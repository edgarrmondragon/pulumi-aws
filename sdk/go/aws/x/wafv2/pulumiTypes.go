// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type RegexPatternSetRegularExpression struct {
	// The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.
	RegexString string `pulumi:"regexString"`
}

type RegexPatternSetRegularExpressionArgs struct {
	// The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.
	RegexString pulumix.Input[string] `pulumi:"regexString"`
}

func (RegexPatternSetRegularExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexPatternSetRegularExpression)(nil)).Elem()
}

func (i RegexPatternSetRegularExpressionArgs) ToRegexPatternSetRegularExpressionOutput() RegexPatternSetRegularExpressionOutput {
	return i.ToRegexPatternSetRegularExpressionOutputWithContext(context.Background())
}

func (i RegexPatternSetRegularExpressionArgs) ToRegexPatternSetRegularExpressionOutputWithContext(ctx context.Context) RegexPatternSetRegularExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexPatternSetRegularExpressionOutput)
}

func (i *RegexPatternSetRegularExpressionArgs) ToOutput(ctx context.Context) pulumix.Output[*RegexPatternSetRegularExpressionArgs] {
	return pulumix.Val(i)
}

type RegexPatternSetRegularExpressionOutput struct{ *pulumi.OutputState }

func (RegexPatternSetRegularExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexPatternSetRegularExpression)(nil)).Elem()
}

func (o RegexPatternSetRegularExpressionOutput) ToRegexPatternSetRegularExpressionOutput() RegexPatternSetRegularExpressionOutput {
	return o
}

func (o RegexPatternSetRegularExpressionOutput) ToRegexPatternSetRegularExpressionOutputWithContext(ctx context.Context) RegexPatternSetRegularExpressionOutput {
	return o
}

func (o RegexPatternSetRegularExpressionOutput) ToOutput(ctx context.Context) pulumix.Output[RegexPatternSetRegularExpression] {
	return pulumix.Output[RegexPatternSetRegularExpression]{
		OutputState: o.OutputState,
	}
}

// The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.
func (o RegexPatternSetRegularExpressionOutput) RegexString() pulumix.Output[string] {
	return pulumix.Apply[RegexPatternSetRegularExpression](o, func(v RegexPatternSetRegularExpression) string { return v.RegexString })
}

type RuleGroupCustomResponseBody struct {
	// The payload of the custom response.
	Content string `pulumi:"content"`
	// The type of content in the payload that you are defining in the `content` argument. Valid values are `TEXT_PLAIN`, `TEXT_HTML`, or `APPLICATION_JSON`.
	ContentType string `pulumi:"contentType"`
	// A unique key identifying the custom response body. This is referenced by the `customResponseBodyKey` argument in the Custom Response block.
	Key string `pulumi:"key"`
}

type RuleGroupCustomResponseBodyArgs struct {
	// The payload of the custom response.
	Content pulumix.Input[string] `pulumi:"content"`
	// The type of content in the payload that you are defining in the `content` argument. Valid values are `TEXT_PLAIN`, `TEXT_HTML`, or `APPLICATION_JSON`.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// A unique key identifying the custom response body. This is referenced by the `customResponseBodyKey` argument in the Custom Response block.
	Key pulumix.Input[string] `pulumi:"key"`
}

func (RuleGroupCustomResponseBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupCustomResponseBody)(nil)).Elem()
}

func (i RuleGroupCustomResponseBodyArgs) ToRuleGroupCustomResponseBodyOutput() RuleGroupCustomResponseBodyOutput {
	return i.ToRuleGroupCustomResponseBodyOutputWithContext(context.Background())
}

func (i RuleGroupCustomResponseBodyArgs) ToRuleGroupCustomResponseBodyOutputWithContext(ctx context.Context) RuleGroupCustomResponseBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupCustomResponseBodyOutput)
}

func (i *RuleGroupCustomResponseBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupCustomResponseBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupCustomResponseBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupCustomResponseBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupCustomResponseBody)(nil)).Elem()
}

func (o RuleGroupCustomResponseBodyOutput) ToRuleGroupCustomResponseBodyOutput() RuleGroupCustomResponseBodyOutput {
	return o
}

func (o RuleGroupCustomResponseBodyOutput) ToRuleGroupCustomResponseBodyOutputWithContext(ctx context.Context) RuleGroupCustomResponseBodyOutput {
	return o
}

func (o RuleGroupCustomResponseBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupCustomResponseBody] {
	return pulumix.Output[RuleGroupCustomResponseBody]{
		OutputState: o.OutputState,
	}
}

// The payload of the custom response.
func (o RuleGroupCustomResponseBodyOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupCustomResponseBody](o, func(v RuleGroupCustomResponseBody) string { return v.Content })
}

// The type of content in the payload that you are defining in the `content` argument. Valid values are `TEXT_PLAIN`, `TEXT_HTML`, or `APPLICATION_JSON`.
func (o RuleGroupCustomResponseBodyOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupCustomResponseBody](o, func(v RuleGroupCustomResponseBody) string { return v.ContentType })
}

// A unique key identifying the custom response body. This is referenced by the `customResponseBodyKey` argument in the Custom Response block.
func (o RuleGroupCustomResponseBodyOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupCustomResponseBody](o, func(v RuleGroupCustomResponseBody) string { return v.Key })
}

type RuleGroupRule struct {
	// The action that AWS WAF should take on a web request when it matches the rule's statement. Settings at the `wafv2.WebAcl` level can override the rule action setting. See Action below for details.
	Action RuleGroupRuleAction `pulumi:"action"`
	// Specifies how AWS WAF should handle CAPTCHA evaluations. See Captcha Configuration below for details.
	CaptchaConfig *RuleGroupRuleCaptchaConfig `pulumi:"captchaConfig"`
	// A friendly name of the rule.
	Name string `pulumi:"name"`
	// If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the `rules` in order based on the value of `priority`. AWS WAF processes rules with lower priority first.
	Priority int `pulumi:"priority"`
	// Labels to apply to web requests that match the rule match statement. See Rule Label below for details.
	RuleLabels []RuleGroupRuleRuleLabel `pulumi:"ruleLabels"`
	// The AWS WAF processing statement for the rule, for example `byteMatchStatement` or `geoMatchStatement`. See Statement below for details.
	Statement RuleGroupRuleStatement `pulumi:"statement"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	VisibilityConfig RuleGroupRuleVisibilityConfig `pulumi:"visibilityConfig"`
}

type RuleGroupRuleArgs struct {
	// The action that AWS WAF should take on a web request when it matches the rule's statement. Settings at the `wafv2.WebAcl` level can override the rule action setting. See Action below for details.
	Action pulumix.Input[*RuleGroupRuleActionArgs] `pulumi:"action"`
	// Specifies how AWS WAF should handle CAPTCHA evaluations. See Captcha Configuration below for details.
	CaptchaConfig pulumix.Input[*RuleGroupRuleCaptchaConfigArgs] `pulumi:"captchaConfig"`
	// A friendly name of the rule.
	Name pulumix.Input[string] `pulumi:"name"`
	// If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the `rules` in order based on the value of `priority`. AWS WAF processes rules with lower priority first.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// Labels to apply to web requests that match the rule match statement. See Rule Label below for details.
	RuleLabels pulumix.Input[[]*RuleGroupRuleRuleLabelArgs] `pulumi:"ruleLabels"`
	// The AWS WAF processing statement for the rule, for example `byteMatchStatement` or `geoMatchStatement`. See Statement below for details.
	Statement pulumix.Input[*RuleGroupRuleStatementArgs] `pulumi:"statement"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	VisibilityConfig pulumix.Input[*RuleGroupRuleVisibilityConfigArgs] `pulumi:"visibilityConfig"`
}

func (RuleGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRule)(nil)).Elem()
}

func (i RuleGroupRuleArgs) ToRuleGroupRuleOutput() RuleGroupRuleOutput {
	return i.ToRuleGroupRuleOutputWithContext(context.Background())
}

func (i RuleGroupRuleArgs) ToRuleGroupRuleOutputWithContext(ctx context.Context) RuleGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleOutput)
}

func (i *RuleGroupRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRule)(nil)).Elem()
}

func (o RuleGroupRuleOutput) ToRuleGroupRuleOutput() RuleGroupRuleOutput {
	return o
}

func (o RuleGroupRuleOutput) ToRuleGroupRuleOutputWithContext(ctx context.Context) RuleGroupRuleOutput {
	return o
}

func (o RuleGroupRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRule] {
	return pulumix.Output[RuleGroupRule]{
		OutputState: o.OutputState,
	}
}

// The action that AWS WAF should take on a web request when it matches the rule's statement. Settings at the `wafv2.WebAcl` level can override the rule action setting. See Action below for details.
func (o RuleGroupRuleOutput) Action() pulumix.GPtrOutput[RuleGroupRuleAction, RuleGroupRuleActionOutput] {
	value := pulumix.Apply[RuleGroupRule](o, func(v RuleGroupRule) RuleGroupRuleAction { return v.Action })
	return pulumix.GPtrOutput[RuleGroupRuleAction, RuleGroupRuleActionOutput]{OutputState: value.OutputState}
}

// Specifies how AWS WAF should handle CAPTCHA evaluations. See Captcha Configuration below for details.
func (o RuleGroupRuleOutput) CaptchaConfig() pulumix.GPtrOutput[RuleGroupRuleCaptchaConfig, RuleGroupRuleCaptchaConfigOutput] {
	value := pulumix.Apply[RuleGroupRule](o, func(v RuleGroupRule) *RuleGroupRuleCaptchaConfig { return v.CaptchaConfig })
	return pulumix.GPtrOutput[RuleGroupRuleCaptchaConfig, RuleGroupRuleCaptchaConfigOutput]{OutputState: value.OutputState}
}

// A friendly name of the rule.
func (o RuleGroupRuleOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRule](o, func(v RuleGroupRule) string { return v.Name })
}

// If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the `rules` in order based on the value of `priority`. AWS WAF processes rules with lower priority first.
func (o RuleGroupRuleOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRule](o, func(v RuleGroupRule) int { return v.Priority })
}

// Labels to apply to web requests that match the rule match statement. See Rule Label below for details.
func (o RuleGroupRuleOutput) RuleLabels() pulumix.GArrayOutput[RuleGroupRuleRuleLabel, RuleGroupRuleRuleLabelOutput] {
	value := pulumix.Apply[RuleGroupRule](o, func(v RuleGroupRule) []RuleGroupRuleRuleLabel { return v.RuleLabels })
	return pulumix.GArrayOutput[RuleGroupRuleRuleLabel, RuleGroupRuleRuleLabelOutput]{OutputState: value.OutputState}
}

// The AWS WAF processing statement for the rule, for example `byteMatchStatement` or `geoMatchStatement`. See Statement below for details.
func (o RuleGroupRuleOutput) Statement() pulumix.GPtrOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput] {
	value := pulumix.Apply[RuleGroupRule](o, func(v RuleGroupRule) RuleGroupRuleStatement { return v.Statement })
	return pulumix.GPtrOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput]{OutputState: value.OutputState}
}

// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
func (o RuleGroupRuleOutput) VisibilityConfig() pulumix.GPtrOutput[RuleGroupRuleVisibilityConfig, RuleGroupRuleVisibilityConfigOutput] {
	value := pulumix.Apply[RuleGroupRule](o, func(v RuleGroupRule) RuleGroupRuleVisibilityConfig { return v.VisibilityConfig })
	return pulumix.GPtrOutput[RuleGroupRuleVisibilityConfig, RuleGroupRuleVisibilityConfigOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleAction struct {
	// Instructs AWS WAF to allow the web request. See Allow below for details.
	Allow *RuleGroupRuleActionAllow `pulumi:"allow"`
	// Instructs AWS WAF to block the web request. See Block below for details.
	Block *RuleGroupRuleActionBlock `pulumi:"block"`
	// Instructs AWS WAF to run a `CAPTCHA` check against the web request. See Captcha below for details.
	Captcha *RuleGroupRuleActionCaptcha `pulumi:"captcha"`
	// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See Challenge below for details.
	Challenge *RuleGroupRuleActionChallenge `pulumi:"challenge"`
	// Instructs AWS WAF to count the web request and allow it. See Count below for details.
	Count *RuleGroupRuleActionCount `pulumi:"count"`
}

type RuleGroupRuleActionArgs struct {
	// Instructs AWS WAF to allow the web request. See Allow below for details.
	Allow pulumix.Input[*RuleGroupRuleActionAllowArgs] `pulumi:"allow"`
	// Instructs AWS WAF to block the web request. See Block below for details.
	Block pulumix.Input[*RuleGroupRuleActionBlockArgs] `pulumi:"block"`
	// Instructs AWS WAF to run a `CAPTCHA` check against the web request. See Captcha below for details.
	Captcha pulumix.Input[*RuleGroupRuleActionCaptchaArgs] `pulumi:"captcha"`
	// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See Challenge below for details.
	Challenge pulumix.Input[*RuleGroupRuleActionChallengeArgs] `pulumi:"challenge"`
	// Instructs AWS WAF to count the web request and allow it. See Count below for details.
	Count pulumix.Input[*RuleGroupRuleActionCountArgs] `pulumi:"count"`
}

func (RuleGroupRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleAction)(nil)).Elem()
}

func (i RuleGroupRuleActionArgs) ToRuleGroupRuleActionOutput() RuleGroupRuleActionOutput {
	return i.ToRuleGroupRuleActionOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionArgs) ToRuleGroupRuleActionOutputWithContext(ctx context.Context) RuleGroupRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionOutput)
}

func (i *RuleGroupRuleActionArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleAction)(nil)).Elem()
}

func (o RuleGroupRuleActionOutput) ToRuleGroupRuleActionOutput() RuleGroupRuleActionOutput {
	return o
}

func (o RuleGroupRuleActionOutput) ToRuleGroupRuleActionOutputWithContext(ctx context.Context) RuleGroupRuleActionOutput {
	return o
}

func (o RuleGroupRuleActionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleAction] {
	return pulumix.Output[RuleGroupRuleAction]{
		OutputState: o.OutputState,
	}
}

// Instructs AWS WAF to allow the web request. See Allow below for details.
func (o RuleGroupRuleActionOutput) Allow() pulumix.GPtrOutput[RuleGroupRuleActionAllow, RuleGroupRuleActionAllowOutput] {
	value := pulumix.Apply[RuleGroupRuleAction](o, func(v RuleGroupRuleAction) *RuleGroupRuleActionAllow { return v.Allow })
	return pulumix.GPtrOutput[RuleGroupRuleActionAllow, RuleGroupRuleActionAllowOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to block the web request. See Block below for details.
func (o RuleGroupRuleActionOutput) Block() pulumix.GPtrOutput[RuleGroupRuleActionBlock, RuleGroupRuleActionBlockOutput] {
	value := pulumix.Apply[RuleGroupRuleAction](o, func(v RuleGroupRuleAction) *RuleGroupRuleActionBlock { return v.Block })
	return pulumix.GPtrOutput[RuleGroupRuleActionBlock, RuleGroupRuleActionBlockOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to run a `CAPTCHA` check against the web request. See Captcha below for details.
func (o RuleGroupRuleActionOutput) Captcha() pulumix.GPtrOutput[RuleGroupRuleActionCaptcha, RuleGroupRuleActionCaptchaOutput] {
	value := pulumix.Apply[RuleGroupRuleAction](o, func(v RuleGroupRuleAction) *RuleGroupRuleActionCaptcha { return v.Captcha })
	return pulumix.GPtrOutput[RuleGroupRuleActionCaptcha, RuleGroupRuleActionCaptchaOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See Challenge below for details.
func (o RuleGroupRuleActionOutput) Challenge() pulumix.GPtrOutput[RuleGroupRuleActionChallenge, RuleGroupRuleActionChallengeOutput] {
	value := pulumix.Apply[RuleGroupRuleAction](o, func(v RuleGroupRuleAction) *RuleGroupRuleActionChallenge { return v.Challenge })
	return pulumix.GPtrOutput[RuleGroupRuleActionChallenge, RuleGroupRuleActionChallengeOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to count the web request and allow it. See Count below for details.
func (o RuleGroupRuleActionOutput) Count() pulumix.GPtrOutput[RuleGroupRuleActionCount, RuleGroupRuleActionCountOutput] {
	value := pulumix.Apply[RuleGroupRuleAction](o, func(v RuleGroupRuleAction) *RuleGroupRuleActionCount { return v.Count })
	return pulumix.GPtrOutput[RuleGroupRuleActionCount, RuleGroupRuleActionCountOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionAllow struct {
	// Defines custom handling for the web request. See Custom Request Handling below for details.
	CustomRequestHandling *RuleGroupRuleActionAllowCustomRequestHandling `pulumi:"customRequestHandling"`
}

type RuleGroupRuleActionAllowArgs struct {
	// Defines custom handling for the web request. See Custom Request Handling below for details.
	CustomRequestHandling pulumix.Input[*RuleGroupRuleActionAllowCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (RuleGroupRuleActionAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionAllow)(nil)).Elem()
}

func (i RuleGroupRuleActionAllowArgs) ToRuleGroupRuleActionAllowOutput() RuleGroupRuleActionAllowOutput {
	return i.ToRuleGroupRuleActionAllowOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionAllowArgs) ToRuleGroupRuleActionAllowOutputWithContext(ctx context.Context) RuleGroupRuleActionAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionAllowOutput)
}

func (i *RuleGroupRuleActionAllowArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionAllowArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionAllowOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionAllow)(nil)).Elem()
}

func (o RuleGroupRuleActionAllowOutput) ToRuleGroupRuleActionAllowOutput() RuleGroupRuleActionAllowOutput {
	return o
}

func (o RuleGroupRuleActionAllowOutput) ToRuleGroupRuleActionAllowOutputWithContext(ctx context.Context) RuleGroupRuleActionAllowOutput {
	return o
}

func (o RuleGroupRuleActionAllowOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionAllow] {
	return pulumix.Output[RuleGroupRuleActionAllow]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See Custom Request Handling below for details.
func (o RuleGroupRuleActionAllowOutput) CustomRequestHandling() pulumix.GPtrOutput[RuleGroupRuleActionAllowCustomRequestHandling, RuleGroupRuleActionAllowCustomRequestHandlingOutput] {
	value := pulumix.Apply[RuleGroupRuleActionAllow](o, func(v RuleGroupRuleActionAllow) *RuleGroupRuleActionAllowCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[RuleGroupRuleActionAllowCustomRequestHandling, RuleGroupRuleActionAllowCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionAllowCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
	InsertHeaders []RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type RuleGroupRuleActionAllowCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
	InsertHeaders pulumix.Input[[]*RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (RuleGroupRuleActionAllowCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionAllowCustomRequestHandling)(nil)).Elem()
}

func (i RuleGroupRuleActionAllowCustomRequestHandlingArgs) ToRuleGroupRuleActionAllowCustomRequestHandlingOutput() RuleGroupRuleActionAllowCustomRequestHandlingOutput {
	return i.ToRuleGroupRuleActionAllowCustomRequestHandlingOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionAllowCustomRequestHandlingArgs) ToRuleGroupRuleActionAllowCustomRequestHandlingOutputWithContext(ctx context.Context) RuleGroupRuleActionAllowCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionAllowCustomRequestHandlingOutput)
}

func (i *RuleGroupRuleActionAllowCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionAllowCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionAllowCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionAllowCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionAllowCustomRequestHandling)(nil)).Elem()
}

func (o RuleGroupRuleActionAllowCustomRequestHandlingOutput) ToRuleGroupRuleActionAllowCustomRequestHandlingOutput() RuleGroupRuleActionAllowCustomRequestHandlingOutput {
	return o
}

func (o RuleGroupRuleActionAllowCustomRequestHandlingOutput) ToRuleGroupRuleActionAllowCustomRequestHandlingOutputWithContext(ctx context.Context) RuleGroupRuleActionAllowCustomRequestHandlingOutput {
	return o
}

func (o RuleGroupRuleActionAllowCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionAllowCustomRequestHandling] {
	return pulumix.Output[RuleGroupRuleActionAllowCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
func (o RuleGroupRuleActionAllowCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader, RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleActionAllowCustomRequestHandling](o, func(v RuleGroupRuleActionAllowCustomRequestHandling) []RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader, RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader struct {
	// A friendly name of the rule group.
	Name string `pulumi:"name"`
	// The value of the custom header.
	Value string `pulumi:"value"`
}

type RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderArgs struct {
	// A friendly name of the rule group.
	Name pulumix.Input[string] `pulumi:"name"`
	// The value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderArgs) ToRuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput() RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput {
	return i.ToRuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderArgs) ToRuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput)
}

func (i *RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput) ToRuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput() RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput) ToRuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader] {
	return pulumix.Output[RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// A friendly name of the rule group.
func (o RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader](o, func(v RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader) string { return v.Name })
}

// The value of the custom header.
func (o RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader](o, func(v RuleGroupRuleActionAllowCustomRequestHandlingInsertHeader) string { return v.Value })
}

type RuleGroupRuleActionBlock struct {
	// Defines a custom response for the web request. See Custom Response below for details.
	CustomResponse *RuleGroupRuleActionBlockCustomResponse `pulumi:"customResponse"`
}

type RuleGroupRuleActionBlockArgs struct {
	// Defines a custom response for the web request. See Custom Response below for details.
	CustomResponse pulumix.Input[*RuleGroupRuleActionBlockCustomResponseArgs] `pulumi:"customResponse"`
}

func (RuleGroupRuleActionBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionBlock)(nil)).Elem()
}

func (i RuleGroupRuleActionBlockArgs) ToRuleGroupRuleActionBlockOutput() RuleGroupRuleActionBlockOutput {
	return i.ToRuleGroupRuleActionBlockOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionBlockArgs) ToRuleGroupRuleActionBlockOutputWithContext(ctx context.Context) RuleGroupRuleActionBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionBlockOutput)
}

func (i *RuleGroupRuleActionBlockArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionBlockArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionBlockOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionBlock)(nil)).Elem()
}

func (o RuleGroupRuleActionBlockOutput) ToRuleGroupRuleActionBlockOutput() RuleGroupRuleActionBlockOutput {
	return o
}

func (o RuleGroupRuleActionBlockOutput) ToRuleGroupRuleActionBlockOutputWithContext(ctx context.Context) RuleGroupRuleActionBlockOutput {
	return o
}

func (o RuleGroupRuleActionBlockOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionBlock] {
	return pulumix.Output[RuleGroupRuleActionBlock]{
		OutputState: o.OutputState,
	}
}

// Defines a custom response for the web request. See Custom Response below for details.
func (o RuleGroupRuleActionBlockOutput) CustomResponse() pulumix.GPtrOutput[RuleGroupRuleActionBlockCustomResponse, RuleGroupRuleActionBlockCustomResponseOutput] {
	value := pulumix.Apply[RuleGroupRuleActionBlock](o, func(v RuleGroupRuleActionBlock) *RuleGroupRuleActionBlockCustomResponse { return v.CustomResponse })
	return pulumix.GPtrOutput[RuleGroupRuleActionBlockCustomResponse, RuleGroupRuleActionBlockCustomResponseOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionBlockCustomResponse struct {
	// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
	CustomResponseBodyKey *string `pulumi:"customResponseBodyKey"`
	// The HTTP status code to return to the client.
	ResponseCode int `pulumi:"responseCode"`
	// The `responseHeader` blocks used to define the HTTP response headers added to the response. See Custom HTTP Header below for details.
	ResponseHeaders []RuleGroupRuleActionBlockCustomResponseResponseHeader `pulumi:"responseHeaders"`
}

type RuleGroupRuleActionBlockCustomResponseArgs struct {
	// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
	CustomResponseBodyKey pulumix.Input[*string] `pulumi:"customResponseBodyKey"`
	// The HTTP status code to return to the client.
	ResponseCode pulumix.Input[int] `pulumi:"responseCode"`
	// The `responseHeader` blocks used to define the HTTP response headers added to the response. See Custom HTTP Header below for details.
	ResponseHeaders pulumix.Input[[]*RuleGroupRuleActionBlockCustomResponseResponseHeaderArgs] `pulumi:"responseHeaders"`
}

func (RuleGroupRuleActionBlockCustomResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionBlockCustomResponse)(nil)).Elem()
}

func (i RuleGroupRuleActionBlockCustomResponseArgs) ToRuleGroupRuleActionBlockCustomResponseOutput() RuleGroupRuleActionBlockCustomResponseOutput {
	return i.ToRuleGroupRuleActionBlockCustomResponseOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionBlockCustomResponseArgs) ToRuleGroupRuleActionBlockCustomResponseOutputWithContext(ctx context.Context) RuleGroupRuleActionBlockCustomResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionBlockCustomResponseOutput)
}

func (i *RuleGroupRuleActionBlockCustomResponseArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionBlockCustomResponseArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionBlockCustomResponseOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionBlockCustomResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionBlockCustomResponse)(nil)).Elem()
}

func (o RuleGroupRuleActionBlockCustomResponseOutput) ToRuleGroupRuleActionBlockCustomResponseOutput() RuleGroupRuleActionBlockCustomResponseOutput {
	return o
}

func (o RuleGroupRuleActionBlockCustomResponseOutput) ToRuleGroupRuleActionBlockCustomResponseOutputWithContext(ctx context.Context) RuleGroupRuleActionBlockCustomResponseOutput {
	return o
}

func (o RuleGroupRuleActionBlockCustomResponseOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionBlockCustomResponse] {
	return pulumix.Output[RuleGroupRuleActionBlockCustomResponse]{
		OutputState: o.OutputState,
	}
}

// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
func (o RuleGroupRuleActionBlockCustomResponseOutput) CustomResponseBodyKey() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleActionBlockCustomResponse](o, func(v RuleGroupRuleActionBlockCustomResponse) *string { return v.CustomResponseBodyKey })
}

// The HTTP status code to return to the client.
func (o RuleGroupRuleActionBlockCustomResponseOutput) ResponseCode() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleActionBlockCustomResponse](o, func(v RuleGroupRuleActionBlockCustomResponse) int { return v.ResponseCode })
}

// The `responseHeader` blocks used to define the HTTP response headers added to the response. See Custom HTTP Header below for details.
func (o RuleGroupRuleActionBlockCustomResponseOutput) ResponseHeaders() pulumix.GArrayOutput[RuleGroupRuleActionBlockCustomResponseResponseHeader, RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleActionBlockCustomResponse](o, func(v RuleGroupRuleActionBlockCustomResponse) []RuleGroupRuleActionBlockCustomResponseResponseHeader {
		return v.ResponseHeaders
	})
	return pulumix.GArrayOutput[RuleGroupRuleActionBlockCustomResponseResponseHeader, RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionBlockCustomResponseResponseHeader struct {
	// A friendly name of the rule group.
	Name string `pulumi:"name"`
	// The value of the custom header.
	Value string `pulumi:"value"`
}

type RuleGroupRuleActionBlockCustomResponseResponseHeaderArgs struct {
	// A friendly name of the rule group.
	Name pulumix.Input[string] `pulumi:"name"`
	// The value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (RuleGroupRuleActionBlockCustomResponseResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionBlockCustomResponseResponseHeader)(nil)).Elem()
}

func (i RuleGroupRuleActionBlockCustomResponseResponseHeaderArgs) ToRuleGroupRuleActionBlockCustomResponseResponseHeaderOutput() RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput {
	return i.ToRuleGroupRuleActionBlockCustomResponseResponseHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionBlockCustomResponseResponseHeaderArgs) ToRuleGroupRuleActionBlockCustomResponseResponseHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput)
}

func (i *RuleGroupRuleActionBlockCustomResponseResponseHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionBlockCustomResponseResponseHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionBlockCustomResponseResponseHeader)(nil)).Elem()
}

func (o RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput) ToRuleGroupRuleActionBlockCustomResponseResponseHeaderOutput() RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput {
	return o
}

func (o RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput) ToRuleGroupRuleActionBlockCustomResponseResponseHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput {
	return o
}

func (o RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionBlockCustomResponseResponseHeader] {
	return pulumix.Output[RuleGroupRuleActionBlockCustomResponseResponseHeader]{
		OutputState: o.OutputState,
	}
}

// A friendly name of the rule group.
func (o RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionBlockCustomResponseResponseHeader](o, func(v RuleGroupRuleActionBlockCustomResponseResponseHeader) string { return v.Name })
}

// The value of the custom header.
func (o RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionBlockCustomResponseResponseHeader](o, func(v RuleGroupRuleActionBlockCustomResponseResponseHeader) string { return v.Value })
}

type RuleGroupRuleActionCaptcha struct {
	// Defines custom handling for the web request. See Custom Request Handling below for details.
	CustomRequestHandling *RuleGroupRuleActionCaptchaCustomRequestHandling `pulumi:"customRequestHandling"`
}

type RuleGroupRuleActionCaptchaArgs struct {
	// Defines custom handling for the web request. See Custom Request Handling below for details.
	CustomRequestHandling pulumix.Input[*RuleGroupRuleActionCaptchaCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (RuleGroupRuleActionCaptchaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCaptcha)(nil)).Elem()
}

func (i RuleGroupRuleActionCaptchaArgs) ToRuleGroupRuleActionCaptchaOutput() RuleGroupRuleActionCaptchaOutput {
	return i.ToRuleGroupRuleActionCaptchaOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionCaptchaArgs) ToRuleGroupRuleActionCaptchaOutputWithContext(ctx context.Context) RuleGroupRuleActionCaptchaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionCaptchaOutput)
}

func (i *RuleGroupRuleActionCaptchaArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionCaptchaArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionCaptchaOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionCaptchaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCaptcha)(nil)).Elem()
}

func (o RuleGroupRuleActionCaptchaOutput) ToRuleGroupRuleActionCaptchaOutput() RuleGroupRuleActionCaptchaOutput {
	return o
}

func (o RuleGroupRuleActionCaptchaOutput) ToRuleGroupRuleActionCaptchaOutputWithContext(ctx context.Context) RuleGroupRuleActionCaptchaOutput {
	return o
}

func (o RuleGroupRuleActionCaptchaOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionCaptcha] {
	return pulumix.Output[RuleGroupRuleActionCaptcha]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See Custom Request Handling below for details.
func (o RuleGroupRuleActionCaptchaOutput) CustomRequestHandling() pulumix.GPtrOutput[RuleGroupRuleActionCaptchaCustomRequestHandling, RuleGroupRuleActionCaptchaCustomRequestHandlingOutput] {
	value := pulumix.Apply[RuleGroupRuleActionCaptcha](o, func(v RuleGroupRuleActionCaptcha) *RuleGroupRuleActionCaptchaCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[RuleGroupRuleActionCaptchaCustomRequestHandling, RuleGroupRuleActionCaptchaCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionCaptchaCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
	InsertHeaders []RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type RuleGroupRuleActionCaptchaCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
	InsertHeaders pulumix.Input[[]*RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (RuleGroupRuleActionCaptchaCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCaptchaCustomRequestHandling)(nil)).Elem()
}

func (i RuleGroupRuleActionCaptchaCustomRequestHandlingArgs) ToRuleGroupRuleActionCaptchaCustomRequestHandlingOutput() RuleGroupRuleActionCaptchaCustomRequestHandlingOutput {
	return i.ToRuleGroupRuleActionCaptchaCustomRequestHandlingOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionCaptchaCustomRequestHandlingArgs) ToRuleGroupRuleActionCaptchaCustomRequestHandlingOutputWithContext(ctx context.Context) RuleGroupRuleActionCaptchaCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionCaptchaCustomRequestHandlingOutput)
}

func (i *RuleGroupRuleActionCaptchaCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionCaptchaCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionCaptchaCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionCaptchaCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCaptchaCustomRequestHandling)(nil)).Elem()
}

func (o RuleGroupRuleActionCaptchaCustomRequestHandlingOutput) ToRuleGroupRuleActionCaptchaCustomRequestHandlingOutput() RuleGroupRuleActionCaptchaCustomRequestHandlingOutput {
	return o
}

func (o RuleGroupRuleActionCaptchaCustomRequestHandlingOutput) ToRuleGroupRuleActionCaptchaCustomRequestHandlingOutputWithContext(ctx context.Context) RuleGroupRuleActionCaptchaCustomRequestHandlingOutput {
	return o
}

func (o RuleGroupRuleActionCaptchaCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionCaptchaCustomRequestHandling] {
	return pulumix.Output[RuleGroupRuleActionCaptchaCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
func (o RuleGroupRuleActionCaptchaCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader, RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleActionCaptchaCustomRequestHandling](o, func(v RuleGroupRuleActionCaptchaCustomRequestHandling) []RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader, RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader struct {
	// A friendly name of the rule group.
	Name string `pulumi:"name"`
	// The value of the custom header.
	Value string `pulumi:"value"`
}

type RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs struct {
	// A friendly name of the rule group.
	Name pulumix.Input[string] `pulumi:"name"`
	// The value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs) ToRuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput() RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput {
	return i.ToRuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs) ToRuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput)
}

func (i *RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) ToRuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput() RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) ToRuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader] {
	return pulumix.Output[RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// A friendly name of the rule group.
func (o RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader](o, func(v RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader) string { return v.Name })
}

// The value of the custom header.
func (o RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader](o, func(v RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeader) string { return v.Value })
}

type RuleGroupRuleActionChallenge struct {
	// Defines custom handling for the web request. See Custom Request Handling below for details.
	CustomRequestHandling *RuleGroupRuleActionChallengeCustomRequestHandling `pulumi:"customRequestHandling"`
}

type RuleGroupRuleActionChallengeArgs struct {
	// Defines custom handling for the web request. See Custom Request Handling below for details.
	CustomRequestHandling pulumix.Input[*RuleGroupRuleActionChallengeCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (RuleGroupRuleActionChallengeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionChallenge)(nil)).Elem()
}

func (i RuleGroupRuleActionChallengeArgs) ToRuleGroupRuleActionChallengeOutput() RuleGroupRuleActionChallengeOutput {
	return i.ToRuleGroupRuleActionChallengeOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionChallengeArgs) ToRuleGroupRuleActionChallengeOutputWithContext(ctx context.Context) RuleGroupRuleActionChallengeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionChallengeOutput)
}

func (i *RuleGroupRuleActionChallengeArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionChallengeArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionChallengeOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionChallengeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionChallenge)(nil)).Elem()
}

func (o RuleGroupRuleActionChallengeOutput) ToRuleGroupRuleActionChallengeOutput() RuleGroupRuleActionChallengeOutput {
	return o
}

func (o RuleGroupRuleActionChallengeOutput) ToRuleGroupRuleActionChallengeOutputWithContext(ctx context.Context) RuleGroupRuleActionChallengeOutput {
	return o
}

func (o RuleGroupRuleActionChallengeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionChallenge] {
	return pulumix.Output[RuleGroupRuleActionChallenge]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See Custom Request Handling below for details.
func (o RuleGroupRuleActionChallengeOutput) CustomRequestHandling() pulumix.GPtrOutput[RuleGroupRuleActionChallengeCustomRequestHandling, RuleGroupRuleActionChallengeCustomRequestHandlingOutput] {
	value := pulumix.Apply[RuleGroupRuleActionChallenge](o, func(v RuleGroupRuleActionChallenge) *RuleGroupRuleActionChallengeCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[RuleGroupRuleActionChallengeCustomRequestHandling, RuleGroupRuleActionChallengeCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionChallengeCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
	InsertHeaders []RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type RuleGroupRuleActionChallengeCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
	InsertHeaders pulumix.Input[[]*RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (RuleGroupRuleActionChallengeCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionChallengeCustomRequestHandling)(nil)).Elem()
}

func (i RuleGroupRuleActionChallengeCustomRequestHandlingArgs) ToRuleGroupRuleActionChallengeCustomRequestHandlingOutput() RuleGroupRuleActionChallengeCustomRequestHandlingOutput {
	return i.ToRuleGroupRuleActionChallengeCustomRequestHandlingOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionChallengeCustomRequestHandlingArgs) ToRuleGroupRuleActionChallengeCustomRequestHandlingOutputWithContext(ctx context.Context) RuleGroupRuleActionChallengeCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionChallengeCustomRequestHandlingOutput)
}

func (i *RuleGroupRuleActionChallengeCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionChallengeCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionChallengeCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionChallengeCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionChallengeCustomRequestHandling)(nil)).Elem()
}

func (o RuleGroupRuleActionChallengeCustomRequestHandlingOutput) ToRuleGroupRuleActionChallengeCustomRequestHandlingOutput() RuleGroupRuleActionChallengeCustomRequestHandlingOutput {
	return o
}

func (o RuleGroupRuleActionChallengeCustomRequestHandlingOutput) ToRuleGroupRuleActionChallengeCustomRequestHandlingOutputWithContext(ctx context.Context) RuleGroupRuleActionChallengeCustomRequestHandlingOutput {
	return o
}

func (o RuleGroupRuleActionChallengeCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionChallengeCustomRequestHandling] {
	return pulumix.Output[RuleGroupRuleActionChallengeCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
func (o RuleGroupRuleActionChallengeCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader, RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleActionChallengeCustomRequestHandling](o, func(v RuleGroupRuleActionChallengeCustomRequestHandling) []RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader, RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader struct {
	// A friendly name of the rule group.
	Name string `pulumi:"name"`
	// The value of the custom header.
	Value string `pulumi:"value"`
}

type RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderArgs struct {
	// A friendly name of the rule group.
	Name pulumix.Input[string] `pulumi:"name"`
	// The value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderArgs) ToRuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput() RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput {
	return i.ToRuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderArgs) ToRuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput)
}

func (i *RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) ToRuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput() RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) ToRuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader] {
	return pulumix.Output[RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// A friendly name of the rule group.
func (o RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader](o, func(v RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader) string { return v.Name })
}

// The value of the custom header.
func (o RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader](o, func(v RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeader) string { return v.Value })
}

type RuleGroupRuleActionCount struct {
	// Defines custom handling for the web request. See Custom Request Handling below for details.
	CustomRequestHandling *RuleGroupRuleActionCountCustomRequestHandling `pulumi:"customRequestHandling"`
}

type RuleGroupRuleActionCountArgs struct {
	// Defines custom handling for the web request. See Custom Request Handling below for details.
	CustomRequestHandling pulumix.Input[*RuleGroupRuleActionCountCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (RuleGroupRuleActionCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCount)(nil)).Elem()
}

func (i RuleGroupRuleActionCountArgs) ToRuleGroupRuleActionCountOutput() RuleGroupRuleActionCountOutput {
	return i.ToRuleGroupRuleActionCountOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionCountArgs) ToRuleGroupRuleActionCountOutputWithContext(ctx context.Context) RuleGroupRuleActionCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionCountOutput)
}

func (i *RuleGroupRuleActionCountArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionCountArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionCountOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCount)(nil)).Elem()
}

func (o RuleGroupRuleActionCountOutput) ToRuleGroupRuleActionCountOutput() RuleGroupRuleActionCountOutput {
	return o
}

func (o RuleGroupRuleActionCountOutput) ToRuleGroupRuleActionCountOutputWithContext(ctx context.Context) RuleGroupRuleActionCountOutput {
	return o
}

func (o RuleGroupRuleActionCountOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionCount] {
	return pulumix.Output[RuleGroupRuleActionCount]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See Custom Request Handling below for details.
func (o RuleGroupRuleActionCountOutput) CustomRequestHandling() pulumix.GPtrOutput[RuleGroupRuleActionCountCustomRequestHandling, RuleGroupRuleActionCountCustomRequestHandlingOutput] {
	value := pulumix.Apply[RuleGroupRuleActionCount](o, func(v RuleGroupRuleActionCount) *RuleGroupRuleActionCountCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[RuleGroupRuleActionCountCustomRequestHandling, RuleGroupRuleActionCountCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionCountCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
	InsertHeaders []RuleGroupRuleActionCountCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type RuleGroupRuleActionCountCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
	InsertHeaders pulumix.Input[[]*RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (RuleGroupRuleActionCountCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCountCustomRequestHandling)(nil)).Elem()
}

func (i RuleGroupRuleActionCountCustomRequestHandlingArgs) ToRuleGroupRuleActionCountCustomRequestHandlingOutput() RuleGroupRuleActionCountCustomRequestHandlingOutput {
	return i.ToRuleGroupRuleActionCountCustomRequestHandlingOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionCountCustomRequestHandlingArgs) ToRuleGroupRuleActionCountCustomRequestHandlingOutputWithContext(ctx context.Context) RuleGroupRuleActionCountCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionCountCustomRequestHandlingOutput)
}

func (i *RuleGroupRuleActionCountCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionCountCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionCountCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionCountCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCountCustomRequestHandling)(nil)).Elem()
}

func (o RuleGroupRuleActionCountCustomRequestHandlingOutput) ToRuleGroupRuleActionCountCustomRequestHandlingOutput() RuleGroupRuleActionCountCustomRequestHandlingOutput {
	return o
}

func (o RuleGroupRuleActionCountCustomRequestHandlingOutput) ToRuleGroupRuleActionCountCustomRequestHandlingOutputWithContext(ctx context.Context) RuleGroupRuleActionCountCustomRequestHandlingOutput {
	return o
}

func (o RuleGroupRuleActionCountCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionCountCustomRequestHandling] {
	return pulumix.Output[RuleGroupRuleActionCountCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See Custom HTTP Header below for details.
func (o RuleGroupRuleActionCountCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[RuleGroupRuleActionCountCustomRequestHandlingInsertHeader, RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleActionCountCustomRequestHandling](o, func(v RuleGroupRuleActionCountCustomRequestHandling) []RuleGroupRuleActionCountCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[RuleGroupRuleActionCountCustomRequestHandlingInsertHeader, RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleActionCountCustomRequestHandlingInsertHeader struct {
	// A friendly name of the rule group.
	Name string `pulumi:"name"`
	// The value of the custom header.
	Value string `pulumi:"value"`
}

type RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderArgs struct {
	// A friendly name of the rule group.
	Name pulumix.Input[string] `pulumi:"name"`
	// The value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCountCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderArgs) ToRuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput() RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput {
	return i.ToRuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderArgs) ToRuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput)
}

func (i *RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleActionCountCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput) ToRuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput() RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput) ToRuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleActionCountCustomRequestHandlingInsertHeader] {
	return pulumix.Output[RuleGroupRuleActionCountCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// A friendly name of the rule group.
func (o RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionCountCustomRequestHandlingInsertHeader](o, func(v RuleGroupRuleActionCountCustomRequestHandlingInsertHeader) string { return v.Name })
}

// The value of the custom header.
func (o RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleActionCountCustomRequestHandlingInsertHeader](o, func(v RuleGroupRuleActionCountCustomRequestHandlingInsertHeader) string { return v.Value })
}

type RuleGroupRuleCaptchaConfig struct {
	// Defines custom immunity time. See Immunity Time Property below for details.
	ImmunityTimeProperty *RuleGroupRuleCaptchaConfigImmunityTimeProperty `pulumi:"immunityTimeProperty"`
}

type RuleGroupRuleCaptchaConfigArgs struct {
	// Defines custom immunity time. See Immunity Time Property below for details.
	ImmunityTimeProperty pulumix.Input[*RuleGroupRuleCaptchaConfigImmunityTimePropertyArgs] `pulumi:"immunityTimeProperty"`
}

func (RuleGroupRuleCaptchaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleCaptchaConfig)(nil)).Elem()
}

func (i RuleGroupRuleCaptchaConfigArgs) ToRuleGroupRuleCaptchaConfigOutput() RuleGroupRuleCaptchaConfigOutput {
	return i.ToRuleGroupRuleCaptchaConfigOutputWithContext(context.Background())
}

func (i RuleGroupRuleCaptchaConfigArgs) ToRuleGroupRuleCaptchaConfigOutputWithContext(ctx context.Context) RuleGroupRuleCaptchaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleCaptchaConfigOutput)
}

func (i *RuleGroupRuleCaptchaConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleCaptchaConfigArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleCaptchaConfigOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleCaptchaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleCaptchaConfig)(nil)).Elem()
}

func (o RuleGroupRuleCaptchaConfigOutput) ToRuleGroupRuleCaptchaConfigOutput() RuleGroupRuleCaptchaConfigOutput {
	return o
}

func (o RuleGroupRuleCaptchaConfigOutput) ToRuleGroupRuleCaptchaConfigOutputWithContext(ctx context.Context) RuleGroupRuleCaptchaConfigOutput {
	return o
}

func (o RuleGroupRuleCaptchaConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleCaptchaConfig] {
	return pulumix.Output[RuleGroupRuleCaptchaConfig]{
		OutputState: o.OutputState,
	}
}

// Defines custom immunity time. See Immunity Time Property below for details.
func (o RuleGroupRuleCaptchaConfigOutput) ImmunityTimeProperty() pulumix.GPtrOutput[RuleGroupRuleCaptchaConfigImmunityTimeProperty, RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput] {
	value := pulumix.Apply[RuleGroupRuleCaptchaConfig](o, func(v RuleGroupRuleCaptchaConfig) *RuleGroupRuleCaptchaConfigImmunityTimeProperty {
		return v.ImmunityTimeProperty
	})
	return pulumix.GPtrOutput[RuleGroupRuleCaptchaConfigImmunityTimeProperty, RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleCaptchaConfigImmunityTimeProperty struct {
	// The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by AWS WAF. The default setting is 300.
	ImmunityTime *int `pulumi:"immunityTime"`
}

type RuleGroupRuleCaptchaConfigImmunityTimePropertyArgs struct {
	// The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by AWS WAF. The default setting is 300.
	ImmunityTime pulumix.Input[*int] `pulumi:"immunityTime"`
}

func (RuleGroupRuleCaptchaConfigImmunityTimePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleCaptchaConfigImmunityTimeProperty)(nil)).Elem()
}

func (i RuleGroupRuleCaptchaConfigImmunityTimePropertyArgs) ToRuleGroupRuleCaptchaConfigImmunityTimePropertyOutput() RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput {
	return i.ToRuleGroupRuleCaptchaConfigImmunityTimePropertyOutputWithContext(context.Background())
}

func (i RuleGroupRuleCaptchaConfigImmunityTimePropertyArgs) ToRuleGroupRuleCaptchaConfigImmunityTimePropertyOutputWithContext(ctx context.Context) RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput)
}

func (i *RuleGroupRuleCaptchaConfigImmunityTimePropertyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleCaptchaConfigImmunityTimePropertyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleCaptchaConfigImmunityTimeProperty)(nil)).Elem()
}

func (o RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput) ToRuleGroupRuleCaptchaConfigImmunityTimePropertyOutput() RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput {
	return o
}

func (o RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput) ToRuleGroupRuleCaptchaConfigImmunityTimePropertyOutputWithContext(ctx context.Context) RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput {
	return o
}

func (o RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleCaptchaConfigImmunityTimeProperty] {
	return pulumix.Output[RuleGroupRuleCaptchaConfigImmunityTimeProperty]{
		OutputState: o.OutputState,
	}
}

// The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by AWS WAF. The default setting is 300.
func (o RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput) ImmunityTime() pulumix.Output[*int] {
	return pulumix.Apply[RuleGroupRuleCaptchaConfigImmunityTimeProperty](o, func(v RuleGroupRuleCaptchaConfigImmunityTimeProperty) *int { return v.ImmunityTime })
}

type RuleGroupRuleRuleLabel struct {
	// The label string.
	Name string `pulumi:"name"`
}

type RuleGroupRuleRuleLabelArgs struct {
	// The label string.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleRuleLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleRuleLabel)(nil)).Elem()
}

func (i RuleGroupRuleRuleLabelArgs) ToRuleGroupRuleRuleLabelOutput() RuleGroupRuleRuleLabelOutput {
	return i.ToRuleGroupRuleRuleLabelOutputWithContext(context.Background())
}

func (i RuleGroupRuleRuleLabelArgs) ToRuleGroupRuleRuleLabelOutputWithContext(ctx context.Context) RuleGroupRuleRuleLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleRuleLabelOutput)
}

func (i *RuleGroupRuleRuleLabelArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleRuleLabelArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleRuleLabelOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleRuleLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleRuleLabel)(nil)).Elem()
}

func (o RuleGroupRuleRuleLabelOutput) ToRuleGroupRuleRuleLabelOutput() RuleGroupRuleRuleLabelOutput {
	return o
}

func (o RuleGroupRuleRuleLabelOutput) ToRuleGroupRuleRuleLabelOutputWithContext(ctx context.Context) RuleGroupRuleRuleLabelOutput {
	return o
}

func (o RuleGroupRuleRuleLabelOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleRuleLabel] {
	return pulumix.Output[RuleGroupRuleRuleLabel]{
		OutputState: o.OutputState,
	}
}

// The label string.
func (o RuleGroupRuleRuleLabelOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleRuleLabel](o, func(v RuleGroupRuleRuleLabel) string { return v.Name })
}

type RuleGroupRuleStatement struct {
	// A logical rule statement used to combine other rule statements with AND logic. See AND Statement below for details.
	AndStatement *RuleGroupRuleStatementAndStatement `pulumi:"andStatement"`
	// A rule statement that defines a string match search for AWS WAF to apply to web requests. See Byte Match Statement below for details.
	ByteMatchStatement *RuleGroupRuleStatementByteMatchStatement `pulumi:"byteMatchStatement"`
	// A rule statement used to identify web requests based on country of origin. See GEO Match Statement below for details.
	GeoMatchStatement *RuleGroupRuleStatementGeoMatchStatement `pulumi:"geoMatchStatement"`
	// A rule statement used to detect web requests coming from particular IP addresses or address ranges. See IP Set Reference Statement below for details.
	IpSetReferenceStatement *RuleGroupRuleStatementIpSetReferenceStatement `pulumi:"ipSetReferenceStatement"`
	// A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See Label Match Statement below for details.
	LabelMatchStatement *RuleGroupRuleStatementLabelMatchStatement `pulumi:"labelMatchStatement"`
	// A logical rule statement used to negate the results of another rule statement. See NOT Statement below for details.
	NotStatement *RuleGroupRuleStatementNotStatement `pulumi:"notStatement"`
	// A logical rule statement used to combine other rule statements with OR logic. See OR Statement below for details.
	OrStatement *RuleGroupRuleStatementOrStatement `pulumi:"orStatement"`
	// A rate-based rule tracks the rate of requests for each originating `IP address`, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any `5-minute` time span. This statement can not be nested. See Rate Based Statement below for details.
	RateBasedStatement *RuleGroupRuleStatementRateBasedStatement `pulumi:"rateBasedStatement"`
	// A rule statement used to search web request components for a match against a single regular expression. See Regex Match Statement below for details.
	RegexMatchStatement *RuleGroupRuleStatementRegexMatchStatement `pulumi:"regexMatchStatement"`
	// A rule statement used to search web request components for matches with regular expressions. See Regex Pattern Set Reference Statement below for details.
	RegexPatternSetReferenceStatement *RuleGroupRuleStatementRegexPatternSetReferenceStatement `pulumi:"regexPatternSetReferenceStatement"`
	// A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See Size Constraint Statement below for more details.
	SizeConstraintStatement *RuleGroupRuleStatementSizeConstraintStatement `pulumi:"sizeConstraintStatement"`
	// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See SQL Injection Match Statement below for details.
	SqliMatchStatement *RuleGroupRuleStatementSqliMatchStatement `pulumi:"sqliMatchStatement"`
	// A rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See XSS Match Statement below for details.
	XssMatchStatement *RuleGroupRuleStatementXssMatchStatement `pulumi:"xssMatchStatement"`
}

type RuleGroupRuleStatementArgs struct {
	// A logical rule statement used to combine other rule statements with AND logic. See AND Statement below for details.
	AndStatement pulumix.Input[*RuleGroupRuleStatementAndStatementArgs] `pulumi:"andStatement"`
	// A rule statement that defines a string match search for AWS WAF to apply to web requests. See Byte Match Statement below for details.
	ByteMatchStatement pulumix.Input[*RuleGroupRuleStatementByteMatchStatementArgs] `pulumi:"byteMatchStatement"`
	// A rule statement used to identify web requests based on country of origin. See GEO Match Statement below for details.
	GeoMatchStatement pulumix.Input[*RuleGroupRuleStatementGeoMatchStatementArgs] `pulumi:"geoMatchStatement"`
	// A rule statement used to detect web requests coming from particular IP addresses or address ranges. See IP Set Reference Statement below for details.
	IpSetReferenceStatement pulumix.Input[*RuleGroupRuleStatementIpSetReferenceStatementArgs] `pulumi:"ipSetReferenceStatement"`
	// A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See Label Match Statement below for details.
	LabelMatchStatement pulumix.Input[*RuleGroupRuleStatementLabelMatchStatementArgs] `pulumi:"labelMatchStatement"`
	// A logical rule statement used to negate the results of another rule statement. See NOT Statement below for details.
	NotStatement pulumix.Input[*RuleGroupRuleStatementNotStatementArgs] `pulumi:"notStatement"`
	// A logical rule statement used to combine other rule statements with OR logic. See OR Statement below for details.
	OrStatement pulumix.Input[*RuleGroupRuleStatementOrStatementArgs] `pulumi:"orStatement"`
	// A rate-based rule tracks the rate of requests for each originating `IP address`, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any `5-minute` time span. This statement can not be nested. See Rate Based Statement below for details.
	RateBasedStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementArgs] `pulumi:"rateBasedStatement"`
	// A rule statement used to search web request components for a match against a single regular expression. See Regex Match Statement below for details.
	RegexMatchStatement pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementArgs] `pulumi:"regexMatchStatement"`
	// A rule statement used to search web request components for matches with regular expressions. See Regex Pattern Set Reference Statement below for details.
	RegexPatternSetReferenceStatement pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementArgs] `pulumi:"regexPatternSetReferenceStatement"`
	// A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See Size Constraint Statement below for more details.
	SizeConstraintStatement pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementArgs] `pulumi:"sizeConstraintStatement"`
	// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See SQL Injection Match Statement below for details.
	SqliMatchStatement pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementArgs] `pulumi:"sqliMatchStatement"`
	// A rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See XSS Match Statement below for details.
	XssMatchStatement pulumix.Input[*RuleGroupRuleStatementXssMatchStatementArgs] `pulumi:"xssMatchStatement"`
}

func (RuleGroupRuleStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementArgs) ToRuleGroupRuleStatementOutput() RuleGroupRuleStatementOutput {
	return i.ToRuleGroupRuleStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementArgs) ToRuleGroupRuleStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementOutput)
}

func (i *RuleGroupRuleStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementOutput) ToRuleGroupRuleStatementOutput() RuleGroupRuleStatementOutput {
	return o
}

func (o RuleGroupRuleStatementOutput) ToRuleGroupRuleStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementOutput {
	return o
}

func (o RuleGroupRuleStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatement] {
	return pulumix.Output[RuleGroupRuleStatement]{
		OutputState: o.OutputState,
	}
}

// A logical rule statement used to combine other rule statements with AND logic. See AND Statement below for details.
func (o RuleGroupRuleStatementOutput) AndStatement() pulumix.GPtrOutput[RuleGroupRuleStatementAndStatement, RuleGroupRuleStatementAndStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementAndStatement { return v.AndStatement })
	return pulumix.GPtrOutput[RuleGroupRuleStatementAndStatement, RuleGroupRuleStatementAndStatementOutput]{OutputState: value.OutputState}
}

// A rule statement that defines a string match search for AWS WAF to apply to web requests. See Byte Match Statement below for details.
func (o RuleGroupRuleStatementOutput) ByteMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatement, RuleGroupRuleStatementByteMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementByteMatchStatement { return v.ByteMatchStatement })
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatement, RuleGroupRuleStatementByteMatchStatementOutput]{OutputState: value.OutputState}
}

// A rule statement used to identify web requests based on country of origin. See GEO Match Statement below for details.
func (o RuleGroupRuleStatementOutput) GeoMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementGeoMatchStatement, RuleGroupRuleStatementGeoMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementGeoMatchStatement { return v.GeoMatchStatement })
	return pulumix.GPtrOutput[RuleGroupRuleStatementGeoMatchStatement, RuleGroupRuleStatementGeoMatchStatementOutput]{OutputState: value.OutputState}
}

// A rule statement used to detect web requests coming from particular IP addresses or address ranges. See IP Set Reference Statement below for details.
func (o RuleGroupRuleStatementOutput) IpSetReferenceStatement() pulumix.GPtrOutput[RuleGroupRuleStatementIpSetReferenceStatement, RuleGroupRuleStatementIpSetReferenceStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementIpSetReferenceStatement {
		return v.IpSetReferenceStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementIpSetReferenceStatement, RuleGroupRuleStatementIpSetReferenceStatementOutput]{OutputState: value.OutputState}
}

// A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See Label Match Statement below for details.
func (o RuleGroupRuleStatementOutput) LabelMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementLabelMatchStatement, RuleGroupRuleStatementLabelMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementLabelMatchStatement {
		return v.LabelMatchStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementLabelMatchStatement, RuleGroupRuleStatementLabelMatchStatementOutput]{OutputState: value.OutputState}
}

// A logical rule statement used to negate the results of another rule statement. See NOT Statement below for details.
func (o RuleGroupRuleStatementOutput) NotStatement() pulumix.GPtrOutput[RuleGroupRuleStatementNotStatement, RuleGroupRuleStatementNotStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementNotStatement { return v.NotStatement })
	return pulumix.GPtrOutput[RuleGroupRuleStatementNotStatement, RuleGroupRuleStatementNotStatementOutput]{OutputState: value.OutputState}
}

// A logical rule statement used to combine other rule statements with OR logic. See OR Statement below for details.
func (o RuleGroupRuleStatementOutput) OrStatement() pulumix.GPtrOutput[RuleGroupRuleStatementOrStatement, RuleGroupRuleStatementOrStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementOrStatement { return v.OrStatement })
	return pulumix.GPtrOutput[RuleGroupRuleStatementOrStatement, RuleGroupRuleStatementOrStatementOutput]{OutputState: value.OutputState}
}

// A rate-based rule tracks the rate of requests for each originating `IP address`, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any `5-minute` time span. This statement can not be nested. See Rate Based Statement below for details.
func (o RuleGroupRuleStatementOutput) RateBasedStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatement, RuleGroupRuleStatementRateBasedStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementRateBasedStatement { return v.RateBasedStatement })
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatement, RuleGroupRuleStatementRateBasedStatementOutput]{OutputState: value.OutputState}
}

// A rule statement used to search web request components for a match against a single regular expression. See Regex Match Statement below for details.
func (o RuleGroupRuleStatementOutput) RegexMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatement, RuleGroupRuleStatementRegexMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementRegexMatchStatement {
		return v.RegexMatchStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatement, RuleGroupRuleStatementRegexMatchStatementOutput]{OutputState: value.OutputState}
}

// A rule statement used to search web request components for matches with regular expressions. See Regex Pattern Set Reference Statement below for details.
func (o RuleGroupRuleStatementOutput) RegexPatternSetReferenceStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatement, RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementRegexPatternSetReferenceStatement {
		return v.RegexPatternSetReferenceStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatement, RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput]{OutputState: value.OutputState}
}

// A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See Size Constraint Statement below for more details.
func (o RuleGroupRuleStatementOutput) SizeConstraintStatement() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatement, RuleGroupRuleStatementSizeConstraintStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementSizeConstraintStatement {
		return v.SizeConstraintStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatement, RuleGroupRuleStatementSizeConstraintStatementOutput]{OutputState: value.OutputState}
}

// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See SQL Injection Match Statement below for details.
func (o RuleGroupRuleStatementOutput) SqliMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatement, RuleGroupRuleStatementSqliMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementSqliMatchStatement { return v.SqliMatchStatement })
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatement, RuleGroupRuleStatementSqliMatchStatementOutput]{OutputState: value.OutputState}
}

// A rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See XSS Match Statement below for details.
func (o RuleGroupRuleStatementOutput) XssMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatement, RuleGroupRuleStatementXssMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatement](o, func(v RuleGroupRuleStatement) *RuleGroupRuleStatementXssMatchStatement { return v.XssMatchStatement })
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatement, RuleGroupRuleStatementXssMatchStatementOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementAndStatement struct {
	// The statements to combine.
	Statements []RuleGroupRuleStatement `pulumi:"statements"`
}

type RuleGroupRuleStatementAndStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*RuleGroupRuleStatementArgs] `pulumi:"statements"`
}

func (RuleGroupRuleStatementAndStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementAndStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementAndStatementArgs) ToRuleGroupRuleStatementAndStatementOutput() RuleGroupRuleStatementAndStatementOutput {
	return i.ToRuleGroupRuleStatementAndStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementAndStatementArgs) ToRuleGroupRuleStatementAndStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementAndStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementAndStatementOutput)
}

func (i *RuleGroupRuleStatementAndStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementAndStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementAndStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementAndStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementAndStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementAndStatementOutput) ToRuleGroupRuleStatementAndStatementOutput() RuleGroupRuleStatementAndStatementOutput {
	return o
}

func (o RuleGroupRuleStatementAndStatementOutput) ToRuleGroupRuleStatementAndStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementAndStatementOutput {
	return o
}

func (o RuleGroupRuleStatementAndStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementAndStatement] {
	return pulumix.Output[RuleGroupRuleStatementAndStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o RuleGroupRuleStatementAndStatementOutput) Statements() pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementAndStatement](o, func(v RuleGroupRuleStatementAndStatement) []RuleGroupRuleStatement { return v.Statements })
	return pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementByteMatchStatement struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementByteMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// The area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
	PositionalConstraint string `pulumi:"positionalConstraint"`
	// A string value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
	SearchString string `pulumi:"searchString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementByteMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementByteMatchStatementArgs struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// The area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
	PositionalConstraint pulumix.Input[string] `pulumi:"positionalConstraint"`
	// A string value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
	SearchString pulumix.Input[string] `pulumi:"searchString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementByteMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementByteMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementArgs) ToRuleGroupRuleStatementByteMatchStatementOutput() RuleGroupRuleStatementByteMatchStatementOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementArgs) ToRuleGroupRuleStatementByteMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementOutput) ToRuleGroupRuleStatementByteMatchStatementOutput() RuleGroupRuleStatementByteMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementOutput) ToRuleGroupRuleStatementByteMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementByteMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatch, RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatement](o, func(v RuleGroupRuleStatementByteMatchStatement) *RuleGroupRuleStatementByteMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatch, RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// The area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
func (o RuleGroupRuleStatementByteMatchStatementOutput) PositionalConstraint() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatement](o, func(v RuleGroupRuleStatementByteMatchStatement) string { return v.PositionalConstraint })
}

// A string value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
func (o RuleGroupRuleStatementByteMatchStatementOutput) SearchString() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatement](o, func(v RuleGroupRuleStatementByteMatchStatement) string { return v.SearchString })
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementByteMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementByteMatchStatementTextTransformation, RuleGroupRuleStatementByteMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatement](o, func(v RuleGroupRuleStatementByteMatchStatement) []RuleGroupRuleStatementByteMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementByteMatchStatementTextTransformation, RuleGroupRuleStatementByteMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementByteMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchBody, RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementByteMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchBody, RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies, RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies, RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader, RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) []RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader, RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod, RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod, RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchBody) *string { return v.OversizeHandling })
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies) []RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies) string { return v.MatchScope })
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchCookies) string { return v.OversizeHandling })
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                    `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                    `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                        `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                        `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader) RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader) string { return v.MatchScope })
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchHeader) string { return v.OversizeHandling })
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody) RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody) string { return v.MatchScope })
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                     `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                         `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader) string { return v.Name })
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument) string { return v.Name })
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementByteMatchStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementByteMatchStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementByteMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementByteMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementByteMatchStatementTextTransformationOutput() RuleGroupRuleStatementByteMatchStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementByteMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementByteMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementByteMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementByteMatchStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementByteMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementByteMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementByteMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementByteMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementByteMatchStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementByteMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementByteMatchStatementTextTransformationOutput() RuleGroupRuleStatementByteMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementByteMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementByteMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementByteMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementByteMatchStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementByteMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementByteMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementByteMatchStatementTextTransformation) int { return v.Priority })
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementByteMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementByteMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementByteMatchStatementTextTransformation) string { return v.Type })
}

type RuleGroupRuleStatementGeoMatchStatement struct {
	// An array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
	CountryCodes []string `pulumi:"countryCodes"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See Forwarded IP Config below for details.
	ForwardedIpConfig *RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig `pulumi:"forwardedIpConfig"`
}

type RuleGroupRuleStatementGeoMatchStatementArgs struct {
	// An array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
	CountryCodes pulumix.Input[[]string] `pulumi:"countryCodes"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See Forwarded IP Config below for details.
	ForwardedIpConfig pulumix.Input[*RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigArgs] `pulumi:"forwardedIpConfig"`
}

func (RuleGroupRuleStatementGeoMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementGeoMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementGeoMatchStatementArgs) ToRuleGroupRuleStatementGeoMatchStatementOutput() RuleGroupRuleStatementGeoMatchStatementOutput {
	return i.ToRuleGroupRuleStatementGeoMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementGeoMatchStatementArgs) ToRuleGroupRuleStatementGeoMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementGeoMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementGeoMatchStatementOutput)
}

func (i *RuleGroupRuleStatementGeoMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementGeoMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementGeoMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementGeoMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementGeoMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementGeoMatchStatementOutput) ToRuleGroupRuleStatementGeoMatchStatementOutput() RuleGroupRuleStatementGeoMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementGeoMatchStatementOutput) ToRuleGroupRuleStatementGeoMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementGeoMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementGeoMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementGeoMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementGeoMatchStatement]{
		OutputState: o.OutputState,
	}
}

// An array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
func (o RuleGroupRuleStatementGeoMatchStatementOutput) CountryCodes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementGeoMatchStatement](o, func(v RuleGroupRuleStatementGeoMatchStatement) []string { return v.CountryCodes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See Forwarded IP Config below for details.
func (o RuleGroupRuleStatementGeoMatchStatementOutput) ForwardedIpConfig() pulumix.GPtrOutput[RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig, RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementGeoMatchStatement](o, func(v RuleGroupRuleStatementGeoMatchStatement) *RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig {
		return v.ForwardedIpConfig
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig, RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName string `pulumi:"headerName"`
}

type RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigArgs struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior pulumix.Input[string] `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName pulumix.Input[string] `pulumi:"headerName"`
}

func (RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig)(nil)).Elem()
}

func (i RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigArgs) ToRuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput() RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput {
	return i.ToRuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigArgs) ToRuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput)
}

func (i *RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig)(nil)).Elem()
}

func (o RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput) ToRuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput() RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput) ToRuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig] {
	return pulumix.Output[RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig]{
		OutputState: o.OutputState,
	}
}

// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
func (o RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput) FallbackBehavior() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig](o, func(v RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig) string { return v.FallbackBehavior })
}

// The name of the HTTP header to use for the IP address.
func (o RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput) HeaderName() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig](o, func(v RuleGroupRuleStatementGeoMatchStatementForwardedIpConfig) string { return v.HeaderName })
}

type RuleGroupRuleStatementIpSetReferenceStatement struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn string `pulumi:"arn"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See IPSet Forwarded IP Config below for more details.
	IpSetForwardedIpConfig *RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig `pulumi:"ipSetForwardedIpConfig"`
}

type RuleGroupRuleStatementIpSetReferenceStatementArgs struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See IPSet Forwarded IP Config below for more details.
	IpSetForwardedIpConfig pulumix.Input[*RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs] `pulumi:"ipSetForwardedIpConfig"`
}

func (RuleGroupRuleStatementIpSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementIpSetReferenceStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementIpSetReferenceStatementArgs) ToRuleGroupRuleStatementIpSetReferenceStatementOutput() RuleGroupRuleStatementIpSetReferenceStatementOutput {
	return i.ToRuleGroupRuleStatementIpSetReferenceStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementIpSetReferenceStatementArgs) ToRuleGroupRuleStatementIpSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementIpSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementIpSetReferenceStatementOutput)
}

func (i *RuleGroupRuleStatementIpSetReferenceStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementIpSetReferenceStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementIpSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementIpSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementIpSetReferenceStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementIpSetReferenceStatementOutput) ToRuleGroupRuleStatementIpSetReferenceStatementOutput() RuleGroupRuleStatementIpSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRuleStatementIpSetReferenceStatementOutput) ToRuleGroupRuleStatementIpSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementIpSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRuleStatementIpSetReferenceStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementIpSetReferenceStatement] {
	return pulumix.Output[RuleGroupRuleStatementIpSetReferenceStatement]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the IP Set that this statement references.
func (o RuleGroupRuleStatementIpSetReferenceStatementOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementIpSetReferenceStatement](o, func(v RuleGroupRuleStatementIpSetReferenceStatement) string { return v.Arn })
}

// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See IPSet Forwarded IP Config below for more details.
func (o RuleGroupRuleStatementIpSetReferenceStatementOutput) IpSetForwardedIpConfig() pulumix.GPtrOutput[RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig, RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementIpSetReferenceStatement](o, func(v RuleGroupRuleStatementIpSetReferenceStatement) *RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig {
		return v.IpSetForwardedIpConfig
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig, RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName string `pulumi:"headerName"`
	// The position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
	Position string `pulumi:"position"`
}

type RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior pulumix.Input[string] `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName pulumix.Input[string] `pulumi:"headerName"`
	// The position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
	Position pulumix.Input[string] `pulumi:"position"`
}

func (RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig)(nil)).Elem()
}

func (i RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToRuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput() RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return i.ToRuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToRuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput)
}

func (i *RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig)(nil)).Elem()
}

func (o RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToRuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput() RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToRuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig] {
	return pulumix.Output[RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig]{
		OutputState: o.OutputState,
	}
}

// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
func (o RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) FallbackBehavior() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig) string {
		return v.FallbackBehavior
	})
}

// The name of the HTTP header to use for the IP address.
func (o RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) HeaderName() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig) string {
		return v.HeaderName
	})
}

// The position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
func (o RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) Position() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig) string { return v.Position })
}

type RuleGroupRuleStatementLabelMatchStatement struct {
	// The string to match against.
	Key string `pulumi:"key"`
	// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
	Scope string `pulumi:"scope"`
}

type RuleGroupRuleStatementLabelMatchStatementArgs struct {
	// The string to match against.
	Key pulumix.Input[string] `pulumi:"key"`
	// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
	Scope pulumix.Input[string] `pulumi:"scope"`
}

func (RuleGroupRuleStatementLabelMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementLabelMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementLabelMatchStatementArgs) ToRuleGroupRuleStatementLabelMatchStatementOutput() RuleGroupRuleStatementLabelMatchStatementOutput {
	return i.ToRuleGroupRuleStatementLabelMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementLabelMatchStatementArgs) ToRuleGroupRuleStatementLabelMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementLabelMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementLabelMatchStatementOutput)
}

func (i *RuleGroupRuleStatementLabelMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementLabelMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementLabelMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementLabelMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementLabelMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementLabelMatchStatementOutput) ToRuleGroupRuleStatementLabelMatchStatementOutput() RuleGroupRuleStatementLabelMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementLabelMatchStatementOutput) ToRuleGroupRuleStatementLabelMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementLabelMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementLabelMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementLabelMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementLabelMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The string to match against.
func (o RuleGroupRuleStatementLabelMatchStatementOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementLabelMatchStatement](o, func(v RuleGroupRuleStatementLabelMatchStatement) string { return v.Key })
}

// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
func (o RuleGroupRuleStatementLabelMatchStatementOutput) Scope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementLabelMatchStatement](o, func(v RuleGroupRuleStatementLabelMatchStatement) string { return v.Scope })
}

type RuleGroupRuleStatementNotStatement struct {
	// The statements to combine.
	Statements []RuleGroupRuleStatement `pulumi:"statements"`
}

type RuleGroupRuleStatementNotStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*RuleGroupRuleStatementArgs] `pulumi:"statements"`
}

func (RuleGroupRuleStatementNotStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementNotStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementNotStatementArgs) ToRuleGroupRuleStatementNotStatementOutput() RuleGroupRuleStatementNotStatementOutput {
	return i.ToRuleGroupRuleStatementNotStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementNotStatementArgs) ToRuleGroupRuleStatementNotStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementNotStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementNotStatementOutput)
}

func (i *RuleGroupRuleStatementNotStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementNotStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementNotStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementNotStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementNotStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementNotStatementOutput) ToRuleGroupRuleStatementNotStatementOutput() RuleGroupRuleStatementNotStatementOutput {
	return o
}

func (o RuleGroupRuleStatementNotStatementOutput) ToRuleGroupRuleStatementNotStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementNotStatementOutput {
	return o
}

func (o RuleGroupRuleStatementNotStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementNotStatement] {
	return pulumix.Output[RuleGroupRuleStatementNotStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o RuleGroupRuleStatementNotStatementOutput) Statements() pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementNotStatement](o, func(v RuleGroupRuleStatementNotStatement) []RuleGroupRuleStatement { return v.Statements })
	return pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementOrStatement struct {
	// The statements to combine.
	Statements []RuleGroupRuleStatement `pulumi:"statements"`
}

type RuleGroupRuleStatementOrStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*RuleGroupRuleStatementArgs] `pulumi:"statements"`
}

func (RuleGroupRuleStatementOrStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementOrStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementOrStatementArgs) ToRuleGroupRuleStatementOrStatementOutput() RuleGroupRuleStatementOrStatementOutput {
	return i.ToRuleGroupRuleStatementOrStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementOrStatementArgs) ToRuleGroupRuleStatementOrStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementOrStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementOrStatementOutput)
}

func (i *RuleGroupRuleStatementOrStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementOrStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementOrStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementOrStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementOrStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementOrStatementOutput) ToRuleGroupRuleStatementOrStatementOutput() RuleGroupRuleStatementOrStatementOutput {
	return o
}

func (o RuleGroupRuleStatementOrStatementOutput) ToRuleGroupRuleStatementOrStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementOrStatementOutput {
	return o
}

func (o RuleGroupRuleStatementOrStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementOrStatement] {
	return pulumix.Output[RuleGroupRuleStatementOrStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o RuleGroupRuleStatementOrStatementOutput) Statements() pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementOrStatement](o, func(v RuleGroupRuleStatementOrStatement) []RuleGroupRuleStatement { return v.Statements })
	return pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatement struct {
	// Setting that indicates how to aggregate the request counts. Valid values include: `CONSTANT`, `FORWARDED_IP` or `IP`. Default: `IP`.
	AggregateKeyType *string `pulumi:"aggregateKeyType"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. If `aggregateKeyType` is set to `FORWARDED_IP`, this block is required. See Forwarded IP Config below for details.
	ForwardedIpConfig *RuleGroupRuleStatementRateBasedStatementForwardedIpConfig `pulumi:"forwardedIpConfig"`
	// The limit on requests per 5-minute period for a single originating IP address.
	Limit int `pulumi:"limit"`
	// An optional nested statement that narrows the scope of the rate-based statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See Statement above for details. If `aggregateKeyType` is set to `CONSTANT`, this block is required.
	ScopeDownStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatement `pulumi:"scopeDownStatement"`
}

type RuleGroupRuleStatementRateBasedStatementArgs struct {
	// Setting that indicates how to aggregate the request counts. Valid values include: `CONSTANT`, `FORWARDED_IP` or `IP`. Default: `IP`.
	AggregateKeyType pulumix.Input[*string] `pulumi:"aggregateKeyType"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. If `aggregateKeyType` is set to `FORWARDED_IP`, this block is required. See Forwarded IP Config below for details.
	ForwardedIpConfig pulumix.Input[*RuleGroupRuleStatementRateBasedStatementForwardedIpConfigArgs] `pulumi:"forwardedIpConfig"`
	// The limit on requests per 5-minute period for a single originating IP address.
	Limit pulumix.Input[int] `pulumi:"limit"`
	// An optional nested statement that narrows the scope of the rate-based statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See Statement above for details. If `aggregateKeyType` is set to `CONSTANT`, this block is required.
	ScopeDownStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementArgs] `pulumi:"scopeDownStatement"`
}

func (RuleGroupRuleStatementRateBasedStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementArgs) ToRuleGroupRuleStatementRateBasedStatementOutput() RuleGroupRuleStatementRateBasedStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementArgs) ToRuleGroupRuleStatementRateBasedStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementOutput) ToRuleGroupRuleStatementRateBasedStatementOutput() RuleGroupRuleStatementRateBasedStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementOutput) ToRuleGroupRuleStatementRateBasedStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatement]{
		OutputState: o.OutputState,
	}
}

// Setting that indicates how to aggregate the request counts. Valid values include: `CONSTANT`, `FORWARDED_IP` or `IP`. Default: `IP`.
func (o RuleGroupRuleStatementRateBasedStatementOutput) AggregateKeyType() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatement](o, func(v RuleGroupRuleStatementRateBasedStatement) *string { return v.AggregateKeyType })
}

// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. If `aggregateKeyType` is set to `FORWARDED_IP`, this block is required. See Forwarded IP Config below for details.
func (o RuleGroupRuleStatementRateBasedStatementOutput) ForwardedIpConfig() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementForwardedIpConfig, RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatement](o, func(v RuleGroupRuleStatementRateBasedStatement) *RuleGroupRuleStatementRateBasedStatementForwardedIpConfig {
		return v.ForwardedIpConfig
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementForwardedIpConfig, RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput]{OutputState: value.OutputState}
}

// The limit on requests per 5-minute period for a single originating IP address.
func (o RuleGroupRuleStatementRateBasedStatementOutput) Limit() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatement](o, func(v RuleGroupRuleStatementRateBasedStatement) int { return v.Limit })
}

// An optional nested statement that narrows the scope of the rate-based statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See Statement above for details. If `aggregateKeyType` is set to `CONSTANT`, this block is required.
func (o RuleGroupRuleStatementRateBasedStatementOutput) ScopeDownStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatement](o, func(v RuleGroupRuleStatementRateBasedStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatement {
		return v.ScopeDownStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementForwardedIpConfig struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName string `pulumi:"headerName"`
}

type RuleGroupRuleStatementRateBasedStatementForwardedIpConfigArgs struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior pulumix.Input[string] `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName pulumix.Input[string] `pulumi:"headerName"`
}

func (RuleGroupRuleStatementRateBasedStatementForwardedIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementForwardedIpConfig)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementForwardedIpConfigArgs) ToRuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput() RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementForwardedIpConfigArgs) ToRuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementForwardedIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementForwardedIpConfigArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementForwardedIpConfig)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput) ToRuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput() RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput) ToRuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementForwardedIpConfig] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementForwardedIpConfig]{
		OutputState: o.OutputState,
	}
}

// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput) FallbackBehavior() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementForwardedIpConfig](o, func(v RuleGroupRuleStatementRateBasedStatementForwardedIpConfig) string { return v.FallbackBehavior })
}

// The name of the HTTP header to use for the IP address.
func (o RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput) HeaderName() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementForwardedIpConfig](o, func(v RuleGroupRuleStatementRateBasedStatementForwardedIpConfig) string { return v.HeaderName })
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatement struct {
	// A logical rule statement used to combine other rule statements with AND logic. See AND Statement below for details.
	AndStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement `pulumi:"andStatement"`
	// A rule statement that defines a string match search for AWS WAF to apply to web requests. See Byte Match Statement below for details.
	ByteMatchStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement `pulumi:"byteMatchStatement"`
	// A rule statement used to identify web requests based on country of origin. See GEO Match Statement below for details.
	GeoMatchStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement `pulumi:"geoMatchStatement"`
	// A rule statement used to detect web requests coming from particular IP addresses or address ranges. See IP Set Reference Statement below for details.
	IpSetReferenceStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement `pulumi:"ipSetReferenceStatement"`
	// A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See Label Match Statement below for details.
	LabelMatchStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement `pulumi:"labelMatchStatement"`
	// A logical rule statement used to negate the results of another rule statement. See NOT Statement below for details.
	NotStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement `pulumi:"notStatement"`
	// A logical rule statement used to combine other rule statements with OR logic. See OR Statement below for details.
	OrStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement `pulumi:"orStatement"`
	// A rule statement used to search web request components for a match against a single regular expression. See Regex Match Statement below for details.
	RegexMatchStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement `pulumi:"regexMatchStatement"`
	// A rule statement used to search web request components for matches with regular expressions. See Regex Pattern Set Reference Statement below for details.
	RegexPatternSetReferenceStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement `pulumi:"regexPatternSetReferenceStatement"`
	// A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See Size Constraint Statement below for more details.
	SizeConstraintStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement `pulumi:"sizeConstraintStatement"`
	// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See SQL Injection Match Statement below for details.
	SqliMatchStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement `pulumi:"sqliMatchStatement"`
	// A rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See XSS Match Statement below for details.
	XssMatchStatement *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement `pulumi:"xssMatchStatement"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementArgs struct {
	// A logical rule statement used to combine other rule statements with AND logic. See AND Statement below for details.
	AndStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs] `pulumi:"andStatement"`
	// A rule statement that defines a string match search for AWS WAF to apply to web requests. See Byte Match Statement below for details.
	ByteMatchStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs] `pulumi:"byteMatchStatement"`
	// A rule statement used to identify web requests based on country of origin. See GEO Match Statement below for details.
	GeoMatchStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs] `pulumi:"geoMatchStatement"`
	// A rule statement used to detect web requests coming from particular IP addresses or address ranges. See IP Set Reference Statement below for details.
	IpSetReferenceStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs] `pulumi:"ipSetReferenceStatement"`
	// A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See Label Match Statement below for details.
	LabelMatchStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs] `pulumi:"labelMatchStatement"`
	// A logical rule statement used to negate the results of another rule statement. See NOT Statement below for details.
	NotStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs] `pulumi:"notStatement"`
	// A logical rule statement used to combine other rule statements with OR logic. See OR Statement below for details.
	OrStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs] `pulumi:"orStatement"`
	// A rule statement used to search web request components for a match against a single regular expression. See Regex Match Statement below for details.
	RegexMatchStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs] `pulumi:"regexMatchStatement"`
	// A rule statement used to search web request components for matches with regular expressions. See Regex Pattern Set Reference Statement below for details.
	RegexPatternSetReferenceStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs] `pulumi:"regexPatternSetReferenceStatement"`
	// A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See Size Constraint Statement below for more details.
	SizeConstraintStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs] `pulumi:"sizeConstraintStatement"`
	// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See SQL Injection Match Statement below for details.
	SqliMatchStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs] `pulumi:"sqliMatchStatement"`
	// A rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See XSS Match Statement below for details.
	XssMatchStatement pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs] `pulumi:"xssMatchStatement"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatement]{
		OutputState: o.OutputState,
	}
}

// A logical rule statement used to combine other rule statements with AND logic. See AND Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) AndStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement {
		return v.AndStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput]{OutputState: value.OutputState}
}

// A rule statement that defines a string match search for AWS WAF to apply to web requests. See Byte Match Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) ByteMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement {
		return v.ByteMatchStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput]{OutputState: value.OutputState}
}

// A rule statement used to identify web requests based on country of origin. See GEO Match Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) GeoMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement {
		return v.GeoMatchStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput]{OutputState: value.OutputState}
}

// A rule statement used to detect web requests coming from particular IP addresses or address ranges. See IP Set Reference Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) IpSetReferenceStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement {
		return v.IpSetReferenceStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput]{OutputState: value.OutputState}
}

// A rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See Label Match Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) LabelMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement {
		return v.LabelMatchStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput]{OutputState: value.OutputState}
}

// A logical rule statement used to negate the results of another rule statement. See NOT Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) NotStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement {
		return v.NotStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput]{OutputState: value.OutputState}
}

// A logical rule statement used to combine other rule statements with OR logic. See OR Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) OrStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement {
		return v.OrStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput]{OutputState: value.OutputState}
}

// A rule statement used to search web request components for a match against a single regular expression. See Regex Match Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) RegexMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement {
		return v.RegexMatchStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput]{OutputState: value.OutputState}
}

// A rule statement used to search web request components for matches with regular expressions. See Regex Pattern Set Reference Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) RegexPatternSetReferenceStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement {
		return v.RegexPatternSetReferenceStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput]{OutputState: value.OutputState}
}

// A rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See Size Constraint Statement below for more details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) SizeConstraintStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement {
		return v.SizeConstraintStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput]{OutputState: value.OutputState}
}

// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See SQL Injection Match Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) SqliMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement {
		return v.SqliMatchStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput]{OutputState: value.OutputState}
}

// A rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See XSS Match Statement below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput) XssMatchStatement() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement {
		return v.XssMatchStatement
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement struct {
	// The statements to combine.
	Statements []RuleGroupRuleStatement `pulumi:"statements"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*RuleGroupRuleStatementArgs] `pulumi:"statements"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput) Statements() pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatement) []RuleGroupRuleStatement {
		return v.Statements
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// The area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
	PositionalConstraint string `pulumi:"positionalConstraint"`
	// A string value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
	SearchString string `pulumi:"searchString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// The area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
	PositionalConstraint pulumix.Input[string] `pulumi:"positionalConstraint"`
	// A string value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
	SearchString pulumix.Input[string] `pulumi:"searchString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// The area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput) PositionalConstraint() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement) string {
		return v.PositionalConstraint
	})
}

// A string value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput) SearchString() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement) string {
		return v.SearchString
	})
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                        `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                        `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                            `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                            `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                         `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                             `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation) int {
		return v.Priority
	})
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation) string {
		return v.Type
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement struct {
	// An array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
	CountryCodes []string `pulumi:"countryCodes"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See Forwarded IP Config below for details.
	ForwardedIpConfig *RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig `pulumi:"forwardedIpConfig"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs struct {
	// An array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
	CountryCodes pulumix.Input[[]string] `pulumi:"countryCodes"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See Forwarded IP Config below for details.
	ForwardedIpConfig pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs] `pulumi:"forwardedIpConfig"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement]{
		OutputState: o.OutputState,
	}
}

// An array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput) CountryCodes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement) []string {
		return v.CountryCodes
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See Forwarded IP Config below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput) ForwardedIpConfig() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig, RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig {
		return v.ForwardedIpConfig
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig, RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName string `pulumi:"headerName"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior pulumix.Input[string] `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName pulumix.Input[string] `pulumi:"headerName"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig]{
		OutputState: o.OutputState,
	}
}

// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) FallbackBehavior() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig) string {
		return v.FallbackBehavior
	})
}

// The name of the HTTP header to use for the IP address.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) HeaderName() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfig) string {
		return v.HeaderName
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn string `pulumi:"arn"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See IPSet Forwarded IP Config below for more details.
	IpSetForwardedIpConfig *RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig `pulumi:"ipSetForwardedIpConfig"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See IPSet Forwarded IP Config below for more details.
	IpSetForwardedIpConfig pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs] `pulumi:"ipSetForwardedIpConfig"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the IP Set that this statement references.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement) string {
		return v.Arn
	})
}

// The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See IPSet Forwarded IP Config below for more details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput) IpSetForwardedIpConfig() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig, RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig {
		return v.IpSetForwardedIpConfig
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig, RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName string `pulumi:"headerName"`
	// The position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
	Position string `pulumi:"position"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs struct {
	// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior pulumix.Input[string] `pulumi:"fallbackBehavior"`
	// The name of the HTTP header to use for the IP address.
	HeaderName pulumix.Input[string] `pulumi:"headerName"`
	// The position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
	Position pulumix.Input[string] `pulumi:"position"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig]{
		OutputState: o.OutputState,
	}
}

// The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) FallbackBehavior() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig) string {
		return v.FallbackBehavior
	})
}

// The name of the HTTP header to use for the IP address.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) HeaderName() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig) string {
		return v.HeaderName
	})
}

// The position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) Position() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig) string {
		return v.Position
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement struct {
	// The string to match against.
	Key string `pulumi:"key"`
	// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
	Scope string `pulumi:"scope"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs struct {
	// The string to match against.
	Key pulumix.Input[string] `pulumi:"key"`
	// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
	Scope pulumix.Input[string] `pulumi:"scope"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The string to match against.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement) string {
		return v.Key
	})
}

// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput) Scope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement) string {
		return v.Scope
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement struct {
	// The statements to combine.
	Statements []RuleGroupRuleStatement `pulumi:"statements"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*RuleGroupRuleStatementArgs] `pulumi:"statements"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput) Statements() pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatement) []RuleGroupRuleStatement {
		return v.Statements
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement struct {
	// The statements to combine.
	Statements []RuleGroupRuleStatement `pulumi:"statements"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*RuleGroupRuleStatementArgs] `pulumi:"statements"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput) Statements() pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatement) []RuleGroupRuleStatement {
		return v.Statements
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatement, RuleGroupRuleStatementOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// The string representing the regular expression. Minimum of `1` and maximum of `512` characters.
	RegexString string `pulumi:"regexString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// The string representing the regular expression. Minimum of `1` and maximum of `512` characters.
	RegexString pulumix.Input[string] `pulumi:"regexString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// The string representing the regular expression. Minimum of `1` and maximum of `512` characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput) RegexString() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement) string {
		return v.RegexString
	})
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                         `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                         `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                             `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                             `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                          `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                              `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation) int {
		return v.Priority
	})
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformation) string {
		return v.Type
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement struct {
	// The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.
	Arn string `pulumi:"arn"`
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs struct {
	// The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement) string {
		return v.Arn
	})
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                                       `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                                       `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                                           `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                                           `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                                        `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                                            `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation) int {
		return v.Priority
	})
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation) string {
		return v.Type
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement struct {
	// The operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch `pulumi:"fieldToMatch"`
	// The size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.
	Size int `pulumi:"size"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs struct {
	// The operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.
	ComparisonOperator pulumix.Input[string] `pulumi:"comparisonOperator"`
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// The size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.
	Size pulumix.Input[int] `pulumi:"size"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement]{
		OutputState: o.OutputState,
	}
}

// The operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput) ComparisonOperator() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement) string {
		return v.ComparisonOperator
	})
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// The size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput) Size() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement) int {
		return v.Size
	})
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                             `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                             `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                                 `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                                 `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                              `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                                  `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation) int {
		return v.Priority
	})
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation) string {
		return v.Type
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                        `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                        `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                            `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                            `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                         `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                             `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation) int {
		return v.Priority
	})
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation) string {
		return v.Type
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies) []RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                       `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                       `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                           `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                           `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                        `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                            `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput() RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation) int {
		return v.Priority
	})
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation) string {
		return v.Type
	})
}

type RuleGroupRuleStatementRegexMatchStatement struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementRegexMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// The string representing the regular expression. Minimum of `1` and maximum of `512` characters.
	RegexString string `pulumi:"regexString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementRegexMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementRegexMatchStatementArgs struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// The string representing the regular expression. Minimum of `1` and maximum of `512` characters.
	RegexString pulumix.Input[string] `pulumi:"regexString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementRegexMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementRegexMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementArgs) ToRuleGroupRuleStatementRegexMatchStatementOutput() RuleGroupRuleStatementRegexMatchStatementOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementArgs) ToRuleGroupRuleStatementRegexMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementOutput) ToRuleGroupRuleStatementRegexMatchStatementOutput() RuleGroupRuleStatementRegexMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementOutput) ToRuleGroupRuleStatementRegexMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementRegexMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatch, RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatement](o, func(v RuleGroupRuleStatementRegexMatchStatement) *RuleGroupRuleStatementRegexMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatch, RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// The string representing the regular expression. Minimum of `1` and maximum of `512` characters.
func (o RuleGroupRuleStatementRegexMatchStatementOutput) RegexString() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatement](o, func(v RuleGroupRuleStatementRegexMatchStatement) string { return v.RegexString })
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementRegexMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementRegexMatchStatementTextTransformation, RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatement](o, func(v RuleGroupRuleStatementRegexMatchStatement) []RuleGroupRuleStatementRegexMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRegexMatchStatementTextTransformation, RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody, RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody, RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies, RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) []RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader, RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethod, RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatch) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchBody) *string { return v.OversizeHandling })
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies) []RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies) string { return v.MatchScope })
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookies) string { return v.OversizeHandling })
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                     `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                     `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                         `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                         `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader) RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader) string { return v.MatchScope })
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeader) string { return v.OversizeHandling })
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody) RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody) string { return v.MatchScope })
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                      `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                          `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeader) string { return v.Name })
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgument) string { return v.Name })
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexMatchStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementRegexMatchStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementRegexMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRegexMatchStatementTextTransformationOutput() RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementRegexMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementRegexMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementRegexMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexMatchStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRegexMatchStatementTextTransformationOutput() RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementRegexMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexMatchStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementRegexMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRegexMatchStatementTextTransformation) int { return v.Priority })
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementRegexMatchStatementTextTransformation) string { return v.Type })
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatement struct {
	// The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.
	Arn string `pulumi:"arn"`
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementArgs struct {
	// The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatement] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatement]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatement](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatement) string { return v.Arn })
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatement](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatement) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation, RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatement](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatement) []RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation, RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) []RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies) []RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                   `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                   `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                       `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                       `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                    `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                        `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationArgs) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput() RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput) ToRuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation) int {
		return v.Priority
	})
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation](o, func(v RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation) string {
		return v.Type
	})
}

type RuleGroupRuleStatementSizeConstraintStatement struct {
	// The operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementSizeConstraintStatementFieldToMatch `pulumi:"fieldToMatch"`
	// The size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.
	Size int `pulumi:"size"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementSizeConstraintStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementSizeConstraintStatementArgs struct {
	// The operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.
	ComparisonOperator pulumix.Input[string] `pulumi:"comparisonOperator"`
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// The size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.
	Size pulumix.Input[int] `pulumi:"size"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementSizeConstraintStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementSizeConstraintStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementArgs) ToRuleGroupRuleStatementSizeConstraintStatementOutput() RuleGroupRuleStatementSizeConstraintStatementOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementArgs) ToRuleGroupRuleStatementSizeConstraintStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementOutput) ToRuleGroupRuleStatementSizeConstraintStatementOutput() RuleGroupRuleStatementSizeConstraintStatementOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementOutput) ToRuleGroupRuleStatementSizeConstraintStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatement] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatement]{
		OutputState: o.OutputState,
	}
}

// The operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.
func (o RuleGroupRuleStatementSizeConstraintStatementOutput) ComparisonOperator() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatement](o, func(v RuleGroupRuleStatementSizeConstraintStatement) string { return v.ComparisonOperator })
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementSizeConstraintStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatement](o, func(v RuleGroupRuleStatementSizeConstraintStatement) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// The size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.
func (o RuleGroupRuleStatementSizeConstraintStatementOutput) Size() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatement](o, func(v RuleGroupRuleStatementSizeConstraintStatement) int { return v.Size })
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementSizeConstraintStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementSizeConstraintStatementTextTransformation, RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatement](o, func(v RuleGroupRuleStatementSizeConstraintStatement) []RuleGroupRuleStatementSizeConstraintStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementSizeConstraintStatementTextTransformation, RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) []RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatch](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatch) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies) []RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies) string { return v.MatchScope })
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                         `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                         `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                             `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                             `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader) string { return v.MatchScope })
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody) string { return v.MatchScope })
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                          `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                              `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader) string { return v.Name })
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSizeConstraintStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementSizeConstraintStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementSizeConstraintStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementSizeConstraintStatementTextTransformationArgs) ToRuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput() RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementSizeConstraintStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSizeConstraintStatementTextTransformationArgs) ToRuleGroupRuleStatementSizeConstraintStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementSizeConstraintStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSizeConstraintStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSizeConstraintStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput) ToRuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput() RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput) ToRuleGroupRuleStatementSizeConstraintStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementSizeConstraintStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementTextTransformation](o, func(v RuleGroupRuleStatementSizeConstraintStatementTextTransformation) int { return v.Priority })
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSizeConstraintStatementTextTransformation](o, func(v RuleGroupRuleStatementSizeConstraintStatementTextTransformation) string { return v.Type })
}

type RuleGroupRuleStatementSqliMatchStatement struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementSqliMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementSqliMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementSqliMatchStatementArgs struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementSqliMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementSqliMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementArgs) ToRuleGroupRuleStatementSqliMatchStatementOutput() RuleGroupRuleStatementSqliMatchStatementOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementArgs) ToRuleGroupRuleStatementSqliMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementOutput) ToRuleGroupRuleStatementSqliMatchStatementOutput() RuleGroupRuleStatementSqliMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementOutput) ToRuleGroupRuleStatementSqliMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementSqliMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatch, RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatement](o, func(v RuleGroupRuleStatementSqliMatchStatement) *RuleGroupRuleStatementSqliMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatch, RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementSqliMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementSqliMatchStatementTextTransformation, RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatement](o, func(v RuleGroupRuleStatementSqliMatchStatement) []RuleGroupRuleStatementSqliMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementSqliMatchStatementTextTransformation, RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody, RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody, RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies, RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies, RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader, RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) []RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader, RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod, RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod, RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatch) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody) *string { return v.OversizeHandling })
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies) []RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies) string { return v.MatchScope })
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookies) string { return v.OversizeHandling })
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                    `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                    `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                        `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                        `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader) RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader) string { return v.MatchScope })
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeader) string { return v.OversizeHandling })
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody) RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody) string { return v.MatchScope })
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                     `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                         `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader) string { return v.Name })
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument) string { return v.Name })
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementSqliMatchStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementSqliMatchStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementSqliMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementSqliMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementSqliMatchStatementTextTransformationOutput() RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementSqliMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementSqliMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementSqliMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementSqliMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementSqliMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementSqliMatchStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementSqliMatchStatementTextTransformationOutput() RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementSqliMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementSqliMatchStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementSqliMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementSqliMatchStatementTextTransformation) int { return v.Priority })
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementSqliMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementSqliMatchStatementTextTransformation) string { return v.Type })
}

type RuleGroupRuleStatementXssMatchStatement struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch *RuleGroupRuleStatementXssMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations []RuleGroupRuleStatementXssMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type RuleGroupRuleStatementXssMatchStatementArgs struct {
	// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
	FieldToMatch pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
	// At least one required.
	// See Text Transformation below for details.
	TextTransformations pulumix.Input[[]*RuleGroupRuleStatementXssMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (RuleGroupRuleStatementXssMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatement)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementArgs) ToRuleGroupRuleStatementXssMatchStatementOutput() RuleGroupRuleStatementXssMatchStatementOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementArgs) ToRuleGroupRuleStatementXssMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatement)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementOutput) ToRuleGroupRuleStatementXssMatchStatementOutput() RuleGroupRuleStatementXssMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementOutput) ToRuleGroupRuleStatementXssMatchStatementOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatement] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
func (o RuleGroupRuleStatementXssMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatch, RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatement](o, func(v RuleGroupRuleStatementXssMatchStatement) *RuleGroupRuleStatementXssMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatch, RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
// At least one required.
// See Text Transformation below for details.
func (o RuleGroupRuleStatementXssMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[RuleGroupRuleStatementXssMatchStatementTextTransformation, RuleGroupRuleStatementXssMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatement](o, func(v RuleGroupRuleStatementXssMatchStatement) []RuleGroupRuleStatementXssMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementXssMatchStatementTextTransformation, RuleGroupRuleStatementXssMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body *RuleGroupRuleStatementXssMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies *RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers []RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody *RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader *RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument *RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers.
	Body pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See Cookies below for details.
	Cookies pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See Headers below for details.
	Headers pulumix.Input[[]*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See JSON Body for details.
	JsonBody pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See Single Header below for details.
	SingleHeader pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See Single Query Argument below for details.
	SingleQueryArgument pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatch)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatch)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatch] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments, RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchBody, RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementXssMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchBody, RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See Cookies below for details.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies, RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies, RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See Headers below for details.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader, RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) []RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader, RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See JSON Body for details.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody, RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod, RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod, RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString, RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See Single Header below for details.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader, RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See Single Query Argument below for details.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument, RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatch](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatch) *RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath, RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments struct {
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchBody struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyArgs struct {
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchBody] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchBody](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchBody) *string { return v.OversizeHandling })
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies) []RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern, RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies) string { return v.MatchScope })
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchCookies) string { return v.OversizeHandling })
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                   `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                   `pulumi:"includedCookies"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                       `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                       `pulumi:"includedCookies"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern) *RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll, RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader) RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern, RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader) string { return v.MatchScope })
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchHeader) string { return v.OversizeHandling })
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern) *RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll, RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody) RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern, RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody) string { return v.MatchScope })
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBody) *string { return v.OversizeHandling })
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                    `pulumi:"includedPaths"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                        `pulumi:"includedPaths"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern) *RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll, RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod struct {
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodArgs struct {
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString struct {
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringArgs struct {
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader) string { return v.Name })
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// The name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// The name of the query header to inspect. This setting must be provided as lower case characters.
func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument](o, func(v RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument) string { return v.Name })
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath struct {
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathArgs struct {
}

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathArgs) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput() RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput) ToRuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type RuleGroupRuleStatementXssMatchStatementTextTransformation struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type RuleGroupRuleStatementXssMatchStatementTextTransformationArgs struct {
	// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (RuleGroupRuleStatementXssMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementTextTransformation)(nil)).Elem()
}

func (i RuleGroupRuleStatementXssMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementXssMatchStatementTextTransformationOutput() RuleGroupRuleStatementXssMatchStatementTextTransformationOutput {
	return i.ToRuleGroupRuleStatementXssMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupRuleStatementXssMatchStatementTextTransformationArgs) ToRuleGroupRuleStatementXssMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleStatementXssMatchStatementTextTransformationOutput)
}

func (i *RuleGroupRuleStatementXssMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleStatementXssMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleStatementXssMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleStatementXssMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleStatementXssMatchStatementTextTransformation)(nil)).Elem()
}

func (o RuleGroupRuleStatementXssMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementXssMatchStatementTextTransformationOutput() RuleGroupRuleStatementXssMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementTextTransformationOutput) ToRuleGroupRuleStatementXssMatchStatementTextTransformationOutputWithContext(ctx context.Context) RuleGroupRuleStatementXssMatchStatementTextTransformationOutput {
	return o
}

func (o RuleGroupRuleStatementXssMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleStatementXssMatchStatementTextTransformation] {
	return pulumix.Output[RuleGroupRuleStatementXssMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o RuleGroupRuleStatementXssMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementXssMatchStatementTextTransformation) int { return v.Priority })
}

// The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o RuleGroupRuleStatementXssMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleStatementXssMatchStatementTextTransformation](o, func(v RuleGroupRuleStatementXssMatchStatementTextTransformation) string { return v.Type })
}

type RuleGroupRuleVisibilityConfig struct {
	// A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics).
	CloudwatchMetricsEnabled bool `pulumi:"cloudwatchMetricsEnabled"`
	// A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example `All` and `Default_Action`.
	MetricName string `pulumi:"metricName"`
	// A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
	SampledRequestsEnabled bool `pulumi:"sampledRequestsEnabled"`
}

type RuleGroupRuleVisibilityConfigArgs struct {
	// A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics).
	CloudwatchMetricsEnabled pulumix.Input[bool] `pulumi:"cloudwatchMetricsEnabled"`
	// A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example `All` and `Default_Action`.
	MetricName pulumix.Input[string] `pulumi:"metricName"`
	// A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
	SampledRequestsEnabled pulumix.Input[bool] `pulumi:"sampledRequestsEnabled"`
}

func (RuleGroupRuleVisibilityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleVisibilityConfig)(nil)).Elem()
}

func (i RuleGroupRuleVisibilityConfigArgs) ToRuleGroupRuleVisibilityConfigOutput() RuleGroupRuleVisibilityConfigOutput {
	return i.ToRuleGroupRuleVisibilityConfigOutputWithContext(context.Background())
}

func (i RuleGroupRuleVisibilityConfigArgs) ToRuleGroupRuleVisibilityConfigOutputWithContext(ctx context.Context) RuleGroupRuleVisibilityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleVisibilityConfigOutput)
}

func (i *RuleGroupRuleVisibilityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRuleVisibilityConfigArgs] {
	return pulumix.Val(i)
}

type RuleGroupRuleVisibilityConfigOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleVisibilityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleVisibilityConfig)(nil)).Elem()
}

func (o RuleGroupRuleVisibilityConfigOutput) ToRuleGroupRuleVisibilityConfigOutput() RuleGroupRuleVisibilityConfigOutput {
	return o
}

func (o RuleGroupRuleVisibilityConfigOutput) ToRuleGroupRuleVisibilityConfigOutputWithContext(ctx context.Context) RuleGroupRuleVisibilityConfigOutput {
	return o
}

func (o RuleGroupRuleVisibilityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRuleVisibilityConfig] {
	return pulumix.Output[RuleGroupRuleVisibilityConfig]{
		OutputState: o.OutputState,
	}
}

// A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics).
func (o RuleGroupRuleVisibilityConfigOutput) CloudwatchMetricsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[RuleGroupRuleVisibilityConfig](o, func(v RuleGroupRuleVisibilityConfig) bool { return v.CloudwatchMetricsEnabled })
}

// A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example `All` and `Default_Action`.
func (o RuleGroupRuleVisibilityConfigOutput) MetricName() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupRuleVisibilityConfig](o, func(v RuleGroupRuleVisibilityConfig) string { return v.MetricName })
}

// A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
func (o RuleGroupRuleVisibilityConfigOutput) SampledRequestsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[RuleGroupRuleVisibilityConfig](o, func(v RuleGroupRuleVisibilityConfig) bool { return v.SampledRequestsEnabled })
}

type RuleGroupVisibilityConfig struct {
	// A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics).
	CloudwatchMetricsEnabled bool `pulumi:"cloudwatchMetricsEnabled"`
	// A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example `All` and `Default_Action`.
	MetricName string `pulumi:"metricName"`
	// A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
	SampledRequestsEnabled bool `pulumi:"sampledRequestsEnabled"`
}

type RuleGroupVisibilityConfigArgs struct {
	// A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics).
	CloudwatchMetricsEnabled pulumix.Input[bool] `pulumi:"cloudwatchMetricsEnabled"`
	// A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example `All` and `Default_Action`.
	MetricName pulumix.Input[string] `pulumi:"metricName"`
	// A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
	SampledRequestsEnabled pulumix.Input[bool] `pulumi:"sampledRequestsEnabled"`
}

func (RuleGroupVisibilityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupVisibilityConfig)(nil)).Elem()
}

func (i RuleGroupVisibilityConfigArgs) ToRuleGroupVisibilityConfigOutput() RuleGroupVisibilityConfigOutput {
	return i.ToRuleGroupVisibilityConfigOutputWithContext(context.Background())
}

func (i RuleGroupVisibilityConfigArgs) ToRuleGroupVisibilityConfigOutputWithContext(ctx context.Context) RuleGroupVisibilityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupVisibilityConfigOutput)
}

func (i *RuleGroupVisibilityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupVisibilityConfigArgs] {
	return pulumix.Val(i)
}

type RuleGroupVisibilityConfigOutput struct{ *pulumi.OutputState }

func (RuleGroupVisibilityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupVisibilityConfig)(nil)).Elem()
}

func (o RuleGroupVisibilityConfigOutput) ToRuleGroupVisibilityConfigOutput() RuleGroupVisibilityConfigOutput {
	return o
}

func (o RuleGroupVisibilityConfigOutput) ToRuleGroupVisibilityConfigOutputWithContext(ctx context.Context) RuleGroupVisibilityConfigOutput {
	return o
}

func (o RuleGroupVisibilityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupVisibilityConfig] {
	return pulumix.Output[RuleGroupVisibilityConfig]{
		OutputState: o.OutputState,
	}
}

// A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics).
func (o RuleGroupVisibilityConfigOutput) CloudwatchMetricsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[RuleGroupVisibilityConfig](o, func(v RuleGroupVisibilityConfig) bool { return v.CloudwatchMetricsEnabled })
}

// A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example `All` and `Default_Action`.
func (o RuleGroupVisibilityConfigOutput) MetricName() pulumix.Output[string] {
	return pulumix.Apply[RuleGroupVisibilityConfig](o, func(v RuleGroupVisibilityConfig) string { return v.MetricName })
}

// A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
func (o RuleGroupVisibilityConfigOutput) SampledRequestsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[RuleGroupVisibilityConfig](o, func(v RuleGroupVisibilityConfig) bool { return v.SampledRequestsEnabled })
}

type WebAclAssociationConfig struct {
	// Customizes the request body that your protected resource forward to AWS WAF for inspection. See `requestBody` below for details.
	RequestBodies []WebAclAssociationConfigRequestBody `pulumi:"requestBodies"`
}

type WebAclAssociationConfigArgs struct {
	// Customizes the request body that your protected resource forward to AWS WAF for inspection. See `requestBody` below for details.
	RequestBodies pulumix.Input[[]*WebAclAssociationConfigRequestBodyArgs] `pulumi:"requestBodies"`
}

func (WebAclAssociationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclAssociationConfig)(nil)).Elem()
}

func (i WebAclAssociationConfigArgs) ToWebAclAssociationConfigOutput() WebAclAssociationConfigOutput {
	return i.ToWebAclAssociationConfigOutputWithContext(context.Background())
}

func (i WebAclAssociationConfigArgs) ToWebAclAssociationConfigOutputWithContext(ctx context.Context) WebAclAssociationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclAssociationConfigOutput)
}

func (i *WebAclAssociationConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclAssociationConfigArgs] {
	return pulumix.Val(i)
}

type WebAclAssociationConfigOutput struct{ *pulumi.OutputState }

func (WebAclAssociationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclAssociationConfig)(nil)).Elem()
}

func (o WebAclAssociationConfigOutput) ToWebAclAssociationConfigOutput() WebAclAssociationConfigOutput {
	return o
}

func (o WebAclAssociationConfigOutput) ToWebAclAssociationConfigOutputWithContext(ctx context.Context) WebAclAssociationConfigOutput {
	return o
}

func (o WebAclAssociationConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclAssociationConfig] {
	return pulumix.Output[WebAclAssociationConfig]{
		OutputState: o.OutputState,
	}
}

// Customizes the request body that your protected resource forward to AWS WAF for inspection. See `requestBody` below for details.
func (o WebAclAssociationConfigOutput) RequestBodies() pulumix.GArrayOutput[WebAclAssociationConfigRequestBody, WebAclAssociationConfigRequestBodyOutput] {
	value := pulumix.Apply[WebAclAssociationConfig](o, func(v WebAclAssociationConfig) []WebAclAssociationConfigRequestBody { return v.RequestBodies })
	return pulumix.GArrayOutput[WebAclAssociationConfigRequestBody, WebAclAssociationConfigRequestBodyOutput]{OutputState: value.OutputState}
}

type WebAclAssociationConfigRequestBody struct {
	// Customizes the request body that your protected CloudFront distributions forward to AWS WAF for inspection. See `cloudfront` below for details.
	Cloudfronts []WebAclAssociationConfigRequestBodyCloudfront `pulumi:"cloudfronts"`
}

type WebAclAssociationConfigRequestBodyArgs struct {
	// Customizes the request body that your protected CloudFront distributions forward to AWS WAF for inspection. See `cloudfront` below for details.
	Cloudfronts pulumix.Input[[]*WebAclAssociationConfigRequestBodyCloudfrontArgs] `pulumi:"cloudfronts"`
}

func (WebAclAssociationConfigRequestBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclAssociationConfigRequestBody)(nil)).Elem()
}

func (i WebAclAssociationConfigRequestBodyArgs) ToWebAclAssociationConfigRequestBodyOutput() WebAclAssociationConfigRequestBodyOutput {
	return i.ToWebAclAssociationConfigRequestBodyOutputWithContext(context.Background())
}

func (i WebAclAssociationConfigRequestBodyArgs) ToWebAclAssociationConfigRequestBodyOutputWithContext(ctx context.Context) WebAclAssociationConfigRequestBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclAssociationConfigRequestBodyOutput)
}

func (i *WebAclAssociationConfigRequestBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclAssociationConfigRequestBodyArgs] {
	return pulumix.Val(i)
}

type WebAclAssociationConfigRequestBodyOutput struct{ *pulumi.OutputState }

func (WebAclAssociationConfigRequestBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclAssociationConfigRequestBody)(nil)).Elem()
}

func (o WebAclAssociationConfigRequestBodyOutput) ToWebAclAssociationConfigRequestBodyOutput() WebAclAssociationConfigRequestBodyOutput {
	return o
}

func (o WebAclAssociationConfigRequestBodyOutput) ToWebAclAssociationConfigRequestBodyOutputWithContext(ctx context.Context) WebAclAssociationConfigRequestBodyOutput {
	return o
}

func (o WebAclAssociationConfigRequestBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclAssociationConfigRequestBody] {
	return pulumix.Output[WebAclAssociationConfigRequestBody]{
		OutputState: o.OutputState,
	}
}

// Customizes the request body that your protected CloudFront distributions forward to AWS WAF for inspection. See `cloudfront` below for details.
func (o WebAclAssociationConfigRequestBodyOutput) Cloudfronts() pulumix.GArrayOutput[WebAclAssociationConfigRequestBodyCloudfront, WebAclAssociationConfigRequestBodyCloudfrontOutput] {
	value := pulumix.Apply[WebAclAssociationConfigRequestBody](o, func(v WebAclAssociationConfigRequestBody) []WebAclAssociationConfigRequestBodyCloudfront {
		return v.Cloudfronts
	})
	return pulumix.GArrayOutput[WebAclAssociationConfigRequestBodyCloudfront, WebAclAssociationConfigRequestBodyCloudfrontOutput]{OutputState: value.OutputState}
}

type WebAclAssociationConfigRequestBodyCloudfront struct {
	// Specifies the maximum size of the web request body component that an associated CloudFront distribution should send to AWS WAF for inspection. This applies to statements in the web ACL that inspect the body or JSON body. Valid values are `KB_16`, `KB_32`, `KB_48` and `KB_64`.
	DefaultSizeInspectionLimit string `pulumi:"defaultSizeInspectionLimit"`
}

type WebAclAssociationConfigRequestBodyCloudfrontArgs struct {
	// Specifies the maximum size of the web request body component that an associated CloudFront distribution should send to AWS WAF for inspection. This applies to statements in the web ACL that inspect the body or JSON body. Valid values are `KB_16`, `KB_32`, `KB_48` and `KB_64`.
	DefaultSizeInspectionLimit pulumix.Input[string] `pulumi:"defaultSizeInspectionLimit"`
}

func (WebAclAssociationConfigRequestBodyCloudfrontArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclAssociationConfigRequestBodyCloudfront)(nil)).Elem()
}

func (i WebAclAssociationConfigRequestBodyCloudfrontArgs) ToWebAclAssociationConfigRequestBodyCloudfrontOutput() WebAclAssociationConfigRequestBodyCloudfrontOutput {
	return i.ToWebAclAssociationConfigRequestBodyCloudfrontOutputWithContext(context.Background())
}

func (i WebAclAssociationConfigRequestBodyCloudfrontArgs) ToWebAclAssociationConfigRequestBodyCloudfrontOutputWithContext(ctx context.Context) WebAclAssociationConfigRequestBodyCloudfrontOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclAssociationConfigRequestBodyCloudfrontOutput)
}

func (i *WebAclAssociationConfigRequestBodyCloudfrontArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclAssociationConfigRequestBodyCloudfrontArgs] {
	return pulumix.Val(i)
}

type WebAclAssociationConfigRequestBodyCloudfrontOutput struct{ *pulumi.OutputState }

func (WebAclAssociationConfigRequestBodyCloudfrontOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclAssociationConfigRequestBodyCloudfront)(nil)).Elem()
}

func (o WebAclAssociationConfigRequestBodyCloudfrontOutput) ToWebAclAssociationConfigRequestBodyCloudfrontOutput() WebAclAssociationConfigRequestBodyCloudfrontOutput {
	return o
}

func (o WebAclAssociationConfigRequestBodyCloudfrontOutput) ToWebAclAssociationConfigRequestBodyCloudfrontOutputWithContext(ctx context.Context) WebAclAssociationConfigRequestBodyCloudfrontOutput {
	return o
}

func (o WebAclAssociationConfigRequestBodyCloudfrontOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclAssociationConfigRequestBodyCloudfront] {
	return pulumix.Output[WebAclAssociationConfigRequestBodyCloudfront]{
		OutputState: o.OutputState,
	}
}

// Specifies the maximum size of the web request body component that an associated CloudFront distribution should send to AWS WAF for inspection. This applies to statements in the web ACL that inspect the body or JSON body. Valid values are `KB_16`, `KB_32`, `KB_48` and `KB_64`.
func (o WebAclAssociationConfigRequestBodyCloudfrontOutput) DefaultSizeInspectionLimit() pulumix.Output[string] {
	return pulumix.Apply[WebAclAssociationConfigRequestBodyCloudfront](o, func(v WebAclAssociationConfigRequestBodyCloudfront) string { return v.DefaultSizeInspectionLimit })
}

type WebAclCaptchaConfig struct {
	// Defines custom immunity time. See `immunityTimeProperty` below for details.
	ImmunityTimeProperty *WebAclCaptchaConfigImmunityTimeProperty `pulumi:"immunityTimeProperty"`
}

type WebAclCaptchaConfigArgs struct {
	// Defines custom immunity time. See `immunityTimeProperty` below for details.
	ImmunityTimeProperty pulumix.Input[*WebAclCaptchaConfigImmunityTimePropertyArgs] `pulumi:"immunityTimeProperty"`
}

func (WebAclCaptchaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclCaptchaConfig)(nil)).Elem()
}

func (i WebAclCaptchaConfigArgs) ToWebAclCaptchaConfigOutput() WebAclCaptchaConfigOutput {
	return i.ToWebAclCaptchaConfigOutputWithContext(context.Background())
}

func (i WebAclCaptchaConfigArgs) ToWebAclCaptchaConfigOutputWithContext(ctx context.Context) WebAclCaptchaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclCaptchaConfigOutput)
}

func (i *WebAclCaptchaConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclCaptchaConfigArgs] {
	return pulumix.Val(i)
}

type WebAclCaptchaConfigOutput struct{ *pulumi.OutputState }

func (WebAclCaptchaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclCaptchaConfig)(nil)).Elem()
}

func (o WebAclCaptchaConfigOutput) ToWebAclCaptchaConfigOutput() WebAclCaptchaConfigOutput {
	return o
}

func (o WebAclCaptchaConfigOutput) ToWebAclCaptchaConfigOutputWithContext(ctx context.Context) WebAclCaptchaConfigOutput {
	return o
}

func (o WebAclCaptchaConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclCaptchaConfig] {
	return pulumix.Output[WebAclCaptchaConfig]{
		OutputState: o.OutputState,
	}
}

// Defines custom immunity time. See `immunityTimeProperty` below for details.
func (o WebAclCaptchaConfigOutput) ImmunityTimeProperty() pulumix.GPtrOutput[WebAclCaptchaConfigImmunityTimeProperty, WebAclCaptchaConfigImmunityTimePropertyOutput] {
	value := pulumix.Apply[WebAclCaptchaConfig](o, func(v WebAclCaptchaConfig) *WebAclCaptchaConfigImmunityTimeProperty { return v.ImmunityTimeProperty })
	return pulumix.GPtrOutput[WebAclCaptchaConfigImmunityTimeProperty, WebAclCaptchaConfigImmunityTimePropertyOutput]{OutputState: value.OutputState}
}

type WebAclCaptchaConfigImmunityTimeProperty struct {
	// The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by AWS WAF. The default setting is 300.
	ImmunityTime *int `pulumi:"immunityTime"`
}

type WebAclCaptchaConfigImmunityTimePropertyArgs struct {
	// The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by AWS WAF. The default setting is 300.
	ImmunityTime pulumix.Input[*int] `pulumi:"immunityTime"`
}

func (WebAclCaptchaConfigImmunityTimePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclCaptchaConfigImmunityTimeProperty)(nil)).Elem()
}

func (i WebAclCaptchaConfigImmunityTimePropertyArgs) ToWebAclCaptchaConfigImmunityTimePropertyOutput() WebAclCaptchaConfigImmunityTimePropertyOutput {
	return i.ToWebAclCaptchaConfigImmunityTimePropertyOutputWithContext(context.Background())
}

func (i WebAclCaptchaConfigImmunityTimePropertyArgs) ToWebAclCaptchaConfigImmunityTimePropertyOutputWithContext(ctx context.Context) WebAclCaptchaConfigImmunityTimePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclCaptchaConfigImmunityTimePropertyOutput)
}

func (i *WebAclCaptchaConfigImmunityTimePropertyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclCaptchaConfigImmunityTimePropertyArgs] {
	return pulumix.Val(i)
}

type WebAclCaptchaConfigImmunityTimePropertyOutput struct{ *pulumi.OutputState }

func (WebAclCaptchaConfigImmunityTimePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclCaptchaConfigImmunityTimeProperty)(nil)).Elem()
}

func (o WebAclCaptchaConfigImmunityTimePropertyOutput) ToWebAclCaptchaConfigImmunityTimePropertyOutput() WebAclCaptchaConfigImmunityTimePropertyOutput {
	return o
}

func (o WebAclCaptchaConfigImmunityTimePropertyOutput) ToWebAclCaptchaConfigImmunityTimePropertyOutputWithContext(ctx context.Context) WebAclCaptchaConfigImmunityTimePropertyOutput {
	return o
}

func (o WebAclCaptchaConfigImmunityTimePropertyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclCaptchaConfigImmunityTimeProperty] {
	return pulumix.Output[WebAclCaptchaConfigImmunityTimeProperty]{
		OutputState: o.OutputState,
	}
}

// The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by AWS WAF. The default setting is 300.
func (o WebAclCaptchaConfigImmunityTimePropertyOutput) ImmunityTime() pulumix.Output[*int] {
	return pulumix.Apply[WebAclCaptchaConfigImmunityTimeProperty](o, func(v WebAclCaptchaConfigImmunityTimeProperty) *int { return v.ImmunityTime })
}

type WebAclCustomResponseBody struct {
	// Payload of the custom response.
	Content string `pulumi:"content"`
	// Type of content in the payload that you are defining in the `content` argument. Valid values are `TEXT_PLAIN`, `TEXT_HTML`, or `APPLICATION_JSON`.
	ContentType string `pulumi:"contentType"`
	// Unique key identifying the custom response body. This is referenced by the `customResponseBodyKey` argument in the `customResponse` block.
	Key string `pulumi:"key"`
}

type WebAclCustomResponseBodyArgs struct {
	// Payload of the custom response.
	Content pulumix.Input[string] `pulumi:"content"`
	// Type of content in the payload that you are defining in the `content` argument. Valid values are `TEXT_PLAIN`, `TEXT_HTML`, or `APPLICATION_JSON`.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// Unique key identifying the custom response body. This is referenced by the `customResponseBodyKey` argument in the `customResponse` block.
	Key pulumix.Input[string] `pulumi:"key"`
}

func (WebAclCustomResponseBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclCustomResponseBody)(nil)).Elem()
}

func (i WebAclCustomResponseBodyArgs) ToWebAclCustomResponseBodyOutput() WebAclCustomResponseBodyOutput {
	return i.ToWebAclCustomResponseBodyOutputWithContext(context.Background())
}

func (i WebAclCustomResponseBodyArgs) ToWebAclCustomResponseBodyOutputWithContext(ctx context.Context) WebAclCustomResponseBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclCustomResponseBodyOutput)
}

func (i *WebAclCustomResponseBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclCustomResponseBodyArgs] {
	return pulumix.Val(i)
}

type WebAclCustomResponseBodyOutput struct{ *pulumi.OutputState }

func (WebAclCustomResponseBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclCustomResponseBody)(nil)).Elem()
}

func (o WebAclCustomResponseBodyOutput) ToWebAclCustomResponseBodyOutput() WebAclCustomResponseBodyOutput {
	return o
}

func (o WebAclCustomResponseBodyOutput) ToWebAclCustomResponseBodyOutputWithContext(ctx context.Context) WebAclCustomResponseBodyOutput {
	return o
}

func (o WebAclCustomResponseBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclCustomResponseBody] {
	return pulumix.Output[WebAclCustomResponseBody]{
		OutputState: o.OutputState,
	}
}

// Payload of the custom response.
func (o WebAclCustomResponseBodyOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[WebAclCustomResponseBody](o, func(v WebAclCustomResponseBody) string { return v.Content })
}

// Type of content in the payload that you are defining in the `content` argument. Valid values are `TEXT_PLAIN`, `TEXT_HTML`, or `APPLICATION_JSON`.
func (o WebAclCustomResponseBodyOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[WebAclCustomResponseBody](o, func(v WebAclCustomResponseBody) string { return v.ContentType })
}

// Unique key identifying the custom response body. This is referenced by the `customResponseBodyKey` argument in the `customResponse` block.
func (o WebAclCustomResponseBodyOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[WebAclCustomResponseBody](o, func(v WebAclCustomResponseBody) string { return v.Key })
}

type WebAclDefaultAction struct {
	// Specifies that AWS WAF should allow requests by default. See `allow` below for details.
	Allow *WebAclDefaultActionAllow `pulumi:"allow"`
	// Specifies that AWS WAF should block requests by default. See `block` below for details.
	Block *WebAclDefaultActionBlock `pulumi:"block"`
}

type WebAclDefaultActionArgs struct {
	// Specifies that AWS WAF should allow requests by default. See `allow` below for details.
	Allow pulumix.Input[*WebAclDefaultActionAllowArgs] `pulumi:"allow"`
	// Specifies that AWS WAF should block requests by default. See `block` below for details.
	Block pulumix.Input[*WebAclDefaultActionBlockArgs] `pulumi:"block"`
}

func (WebAclDefaultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultAction)(nil)).Elem()
}

func (i WebAclDefaultActionArgs) ToWebAclDefaultActionOutput() WebAclDefaultActionOutput {
	return i.ToWebAclDefaultActionOutputWithContext(context.Background())
}

func (i WebAclDefaultActionArgs) ToWebAclDefaultActionOutputWithContext(ctx context.Context) WebAclDefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionOutput)
}

func (i *WebAclDefaultActionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultActionArgs] {
	return pulumix.Val(i)
}

type WebAclDefaultActionOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultAction)(nil)).Elem()
}

func (o WebAclDefaultActionOutput) ToWebAclDefaultActionOutput() WebAclDefaultActionOutput {
	return o
}

func (o WebAclDefaultActionOutput) ToWebAclDefaultActionOutputWithContext(ctx context.Context) WebAclDefaultActionOutput {
	return o
}

func (o WebAclDefaultActionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultAction] {
	return pulumix.Output[WebAclDefaultAction]{
		OutputState: o.OutputState,
	}
}

// Specifies that AWS WAF should allow requests by default. See `allow` below for details.
func (o WebAclDefaultActionOutput) Allow() pulumix.GPtrOutput[WebAclDefaultActionAllow, WebAclDefaultActionAllowOutput] {
	value := pulumix.Apply[WebAclDefaultAction](o, func(v WebAclDefaultAction) *WebAclDefaultActionAllow { return v.Allow })
	return pulumix.GPtrOutput[WebAclDefaultActionAllow, WebAclDefaultActionAllowOutput]{OutputState: value.OutputState}
}

// Specifies that AWS WAF should block requests by default. See `block` below for details.
func (o WebAclDefaultActionOutput) Block() pulumix.GPtrOutput[WebAclDefaultActionBlock, WebAclDefaultActionBlockOutput] {
	value := pulumix.Apply[WebAclDefaultAction](o, func(v WebAclDefaultAction) *WebAclDefaultActionBlock { return v.Block })
	return pulumix.GPtrOutput[WebAclDefaultActionBlock, WebAclDefaultActionBlockOutput]{OutputState: value.OutputState}
}

type WebAclDefaultActionAllow struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling *WebAclDefaultActionAllowCustomRequestHandling `pulumi:"customRequestHandling"`
}

type WebAclDefaultActionAllowArgs struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling pulumix.Input[*WebAclDefaultActionAllowCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (WebAclDefaultActionAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionAllow)(nil)).Elem()
}

func (i WebAclDefaultActionAllowArgs) ToWebAclDefaultActionAllowOutput() WebAclDefaultActionAllowOutput {
	return i.ToWebAclDefaultActionAllowOutputWithContext(context.Background())
}

func (i WebAclDefaultActionAllowArgs) ToWebAclDefaultActionAllowOutputWithContext(ctx context.Context) WebAclDefaultActionAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionAllowOutput)
}

func (i *WebAclDefaultActionAllowArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultActionAllowArgs] {
	return pulumix.Val(i)
}

type WebAclDefaultActionAllowOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionAllow)(nil)).Elem()
}

func (o WebAclDefaultActionAllowOutput) ToWebAclDefaultActionAllowOutput() WebAclDefaultActionAllowOutput {
	return o
}

func (o WebAclDefaultActionAllowOutput) ToWebAclDefaultActionAllowOutputWithContext(ctx context.Context) WebAclDefaultActionAllowOutput {
	return o
}

func (o WebAclDefaultActionAllowOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultActionAllow] {
	return pulumix.Output[WebAclDefaultActionAllow]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See `customRequestHandling` below for details.
func (o WebAclDefaultActionAllowOutput) CustomRequestHandling() pulumix.GPtrOutput[WebAclDefaultActionAllowCustomRequestHandling, WebAclDefaultActionAllowCustomRequestHandlingOutput] {
	value := pulumix.Apply[WebAclDefaultActionAllow](o, func(v WebAclDefaultActionAllow) *WebAclDefaultActionAllowCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[WebAclDefaultActionAllowCustomRequestHandling, WebAclDefaultActionAllowCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type WebAclDefaultActionAllowCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders []WebAclDefaultActionAllowCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type WebAclDefaultActionAllowCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders pulumix.Input[[]*WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (WebAclDefaultActionAllowCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionAllowCustomRequestHandling)(nil)).Elem()
}

func (i WebAclDefaultActionAllowCustomRequestHandlingArgs) ToWebAclDefaultActionAllowCustomRequestHandlingOutput() WebAclDefaultActionAllowCustomRequestHandlingOutput {
	return i.ToWebAclDefaultActionAllowCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebAclDefaultActionAllowCustomRequestHandlingArgs) ToWebAclDefaultActionAllowCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclDefaultActionAllowCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionAllowCustomRequestHandlingOutput)
}

func (i *WebAclDefaultActionAllowCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultActionAllowCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type WebAclDefaultActionAllowCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionAllowCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionAllowCustomRequestHandling)(nil)).Elem()
}

func (o WebAclDefaultActionAllowCustomRequestHandlingOutput) ToWebAclDefaultActionAllowCustomRequestHandlingOutput() WebAclDefaultActionAllowCustomRequestHandlingOutput {
	return o
}

func (o WebAclDefaultActionAllowCustomRequestHandlingOutput) ToWebAclDefaultActionAllowCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclDefaultActionAllowCustomRequestHandlingOutput {
	return o
}

func (o WebAclDefaultActionAllowCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultActionAllowCustomRequestHandling] {
	return pulumix.Output[WebAclDefaultActionAllowCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
func (o WebAclDefaultActionAllowCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[WebAclDefaultActionAllowCustomRequestHandlingInsertHeader, WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[WebAclDefaultActionAllowCustomRequestHandling](o, func(v WebAclDefaultActionAllowCustomRequestHandling) []WebAclDefaultActionAllowCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[WebAclDefaultActionAllowCustomRequestHandlingInsertHeader, WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type WebAclDefaultActionAllowCustomRequestHandlingInsertHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionAllowCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderArgs) ToWebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput() WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput {
	return i.ToWebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderArgs) ToWebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput)
}

func (i *WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionAllowCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput) ToWebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput() WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput) ToWebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultActionAllowCustomRequestHandlingInsertHeader] {
	return pulumix.Output[WebAclDefaultActionAllowCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclDefaultActionAllowCustomRequestHandlingInsertHeader](o, func(v WebAclDefaultActionAllowCustomRequestHandlingInsertHeader) string { return v.Name })
}

// Value of the custom header.
func (o WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclDefaultActionAllowCustomRequestHandlingInsertHeader](o, func(v WebAclDefaultActionAllowCustomRequestHandlingInsertHeader) string { return v.Value })
}

type WebAclDefaultActionBlock struct {
	// Defines a custom response for the web request. See `customResponse` below for details.
	CustomResponse *WebAclDefaultActionBlockCustomResponse `pulumi:"customResponse"`
}

type WebAclDefaultActionBlockArgs struct {
	// Defines a custom response for the web request. See `customResponse` below for details.
	CustomResponse pulumix.Input[*WebAclDefaultActionBlockCustomResponseArgs] `pulumi:"customResponse"`
}

func (WebAclDefaultActionBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionBlock)(nil)).Elem()
}

func (i WebAclDefaultActionBlockArgs) ToWebAclDefaultActionBlockOutput() WebAclDefaultActionBlockOutput {
	return i.ToWebAclDefaultActionBlockOutputWithContext(context.Background())
}

func (i WebAclDefaultActionBlockArgs) ToWebAclDefaultActionBlockOutputWithContext(ctx context.Context) WebAclDefaultActionBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionBlockOutput)
}

func (i *WebAclDefaultActionBlockArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultActionBlockArgs] {
	return pulumix.Val(i)
}

type WebAclDefaultActionBlockOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionBlock)(nil)).Elem()
}

func (o WebAclDefaultActionBlockOutput) ToWebAclDefaultActionBlockOutput() WebAclDefaultActionBlockOutput {
	return o
}

func (o WebAclDefaultActionBlockOutput) ToWebAclDefaultActionBlockOutputWithContext(ctx context.Context) WebAclDefaultActionBlockOutput {
	return o
}

func (o WebAclDefaultActionBlockOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultActionBlock] {
	return pulumix.Output[WebAclDefaultActionBlock]{
		OutputState: o.OutputState,
	}
}

// Defines a custom response for the web request. See `customResponse` below for details.
func (o WebAclDefaultActionBlockOutput) CustomResponse() pulumix.GPtrOutput[WebAclDefaultActionBlockCustomResponse, WebAclDefaultActionBlockCustomResponseOutput] {
	value := pulumix.Apply[WebAclDefaultActionBlock](o, func(v WebAclDefaultActionBlock) *WebAclDefaultActionBlockCustomResponse { return v.CustomResponse })
	return pulumix.GPtrOutput[WebAclDefaultActionBlockCustomResponse, WebAclDefaultActionBlockCustomResponseOutput]{OutputState: value.OutputState}
}

type WebAclDefaultActionBlockCustomResponse struct {
	// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
	CustomResponseBodyKey *string `pulumi:"customResponseBodyKey"`
	// The HTTP status code to return to the client.
	ResponseCode int `pulumi:"responseCode"`
	// The `responseHeader` blocks used to define the HTTP response headers added to the response. See `responseHeader` below for details.
	ResponseHeaders []WebAclDefaultActionBlockCustomResponseResponseHeader `pulumi:"responseHeaders"`
}

type WebAclDefaultActionBlockCustomResponseArgs struct {
	// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
	CustomResponseBodyKey pulumix.Input[*string] `pulumi:"customResponseBodyKey"`
	// The HTTP status code to return to the client.
	ResponseCode pulumix.Input[int] `pulumi:"responseCode"`
	// The `responseHeader` blocks used to define the HTTP response headers added to the response. See `responseHeader` below for details.
	ResponseHeaders pulumix.Input[[]*WebAclDefaultActionBlockCustomResponseResponseHeaderArgs] `pulumi:"responseHeaders"`
}

func (WebAclDefaultActionBlockCustomResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionBlockCustomResponse)(nil)).Elem()
}

func (i WebAclDefaultActionBlockCustomResponseArgs) ToWebAclDefaultActionBlockCustomResponseOutput() WebAclDefaultActionBlockCustomResponseOutput {
	return i.ToWebAclDefaultActionBlockCustomResponseOutputWithContext(context.Background())
}

func (i WebAclDefaultActionBlockCustomResponseArgs) ToWebAclDefaultActionBlockCustomResponseOutputWithContext(ctx context.Context) WebAclDefaultActionBlockCustomResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionBlockCustomResponseOutput)
}

func (i *WebAclDefaultActionBlockCustomResponseArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultActionBlockCustomResponseArgs] {
	return pulumix.Val(i)
}

type WebAclDefaultActionBlockCustomResponseOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionBlockCustomResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionBlockCustomResponse)(nil)).Elem()
}

func (o WebAclDefaultActionBlockCustomResponseOutput) ToWebAclDefaultActionBlockCustomResponseOutput() WebAclDefaultActionBlockCustomResponseOutput {
	return o
}

func (o WebAclDefaultActionBlockCustomResponseOutput) ToWebAclDefaultActionBlockCustomResponseOutputWithContext(ctx context.Context) WebAclDefaultActionBlockCustomResponseOutput {
	return o
}

func (o WebAclDefaultActionBlockCustomResponseOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultActionBlockCustomResponse] {
	return pulumix.Output[WebAclDefaultActionBlockCustomResponse]{
		OutputState: o.OutputState,
	}
}

// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
func (o WebAclDefaultActionBlockCustomResponseOutput) CustomResponseBodyKey() pulumix.Output[*string] {
	return pulumix.Apply[WebAclDefaultActionBlockCustomResponse](o, func(v WebAclDefaultActionBlockCustomResponse) *string { return v.CustomResponseBodyKey })
}

// The HTTP status code to return to the client.
func (o WebAclDefaultActionBlockCustomResponseOutput) ResponseCode() pulumix.Output[int] {
	return pulumix.Apply[WebAclDefaultActionBlockCustomResponse](o, func(v WebAclDefaultActionBlockCustomResponse) int { return v.ResponseCode })
}

// The `responseHeader` blocks used to define the HTTP response headers added to the response. See `responseHeader` below for details.
func (o WebAclDefaultActionBlockCustomResponseOutput) ResponseHeaders() pulumix.GArrayOutput[WebAclDefaultActionBlockCustomResponseResponseHeader, WebAclDefaultActionBlockCustomResponseResponseHeaderOutput] {
	value := pulumix.Apply[WebAclDefaultActionBlockCustomResponse](o, func(v WebAclDefaultActionBlockCustomResponse) []WebAclDefaultActionBlockCustomResponseResponseHeader {
		return v.ResponseHeaders
	})
	return pulumix.GArrayOutput[WebAclDefaultActionBlockCustomResponseResponseHeader, WebAclDefaultActionBlockCustomResponseResponseHeaderOutput]{OutputState: value.OutputState}
}

type WebAclDefaultActionBlockCustomResponseResponseHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclDefaultActionBlockCustomResponseResponseHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclDefaultActionBlockCustomResponseResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionBlockCustomResponseResponseHeader)(nil)).Elem()
}

func (i WebAclDefaultActionBlockCustomResponseResponseHeaderArgs) ToWebAclDefaultActionBlockCustomResponseResponseHeaderOutput() WebAclDefaultActionBlockCustomResponseResponseHeaderOutput {
	return i.ToWebAclDefaultActionBlockCustomResponseResponseHeaderOutputWithContext(context.Background())
}

func (i WebAclDefaultActionBlockCustomResponseResponseHeaderArgs) ToWebAclDefaultActionBlockCustomResponseResponseHeaderOutputWithContext(ctx context.Context) WebAclDefaultActionBlockCustomResponseResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionBlockCustomResponseResponseHeaderOutput)
}

func (i *WebAclDefaultActionBlockCustomResponseResponseHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultActionBlockCustomResponseResponseHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclDefaultActionBlockCustomResponseResponseHeaderOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionBlockCustomResponseResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultActionBlockCustomResponseResponseHeader)(nil)).Elem()
}

func (o WebAclDefaultActionBlockCustomResponseResponseHeaderOutput) ToWebAclDefaultActionBlockCustomResponseResponseHeaderOutput() WebAclDefaultActionBlockCustomResponseResponseHeaderOutput {
	return o
}

func (o WebAclDefaultActionBlockCustomResponseResponseHeaderOutput) ToWebAclDefaultActionBlockCustomResponseResponseHeaderOutputWithContext(ctx context.Context) WebAclDefaultActionBlockCustomResponseResponseHeaderOutput {
	return o
}

func (o WebAclDefaultActionBlockCustomResponseResponseHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultActionBlockCustomResponseResponseHeader] {
	return pulumix.Output[WebAclDefaultActionBlockCustomResponseResponseHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclDefaultActionBlockCustomResponseResponseHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclDefaultActionBlockCustomResponseResponseHeader](o, func(v WebAclDefaultActionBlockCustomResponseResponseHeader) string { return v.Name })
}

// Value of the custom header.
func (o WebAclDefaultActionBlockCustomResponseResponseHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclDefaultActionBlockCustomResponseResponseHeader](o, func(v WebAclDefaultActionBlockCustomResponseResponseHeader) string { return v.Value })
}

type WebAclLoggingConfigurationLoggingFilter struct {
	// Default handling for logs that don't match any of the specified filtering conditions. Valid values for `defaultBehavior` are `KEEP` or `DROP`.
	DefaultBehavior string `pulumi:"defaultBehavior"`
	// Filter(s) that you want to apply to the logs. See Filter below for more details.
	Filters []WebAclLoggingConfigurationLoggingFilterFilter `pulumi:"filters"`
}

type WebAclLoggingConfigurationLoggingFilterArgs struct {
	// Default handling for logs that don't match any of the specified filtering conditions. Valid values for `defaultBehavior` are `KEEP` or `DROP`.
	DefaultBehavior pulumix.Input[string] `pulumi:"defaultBehavior"`
	// Filter(s) that you want to apply to the logs. See Filter below for more details.
	Filters pulumix.Input[[]*WebAclLoggingConfigurationLoggingFilterFilterArgs] `pulumi:"filters"`
}

func (WebAclLoggingConfigurationLoggingFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilter)(nil)).Elem()
}

func (i WebAclLoggingConfigurationLoggingFilterArgs) ToWebAclLoggingConfigurationLoggingFilterOutput() WebAclLoggingConfigurationLoggingFilterOutput {
	return i.ToWebAclLoggingConfigurationLoggingFilterOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationLoggingFilterArgs) ToWebAclLoggingConfigurationLoggingFilterOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationLoggingFilterOutput)
}

func (i *WebAclLoggingConfigurationLoggingFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationLoggingFilterArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationLoggingFilterOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationLoggingFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilter)(nil)).Elem()
}

func (o WebAclLoggingConfigurationLoggingFilterOutput) ToWebAclLoggingConfigurationLoggingFilterOutput() WebAclLoggingConfigurationLoggingFilterOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterOutput) ToWebAclLoggingConfigurationLoggingFilterOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationLoggingFilter] {
	return pulumix.Output[WebAclLoggingConfigurationLoggingFilter]{
		OutputState: o.OutputState,
	}
}

// Default handling for logs that don't match any of the specified filtering conditions. Valid values for `defaultBehavior` are `KEEP` or `DROP`.
func (o WebAclLoggingConfigurationLoggingFilterOutput) DefaultBehavior() pulumix.Output[string] {
	return pulumix.Apply[WebAclLoggingConfigurationLoggingFilter](o, func(v WebAclLoggingConfigurationLoggingFilter) string { return v.DefaultBehavior })
}

// Filter(s) that you want to apply to the logs. See Filter below for more details.
func (o WebAclLoggingConfigurationLoggingFilterOutput) Filters() pulumix.GArrayOutput[WebAclLoggingConfigurationLoggingFilterFilter, WebAclLoggingConfigurationLoggingFilterFilterOutput] {
	value := pulumix.Apply[WebAclLoggingConfigurationLoggingFilter](o, func(v WebAclLoggingConfigurationLoggingFilter) []WebAclLoggingConfigurationLoggingFilterFilter {
		return v.Filters
	})
	return pulumix.GArrayOutput[WebAclLoggingConfigurationLoggingFilterFilter, WebAclLoggingConfigurationLoggingFilterFilterOutput]{OutputState: value.OutputState}
}

type WebAclLoggingConfigurationLoggingFilterFilter struct {
	// Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for `behavior` are `KEEP` or `DROP`.
	Behavior string `pulumi:"behavior"`
	// Match condition(s) for the filter. See Condition below for more details.
	Conditions []WebAclLoggingConfigurationLoggingFilterFilterCondition `pulumi:"conditions"`
	// Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for `requirement` are `MEETS_ALL` or `MEETS_ANY`.
	Requirement string `pulumi:"requirement"`
}

type WebAclLoggingConfigurationLoggingFilterFilterArgs struct {
	// Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for `behavior` are `KEEP` or `DROP`.
	Behavior pulumix.Input[string] `pulumi:"behavior"`
	// Match condition(s) for the filter. See Condition below for more details.
	Conditions pulumix.Input[[]*WebAclLoggingConfigurationLoggingFilterFilterConditionArgs] `pulumi:"conditions"`
	// Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for `requirement` are `MEETS_ALL` or `MEETS_ANY`.
	Requirement pulumix.Input[string] `pulumi:"requirement"`
}

func (WebAclLoggingConfigurationLoggingFilterFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilterFilter)(nil)).Elem()
}

func (i WebAclLoggingConfigurationLoggingFilterFilterArgs) ToWebAclLoggingConfigurationLoggingFilterFilterOutput() WebAclLoggingConfigurationLoggingFilterFilterOutput {
	return i.ToWebAclLoggingConfigurationLoggingFilterFilterOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationLoggingFilterFilterArgs) ToWebAclLoggingConfigurationLoggingFilterFilterOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationLoggingFilterFilterOutput)
}

func (i *WebAclLoggingConfigurationLoggingFilterFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationLoggingFilterFilterArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationLoggingFilterFilterOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationLoggingFilterFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilterFilter)(nil)).Elem()
}

func (o WebAclLoggingConfigurationLoggingFilterFilterOutput) ToWebAclLoggingConfigurationLoggingFilterFilterOutput() WebAclLoggingConfigurationLoggingFilterFilterOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterFilterOutput) ToWebAclLoggingConfigurationLoggingFilterFilterOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterFilterOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterFilterOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationLoggingFilterFilter] {
	return pulumix.Output[WebAclLoggingConfigurationLoggingFilterFilter]{
		OutputState: o.OutputState,
	}
}

// Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for `behavior` are `KEEP` or `DROP`.
func (o WebAclLoggingConfigurationLoggingFilterFilterOutput) Behavior() pulumix.Output[string] {
	return pulumix.Apply[WebAclLoggingConfigurationLoggingFilterFilter](o, func(v WebAclLoggingConfigurationLoggingFilterFilter) string { return v.Behavior })
}

// Match condition(s) for the filter. See Condition below for more details.
func (o WebAclLoggingConfigurationLoggingFilterFilterOutput) Conditions() pulumix.GArrayOutput[WebAclLoggingConfigurationLoggingFilterFilterCondition, WebAclLoggingConfigurationLoggingFilterFilterConditionOutput] {
	value := pulumix.Apply[WebAclLoggingConfigurationLoggingFilterFilter](o, func(v WebAclLoggingConfigurationLoggingFilterFilter) []WebAclLoggingConfigurationLoggingFilterFilterCondition {
		return v.Conditions
	})
	return pulumix.GArrayOutput[WebAclLoggingConfigurationLoggingFilterFilterCondition, WebAclLoggingConfigurationLoggingFilterFilterConditionOutput]{OutputState: value.OutputState}
}

// Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for `requirement` are `MEETS_ALL` or `MEETS_ANY`.
func (o WebAclLoggingConfigurationLoggingFilterFilterOutput) Requirement() pulumix.Output[string] {
	return pulumix.Apply[WebAclLoggingConfigurationLoggingFilterFilter](o, func(v WebAclLoggingConfigurationLoggingFilterFilter) string { return v.Requirement })
}

type WebAclLoggingConfigurationLoggingFilterFilterCondition struct {
	// Configuration for a single action condition. See Action Condition below for more details.
	ActionCondition *WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition `pulumi:"actionCondition"`
	// Condition for a single label name. See Label Name Condition below for more details.
	LabelNameCondition *WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition `pulumi:"labelNameCondition"`
}

type WebAclLoggingConfigurationLoggingFilterFilterConditionArgs struct {
	// Configuration for a single action condition. See Action Condition below for more details.
	ActionCondition pulumix.Input[*WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionArgs] `pulumi:"actionCondition"`
	// Condition for a single label name. See Label Name Condition below for more details.
	LabelNameCondition pulumix.Input[*WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionArgs] `pulumi:"labelNameCondition"`
}

func (WebAclLoggingConfigurationLoggingFilterFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilterFilterCondition)(nil)).Elem()
}

func (i WebAclLoggingConfigurationLoggingFilterFilterConditionArgs) ToWebAclLoggingConfigurationLoggingFilterFilterConditionOutput() WebAclLoggingConfigurationLoggingFilterFilterConditionOutput {
	return i.ToWebAclLoggingConfigurationLoggingFilterFilterConditionOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationLoggingFilterFilterConditionArgs) ToWebAclLoggingConfigurationLoggingFilterFilterConditionOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationLoggingFilterFilterConditionOutput)
}

func (i *WebAclLoggingConfigurationLoggingFilterFilterConditionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationLoggingFilterFilterConditionArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationLoggingFilterFilterConditionOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationLoggingFilterFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilterFilterCondition)(nil)).Elem()
}

func (o WebAclLoggingConfigurationLoggingFilterFilterConditionOutput) ToWebAclLoggingConfigurationLoggingFilterFilterConditionOutput() WebAclLoggingConfigurationLoggingFilterFilterConditionOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterFilterConditionOutput) ToWebAclLoggingConfigurationLoggingFilterFilterConditionOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterFilterConditionOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterFilterConditionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationLoggingFilterFilterCondition] {
	return pulumix.Output[WebAclLoggingConfigurationLoggingFilterFilterCondition]{
		OutputState: o.OutputState,
	}
}

// Configuration for a single action condition. See Action Condition below for more details.
func (o WebAclLoggingConfigurationLoggingFilterFilterConditionOutput) ActionCondition() pulumix.GPtrOutput[WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition, WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput] {
	value := pulumix.Apply[WebAclLoggingConfigurationLoggingFilterFilterCondition](o, func(v WebAclLoggingConfigurationLoggingFilterFilterCondition) *WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition {
		return v.ActionCondition
	})
	return pulumix.GPtrOutput[WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition, WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput]{OutputState: value.OutputState}
}

// Condition for a single label name. See Label Name Condition below for more details.
func (o WebAclLoggingConfigurationLoggingFilterFilterConditionOutput) LabelNameCondition() pulumix.GPtrOutput[WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition, WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput] {
	value := pulumix.Apply[WebAclLoggingConfigurationLoggingFilterFilterCondition](o, func(v WebAclLoggingConfigurationLoggingFilterFilterCondition) *WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition {
		return v.LabelNameCondition
	})
	return pulumix.GPtrOutput[WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition, WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput]{OutputState: value.OutputState}
}

type WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition struct {
	// Action setting that a log record must contain in order to meet the condition. Valid values for `action` are `ALLOW`, `BLOCK`, and `COUNT`.
	Action string `pulumi:"action"`
}

type WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionArgs struct {
	// Action setting that a log record must contain in order to meet the condition. Valid values for `action` are `ALLOW`, `BLOCK`, and `COUNT`.
	Action pulumix.Input[string] `pulumi:"action"`
}

func (WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition)(nil)).Elem()
}

func (i WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionArgs) ToWebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput() WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput {
	return i.ToWebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionArgs) ToWebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput)
}

func (i *WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition)(nil)).Elem()
}

func (o WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput) ToWebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput() WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput) ToWebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition] {
	return pulumix.Output[WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition]{
		OutputState: o.OutputState,
	}
}

// Action setting that a log record must contain in order to meet the condition. Valid values for `action` are `ALLOW`, `BLOCK`, and `COUNT`.
func (o WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput) Action() pulumix.Output[string] {
	return pulumix.Apply[WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition](o, func(v WebAclLoggingConfigurationLoggingFilterFilterConditionActionCondition) string { return v.Action })
}

type WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition struct {
	// Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label.
	LabelName string `pulumi:"labelName"`
}

type WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionArgs struct {
	// Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label.
	LabelName pulumix.Input[string] `pulumi:"labelName"`
}

func (WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition)(nil)).Elem()
}

func (i WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionArgs) ToWebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput() WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput {
	return i.ToWebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionArgs) ToWebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput)
}

func (i *WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition)(nil)).Elem()
}

func (o WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput) ToWebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput() WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput) ToWebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutputWithContext(ctx context.Context) WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput {
	return o
}

func (o WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition] {
	return pulumix.Output[WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition]{
		OutputState: o.OutputState,
	}
}

// Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label.
func (o WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput) LabelName() pulumix.Output[string] {
	return pulumix.Apply[WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition](o, func(v WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameCondition) string {
		return v.LabelName
	})
}

type WebAclLoggingConfigurationRedactedField struct {
	// HTTP method to be redacted. It must be specified as an empty configuration block `{}`. The method indicates the type of operation that the request is asking the origin to perform.
	Method *WebAclLoggingConfigurationRedactedFieldMethod `pulumi:"method"`
	// Whether to redact the query string. It must be specified as an empty configuration block `{}`. The query string is the part of a URL that appears after a `?` character, if any.
	QueryString *WebAclLoggingConfigurationRedactedFieldQueryString `pulumi:"queryString"`
	// "singleHeader" refers to the redaction of a single header. For more information, please see the details below under Single Header.
	SingleHeader *WebAclLoggingConfigurationRedactedFieldSingleHeader `pulumi:"singleHeader"`
	// Configuration block that redacts the request URI path. It should be specified as an empty configuration block `{}`. The URI path is the part of a web request that identifies a resource, such as `/images/daily-ad.jpg`.
	UriPath *WebAclLoggingConfigurationRedactedFieldUriPath `pulumi:"uriPath"`
}

type WebAclLoggingConfigurationRedactedFieldArgs struct {
	// HTTP method to be redacted. It must be specified as an empty configuration block `{}`. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*WebAclLoggingConfigurationRedactedFieldMethodArgs] `pulumi:"method"`
	// Whether to redact the query string. It must be specified as an empty configuration block `{}`. The query string is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*WebAclLoggingConfigurationRedactedFieldQueryStringArgs] `pulumi:"queryString"`
	// "singleHeader" refers to the redaction of a single header. For more information, please see the details below under Single Header.
	SingleHeader pulumix.Input[*WebAclLoggingConfigurationRedactedFieldSingleHeaderArgs] `pulumi:"singleHeader"`
	// Configuration block that redacts the request URI path. It should be specified as an empty configuration block `{}`. The URI path is the part of a web request that identifies a resource, such as `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*WebAclLoggingConfigurationRedactedFieldUriPathArgs] `pulumi:"uriPath"`
}

func (WebAclLoggingConfigurationRedactedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedField)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldArgs) ToWebAclLoggingConfigurationRedactedFieldOutput() WebAclLoggingConfigurationRedactedFieldOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldArgs) ToWebAclLoggingConfigurationRedactedFieldOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldOutput)
}

func (i *WebAclLoggingConfigurationRedactedFieldArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationRedactedFieldArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationRedactedFieldOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedField)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldOutput) ToWebAclLoggingConfigurationRedactedFieldOutput() WebAclLoggingConfigurationRedactedFieldOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldOutput) ToWebAclLoggingConfigurationRedactedFieldOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedField] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedField]{
		OutputState: o.OutputState,
	}
}

// HTTP method to be redacted. It must be specified as an empty configuration block `{}`. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebAclLoggingConfigurationRedactedFieldOutput) Method() pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFieldMethod, WebAclLoggingConfigurationRedactedFieldMethodOutput] {
	value := pulumix.Apply[WebAclLoggingConfigurationRedactedField](o, func(v WebAclLoggingConfigurationRedactedField) *WebAclLoggingConfigurationRedactedFieldMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFieldMethod, WebAclLoggingConfigurationRedactedFieldMethodOutput]{OutputState: value.OutputState}
}

// Whether to redact the query string. It must be specified as an empty configuration block `{}`. The query string is the part of a URL that appears after a `?` character, if any.
func (o WebAclLoggingConfigurationRedactedFieldOutput) QueryString() pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFieldQueryString, WebAclLoggingConfigurationRedactedFieldQueryStringOutput] {
	value := pulumix.Apply[WebAclLoggingConfigurationRedactedField](o, func(v WebAclLoggingConfigurationRedactedField) *WebAclLoggingConfigurationRedactedFieldQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFieldQueryString, WebAclLoggingConfigurationRedactedFieldQueryStringOutput]{OutputState: value.OutputState}
}

// "singleHeader" refers to the redaction of a single header. For more information, please see the details below under Single Header.
func (o WebAclLoggingConfigurationRedactedFieldOutput) SingleHeader() pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFieldSingleHeader, WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput] {
	value := pulumix.Apply[WebAclLoggingConfigurationRedactedField](o, func(v WebAclLoggingConfigurationRedactedField) *WebAclLoggingConfigurationRedactedFieldSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFieldSingleHeader, WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput]{OutputState: value.OutputState}
}

// Configuration block that redacts the request URI path. It should be specified as an empty configuration block `{}`. The URI path is the part of a web request that identifies a resource, such as `/images/daily-ad.jpg`.
func (o WebAclLoggingConfigurationRedactedFieldOutput) UriPath() pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFieldUriPath, WebAclLoggingConfigurationRedactedFieldUriPathOutput] {
	value := pulumix.Apply[WebAclLoggingConfigurationRedactedField](o, func(v WebAclLoggingConfigurationRedactedField) *WebAclLoggingConfigurationRedactedFieldUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[WebAclLoggingConfigurationRedactedFieldUriPath, WebAclLoggingConfigurationRedactedFieldUriPathOutput]{OutputState: value.OutputState}
}

type WebAclLoggingConfigurationRedactedFieldMethod struct {
}

type WebAclLoggingConfigurationRedactedFieldMethodArgs struct {
}

func (WebAclLoggingConfigurationRedactedFieldMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldMethod)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldMethodArgs) ToWebAclLoggingConfigurationRedactedFieldMethodOutput() WebAclLoggingConfigurationRedactedFieldMethodOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldMethodOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldMethodArgs) ToWebAclLoggingConfigurationRedactedFieldMethodOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldMethodOutput)
}

func (i *WebAclLoggingConfigurationRedactedFieldMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationRedactedFieldMethodArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationRedactedFieldMethodOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldMethod)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldMethodOutput) ToWebAclLoggingConfigurationRedactedFieldMethodOutput() WebAclLoggingConfigurationRedactedFieldMethodOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldMethodOutput) ToWebAclLoggingConfigurationRedactedFieldMethodOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldMethodOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldMethodOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFieldMethod] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFieldMethod]{
		OutputState: o.OutputState,
	}
}

type WebAclLoggingConfigurationRedactedFieldQueryString struct {
}

type WebAclLoggingConfigurationRedactedFieldQueryStringArgs struct {
}

func (WebAclLoggingConfigurationRedactedFieldQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldQueryString)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldQueryStringArgs) ToWebAclLoggingConfigurationRedactedFieldQueryStringOutput() WebAclLoggingConfigurationRedactedFieldQueryStringOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldQueryStringOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldQueryStringArgs) ToWebAclLoggingConfigurationRedactedFieldQueryStringOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldQueryStringOutput)
}

func (i *WebAclLoggingConfigurationRedactedFieldQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationRedactedFieldQueryStringArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationRedactedFieldQueryStringOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldQueryString)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldQueryStringOutput) ToWebAclLoggingConfigurationRedactedFieldQueryStringOutput() WebAclLoggingConfigurationRedactedFieldQueryStringOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldQueryStringOutput) ToWebAclLoggingConfigurationRedactedFieldQueryStringOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldQueryStringOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFieldQueryString] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFieldQueryString]{
		OutputState: o.OutputState,
	}
}

type WebAclLoggingConfigurationRedactedFieldSingleHeader struct {
	// Name of the query header to redact. This setting must be provided in lowercase characters.
	Name string `pulumi:"name"`
}

type WebAclLoggingConfigurationRedactedFieldSingleHeaderArgs struct {
	// Name of the query header to redact. This setting must be provided in lowercase characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclLoggingConfigurationRedactedFieldSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldSingleHeader)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldSingleHeaderArgs) ToWebAclLoggingConfigurationRedactedFieldSingleHeaderOutput() WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldSingleHeaderOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldSingleHeaderArgs) ToWebAclLoggingConfigurationRedactedFieldSingleHeaderOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput)
}

func (i *WebAclLoggingConfigurationRedactedFieldSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationRedactedFieldSingleHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldSingleHeader)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput) ToWebAclLoggingConfigurationRedactedFieldSingleHeaderOutput() WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput) ToWebAclLoggingConfigurationRedactedFieldSingleHeaderOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFieldSingleHeader] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFieldSingleHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to redact. This setting must be provided in lowercase characters.
func (o WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclLoggingConfigurationRedactedFieldSingleHeader](o, func(v WebAclLoggingConfigurationRedactedFieldSingleHeader) string { return v.Name })
}

type WebAclLoggingConfigurationRedactedFieldUriPath struct {
}

type WebAclLoggingConfigurationRedactedFieldUriPathArgs struct {
}

func (WebAclLoggingConfigurationRedactedFieldUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldUriPath)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldUriPathArgs) ToWebAclLoggingConfigurationRedactedFieldUriPathOutput() WebAclLoggingConfigurationRedactedFieldUriPathOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldUriPathOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldUriPathArgs) ToWebAclLoggingConfigurationRedactedFieldUriPathOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldUriPathOutput)
}

func (i *WebAclLoggingConfigurationRedactedFieldUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationRedactedFieldUriPathArgs] {
	return pulumix.Val(i)
}

type WebAclLoggingConfigurationRedactedFieldUriPathOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldUriPath)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldUriPathOutput) ToWebAclLoggingConfigurationRedactedFieldUriPathOutput() WebAclLoggingConfigurationRedactedFieldUriPathOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldUriPathOutput) ToWebAclLoggingConfigurationRedactedFieldUriPathOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldUriPathOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFieldUriPath] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFieldUriPath]{
		OutputState: o.OutputState,
	}
}

type WebAclRule struct {
	// Action that AWS WAF should take on a web request when it matches the rule's statement. This is used only for rules whose **statements do not reference a rule group**. See `action` for details.
	Action *WebAclRuleAction `pulumi:"action"`
	// Specifies how AWS WAF should handle CAPTCHA evaluations. See `captchaConfig` below for details.
	CaptchaConfig *WebAclRuleCaptchaConfig `pulumi:"captchaConfig"`
	// Friendly name of the rule. Note that the provider assumes that rules with names matching this pattern, `^ShieldMitigationRuleGroup_<account-id>_<web-acl-guid>_.*`, are AWS-added for [automatic application layer DDoS mitigation activities](https://docs.aws.amazon.com/waf/latest/developerguide/ddos-automatic-app-layer-response-rg.html). Such rules will be ignored by the provider unless you explicitly include them in your configuration (for example, by using the AWS CLI to discover their properties and creating matching configuration). However, since these rules are owned and managed by AWS, you may get permission errors.
	Name string `pulumi:"name"`
	// Override action to apply to the rules in a rule group. Used only for rule **statements that reference a rule group**, like `ruleGroupReferenceStatement` and `managedRuleGroupStatement`. See `overrideAction` below for details.
	OverrideAction *WebAclRuleOverrideAction `pulumi:"overrideAction"`
	// If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the `rules` in order based on the value of `priority`. AWS WAF processes rules with lower priority first.
	Priority int `pulumi:"priority"`
	// Labels to apply to web requests that match the rule match statement. See `ruleLabel` below for details.
	RuleLabels []WebAclRuleRuleLabel `pulumi:"ruleLabels"`
	// The AWS WAF processing statement for the rule, for example `byteMatchStatement` or `geoMatchStatement`. See `statement` below for details.
	Statement WebAclRuleStatement `pulumi:"statement"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibilityConfig` below for details.
	VisibilityConfig WebAclRuleVisibilityConfig `pulumi:"visibilityConfig"`
}

type WebAclRuleArgs struct {
	// Action that AWS WAF should take on a web request when it matches the rule's statement. This is used only for rules whose **statements do not reference a rule group**. See `action` for details.
	Action pulumix.Input[*WebAclRuleActionArgs] `pulumi:"action"`
	// Specifies how AWS WAF should handle CAPTCHA evaluations. See `captchaConfig` below for details.
	CaptchaConfig pulumix.Input[*WebAclRuleCaptchaConfigArgs] `pulumi:"captchaConfig"`
	// Friendly name of the rule. Note that the provider assumes that rules with names matching this pattern, `^ShieldMitigationRuleGroup_<account-id>_<web-acl-guid>_.*`, are AWS-added for [automatic application layer DDoS mitigation activities](https://docs.aws.amazon.com/waf/latest/developerguide/ddos-automatic-app-layer-response-rg.html). Such rules will be ignored by the provider unless you explicitly include them in your configuration (for example, by using the AWS CLI to discover their properties and creating matching configuration). However, since these rules are owned and managed by AWS, you may get permission errors.
	Name pulumix.Input[string] `pulumi:"name"`
	// Override action to apply to the rules in a rule group. Used only for rule **statements that reference a rule group**, like `ruleGroupReferenceStatement` and `managedRuleGroupStatement`. See `overrideAction` below for details.
	OverrideAction pulumix.Input[*WebAclRuleOverrideActionArgs] `pulumi:"overrideAction"`
	// If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the `rules` in order based on the value of `priority`. AWS WAF processes rules with lower priority first.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// Labels to apply to web requests that match the rule match statement. See `ruleLabel` below for details.
	RuleLabels pulumix.Input[[]*WebAclRuleRuleLabelArgs] `pulumi:"ruleLabels"`
	// The AWS WAF processing statement for the rule, for example `byteMatchStatement` or `geoMatchStatement`. See `statement` below for details.
	Statement pulumix.Input[*WebAclRuleStatementArgs] `pulumi:"statement"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibilityConfig` below for details.
	VisibilityConfig pulumix.Input[*WebAclRuleVisibilityConfigArgs] `pulumi:"visibilityConfig"`
}

func (WebAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRule)(nil)).Elem()
}

func (i WebAclRuleArgs) ToWebAclRuleOutput() WebAclRuleOutput {
	return i.ToWebAclRuleOutputWithContext(context.Background())
}

func (i WebAclRuleArgs) ToWebAclRuleOutputWithContext(ctx context.Context) WebAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOutput)
}

func (i *WebAclRuleArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleArgs] {
	return pulumix.Val(i)
}

type WebAclRuleOutput struct{ *pulumi.OutputState }

func (WebAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRule)(nil)).Elem()
}

func (o WebAclRuleOutput) ToWebAclRuleOutput() WebAclRuleOutput {
	return o
}

func (o WebAclRuleOutput) ToWebAclRuleOutputWithContext(ctx context.Context) WebAclRuleOutput {
	return o
}

func (o WebAclRuleOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRule] {
	return pulumix.Output[WebAclRule]{
		OutputState: o.OutputState,
	}
}

// Action that AWS WAF should take on a web request when it matches the rule's statement. This is used only for rules whose **statements do not reference a rule group**. See `action` for details.
func (o WebAclRuleOutput) Action() pulumix.GPtrOutput[WebAclRuleAction, WebAclRuleActionOutput] {
	value := pulumix.Apply[WebAclRule](o, func(v WebAclRule) *WebAclRuleAction { return v.Action })
	return pulumix.GPtrOutput[WebAclRuleAction, WebAclRuleActionOutput]{OutputState: value.OutputState}
}

// Specifies how AWS WAF should handle CAPTCHA evaluations. See `captchaConfig` below for details.
func (o WebAclRuleOutput) CaptchaConfig() pulumix.GPtrOutput[WebAclRuleCaptchaConfig, WebAclRuleCaptchaConfigOutput] {
	value := pulumix.Apply[WebAclRule](o, func(v WebAclRule) *WebAclRuleCaptchaConfig { return v.CaptchaConfig })
	return pulumix.GPtrOutput[WebAclRuleCaptchaConfig, WebAclRuleCaptchaConfigOutput]{OutputState: value.OutputState}
}

// Friendly name of the rule. Note that the provider assumes that rules with names matching this pattern, `^ShieldMitigationRuleGroup_<account-id>_<web-acl-guid>_.*`, are AWS-added for [automatic application layer DDoS mitigation activities](https://docs.aws.amazon.com/waf/latest/developerguide/ddos-automatic-app-layer-response-rg.html). Such rules will be ignored by the provider unless you explicitly include them in your configuration (for example, by using the AWS CLI to discover their properties and creating matching configuration). However, since these rules are owned and managed by AWS, you may get permission errors.
func (o WebAclRuleOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRule](o, func(v WebAclRule) string { return v.Name })
}

// Override action to apply to the rules in a rule group. Used only for rule **statements that reference a rule group**, like `ruleGroupReferenceStatement` and `managedRuleGroupStatement`. See `overrideAction` below for details.
func (o WebAclRuleOutput) OverrideAction() pulumix.GPtrOutput[WebAclRuleOverrideAction, WebAclRuleOverrideActionOutput] {
	value := pulumix.Apply[WebAclRule](o, func(v WebAclRule) *WebAclRuleOverrideAction { return v.OverrideAction })
	return pulumix.GPtrOutput[WebAclRuleOverrideAction, WebAclRuleOverrideActionOutput]{OutputState: value.OutputState}
}

// If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the `rules` in order based on the value of `priority`. AWS WAF processes rules with lower priority first.
func (o WebAclRuleOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[WebAclRule](o, func(v WebAclRule) int { return v.Priority })
}

// Labels to apply to web requests that match the rule match statement. See `ruleLabel` below for details.
func (o WebAclRuleOutput) RuleLabels() pulumix.GArrayOutput[WebAclRuleRuleLabel, WebAclRuleRuleLabelOutput] {
	value := pulumix.Apply[WebAclRule](o, func(v WebAclRule) []WebAclRuleRuleLabel { return v.RuleLabels })
	return pulumix.GArrayOutput[WebAclRuleRuleLabel, WebAclRuleRuleLabelOutput]{OutputState: value.OutputState}
}

// The AWS WAF processing statement for the rule, for example `byteMatchStatement` or `geoMatchStatement`. See `statement` below for details.
func (o WebAclRuleOutput) Statement() pulumix.GPtrOutput[WebAclRuleStatement, WebAclRuleStatementOutput] {
	value := pulumix.Apply[WebAclRule](o, func(v WebAclRule) WebAclRuleStatement { return v.Statement })
	return pulumix.GPtrOutput[WebAclRuleStatement, WebAclRuleStatementOutput]{OutputState: value.OutputState}
}

// Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibilityConfig` below for details.
func (o WebAclRuleOutput) VisibilityConfig() pulumix.GPtrOutput[WebAclRuleVisibilityConfig, WebAclRuleVisibilityConfigOutput] {
	value := pulumix.Apply[WebAclRule](o, func(v WebAclRule) WebAclRuleVisibilityConfig { return v.VisibilityConfig })
	return pulumix.GPtrOutput[WebAclRuleVisibilityConfig, WebAclRuleVisibilityConfigOutput]{OutputState: value.OutputState}
}

type WebAclRuleAction struct {
	// Instructs AWS WAF to allow the web request. See `allow` below for details.
	Allow *WebAclRuleActionAllow `pulumi:"allow"`
	// Instructs AWS WAF to block the web request. See `block` below for details.
	Block *WebAclRuleActionBlock `pulumi:"block"`
	// Instructs AWS WAF to run a Captcha check against the web request. See `captcha` below for details.
	Captcha *WebAclRuleActionCaptcha `pulumi:"captcha"`
	// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See `challenge` below for details.
	Challenge *WebAclRuleActionChallenge `pulumi:"challenge"`
	// Instructs AWS WAF to count the web request and allow it. See `count` below for details.
	Count *WebAclRuleActionCount `pulumi:"count"`
}

type WebAclRuleActionArgs struct {
	// Instructs AWS WAF to allow the web request. See `allow` below for details.
	Allow pulumix.Input[*WebAclRuleActionAllowArgs] `pulumi:"allow"`
	// Instructs AWS WAF to block the web request. See `block` below for details.
	Block pulumix.Input[*WebAclRuleActionBlockArgs] `pulumi:"block"`
	// Instructs AWS WAF to run a Captcha check against the web request. See `captcha` below for details.
	Captcha pulumix.Input[*WebAclRuleActionCaptchaArgs] `pulumi:"captcha"`
	// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See `challenge` below for details.
	Challenge pulumix.Input[*WebAclRuleActionChallengeArgs] `pulumi:"challenge"`
	// Instructs AWS WAF to count the web request and allow it. See `count` below for details.
	Count pulumix.Input[*WebAclRuleActionCountArgs] `pulumi:"count"`
}

func (WebAclRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleAction)(nil)).Elem()
}

func (i WebAclRuleActionArgs) ToWebAclRuleActionOutput() WebAclRuleActionOutput {
	return i.ToWebAclRuleActionOutputWithContext(context.Background())
}

func (i WebAclRuleActionArgs) ToWebAclRuleActionOutputWithContext(ctx context.Context) WebAclRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionOutput)
}

func (i *WebAclRuleActionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleAction)(nil)).Elem()
}

func (o WebAclRuleActionOutput) ToWebAclRuleActionOutput() WebAclRuleActionOutput {
	return o
}

func (o WebAclRuleActionOutput) ToWebAclRuleActionOutputWithContext(ctx context.Context) WebAclRuleActionOutput {
	return o
}

func (o WebAclRuleActionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleAction] {
	return pulumix.Output[WebAclRuleAction]{
		OutputState: o.OutputState,
	}
}

// Instructs AWS WAF to allow the web request. See `allow` below for details.
func (o WebAclRuleActionOutput) Allow() pulumix.GPtrOutput[WebAclRuleActionAllow, WebAclRuleActionAllowOutput] {
	value := pulumix.Apply[WebAclRuleAction](o, func(v WebAclRuleAction) *WebAclRuleActionAllow { return v.Allow })
	return pulumix.GPtrOutput[WebAclRuleActionAllow, WebAclRuleActionAllowOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to block the web request. See `block` below for details.
func (o WebAclRuleActionOutput) Block() pulumix.GPtrOutput[WebAclRuleActionBlock, WebAclRuleActionBlockOutput] {
	value := pulumix.Apply[WebAclRuleAction](o, func(v WebAclRuleAction) *WebAclRuleActionBlock { return v.Block })
	return pulumix.GPtrOutput[WebAclRuleActionBlock, WebAclRuleActionBlockOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to run a Captcha check against the web request. See `captcha` below for details.
func (o WebAclRuleActionOutput) Captcha() pulumix.GPtrOutput[WebAclRuleActionCaptcha, WebAclRuleActionCaptchaOutput] {
	value := pulumix.Apply[WebAclRuleAction](o, func(v WebAclRuleAction) *WebAclRuleActionCaptcha { return v.Captcha })
	return pulumix.GPtrOutput[WebAclRuleActionCaptcha, WebAclRuleActionCaptchaOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See `challenge` below for details.
func (o WebAclRuleActionOutput) Challenge() pulumix.GPtrOutput[WebAclRuleActionChallenge, WebAclRuleActionChallengeOutput] {
	value := pulumix.Apply[WebAclRuleAction](o, func(v WebAclRuleAction) *WebAclRuleActionChallenge { return v.Challenge })
	return pulumix.GPtrOutput[WebAclRuleActionChallenge, WebAclRuleActionChallengeOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to count the web request and allow it. See `count` below for details.
func (o WebAclRuleActionOutput) Count() pulumix.GPtrOutput[WebAclRuleActionCount, WebAclRuleActionCountOutput] {
	value := pulumix.Apply[WebAclRuleAction](o, func(v WebAclRuleAction) *WebAclRuleActionCount { return v.Count })
	return pulumix.GPtrOutput[WebAclRuleActionCount, WebAclRuleActionCountOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionAllow struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling *WebAclRuleActionAllowCustomRequestHandling `pulumi:"customRequestHandling"`
}

type WebAclRuleActionAllowArgs struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling pulumix.Input[*WebAclRuleActionAllowCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (WebAclRuleActionAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionAllow)(nil)).Elem()
}

func (i WebAclRuleActionAllowArgs) ToWebAclRuleActionAllowOutput() WebAclRuleActionAllowOutput {
	return i.ToWebAclRuleActionAllowOutputWithContext(context.Background())
}

func (i WebAclRuleActionAllowArgs) ToWebAclRuleActionAllowOutputWithContext(ctx context.Context) WebAclRuleActionAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionAllowOutput)
}

func (i *WebAclRuleActionAllowArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionAllowArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionAllowOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionAllow)(nil)).Elem()
}

func (o WebAclRuleActionAllowOutput) ToWebAclRuleActionAllowOutput() WebAclRuleActionAllowOutput {
	return o
}

func (o WebAclRuleActionAllowOutput) ToWebAclRuleActionAllowOutputWithContext(ctx context.Context) WebAclRuleActionAllowOutput {
	return o
}

func (o WebAclRuleActionAllowOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionAllow] {
	return pulumix.Output[WebAclRuleActionAllow]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See `customRequestHandling` below for details.
func (o WebAclRuleActionAllowOutput) CustomRequestHandling() pulumix.GPtrOutput[WebAclRuleActionAllowCustomRequestHandling, WebAclRuleActionAllowCustomRequestHandlingOutput] {
	value := pulumix.Apply[WebAclRuleActionAllow](o, func(v WebAclRuleActionAllow) *WebAclRuleActionAllowCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[WebAclRuleActionAllowCustomRequestHandling, WebAclRuleActionAllowCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionAllowCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders []WebAclRuleActionAllowCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type WebAclRuleActionAllowCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders pulumix.Input[[]*WebAclRuleActionAllowCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (WebAclRuleActionAllowCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionAllowCustomRequestHandling)(nil)).Elem()
}

func (i WebAclRuleActionAllowCustomRequestHandlingArgs) ToWebAclRuleActionAllowCustomRequestHandlingOutput() WebAclRuleActionAllowCustomRequestHandlingOutput {
	return i.ToWebAclRuleActionAllowCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebAclRuleActionAllowCustomRequestHandlingArgs) ToWebAclRuleActionAllowCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleActionAllowCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionAllowCustomRequestHandlingOutput)
}

func (i *WebAclRuleActionAllowCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionAllowCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionAllowCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionAllowCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionAllowCustomRequestHandling)(nil)).Elem()
}

func (o WebAclRuleActionAllowCustomRequestHandlingOutput) ToWebAclRuleActionAllowCustomRequestHandlingOutput() WebAclRuleActionAllowCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleActionAllowCustomRequestHandlingOutput) ToWebAclRuleActionAllowCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleActionAllowCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleActionAllowCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionAllowCustomRequestHandling] {
	return pulumix.Output[WebAclRuleActionAllowCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
func (o WebAclRuleActionAllowCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[WebAclRuleActionAllowCustomRequestHandlingInsertHeader, WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[WebAclRuleActionAllowCustomRequestHandling](o, func(v WebAclRuleActionAllowCustomRequestHandling) []WebAclRuleActionAllowCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleActionAllowCustomRequestHandlingInsertHeader, WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionAllowCustomRequestHandlingInsertHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleActionAllowCustomRequestHandlingInsertHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleActionAllowCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionAllowCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i WebAclRuleActionAllowCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput() WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput {
	return i.ToWebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleActionAllowCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput)
}

func (i *WebAclRuleActionAllowCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionAllowCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionAllowCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput() WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionAllowCustomRequestHandlingInsertHeader] {
	return pulumix.Output[WebAclRuleActionAllowCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionAllowCustomRequestHandlingInsertHeader](o, func(v WebAclRuleActionAllowCustomRequestHandlingInsertHeader) string { return v.Name })
}

// Value of the custom header.
func (o WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionAllowCustomRequestHandlingInsertHeader](o, func(v WebAclRuleActionAllowCustomRequestHandlingInsertHeader) string { return v.Value })
}

type WebAclRuleActionBlock struct {
	// Defines a custom response for the web request. See `customResponse` below for details.
	CustomResponse *WebAclRuleActionBlockCustomResponse `pulumi:"customResponse"`
}

type WebAclRuleActionBlockArgs struct {
	// Defines a custom response for the web request. See `customResponse` below for details.
	CustomResponse pulumix.Input[*WebAclRuleActionBlockCustomResponseArgs] `pulumi:"customResponse"`
}

func (WebAclRuleActionBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionBlock)(nil)).Elem()
}

func (i WebAclRuleActionBlockArgs) ToWebAclRuleActionBlockOutput() WebAclRuleActionBlockOutput {
	return i.ToWebAclRuleActionBlockOutputWithContext(context.Background())
}

func (i WebAclRuleActionBlockArgs) ToWebAclRuleActionBlockOutputWithContext(ctx context.Context) WebAclRuleActionBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionBlockOutput)
}

func (i *WebAclRuleActionBlockArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionBlockArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionBlockOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionBlock)(nil)).Elem()
}

func (o WebAclRuleActionBlockOutput) ToWebAclRuleActionBlockOutput() WebAclRuleActionBlockOutput {
	return o
}

func (o WebAclRuleActionBlockOutput) ToWebAclRuleActionBlockOutputWithContext(ctx context.Context) WebAclRuleActionBlockOutput {
	return o
}

func (o WebAclRuleActionBlockOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionBlock] {
	return pulumix.Output[WebAclRuleActionBlock]{
		OutputState: o.OutputState,
	}
}

// Defines a custom response for the web request. See `customResponse` below for details.
func (o WebAclRuleActionBlockOutput) CustomResponse() pulumix.GPtrOutput[WebAclRuleActionBlockCustomResponse, WebAclRuleActionBlockCustomResponseOutput] {
	value := pulumix.Apply[WebAclRuleActionBlock](o, func(v WebAclRuleActionBlock) *WebAclRuleActionBlockCustomResponse { return v.CustomResponse })
	return pulumix.GPtrOutput[WebAclRuleActionBlockCustomResponse, WebAclRuleActionBlockCustomResponseOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionBlockCustomResponse struct {
	// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
	CustomResponseBodyKey *string `pulumi:"customResponseBodyKey"`
	// The HTTP status code to return to the client.
	ResponseCode int `pulumi:"responseCode"`
	// The `responseHeader` blocks used to define the HTTP response headers added to the response. See `responseHeader` below for details.
	ResponseHeaders []WebAclRuleActionBlockCustomResponseResponseHeader `pulumi:"responseHeaders"`
}

type WebAclRuleActionBlockCustomResponseArgs struct {
	// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
	CustomResponseBodyKey pulumix.Input[*string] `pulumi:"customResponseBodyKey"`
	// The HTTP status code to return to the client.
	ResponseCode pulumix.Input[int] `pulumi:"responseCode"`
	// The `responseHeader` blocks used to define the HTTP response headers added to the response. See `responseHeader` below for details.
	ResponseHeaders pulumix.Input[[]*WebAclRuleActionBlockCustomResponseResponseHeaderArgs] `pulumi:"responseHeaders"`
}

func (WebAclRuleActionBlockCustomResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionBlockCustomResponse)(nil)).Elem()
}

func (i WebAclRuleActionBlockCustomResponseArgs) ToWebAclRuleActionBlockCustomResponseOutput() WebAclRuleActionBlockCustomResponseOutput {
	return i.ToWebAclRuleActionBlockCustomResponseOutputWithContext(context.Background())
}

func (i WebAclRuleActionBlockCustomResponseArgs) ToWebAclRuleActionBlockCustomResponseOutputWithContext(ctx context.Context) WebAclRuleActionBlockCustomResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionBlockCustomResponseOutput)
}

func (i *WebAclRuleActionBlockCustomResponseArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionBlockCustomResponseArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionBlockCustomResponseOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionBlockCustomResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionBlockCustomResponse)(nil)).Elem()
}

func (o WebAclRuleActionBlockCustomResponseOutput) ToWebAclRuleActionBlockCustomResponseOutput() WebAclRuleActionBlockCustomResponseOutput {
	return o
}

func (o WebAclRuleActionBlockCustomResponseOutput) ToWebAclRuleActionBlockCustomResponseOutputWithContext(ctx context.Context) WebAclRuleActionBlockCustomResponseOutput {
	return o
}

func (o WebAclRuleActionBlockCustomResponseOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionBlockCustomResponse] {
	return pulumix.Output[WebAclRuleActionBlockCustomResponse]{
		OutputState: o.OutputState,
	}
}

// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
func (o WebAclRuleActionBlockCustomResponseOutput) CustomResponseBodyKey() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleActionBlockCustomResponse](o, func(v WebAclRuleActionBlockCustomResponse) *string { return v.CustomResponseBodyKey })
}

// The HTTP status code to return to the client.
func (o WebAclRuleActionBlockCustomResponseOutput) ResponseCode() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleActionBlockCustomResponse](o, func(v WebAclRuleActionBlockCustomResponse) int { return v.ResponseCode })
}

// The `responseHeader` blocks used to define the HTTP response headers added to the response. See `responseHeader` below for details.
func (o WebAclRuleActionBlockCustomResponseOutput) ResponseHeaders() pulumix.GArrayOutput[WebAclRuleActionBlockCustomResponseResponseHeader, WebAclRuleActionBlockCustomResponseResponseHeaderOutput] {
	value := pulumix.Apply[WebAclRuleActionBlockCustomResponse](o, func(v WebAclRuleActionBlockCustomResponse) []WebAclRuleActionBlockCustomResponseResponseHeader {
		return v.ResponseHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleActionBlockCustomResponseResponseHeader, WebAclRuleActionBlockCustomResponseResponseHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionBlockCustomResponseResponseHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleActionBlockCustomResponseResponseHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleActionBlockCustomResponseResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionBlockCustomResponseResponseHeader)(nil)).Elem()
}

func (i WebAclRuleActionBlockCustomResponseResponseHeaderArgs) ToWebAclRuleActionBlockCustomResponseResponseHeaderOutput() WebAclRuleActionBlockCustomResponseResponseHeaderOutput {
	return i.ToWebAclRuleActionBlockCustomResponseResponseHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleActionBlockCustomResponseResponseHeaderArgs) ToWebAclRuleActionBlockCustomResponseResponseHeaderOutputWithContext(ctx context.Context) WebAclRuleActionBlockCustomResponseResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionBlockCustomResponseResponseHeaderOutput)
}

func (i *WebAclRuleActionBlockCustomResponseResponseHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionBlockCustomResponseResponseHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionBlockCustomResponseResponseHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionBlockCustomResponseResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionBlockCustomResponseResponseHeader)(nil)).Elem()
}

func (o WebAclRuleActionBlockCustomResponseResponseHeaderOutput) ToWebAclRuleActionBlockCustomResponseResponseHeaderOutput() WebAclRuleActionBlockCustomResponseResponseHeaderOutput {
	return o
}

func (o WebAclRuleActionBlockCustomResponseResponseHeaderOutput) ToWebAclRuleActionBlockCustomResponseResponseHeaderOutputWithContext(ctx context.Context) WebAclRuleActionBlockCustomResponseResponseHeaderOutput {
	return o
}

func (o WebAclRuleActionBlockCustomResponseResponseHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionBlockCustomResponseResponseHeader] {
	return pulumix.Output[WebAclRuleActionBlockCustomResponseResponseHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleActionBlockCustomResponseResponseHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionBlockCustomResponseResponseHeader](o, func(v WebAclRuleActionBlockCustomResponseResponseHeader) string { return v.Name })
}

// Value of the custom header.
func (o WebAclRuleActionBlockCustomResponseResponseHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionBlockCustomResponseResponseHeader](o, func(v WebAclRuleActionBlockCustomResponseResponseHeader) string { return v.Value })
}

type WebAclRuleActionCaptcha struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling *WebAclRuleActionCaptchaCustomRequestHandling `pulumi:"customRequestHandling"`
}

type WebAclRuleActionCaptchaArgs struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling pulumix.Input[*WebAclRuleActionCaptchaCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (WebAclRuleActionCaptchaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCaptcha)(nil)).Elem()
}

func (i WebAclRuleActionCaptchaArgs) ToWebAclRuleActionCaptchaOutput() WebAclRuleActionCaptchaOutput {
	return i.ToWebAclRuleActionCaptchaOutputWithContext(context.Background())
}

func (i WebAclRuleActionCaptchaArgs) ToWebAclRuleActionCaptchaOutputWithContext(ctx context.Context) WebAclRuleActionCaptchaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionCaptchaOutput)
}

func (i *WebAclRuleActionCaptchaArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionCaptchaArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionCaptchaOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionCaptchaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCaptcha)(nil)).Elem()
}

func (o WebAclRuleActionCaptchaOutput) ToWebAclRuleActionCaptchaOutput() WebAclRuleActionCaptchaOutput {
	return o
}

func (o WebAclRuleActionCaptchaOutput) ToWebAclRuleActionCaptchaOutputWithContext(ctx context.Context) WebAclRuleActionCaptchaOutput {
	return o
}

func (o WebAclRuleActionCaptchaOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionCaptcha] {
	return pulumix.Output[WebAclRuleActionCaptcha]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See `customRequestHandling` below for details.
func (o WebAclRuleActionCaptchaOutput) CustomRequestHandling() pulumix.GPtrOutput[WebAclRuleActionCaptchaCustomRequestHandling, WebAclRuleActionCaptchaCustomRequestHandlingOutput] {
	value := pulumix.Apply[WebAclRuleActionCaptcha](o, func(v WebAclRuleActionCaptcha) *WebAclRuleActionCaptchaCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[WebAclRuleActionCaptchaCustomRequestHandling, WebAclRuleActionCaptchaCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionCaptchaCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders []WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type WebAclRuleActionCaptchaCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders pulumix.Input[[]*WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (WebAclRuleActionCaptchaCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCaptchaCustomRequestHandling)(nil)).Elem()
}

func (i WebAclRuleActionCaptchaCustomRequestHandlingArgs) ToWebAclRuleActionCaptchaCustomRequestHandlingOutput() WebAclRuleActionCaptchaCustomRequestHandlingOutput {
	return i.ToWebAclRuleActionCaptchaCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebAclRuleActionCaptchaCustomRequestHandlingArgs) ToWebAclRuleActionCaptchaCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleActionCaptchaCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionCaptchaCustomRequestHandlingOutput)
}

func (i *WebAclRuleActionCaptchaCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionCaptchaCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionCaptchaCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionCaptchaCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCaptchaCustomRequestHandling)(nil)).Elem()
}

func (o WebAclRuleActionCaptchaCustomRequestHandlingOutput) ToWebAclRuleActionCaptchaCustomRequestHandlingOutput() WebAclRuleActionCaptchaCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleActionCaptchaCustomRequestHandlingOutput) ToWebAclRuleActionCaptchaCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleActionCaptchaCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleActionCaptchaCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionCaptchaCustomRequestHandling] {
	return pulumix.Output[WebAclRuleActionCaptchaCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
func (o WebAclRuleActionCaptchaCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader, WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[WebAclRuleActionCaptchaCustomRequestHandling](o, func(v WebAclRuleActionCaptchaCustomRequestHandling) []WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader, WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput() WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput {
	return i.ToWebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput)
}

func (i *WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput() WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader] {
	return pulumix.Output[WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader](o, func(v WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader) string { return v.Name })
}

// Value of the custom header.
func (o WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader](o, func(v WebAclRuleActionCaptchaCustomRequestHandlingInsertHeader) string { return v.Value })
}

type WebAclRuleActionChallenge struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling *WebAclRuleActionChallengeCustomRequestHandling `pulumi:"customRequestHandling"`
}

type WebAclRuleActionChallengeArgs struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling pulumix.Input[*WebAclRuleActionChallengeCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (WebAclRuleActionChallengeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionChallenge)(nil)).Elem()
}

func (i WebAclRuleActionChallengeArgs) ToWebAclRuleActionChallengeOutput() WebAclRuleActionChallengeOutput {
	return i.ToWebAclRuleActionChallengeOutputWithContext(context.Background())
}

func (i WebAclRuleActionChallengeArgs) ToWebAclRuleActionChallengeOutputWithContext(ctx context.Context) WebAclRuleActionChallengeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionChallengeOutput)
}

func (i *WebAclRuleActionChallengeArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionChallengeArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionChallengeOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionChallengeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionChallenge)(nil)).Elem()
}

func (o WebAclRuleActionChallengeOutput) ToWebAclRuleActionChallengeOutput() WebAclRuleActionChallengeOutput {
	return o
}

func (o WebAclRuleActionChallengeOutput) ToWebAclRuleActionChallengeOutputWithContext(ctx context.Context) WebAclRuleActionChallengeOutput {
	return o
}

func (o WebAclRuleActionChallengeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionChallenge] {
	return pulumix.Output[WebAclRuleActionChallenge]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See `customRequestHandling` below for details.
func (o WebAclRuleActionChallengeOutput) CustomRequestHandling() pulumix.GPtrOutput[WebAclRuleActionChallengeCustomRequestHandling, WebAclRuleActionChallengeCustomRequestHandlingOutput] {
	value := pulumix.Apply[WebAclRuleActionChallenge](o, func(v WebAclRuleActionChallenge) *WebAclRuleActionChallengeCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[WebAclRuleActionChallengeCustomRequestHandling, WebAclRuleActionChallengeCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionChallengeCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders []WebAclRuleActionChallengeCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type WebAclRuleActionChallengeCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders pulumix.Input[[]*WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (WebAclRuleActionChallengeCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionChallengeCustomRequestHandling)(nil)).Elem()
}

func (i WebAclRuleActionChallengeCustomRequestHandlingArgs) ToWebAclRuleActionChallengeCustomRequestHandlingOutput() WebAclRuleActionChallengeCustomRequestHandlingOutput {
	return i.ToWebAclRuleActionChallengeCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebAclRuleActionChallengeCustomRequestHandlingArgs) ToWebAclRuleActionChallengeCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleActionChallengeCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionChallengeCustomRequestHandlingOutput)
}

func (i *WebAclRuleActionChallengeCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionChallengeCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionChallengeCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionChallengeCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionChallengeCustomRequestHandling)(nil)).Elem()
}

func (o WebAclRuleActionChallengeCustomRequestHandlingOutput) ToWebAclRuleActionChallengeCustomRequestHandlingOutput() WebAclRuleActionChallengeCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleActionChallengeCustomRequestHandlingOutput) ToWebAclRuleActionChallengeCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleActionChallengeCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleActionChallengeCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionChallengeCustomRequestHandling] {
	return pulumix.Output[WebAclRuleActionChallengeCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
func (o WebAclRuleActionChallengeCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[WebAclRuleActionChallengeCustomRequestHandlingInsertHeader, WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[WebAclRuleActionChallengeCustomRequestHandling](o, func(v WebAclRuleActionChallengeCustomRequestHandling) []WebAclRuleActionChallengeCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleActionChallengeCustomRequestHandlingInsertHeader, WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionChallengeCustomRequestHandlingInsertHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionChallengeCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput() WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput {
	return i.ToWebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput)
}

func (i *WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionChallengeCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput() WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionChallengeCustomRequestHandlingInsertHeader] {
	return pulumix.Output[WebAclRuleActionChallengeCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionChallengeCustomRequestHandlingInsertHeader](o, func(v WebAclRuleActionChallengeCustomRequestHandlingInsertHeader) string { return v.Name })
}

// Value of the custom header.
func (o WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionChallengeCustomRequestHandlingInsertHeader](o, func(v WebAclRuleActionChallengeCustomRequestHandlingInsertHeader) string { return v.Value })
}

type WebAclRuleActionCount struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling *WebAclRuleActionCountCustomRequestHandling `pulumi:"customRequestHandling"`
}

type WebAclRuleActionCountArgs struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling pulumix.Input[*WebAclRuleActionCountCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (WebAclRuleActionCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCount)(nil)).Elem()
}

func (i WebAclRuleActionCountArgs) ToWebAclRuleActionCountOutput() WebAclRuleActionCountOutput {
	return i.ToWebAclRuleActionCountOutputWithContext(context.Background())
}

func (i WebAclRuleActionCountArgs) ToWebAclRuleActionCountOutputWithContext(ctx context.Context) WebAclRuleActionCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionCountOutput)
}

func (i *WebAclRuleActionCountArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionCountArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionCountOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCount)(nil)).Elem()
}

func (o WebAclRuleActionCountOutput) ToWebAclRuleActionCountOutput() WebAclRuleActionCountOutput {
	return o
}

func (o WebAclRuleActionCountOutput) ToWebAclRuleActionCountOutputWithContext(ctx context.Context) WebAclRuleActionCountOutput {
	return o
}

func (o WebAclRuleActionCountOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionCount] {
	return pulumix.Output[WebAclRuleActionCount]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See `customRequestHandling` below for details.
func (o WebAclRuleActionCountOutput) CustomRequestHandling() pulumix.GPtrOutput[WebAclRuleActionCountCustomRequestHandling, WebAclRuleActionCountCustomRequestHandlingOutput] {
	value := pulumix.Apply[WebAclRuleActionCount](o, func(v WebAclRuleActionCount) *WebAclRuleActionCountCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[WebAclRuleActionCountCustomRequestHandling, WebAclRuleActionCountCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionCountCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders []WebAclRuleActionCountCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type WebAclRuleActionCountCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders pulumix.Input[[]*WebAclRuleActionCountCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (WebAclRuleActionCountCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCountCustomRequestHandling)(nil)).Elem()
}

func (i WebAclRuleActionCountCustomRequestHandlingArgs) ToWebAclRuleActionCountCustomRequestHandlingOutput() WebAclRuleActionCountCustomRequestHandlingOutput {
	return i.ToWebAclRuleActionCountCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebAclRuleActionCountCustomRequestHandlingArgs) ToWebAclRuleActionCountCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleActionCountCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionCountCustomRequestHandlingOutput)
}

func (i *WebAclRuleActionCountCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionCountCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionCountCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionCountCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCountCustomRequestHandling)(nil)).Elem()
}

func (o WebAclRuleActionCountCustomRequestHandlingOutput) ToWebAclRuleActionCountCustomRequestHandlingOutput() WebAclRuleActionCountCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleActionCountCustomRequestHandlingOutput) ToWebAclRuleActionCountCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleActionCountCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleActionCountCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionCountCustomRequestHandling] {
	return pulumix.Output[WebAclRuleActionCountCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
func (o WebAclRuleActionCountCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[WebAclRuleActionCountCustomRequestHandlingInsertHeader, WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[WebAclRuleActionCountCustomRequestHandling](o, func(v WebAclRuleActionCountCustomRequestHandling) []WebAclRuleActionCountCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleActionCountCustomRequestHandlingInsertHeader, WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleActionCountCustomRequestHandlingInsertHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleActionCountCustomRequestHandlingInsertHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleActionCountCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCountCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i WebAclRuleActionCountCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput() WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput {
	return i.ToWebAclRuleActionCountCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleActionCountCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleActionCountCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput)
}

func (i *WebAclRuleActionCountCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleActionCountCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleActionCountCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput() WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleActionCountCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleActionCountCustomRequestHandlingInsertHeader] {
	return pulumix.Output[WebAclRuleActionCountCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionCountCustomRequestHandlingInsertHeader](o, func(v WebAclRuleActionCountCustomRequestHandlingInsertHeader) string { return v.Name })
}

// Value of the custom header.
func (o WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleActionCountCustomRequestHandlingInsertHeader](o, func(v WebAclRuleActionCountCustomRequestHandlingInsertHeader) string { return v.Value })
}

type WebAclRuleCaptchaConfig struct {
	// Defines custom immunity time. See `immunityTimeProperty` below for details.
	ImmunityTimeProperty *WebAclRuleCaptchaConfigImmunityTimeProperty `pulumi:"immunityTimeProperty"`
}

type WebAclRuleCaptchaConfigArgs struct {
	// Defines custom immunity time. See `immunityTimeProperty` below for details.
	ImmunityTimeProperty pulumix.Input[*WebAclRuleCaptchaConfigImmunityTimePropertyArgs] `pulumi:"immunityTimeProperty"`
}

func (WebAclRuleCaptchaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleCaptchaConfig)(nil)).Elem()
}

func (i WebAclRuleCaptchaConfigArgs) ToWebAclRuleCaptchaConfigOutput() WebAclRuleCaptchaConfigOutput {
	return i.ToWebAclRuleCaptchaConfigOutputWithContext(context.Background())
}

func (i WebAclRuleCaptchaConfigArgs) ToWebAclRuleCaptchaConfigOutputWithContext(ctx context.Context) WebAclRuleCaptchaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleCaptchaConfigOutput)
}

func (i *WebAclRuleCaptchaConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleCaptchaConfigArgs] {
	return pulumix.Val(i)
}

type WebAclRuleCaptchaConfigOutput struct{ *pulumi.OutputState }

func (WebAclRuleCaptchaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleCaptchaConfig)(nil)).Elem()
}

func (o WebAclRuleCaptchaConfigOutput) ToWebAclRuleCaptchaConfigOutput() WebAclRuleCaptchaConfigOutput {
	return o
}

func (o WebAclRuleCaptchaConfigOutput) ToWebAclRuleCaptchaConfigOutputWithContext(ctx context.Context) WebAclRuleCaptchaConfigOutput {
	return o
}

func (o WebAclRuleCaptchaConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleCaptchaConfig] {
	return pulumix.Output[WebAclRuleCaptchaConfig]{
		OutputState: o.OutputState,
	}
}

// Defines custom immunity time. See `immunityTimeProperty` below for details.
func (o WebAclRuleCaptchaConfigOutput) ImmunityTimeProperty() pulumix.GPtrOutput[WebAclRuleCaptchaConfigImmunityTimeProperty, WebAclRuleCaptchaConfigImmunityTimePropertyOutput] {
	value := pulumix.Apply[WebAclRuleCaptchaConfig](o, func(v WebAclRuleCaptchaConfig) *WebAclRuleCaptchaConfigImmunityTimeProperty {
		return v.ImmunityTimeProperty
	})
	return pulumix.GPtrOutput[WebAclRuleCaptchaConfigImmunityTimeProperty, WebAclRuleCaptchaConfigImmunityTimePropertyOutput]{OutputState: value.OutputState}
}

type WebAclRuleCaptchaConfigImmunityTimeProperty struct {
	// The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by AWS WAF. The default setting is 300.
	ImmunityTime *int `pulumi:"immunityTime"`
}

type WebAclRuleCaptchaConfigImmunityTimePropertyArgs struct {
	// The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by AWS WAF. The default setting is 300.
	ImmunityTime pulumix.Input[*int] `pulumi:"immunityTime"`
}

func (WebAclRuleCaptchaConfigImmunityTimePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleCaptchaConfigImmunityTimeProperty)(nil)).Elem()
}

func (i WebAclRuleCaptchaConfigImmunityTimePropertyArgs) ToWebAclRuleCaptchaConfigImmunityTimePropertyOutput() WebAclRuleCaptchaConfigImmunityTimePropertyOutput {
	return i.ToWebAclRuleCaptchaConfigImmunityTimePropertyOutputWithContext(context.Background())
}

func (i WebAclRuleCaptchaConfigImmunityTimePropertyArgs) ToWebAclRuleCaptchaConfigImmunityTimePropertyOutputWithContext(ctx context.Context) WebAclRuleCaptchaConfigImmunityTimePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleCaptchaConfigImmunityTimePropertyOutput)
}

func (i *WebAclRuleCaptchaConfigImmunityTimePropertyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleCaptchaConfigImmunityTimePropertyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleCaptchaConfigImmunityTimePropertyOutput struct{ *pulumi.OutputState }

func (WebAclRuleCaptchaConfigImmunityTimePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleCaptchaConfigImmunityTimeProperty)(nil)).Elem()
}

func (o WebAclRuleCaptchaConfigImmunityTimePropertyOutput) ToWebAclRuleCaptchaConfigImmunityTimePropertyOutput() WebAclRuleCaptchaConfigImmunityTimePropertyOutput {
	return o
}

func (o WebAclRuleCaptchaConfigImmunityTimePropertyOutput) ToWebAclRuleCaptchaConfigImmunityTimePropertyOutputWithContext(ctx context.Context) WebAclRuleCaptchaConfigImmunityTimePropertyOutput {
	return o
}

func (o WebAclRuleCaptchaConfigImmunityTimePropertyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleCaptchaConfigImmunityTimeProperty] {
	return pulumix.Output[WebAclRuleCaptchaConfigImmunityTimeProperty]{
		OutputState: o.OutputState,
	}
}

// The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by AWS WAF. The default setting is 300.
func (o WebAclRuleCaptchaConfigImmunityTimePropertyOutput) ImmunityTime() pulumix.Output[*int] {
	return pulumix.Apply[WebAclRuleCaptchaConfigImmunityTimeProperty](o, func(v WebAclRuleCaptchaConfigImmunityTimeProperty) *int { return v.ImmunityTime })
}

type WebAclRuleOverrideAction struct {
	// Override the rule action setting to count (i.e., only count matches). Configured as an empty block `{}`.
	Count *WebAclRuleOverrideActionCount `pulumi:"count"`
	// Don't override the rule action setting. Configured as an empty block `{}`.
	None *WebAclRuleOverrideActionNone `pulumi:"none"`
}

type WebAclRuleOverrideActionArgs struct {
	// Override the rule action setting to count (i.e., only count matches). Configured as an empty block `{}`.
	Count pulumix.Input[*WebAclRuleOverrideActionCountArgs] `pulumi:"count"`
	// Don't override the rule action setting. Configured as an empty block `{}`.
	None pulumix.Input[*WebAclRuleOverrideActionNoneArgs] `pulumi:"none"`
}

func (WebAclRuleOverrideActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideAction)(nil)).Elem()
}

func (i WebAclRuleOverrideActionArgs) ToWebAclRuleOverrideActionOutput() WebAclRuleOverrideActionOutput {
	return i.ToWebAclRuleOverrideActionOutputWithContext(context.Background())
}

func (i WebAclRuleOverrideActionArgs) ToWebAclRuleOverrideActionOutputWithContext(ctx context.Context) WebAclRuleOverrideActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOverrideActionOutput)
}

func (i *WebAclRuleOverrideActionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleOverrideActionArgs] {
	return pulumix.Val(i)
}

type WebAclRuleOverrideActionOutput struct{ *pulumi.OutputState }

func (WebAclRuleOverrideActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideAction)(nil)).Elem()
}

func (o WebAclRuleOverrideActionOutput) ToWebAclRuleOverrideActionOutput() WebAclRuleOverrideActionOutput {
	return o
}

func (o WebAclRuleOverrideActionOutput) ToWebAclRuleOverrideActionOutputWithContext(ctx context.Context) WebAclRuleOverrideActionOutput {
	return o
}

func (o WebAclRuleOverrideActionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleOverrideAction] {
	return pulumix.Output[WebAclRuleOverrideAction]{
		OutputState: o.OutputState,
	}
}

// Override the rule action setting to count (i.e., only count matches). Configured as an empty block `{}`.
func (o WebAclRuleOverrideActionOutput) Count() pulumix.GPtrOutput[WebAclRuleOverrideActionCount, WebAclRuleOverrideActionCountOutput] {
	value := pulumix.Apply[WebAclRuleOverrideAction](o, func(v WebAclRuleOverrideAction) *WebAclRuleOverrideActionCount { return v.Count })
	return pulumix.GPtrOutput[WebAclRuleOverrideActionCount, WebAclRuleOverrideActionCountOutput]{OutputState: value.OutputState}
}

// Don't override the rule action setting. Configured as an empty block `{}`.
func (o WebAclRuleOverrideActionOutput) None() pulumix.GPtrOutput[WebAclRuleOverrideActionNone, WebAclRuleOverrideActionNoneOutput] {
	value := pulumix.Apply[WebAclRuleOverrideAction](o, func(v WebAclRuleOverrideAction) *WebAclRuleOverrideActionNone { return v.None })
	return pulumix.GPtrOutput[WebAclRuleOverrideActionNone, WebAclRuleOverrideActionNoneOutput]{OutputState: value.OutputState}
}

type WebAclRuleOverrideActionCount struct {
}

type WebAclRuleOverrideActionCountArgs struct {
}

func (WebAclRuleOverrideActionCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideActionCount)(nil)).Elem()
}

func (i WebAclRuleOverrideActionCountArgs) ToWebAclRuleOverrideActionCountOutput() WebAclRuleOverrideActionCountOutput {
	return i.ToWebAclRuleOverrideActionCountOutputWithContext(context.Background())
}

func (i WebAclRuleOverrideActionCountArgs) ToWebAclRuleOverrideActionCountOutputWithContext(ctx context.Context) WebAclRuleOverrideActionCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOverrideActionCountOutput)
}

func (i *WebAclRuleOverrideActionCountArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleOverrideActionCountArgs] {
	return pulumix.Val(i)
}

type WebAclRuleOverrideActionCountOutput struct{ *pulumi.OutputState }

func (WebAclRuleOverrideActionCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideActionCount)(nil)).Elem()
}

func (o WebAclRuleOverrideActionCountOutput) ToWebAclRuleOverrideActionCountOutput() WebAclRuleOverrideActionCountOutput {
	return o
}

func (o WebAclRuleOverrideActionCountOutput) ToWebAclRuleOverrideActionCountOutputWithContext(ctx context.Context) WebAclRuleOverrideActionCountOutput {
	return o
}

func (o WebAclRuleOverrideActionCountOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleOverrideActionCount] {
	return pulumix.Output[WebAclRuleOverrideActionCount]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleOverrideActionNone struct {
}

type WebAclRuleOverrideActionNoneArgs struct {
}

func (WebAclRuleOverrideActionNoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideActionNone)(nil)).Elem()
}

func (i WebAclRuleOverrideActionNoneArgs) ToWebAclRuleOverrideActionNoneOutput() WebAclRuleOverrideActionNoneOutput {
	return i.ToWebAclRuleOverrideActionNoneOutputWithContext(context.Background())
}

func (i WebAclRuleOverrideActionNoneArgs) ToWebAclRuleOverrideActionNoneOutputWithContext(ctx context.Context) WebAclRuleOverrideActionNoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOverrideActionNoneOutput)
}

func (i *WebAclRuleOverrideActionNoneArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleOverrideActionNoneArgs] {
	return pulumix.Val(i)
}

type WebAclRuleOverrideActionNoneOutput struct{ *pulumi.OutputState }

func (WebAclRuleOverrideActionNoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideActionNone)(nil)).Elem()
}

func (o WebAclRuleOverrideActionNoneOutput) ToWebAclRuleOverrideActionNoneOutput() WebAclRuleOverrideActionNoneOutput {
	return o
}

func (o WebAclRuleOverrideActionNoneOutput) ToWebAclRuleOverrideActionNoneOutputWithContext(ctx context.Context) WebAclRuleOverrideActionNoneOutput {
	return o
}

func (o WebAclRuleOverrideActionNoneOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleOverrideActionNone] {
	return pulumix.Output[WebAclRuleOverrideActionNone]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleRuleLabel struct {
	// Label string.
	Name string `pulumi:"name"`
}

type WebAclRuleRuleLabelArgs struct {
	// Label string.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleRuleLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleRuleLabel)(nil)).Elem()
}

func (i WebAclRuleRuleLabelArgs) ToWebAclRuleRuleLabelOutput() WebAclRuleRuleLabelOutput {
	return i.ToWebAclRuleRuleLabelOutputWithContext(context.Background())
}

func (i WebAclRuleRuleLabelArgs) ToWebAclRuleRuleLabelOutputWithContext(ctx context.Context) WebAclRuleRuleLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleRuleLabelOutput)
}

func (i *WebAclRuleRuleLabelArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleRuleLabelArgs] {
	return pulumix.Val(i)
}

type WebAclRuleRuleLabelOutput struct{ *pulumi.OutputState }

func (WebAclRuleRuleLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleRuleLabel)(nil)).Elem()
}

func (o WebAclRuleRuleLabelOutput) ToWebAclRuleRuleLabelOutput() WebAclRuleRuleLabelOutput {
	return o
}

func (o WebAclRuleRuleLabelOutput) ToWebAclRuleRuleLabelOutputWithContext(ctx context.Context) WebAclRuleRuleLabelOutput {
	return o
}

func (o WebAclRuleRuleLabelOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleRuleLabel] {
	return pulumix.Output[WebAclRuleRuleLabel]{
		OutputState: o.OutputState,
	}
}

// Label string.
func (o WebAclRuleRuleLabelOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleRuleLabel](o, func(v WebAclRuleRuleLabel) string { return v.Name })
}

type WebAclRuleStatement struct {
	// Logical rule statement used to combine other rule statements with AND logic. See `andStatement` below for details.
	AndStatement *WebAclRuleStatementAndStatement `pulumi:"andStatement"`
	// Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byteMatchStatement` below for details.
	ByteMatchStatement *WebAclRuleStatementByteMatchStatement `pulumi:"byteMatchStatement"`
	// Rule statement used to identify web requests based on country of origin. See `geoMatchStatement` below for details.
	GeoMatchStatement *WebAclRuleStatementGeoMatchStatement `pulumi:"geoMatchStatement"`
	// Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ipSetReferenceStatement` below for details.
	IpSetReferenceStatement *WebAclRuleStatementIpSetReferenceStatement `pulumi:"ipSetReferenceStatement"`
	// Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `labelMatchStatement` below for details.
	LabelMatchStatement *WebAclRuleStatementLabelMatchStatement `pulumi:"labelMatchStatement"`
	// Rule statement used to run the rules that are defined in a managed rule group.  This statement can not be nested. See `managedRuleGroupStatement` below for details.
	ManagedRuleGroupStatement *WebAclRuleStatementManagedRuleGroupStatement `pulumi:"managedRuleGroupStatement"`
	// Logical rule statement used to negate the results of another rule statement. See `notStatement` below for details.
	NotStatement *WebAclRuleStatementNotStatement `pulumi:"notStatement"`
	// Logical rule statement used to combine other rule statements with OR logic. See `orStatement` below for details.
	OrStatement *WebAclRuleStatementOrStatement `pulumi:"orStatement"`
	// Rate-based rule tracks the rate of requests for each originating `IP address`, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any `5-minute` time span. This statement can not be nested. See `rateBasedStatement` below for details.
	RateBasedStatement *WebAclRuleStatementRateBasedStatement `pulumi:"rateBasedStatement"`
	// Rule statement used to search web request components for a match against a single regular expression. See `regexMatchStatement` below for details.
	RegexMatchStatement *WebAclRuleStatementRegexMatchStatement `pulumi:"regexMatchStatement"`
	// Rule statement used to search web request components for matches with regular expressions. See `regexPatternSetReferenceStatement` below for details.
	RegexPatternSetReferenceStatement *WebAclRuleStatementRegexPatternSetReferenceStatement `pulumi:"regexPatternSetReferenceStatement"`
	// Rule statement used to run the rules that are defined in an WAFv2 Rule Group. See `ruleGroupReferenceStatement` below for details.
	RuleGroupReferenceStatement *WebAclRuleStatementRuleGroupReferenceStatement `pulumi:"ruleGroupReferenceStatement"`
	// Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See `sizeConstraintStatement` below for more details.
	SizeConstraintStatement *WebAclRuleStatementSizeConstraintStatement `pulumi:"sizeConstraintStatement"`
	// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqliMatchStatement` below for details.
	SqliMatchStatement *WebAclRuleStatementSqliMatchStatement `pulumi:"sqliMatchStatement"`
	// Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xssMatchStatement` below for details.
	XssMatchStatement *WebAclRuleStatementXssMatchStatement `pulumi:"xssMatchStatement"`
}

type WebAclRuleStatementArgs struct {
	// Logical rule statement used to combine other rule statements with AND logic. See `andStatement` below for details.
	AndStatement pulumix.Input[*WebAclRuleStatementAndStatementArgs] `pulumi:"andStatement"`
	// Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byteMatchStatement` below for details.
	ByteMatchStatement pulumix.Input[*WebAclRuleStatementByteMatchStatementArgs] `pulumi:"byteMatchStatement"`
	// Rule statement used to identify web requests based on country of origin. See `geoMatchStatement` below for details.
	GeoMatchStatement pulumix.Input[*WebAclRuleStatementGeoMatchStatementArgs] `pulumi:"geoMatchStatement"`
	// Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ipSetReferenceStatement` below for details.
	IpSetReferenceStatement pulumix.Input[*WebAclRuleStatementIpSetReferenceStatementArgs] `pulumi:"ipSetReferenceStatement"`
	// Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `labelMatchStatement` below for details.
	LabelMatchStatement pulumix.Input[*WebAclRuleStatementLabelMatchStatementArgs] `pulumi:"labelMatchStatement"`
	// Rule statement used to run the rules that are defined in a managed rule group.  This statement can not be nested. See `managedRuleGroupStatement` below for details.
	ManagedRuleGroupStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementArgs] `pulumi:"managedRuleGroupStatement"`
	// Logical rule statement used to negate the results of another rule statement. See `notStatement` below for details.
	NotStatement pulumix.Input[*WebAclRuleStatementNotStatementArgs] `pulumi:"notStatement"`
	// Logical rule statement used to combine other rule statements with OR logic. See `orStatement` below for details.
	OrStatement pulumix.Input[*WebAclRuleStatementOrStatementArgs] `pulumi:"orStatement"`
	// Rate-based rule tracks the rate of requests for each originating `IP address`, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any `5-minute` time span. This statement can not be nested. See `rateBasedStatement` below for details.
	RateBasedStatement pulumix.Input[*WebAclRuleStatementRateBasedStatementArgs] `pulumi:"rateBasedStatement"`
	// Rule statement used to search web request components for a match against a single regular expression. See `regexMatchStatement` below for details.
	RegexMatchStatement pulumix.Input[*WebAclRuleStatementRegexMatchStatementArgs] `pulumi:"regexMatchStatement"`
	// Rule statement used to search web request components for matches with regular expressions. See `regexPatternSetReferenceStatement` below for details.
	RegexPatternSetReferenceStatement pulumix.Input[*WebAclRuleStatementRegexPatternSetReferenceStatementArgs] `pulumi:"regexPatternSetReferenceStatement"`
	// Rule statement used to run the rules that are defined in an WAFv2 Rule Group. See `ruleGroupReferenceStatement` below for details.
	RuleGroupReferenceStatement pulumix.Input[*WebAclRuleStatementRuleGroupReferenceStatementArgs] `pulumi:"ruleGroupReferenceStatement"`
	// Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See `sizeConstraintStatement` below for more details.
	SizeConstraintStatement pulumix.Input[*WebAclRuleStatementSizeConstraintStatementArgs] `pulumi:"sizeConstraintStatement"`
	// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqliMatchStatement` below for details.
	SqliMatchStatement pulumix.Input[*WebAclRuleStatementSqliMatchStatementArgs] `pulumi:"sqliMatchStatement"`
	// Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xssMatchStatement` below for details.
	XssMatchStatement pulumix.Input[*WebAclRuleStatementXssMatchStatementArgs] `pulumi:"xssMatchStatement"`
}

func (WebAclRuleStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatement)(nil)).Elem()
}

func (i WebAclRuleStatementArgs) ToWebAclRuleStatementOutput() WebAclRuleStatementOutput {
	return i.ToWebAclRuleStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementArgs) ToWebAclRuleStatementOutputWithContext(ctx context.Context) WebAclRuleStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementOutput)
}

func (i *WebAclRuleStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatement)(nil)).Elem()
}

func (o WebAclRuleStatementOutput) ToWebAclRuleStatementOutput() WebAclRuleStatementOutput {
	return o
}

func (o WebAclRuleStatementOutput) ToWebAclRuleStatementOutputWithContext(ctx context.Context) WebAclRuleStatementOutput {
	return o
}

func (o WebAclRuleStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatement] {
	return pulumix.Output[WebAclRuleStatement]{
		OutputState: o.OutputState,
	}
}

// Logical rule statement used to combine other rule statements with AND logic. See `andStatement` below for details.
func (o WebAclRuleStatementOutput) AndStatement() pulumix.GPtrOutput[WebAclRuleStatementAndStatement, WebAclRuleStatementAndStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementAndStatement { return v.AndStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementAndStatement, WebAclRuleStatementAndStatementOutput]{OutputState: value.OutputState}
}

// Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byteMatchStatement` below for details.
func (o WebAclRuleStatementOutput) ByteMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatement, WebAclRuleStatementByteMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementByteMatchStatement { return v.ByteMatchStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatement, WebAclRuleStatementByteMatchStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to identify web requests based on country of origin. See `geoMatchStatement` below for details.
func (o WebAclRuleStatementOutput) GeoMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementGeoMatchStatement, WebAclRuleStatementGeoMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementGeoMatchStatement { return v.GeoMatchStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementGeoMatchStatement, WebAclRuleStatementGeoMatchStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ipSetReferenceStatement` below for details.
func (o WebAclRuleStatementOutput) IpSetReferenceStatement() pulumix.GPtrOutput[WebAclRuleStatementIpSetReferenceStatement, WebAclRuleStatementIpSetReferenceStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementIpSetReferenceStatement {
		return v.IpSetReferenceStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementIpSetReferenceStatement, WebAclRuleStatementIpSetReferenceStatementOutput]{OutputState: value.OutputState}
}

// Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `labelMatchStatement` below for details.
func (o WebAclRuleStatementOutput) LabelMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementLabelMatchStatement, WebAclRuleStatementLabelMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementLabelMatchStatement { return v.LabelMatchStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementLabelMatchStatement, WebAclRuleStatementLabelMatchStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to run the rules that are defined in a managed rule group.  This statement can not be nested. See `managedRuleGroupStatement` below for details.
func (o WebAclRuleStatementOutput) ManagedRuleGroupStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatement, WebAclRuleStatementManagedRuleGroupStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementManagedRuleGroupStatement {
		return v.ManagedRuleGroupStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatement, WebAclRuleStatementManagedRuleGroupStatementOutput]{OutputState: value.OutputState}
}

// Logical rule statement used to negate the results of another rule statement. See `notStatement` below for details.
func (o WebAclRuleStatementOutput) NotStatement() pulumix.GPtrOutput[WebAclRuleStatementNotStatement, WebAclRuleStatementNotStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementNotStatement { return v.NotStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementNotStatement, WebAclRuleStatementNotStatementOutput]{OutputState: value.OutputState}
}

// Logical rule statement used to combine other rule statements with OR logic. See `orStatement` below for details.
func (o WebAclRuleStatementOutput) OrStatement() pulumix.GPtrOutput[WebAclRuleStatementOrStatement, WebAclRuleStatementOrStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementOrStatement { return v.OrStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementOrStatement, WebAclRuleStatementOrStatementOutput]{OutputState: value.OutputState}
}

// Rate-based rule tracks the rate of requests for each originating `IP address`, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any `5-minute` time span. This statement can not be nested. See `rateBasedStatement` below for details.
func (o WebAclRuleStatementOutput) RateBasedStatement() pulumix.GPtrOutput[WebAclRuleStatementRateBasedStatement, WebAclRuleStatementRateBasedStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementRateBasedStatement { return v.RateBasedStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementRateBasedStatement, WebAclRuleStatementRateBasedStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to search web request components for a match against a single regular expression. See `regexMatchStatement` below for details.
func (o WebAclRuleStatementOutput) RegexMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementRegexMatchStatement, WebAclRuleStatementRegexMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementRegexMatchStatement { return v.RegexMatchStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementRegexMatchStatement, WebAclRuleStatementRegexMatchStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to search web request components for matches with regular expressions. See `regexPatternSetReferenceStatement` below for details.
func (o WebAclRuleStatementOutput) RegexPatternSetReferenceStatement() pulumix.GPtrOutput[WebAclRuleStatementRegexPatternSetReferenceStatement, WebAclRuleStatementRegexPatternSetReferenceStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementRegexPatternSetReferenceStatement {
		return v.RegexPatternSetReferenceStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementRegexPatternSetReferenceStatement, WebAclRuleStatementRegexPatternSetReferenceStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to run the rules that are defined in an WAFv2 Rule Group. See `ruleGroupReferenceStatement` below for details.
func (o WebAclRuleStatementOutput) RuleGroupReferenceStatement() pulumix.GPtrOutput[WebAclRuleStatementRuleGroupReferenceStatement, WebAclRuleStatementRuleGroupReferenceStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementRuleGroupReferenceStatement {
		return v.RuleGroupReferenceStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementRuleGroupReferenceStatement, WebAclRuleStatementRuleGroupReferenceStatementOutput]{OutputState: value.OutputState}
}

// Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See `sizeConstraintStatement` below for more details.
func (o WebAclRuleStatementOutput) SizeConstraintStatement() pulumix.GPtrOutput[WebAclRuleStatementSizeConstraintStatement, WebAclRuleStatementSizeConstraintStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementSizeConstraintStatement {
		return v.SizeConstraintStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementSizeConstraintStatement, WebAclRuleStatementSizeConstraintStatementOutput]{OutputState: value.OutputState}
}

// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqliMatchStatement` below for details.
func (o WebAclRuleStatementOutput) SqliMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementSqliMatchStatement, WebAclRuleStatementSqliMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementSqliMatchStatement { return v.SqliMatchStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementSqliMatchStatement, WebAclRuleStatementSqliMatchStatementOutput]{OutputState: value.OutputState}
}

// Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xssMatchStatement` below for details.
func (o WebAclRuleStatementOutput) XssMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementXssMatchStatement, WebAclRuleStatementXssMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatement](o, func(v WebAclRuleStatement) *WebAclRuleStatementXssMatchStatement { return v.XssMatchStatement })
	return pulumix.GPtrOutput[WebAclRuleStatementXssMatchStatement, WebAclRuleStatementXssMatchStatementOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementAndStatement struct {
	// The statements to combine.
	Statements []WebAclRuleStatement `pulumi:"statements"`
}

type WebAclRuleStatementAndStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*WebAclRuleStatementArgs] `pulumi:"statements"`
}

func (WebAclRuleStatementAndStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementAndStatement)(nil)).Elem()
}

func (i WebAclRuleStatementAndStatementArgs) ToWebAclRuleStatementAndStatementOutput() WebAclRuleStatementAndStatementOutput {
	return i.ToWebAclRuleStatementAndStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementAndStatementArgs) ToWebAclRuleStatementAndStatementOutputWithContext(ctx context.Context) WebAclRuleStatementAndStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementAndStatementOutput)
}

func (i *WebAclRuleStatementAndStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementAndStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementAndStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementAndStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementAndStatement)(nil)).Elem()
}

func (o WebAclRuleStatementAndStatementOutput) ToWebAclRuleStatementAndStatementOutput() WebAclRuleStatementAndStatementOutput {
	return o
}

func (o WebAclRuleStatementAndStatementOutput) ToWebAclRuleStatementAndStatementOutputWithContext(ctx context.Context) WebAclRuleStatementAndStatementOutput {
	return o
}

func (o WebAclRuleStatementAndStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementAndStatement] {
	return pulumix.Output[WebAclRuleStatementAndStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o WebAclRuleStatementAndStatementOutput) Statements() pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementAndStatement](o, func(v WebAclRuleStatementAndStatement) []WebAclRuleStatement { return v.Statements })
	return pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementByteMatchStatement struct {
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch *WebAclRuleStatementByteMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
	PositionalConstraint string `pulumi:"positionalConstraint"`
	// String value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
	SearchString string `pulumi:"searchString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations []WebAclRuleStatementByteMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type WebAclRuleStatementByteMatchStatementArgs struct {
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
	PositionalConstraint pulumix.Input[string] `pulumi:"positionalConstraint"`
	// String value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
	SearchString pulumix.Input[string] `pulumi:"searchString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations pulumix.Input[[]*WebAclRuleStatementByteMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (WebAclRuleStatementByteMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatement)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementArgs) ToWebAclRuleStatementByteMatchStatementOutput() WebAclRuleStatementByteMatchStatementOutput {
	return i.ToWebAclRuleStatementByteMatchStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementArgs) ToWebAclRuleStatementByteMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementOutput)
}

func (i *WebAclRuleStatementByteMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatement)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementOutput) ToWebAclRuleStatementByteMatchStatementOutput() WebAclRuleStatementByteMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementOutput) ToWebAclRuleStatementByteMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatement] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatement]{
		OutputState: o.OutputState,
	}
}

// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
func (o WebAclRuleStatementByteMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatch, WebAclRuleStatementByteMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatement](o, func(v WebAclRuleStatementByteMatchStatement) *WebAclRuleStatementByteMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatch, WebAclRuleStatementByteMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
func (o WebAclRuleStatementByteMatchStatementOutput) PositionalConstraint() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatement](o, func(v WebAclRuleStatementByteMatchStatement) string { return v.PositionalConstraint })
}

// String value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
func (o WebAclRuleStatementByteMatchStatementOutput) SearchString() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatement](o, func(v WebAclRuleStatementByteMatchStatement) string { return v.SearchString })
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
func (o WebAclRuleStatementByteMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[WebAclRuleStatementByteMatchStatementTextTransformation, WebAclRuleStatementByteMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatement](o, func(v WebAclRuleStatementByteMatchStatement) []WebAclRuleStatementByteMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[WebAclRuleStatementByteMatchStatementTextTransformation, WebAclRuleStatementByteMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementByteMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body *WebAclRuleStatementByteMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies *WebAclRuleStatementByteMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers []WebAclRuleStatementByteMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody *WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *WebAclRuleStatementByteMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *WebAclRuleStatementByteMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader *WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument *WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *WebAclRuleStatementByteMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers pulumix.Input[[]*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatch)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchOutput() WebAclRuleStatementByteMatchStatementFieldToMatchOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatch)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchOutput() WebAclRuleStatementByteMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatch] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers. See `body` below for details.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchBody, WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementByteMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchBody, WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See `cookies` below for details.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchCookies, WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementByteMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchCookies, WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See `headers` below for details.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[WebAclRuleStatementByteMatchStatementFieldToMatchHeader, WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) []WebAclRuleStatementByteMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[WebAclRuleStatementByteMatchStatementFieldToMatchHeader, WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See `jsonBody` for details.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody, WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody, WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchMethod, WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementByteMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchMethod, WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchQueryString, WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementByteMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchQueryString, WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See `singleHeader` below for details.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See `singleQueryArgument` below for details.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchUriPath, WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementByteMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchUriPath, WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments struct {
}

type WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchBody struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchBodyArgs struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchBody] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchBody](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchBody) *string { return v.OversizeHandling })
}

type WebAclRuleStatementByteMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchCookies] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchCookies) []WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchCookies) string { return v.MatchScope })
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchCookies) string { return v.OversizeHandling })
}

type WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                 `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                 `pulumi:"includedCookies"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                     `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                     `pulumi:"includedCookies"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern) *WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchHeader] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchHeader) WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchHeader) string { return v.MatchScope })
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchHeader) string { return v.OversizeHandling })
}

type WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern) *WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody) WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody) string { return v.MatchScope })
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchJsonBody) *string { return v.OversizeHandling })
}

type WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                  `pulumi:"includedPaths"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                      `pulumi:"includedPaths"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern) *WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchMethod struct {
}

type WebAclRuleStatementByteMatchStatementFieldToMatchMethodArgs struct {
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchMethod] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchQueryString struct {
}

type WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringArgs struct {
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader) string { return v.Name })
}

type WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument](o, func(v WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument) string { return v.Name })
}

type WebAclRuleStatementByteMatchStatementFieldToMatchUriPath struct {
}

type WebAclRuleStatementByteMatchStatementFieldToMatchUriPathArgs struct {
}

func (WebAclRuleStatementByteMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput {
	return i.ToWebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput)
}

func (i *WebAclRuleStatementByteMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementByteMatchStatementTextTransformation struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type WebAclRuleStatementByteMatchStatementTextTransformationArgs struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclRuleStatementByteMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementTextTransformation)(nil)).Elem()
}

func (i WebAclRuleStatementByteMatchStatementTextTransformationArgs) ToWebAclRuleStatementByteMatchStatementTextTransformationOutput() WebAclRuleStatementByteMatchStatementTextTransformationOutput {
	return i.ToWebAclRuleStatementByteMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i WebAclRuleStatementByteMatchStatementTextTransformationArgs) ToWebAclRuleStatementByteMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementByteMatchStatementTextTransformationOutput)
}

func (i *WebAclRuleStatementByteMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementByteMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementByteMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementByteMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementByteMatchStatementTextTransformation)(nil)).Elem()
}

func (o WebAclRuleStatementByteMatchStatementTextTransformationOutput) ToWebAclRuleStatementByteMatchStatementTextTransformationOutput() WebAclRuleStatementByteMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementTextTransformationOutput) ToWebAclRuleStatementByteMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementByteMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementByteMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementByteMatchStatementTextTransformation] {
	return pulumix.Output[WebAclRuleStatementByteMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o WebAclRuleStatementByteMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementTextTransformation](o, func(v WebAclRuleStatementByteMatchStatementTextTransformation) int { return v.Priority })
}

// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o WebAclRuleStatementByteMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementByteMatchStatementTextTransformation](o, func(v WebAclRuleStatementByteMatchStatementTextTransformation) string { return v.Type })
}

type WebAclRuleStatementGeoMatchStatement struct {
	// Array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
	CountryCodes []string `pulumi:"countryCodes"`
	// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `forwardedIpConfig` below for details.
	ForwardedIpConfig *WebAclRuleStatementGeoMatchStatementForwardedIpConfig `pulumi:"forwardedIpConfig"`
}

type WebAclRuleStatementGeoMatchStatementArgs struct {
	// Array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
	CountryCodes pulumix.Input[[]string] `pulumi:"countryCodes"`
	// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `forwardedIpConfig` below for details.
	ForwardedIpConfig pulumix.Input[*WebAclRuleStatementGeoMatchStatementForwardedIpConfigArgs] `pulumi:"forwardedIpConfig"`
}

func (WebAclRuleStatementGeoMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementGeoMatchStatement)(nil)).Elem()
}

func (i WebAclRuleStatementGeoMatchStatementArgs) ToWebAclRuleStatementGeoMatchStatementOutput() WebAclRuleStatementGeoMatchStatementOutput {
	return i.ToWebAclRuleStatementGeoMatchStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementGeoMatchStatementArgs) ToWebAclRuleStatementGeoMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementGeoMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementGeoMatchStatementOutput)
}

func (i *WebAclRuleStatementGeoMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementGeoMatchStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementGeoMatchStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementGeoMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementGeoMatchStatement)(nil)).Elem()
}

func (o WebAclRuleStatementGeoMatchStatementOutput) ToWebAclRuleStatementGeoMatchStatementOutput() WebAclRuleStatementGeoMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementGeoMatchStatementOutput) ToWebAclRuleStatementGeoMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementGeoMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementGeoMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementGeoMatchStatement] {
	return pulumix.Output[WebAclRuleStatementGeoMatchStatement]{
		OutputState: o.OutputState,
	}
}

// Array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
func (o WebAclRuleStatementGeoMatchStatementOutput) CountryCodes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementGeoMatchStatement](o, func(v WebAclRuleStatementGeoMatchStatement) []string { return v.CountryCodes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `forwardedIpConfig` below for details.
func (o WebAclRuleStatementGeoMatchStatementOutput) ForwardedIpConfig() pulumix.GPtrOutput[WebAclRuleStatementGeoMatchStatementForwardedIpConfig, WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput] {
	value := pulumix.Apply[WebAclRuleStatementGeoMatchStatement](o, func(v WebAclRuleStatementGeoMatchStatement) *WebAclRuleStatementGeoMatchStatementForwardedIpConfig {
		return v.ForwardedIpConfig
	})
	return pulumix.GPtrOutput[WebAclRuleStatementGeoMatchStatementForwardedIpConfig, WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementGeoMatchStatementForwardedIpConfig struct {
	// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	// Name of the HTTP header to use for the IP address.
	HeaderName string `pulumi:"headerName"`
}

type WebAclRuleStatementGeoMatchStatementForwardedIpConfigArgs struct {
	// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior pulumix.Input[string] `pulumi:"fallbackBehavior"`
	// Name of the HTTP header to use for the IP address.
	HeaderName pulumix.Input[string] `pulumi:"headerName"`
}

func (WebAclRuleStatementGeoMatchStatementForwardedIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementGeoMatchStatementForwardedIpConfig)(nil)).Elem()
}

func (i WebAclRuleStatementGeoMatchStatementForwardedIpConfigArgs) ToWebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput() WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput {
	return i.ToWebAclRuleStatementGeoMatchStatementForwardedIpConfigOutputWithContext(context.Background())
}

func (i WebAclRuleStatementGeoMatchStatementForwardedIpConfigArgs) ToWebAclRuleStatementGeoMatchStatementForwardedIpConfigOutputWithContext(ctx context.Context) WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput)
}

func (i *WebAclRuleStatementGeoMatchStatementForwardedIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementGeoMatchStatementForwardedIpConfigArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementGeoMatchStatementForwardedIpConfig)(nil)).Elem()
}

func (o WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput) ToWebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput() WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput {
	return o
}

func (o WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput) ToWebAclRuleStatementGeoMatchStatementForwardedIpConfigOutputWithContext(ctx context.Context) WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput {
	return o
}

func (o WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementGeoMatchStatementForwardedIpConfig] {
	return pulumix.Output[WebAclRuleStatementGeoMatchStatementForwardedIpConfig]{
		OutputState: o.OutputState,
	}
}

// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
func (o WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput) FallbackBehavior() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementGeoMatchStatementForwardedIpConfig](o, func(v WebAclRuleStatementGeoMatchStatementForwardedIpConfig) string { return v.FallbackBehavior })
}

// Name of the HTTP header to use for the IP address.
func (o WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput) HeaderName() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementGeoMatchStatementForwardedIpConfig](o, func(v WebAclRuleStatementGeoMatchStatementForwardedIpConfig) string { return v.HeaderName })
}

type WebAclRuleStatementIpSetReferenceStatement struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn string `pulumi:"arn"`
	// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `ipSetForwardedIpConfig` below for more details.
	IpSetForwardedIpConfig *WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig `pulumi:"ipSetForwardedIpConfig"`
}

type WebAclRuleStatementIpSetReferenceStatementArgs struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `ipSetForwardedIpConfig` below for more details.
	IpSetForwardedIpConfig pulumix.Input[*WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs] `pulumi:"ipSetForwardedIpConfig"`
}

func (WebAclRuleStatementIpSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementIpSetReferenceStatement)(nil)).Elem()
}

func (i WebAclRuleStatementIpSetReferenceStatementArgs) ToWebAclRuleStatementIpSetReferenceStatementOutput() WebAclRuleStatementIpSetReferenceStatementOutput {
	return i.ToWebAclRuleStatementIpSetReferenceStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementIpSetReferenceStatementArgs) ToWebAclRuleStatementIpSetReferenceStatementOutputWithContext(ctx context.Context) WebAclRuleStatementIpSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementIpSetReferenceStatementOutput)
}

func (i *WebAclRuleStatementIpSetReferenceStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementIpSetReferenceStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementIpSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementIpSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementIpSetReferenceStatement)(nil)).Elem()
}

func (o WebAclRuleStatementIpSetReferenceStatementOutput) ToWebAclRuleStatementIpSetReferenceStatementOutput() WebAclRuleStatementIpSetReferenceStatementOutput {
	return o
}

func (o WebAclRuleStatementIpSetReferenceStatementOutput) ToWebAclRuleStatementIpSetReferenceStatementOutputWithContext(ctx context.Context) WebAclRuleStatementIpSetReferenceStatementOutput {
	return o
}

func (o WebAclRuleStatementIpSetReferenceStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementIpSetReferenceStatement] {
	return pulumix.Output[WebAclRuleStatementIpSetReferenceStatement]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the IP Set that this statement references.
func (o WebAclRuleStatementIpSetReferenceStatementOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementIpSetReferenceStatement](o, func(v WebAclRuleStatementIpSetReferenceStatement) string { return v.Arn })
}

// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `ipSetForwardedIpConfig` below for more details.
func (o WebAclRuleStatementIpSetReferenceStatementOutput) IpSetForwardedIpConfig() pulumix.GPtrOutput[WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig, WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput] {
	value := pulumix.Apply[WebAclRuleStatementIpSetReferenceStatement](o, func(v WebAclRuleStatementIpSetReferenceStatement) *WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig {
		return v.IpSetForwardedIpConfig
	})
	return pulumix.GPtrOutput[WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig, WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig struct {
	// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	// Name of the HTTP header to use for the IP address.
	HeaderName string `pulumi:"headerName"`
	// Position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
	Position string `pulumi:"position"`
}

type WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs struct {
	// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior pulumix.Input[string] `pulumi:"fallbackBehavior"`
	// Name of the HTTP header to use for the IP address.
	HeaderName pulumix.Input[string] `pulumi:"headerName"`
	// Position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
	Position pulumix.Input[string] `pulumi:"position"`
}

func (WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig)(nil)).Elem()
}

func (i WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToWebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput() WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return i.ToWebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(context.Background())
}

func (i WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToWebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(ctx context.Context) WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput)
}

func (i *WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig)(nil)).Elem()
}

func (o WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToWebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput() WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return o
}

func (o WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToWebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(ctx context.Context) WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return o
}

func (o WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig] {
	return pulumix.Output[WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig]{
		OutputState: o.OutputState,
	}
}

// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
func (o WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) FallbackBehavior() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig) string {
		return v.FallbackBehavior
	})
}

// Name of the HTTP header to use for the IP address.
func (o WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) HeaderName() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig) string { return v.HeaderName })
}

// Position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
func (o WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) Position() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfig) string { return v.Position })
}

type WebAclRuleStatementLabelMatchStatement struct {
	// String to match against.
	Key string `pulumi:"key"`
	// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
	Scope string `pulumi:"scope"`
}

type WebAclRuleStatementLabelMatchStatementArgs struct {
	// String to match against.
	Key pulumix.Input[string] `pulumi:"key"`
	// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
	Scope pulumix.Input[string] `pulumi:"scope"`
}

func (WebAclRuleStatementLabelMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementLabelMatchStatement)(nil)).Elem()
}

func (i WebAclRuleStatementLabelMatchStatementArgs) ToWebAclRuleStatementLabelMatchStatementOutput() WebAclRuleStatementLabelMatchStatementOutput {
	return i.ToWebAclRuleStatementLabelMatchStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementLabelMatchStatementArgs) ToWebAclRuleStatementLabelMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementLabelMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementLabelMatchStatementOutput)
}

func (i *WebAclRuleStatementLabelMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementLabelMatchStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementLabelMatchStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementLabelMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementLabelMatchStatement)(nil)).Elem()
}

func (o WebAclRuleStatementLabelMatchStatementOutput) ToWebAclRuleStatementLabelMatchStatementOutput() WebAclRuleStatementLabelMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementLabelMatchStatementOutput) ToWebAclRuleStatementLabelMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementLabelMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementLabelMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementLabelMatchStatement] {
	return pulumix.Output[WebAclRuleStatementLabelMatchStatement]{
		OutputState: o.OutputState,
	}
}

// String to match against.
func (o WebAclRuleStatementLabelMatchStatementOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementLabelMatchStatement](o, func(v WebAclRuleStatementLabelMatchStatement) string { return v.Key })
}

// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
func (o WebAclRuleStatementLabelMatchStatementOutput) Scope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementLabelMatchStatement](o, func(v WebAclRuleStatementLabelMatchStatement) string { return v.Scope })
}

type WebAclRuleStatementManagedRuleGroupStatement struct {
	// Additional information that's used by a managed rule group. Only one rule attribute is allowed in each config. See `managedRuleGroupConfigs` for more details
	ManagedRuleGroupConfigs []WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig `pulumi:"managedRuleGroupConfigs"`
	// Name of the managed rule group.
	Name string `pulumi:"name"`
	// Action settings to use in the place of the rule actions that are configured inside the rule group. You specify one override for each rule whose action you want to change. See `ruleActionOverride` below for details.
	RuleActionOverrides []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride `pulumi:"ruleActionOverrides"`
	// Narrows the scope of the statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See `statement` above for details.
	ScopeDownStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement `pulumi:"scopeDownStatement"`
	// Name of the managed rule group vendor.
	VendorName string `pulumi:"vendorName"`
	// Version of the managed rule group. You can set `Version_1.0` or `Version_1.1` etc. If you want to use the default version, do not set anything.
	Version *string `pulumi:"version"`
}

type WebAclRuleStatementManagedRuleGroupStatementArgs struct {
	// Additional information that's used by a managed rule group. Only one rule attribute is allowed in each config. See `managedRuleGroupConfigs` for more details
	ManagedRuleGroupConfigs pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs] `pulumi:"managedRuleGroupConfigs"`
	// Name of the managed rule group.
	Name pulumix.Input[string] `pulumi:"name"`
	// Action settings to use in the place of the rule actions that are configured inside the rule group. You specify one override for each rule whose action you want to change. See `ruleActionOverride` below for details.
	RuleActionOverrides pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideArgs] `pulumi:"ruleActionOverrides"`
	// Narrows the scope of the statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See `statement` above for details.
	ScopeDownStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs] `pulumi:"scopeDownStatement"`
	// Name of the managed rule group vendor.
	VendorName pulumix.Input[string] `pulumi:"vendorName"`
	// Version of the managed rule group. You can set `Version_1.0` or `Version_1.1` etc. If you want to use the default version, do not set anything.
	Version pulumix.Input[*string] `pulumi:"version"`
}

func (WebAclRuleStatementManagedRuleGroupStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementOutput() WebAclRuleStatementManagedRuleGroupStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementOutput() WebAclRuleStatementManagedRuleGroupStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatement]{
		OutputState: o.OutputState,
	}
}

// Additional information that's used by a managed rule group. Only one rule attribute is allowed in each config. See `managedRuleGroupConfigs` for more details
func (o WebAclRuleStatementManagedRuleGroupStatementOutput) ManagedRuleGroupConfigs() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatement) []WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig {
		return v.ManagedRuleGroupConfigs
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput]{OutputState: value.OutputState}
}

// Name of the managed rule group.
func (o WebAclRuleStatementManagedRuleGroupStatementOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatement) string { return v.Name })
}

// Action settings to use in the place of the rule actions that are configured inside the rule group. You specify one override for each rule whose action you want to change. See `ruleActionOverride` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementOutput) RuleActionOverrides() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatement) []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride {
		return v.RuleActionOverrides
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput]{OutputState: value.OutputState}
}

// Narrows the scope of the statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See `statement` above for details.
func (o WebAclRuleStatementManagedRuleGroupStatementOutput) ScopeDownStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement {
		return v.ScopeDownStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput]{OutputState: value.OutputState}
}

// Name of the managed rule group vendor.
func (o WebAclRuleStatementManagedRuleGroupStatementOutput) VendorName() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatement) string { return v.VendorName })
}

// Version of the managed rule group. You can set `Version_1.0` or `Version_1.1` etc. If you want to use the default version, do not set anything.
func (o WebAclRuleStatementManagedRuleGroupStatementOutput) Version() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatement) *string { return v.Version })
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig struct {
	// Additional configuration for using the Account Takeover Protection managed rule group. Use this to specify information such as the sign-in page of your application and the type of content to accept or reject from the client.
	AwsManagedRulesAtpRuleSet *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet `pulumi:"awsManagedRulesAtpRuleSet"`
	// Additional configuration for using the Bot Control managed rule group. Use this to specify the inspection level that you want to use. See `awsManagedRulesBotControlRuleSet` for more details
	AwsManagedRulesBotControlRuleSet *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet `pulumi:"awsManagedRulesBotControlRuleSet"`
	// The path of the login endpoint for your application.
	LoginPath *string `pulumi:"loginPath"`
	// Details about your login page password field. See `passwordField` for more details.
	PasswordField *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField `pulumi:"passwordField"`
	// The payload type for your login endpoint, either JSON or form encoded.
	PayloadType *string `pulumi:"payloadType"`
	// Details about your login page username field. See `usernameField` for more details.
	UsernameField *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField `pulumi:"usernameField"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs struct {
	// Additional configuration for using the Account Takeover Protection managed rule group. Use this to specify information such as the sign-in page of your application and the type of content to accept or reject from the client.
	AwsManagedRulesAtpRuleSet pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs] `pulumi:"awsManagedRulesAtpRuleSet"`
	// Additional configuration for using the Bot Control managed rule group. Use this to specify the inspection level that you want to use. See `awsManagedRulesBotControlRuleSet` for more details
	AwsManagedRulesBotControlRuleSet pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs] `pulumi:"awsManagedRulesBotControlRuleSet"`
	// The path of the login endpoint for your application.
	LoginPath pulumix.Input[*string] `pulumi:"loginPath"`
	// Details about your login page password field. See `passwordField` for more details.
	PasswordField pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs] `pulumi:"passwordField"`
	// The payload type for your login endpoint, either JSON or form encoded.
	PayloadType pulumix.Input[*string] `pulumi:"payloadType"`
	// Details about your login page username field. See `usernameField` for more details.
	UsernameField pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs] `pulumi:"usernameField"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig]{
		OutputState: o.OutputState,
	}
}

// Additional configuration for using the Account Takeover Protection managed rule group. Use this to specify information such as the sign-in page of your application and the type of content to accept or reject from the client.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) AwsManagedRulesAtpRuleSet() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet {
		return v.AwsManagedRulesAtpRuleSet
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput]{OutputState: value.OutputState}
}

// Additional configuration for using the Bot Control managed rule group. Use this to specify the inspection level that you want to use. See `awsManagedRulesBotControlRuleSet` for more details
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) AwsManagedRulesBotControlRuleSet() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet {
		return v.AwsManagedRulesBotControlRuleSet
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput]{OutputState: value.OutputState}
}

// The path of the login endpoint for your application.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) LoginPath() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig) *string { return v.LoginPath })
}

// Details about your login page password field. See `passwordField` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) PasswordField() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField {
		return v.PasswordField
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput]{OutputState: value.OutputState}
}

// The payload type for your login endpoint, either JSON or form encoded.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) PayloadType() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig) *string {
		return v.PayloadType
	})
}

// Details about your login page username field. See `usernameField` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput) UsernameField() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField {
		return v.UsernameField
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet struct {
	// Whether or not to allow the use of regular expressions in the login page path.
	EnableRegexInPath *bool `pulumi:"enableRegexInPath"`
	// The path of the login endpoint for your application.
	LoginPath string `pulumi:"loginPath"`
	// The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `requestInspection` for more details.
	RequestInspection *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection `pulumi:"requestInspection"`
	// The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `responseInspection` for more details.
	ResponseInspection *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection `pulumi:"responseInspection"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs struct {
	// Whether or not to allow the use of regular expressions in the login page path.
	EnableRegexInPath pulumix.Input[*bool] `pulumi:"enableRegexInPath"`
	// The path of the login endpoint for your application.
	LoginPath pulumix.Input[string] `pulumi:"loginPath"`
	// The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `requestInspection` for more details.
	RequestInspection pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs] `pulumi:"requestInspection"`
	// The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `responseInspection` for more details.
	ResponseInspection pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs] `pulumi:"responseInspection"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet]{
		OutputState: o.OutputState,
	}
}

// Whether or not to allow the use of regular expressions in the login page path.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput) EnableRegexInPath() pulumix.Output[*bool] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet) *bool {
		return v.EnableRegexInPath
	})
}

// The path of the login endpoint for your application.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput) LoginPath() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet) string {
		return v.LoginPath
	})
}

// The criteria for inspecting login requests, used by the ATP rule group to validate credentials usage. See `requestInspection` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput) RequestInspection() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection {
		return v.RequestInspection
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput]{OutputState: value.OutputState}
}

// The criteria for inspecting responses to login requests, used by the ATP rule group to track login failure rates. Note that Response Inspection is available only on web ACLs that protect CloudFront distributions. See `responseInspection` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput) ResponseInspection() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSet) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection {
		return v.ResponseInspection
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection struct {
	// Details about your login page password field. See `passwordField` for more details.
	PasswordField WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField `pulumi:"passwordField"`
	// The payload type for your login endpoint, either JSON or form encoded.
	PayloadType string `pulumi:"payloadType"`
	// Details about your login page username field. See `usernameField` for more details.
	UsernameField WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField `pulumi:"usernameField"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs struct {
	// Details about your login page password field. See `passwordField` for more details.
	PasswordField pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldArgs] `pulumi:"passwordField"`
	// The payload type for your login endpoint, either JSON or form encoded.
	PayloadType pulumix.Input[string] `pulumi:"payloadType"`
	// Details about your login page username field. See `usernameField` for more details.
	UsernameField pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldArgs] `pulumi:"usernameField"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection]{
		OutputState: o.OutputState,
	}
}

// Details about your login page password field. See `passwordField` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput) PasswordField() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField {
		return v.PasswordField
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput]{OutputState: value.OutputState}
}

// The payload type for your login endpoint, either JSON or form encoded.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput) PayloadType() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection) string {
		return v.PayloadType
	})
}

// Details about your login page username field. See `usernameField` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput) UsernameField() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspection) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField {
		return v.UsernameField
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField struct {
	// The name of the password field.
	Identifier string `pulumi:"identifier"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldArgs struct {
	// The name of the password field.
	Identifier pulumix.Input[string] `pulumi:"identifier"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField]{
		OutputState: o.OutputState,
	}
}

// The name of the password field.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput) Identifier() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordField) string {
		return v.Identifier
	})
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField struct {
	// The name of the username field.
	Identifier string `pulumi:"identifier"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldArgs struct {
	// The name of the username field.
	Identifier pulumix.Input[string] `pulumi:"identifier"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField]{
		OutputState: o.OutputState,
	}
}

// The name of the username field.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput) Identifier() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameField) string {
		return v.Identifier
	})
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection struct {
	// Configures inspection of the response body. See `bodyContains` for more details.
	BodyContains *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains `pulumi:"bodyContains"`
	// Configures inspection of the response header.See `header` for more details.
	Header *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader `pulumi:"header"`
	// Configures inspection of the response JSON. See `json` for more details.
	Json *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson `pulumi:"json"`
	// Configures inspection of the response status code.See `statusCode` for more details.
	StatusCode *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode `pulumi:"statusCode"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs struct {
	// Configures inspection of the response body. See `bodyContains` for more details.
	BodyContains pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsArgs] `pulumi:"bodyContains"`
	// Configures inspection of the response header.See `header` for more details.
	Header pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderArgs] `pulumi:"header"`
	// Configures inspection of the response JSON. See `json` for more details.
	Json pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonArgs] `pulumi:"json"`
	// Configures inspection of the response status code.See `statusCode` for more details.
	StatusCode pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeArgs] `pulumi:"statusCode"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection]{
		OutputState: o.OutputState,
	}
}

// Configures inspection of the response body. See `bodyContains` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput) BodyContains() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains {
		return v.BodyContains
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput]{OutputState: value.OutputState}
}

// Configures inspection of the response header.See `header` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput) Header() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader {
		return v.Header
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput]{OutputState: value.OutputState}
}

// Configures inspection of the response JSON. See `json` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput) Json() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson {
		return v.Json
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput]{OutputState: value.OutputState}
}

// Configures inspection of the response status code.See `statusCode` for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput) StatusCode() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspection) *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode {
		return v.StatusCode
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode, WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains struct {
	// Strings in the body of the response that indicate a failed login attempt.
	FailureStrings []string `pulumi:"failureStrings"`
	// Strings in the body of the response that indicate a successful login attempt.
	SuccessStrings []string `pulumi:"successStrings"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsArgs struct {
	// Strings in the body of the response that indicate a failed login attempt.
	FailureStrings pulumix.Input[[]string] `pulumi:"failureStrings"`
	// Strings in the body of the response that indicate a successful login attempt.
	SuccessStrings pulumix.Input[[]string] `pulumi:"successStrings"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains]{
		OutputState: o.OutputState,
	}
}

// Strings in the body of the response that indicate a failed login attempt.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput) FailureStrings() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains) []string {
		return v.FailureStrings
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Strings in the body of the response that indicate a successful login attempt.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput) SuccessStrings() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContains) []string {
		return v.SuccessStrings
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader struct {
	// Values in the response header with the specified name that indicate a failed login attempt.
	FailureValues []string `pulumi:"failureValues"`
	// The name of the header to match against. The name must be an exact match, including case.
	Name string `pulumi:"name"`
	// Values in the response header with the specified name that indicate a successful login attempt.
	SuccessValues []string `pulumi:"successValues"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderArgs struct {
	// Values in the response header with the specified name that indicate a failed login attempt.
	FailureValues pulumix.Input[[]string] `pulumi:"failureValues"`
	// The name of the header to match against. The name must be an exact match, including case.
	Name pulumix.Input[string] `pulumi:"name"`
	// Values in the response header with the specified name that indicate a successful login attempt.
	SuccessValues pulumix.Input[[]string] `pulumi:"successValues"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader]{
		OutputState: o.OutputState,
	}
}

// Values in the response header with the specified name that indicate a failed login attempt.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput) FailureValues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader) []string {
		return v.FailureValues
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The name of the header to match against. The name must be an exact match, including case.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader) string {
		return v.Name
	})
}

// Values in the response header with the specified name that indicate a successful login attempt.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput) SuccessValues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeader) []string {
		return v.SuccessValues
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson struct {
	// Values in the response header with the specified name that indicate a failed login attempt.
	FailureValues []string `pulumi:"failureValues"`
	// The identifier for the value to match against in the JSON.
	Identifier string `pulumi:"identifier"`
	// Values in the response header with the specified name that indicate a successful login attempt.
	SuccessValues []string `pulumi:"successValues"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonArgs struct {
	// Values in the response header with the specified name that indicate a failed login attempt.
	FailureValues pulumix.Input[[]string] `pulumi:"failureValues"`
	// The identifier for the value to match against in the JSON.
	Identifier pulumix.Input[string] `pulumi:"identifier"`
	// Values in the response header with the specified name that indicate a successful login attempt.
	SuccessValues pulumix.Input[[]string] `pulumi:"successValues"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson]{
		OutputState: o.OutputState,
	}
}

// Values in the response header with the specified name that indicate a failed login attempt.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput) FailureValues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson) []string {
		return v.FailureValues
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The identifier for the value to match against in the JSON.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput) Identifier() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson) string {
		return v.Identifier
	})
}

// Values in the response header with the specified name that indicate a successful login attempt.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput) SuccessValues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJson) []string {
		return v.SuccessValues
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode struct {
	// Status codes in the response that indicate a failed login attempt.
	FailureCodes []int `pulumi:"failureCodes"`
	// Status codes in the response that indicate a successful login attempt.
	SuccessCodes []int `pulumi:"successCodes"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeArgs struct {
	// Status codes in the response that indicate a failed login attempt.
	FailureCodes pulumix.Input[[]int] `pulumi:"failureCodes"`
	// Status codes in the response that indicate a successful login attempt.
	SuccessCodes pulumix.Input[[]int] `pulumi:"successCodes"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode]{
		OutputState: o.OutputState,
	}
}

// Status codes in the response that indicate a failed login attempt.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput) FailureCodes() pulumix.ArrayOutput[int] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode) []int {
		return v.FailureCodes
	})
	return pulumix.ArrayOutput[int]{OutputState: value.OutputState}
}

// Status codes in the response that indicate a successful login attempt.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput) SuccessCodes() pulumix.ArrayOutput[int] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCode) []int {
		return v.SuccessCodes
	})
	return pulumix.ArrayOutput[int]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet struct {
	// The inspection level to use for the Bot Control rule group.
	InspectionLevel string `pulumi:"inspectionLevel"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs struct {
	// The inspection level to use for the Bot Control rule group.
	InspectionLevel pulumix.Input[string] `pulumi:"inspectionLevel"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet]{
		OutputState: o.OutputState,
	}
}

// The inspection level to use for the Bot Control rule group.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput) InspectionLevel() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSet) string {
		return v.InspectionLevel
	})
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField struct {
	// The name of the password field.
	Identifier string `pulumi:"identifier"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs struct {
	// The name of the password field.
	Identifier pulumix.Input[string] `pulumi:"identifier"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField]{
		OutputState: o.OutputState,
	}
}

// The name of the password field.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput) Identifier() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordField) string {
		return v.Identifier
	})
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField struct {
	// The name of the username field.
	Identifier string `pulumi:"identifier"`
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs struct {
	// The name of the username field.
	Identifier pulumix.Input[string] `pulumi:"identifier"`
}

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput() WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput) ToWebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField]{
		OutputState: o.OutputState,
	}
}

// The name of the username field.
func (o WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput) Identifier() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField](o, func(v WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameField) string {
		return v.Identifier
	})
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride struct {
	// Override action to use, in place of the configured action of the rule in the rule group. See `action` for details.
	ActionToUse WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse `pulumi:"actionToUse"`
	// Name of the rule to override. See the [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html) for a list of names in the appropriate rule group in use.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideArgs struct {
	// Override action to use, in place of the configured action of the rule in the rule group. See `action` for details.
	ActionToUse pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseArgs] `pulumi:"actionToUse"`
	// Name of the rule to override. See the [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html) for a list of names in the appropriate rule group in use.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride]{
		OutputState: o.OutputState,
	}
}

// Override action to use, in place of the configured action of the rule in the rule group. See `action` for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput) ActionToUse() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse {
		return v.ActionToUse
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput]{OutputState: value.OutputState}
}

// Name of the rule to override. See the [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html) for a list of names in the appropriate rule group in use.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride) string { return v.Name })
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse struct {
	// Specifies that AWS WAF should allow requests by default. See `allow` below for details.
	Allow *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow `pulumi:"allow"`
	// Specifies that AWS WAF should block requests by default. See `block` below for details.
	Block *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock `pulumi:"block"`
	// Instructs AWS WAF to run a Captcha check against the web request. See `captcha` below for details.
	Captcha *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha `pulumi:"captcha"`
	// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See `challenge` below for details.
	Challenge *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge `pulumi:"challenge"`
	// Instructs AWS WAF to count the web request and allow it. See `count` below for details.
	Count *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount `pulumi:"count"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseArgs struct {
	// Specifies that AWS WAF should allow requests by default. See `allow` below for details.
	Allow pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowArgs] `pulumi:"allow"`
	// Specifies that AWS WAF should block requests by default. See `block` below for details.
	Block pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockArgs] `pulumi:"block"`
	// Instructs AWS WAF to run a Captcha check against the web request. See `captcha` below for details.
	Captcha pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaArgs] `pulumi:"captcha"`
	// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See `challenge` below for details.
	Challenge pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeArgs] `pulumi:"challenge"`
	// Instructs AWS WAF to count the web request and allow it. See `count` below for details.
	Count pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountArgs] `pulumi:"count"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse]{
		OutputState: o.OutputState,
	}
}

// Specifies that AWS WAF should allow requests by default. See `allow` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput) Allow() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow {
		return v.Allow
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput]{OutputState: value.OutputState}
}

// Specifies that AWS WAF should block requests by default. See `block` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput) Block() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock {
		return v.Block
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to run a Captcha check against the web request. See `captcha` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput) Captcha() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha {
		return v.Captcha
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See `challenge` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput) Challenge() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge {
		return v.Challenge
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput]{OutputState: value.OutputState}
}

// Instructs AWS WAF to count the web request and allow it. See `count` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput) Count() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUse) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount {
		return v.Count
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling `pulumi:"customRequestHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowArgs struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See `customRequestHandling` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput) CustomRequestHandling() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllow) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandling) []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader) string {
		return v.Name
	})
}

// Value of the custom header.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeader) string {
		return v.Value
	})
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock struct {
	// Defines a custom response for the web request. See `customResponse` below for details.
	CustomResponse *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse `pulumi:"customResponse"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockArgs struct {
	// Defines a custom response for the web request. See `customResponse` below for details.
	CustomResponse pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseArgs] `pulumi:"customResponse"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock]{
		OutputState: o.OutputState,
	}
}

// Defines a custom response for the web request. See `customResponse` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput) CustomResponse() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlock) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse {
		return v.CustomResponse
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse struct {
	// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
	CustomResponseBodyKey *string `pulumi:"customResponseBodyKey"`
	// The HTTP status code to return to the client.
	ResponseCode int `pulumi:"responseCode"`
	// The `responseHeader` blocks used to define the HTTP response headers added to the response. See `responseHeader` below for details.
	ResponseHeaders []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader `pulumi:"responseHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseArgs struct {
	// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
	CustomResponseBodyKey pulumix.Input[*string] `pulumi:"customResponseBodyKey"`
	// The HTTP status code to return to the client.
	ResponseCode pulumix.Input[int] `pulumi:"responseCode"`
	// The `responseHeader` blocks used to define the HTTP response headers added to the response. See `responseHeader` below for details.
	ResponseHeaders pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderArgs] `pulumi:"responseHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse]{
		OutputState: o.OutputState,
	}
}

// References the response body that you want AWS WAF to return to the web request client. This must reference a `key` defined in a `customResponseBody` block of this resource.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput) CustomResponseBodyKey() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse) *string {
		return v.CustomResponseBodyKey
	})
}

// The HTTP status code to return to the client.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput) ResponseCode() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse) int {
		return v.ResponseCode
	})
}

// The `responseHeader` blocks used to define the HTTP response headers added to the response. See `responseHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput) ResponseHeaders() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponse) []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader {
		return v.ResponseHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader) string {
		return v.Name
	})
}

// Value of the custom header.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeader) string {
		return v.Value
	})
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling `pulumi:"customRequestHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaArgs struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See `customRequestHandling` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput) CustomRequestHandling() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptcha) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandling) []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader) string {
		return v.Name
	})
}

// Value of the custom header.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeader) string {
		return v.Value
	})
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling `pulumi:"customRequestHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeArgs struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See `customRequestHandling` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput) CustomRequestHandling() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallenge) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandling) []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader) string {
		return v.Name
	})
}

// Value of the custom header.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeader) string {
		return v.Value
	})
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling `pulumi:"customRequestHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountArgs struct {
	// Defines custom handling for the web request. See `customRequestHandling` below for details.
	CustomRequestHandling pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingArgs] `pulumi:"customRequestHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount]{
		OutputState: o.OutputState,
	}
}

// Defines custom handling for the web request. See `customRequestHandling` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput) CustomRequestHandling() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCount) *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling {
		return v.CustomRequestHandling
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader `pulumi:"insertHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingArgs struct {
	// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
	InsertHeaders pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs] `pulumi:"insertHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling]{
		OutputState: o.OutputState,
	}
}

// The `insertHeader` blocks used to define HTTP headers added to the request. See `insertHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput) InsertHeaders() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandling) []WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader {
		return v.InsertHeaders
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader, WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name string `pulumi:"name"`
	// Value of the custom header.
	Value string `pulumi:"value"`
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs struct {
	// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the custom header.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the custom header. For custom request header insertion, when AWS WAF inserts the header into the request, it prefixes this name `x-amzn-waf-`, to avoid confusion with the headers that are already in the request. For example, for the header name `sample`, AWS WAF inserts the header `x-amzn-waf-sample`.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader) string {
		return v.Name
	})
}

// Value of the custom header.
func (o WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeader) string {
		return v.Value
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement struct {
	// Logical rule statement used to combine other rule statements with AND logic. See `andStatement` below for details.
	AndStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement `pulumi:"andStatement"`
	// Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byteMatchStatement` below for details.
	ByteMatchStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement `pulumi:"byteMatchStatement"`
	// Rule statement used to identify web requests based on country of origin. See `geoMatchStatement` below for details.
	GeoMatchStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement `pulumi:"geoMatchStatement"`
	// Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ipSetReferenceStatement` below for details.
	IpSetReferenceStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement `pulumi:"ipSetReferenceStatement"`
	// Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `labelMatchStatement` below for details.
	LabelMatchStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement `pulumi:"labelMatchStatement"`
	// Logical rule statement used to negate the results of another rule statement. See `notStatement` below for details.
	NotStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement `pulumi:"notStatement"`
	// Logical rule statement used to combine other rule statements with OR logic. See `orStatement` below for details.
	OrStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement `pulumi:"orStatement"`
	// Rule statement used to search web request components for a match against a single regular expression. See `regexMatchStatement` below for details.
	RegexMatchStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement `pulumi:"regexMatchStatement"`
	// Rule statement used to search web request components for matches with regular expressions. See `regexPatternSetReferenceStatement` below for details.
	RegexPatternSetReferenceStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement `pulumi:"regexPatternSetReferenceStatement"`
	// Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See `sizeConstraintStatement` below for more details.
	SizeConstraintStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement `pulumi:"sizeConstraintStatement"`
	// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqliMatchStatement` below for details.
	SqliMatchStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement `pulumi:"sqliMatchStatement"`
	// Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xssMatchStatement` below for details.
	XssMatchStatement *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement `pulumi:"xssMatchStatement"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs struct {
	// Logical rule statement used to combine other rule statements with AND logic. See `andStatement` below for details.
	AndStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementArgs] `pulumi:"andStatement"`
	// Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byteMatchStatement` below for details.
	ByteMatchStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementArgs] `pulumi:"byteMatchStatement"`
	// Rule statement used to identify web requests based on country of origin. See `geoMatchStatement` below for details.
	GeoMatchStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs] `pulumi:"geoMatchStatement"`
	// Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ipSetReferenceStatement` below for details.
	IpSetReferenceStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementArgs] `pulumi:"ipSetReferenceStatement"`
	// Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `labelMatchStatement` below for details.
	LabelMatchStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementArgs] `pulumi:"labelMatchStatement"`
	// Logical rule statement used to negate the results of another rule statement. See `notStatement` below for details.
	NotStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementArgs] `pulumi:"notStatement"`
	// Logical rule statement used to combine other rule statements with OR logic. See `orStatement` below for details.
	OrStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementArgs] `pulumi:"orStatement"`
	// Rule statement used to search web request components for a match against a single regular expression. See `regexMatchStatement` below for details.
	RegexMatchStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementArgs] `pulumi:"regexMatchStatement"`
	// Rule statement used to search web request components for matches with regular expressions. See `regexPatternSetReferenceStatement` below for details.
	RegexPatternSetReferenceStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementArgs] `pulumi:"regexPatternSetReferenceStatement"`
	// Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See `sizeConstraintStatement` below for more details.
	SizeConstraintStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementArgs] `pulumi:"sizeConstraintStatement"`
	// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqliMatchStatement` below for details.
	SqliMatchStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementArgs] `pulumi:"sqliMatchStatement"`
	// Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xssMatchStatement` below for details.
	XssMatchStatement pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementArgs] `pulumi:"xssMatchStatement"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement]{
		OutputState: o.OutputState,
	}
}

// Logical rule statement used to combine other rule statements with AND logic. See `andStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) AndStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement {
		return v.AndStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput]{OutputState: value.OutputState}
}

// Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byteMatchStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) ByteMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement {
		return v.ByteMatchStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to identify web requests based on country of origin. See `geoMatchStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) GeoMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement {
		return v.GeoMatchStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ipSetReferenceStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) IpSetReferenceStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement {
		return v.IpSetReferenceStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput]{OutputState: value.OutputState}
}

// Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `labelMatchStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) LabelMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement {
		return v.LabelMatchStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput]{OutputState: value.OutputState}
}

// Logical rule statement used to negate the results of another rule statement. See `notStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) NotStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement {
		return v.NotStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput]{OutputState: value.OutputState}
}

// Logical rule statement used to combine other rule statements with OR logic. See `orStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) OrStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement {
		return v.OrStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to search web request components for a match against a single regular expression. See `regexMatchStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) RegexMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement {
		return v.RegexMatchStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput]{OutputState: value.OutputState}
}

// Rule statement used to search web request components for matches with regular expressions. See `regexPatternSetReferenceStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) RegexPatternSetReferenceStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement {
		return v.RegexPatternSetReferenceStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput]{OutputState: value.OutputState}
}

// Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (>) or less than (<). See `sizeConstraintStatement` below for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) SizeConstraintStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement {
		return v.SizeConstraintStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput]{OutputState: value.OutputState}
}

// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqliMatchStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) SqliMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement {
		return v.SqliMatchStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput]{OutputState: value.OutputState}
}

// Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xssMatchStatement` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput) XssMatchStatement() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement {
		return v.XssMatchStatement
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement struct {
	// The statements to combine.
	Statements []WebAclRuleStatement `pulumi:"statements"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*WebAclRuleStatementArgs] `pulumi:"statements"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput) Statements() pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement) []WebAclRuleStatement {
		return v.Statements
	})
	return pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement struct {
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
	PositionalConstraint string `pulumi:"positionalConstraint"`
	// String value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
	SearchString string `pulumi:"searchString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementArgs struct {
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
	PositionalConstraint pulumix.Input[string] `pulumi:"positionalConstraint"`
	// String value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
	SearchString pulumix.Input[string] `pulumi:"searchString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement]{
		OutputState: o.OutputState,
	}
}

// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Area within the portion of a web request that you want AWS WAF to search for `searchString`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput) PositionalConstraint() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement) string {
		return v.PositionalConstraint
	})
}

// String value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `fieldToMatch`. The maximum length of the value is 50 bytes.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput) SearchString() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement) string {
		return v.SearchString
	})
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers. See `body` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See `cookies` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See `headers` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See `jsonBody` for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See `singleHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See `singleQueryArgument` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                            `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                            `pulumi:"includedCookies"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                                `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                                `pulumi:"includedCookies"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                             `pulumi:"includedPaths"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                                 `pulumi:"includedPaths"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethod struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethod] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationArgs struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation) int {
		return v.Priority
	})
}

// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformation) string {
		return v.Type
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement struct {
	// Array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
	CountryCodes []string `pulumi:"countryCodes"`
	// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `forwardedIpConfig` below for details.
	ForwardedIpConfig *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig `pulumi:"forwardedIpConfig"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs struct {
	// Array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
	CountryCodes pulumix.Input[[]string] `pulumi:"countryCodes"`
	// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `forwardedIpConfig` below for details.
	ForwardedIpConfig pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs] `pulumi:"forwardedIpConfig"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement]{
		OutputState: o.OutputState,
	}
}

// Array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput) CountryCodes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement) []string {
		return v.CountryCodes
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `forwardedIpConfig` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput) ForwardedIpConfig() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig {
		return v.ForwardedIpConfig
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig struct {
	// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	// Name of the HTTP header to use for the IP address.
	HeaderName string `pulumi:"headerName"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs struct {
	// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior pulumix.Input[string] `pulumi:"fallbackBehavior"`
	// Name of the HTTP header to use for the IP address.
	HeaderName pulumix.Input[string] `pulumi:"headerName"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig]{
		OutputState: o.OutputState,
	}
}

// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) FallbackBehavior() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig) string {
		return v.FallbackBehavior
	})
}

// Name of the HTTP header to use for the IP address.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput) HeaderName() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfig) string {
		return v.HeaderName
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn string `pulumi:"arn"`
	// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `ipSetForwardedIpConfig` below for more details.
	IpSetForwardedIpConfig *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig `pulumi:"ipSetForwardedIpConfig"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementArgs struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `ipSetForwardedIpConfig` below for more details.
	IpSetForwardedIpConfig pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs] `pulumi:"ipSetForwardedIpConfig"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the IP Set that this statement references.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement) string {
		return v.Arn
	})
}

// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `ipSetForwardedIpConfig` below for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput) IpSetForwardedIpConfig() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig {
		return v.IpSetForwardedIpConfig
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig struct {
	// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	// Name of the HTTP header to use for the IP address.
	HeaderName string `pulumi:"headerName"`
	// Position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
	Position string `pulumi:"position"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs struct {
	// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
	FallbackBehavior pulumix.Input[string] `pulumi:"fallbackBehavior"`
	// Name of the HTTP header to use for the IP address.
	HeaderName pulumix.Input[string] `pulumi:"headerName"`
	// Position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
	Position pulumix.Input[string] `pulumi:"position"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig]{
		OutputState: o.OutputState,
	}
}

// Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) FallbackBehavior() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig) string {
		return v.FallbackBehavior
	})
}

// Name of the HTTP header to use for the IP address.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) HeaderName() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig) string {
		return v.HeaderName
	})
}

// Position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput) Position() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfig) string {
		return v.Position
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement struct {
	// String to match against.
	Key string `pulumi:"key"`
	// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
	Scope string `pulumi:"scope"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementArgs struct {
	// String to match against.
	Key pulumix.Input[string] `pulumi:"key"`
	// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
	Scope pulumix.Input[string] `pulumi:"scope"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement]{
		OutputState: o.OutputState,
	}
}

// String to match against.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement) string {
		return v.Key
	})
}

// Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput) Scope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement) string {
		return v.Scope
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement struct {
	// The statements to combine.
	Statements []WebAclRuleStatement `pulumi:"statements"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*WebAclRuleStatementArgs] `pulumi:"statements"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput) Statements() pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement) []WebAclRuleStatement {
		return v.Statements
	})
	return pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement struct {
	// The statements to combine.
	Statements []WebAclRuleStatement `pulumi:"statements"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*WebAclRuleStatementArgs] `pulumi:"statements"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput) Statements() pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement) []WebAclRuleStatement {
		return v.Statements
	})
	return pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement struct {
	// The part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// String representing the regular expression. Minimum of `1` and maximum of `512` characters.
	RegexString string `pulumi:"regexString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementArgs struct {
	// The part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// String representing the regular expression. Minimum of `1` and maximum of `512` characters.
	RegexString pulumix.Input[string] `pulumi:"regexString"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// String representing the regular expression. Minimum of `1` and maximum of `512` characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput) RegexString() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement) string {
		return v.RegexString
	})
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers. See `body` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See `cookies` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See `headers` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See `jsonBody` for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See `singleHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See `singleQueryArgument` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                             `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                             `pulumi:"includedCookies"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                                 `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                                 `pulumi:"includedCookies"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                              `pulumi:"includedPaths"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                                  `pulumi:"includedPaths"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationArgs struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation) int {
		return v.Priority
	})
}

// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformation) string {
		return v.Type
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement struct {
	// The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.
	Arn string `pulumi:"arn"`
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation `pulumi:"textTransformations"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementArgs struct {
	// The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement) string {
		return v.Arn
	})
}

// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) FieldToMatch() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput) TextTransformations() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers. See `body` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See `cookies` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See `headers` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See `jsonBody` for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See `singleHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See `singleQueryArgument` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                                           `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                                           `pulumi:"includedCookies"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                                               `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                                               `pulumi:"includedCookies"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                                            `pulumi:"includedPaths"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                                                `pulumi:"includedPaths"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation) int {
		return v.Priority
	})
}

// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation) string {
		return v.Type
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement struct {
	// Operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.
	Size int `pulumi:"size"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation `pulumi:"textTransformations"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementArgs struct {
	// Operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.
	ComparisonOperator pulumix.Input[string] `pulumi:"comparisonOperator"`
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.
	Size pulumix.Input[int] `pulumi:"size"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement]{
		OutputState: o.OutputState,
	}
}

// Operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput) ComparisonOperator() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement) string {
		return v.ComparisonOperator
	})
}

// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput) FieldToMatch() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput) Size() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement) int {
		return v.Size
	})
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput) TextTransformations() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers. See `body` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See `cookies` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See `headers` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See `jsonBody` for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See `singleHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See `singleQueryArgument` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                                 `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                                 `pulumi:"includedCookies"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                                     `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                                     `pulumi:"includedCookies"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                                  `pulumi:"includedPaths"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                                      `pulumi:"includedPaths"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation) int {
		return v.Priority
	})
}

// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformation) string {
		return v.Type
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement struct {
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementArgs struct {
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement]{
		OutputState: o.OutputState,
	}
}

// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers. See `body` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See `cookies` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See `headers` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See `jsonBody` for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See `singleHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See `singleQueryArgument` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                            `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                            `pulumi:"includedCookies"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                                `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                                `pulumi:"includedCookies"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                             `pulumi:"includedPaths"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                                 `pulumi:"includedPaths"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationArgs struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation) int {
		return v.Priority
	})
}

// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformation) string {
		return v.Type
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement struct {
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation `pulumi:"textTransformations"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementArgs struct {
	// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
	FieldToMatch pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchArgs] `pulumi:"fieldToMatch"`
	// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
	TextTransformations pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationArgs] `pulumi:"textTransformations"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement]{
		OutputState: o.OutputState,
	}
}

// Part of a web request that you want AWS WAF to inspect. See `fieldToMatch` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput) FieldToMatch() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch {
		return v.FieldToMatch
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput]{OutputState: value.OutputState}
}

// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See `textTransformation` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput) TextTransformations() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation {
		return v.TextTransformations
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch struct {
	// Inspect all query arguments.
	AllQueryArguments *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethod `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath `pulumi:"uriPath"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchArgs struct {
	// Inspect all query arguments.
	AllQueryArguments pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs] `pulumi:"allQueryArguments"`
	// Inspect the request body, which immediately follows the request headers. See `body` below for details.
	Body pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs] `pulumi:"body"`
	// Inspect the cookies in the web request. See `cookies` below for details.
	Cookies pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs] `pulumi:"cookies"`
	// Inspect the request headers. See `headers` below for details.
	Headers pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs] `pulumi:"headers"`
	// Inspect the request body as JSON. See `jsonBody` for details.
	JsonBody pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs] `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs] `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
	QueryString pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs] `pulumi:"queryString"`
	// Inspect a single header. See `singleHeader` below for details.
	SingleHeader pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs] `pulumi:"singleHeader"`
	// Inspect a single query argument. See `singleQueryArgument` below for details.
	SingleQueryArgument pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs] `pulumi:"singleQueryArgument"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
	UriPath pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs] `pulumi:"uriPath"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// Inspect all query arguments.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) AllQueryArguments() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments {
		return v.AllQueryArguments
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput]{OutputState: value.OutputState}
}

// Inspect the request body, which immediately follows the request headers. See `body` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) Body() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody {
		return v.Body
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput]{OutputState: value.OutputState}
}

// Inspect the cookies in the web request. See `cookies` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) Cookies() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies {
		return v.Cookies
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput]{OutputState: value.OutputState}
}

// Inspect the request headers. See `headers` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) Headers() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader {
		return v.Headers
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput]{OutputState: value.OutputState}
}

// Inspect the request body as JSON. See `jsonBody` for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) JsonBody() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody {
		return v.JsonBody
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput]{OutputState: value.OutputState}
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) Method() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethod {
		return v.Method
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethod, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput]{OutputState: value.OutputState}
}

// Inspect the query string. This is the part of a URL that appears after a `?` character, if any.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) QueryString() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString {
		return v.QueryString
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput]{OutputState: value.OutputState}
}

// Inspect a single header. See `singleHeader` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) SingleHeader() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader {
		return v.SingleHeader
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput]{OutputState: value.OutputState}
}

// Inspect a single query argument. See `singleQueryArgument` below for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) SingleQueryArgument() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument {
		return v.SingleQueryArgument
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput]{OutputState: value.OutputState}
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, `/images/daily-ad.jpg`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput) UriPath() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatch) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath {
		return v.UriPath
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs struct {
	// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody]{
		OutputState: o.OutputState,
	}
}

// What WAF should do if the body is larger than WAF can inspect. WAF does not support inspecting the entire contents of the body of a web request when the body exceeds 8 KB (8192 bytes). Only the first 8 KB of the request body are forwarded to WAF by the underlying host service. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope string `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs struct {
	// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
	MatchPatterns pulumix.Input[[]*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs] `pulumi:"matchPatterns"`
	// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `includedCookies` or `excludedCookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) MatchPatterns() pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies) []WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern {
		return v.MatchPatterns
	})
	return pulumix.GArrayOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies) string {
		return v.MatchScope
	})
}

// What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookies) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All             *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll `pulumi:"all"`
	ExcludedCookies []string                                                                                                           `pulumi:"excludedCookies"`
	IncludedCookies []string                                                                                                           `pulumi:"includedCookies"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All             pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs] `pulumi:"all"`
	ExcludedCookies pulumix.Input[[]string]                                                                                                               `pulumi:"excludedCookies"`
	IncludedCookies pulumix.Input[[]string]                                                                                                               `pulumi:"includedCookies"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) ExcludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.ExcludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput) IncludedCookies() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPattern) []string {
		return v.IncludedCookies
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope string `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs struct {
	// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
	OversizeHandling pulumix.Input[string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader]{
		OutputState: o.OutputState,
	}
}

// The filter to use to identify the subset of headers to inspect in a web request. The `matchPattern` block supports only one of the following arguments:
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the headers to inspect with the rule inspection criteria. If you specify `All`, AWS WAF inspects both keys and values. Valid values include the following: `ALL`, `Key`, `Value`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader) string {
		return v.MatchScope
	})
}

// Oversize handling tells AWS WAF what to do with a web request when the request component that the rule inspects is over the limits. Valid values include the following: `CONTINUE`, `MATCH`, `NO_MATCH`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-oversize-handling.html) for more information.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput) OversizeHandling() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeader) string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders []string `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders []string `pulumi:"includedHeaders"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs] `pulumi:"all"`
	// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
	ExcludedHeaders pulumix.Input[[]string] `pulumi:"excludedHeaders"`
	// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
	IncludedHeaders pulumix.Input[[]string] `pulumi:"includedHeaders"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) ExcludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.ExcludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput) IncludedHeaders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPattern) []string {
		return v.IncludedHeaders
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior *string `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope string `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling *string `pulumi:"oversizeHandling"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs struct {
	// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
	InvalidFallbackBehavior pulumix.Input[*string] `pulumi:"invalidFallbackBehavior"`
	// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
	MatchPattern pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs] `pulumi:"matchPattern"`
	// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
	MatchScope pulumix.Input[string] `pulumi:"matchScope"`
	// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
	OversizeHandling pulumix.Input[*string] `pulumi:"oversizeHandling"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody]{
		OutputState: o.OutputState,
	}
}

// What to do when JSON parsing fails. Defaults to evaluating up to the first parsing failure. Valid values are `EVALUATE_AS_STRING`, `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) InvalidFallbackBehavior() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody) *string {
		return v.InvalidFallbackBehavior
	})
}

// The patterns to look for in the JSON body. You must specify exactly one setting: either `all` or `includedPaths`. See [JsonMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_JsonMatchPattern.html) for details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) MatchPattern() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern {
		return v.MatchPattern
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput]{OutputState: value.OutputState}
}

// The parts of the JSON to match against using the `matchPattern`. Valid values are `ALL`, `KEY` and `VALUE`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) MatchScope() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody) string {
		return v.MatchScope
	})
}

// What to do if the body is larger than can be inspected. Valid values are `CONTINUE` (default), `MATCH` and `NO_MATCH`.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput) OversizeHandling() pulumix.Output[*string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBody) *string {
		return v.OversizeHandling
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern struct {
	// An empty configuration block that is used for inspecting all headers.
	All           *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll `pulumi:"all"`
	IncludedPaths []string                                                                                                            `pulumi:"includedPaths"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs struct {
	// An empty configuration block that is used for inspecting all headers.
	All           pulumix.Input[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] `pulumi:"all"`
	IncludedPaths pulumix.Input[[]string]                                                                                                                `pulumi:"includedPaths"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern]{
		OutputState: o.OutputState,
	}
}

// An empty configuration block that is used for inspecting all headers.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) All() pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern) *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll {
		return v.All
	})
	return pulumix.GPtrOutput[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll, WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput]{OutputState: value.OutputState}
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput) IncludedPaths() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPattern) []string {
		return v.IncludedPaths
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAll]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethod struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethod)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethod] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethod]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name string `pulumi:"name"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs struct {
	// Name of the query header to inspect. This setting must be provided as lower case characters.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument]{
		OutputState: o.OutputState,
	}
}

// Name of the query header to inspect. This setting must be provided as lower case characters.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument) string {
		return v.Name
	})
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath struct {
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs struct {
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath]{
		OutputState: o.OutputState,
	}
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority int `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type string `pulumi:"type"`
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationArgs struct {
	// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
	Priority pulumix.Input[int] `pulumi:"priority"`
	// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation)(nil)).Elem()
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput {
	return i.ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutputWithContext(context.Background())
}

func (i WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationArgs) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput)
}

func (i *WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation)(nil)).Elem()
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput() WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput) ToWebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutputWithContext(ctx context.Context) WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput {
	return o
}

func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation] {
	return pulumix.Output[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation]{
		OutputState: o.OutputState,
	}
}

// Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation) int {
		return v.Priority
	})
}

// Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.
func (o WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation](o, func(v WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformation) string {
		return v.Type
	})
}

type WebAclRuleStatementNotStatement struct {
	// The statements to combine.
	Statements []WebAclRuleStatement `pulumi:"statements"`
}

type WebAclRuleStatementNotStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*WebAclRuleStatementArgs] `pulumi:"statements"`
}

func (WebAclRuleStatementNotStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementNotStatement)(nil)).Elem()
}

func (i WebAclRuleStatementNotStatementArgs) ToWebAclRuleStatementNotStatementOutput() WebAclRuleStatementNotStatementOutput {
	return i.ToWebAclRuleStatementNotStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementNotStatementArgs) ToWebAclRuleStatementNotStatementOutputWithContext(ctx context.Context) WebAclRuleStatementNotStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementNotStatementOutput)
}

func (i *WebAclRuleStatementNotStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementNotStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementNotStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementNotStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementNotStatement)(nil)).Elem()
}

func (o WebAclRuleStatementNotStatementOutput) ToWebAclRuleStatementNotStatementOutput() WebAclRuleStatementNotStatementOutput {
	return o
}

func (o WebAclRuleStatementNotStatementOutput) ToWebAclRuleStatementNotStatementOutputWithContext(ctx context.Context) WebAclRuleStatementNotStatementOutput {
	return o
}

func (o WebAclRuleStatementNotStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementNotStatement] {
	return pulumix.Output[WebAclRuleStatementNotStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o WebAclRuleStatementNotStatementOutput) Statements() pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementNotStatement](o, func(v WebAclRuleStatementNotStatement) []WebAclRuleStatement { return v.Statements })
	return pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput]{OutputState: value.OutputState}
}

type WebAclRuleStatementOrStatement struct {
	// The statements to combine.
	Statements []WebAclRuleStatement `pulumi:"statements"`
}

type WebAclRuleStatementOrStatementArgs struct {
	// The statements to combine.
	Statements pulumix.Input[[]*WebAclRuleStatementArgs] `pulumi:"statements"`
}

func (WebAclRuleStatementOrStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementOrStatement)(nil)).Elem()
}

func (i WebAclRuleStatementOrStatementArgs) ToWebAclRuleStatementOrStatementOutput() WebAclRuleStatementOrStatementOutput {
	return i.ToWebAclRuleStatementOrStatementOutputWithContext(context.Background())
}

func (i WebAclRuleStatementOrStatementArgs) ToWebAclRuleStatementOrStatementOutputWithContext(ctx context.Context) WebAclRuleStatementOrStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleStatementOrStatementOutput)
}

func (i *WebAclRuleStatementOrStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleStatementOrStatementArgs] {
	return pulumix.Val(i)
}

type WebAclRuleStatementOrStatementOutput struct{ *pulumi.OutputState }

func (WebAclRuleStatementOrStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleStatementOrStatement)(nil)).Elem()
}

func (o WebAclRuleStatementOrStatementOutput) ToWebAclRuleStatementOrStatementOutput() WebAclRuleStatementOrStatementOutput {
	return o
}

func (o WebAclRuleStatementOrStatementOutput) ToWebAclRuleStatementOrStatementOutputWithContext(ctx context.Context) WebAclRuleStatementOrStatementOutput {
	return o
}

func (o WebAclRuleStatementOrStatementOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleStatementOrStatement] {
	return pulumix.Output[WebAclRuleStatementOrStatement]{
		OutputState: o.OutputState,
	}
}

// The statements to combine.
func (o WebAclRuleStatementOrStatementOutput) Statements() pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput] {
	value := pulumix.Apply[WebAclRuleStatementOrStatement](o, func(v WebAclRuleStatementOrStatement) []WebAclRuleStatement { return v.Statements })
	return pulumix.GArrayOutput[WebAclRuleStatement, WebAclRuleStatementOutput]{OutputState: value.OutputState}
}

func init() {
	pulumi.RegisterOutputType(RegexPatternSetRegularExpressionOutput{})
	pulumi.RegisterOutputType(RuleGroupCustomResponseBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionAllowOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionAllowCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionAllowCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionBlockOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionBlockCustomResponseOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionBlockCustomResponseResponseHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionCaptchaOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionCaptchaCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionChallengeOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionChallengeCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionChallengeCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionCountOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionCountCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionCountCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleCaptchaConfigOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleCaptchaConfigImmunityTimePropertyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleRuleLabelOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementAndStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementByteMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementGeoMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementGeoMatchStatementForwardedIpConfigOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementIpSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementLabelMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementNotStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementOrStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementForwardedIpConfigOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementAndStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementNotStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementOrStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSizeConstraintStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementSqliMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleStatementXssMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleVisibilityConfigOutput{})
	pulumi.RegisterOutputType(RuleGroupVisibilityConfigOutput{})
	pulumi.RegisterOutputType(WebAclAssociationConfigOutput{})
	pulumi.RegisterOutputType(WebAclAssociationConfigRequestBodyOutput{})
	pulumi.RegisterOutputType(WebAclAssociationConfigRequestBodyCloudfrontOutput{})
	pulumi.RegisterOutputType(WebAclCaptchaConfigOutput{})
	pulumi.RegisterOutputType(WebAclCaptchaConfigImmunityTimePropertyOutput{})
	pulumi.RegisterOutputType(WebAclCustomResponseBodyOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionAllowOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionAllowCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionAllowCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionBlockOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionBlockCustomResponseOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionBlockCustomResponseResponseHeaderOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationLoggingFilterOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationLoggingFilterFilterOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationLoggingFilterFilterConditionOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationLoggingFilterFilterConditionActionConditionOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationLoggingFilterFilterConditionLabelNameConditionOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldMethodOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldQueryStringOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldSingleHeaderOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldUriPathOutput{})
	pulumi.RegisterOutputType(WebAclRuleOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionAllowOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionAllowCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionAllowCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionBlockOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionBlockCustomResponseOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionBlockCustomResponseResponseHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionCaptchaOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionCaptchaCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionCaptchaCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionChallengeOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionChallengeCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionChallengeCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionCountOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionCountCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionCountCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleCaptchaConfigOutput{})
	pulumi.RegisterOutputType(WebAclRuleCaptchaConfigImmunityTimePropertyOutput{})
	pulumi.RegisterOutputType(WebAclRuleOverrideActionOutput{})
	pulumi.RegisterOutputType(WebAclRuleOverrideActionCountOutput{})
	pulumi.RegisterOutputType(WebAclRuleOverrideActionNoneOutput{})
	pulumi.RegisterOutputType(WebAclRuleRuleLabelOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementAndStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementByteMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementGeoMatchStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementGeoMatchStatementForwardedIpConfigOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementIpSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementLabelMatchStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionPasswordFieldOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetRequestInspectionUsernameFieldOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionBodyContainsOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionJsonOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetResponseInspectionStatusCodeOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseAllowCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseBlockCustomResponseResponseHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCaptchaCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseChallengeCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementRuleActionOverrideActionToUseCountCustomRequestHandlingInsertHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIpConfigOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArgumentsOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchCookiesMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchHeaderMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchJsonBodyMatchPatternAllOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchMethodOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchQueryStringOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeaderOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgumentOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementFieldToMatchUriPathOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatementTextTransformationOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementNotStatementOutput{})
	pulumi.RegisterOutputType(WebAclRuleStatementOrStatementOutput{})
}
