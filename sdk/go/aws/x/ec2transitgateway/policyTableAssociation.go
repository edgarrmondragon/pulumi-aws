// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EC2 Transit Gateway Policy Table association.
type PolicyTableAssociation struct {
	pulumi.CustomResourceState

	// Identifier of the resource
	ResourceId pulumix.Output[string] `pulumi:"resourceId"`
	// Type of the resource
	ResourceType pulumix.Output[string] `pulumi:"resourceType"`
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId pulumix.Output[string] `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway Policy Table.
	TransitGatewayPolicyTableId pulumix.Output[string] `pulumi:"transitGatewayPolicyTableId"`
}

// NewPolicyTableAssociation registers a new resource with the given unique name, arguments, and options.
func NewPolicyTableAssociation(ctx *pulumi.Context,
	name string, args *PolicyTableAssociationArgs, opts ...pulumi.ResourceOption) (*PolicyTableAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayAttachmentId'")
	}
	if args.TransitGatewayPolicyTableId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayPolicyTableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyTableAssociation
	err := ctx.RegisterResource("aws:ec2transitgateway/policyTableAssociation:PolicyTableAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyTableAssociation gets an existing PolicyTableAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyTableAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyTableAssociationState, opts ...pulumi.ResourceOption) (*PolicyTableAssociation, error) {
	var resource PolicyTableAssociation
	err := ctx.ReadResource("aws:ec2transitgateway/policyTableAssociation:PolicyTableAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyTableAssociation resources.
type policyTableAssociationState struct {
	// Identifier of the resource
	ResourceId *string `pulumi:"resourceId"`
	// Type of the resource
	ResourceType *string `pulumi:"resourceType"`
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway Policy Table.
	TransitGatewayPolicyTableId *string `pulumi:"transitGatewayPolicyTableId"`
}

type PolicyTableAssociationState struct {
	// Identifier of the resource
	ResourceId pulumix.Input[*string]
	// Type of the resource
	ResourceType pulumix.Input[*string]
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId pulumix.Input[*string]
	// Identifier of EC2 Transit Gateway Policy Table.
	TransitGatewayPolicyTableId pulumix.Input[*string]
}

func (PolicyTableAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyTableAssociationState)(nil)).Elem()
}

type policyTableAssociationArgs struct {
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway Policy Table.
	TransitGatewayPolicyTableId string `pulumi:"transitGatewayPolicyTableId"`
}

// The set of arguments for constructing a PolicyTableAssociation resource.
type PolicyTableAssociationArgs struct {
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId pulumix.Input[string]
	// Identifier of EC2 Transit Gateway Policy Table.
	TransitGatewayPolicyTableId pulumix.Input[string]
}

func (PolicyTableAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyTableAssociationArgs)(nil)).Elem()
}

type PolicyTableAssociationOutput struct{ *pulumi.OutputState }

func (PolicyTableAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTableAssociation)(nil)).Elem()
}

func (o PolicyTableAssociationOutput) ToPolicyTableAssociationOutput() PolicyTableAssociationOutput {
	return o
}

func (o PolicyTableAssociationOutput) ToPolicyTableAssociationOutputWithContext(ctx context.Context) PolicyTableAssociationOutput {
	return o
}

func (o PolicyTableAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTableAssociation] {
	return pulumix.Output[PolicyTableAssociation]{
		OutputState: o.OutputState,
	}
}

// Identifier of the resource
func (o PolicyTableAssociationOutput) ResourceId() pulumix.Output[string] {
	value := pulumix.Apply[PolicyTableAssociation](o, func(v PolicyTableAssociation) pulumix.Output[string] { return v.ResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Type of the resource
func (o PolicyTableAssociationOutput) ResourceType() pulumix.Output[string] {
	value := pulumix.Apply[PolicyTableAssociation](o, func(v PolicyTableAssociation) pulumix.Output[string] { return v.ResourceType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of EC2 Transit Gateway Attachment.
func (o PolicyTableAssociationOutput) TransitGatewayAttachmentId() pulumix.Output[string] {
	value := pulumix.Apply[PolicyTableAssociation](o, func(v PolicyTableAssociation) pulumix.Output[string] { return v.TransitGatewayAttachmentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of EC2 Transit Gateway Policy Table.
func (o PolicyTableAssociationOutput) TransitGatewayPolicyTableId() pulumix.Output[string] {
	value := pulumix.Apply[PolicyTableAssociation](o, func(v PolicyTableAssociation) pulumix.Output[string] { return v.TransitGatewayPolicyTableId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(PolicyTableAssociationOutput{})
}
