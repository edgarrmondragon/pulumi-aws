// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect User Hierarchy Group resource. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
//
// > **NOTE:** The User Hierarchy Structure must be created before creating a User Hierarchy Group.
type UserHierarchyGroup struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The identifier for the hierarchy group.
	HierarchyGroupId pulumix.Output[string] `pulumi:"hierarchyGroupId"`
	// A block that contains information about the levels in the hierarchy group. The `hierarchyPath` block is documented below.
	HierarchyPaths pulumix.GArrayOutput[UserHierarchyGroupHierarchyPath, UserHierarchyGroupHierarchyPathOutput] `pulumi:"hierarchyPaths"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Output[string] `pulumi:"instanceId"`
	// The identifier of the level in the hierarchy group.
	LevelId pulumix.Output[string] `pulumi:"levelId"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name pulumix.Output[string] `pulumi:"name"`
	// The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
	ParentGroupId pulumix.Output[*string] `pulumi:"parentGroupId"`
	// Tags to apply to the hierarchy group. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewUserHierarchyGroup registers a new resource with the given unique name, arguments, and options.
func NewUserHierarchyGroup(ctx *pulumi.Context,
	name string, args *UserHierarchyGroupArgs, opts ...pulumi.ResourceOption) (*UserHierarchyGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserHierarchyGroup
	err := ctx.RegisterResource("aws:connect/userHierarchyGroup:UserHierarchyGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserHierarchyGroup gets an existing UserHierarchyGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserHierarchyGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserHierarchyGroupState, opts ...pulumi.ResourceOption) (*UserHierarchyGroup, error) {
	var resource UserHierarchyGroup
	err := ctx.ReadResource("aws:connect/userHierarchyGroup:UserHierarchyGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserHierarchyGroup resources.
type userHierarchyGroupState struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn *string `pulumi:"arn"`
	// The identifier for the hierarchy group.
	HierarchyGroupId *string `pulumi:"hierarchyGroupId"`
	// A block that contains information about the levels in the hierarchy group. The `hierarchyPath` block is documented below.
	HierarchyPaths []UserHierarchyGroupHierarchyPath `pulumi:"hierarchyPaths"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId *string `pulumi:"instanceId"`
	// The identifier of the level in the hierarchy group.
	LevelId *string `pulumi:"levelId"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name *string `pulumi:"name"`
	// The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
	ParentGroupId *string `pulumi:"parentGroupId"`
	// Tags to apply to the hierarchy group. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type UserHierarchyGroupState struct {
	// The Amazon Resource Name (ARN) of the hierarchy group.
	Arn pulumix.Input[*string]
	// The identifier for the hierarchy group.
	HierarchyGroupId pulumix.Input[*string]
	// A block that contains information about the levels in the hierarchy group. The `hierarchyPath` block is documented below.
	HierarchyPaths pulumix.Input[[]*UserHierarchyGroupHierarchyPathArgs]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[*string]
	// The identifier of the level in the hierarchy group.
	LevelId pulumix.Input[*string]
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name pulumix.Input[*string]
	// The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
	ParentGroupId pulumix.Input[*string]
	// Tags to apply to the hierarchy group. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (UserHierarchyGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*userHierarchyGroupState)(nil)).Elem()
}

type userHierarchyGroupArgs struct {
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name *string `pulumi:"name"`
	// The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
	ParentGroupId *string `pulumi:"parentGroupId"`
	// Tags to apply to the hierarchy group. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a UserHierarchyGroup resource.
type UserHierarchyGroupArgs struct {
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[string]
	// The name of the user hierarchy group. Must not be more than 100 characters.
	Name pulumix.Input[*string]
	// The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
	ParentGroupId pulumix.Input[*string]
	// Tags to apply to the hierarchy group. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (UserHierarchyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userHierarchyGroupArgs)(nil)).Elem()
}

type UserHierarchyGroupOutput struct{ *pulumi.OutputState }

func (UserHierarchyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyGroup)(nil)).Elem()
}

func (o UserHierarchyGroupOutput) ToUserHierarchyGroupOutput() UserHierarchyGroupOutput {
	return o
}

func (o UserHierarchyGroupOutput) ToUserHierarchyGroupOutputWithContext(ctx context.Context) UserHierarchyGroupOutput {
	return o
}

func (o UserHierarchyGroupOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyGroup] {
	return pulumix.Output[UserHierarchyGroup]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the hierarchy group.
func (o UserHierarchyGroupOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[UserHierarchyGroup](o, func(v UserHierarchyGroup) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier for the hierarchy group.
func (o UserHierarchyGroupOutput) HierarchyGroupId() pulumix.Output[string] {
	value := pulumix.Apply[UserHierarchyGroup](o, func(v UserHierarchyGroup) pulumix.Output[string] { return v.HierarchyGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A block that contains information about the levels in the hierarchy group. The `hierarchyPath` block is documented below.
func (o UserHierarchyGroupOutput) HierarchyPaths() pulumix.GArrayOutput[UserHierarchyGroupHierarchyPath, UserHierarchyGroupHierarchyPathOutput] {
	value := pulumix.Apply[UserHierarchyGroup](o, func(v UserHierarchyGroup) pulumix.GArrayOutput[UserHierarchyGroupHierarchyPath, UserHierarchyGroupHierarchyPathOutput] {
		return v.HierarchyPaths
	})
	unwrapped := pulumix.Flatten[[]UserHierarchyGroupHierarchyPath, pulumix.GArrayOutput[UserHierarchyGroupHierarchyPath, UserHierarchyGroupHierarchyPathOutput]](value)
	return pulumix.GArrayOutput[UserHierarchyGroupHierarchyPath, UserHierarchyGroupHierarchyPathOutput]{OutputState: unwrapped.OutputState}
}

// Specifies the identifier of the hosting Amazon Connect Instance.
func (o UserHierarchyGroupOutput) InstanceId() pulumix.Output[string] {
	value := pulumix.Apply[UserHierarchyGroup](o, func(v UserHierarchyGroup) pulumix.Output[string] { return v.InstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier of the level in the hierarchy group.
func (o UserHierarchyGroupOutput) LevelId() pulumix.Output[string] {
	value := pulumix.Apply[UserHierarchyGroup](o, func(v UserHierarchyGroup) pulumix.Output[string] { return v.LevelId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the user hierarchy group. Must not be more than 100 characters.
func (o UserHierarchyGroupOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[UserHierarchyGroup](o, func(v UserHierarchyGroup) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
func (o UserHierarchyGroupOutput) ParentGroupId() pulumix.Output[*string] {
	value := pulumix.Apply[UserHierarchyGroup](o, func(v UserHierarchyGroup) pulumix.Output[*string] { return v.ParentGroupId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Tags to apply to the hierarchy group. If configured with a provider
// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o UserHierarchyGroupOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[UserHierarchyGroup](o, func(v UserHierarchyGroup) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o UserHierarchyGroupOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[UserHierarchyGroup](o, func(v UserHierarchyGroup) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(UserHierarchyGroupOutput{})
}
