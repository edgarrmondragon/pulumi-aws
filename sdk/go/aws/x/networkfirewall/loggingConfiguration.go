// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AWS Network Firewall Logging Configuration Resource
type LoggingConfiguration struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn pulumix.Output[string] `pulumi:"firewallArn"`
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration pulumix.GPtrOutput[LoggingConfigurationLoggingConfiguration, LoggingConfigurationLoggingConfigurationOutput] `pulumi:"loggingConfiguration"`
}

// NewLoggingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewLoggingConfiguration(ctx *pulumi.Context,
	name string, args *LoggingConfigurationArgs, opts ...pulumi.ResourceOption) (*LoggingConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallArn == nil {
		return nil, errors.New("invalid value for required argument 'FirewallArn'")
	}
	if args.LoggingConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'LoggingConfiguration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoggingConfiguration
	err := ctx.RegisterResource("aws:networkfirewall/loggingConfiguration:LoggingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingConfiguration gets an existing LoggingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingConfigurationState, opts ...pulumi.ResourceOption) (*LoggingConfiguration, error) {
	var resource LoggingConfiguration
	err := ctx.ReadResource("aws:networkfirewall/loggingConfiguration:LoggingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingConfiguration resources.
type loggingConfigurationState struct {
	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn *string `pulumi:"firewallArn"`
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration *LoggingConfigurationLoggingConfiguration `pulumi:"loggingConfiguration"`
}

type LoggingConfigurationState struct {
	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn pulumix.Input[*string]
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration pulumix.Input[*LoggingConfigurationLoggingConfigurationArgs]
}

func (LoggingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingConfigurationState)(nil)).Elem()
}

type loggingConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn string `pulumi:"firewallArn"`
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration LoggingConfigurationLoggingConfiguration `pulumi:"loggingConfiguration"`
}

// The set of arguments for constructing a LoggingConfiguration resource.
type LoggingConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn pulumix.Input[string]
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration pulumix.Input[*LoggingConfigurationLoggingConfigurationArgs]
}

func (LoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingConfigurationArgs)(nil)).Elem()
}

type LoggingConfigurationOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfiguration)(nil)).Elem()
}

func (o LoggingConfigurationOutput) ToLoggingConfigurationOutput() LoggingConfigurationOutput {
	return o
}

func (o LoggingConfigurationOutput) ToLoggingConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationOutput {
	return o
}

func (o LoggingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfiguration] {
	return pulumix.Output[LoggingConfiguration]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Network Firewall firewall.
func (o LoggingConfigurationOutput) FirewallArn() pulumix.Output[string] {
	value := pulumix.Apply[LoggingConfiguration](o, func(v LoggingConfiguration) pulumix.Output[string] { return v.FirewallArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
func (o LoggingConfigurationOutput) LoggingConfiguration() pulumix.GPtrOutput[LoggingConfigurationLoggingConfiguration, LoggingConfigurationLoggingConfigurationOutput] {
	value := pulumix.Apply[LoggingConfiguration](o, func(v LoggingConfiguration) pulumix.GPtrOutput[LoggingConfigurationLoggingConfiguration, LoggingConfigurationLoggingConfigurationOutput] {
		return v.LoggingConfiguration
	})
	unwrapped := pulumix.Flatten[*LoggingConfigurationLoggingConfiguration, pulumix.GPtrOutput[LoggingConfigurationLoggingConfiguration, LoggingConfigurationLoggingConfigurationOutput]](value)
	return pulumix.GPtrOutput[LoggingConfigurationLoggingConfiguration, LoggingConfigurationLoggingConfigurationOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(LoggingConfigurationOutput{})
}
