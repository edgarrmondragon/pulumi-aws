// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AWS Config Delivery Channel.
//
// > **Note:** Delivery Channel requires a Configuration Recorder to be present. Use of `dependsOn` (as shown below) is recommended to avoid race conditions.
type DeliveryChannel struct {
	pulumi.CustomResourceState

	// The name of the delivery channel. Defaults to `default`. Changing it recreates the resource.
	Name pulumix.Output[string] `pulumi:"name"`
	// The name of the S3 bucket used to store the configuration history.
	S3BucketName pulumix.Output[string] `pulumi:"s3BucketName"`
	// The prefix for the specified S3 bucket.
	S3KeyPrefix pulumix.Output[*string] `pulumi:"s3KeyPrefix"`
	// The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.
	S3KmsKeyArn pulumix.Output[*string] `pulumi:"s3KmsKeyArn"`
	// Options for how AWS Config delivers configuration snapshots. See below
	SnapshotDeliveryProperties pulumix.GPtrOutput[DeliveryChannelSnapshotDeliveryProperties, DeliveryChannelSnapshotDeliveryPropertiesOutput] `pulumi:"snapshotDeliveryProperties"`
	// The ARN of the SNS topic that AWS Config delivers notifications to.
	SnsTopicArn pulumix.Output[*string] `pulumi:"snsTopicArn"`
}

// NewDeliveryChannel registers a new resource with the given unique name, arguments, and options.
func NewDeliveryChannel(ctx *pulumi.Context,
	name string, args *DeliveryChannelArgs, opts ...pulumi.ResourceOption) (*DeliveryChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.S3BucketName == nil {
		return nil, errors.New("invalid value for required argument 'S3BucketName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeliveryChannel
	err := ctx.RegisterResource("aws:cfg/deliveryChannel:DeliveryChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeliveryChannel gets an existing DeliveryChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeliveryChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeliveryChannelState, opts ...pulumi.ResourceOption) (*DeliveryChannel, error) {
	var resource DeliveryChannel
	err := ctx.ReadResource("aws:cfg/deliveryChannel:DeliveryChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeliveryChannel resources.
type deliveryChannelState struct {
	// The name of the delivery channel. Defaults to `default`. Changing it recreates the resource.
	Name *string `pulumi:"name"`
	// The name of the S3 bucket used to store the configuration history.
	S3BucketName *string `pulumi:"s3BucketName"`
	// The prefix for the specified S3 bucket.
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
	// The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.
	S3KmsKeyArn *string `pulumi:"s3KmsKeyArn"`
	// Options for how AWS Config delivers configuration snapshots. See below
	SnapshotDeliveryProperties *DeliveryChannelSnapshotDeliveryProperties `pulumi:"snapshotDeliveryProperties"`
	// The ARN of the SNS topic that AWS Config delivers notifications to.
	SnsTopicArn *string `pulumi:"snsTopicArn"`
}

type DeliveryChannelState struct {
	// The name of the delivery channel. Defaults to `default`. Changing it recreates the resource.
	Name pulumix.Input[*string]
	// The name of the S3 bucket used to store the configuration history.
	S3BucketName pulumix.Input[*string]
	// The prefix for the specified S3 bucket.
	S3KeyPrefix pulumix.Input[*string]
	// The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.
	S3KmsKeyArn pulumix.Input[*string]
	// Options for how AWS Config delivers configuration snapshots. See below
	SnapshotDeliveryProperties pulumix.Input[*DeliveryChannelSnapshotDeliveryPropertiesArgs]
	// The ARN of the SNS topic that AWS Config delivers notifications to.
	SnsTopicArn pulumix.Input[*string]
}

func (DeliveryChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryChannelState)(nil)).Elem()
}

type deliveryChannelArgs struct {
	// The name of the delivery channel. Defaults to `default`. Changing it recreates the resource.
	Name *string `pulumi:"name"`
	// The name of the S3 bucket used to store the configuration history.
	S3BucketName string `pulumi:"s3BucketName"`
	// The prefix for the specified S3 bucket.
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
	// The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.
	S3KmsKeyArn *string `pulumi:"s3KmsKeyArn"`
	// Options for how AWS Config delivers configuration snapshots. See below
	SnapshotDeliveryProperties *DeliveryChannelSnapshotDeliveryProperties `pulumi:"snapshotDeliveryProperties"`
	// The ARN of the SNS topic that AWS Config delivers notifications to.
	SnsTopicArn *string `pulumi:"snsTopicArn"`
}

// The set of arguments for constructing a DeliveryChannel resource.
type DeliveryChannelArgs struct {
	// The name of the delivery channel. Defaults to `default`. Changing it recreates the resource.
	Name pulumix.Input[*string]
	// The name of the S3 bucket used to store the configuration history.
	S3BucketName pulumix.Input[string]
	// The prefix for the specified S3 bucket.
	S3KeyPrefix pulumix.Input[*string]
	// The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.
	S3KmsKeyArn pulumix.Input[*string]
	// Options for how AWS Config delivers configuration snapshots. See below
	SnapshotDeliveryProperties pulumix.Input[*DeliveryChannelSnapshotDeliveryPropertiesArgs]
	// The ARN of the SNS topic that AWS Config delivers notifications to.
	SnsTopicArn pulumix.Input[*string]
}

func (DeliveryChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryChannelArgs)(nil)).Elem()
}

type DeliveryChannelOutput struct{ *pulumi.OutputState }

func (DeliveryChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryChannel)(nil)).Elem()
}

func (o DeliveryChannelOutput) ToDeliveryChannelOutput() DeliveryChannelOutput {
	return o
}

func (o DeliveryChannelOutput) ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput {
	return o
}

func (o DeliveryChannelOutput) ToOutput(ctx context.Context) pulumix.Output[DeliveryChannel] {
	return pulumix.Output[DeliveryChannel]{
		OutputState: o.OutputState,
	}
}

// The name of the delivery channel. Defaults to `default`. Changing it recreates the resource.
func (o DeliveryChannelOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[DeliveryChannel](o, func(v DeliveryChannel) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the S3 bucket used to store the configuration history.
func (o DeliveryChannelOutput) S3BucketName() pulumix.Output[string] {
	value := pulumix.Apply[DeliveryChannel](o, func(v DeliveryChannel) pulumix.Output[string] { return v.S3BucketName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The prefix for the specified S3 bucket.
func (o DeliveryChannelOutput) S3KeyPrefix() pulumix.Output[*string] {
	value := pulumix.Apply[DeliveryChannel](o, func(v DeliveryChannel) pulumix.Output[*string] { return v.S3KeyPrefix })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.
func (o DeliveryChannelOutput) S3KmsKeyArn() pulumix.Output[*string] {
	value := pulumix.Apply[DeliveryChannel](o, func(v DeliveryChannel) pulumix.Output[*string] { return v.S3KmsKeyArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Options for how AWS Config delivers configuration snapshots. See below
func (o DeliveryChannelOutput) SnapshotDeliveryProperties() pulumix.GPtrOutput[DeliveryChannelSnapshotDeliveryProperties, DeliveryChannelSnapshotDeliveryPropertiesOutput] {
	value := pulumix.Apply[DeliveryChannel](o, func(v DeliveryChannel) pulumix.GPtrOutput[DeliveryChannelSnapshotDeliveryProperties, DeliveryChannelSnapshotDeliveryPropertiesOutput] {
		return v.SnapshotDeliveryProperties
	})
	unwrapped := pulumix.Flatten[*DeliveryChannelSnapshotDeliveryProperties, pulumix.GPtrOutput[DeliveryChannelSnapshotDeliveryProperties, DeliveryChannelSnapshotDeliveryPropertiesOutput]](value)
	return pulumix.GPtrOutput[DeliveryChannelSnapshotDeliveryProperties, DeliveryChannelSnapshotDeliveryPropertiesOutput]{OutputState: unwrapped.OutputState}
}

// The ARN of the SNS topic that AWS Config delivers notifications to.
func (o DeliveryChannelOutput) SnsTopicArn() pulumix.Output[*string] {
	value := pulumix.Apply[DeliveryChannel](o, func(v DeliveryChannel) pulumix.Output[*string] { return v.SnsTopicArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(DeliveryChannelOutput{})
}
