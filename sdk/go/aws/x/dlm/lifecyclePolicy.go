// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a [Data Lifecycle Manager (DLM) lifecycle policy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html) for managing snapshots.
type LifecyclePolicy struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the DLM Lifecycle Policy.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A description for the DLM lifecycle policy.
	Description pulumix.Output[string] `pulumi:"description"`
	// The ARN of an IAM role that is able to be assumed by the DLM service.
	ExecutionRoleArn pulumix.Output[string] `pulumi:"executionRoleArn"`
	// See the `policyDetails` configuration block. Max of 1.
	PolicyDetails pulumix.GPtrOutput[LifecyclePolicyPolicyDetails, LifecyclePolicyPolicyDetailsOutput] `pulumi:"policyDetails"`
	// Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
	State pulumix.Output[*string] `pulumi:"state"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewLifecyclePolicy registers a new resource with the given unique name, arguments, and options.
func NewLifecyclePolicy(ctx *pulumi.Context,
	name string, args *LifecyclePolicyArgs, opts ...pulumi.ResourceOption) (*LifecyclePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.ExecutionRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ExecutionRoleArn'")
	}
	if args.PolicyDetails == nil {
		return nil, errors.New("invalid value for required argument 'PolicyDetails'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LifecyclePolicy
	err := ctx.RegisterResource("aws:dlm/lifecyclePolicy:LifecyclePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLifecyclePolicy gets an existing LifecyclePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLifecyclePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LifecyclePolicyState, opts ...pulumi.ResourceOption) (*LifecyclePolicy, error) {
	var resource LifecyclePolicy
	err := ctx.ReadResource("aws:dlm/lifecyclePolicy:LifecyclePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LifecyclePolicy resources.
type lifecyclePolicyState struct {
	// Amazon Resource Name (ARN) of the DLM Lifecycle Policy.
	Arn *string `pulumi:"arn"`
	// A description for the DLM lifecycle policy.
	Description *string `pulumi:"description"`
	// The ARN of an IAM role that is able to be assumed by the DLM service.
	ExecutionRoleArn *string `pulumi:"executionRoleArn"`
	// See the `policyDetails` configuration block. Max of 1.
	PolicyDetails *LifecyclePolicyPolicyDetails `pulumi:"policyDetails"`
	// Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
	State *string `pulumi:"state"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type LifecyclePolicyState struct {
	// Amazon Resource Name (ARN) of the DLM Lifecycle Policy.
	Arn pulumix.Input[*string]
	// A description for the DLM lifecycle policy.
	Description pulumix.Input[*string]
	// The ARN of an IAM role that is able to be assumed by the DLM service.
	ExecutionRoleArn pulumix.Input[*string]
	// See the `policyDetails` configuration block. Max of 1.
	PolicyDetails pulumix.Input[*LifecyclePolicyPolicyDetailsArgs]
	// Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
	State pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (LifecyclePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecyclePolicyState)(nil)).Elem()
}

type lifecyclePolicyArgs struct {
	// A description for the DLM lifecycle policy.
	Description string `pulumi:"description"`
	// The ARN of an IAM role that is able to be assumed by the DLM service.
	ExecutionRoleArn string `pulumi:"executionRoleArn"`
	// See the `policyDetails` configuration block. Max of 1.
	PolicyDetails LifecyclePolicyPolicyDetails `pulumi:"policyDetails"`
	// Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
	State *string `pulumi:"state"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LifecyclePolicy resource.
type LifecyclePolicyArgs struct {
	// A description for the DLM lifecycle policy.
	Description pulumix.Input[string]
	// The ARN of an IAM role that is able to be assumed by the DLM service.
	ExecutionRoleArn pulumix.Input[string]
	// See the `policyDetails` configuration block. Max of 1.
	PolicyDetails pulumix.Input[*LifecyclePolicyPolicyDetailsArgs]
	// Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
	State pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (LifecyclePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecyclePolicyArgs)(nil)).Elem()
}

type LifecyclePolicyOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicy)(nil)).Elem()
}

func (o LifecyclePolicyOutput) ToLifecyclePolicyOutput() LifecyclePolicyOutput {
	return o
}

func (o LifecyclePolicyOutput) ToLifecyclePolicyOutputWithContext(ctx context.Context) LifecyclePolicyOutput {
	return o
}

func (o LifecyclePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[LifecyclePolicy] {
	return pulumix.Output[LifecyclePolicy]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the DLM Lifecycle Policy.
func (o LifecyclePolicyOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[LifecyclePolicy](o, func(v LifecyclePolicy) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description for the DLM lifecycle policy.
func (o LifecyclePolicyOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[LifecyclePolicy](o, func(v LifecyclePolicy) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of an IAM role that is able to be assumed by the DLM service.
func (o LifecyclePolicyOutput) ExecutionRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[LifecyclePolicy](o, func(v LifecyclePolicy) pulumix.Output[string] { return v.ExecutionRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// See the `policyDetails` configuration block. Max of 1.
func (o LifecyclePolicyOutput) PolicyDetails() pulumix.GPtrOutput[LifecyclePolicyPolicyDetails, LifecyclePolicyPolicyDetailsOutput] {
	value := pulumix.Apply[LifecyclePolicy](o, func(v LifecyclePolicy) pulumix.GPtrOutput[LifecyclePolicyPolicyDetails, LifecyclePolicyPolicyDetailsOutput] {
		return v.PolicyDetails
	})
	unwrapped := pulumix.Flatten[*LifecyclePolicyPolicyDetails, pulumix.GPtrOutput[LifecyclePolicyPolicyDetails, LifecyclePolicyPolicyDetailsOutput]](value)
	return pulumix.GPtrOutput[LifecyclePolicyPolicyDetails, LifecyclePolicyPolicyDetailsOutput]{OutputState: unwrapped.OutputState}
}

// Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
func (o LifecyclePolicyOutput) State() pulumix.Output[*string] {
	value := pulumix.Apply[LifecyclePolicy](o, func(v LifecyclePolicy) pulumix.Output[*string] { return v.State })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o LifecyclePolicyOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[LifecyclePolicy](o, func(v LifecyclePolicy) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o LifecyclePolicyOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[LifecyclePolicy](o, func(v LifecyclePolicy) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(LifecyclePolicyOutput{})
}
