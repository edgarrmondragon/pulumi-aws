// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `wafregional.RateBasedRule` Retrieves a WAF Regional Rate Based Rule Resource Id.
func GetRateBasedMod(ctx *pulumi.Context, args *GetRateBasedModArgs, opts ...pulumi.InvokeOption) (*GetRateBasedModResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRateBasedModResult
	err := ctx.Invoke("aws:wafregional/getRateBasedMod:getRateBasedMod", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRateBasedMod.
type GetRateBasedModArgs struct {
	// Name of the WAF Regional rate based rule.
	Name string `pulumi:"name"`
}

// A collection of values returned by getRateBasedMod.
type GetRateBasedModResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func GetRateBasedModOutput(ctx *pulumi.Context, args GetRateBasedModOutputArgs, opts ...pulumi.InvokeOption) GetRateBasedModResultOutput {
	outputResult := pulumix.ApplyErr[*GetRateBasedModArgs](args.ToOutput(), func(plainArgs *GetRateBasedModArgs) (*GetRateBasedModResult, error) {
		return GetRateBasedMod(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetRateBasedModResultOutput, *GetRateBasedModResult](outputResult)
}

// A collection of arguments for invoking getRateBasedMod.
type GetRateBasedModOutputArgs struct {
	// Name of the WAF Regional rate based rule.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args GetRateBasedModOutputArgs) ToOutput() pulumix.Output[*GetRateBasedModArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetRateBasedModArgs {
		return &GetRateBasedModArgs{
			Name: resolvedArgs[0].(string),
		}
	})
}

type GetRateBasedModResultOutput struct{ *pulumi.OutputState }

func (GetRateBasedModResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRateBasedModResult)(nil)).Elem()
}

func (o GetRateBasedModResultOutput) ToOutput(context.Context) pulumix.Output[*GetRateBasedModResult] {
	return pulumix.Output[*GetRateBasedModResult]{
		OutputState: o.OutputState,
	}
}

func (o GetRateBasedModResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetRateBasedModResult](o, func(v *GetRateBasedModResult) string { return v.Id })
}

func (o GetRateBasedModResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*GetRateBasedModResult](o, func(v *GetRateBasedModResult) string { return v.Name })
}
