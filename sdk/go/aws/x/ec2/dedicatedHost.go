// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an EC2 Host resource. This allows Dedicated Hosts to be allocated, modified, and released.
type DedicatedHost struct {
	pulumi.CustomResourceState

	// The ARN of the Dedicated Host.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ID of the Outpost hardware asset on which to allocate the Dedicated Hosts. This parameter is supported only if you specify OutpostArn. If you are allocating the Dedicated Hosts in a Region, omit this parameter.
	AssetId pulumix.Output[string] `pulumi:"assetId"`
	// Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. Valid values: `on`, `off`. Default: `on`.
	AutoPlacement pulumix.Output[*string] `pulumi:"autoPlacement"`
	// The Availability Zone in which to allocate the Dedicated Host.
	AvailabilityZone pulumix.Output[string] `pulumi:"availabilityZone"`
	// Indicates whether to enable or disable host recovery for the Dedicated Host. Valid values: `on`, `off`. Default: `off`.
	HostRecovery pulumix.Output[*string] `pulumi:"hostRecovery"`
	// Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceFamily pulumix.Output[*string] `pulumi:"instanceFamily"`
	// Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceType pulumix.Output[*string] `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the AWS Outpost on which to allocate the Dedicated Host.
	OutpostArn pulumix.Output[*string] `pulumi:"outpostArn"`
	// The ID of the AWS account that owns the Dedicated Host.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDedicatedHost registers a new resource with the given unique name, arguments, and options.
func NewDedicatedHost(ctx *pulumi.Context,
	name string, args *DedicatedHostArgs, opts ...pulumi.ResourceOption) (*DedicatedHost, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DedicatedHost
	err := ctx.RegisterResource("aws:ec2/dedicatedHost:DedicatedHost", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDedicatedHost gets an existing DedicatedHost resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedHost(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DedicatedHostState, opts ...pulumi.ResourceOption) (*DedicatedHost, error) {
	var resource DedicatedHost
	err := ctx.ReadResource("aws:ec2/dedicatedHost:DedicatedHost", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DedicatedHost resources.
type dedicatedHostState struct {
	// The ARN of the Dedicated Host.
	Arn *string `pulumi:"arn"`
	// The ID of the Outpost hardware asset on which to allocate the Dedicated Hosts. This parameter is supported only if you specify OutpostArn. If you are allocating the Dedicated Hosts in a Region, omit this parameter.
	AssetId *string `pulumi:"assetId"`
	// Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. Valid values: `on`, `off`. Default: `on`.
	AutoPlacement *string `pulumi:"autoPlacement"`
	// The Availability Zone in which to allocate the Dedicated Host.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Indicates whether to enable or disable host recovery for the Dedicated Host. Valid values: `on`, `off`. Default: `off`.
	HostRecovery *string `pulumi:"hostRecovery"`
	// Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceFamily *string `pulumi:"instanceFamily"`
	// Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the AWS Outpost on which to allocate the Dedicated Host.
	OutpostArn *string `pulumi:"outpostArn"`
	// The ID of the AWS account that owns the Dedicated Host.
	OwnerId *string `pulumi:"ownerId"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DedicatedHostState struct {
	// The ARN of the Dedicated Host.
	Arn pulumix.Input[*string]
	// The ID of the Outpost hardware asset on which to allocate the Dedicated Hosts. This parameter is supported only if you specify OutpostArn. If you are allocating the Dedicated Hosts in a Region, omit this parameter.
	AssetId pulumix.Input[*string]
	// Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. Valid values: `on`, `off`. Default: `on`.
	AutoPlacement pulumix.Input[*string]
	// The Availability Zone in which to allocate the Dedicated Host.
	AvailabilityZone pulumix.Input[*string]
	// Indicates whether to enable or disable host recovery for the Dedicated Host. Valid values: `on`, `off`. Default: `off`.
	HostRecovery pulumix.Input[*string]
	// Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceFamily pulumix.Input[*string]
	// Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceType pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the AWS Outpost on which to allocate the Dedicated Host.
	OutpostArn pulumix.Input[*string]
	// The ID of the AWS account that owns the Dedicated Host.
	OwnerId pulumix.Input[*string]
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DedicatedHostState) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedHostState)(nil)).Elem()
}

type dedicatedHostArgs struct {
	// The ID of the Outpost hardware asset on which to allocate the Dedicated Hosts. This parameter is supported only if you specify OutpostArn. If you are allocating the Dedicated Hosts in a Region, omit this parameter.
	AssetId *string `pulumi:"assetId"`
	// Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. Valid values: `on`, `off`. Default: `on`.
	AutoPlacement *string `pulumi:"autoPlacement"`
	// The Availability Zone in which to allocate the Dedicated Host.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates whether to enable or disable host recovery for the Dedicated Host. Valid values: `on`, `off`. Default: `off`.
	HostRecovery *string `pulumi:"hostRecovery"`
	// Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceFamily *string `pulumi:"instanceFamily"`
	// Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceType *string `pulumi:"instanceType"`
	// The Amazon Resource Name (ARN) of the AWS Outpost on which to allocate the Dedicated Host.
	OutpostArn *string `pulumi:"outpostArn"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DedicatedHost resource.
type DedicatedHostArgs struct {
	// The ID of the Outpost hardware asset on which to allocate the Dedicated Hosts. This parameter is supported only if you specify OutpostArn. If you are allocating the Dedicated Hosts in a Region, omit this parameter.
	AssetId pulumix.Input[*string]
	// Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. Valid values: `on`, `off`. Default: `on`.
	AutoPlacement pulumix.Input[*string]
	// The Availability Zone in which to allocate the Dedicated Host.
	AvailabilityZone pulumix.Input[string]
	// Indicates whether to enable or disable host recovery for the Dedicated Host. Valid values: `on`, `off`. Default: `off`.
	HostRecovery pulumix.Input[*string]
	// Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceFamily pulumix.Input[*string]
	// Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only. Exactly one of `instanceFamily` or `instanceType` must be specified.
	InstanceType pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the AWS Outpost on which to allocate the Dedicated Host.
	OutpostArn pulumix.Input[*string]
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DedicatedHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedHostArgs)(nil)).Elem()
}

type DedicatedHostOutput struct{ *pulumi.OutputState }

func (DedicatedHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedHost)(nil)).Elem()
}

func (o DedicatedHostOutput) ToDedicatedHostOutput() DedicatedHostOutput {
	return o
}

func (o DedicatedHostOutput) ToDedicatedHostOutputWithContext(ctx context.Context) DedicatedHostOutput {
	return o
}

func (o DedicatedHostOutput) ToOutput(ctx context.Context) pulumix.Output[DedicatedHost] {
	return pulumix.Output[DedicatedHost]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Dedicated Host.
func (o DedicatedHostOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the Outpost hardware asset on which to allocate the Dedicated Hosts. This parameter is supported only if you specify OutpostArn. If you are allocating the Dedicated Hosts in a Region, omit this parameter.
func (o DedicatedHostOutput) AssetId() pulumix.Output[string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.Output[string] { return v.AssetId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. Valid values: `on`, `off`. Default: `on`.
func (o DedicatedHostOutput) AutoPlacement() pulumix.Output[*string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.Output[*string] { return v.AutoPlacement })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Availability Zone in which to allocate the Dedicated Host.
func (o DedicatedHostOutput) AvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.Output[string] { return v.AvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether to enable or disable host recovery for the Dedicated Host. Valid values: `on`, `off`. Default: `off`.
func (o DedicatedHostOutput) HostRecovery() pulumix.Output[*string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.Output[*string] { return v.HostRecovery })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family. Exactly one of `instanceFamily` or `instanceType` must be specified.
func (o DedicatedHostOutput) InstanceFamily() pulumix.Output[*string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.Output[*string] { return v.InstanceFamily })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only. Exactly one of `instanceFamily` or `instanceType` must be specified.
func (o DedicatedHostOutput) InstanceType() pulumix.Output[*string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.Output[*string] { return v.InstanceType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Amazon Resource Name (ARN) of the AWS Outpost on which to allocate the Dedicated Host.
func (o DedicatedHostOutput) OutpostArn() pulumix.Output[*string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.Output[*string] { return v.OutpostArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ID of the AWS account that owns the Dedicated Host.
func (o DedicatedHostOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DedicatedHostOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DedicatedHostOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DedicatedHost](o, func(v DedicatedHost) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DedicatedHostOutput{})
}
