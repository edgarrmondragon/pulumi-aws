// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The "AMI from instance" resource allows the creation of an Amazon Machine
// Image (AMI) modelled after an existing EBS-backed EC2 instance.
//
// The created AMI will refer to implicitly-created snapshots of the instance's
// EBS volumes and mimick its assigned block device configuration at the time
// the resource is created.
//
// This resource is best applied to an instance that is stopped when this instance
// is created, so that the contents of the created image are predictable. When
// applied to an instance that is running, *the instance will be stopped before taking
// the snapshots and then started back up again*, resulting in a period of
// downtime.
//
// Note that the source instance is inspected only at the initial creation of this
// resource. Ongoing updates to the referenced instance will not be propagated into
// the generated AMI. Users may taint or otherwise recreate the resource in order
// to produce a fresh snapshot.
type AmiFromInstance struct {
	pulumi.CustomResourceState

	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumix.Output[string] `pulumi:"architecture"`
	// ARN of the AMI.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumix.Output[string] `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumix.Output[*string] `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices pulumix.GArrayOutput[AmiFromInstanceEbsBlockDevice, AmiFromInstanceEbsBlockDeviceOutput] `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumix.Output[bool] `pulumi:"enaSupport"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices pulumix.GArrayOutput[AmiFromInstanceEphemeralBlockDevice, AmiFromInstanceEphemeralBlockDeviceOutput] `pulumi:"ephemeralBlockDevices"`
	Hypervisor            pulumix.Output[string]                                                                               `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   pulumix.Output[string] `pulumi:"imageLocation"`
	ImageOwnerAlias pulumix.Output[string] `pulumi:"imageOwnerAlias"`
	ImageType       pulumix.Output[string] `pulumi:"imageType"`
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport pulumix.Output[string] `pulumi:"imdsSupport"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId           pulumix.Output[string] `pulumi:"kernelId"`
	ManageEbsSnapshots pulumix.Output[bool]   `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name            pulumix.Output[string] `pulumi:"name"`
	OwnerId         pulumix.Output[string] `pulumi:"ownerId"`
	Platform        pulumix.Output[string] `pulumi:"platform"`
	PlatformDetails pulumix.Output[string] `pulumi:"platformDetails"`
	Public          pulumix.Output[bool]   `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumix.Output[string] `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumix.Output[string] `pulumi:"rootDeviceName"`
	RootSnapshotId pulumix.Output[string] `pulumi:"rootSnapshotId"`
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot pulumix.Output[*bool] `pulumi:"snapshotWithoutReboot"`
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId pulumix.Output[string] `pulumi:"sourceInstanceId"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumix.Output[string] `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     pulumix.Output[string] `pulumi:"tpmSupport"`
	UsageOperation pulumix.Output[string] `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumix.Output[string] `pulumi:"virtualizationType"`
}

// NewAmiFromInstance registers a new resource with the given unique name, arguments, and options.
func NewAmiFromInstance(ctx *pulumi.Context,
	name string, args *AmiFromInstanceArgs, opts ...pulumi.ResourceOption) (*AmiFromInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'SourceInstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AmiFromInstance
	err := ctx.RegisterResource("aws:ec2/amiFromInstance:AmiFromInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmiFromInstance gets an existing AmiFromInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmiFromInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiFromInstanceState, opts ...pulumi.ResourceOption) (*AmiFromInstance, error) {
	var resource AmiFromInstance
	err := ctx.ReadResource("aws:ec2/amiFromInstance:AmiFromInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmiFromInstance resources.
type amiFromInstanceState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture *string `pulumi:"architecture"`
	// ARN of the AMI.
	Arn *string `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode *string `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiFromInstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport *bool `pulumi:"enaSupport"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiFromInstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Hypervisor            *string                               `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   *string `pulumi:"imageLocation"`
	ImageOwnerAlias *string `pulumi:"imageOwnerAlias"`
	ImageType       *string `pulumi:"imageType"`
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport *string `pulumi:"imdsSupport"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId           *string `pulumi:"kernelId"`
	ManageEbsSnapshots *bool   `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name            *string `pulumi:"name"`
	OwnerId         *string `pulumi:"ownerId"`
	Platform        *string `pulumi:"platform"`
	PlatformDetails *string `pulumi:"platformDetails"`
	Public          *bool   `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId *string `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName *string `pulumi:"rootDeviceName"`
	RootSnapshotId *string `pulumi:"rootSnapshotId"`
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot *bool `pulumi:"snapshotWithoutReboot"`
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId *string `pulumi:"sourceInstanceId"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport *string `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     *string `pulumi:"tpmSupport"`
	UsageOperation *string `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

type AmiFromInstanceState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumix.Input[*string]
	// ARN of the AMI.
	Arn pulumix.Input[*string]
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumix.Input[*string]
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumix.Input[*string]
	// Longer, human-readable description for the AMI.
	Description pulumix.Input[*string]
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices pulumix.Input[[]*AmiFromInstanceEbsBlockDeviceArgs]
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumix.Input[*bool]
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices pulumix.Input[[]*AmiFromInstanceEphemeralBlockDeviceArgs]
	Hypervisor            pulumix.Input[*string]
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   pulumix.Input[*string]
	ImageOwnerAlias pulumix.Input[*string]
	ImageType       pulumix.Input[*string]
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport pulumix.Input[*string]
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId           pulumix.Input[*string]
	ManageEbsSnapshots pulumix.Input[*bool]
	// Region-unique name for the AMI.
	Name            pulumix.Input[*string]
	OwnerId         pulumix.Input[*string]
	Platform        pulumix.Input[*string]
	PlatformDetails pulumix.Input[*string]
	Public          pulumix.Input[*bool]
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumix.Input[*string]
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumix.Input[*string]
	RootSnapshotId pulumix.Input[*string]
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot pulumix.Input[*bool]
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId pulumix.Input[*string]
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.Input[map[string]string]
	TagsAll pulumix.Input[map[string]string]
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     pulumix.Input[*string]
	UsageOperation pulumix.Input[*string]
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumix.Input[*string]
}

func (AmiFromInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiFromInstanceState)(nil)).Elem()
}

type amiFromInstanceArgs struct {
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiFromInstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiFromInstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Region-unique name for the AMI.
	Name *string `pulumi:"name"`
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot *bool `pulumi:"snapshotWithoutReboot"`
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId string `pulumi:"sourceInstanceId"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AmiFromInstance resource.
type AmiFromInstanceArgs struct {
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumix.Input[*string]
	// Longer, human-readable description for the AMI.
	Description pulumix.Input[*string]
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices pulumix.Input[[]*AmiFromInstanceEbsBlockDeviceArgs]
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices pulumix.Input[[]*AmiFromInstanceEphemeralBlockDeviceArgs]
	// Region-unique name for the AMI.
	Name pulumix.Input[*string]
	// Boolean that overrides the behavior of stopping
	// the instance before snapshotting. This is risky since it may cause a snapshot of an
	// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
	// guarantees that no filesystem writes will be underway at the time of snapshot.
	SnapshotWithoutReboot pulumix.Input[*bool]
	// ID of the instance to use as the basis of the AMI.
	SourceInstanceId pulumix.Input[string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (AmiFromInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiFromInstanceArgs)(nil)).Elem()
}

type AmiFromInstanceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstance)(nil)).Elem()
}

func (o AmiFromInstanceOutput) ToAmiFromInstanceOutput() AmiFromInstanceOutput {
	return o
}

func (o AmiFromInstanceOutput) ToAmiFromInstanceOutputWithContext(ctx context.Context) AmiFromInstanceOutput {
	return o
}

func (o AmiFromInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[AmiFromInstance] {
	return pulumix.Output[AmiFromInstance]{
		OutputState: o.OutputState,
	}
}

// Machine architecture for created instances. Defaults to "x8664".
func (o AmiFromInstanceOutput) Architecture() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.Architecture })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the AMI.
func (o AmiFromInstanceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiFromInstanceOutput) BootMode() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.BootMode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
func (o AmiFromInstanceOutput) DeprecationTime() pulumix.Output[*string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[*string] { return v.DeprecationTime })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Longer, human-readable description for the AMI.
func (o AmiFromInstanceOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Nested block describing an EBS block device that should be
// attached to created instances. The structure of this block is described below.
func (o AmiFromInstanceOutput) EbsBlockDevices() pulumix.GArrayOutput[AmiFromInstanceEbsBlockDevice, AmiFromInstanceEbsBlockDeviceOutput] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.GArrayOutput[AmiFromInstanceEbsBlockDevice, AmiFromInstanceEbsBlockDeviceOutput] {
		return v.EbsBlockDevices
	})
	unwrapped := pulumix.Flatten[[]AmiFromInstanceEbsBlockDevice, pulumix.GArrayOutput[AmiFromInstanceEbsBlockDevice, AmiFromInstanceEbsBlockDeviceOutput]](value)
	return pulumix.GArrayOutput[AmiFromInstanceEbsBlockDevice, AmiFromInstanceEbsBlockDeviceOutput]{OutputState: unwrapped.OutputState}
}

// Whether enhanced networking with ENA is enabled. Defaults to `false`.
func (o AmiFromInstanceOutput) EnaSupport() pulumix.Output[bool] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[bool] { return v.EnaSupport })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Nested block describing an ephemeral block device that
// should be attached to created instances. The structure of this block is described below.
func (o AmiFromInstanceOutput) EphemeralBlockDevices() pulumix.GArrayOutput[AmiFromInstanceEphemeralBlockDevice, AmiFromInstanceEphemeralBlockDeviceOutput] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.GArrayOutput[AmiFromInstanceEphemeralBlockDevice, AmiFromInstanceEphemeralBlockDeviceOutput] {
		return v.EphemeralBlockDevices
	})
	unwrapped := pulumix.Flatten[[]AmiFromInstanceEphemeralBlockDevice, pulumix.GArrayOutput[AmiFromInstanceEphemeralBlockDevice, AmiFromInstanceEphemeralBlockDeviceOutput]](value)
	return pulumix.GArrayOutput[AmiFromInstanceEphemeralBlockDevice, AmiFromInstanceEphemeralBlockDeviceOutput]{OutputState: unwrapped.OutputState}
}

func (o AmiFromInstanceOutput) Hypervisor() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.Hypervisor })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Path to an S3 object containing an image manifest, e.g., created
// by the `ec2-upload-bundle` command in the EC2 command line tools.
func (o AmiFromInstanceOutput) ImageLocation() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.ImageLocation })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiFromInstanceOutput) ImageOwnerAlias() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.ImageOwnerAlias })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiFromInstanceOutput) ImageType() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.ImageType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
func (o AmiFromInstanceOutput) ImdsSupport() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.ImdsSupport })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the kernel image (AKI) that will be used as the paravirtual
// kernel in created instances.
func (o AmiFromInstanceOutput) KernelId() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.KernelId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiFromInstanceOutput) ManageEbsSnapshots() pulumix.Output[bool] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[bool] { return v.ManageEbsSnapshots })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Region-unique name for the AMI.
func (o AmiFromInstanceOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiFromInstanceOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiFromInstanceOutput) Platform() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.Platform })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiFromInstanceOutput) PlatformDetails() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.PlatformDetails })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiFromInstanceOutput) Public() pulumix.Output[bool] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[bool] { return v.Public })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// ID of an initrd image (ARI) that will be used when booting the
// created instances.
func (o AmiFromInstanceOutput) RamdiskId() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.RamdiskId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
func (o AmiFromInstanceOutput) RootDeviceName() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.RootDeviceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiFromInstanceOutput) RootSnapshotId() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.RootSnapshotId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean that overrides the behavior of stopping
// the instance before snapshotting. This is risky since it may cause a snapshot of an
// inconsistent filesystem state, but can be used to avoid downtime if the user otherwise
// guarantees that no filesystem writes will be underway at the time of snapshot.
func (o AmiFromInstanceOutput) SnapshotWithoutReboot() pulumix.Output[*bool] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[*bool] { return v.SnapshotWithoutReboot })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// ID of the instance to use as the basis of the AMI.
func (o AmiFromInstanceOutput) SourceInstanceId() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.SourceInstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// When set to "simple" (the default), enables enhanced networking
// for created instances. No other value is supported at this time.
func (o AmiFromInstanceOutput) SriovNetSupport() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.SriovNetSupport })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AmiFromInstanceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o AmiFromInstanceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiFromInstanceOutput) TpmSupport() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.TpmSupport })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiFromInstanceOutput) UsageOperation() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.UsageOperation })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Keyword to choose what virtualization mode created instances
// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
// changes the set of further arguments that are required, as described below.
func (o AmiFromInstanceOutput) VirtualizationType() pulumix.Output[string] {
	value := pulumix.Apply[AmiFromInstance](o, func(v AmiFromInstance) pulumix.Output[string] { return v.VirtualizationType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(AmiFromInstanceOutput{})
}
