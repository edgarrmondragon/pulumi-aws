// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package signer

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a Signer Signing Profile. A signing profile contains information about the code signing configuration parameters that can be used by a given code signing user.
type SigningProfile struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) for the signing profile.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A unique signing profile name. By default generated by the provider. Signing profile names are immutable and cannot be reused after canceled.
	Name pulumix.Output[string] `pulumi:"name"`
	// A signing profile name prefix. The provider will generate a unique suffix. Conflicts with `name`.
	NamePrefix pulumix.Output[*string] `pulumi:"namePrefix"`
	// A human-readable name for the signing platform associated with the signing profile.
	PlatformDisplayName pulumix.Output[string] `pulumi:"platformDisplayName"`
	// The ID of the platform that is used by the target signing profile.
	PlatformId pulumix.Output[string] `pulumi:"platformId"`
	// Revocation information for a signing profile.
	RevocationRecords pulumix.GArrayOutput[SigningProfileRevocationRecord, SigningProfileRevocationRecordOutput] `pulumi:"revocationRecords"`
	// The validity period for a signing job.
	SignatureValidityPeriod pulumix.GPtrOutput[SigningProfileSignatureValidityPeriod, SigningProfileSignatureValidityPeriodOutput] `pulumi:"signatureValidityPeriod"`
	SigningMaterial         pulumix.GPtrOutput[SigningProfileSigningMaterial, SigningProfileSigningMaterialOutput]                 `pulumi:"signingMaterial"`
	// The status of the target signing profile.
	Status pulumix.Output[string] `pulumi:"status"`
	// A list of tags associated with the signing profile. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The current version of the signing profile.
	Version pulumix.Output[string] `pulumi:"version"`
	// The signing profile ARN, including the profile version.
	VersionArn pulumix.Output[string] `pulumi:"versionArn"`
}

// NewSigningProfile registers a new resource with the given unique name, arguments, and options.
func NewSigningProfile(ctx *pulumi.Context,
	name string, args *SigningProfileArgs, opts ...pulumi.ResourceOption) (*SigningProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PlatformId == nil {
		return nil, errors.New("invalid value for required argument 'PlatformId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SigningProfile
	err := ctx.RegisterResource("aws:signer/signingProfile:SigningProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSigningProfile gets an existing SigningProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSigningProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SigningProfileState, opts ...pulumi.ResourceOption) (*SigningProfile, error) {
	var resource SigningProfile
	err := ctx.ReadResource("aws:signer/signingProfile:SigningProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SigningProfile resources.
type signingProfileState struct {
	// The Amazon Resource Name (ARN) for the signing profile.
	Arn *string `pulumi:"arn"`
	// A unique signing profile name. By default generated by the provider. Signing profile names are immutable and cannot be reused after canceled.
	Name *string `pulumi:"name"`
	// A signing profile name prefix. The provider will generate a unique suffix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// A human-readable name for the signing platform associated with the signing profile.
	PlatformDisplayName *string `pulumi:"platformDisplayName"`
	// The ID of the platform that is used by the target signing profile.
	PlatformId *string `pulumi:"platformId"`
	// Revocation information for a signing profile.
	RevocationRecords []SigningProfileRevocationRecord `pulumi:"revocationRecords"`
	// The validity period for a signing job.
	SignatureValidityPeriod *SigningProfileSignatureValidityPeriod `pulumi:"signatureValidityPeriod"`
	SigningMaterial         *SigningProfileSigningMaterial         `pulumi:"signingMaterial"`
	// The status of the target signing profile.
	Status *string `pulumi:"status"`
	// A list of tags associated with the signing profile. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The current version of the signing profile.
	Version *string `pulumi:"version"`
	// The signing profile ARN, including the profile version.
	VersionArn *string `pulumi:"versionArn"`
}

type SigningProfileState struct {
	// The Amazon Resource Name (ARN) for the signing profile.
	Arn pulumix.Input[*string]
	// A unique signing profile name. By default generated by the provider. Signing profile names are immutable and cannot be reused after canceled.
	Name pulumix.Input[*string]
	// A signing profile name prefix. The provider will generate a unique suffix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// A human-readable name for the signing platform associated with the signing profile.
	PlatformDisplayName pulumix.Input[*string]
	// The ID of the platform that is used by the target signing profile.
	PlatformId pulumix.Input[*string]
	// Revocation information for a signing profile.
	RevocationRecords pulumix.Input[[]*SigningProfileRevocationRecordArgs]
	// The validity period for a signing job.
	SignatureValidityPeriod pulumix.Input[*SigningProfileSignatureValidityPeriodArgs]
	SigningMaterial         pulumix.Input[*SigningProfileSigningMaterialArgs]
	// The status of the target signing profile.
	Status pulumix.Input[*string]
	// A list of tags associated with the signing profile. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The current version of the signing profile.
	Version pulumix.Input[*string]
	// The signing profile ARN, including the profile version.
	VersionArn pulumix.Input[*string]
}

func (SigningProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*signingProfileState)(nil)).Elem()
}

type signingProfileArgs struct {
	// A unique signing profile name. By default generated by the provider. Signing profile names are immutable and cannot be reused after canceled.
	Name *string `pulumi:"name"`
	// A signing profile name prefix. The provider will generate a unique suffix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// The ID of the platform that is used by the target signing profile.
	PlatformId string `pulumi:"platformId"`
	// The validity period for a signing job.
	SignatureValidityPeriod *SigningProfileSignatureValidityPeriod `pulumi:"signatureValidityPeriod"`
	SigningMaterial         *SigningProfileSigningMaterial         `pulumi:"signingMaterial"`
	// A list of tags associated with the signing profile. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SigningProfile resource.
type SigningProfileArgs struct {
	// A unique signing profile name. By default generated by the provider. Signing profile names are immutable and cannot be reused after canceled.
	Name pulumix.Input[*string]
	// A signing profile name prefix. The provider will generate a unique suffix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// The ID of the platform that is used by the target signing profile.
	PlatformId pulumix.Input[string]
	// The validity period for a signing job.
	SignatureValidityPeriod pulumix.Input[*SigningProfileSignatureValidityPeriodArgs]
	SigningMaterial         pulumix.Input[*SigningProfileSigningMaterialArgs]
	// A list of tags associated with the signing profile. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (SigningProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*signingProfileArgs)(nil)).Elem()
}

type SigningProfileOutput struct{ *pulumi.OutputState }

func (SigningProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningProfile)(nil)).Elem()
}

func (o SigningProfileOutput) ToSigningProfileOutput() SigningProfileOutput {
	return o
}

func (o SigningProfileOutput) ToSigningProfileOutputWithContext(ctx context.Context) SigningProfileOutput {
	return o
}

func (o SigningProfileOutput) ToOutput(ctx context.Context) pulumix.Output[SigningProfile] {
	return pulumix.Output[SigningProfile]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) for the signing profile.
func (o SigningProfileOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A unique signing profile name. By default generated by the provider. Signing profile names are immutable and cannot be reused after canceled.
func (o SigningProfileOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A signing profile name prefix. The provider will generate a unique suffix. Conflicts with `name`.
func (o SigningProfileOutput) NamePrefix() pulumix.Output[*string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.Output[*string] { return v.NamePrefix })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A human-readable name for the signing platform associated with the signing profile.
func (o SigningProfileOutput) PlatformDisplayName() pulumix.Output[string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.Output[string] { return v.PlatformDisplayName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the platform that is used by the target signing profile.
func (o SigningProfileOutput) PlatformId() pulumix.Output[string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.Output[string] { return v.PlatformId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Revocation information for a signing profile.
func (o SigningProfileOutput) RevocationRecords() pulumix.GArrayOutput[SigningProfileRevocationRecord, SigningProfileRevocationRecordOutput] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.GArrayOutput[SigningProfileRevocationRecord, SigningProfileRevocationRecordOutput] {
		return v.RevocationRecords
	})
	unwrapped := pulumix.Flatten[[]SigningProfileRevocationRecord, pulumix.GArrayOutput[SigningProfileRevocationRecord, SigningProfileRevocationRecordOutput]](value)
	return pulumix.GArrayOutput[SigningProfileRevocationRecord, SigningProfileRevocationRecordOutput]{OutputState: unwrapped.OutputState}
}

// The validity period for a signing job.
func (o SigningProfileOutput) SignatureValidityPeriod() pulumix.GPtrOutput[SigningProfileSignatureValidityPeriod, SigningProfileSignatureValidityPeriodOutput] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.GPtrOutput[SigningProfileSignatureValidityPeriod, SigningProfileSignatureValidityPeriodOutput] {
		return v.SignatureValidityPeriod
	})
	unwrapped := pulumix.Flatten[*SigningProfileSignatureValidityPeriod, pulumix.GPtrOutput[SigningProfileSignatureValidityPeriod, SigningProfileSignatureValidityPeriodOutput]](value)
	return pulumix.GPtrOutput[SigningProfileSignatureValidityPeriod, SigningProfileSignatureValidityPeriodOutput]{OutputState: unwrapped.OutputState}
}

func (o SigningProfileOutput) SigningMaterial() pulumix.GPtrOutput[SigningProfileSigningMaterial, SigningProfileSigningMaterialOutput] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.GPtrOutput[SigningProfileSigningMaterial, SigningProfileSigningMaterialOutput] {
		return v.SigningMaterial
	})
	unwrapped := pulumix.Flatten[*SigningProfileSigningMaterial, pulumix.GPtrOutput[SigningProfileSigningMaterial, SigningProfileSigningMaterialOutput]](value)
	return pulumix.GPtrOutput[SigningProfileSigningMaterial, SigningProfileSigningMaterialOutput]{OutputState: unwrapped.OutputState}
}

// The status of the target signing profile.
func (o SigningProfileOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of tags associated with the signing profile. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o SigningProfileOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o SigningProfileOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The current version of the signing profile.
func (o SigningProfileOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The signing profile ARN, including the profile version.
func (o SigningProfileOutput) VersionArn() pulumix.Output[string] {
	value := pulumix.Apply[SigningProfile](o, func(v SigningProfile) pulumix.Output[string] { return v.VersionArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(SigningProfileOutput{})
}
