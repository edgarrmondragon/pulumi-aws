// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Managed Grafana workspace role association resource.
type RoleAssociation struct {
	pulumi.CustomResourceState

	// The AWS SSO group ids to be assigned the role given in `role`.
	GroupIds pulumix.ArrayOutput[string] `pulumi:"groupIds"`
	// The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
	Role pulumix.Output[string] `pulumi:"role"`
	// The AWS SSO user ids to be assigned the role given in `role`.
	UserIds pulumix.ArrayOutput[string] `pulumi:"userIds"`
	// The workspace id.
	//
	// The following arguments are optional:
	WorkspaceId pulumix.Output[string] `pulumi:"workspaceId"`
}

// NewRoleAssociation registers a new resource with the given unique name, arguments, and options.
func NewRoleAssociation(ctx *pulumi.Context,
	name string, args *RoleAssociationArgs, opts ...pulumi.ResourceOption) (*RoleAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RoleAssociation
	err := ctx.RegisterResource("aws:grafana/roleAssociation:RoleAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoleAssociation gets an existing RoleAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoleAssociationState, opts ...pulumi.ResourceOption) (*RoleAssociation, error) {
	var resource RoleAssociation
	err := ctx.ReadResource("aws:grafana/roleAssociation:RoleAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoleAssociation resources.
type roleAssociationState struct {
	// The AWS SSO group ids to be assigned the role given in `role`.
	GroupIds []string `pulumi:"groupIds"`
	// The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
	Role *string `pulumi:"role"`
	// The AWS SSO user ids to be assigned the role given in `role`.
	UserIds []string `pulumi:"userIds"`
	// The workspace id.
	//
	// The following arguments are optional:
	WorkspaceId *string `pulumi:"workspaceId"`
}

type RoleAssociationState struct {
	// The AWS SSO group ids to be assigned the role given in `role`.
	GroupIds pulumix.Input[[]string]
	// The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
	Role pulumix.Input[*string]
	// The AWS SSO user ids to be assigned the role given in `role`.
	UserIds pulumix.Input[[]string]
	// The workspace id.
	//
	// The following arguments are optional:
	WorkspaceId pulumix.Input[*string]
}

func (RoleAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAssociationState)(nil)).Elem()
}

type roleAssociationArgs struct {
	// The AWS SSO group ids to be assigned the role given in `role`.
	GroupIds []string `pulumi:"groupIds"`
	// The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
	Role string `pulumi:"role"`
	// The AWS SSO user ids to be assigned the role given in `role`.
	UserIds []string `pulumi:"userIds"`
	// The workspace id.
	//
	// The following arguments are optional:
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a RoleAssociation resource.
type RoleAssociationArgs struct {
	// The AWS SSO group ids to be assigned the role given in `role`.
	GroupIds pulumix.Input[[]string]
	// The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
	Role pulumix.Input[string]
	// The AWS SSO user ids to be assigned the role given in `role`.
	UserIds pulumix.Input[[]string]
	// The workspace id.
	//
	// The following arguments are optional:
	WorkspaceId pulumix.Input[string]
}

func (RoleAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAssociationArgs)(nil)).Elem()
}

type RoleAssociationOutput struct{ *pulumi.OutputState }

func (RoleAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssociation)(nil)).Elem()
}

func (o RoleAssociationOutput) ToRoleAssociationOutput() RoleAssociationOutput {
	return o
}

func (o RoleAssociationOutput) ToRoleAssociationOutputWithContext(ctx context.Context) RoleAssociationOutput {
	return o
}

func (o RoleAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[RoleAssociation] {
	return pulumix.Output[RoleAssociation]{
		OutputState: o.OutputState,
	}
}

// The AWS SSO group ids to be assigned the role given in `role`.
func (o RoleAssociationOutput) GroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RoleAssociation](o, func(v RoleAssociation) pulumix.ArrayOutput[string] { return v.GroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
func (o RoleAssociationOutput) Role() pulumix.Output[string] {
	value := pulumix.Apply[RoleAssociation](o, func(v RoleAssociation) pulumix.Output[string] { return v.Role })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS SSO user ids to be assigned the role given in `role`.
func (o RoleAssociationOutput) UserIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RoleAssociation](o, func(v RoleAssociation) pulumix.ArrayOutput[string] { return v.UserIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The workspace id.
//
// The following arguments are optional:
func (o RoleAssociationOutput) WorkspaceId() pulumix.Output[string] {
	value := pulumix.Apply[RoleAssociation](o, func(v RoleAssociation) pulumix.Output[string] { return v.WorkspaceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(RoleAssociationOutput{})
}
