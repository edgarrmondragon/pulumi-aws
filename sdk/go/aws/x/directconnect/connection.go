// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Connection of Direct Connect.
type Connection struct {
	pulumi.CustomResourceState

	// The ARN of the connection.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Direct Connect endpoint on which the physical connection terminates.
	AwsDevice pulumix.Output[string] `pulumi:"awsDevice"`
	// The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
	Bandwidth pulumix.Output[string] `pulumi:"bandwidth"`
	// The connection MAC Security (MACsec) encryption mode. MAC Security (MACsec) is only available on dedicated connections. Valid values are `noEncrypt`, `shouldEncrypt`, and `mustEncrypt`.
	EncryptionMode pulumix.Output[string] `pulumi:"encryptionMode"`
	// Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).
	HasLogicalRedundancy pulumix.Output[string] `pulumi:"hasLogicalRedundancy"`
	// Boolean value representing if jumbo frames have been enabled for this connection.
	JumboFrameCapable pulumix.Output[bool] `pulumi:"jumboFrameCapable"`
	// The AWS Direct Connect location where the connection is located. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
	Location pulumix.Output[string] `pulumi:"location"`
	// Boolean value indicating whether the connection supports MAC Security (MACsec).
	MacsecCapable pulumix.Output[bool] `pulumi:"macsecCapable"`
	// The name of the connection.
	Name pulumix.Output[string] `pulumi:"name"`
	// The ID of the AWS account that owns the connection.
	OwnerAccountId pulumix.Output[string] `pulumi:"ownerAccountId"`
	// The name of the AWS Direct Connect service provider associated with the connection.
	PartnerName pulumix.Output[string] `pulumi:"partnerName"`
	// The MAC Security (MACsec) port link status of the connection.
	PortEncryptionStatus pulumix.Output[string] `pulumi:"portEncryptionStatus"`
	// The name of the service provider associated with the connection.
	ProviderName pulumix.Output[string] `pulumi:"providerName"`
	// Boolean value indicating whether you want the connection to support MAC Security (MACsec). MAC Security (MACsec) is only available on dedicated connections. See [MACsec prerequisites](https://docs.aws.amazon.com/directconnect/latest/UserGuide/direct-connect-mac-sec-getting-started.html#mac-sec-prerequisites) for more information about MAC Security (MACsec) prerequisites. Default value: `false`.
	//
	// > **NOTE:** Changing the value of `requestMacsec` will cause the resource to be destroyed and re-created.
	RequestMacsec pulumix.Output[*bool] `pulumi:"requestMacsec"`
	// Set to true if you do not wish the connection to be deleted at destroy time, and instead just removed from the state.
	SkipDestroy pulumix.Output[*bool] `pulumi:"skipDestroy"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The VLAN ID.
	VlanId pulumix.Output[int] `pulumi:"vlanId"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOption) (*Connection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bandwidth == nil {
		return nil, errors.New("invalid value for required argument 'Bandwidth'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Connection
	err := ctx.RegisterResource("aws:directconnect/connection:Connection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionState, opts ...pulumi.ResourceOption) (*Connection, error) {
	var resource Connection
	err := ctx.ReadResource("aws:directconnect/connection:Connection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connection resources.
type connectionState struct {
	// The ARN of the connection.
	Arn *string `pulumi:"arn"`
	// The Direct Connect endpoint on which the physical connection terminates.
	AwsDevice *string `pulumi:"awsDevice"`
	// The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
	Bandwidth *string `pulumi:"bandwidth"`
	// The connection MAC Security (MACsec) encryption mode. MAC Security (MACsec) is only available on dedicated connections. Valid values are `noEncrypt`, `shouldEncrypt`, and `mustEncrypt`.
	EncryptionMode *string `pulumi:"encryptionMode"`
	// Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).
	HasLogicalRedundancy *string `pulumi:"hasLogicalRedundancy"`
	// Boolean value representing if jumbo frames have been enabled for this connection.
	JumboFrameCapable *bool `pulumi:"jumboFrameCapable"`
	// The AWS Direct Connect location where the connection is located. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
	Location *string `pulumi:"location"`
	// Boolean value indicating whether the connection supports MAC Security (MACsec).
	MacsecCapable *bool `pulumi:"macsecCapable"`
	// The name of the connection.
	Name *string `pulumi:"name"`
	// The ID of the AWS account that owns the connection.
	OwnerAccountId *string `pulumi:"ownerAccountId"`
	// The name of the AWS Direct Connect service provider associated with the connection.
	PartnerName *string `pulumi:"partnerName"`
	// The MAC Security (MACsec) port link status of the connection.
	PortEncryptionStatus *string `pulumi:"portEncryptionStatus"`
	// The name of the service provider associated with the connection.
	ProviderName *string `pulumi:"providerName"`
	// Boolean value indicating whether you want the connection to support MAC Security (MACsec). MAC Security (MACsec) is only available on dedicated connections. See [MACsec prerequisites](https://docs.aws.amazon.com/directconnect/latest/UserGuide/direct-connect-mac-sec-getting-started.html#mac-sec-prerequisites) for more information about MAC Security (MACsec) prerequisites. Default value: `false`.
	//
	// > **NOTE:** Changing the value of `requestMacsec` will cause the resource to be destroyed and re-created.
	RequestMacsec *bool `pulumi:"requestMacsec"`
	// Set to true if you do not wish the connection to be deleted at destroy time, and instead just removed from the state.
	SkipDestroy *bool `pulumi:"skipDestroy"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

type ConnectionState struct {
	// The ARN of the connection.
	Arn pulumix.Input[*string]
	// The Direct Connect endpoint on which the physical connection terminates.
	AwsDevice pulumix.Input[*string]
	// The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
	Bandwidth pulumix.Input[*string]
	// The connection MAC Security (MACsec) encryption mode. MAC Security (MACsec) is only available on dedicated connections. Valid values are `noEncrypt`, `shouldEncrypt`, and `mustEncrypt`.
	EncryptionMode pulumix.Input[*string]
	// Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).
	HasLogicalRedundancy pulumix.Input[*string]
	// Boolean value representing if jumbo frames have been enabled for this connection.
	JumboFrameCapable pulumix.Input[*bool]
	// The AWS Direct Connect location where the connection is located. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
	Location pulumix.Input[*string]
	// Boolean value indicating whether the connection supports MAC Security (MACsec).
	MacsecCapable pulumix.Input[*bool]
	// The name of the connection.
	Name pulumix.Input[*string]
	// The ID of the AWS account that owns the connection.
	OwnerAccountId pulumix.Input[*string]
	// The name of the AWS Direct Connect service provider associated with the connection.
	PartnerName pulumix.Input[*string]
	// The MAC Security (MACsec) port link status of the connection.
	PortEncryptionStatus pulumix.Input[*string]
	// The name of the service provider associated with the connection.
	ProviderName pulumix.Input[*string]
	// Boolean value indicating whether you want the connection to support MAC Security (MACsec). MAC Security (MACsec) is only available on dedicated connections. See [MACsec prerequisites](https://docs.aws.amazon.com/directconnect/latest/UserGuide/direct-connect-mac-sec-getting-started.html#mac-sec-prerequisites) for more information about MAC Security (MACsec) prerequisites. Default value: `false`.
	//
	// > **NOTE:** Changing the value of `requestMacsec` will cause the resource to be destroyed and re-created.
	RequestMacsec pulumix.Input[*bool]
	// Set to true if you do not wish the connection to be deleted at destroy time, and instead just removed from the state.
	SkipDestroy pulumix.Input[*bool]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The VLAN ID.
	VlanId pulumix.Input[*int]
}

func (ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionState)(nil)).Elem()
}

type connectionArgs struct {
	// The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
	Bandwidth string `pulumi:"bandwidth"`
	// The connection MAC Security (MACsec) encryption mode. MAC Security (MACsec) is only available on dedicated connections. Valid values are `noEncrypt`, `shouldEncrypt`, and `mustEncrypt`.
	EncryptionMode *string `pulumi:"encryptionMode"`
	// The AWS Direct Connect location where the connection is located. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
	Location string `pulumi:"location"`
	// The name of the connection.
	Name *string `pulumi:"name"`
	// The name of the service provider associated with the connection.
	ProviderName *string `pulumi:"providerName"`
	// Boolean value indicating whether you want the connection to support MAC Security (MACsec). MAC Security (MACsec) is only available on dedicated connections. See [MACsec prerequisites](https://docs.aws.amazon.com/directconnect/latest/UserGuide/direct-connect-mac-sec-getting-started.html#mac-sec-prerequisites) for more information about MAC Security (MACsec) prerequisites. Default value: `false`.
	//
	// > **NOTE:** Changing the value of `requestMacsec` will cause the resource to be destroyed and re-created.
	RequestMacsec *bool `pulumi:"requestMacsec"`
	// Set to true if you do not wish the connection to be deleted at destroy time, and instead just removed from the state.
	SkipDestroy *bool `pulumi:"skipDestroy"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
	Bandwidth pulumix.Input[string]
	// The connection MAC Security (MACsec) encryption mode. MAC Security (MACsec) is only available on dedicated connections. Valid values are `noEncrypt`, `shouldEncrypt`, and `mustEncrypt`.
	EncryptionMode pulumix.Input[*string]
	// The AWS Direct Connect location where the connection is located. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
	Location pulumix.Input[string]
	// The name of the connection.
	Name pulumix.Input[*string]
	// The name of the service provider associated with the connection.
	ProviderName pulumix.Input[*string]
	// Boolean value indicating whether you want the connection to support MAC Security (MACsec). MAC Security (MACsec) is only available on dedicated connections. See [MACsec prerequisites](https://docs.aws.amazon.com/directconnect/latest/UserGuide/direct-connect-mac-sec-getting-started.html#mac-sec-prerequisites) for more information about MAC Security (MACsec) prerequisites. Default value: `false`.
	//
	// > **NOTE:** Changing the value of `requestMacsec` will cause the resource to be destroyed and re-created.
	RequestMacsec pulumix.Input[*bool]
	// Set to true if you do not wish the connection to be deleted at destroy time, and instead just removed from the state.
	SkipDestroy pulumix.Input[*bool]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionArgs)(nil)).Elem()
}

type ConnectionOutput struct{ *pulumi.OutputState }

func (ConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Connection)(nil)).Elem()
}

func (o ConnectionOutput) ToConnectionOutput() ConnectionOutput {
	return o
}

func (o ConnectionOutput) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return o
}

func (o ConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[Connection] {
	return pulumix.Output[Connection]{
		OutputState: o.OutputState,
	}
}

// The ARN of the connection.
func (o ConnectionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Direct Connect endpoint on which the physical connection terminates.
func (o ConnectionOutput) AwsDevice() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.AwsDevice })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.
func (o ConnectionOutput) Bandwidth() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.Bandwidth })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The connection MAC Security (MACsec) encryption mode. MAC Security (MACsec) is only available on dedicated connections. Valid values are `noEncrypt`, `shouldEncrypt`, and `mustEncrypt`.
func (o ConnectionOutput) EncryptionMode() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.EncryptionMode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).
func (o ConnectionOutput) HasLogicalRedundancy() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.HasLogicalRedundancy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean value representing if jumbo frames have been enabled for this connection.
func (o ConnectionOutput) JumboFrameCapable() pulumix.Output[bool] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[bool] { return v.JumboFrameCapable })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// The AWS Direct Connect location where the connection is located. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
func (o ConnectionOutput) Location() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.Location })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean value indicating whether the connection supports MAC Security (MACsec).
func (o ConnectionOutput) MacsecCapable() pulumix.Output[bool] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[bool] { return v.MacsecCapable })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// The name of the connection.
func (o ConnectionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the AWS account that owns the connection.
func (o ConnectionOutput) OwnerAccountId() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.OwnerAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the AWS Direct Connect service provider associated with the connection.
func (o ConnectionOutput) PartnerName() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.PartnerName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The MAC Security (MACsec) port link status of the connection.
func (o ConnectionOutput) PortEncryptionStatus() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.PortEncryptionStatus })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the service provider associated with the connection.
func (o ConnectionOutput) ProviderName() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.ProviderName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean value indicating whether you want the connection to support MAC Security (MACsec). MAC Security (MACsec) is only available on dedicated connections. See [MACsec prerequisites](https://docs.aws.amazon.com/directconnect/latest/UserGuide/direct-connect-mac-sec-getting-started.html#mac-sec-prerequisites) for more information about MAC Security (MACsec) prerequisites. Default value: `false`.
//
// > **NOTE:** Changing the value of `requestMacsec` will cause the resource to be destroyed and re-created.
func (o ConnectionOutput) RequestMacsec() pulumix.Output[*bool] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[*bool] { return v.RequestMacsec })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Set to true if you do not wish the connection to be deleted at destroy time, and instead just removed from the state.
func (o ConnectionOutput) SkipDestroy() pulumix.Output[*bool] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[*bool] { return v.SkipDestroy })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ConnectionOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ConnectionOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The VLAN ID.
func (o ConnectionOutput) VlanId() pulumix.Output[int] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[int] { return v.VlanId })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(ConnectionOutput{})
}
