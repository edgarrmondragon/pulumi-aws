// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get the ARNs and names of Image Builder Image Recipes matching the specified criteria.
func GetImageRecipes(ctx *pulumi.Context, args *GetImageRecipesArgs, opts ...pulumi.InvokeOption) (*GetImageRecipesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetImageRecipesResult
	err := ctx.Invoke("aws:imagebuilder/getImageRecipes:getImageRecipes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImageRecipes.
type GetImageRecipesArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetImageRecipesFilter `pulumi:"filters"`
	// Owner of the image recipes. Valid values are `Self`, `Shared` and `Amazon`. Defaults to `Self`.
	Owner *string `pulumi:"owner"`
}

// A collection of values returned by getImageRecipes.
type GetImageRecipesResult struct {
	// Set of ARNs of the matched Image Builder Image Recipes.
	Arns    []string                `pulumi:"arns"`
	Filters []GetImageRecipesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of names of the matched Image Builder Image Recipes.
	Names []string `pulumi:"names"`
	Owner *string  `pulumi:"owner"`
}

func GetImageRecipesOutput(ctx *pulumi.Context, args GetImageRecipesOutputArgs, opts ...pulumi.InvokeOption) GetImageRecipesResultOutput {
	outputResult := pulumix.ApplyErr[*GetImageRecipesArgs](args.ToOutput(), func(plainArgs *GetImageRecipesArgs) (*GetImageRecipesResult, error) {
		return GetImageRecipes(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetImageRecipesResultOutput, *GetImageRecipesResult](outputResult)
}

// A collection of arguments for invoking getImageRecipes.
type GetImageRecipesOutputArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters pulumix.Input[[]*GetImageRecipesFilterArgs] `pulumi:"filters"`
	// Owner of the image recipes. Valid values are `Self`, `Shared` and `Amazon`. Defaults to `Self`.
	Owner pulumix.Input[*string] `pulumi:"owner"`
}

func (args GetImageRecipesOutputArgs) ToOutput() pulumix.Output[*GetImageRecipesArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Owner.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetImageRecipesArgs {
		return &GetImageRecipesArgs{
			Filters: resolvedArgs[0].([]GetImageRecipesFilter),
			Owner:   resolvedArgs[1].(*string),
		}
	})
}

type GetImageRecipesResultOutput struct{ *pulumi.OutputState }

func (GetImageRecipesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipesResult)(nil)).Elem()
}

func (o GetImageRecipesResultOutput) ToOutput(context.Context) pulumix.Output[*GetImageRecipesResult] {
	return pulumix.Output[*GetImageRecipesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetImageRecipesResultOutput) Arns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetImageRecipesResult](o, func(v *GetImageRecipesResult) []string { return v.Arns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetImageRecipesResultOutput) Filters() pulumix.GArrayOutput[GetImageRecipesFilter, GetImageRecipesFilterOutput] {
	value := pulumix.Apply[*GetImageRecipesResult](o, func(v *GetImageRecipesResult) []GetImageRecipesFilter { return v.Filters })
	return pulumix.GArrayOutput[GetImageRecipesFilter, GetImageRecipesFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetImageRecipesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetImageRecipesResult](o, func(v *GetImageRecipesResult) string { return v.Id })
}

func (o GetImageRecipesResultOutput) Names() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetImageRecipesResult](o, func(v *GetImageRecipesResult) []string { return v.Names })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetImageRecipesResultOutput) Owner() pulumix.Output[*string] {
	return pulumix.Apply[*GetImageRecipesResult](o, func(v *GetImageRecipesResult) *string { return v.Owner })
}
