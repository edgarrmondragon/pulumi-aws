// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `route53.ResolverFirewallRuleGroup` Retrieves the specified firewall rule group.
//
// This data source allows to retrieve details about a specific a Route 53 Resolver DNS Firewall rule group.
func LookupResolverFirewallRuleGroup(ctx *pulumi.Context, args *LookupResolverFirewallRuleGroupArgs, opts ...pulumi.InvokeOption) (*LookupResolverFirewallRuleGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResolverFirewallRuleGroupResult
	err := ctx.Invoke("aws:route53/getResolverFirewallRuleGroup:getResolverFirewallRuleGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolverFirewallRuleGroup.
type LookupResolverFirewallRuleGroupArgs struct {
	// The ID of the rule group.
	//
	// The following attribute is additionally exported:
	FirewallRuleGroupId string `pulumi:"firewallRuleGroupId"`
}

// A collection of values returned by getResolverFirewallRuleGroup.
type LookupResolverFirewallRuleGroupResult struct {
	Arn                 string `pulumi:"arn"`
	CreationTime        string `pulumi:"creationTime"`
	CreatorRequestId    string `pulumi:"creatorRequestId"`
	FirewallRuleGroupId string `pulumi:"firewallRuleGroupId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	ModificationTime string `pulumi:"modificationTime"`
	Name             string `pulumi:"name"`
	OwnerId          string `pulumi:"ownerId"`
	RuleCount        int    `pulumi:"ruleCount"`
	ShareStatus      string `pulumi:"shareStatus"`
	Status           string `pulumi:"status"`
	StatusMessage    string `pulumi:"statusMessage"`
}

func LookupResolverFirewallRuleGroupOutput(ctx *pulumi.Context, args LookupResolverFirewallRuleGroupOutputArgs, opts ...pulumi.InvokeOption) LookupResolverFirewallRuleGroupResultOutput {
	outputResult := pulumix.ApplyErr[*LookupResolverFirewallRuleGroupArgs](args.ToOutput(), func(plainArgs *LookupResolverFirewallRuleGroupArgs) (*LookupResolverFirewallRuleGroupResult, error) {
		return LookupResolverFirewallRuleGroup(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupResolverFirewallRuleGroupResultOutput, *LookupResolverFirewallRuleGroupResult](outputResult)
}

// A collection of arguments for invoking getResolverFirewallRuleGroup.
type LookupResolverFirewallRuleGroupOutputArgs struct {
	// The ID of the rule group.
	//
	// The following attribute is additionally exported:
	FirewallRuleGroupId pulumix.Input[string] `pulumi:"firewallRuleGroupId"`
}

func (args LookupResolverFirewallRuleGroupOutputArgs) ToOutput() pulumix.Output[*LookupResolverFirewallRuleGroupArgs] {
	allArgs := pulumix.All(
		args.FirewallRuleGroupId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupResolverFirewallRuleGroupArgs {
		return &LookupResolverFirewallRuleGroupArgs{
			FirewallRuleGroupId: resolvedArgs[0].(string),
		}
	})
}

type LookupResolverFirewallRuleGroupResultOutput struct{ *pulumi.OutputState }

func (LookupResolverFirewallRuleGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverFirewallRuleGroupResult)(nil)).Elem()
}

func (o LookupResolverFirewallRuleGroupResultOutput) ToOutput(context.Context) pulumix.Output[*LookupResolverFirewallRuleGroupResult] {
	return pulumix.Output[*LookupResolverFirewallRuleGroupResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupResolverFirewallRuleGroupResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.Arn })
}

func (o LookupResolverFirewallRuleGroupResultOutput) CreationTime() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.CreationTime })
}

func (o LookupResolverFirewallRuleGroupResultOutput) CreatorRequestId() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.CreatorRequestId })
}

func (o LookupResolverFirewallRuleGroupResultOutput) FirewallRuleGroupId() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.FirewallRuleGroupId })
}

func (o LookupResolverFirewallRuleGroupResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.Id })
}

func (o LookupResolverFirewallRuleGroupResultOutput) ModificationTime() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.ModificationTime })
}

func (o LookupResolverFirewallRuleGroupResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.Name })
}

func (o LookupResolverFirewallRuleGroupResultOutput) OwnerId() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.OwnerId })
}

func (o LookupResolverFirewallRuleGroupResultOutput) RuleCount() pulumix.Output[int] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) int { return v.RuleCount })
}

func (o LookupResolverFirewallRuleGroupResultOutput) ShareStatus() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.ShareStatus })
}

func (o LookupResolverFirewallRuleGroupResultOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.Status })
}

func (o LookupResolverFirewallRuleGroupResultOutput) StatusMessage() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupResult](o, func(v *LookupResolverFirewallRuleGroupResult) string { return v.StatusMessage })
}
