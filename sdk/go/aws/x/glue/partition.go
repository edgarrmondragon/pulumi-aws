// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Glue Partition Resource.
type Partition struct {
	pulumi.CustomResourceState

	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId pulumix.Output[string] `pulumi:"catalogId"`
	// The time at which the partition was created.
	CreationTime pulumix.Output[string] `pulumi:"creationTime"`
	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName pulumix.Output[string] `pulumi:"databaseName"`
	// The last time at which the partition was accessed.
	LastAccessedTime pulumix.Output[string] `pulumi:"lastAccessedTime"`
	// The last time at which column statistics were computed for this partition.
	LastAnalyzedTime pulumix.Output[string] `pulumi:"lastAnalyzedTime"`
	// Properties associated with this table, as a list of key-value pairs.
	Parameters pulumix.MapOutput[string] `pulumi:"parameters"`
	// The values that define the partition.
	PartitionValues pulumix.ArrayOutput[string] `pulumi:"partitionValues"`
	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor pulumix.GPtrOutput[PartitionStorageDescriptor, PartitionStorageDescriptorOutput] `pulumi:"storageDescriptor"`
	TableName         pulumix.Output[string]                                                           `pulumi:"tableName"`
}

// NewPartition registers a new resource with the given unique name, arguments, and options.
func NewPartition(ctx *pulumi.Context,
	name string, args *PartitionArgs, opts ...pulumi.ResourceOption) (*Partition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.PartitionValues == nil {
		return nil, errors.New("invalid value for required argument 'PartitionValues'")
	}
	if args.TableName == nil {
		return nil, errors.New("invalid value for required argument 'TableName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Partition
	err := ctx.RegisterResource("aws:glue/partition:Partition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPartition gets an existing Partition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPartition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PartitionState, opts ...pulumi.ResourceOption) (*Partition, error) {
	var resource Partition
	err := ctx.ReadResource("aws:glue/partition:Partition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Partition resources.
type partitionState struct {
	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId *string `pulumi:"catalogId"`
	// The time at which the partition was created.
	CreationTime *string `pulumi:"creationTime"`
	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName *string `pulumi:"databaseName"`
	// The last time at which the partition was accessed.
	LastAccessedTime *string `pulumi:"lastAccessedTime"`
	// The last time at which column statistics were computed for this partition.
	LastAnalyzedTime *string `pulumi:"lastAnalyzedTime"`
	// Properties associated with this table, as a list of key-value pairs.
	Parameters map[string]string `pulumi:"parameters"`
	// The values that define the partition.
	PartitionValues []string `pulumi:"partitionValues"`
	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor *PartitionStorageDescriptor `pulumi:"storageDescriptor"`
	TableName         *string                     `pulumi:"tableName"`
}

type PartitionState struct {
	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId pulumix.Input[*string]
	// The time at which the partition was created.
	CreationTime pulumix.Input[*string]
	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName pulumix.Input[*string]
	// The last time at which the partition was accessed.
	LastAccessedTime pulumix.Input[*string]
	// The last time at which column statistics were computed for this partition.
	LastAnalyzedTime pulumix.Input[*string]
	// Properties associated with this table, as a list of key-value pairs.
	Parameters pulumix.Input[map[string]string]
	// The values that define the partition.
	PartitionValues pulumix.Input[[]string]
	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor pulumix.Input[*PartitionStorageDescriptorArgs]
	TableName         pulumix.Input[*string]
}

func (PartitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*partitionState)(nil)).Elem()
}

type partitionArgs struct {
	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId *string `pulumi:"catalogId"`
	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName string `pulumi:"databaseName"`
	// Properties associated with this table, as a list of key-value pairs.
	Parameters map[string]string `pulumi:"parameters"`
	// The values that define the partition.
	PartitionValues []string `pulumi:"partitionValues"`
	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor *PartitionStorageDescriptor `pulumi:"storageDescriptor"`
	TableName         string                      `pulumi:"tableName"`
}

// The set of arguments for constructing a Partition resource.
type PartitionArgs struct {
	// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
	CatalogId pulumix.Input[*string]
	// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
	DatabaseName pulumix.Input[string]
	// Properties associated with this table, as a list of key-value pairs.
	Parameters pulumix.Input[map[string]string]
	// The values that define the partition.
	PartitionValues pulumix.Input[[]string]
	// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
	StorageDescriptor pulumix.Input[*PartitionStorageDescriptorArgs]
	TableName         pulumix.Input[string]
}

func (PartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*partitionArgs)(nil)).Elem()
}

type PartitionOutput struct{ *pulumi.OutputState }

func (PartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Partition)(nil)).Elem()
}

func (o PartitionOutput) ToPartitionOutput() PartitionOutput {
	return o
}

func (o PartitionOutput) ToPartitionOutputWithContext(ctx context.Context) PartitionOutput {
	return o
}

func (o PartitionOutput) ToOutput(ctx context.Context) pulumix.Output[Partition] {
	return pulumix.Output[Partition]{
		OutputState: o.OutputState,
	}
}

// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
func (o PartitionOutput) CatalogId() pulumix.Output[string] {
	value := pulumix.Apply[Partition](o, func(v Partition) pulumix.Output[string] { return v.CatalogId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time at which the partition was created.
func (o PartitionOutput) CreationTime() pulumix.Output[string] {
	value := pulumix.Apply[Partition](o, func(v Partition) pulumix.Output[string] { return v.CreationTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
func (o PartitionOutput) DatabaseName() pulumix.Output[string] {
	value := pulumix.Apply[Partition](o, func(v Partition) pulumix.Output[string] { return v.DatabaseName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The last time at which the partition was accessed.
func (o PartitionOutput) LastAccessedTime() pulumix.Output[string] {
	value := pulumix.Apply[Partition](o, func(v Partition) pulumix.Output[string] { return v.LastAccessedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The last time at which column statistics were computed for this partition.
func (o PartitionOutput) LastAnalyzedTime() pulumix.Output[string] {
	value := pulumix.Apply[Partition](o, func(v Partition) pulumix.Output[string] { return v.LastAnalyzedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Properties associated with this table, as a list of key-value pairs.
func (o PartitionOutput) Parameters() pulumix.MapOutput[string] {
	value := pulumix.Apply[Partition](o, func(v Partition) pulumix.MapOutput[string] { return v.Parameters })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The values that define the partition.
func (o PartitionOutput) PartitionValues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Partition](o, func(v Partition) pulumix.ArrayOutput[string] { return v.PartitionValues })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
func (o PartitionOutput) StorageDescriptor() pulumix.GPtrOutput[PartitionStorageDescriptor, PartitionStorageDescriptorOutput] {
	value := pulumix.Apply[Partition](o, func(v Partition) pulumix.GPtrOutput[PartitionStorageDescriptor, PartitionStorageDescriptorOutput] {
		return v.StorageDescriptor
	})
	unwrapped := pulumix.Flatten[*PartitionStorageDescriptor, pulumix.GPtrOutput[PartitionStorageDescriptor, PartitionStorageDescriptorOutput]](value)
	return pulumix.GPtrOutput[PartitionStorageDescriptor, PartitionStorageDescriptorOutput]{OutputState: unwrapped.OutputState}
}

func (o PartitionOutput) TableName() pulumix.Output[string] {
	value := pulumix.Apply[Partition](o, func(v Partition) pulumix.Output[string] { return v.TableName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(PartitionOutput{})
}
