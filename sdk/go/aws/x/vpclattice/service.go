// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS VPC Lattice Service.
type Service struct {
	pulumi.CustomResourceState

	// ARN of the service. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Type of IAM policy. Either `NONE` or `AWS_IAM`.
	AuthType pulumix.Output[string] `pulumi:"authType"`
	// Amazon Resource Name (ARN) of the certificate.
	CertificateArn pulumix.Output[*string] `pulumi:"certificateArn"`
	// Custom domain name of the service.
	CustomDomainName pulumix.Output[*string] `pulumi:"customDomainName"`
	// Concise description. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
	DnsEntries pulumix.GArrayOutput[ServiceDnsEntry, ServiceDnsEntryOutput] `pulumi:"dnsEntries"`
	// Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length.
	//
	// The following arguments are optional:
	Name pulumix.Output[string] `pulumi:"name"`
	// Status of the service.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil {
		args = &ServiceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Service
	err := ctx.RegisterResource("aws:vpclattice/service:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("aws:vpclattice/service:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
	// ARN of the service. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
	Arn *string `pulumi:"arn"`
	// Type of IAM policy. Either `NONE` or `AWS_IAM`.
	AuthType *string `pulumi:"authType"`
	// Amazon Resource Name (ARN) of the certificate.
	CertificateArn *string `pulumi:"certificateArn"`
	// Custom domain name of the service.
	CustomDomainName *string `pulumi:"customDomainName"`
	// Concise description. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
	DnsEntries []ServiceDnsEntry `pulumi:"dnsEntries"`
	// Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Status of the service.
	Status *string `pulumi:"status"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ServiceState struct {
	// ARN of the service. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
	Arn pulumix.Input[*string]
	// Type of IAM policy. Either `NONE` or `AWS_IAM`.
	AuthType pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the certificate.
	CertificateArn pulumix.Input[*string]
	// Custom domain name of the service.
	CustomDomainName pulumix.Input[*string]
	// Concise description. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
	DnsEntries pulumix.Input[[]*ServiceDnsEntryArgs]
	// Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Status of the service.
	Status pulumix.Input[*string]
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	// Type of IAM policy. Either `NONE` or `AWS_IAM`.
	AuthType *string `pulumi:"authType"`
	// Amazon Resource Name (ARN) of the certificate.
	CertificateArn *string `pulumi:"certificateArn"`
	// Custom domain name of the service.
	CustomDomainName *string `pulumi:"customDomainName"`
	// Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// Type of IAM policy. Either `NONE` or `AWS_IAM`.
	AuthType pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the certificate.
	CertificateArn pulumix.Input[*string]
	// Custom domain name of the service.
	CustomDomainName pulumix.Input[*string]
	// Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

func (o ServiceOutput) ToOutput(ctx context.Context) pulumix.Output[Service] {
	return pulumix.Output[Service]{
		OutputState: o.OutputState,
	}
}

// ARN of the service. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
func (o ServiceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Type of IAM policy. Either `NONE` or `AWS_IAM`.
func (o ServiceOutput) AuthType() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.AuthType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the certificate.
func (o ServiceOutput) CertificateArn() pulumix.Output[*string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[*string] { return v.CertificateArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Custom domain name of the service.
func (o ServiceOutput) CustomDomainName() pulumix.Output[*string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[*string] { return v.CustomDomainName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Concise description. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
func (o ServiceOutput) DnsEntries() pulumix.GArrayOutput[ServiceDnsEntry, ServiceDnsEntryOutput] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.GArrayOutput[ServiceDnsEntry, ServiceDnsEntryOutput] { return v.DnsEntries })
	unwrapped := pulumix.Flatten[[]ServiceDnsEntry, pulumix.GArrayOutput[ServiceDnsEntry, ServiceDnsEntryOutput]](value)
	return pulumix.GArrayOutput[ServiceDnsEntry, ServiceDnsEntryOutput]{OutputState: unwrapped.OutputState}
}

// Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length.
//
// The following arguments are optional:
func (o ServiceOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Status of the service.
func (o ServiceOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ServiceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ServiceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ServiceOutput{})
}
