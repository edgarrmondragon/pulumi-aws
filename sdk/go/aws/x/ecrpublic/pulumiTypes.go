// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecrpublic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type RepositoryCatalogData struct {
	// A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
	AboutText *string `pulumi:"aboutText"`
	// The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: `ARM`, `ARM 64`, `x86`, `x86-64`
	Architectures []string `pulumi:"architectures"`
	// A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
	Description *string `pulumi:"description"`
	// The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
	LogoImageBlob *string `pulumi:"logoImageBlob"`
	// The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: `Linux`, `Windows`
	OperatingSystems []string `pulumi:"operatingSystems"`
	// Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
	UsageText *string `pulumi:"usageText"`
}

type RepositoryCatalogDataArgs struct {
	// A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
	AboutText pulumix.Input[*string] `pulumi:"aboutText"`
	// The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: `ARM`, `ARM 64`, `x86`, `x86-64`
	Architectures pulumix.Input[[]string] `pulumi:"architectures"`
	// A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
	Description pulumix.Input[*string] `pulumi:"description"`
	// The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
	LogoImageBlob pulumix.Input[*string] `pulumi:"logoImageBlob"`
	// The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: `Linux`, `Windows`
	OperatingSystems pulumix.Input[[]string] `pulumi:"operatingSystems"`
	// Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
	UsageText pulumix.Input[*string] `pulumi:"usageText"`
}

func (RepositoryCatalogDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCatalogData)(nil)).Elem()
}

func (i RepositoryCatalogDataArgs) ToRepositoryCatalogDataOutput() RepositoryCatalogDataOutput {
	return i.ToRepositoryCatalogDataOutputWithContext(context.Background())
}

func (i RepositoryCatalogDataArgs) ToRepositoryCatalogDataOutputWithContext(ctx context.Context) RepositoryCatalogDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCatalogDataOutput)
}

func (i *RepositoryCatalogDataArgs) ToOutput(ctx context.Context) pulumix.Output[*RepositoryCatalogDataArgs] {
	return pulumix.Val(i)
}

type RepositoryCatalogDataOutput struct{ *pulumi.OutputState }

func (RepositoryCatalogDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCatalogData)(nil)).Elem()
}

func (o RepositoryCatalogDataOutput) ToRepositoryCatalogDataOutput() RepositoryCatalogDataOutput {
	return o
}

func (o RepositoryCatalogDataOutput) ToRepositoryCatalogDataOutputWithContext(ctx context.Context) RepositoryCatalogDataOutput {
	return o
}

func (o RepositoryCatalogDataOutput) ToOutput(ctx context.Context) pulumix.Output[RepositoryCatalogData] {
	return pulumix.Output[RepositoryCatalogData]{
		OutputState: o.OutputState,
	}
}

// A detailed description of the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The text must be in markdown format.
func (o RepositoryCatalogDataOutput) AboutText() pulumix.Output[*string] {
	return pulumix.Apply[RepositoryCatalogData](o, func(v RepositoryCatalogData) *string { return v.AboutText })
}

// The system architecture that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported architectures will appear as badges on the repository and are used as search filters: `ARM`, `ARM 64`, `x86`, `x86-64`
func (o RepositoryCatalogDataOutput) Architectures() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RepositoryCatalogData](o, func(v RepositoryCatalogData) []string { return v.Architectures })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// A short description of the contents of the repository. This text appears in both the image details and also when searching for repositories on the Amazon ECR Public Gallery.
func (o RepositoryCatalogDataOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[RepositoryCatalogData](o, func(v RepositoryCatalogData) *string { return v.Description })
}

// The base64-encoded repository logo payload. (Only visible for verified accounts) Note that drift detection is disabled for this attribute.
func (o RepositoryCatalogDataOutput) LogoImageBlob() pulumix.Output[*string] {
	return pulumix.Apply[RepositoryCatalogData](o, func(v RepositoryCatalogData) *string { return v.LogoImageBlob })
}

// The operating systems that the images in the repository are compatible with. On the Amazon ECR Public Gallery, the following supported operating systems will appear as badges on the repository and are used as search filters: `Linux`, `Windows`
func (o RepositoryCatalogDataOutput) OperatingSystems() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RepositoryCatalogData](o, func(v RepositoryCatalogData) []string { return v.OperatingSystems })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Detailed information on how to use the contents of the repository. It is publicly visible in the Amazon ECR Public Gallery. The usage text provides context, support information, and additional usage details for users of the repository. The text must be in markdown format.
func (o RepositoryCatalogDataOutput) UsageText() pulumix.Output[*string] {
	return pulumix.Apply[RepositoryCatalogData](o, func(v RepositoryCatalogData) *string { return v.UsageText })
}

func init() {
	pulumi.RegisterOutputType(RepositoryCatalogDataOutput{})
}
