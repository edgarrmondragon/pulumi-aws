// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Location Service Tracker.
type Tracker struct {
	pulumi.CustomResourceState

	// The timestamp for when the tracker resource was created in ISO 8601 format.
	CreateTime pulumix.Output[string] `pulumi:"createTime"`
	// The optional description for the tracker resource.
	Description pulumix.Output[*string] `pulumi:"description"`
	// A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
	KmsKeyId pulumix.Output[*string] `pulumi:"kmsKeyId"`
	// The position filtering method of the tracker resource. Valid values: `TimeBased`, `DistanceBased`, `AccuracyBased`. Default: `TimeBased`.
	PositionFiltering pulumix.Output[*string] `pulumi:"positionFiltering"`
	// Key-value tags for the tracker. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS.
	TrackerArn pulumix.Output[string] `pulumi:"trackerArn"`
	// The name of the tracker resource.
	//
	// The following arguments are optional:
	TrackerName pulumix.Output[string] `pulumi:"trackerName"`
	// The timestamp for when the tracker resource was last updated in ISO 8601 format.
	UpdateTime pulumix.Output[string] `pulumi:"updateTime"`
}

// NewTracker registers a new resource with the given unique name, arguments, and options.
func NewTracker(ctx *pulumi.Context,
	name string, args *TrackerArgs, opts ...pulumi.ResourceOption) (*Tracker, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TrackerName == nil {
		return nil, errors.New("invalid value for required argument 'TrackerName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Tracker
	err := ctx.RegisterResource("aws:location/tracker:Tracker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTracker gets an existing Tracker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTracker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrackerState, opts ...pulumi.ResourceOption) (*Tracker, error) {
	var resource Tracker
	err := ctx.ReadResource("aws:location/tracker:Tracker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Tracker resources.
type trackerState struct {
	// The timestamp for when the tracker resource was created in ISO 8601 format.
	CreateTime *string `pulumi:"createTime"`
	// The optional description for the tracker resource.
	Description *string `pulumi:"description"`
	// A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The position filtering method of the tracker resource. Valid values: `TimeBased`, `DistanceBased`, `AccuracyBased`. Default: `TimeBased`.
	PositionFiltering *string `pulumi:"positionFiltering"`
	// Key-value tags for the tracker. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS.
	TrackerArn *string `pulumi:"trackerArn"`
	// The name of the tracker resource.
	//
	// The following arguments are optional:
	TrackerName *string `pulumi:"trackerName"`
	// The timestamp for when the tracker resource was last updated in ISO 8601 format.
	UpdateTime *string `pulumi:"updateTime"`
}

type TrackerState struct {
	// The timestamp for when the tracker resource was created in ISO 8601 format.
	CreateTime pulumix.Input[*string]
	// The optional description for the tracker resource.
	Description pulumix.Input[*string]
	// A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
	KmsKeyId pulumix.Input[*string]
	// The position filtering method of the tracker resource. Valid values: `TimeBased`, `DistanceBased`, `AccuracyBased`. Default: `TimeBased`.
	PositionFiltering pulumix.Input[*string]
	// Key-value tags for the tracker. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS.
	TrackerArn pulumix.Input[*string]
	// The name of the tracker resource.
	//
	// The following arguments are optional:
	TrackerName pulumix.Input[*string]
	// The timestamp for when the tracker resource was last updated in ISO 8601 format.
	UpdateTime pulumix.Input[*string]
}

func (TrackerState) ElementType() reflect.Type {
	return reflect.TypeOf((*trackerState)(nil)).Elem()
}

type trackerArgs struct {
	// The optional description for the tracker resource.
	Description *string `pulumi:"description"`
	// A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The position filtering method of the tracker resource. Valid values: `TimeBased`, `DistanceBased`, `AccuracyBased`. Default: `TimeBased`.
	PositionFiltering *string `pulumi:"positionFiltering"`
	// Key-value tags for the tracker. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The name of the tracker resource.
	//
	// The following arguments are optional:
	TrackerName string `pulumi:"trackerName"`
}

// The set of arguments for constructing a Tracker resource.
type TrackerArgs struct {
	// The optional description for the tracker resource.
	Description pulumix.Input[*string]
	// A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
	KmsKeyId pulumix.Input[*string]
	// The position filtering method of the tracker resource. Valid values: `TimeBased`, `DistanceBased`, `AccuracyBased`. Default: `TimeBased`.
	PositionFiltering pulumix.Input[*string]
	// Key-value tags for the tracker. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The name of the tracker resource.
	//
	// The following arguments are optional:
	TrackerName pulumix.Input[string]
}

func (TrackerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trackerArgs)(nil)).Elem()
}

type TrackerOutput struct{ *pulumi.OutputState }

func (TrackerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tracker)(nil)).Elem()
}

func (o TrackerOutput) ToTrackerOutput() TrackerOutput {
	return o
}

func (o TrackerOutput) ToTrackerOutputWithContext(ctx context.Context) TrackerOutput {
	return o
}

func (o TrackerOutput) ToOutput(ctx context.Context) pulumix.Output[Tracker] {
	return pulumix.Output[Tracker]{
		OutputState: o.OutputState,
	}
}

// The timestamp for when the tracker resource was created in ISO 8601 format.
func (o TrackerOutput) CreateTime() pulumix.Output[string] {
	value := pulumix.Apply[Tracker](o, func(v Tracker) pulumix.Output[string] { return v.CreateTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The optional description for the tracker resource.
func (o TrackerOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Tracker](o, func(v Tracker) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
func (o TrackerOutput) KmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[Tracker](o, func(v Tracker) pulumix.Output[*string] { return v.KmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The position filtering method of the tracker resource. Valid values: `TimeBased`, `DistanceBased`, `AccuracyBased`. Default: `TimeBased`.
func (o TrackerOutput) PositionFiltering() pulumix.Output[*string] {
	value := pulumix.Apply[Tracker](o, func(v Tracker) pulumix.Output[*string] { return v.PositionFiltering })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value tags for the tracker. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TrackerOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Tracker](o, func(v Tracker) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TrackerOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Tracker](o, func(v Tracker) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS.
func (o TrackerOutput) TrackerArn() pulumix.Output[string] {
	value := pulumix.Apply[Tracker](o, func(v Tracker) pulumix.Output[string] { return v.TrackerArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the tracker resource.
//
// The following arguments are optional:
func (o TrackerOutput) TrackerName() pulumix.Output[string] {
	value := pulumix.Apply[Tracker](o, func(v Tracker) pulumix.Output[string] { return v.TrackerName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The timestamp for when the tracker resource was last updated in ISO 8601 format.
func (o TrackerOutput) UpdateTime() pulumix.Output[string] {
	value := pulumix.Apply[Tracker](o, func(v Tracker) pulumix.Output[string] { return v.UpdateTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(TrackerOutput{})
}
