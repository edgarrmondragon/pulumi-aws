// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package docdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an DocumentDB Global Cluster. A global cluster consists of one primary region and up to five read-only secondary regions. You issue write operations directly to the primary cluster in the primary region and Amazon DocumentDB automatically replicates the data to the secondary regions using dedicated infrastructure.
//
// More information about DocumentDB Global Clusters can be found in the [DocumentDB Developer Guide](https://docs.aws.amazon.com/documentdb/latest/developerguide/global-clusters.html).
type GlobalCluster struct {
	pulumi.CustomResourceState

	// Global Cluster Amazon Resource Name (ARN)
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Name for an automatically created database on cluster creation.
	DatabaseName pulumix.Output[*string] `pulumi:"databaseName"`
	// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection pulumix.Output[*bool] `pulumi:"deletionProtection"`
	// Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Current Valid values: `docdb`. Defaults to `docdb`. Conflicts with `sourceDbClusterIdentifier`.
	Engine pulumix.Output[string] `pulumi:"engine"`
	// Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
	// * **NOTE:** Upgrading major versions is not supported.
	EngineVersion pulumix.Output[string] `pulumi:"engineVersion"`
	// The global cluster identifier.
	GlobalClusterIdentifier pulumix.Output[string] `pulumi:"globalClusterIdentifier"`
	// Set of objects containing Global Cluster members.
	GlobalClusterMembers pulumix.GArrayOutput[GlobalClusterGlobalClusterMember, GlobalClusterGlobalClusterMemberOutput] `pulumi:"globalClusterMembers"`
	// AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.
	GlobalClusterResourceId pulumix.Output[string] `pulumi:"globalClusterResourceId"`
	// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value.
	SourceDbClusterIdentifier pulumix.Output[string] `pulumi:"sourceDbClusterIdentifier"`
	Status                    pulumix.Output[string] `pulumi:"status"`
	// Specifies whether the DB cluster is encrypted. The default is `false` unless `sourceDbClusterIdentifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted pulumix.Output[bool] `pulumi:"storageEncrypted"`
}

// NewGlobalCluster registers a new resource with the given unique name, arguments, and options.
func NewGlobalCluster(ctx *pulumi.Context,
	name string, args *GlobalClusterArgs, opts ...pulumi.ResourceOption) (*GlobalCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GlobalClusterIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'GlobalClusterIdentifier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GlobalCluster
	err := ctx.RegisterResource("aws:docdb/globalCluster:GlobalCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalCluster gets an existing GlobalCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalClusterState, opts ...pulumi.ResourceOption) (*GlobalCluster, error) {
	var resource GlobalCluster
	err := ctx.ReadResource("aws:docdb/globalCluster:GlobalCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalCluster resources.
type globalClusterState struct {
	// Global Cluster Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// Name for an automatically created database on cluster creation.
	DatabaseName *string `pulumi:"databaseName"`
	// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Current Valid values: `docdb`. Defaults to `docdb`. Conflicts with `sourceDbClusterIdentifier`.
	Engine *string `pulumi:"engine"`
	// Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
	// * **NOTE:** Upgrading major versions is not supported.
	EngineVersion *string `pulumi:"engineVersion"`
	// The global cluster identifier.
	GlobalClusterIdentifier *string `pulumi:"globalClusterIdentifier"`
	// Set of objects containing Global Cluster members.
	GlobalClusterMembers []GlobalClusterGlobalClusterMember `pulumi:"globalClusterMembers"`
	// AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.
	GlobalClusterResourceId *string `pulumi:"globalClusterResourceId"`
	// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value.
	SourceDbClusterIdentifier *string `pulumi:"sourceDbClusterIdentifier"`
	Status                    *string `pulumi:"status"`
	// Specifies whether the DB cluster is encrypted. The default is `false` unless `sourceDbClusterIdentifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted *bool `pulumi:"storageEncrypted"`
}

type GlobalClusterState struct {
	// Global Cluster Amazon Resource Name (ARN)
	Arn pulumix.Input[*string]
	// Name for an automatically created database on cluster creation.
	DatabaseName pulumix.Input[*string]
	// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection pulumix.Input[*bool]
	// Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Current Valid values: `docdb`. Defaults to `docdb`. Conflicts with `sourceDbClusterIdentifier`.
	Engine pulumix.Input[*string]
	// Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
	// * **NOTE:** Upgrading major versions is not supported.
	EngineVersion pulumix.Input[*string]
	// The global cluster identifier.
	GlobalClusterIdentifier pulumix.Input[*string]
	// Set of objects containing Global Cluster members.
	GlobalClusterMembers pulumix.Input[[]*GlobalClusterGlobalClusterMemberArgs]
	// AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.
	GlobalClusterResourceId pulumix.Input[*string]
	// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value.
	SourceDbClusterIdentifier pulumix.Input[*string]
	Status                    pulumix.Input[*string]
	// Specifies whether the DB cluster is encrypted. The default is `false` unless `sourceDbClusterIdentifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted pulumix.Input[*bool]
}

func (GlobalClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalClusterState)(nil)).Elem()
}

type globalClusterArgs struct {
	// Name for an automatically created database on cluster creation.
	DatabaseName *string `pulumi:"databaseName"`
	// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Current Valid values: `docdb`. Defaults to `docdb`. Conflicts with `sourceDbClusterIdentifier`.
	Engine *string `pulumi:"engine"`
	// Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
	// * **NOTE:** Upgrading major versions is not supported.
	EngineVersion *string `pulumi:"engineVersion"`
	// The global cluster identifier.
	GlobalClusterIdentifier string `pulumi:"globalClusterIdentifier"`
	// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value.
	SourceDbClusterIdentifier *string `pulumi:"sourceDbClusterIdentifier"`
	// Specifies whether the DB cluster is encrypted. The default is `false` unless `sourceDbClusterIdentifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted *bool `pulumi:"storageEncrypted"`
}

// The set of arguments for constructing a GlobalCluster resource.
type GlobalClusterArgs struct {
	// Name for an automatically created database on cluster creation.
	DatabaseName pulumix.Input[*string]
	// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection pulumix.Input[*bool]
	// Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Current Valid values: `docdb`. Defaults to `docdb`. Conflicts with `sourceDbClusterIdentifier`.
	Engine pulumix.Input[*string]
	// Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
	// * **NOTE:** Upgrading major versions is not supported.
	EngineVersion pulumix.Input[*string]
	// The global cluster identifier.
	GlobalClusterIdentifier pulumix.Input[string]
	// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value.
	SourceDbClusterIdentifier pulumix.Input[*string]
	// Specifies whether the DB cluster is encrypted. The default is `false` unless `sourceDbClusterIdentifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted pulumix.Input[*bool]
}

func (GlobalClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalClusterArgs)(nil)).Elem()
}

type GlobalClusterOutput struct{ *pulumi.OutputState }

func (GlobalClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalCluster)(nil)).Elem()
}

func (o GlobalClusterOutput) ToGlobalClusterOutput() GlobalClusterOutput {
	return o
}

func (o GlobalClusterOutput) ToGlobalClusterOutputWithContext(ctx context.Context) GlobalClusterOutput {
	return o
}

func (o GlobalClusterOutput) ToOutput(ctx context.Context) pulumix.Output[GlobalCluster] {
	return pulumix.Output[GlobalCluster]{
		OutputState: o.OutputState,
	}
}

// Global Cluster Amazon Resource Name (ARN)
func (o GlobalClusterOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name for an automatically created database on cluster creation.
func (o GlobalClusterOutput) DatabaseName() pulumix.Output[*string] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[*string] { return v.DatabaseName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
func (o GlobalClusterOutput) DeletionProtection() pulumix.Output[*bool] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[*bool] { return v.DeletionProtection })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Current Valid values: `docdb`. Defaults to `docdb`. Conflicts with `sourceDbClusterIdentifier`.
func (o GlobalClusterOutput) Engine() pulumix.Output[string] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[string] { return v.Engine })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
// * **NOTE:** Upgrading major versions is not supported.
func (o GlobalClusterOutput) EngineVersion() pulumix.Output[string] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[string] { return v.EngineVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The global cluster identifier.
func (o GlobalClusterOutput) GlobalClusterIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[string] { return v.GlobalClusterIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Set of objects containing Global Cluster members.
func (o GlobalClusterOutput) GlobalClusterMembers() pulumix.GArrayOutput[GlobalClusterGlobalClusterMember, GlobalClusterGlobalClusterMemberOutput] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.GArrayOutput[GlobalClusterGlobalClusterMember, GlobalClusterGlobalClusterMemberOutput] {
		return v.GlobalClusterMembers
	})
	unwrapped := pulumix.Flatten[[]GlobalClusterGlobalClusterMember, pulumix.GArrayOutput[GlobalClusterGlobalClusterMember, GlobalClusterGlobalClusterMemberOutput]](value)
	return pulumix.GArrayOutput[GlobalClusterGlobalClusterMember, GlobalClusterGlobalClusterMemberOutput]{OutputState: unwrapped.OutputState}
}

// AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.
func (o GlobalClusterOutput) GlobalClusterResourceId() pulumix.Output[string] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[string] { return v.GlobalClusterResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value.
func (o GlobalClusterOutput) SourceDbClusterIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[string] { return v.SourceDbClusterIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o GlobalClusterOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether the DB cluster is encrypted. The default is `false` unless `sourceDbClusterIdentifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
func (o GlobalClusterOutput) StorageEncrypted() pulumix.Output[bool] {
	value := pulumix.Apply[GlobalCluster](o, func(v GlobalCluster) pulumix.Output[bool] { return v.StorageEncrypted })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

func init() {
	pulumi.RegisterOutputType(GlobalClusterOutput{})
}
