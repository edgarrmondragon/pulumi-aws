// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.medialive.inputs;

import com.pulumi.aws.medialive.inputs.MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs;
import com.pulumi.aws.medialive.inputs.MultiplexProgramMultiplexProgramSettingsVideoSettingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class MultiplexProgramMultiplexProgramSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MultiplexProgramMultiplexProgramSettingsArgs Empty = new MultiplexProgramMultiplexProgramSettingsArgs();

    /**
     * Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.
     * 
     */
    @Import(name="preferredChannelPipeline", required=true)
    private Output<String> preferredChannelPipeline;

    /**
     * @return Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.
     * 
     */
    public Output<String> preferredChannelPipeline() {
        return this.preferredChannelPipeline;
    }

    /**
     * Unique program number.
     * 
     */
    @Import(name="programNumber", required=true)
    private Output<Integer> programNumber;

    /**
     * @return Unique program number.
     * 
     */
    public Output<Integer> programNumber() {
        return this.programNumber;
    }

    /**
     * Service Descriptor. See Service Descriptor for more details.
     * 
     */
    @Import(name="serviceDescriptors", required=true)
    private Output<List<MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs>> serviceDescriptors;

    /**
     * @return Service Descriptor. See Service Descriptor for more details.
     * 
     */
    public Output<List<MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs>> serviceDescriptors() {
        return this.serviceDescriptors;
    }

    /**
     * Video settings. See Video Settings for more details.
     * 
     */
    @Import(name="videoSettings", required=true)
    private Output<List<MultiplexProgramMultiplexProgramSettingsVideoSettingArgs>> videoSettings;

    /**
     * @return Video settings. See Video Settings for more details.
     * 
     */
    public Output<List<MultiplexProgramMultiplexProgramSettingsVideoSettingArgs>> videoSettings() {
        return this.videoSettings;
    }

    private MultiplexProgramMultiplexProgramSettingsArgs() {}

    private MultiplexProgramMultiplexProgramSettingsArgs(MultiplexProgramMultiplexProgramSettingsArgs $) {
        this.preferredChannelPipeline = $.preferredChannelPipeline;
        this.programNumber = $.programNumber;
        this.serviceDescriptors = $.serviceDescriptors;
        this.videoSettings = $.videoSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MultiplexProgramMultiplexProgramSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MultiplexProgramMultiplexProgramSettingsArgs $;

        public Builder() {
            $ = new MultiplexProgramMultiplexProgramSettingsArgs();
        }

        public Builder(MultiplexProgramMultiplexProgramSettingsArgs defaults) {
            $ = new MultiplexProgramMultiplexProgramSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preferredChannelPipeline Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.
         * 
         * @return builder
         * 
         */
        public Builder preferredChannelPipeline(Output<String> preferredChannelPipeline) {
            $.preferredChannelPipeline = preferredChannelPipeline;
            return this;
        }

        /**
         * @param preferredChannelPipeline Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.
         * 
         * @return builder
         * 
         */
        public Builder preferredChannelPipeline(String preferredChannelPipeline) {
            return preferredChannelPipeline(Output.of(preferredChannelPipeline));
        }

        /**
         * @param programNumber Unique program number.
         * 
         * @return builder
         * 
         */
        public Builder programNumber(Output<Integer> programNumber) {
            $.programNumber = programNumber;
            return this;
        }

        /**
         * @param programNumber Unique program number.
         * 
         * @return builder
         * 
         */
        public Builder programNumber(Integer programNumber) {
            return programNumber(Output.of(programNumber));
        }

        /**
         * @param serviceDescriptors Service Descriptor. See Service Descriptor for more details.
         * 
         * @return builder
         * 
         */
        public Builder serviceDescriptors(Output<List<MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs>> serviceDescriptors) {
            $.serviceDescriptors = serviceDescriptors;
            return this;
        }

        /**
         * @param serviceDescriptors Service Descriptor. See Service Descriptor for more details.
         * 
         * @return builder
         * 
         */
        public Builder serviceDescriptors(List<MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs> serviceDescriptors) {
            return serviceDescriptors(Output.of(serviceDescriptors));
        }

        /**
         * @param serviceDescriptors Service Descriptor. See Service Descriptor for more details.
         * 
         * @return builder
         * 
         */
        public Builder serviceDescriptors(MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs... serviceDescriptors) {
            return serviceDescriptors(List.of(serviceDescriptors));
        }

        /**
         * @param videoSettings Video settings. See Video Settings for more details.
         * 
         * @return builder
         * 
         */
        public Builder videoSettings(Output<List<MultiplexProgramMultiplexProgramSettingsVideoSettingArgs>> videoSettings) {
            $.videoSettings = videoSettings;
            return this;
        }

        /**
         * @param videoSettings Video settings. See Video Settings for more details.
         * 
         * @return builder
         * 
         */
        public Builder videoSettings(List<MultiplexProgramMultiplexProgramSettingsVideoSettingArgs> videoSettings) {
            return videoSettings(Output.of(videoSettings));
        }

        /**
         * @param videoSettings Video settings. See Video Settings for more details.
         * 
         * @return builder
         * 
         */
        public Builder videoSettings(MultiplexProgramMultiplexProgramSettingsVideoSettingArgs... videoSettings) {
            return videoSettings(List.of(videoSettings));
        }

        public MultiplexProgramMultiplexProgramSettingsArgs build() {
            $.preferredChannelPipeline = Objects.requireNonNull($.preferredChannelPipeline, "expected parameter 'preferredChannelPipeline' to be non-null");
            $.programNumber = Objects.requireNonNull($.programNumber, "expected parameter 'programNumber' to be non-null");
            $.serviceDescriptors = Objects.requireNonNull($.serviceDescriptors, "expected parameter 'serviceDescriptors' to be non-null");
            $.videoSettings = Objects.requireNonNull($.videoSettings, "expected parameter 'videoSettings' to be non-null");
            return $;
        }
    }

}
