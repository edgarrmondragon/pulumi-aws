// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Microsoft Azure Blob Storage Location within AWS DataSync.
//
// > **NOTE:** The DataSync Agents must be available before creating this resource.
type LocationAzureBlob struct {
	pulumi.CustomResourceState

	// The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
	AccessTier pulumix.Output[*string] `pulumi:"accessTier"`
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns pulumix.ArrayOutput[string] `pulumi:"agentArns"`
	// Amazon Resource Name (ARN) of the DataSync Location.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
	AuthenticationType pulumix.Output[string] `pulumi:"authenticationType"`
	// The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
	BlobType pulumix.Output[*string] `pulumi:"blobType"`
	// The URL of the Azure Blob Storage container involved in your transfer.
	ContainerUrl pulumix.Output[string] `pulumi:"containerUrl"`
	// The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
	SasConfiguration pulumix.GPtrOutput[LocationAzureBlobSasConfiguration, LocationAzureBlobSasConfigurationOutput] `pulumi:"sasConfiguration"`
	// Path segments if you want to limit your transfer to a virtual directory in the container.
	Subdirectory pulumix.Output[string] `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	Uri     pulumix.Output[string]    `pulumi:"uri"`
}

// NewLocationAzureBlob registers a new resource with the given unique name, arguments, and options.
func NewLocationAzureBlob(ctx *pulumi.Context,
	name string, args *LocationAzureBlobArgs, opts ...pulumi.ResourceOption) (*LocationAzureBlob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentArns == nil {
		return nil, errors.New("invalid value for required argument 'AgentArns'")
	}
	if args.AuthenticationType == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationType'")
	}
	if args.ContainerUrl == nil {
		return nil, errors.New("invalid value for required argument 'ContainerUrl'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocationAzureBlob
	err := ctx.RegisterResource("aws:datasync/locationAzureBlob:LocationAzureBlob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationAzureBlob gets an existing LocationAzureBlob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationAzureBlob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationAzureBlobState, opts ...pulumi.ResourceOption) (*LocationAzureBlob, error) {
	var resource LocationAzureBlob
	err := ctx.ReadResource("aws:datasync/locationAzureBlob:LocationAzureBlob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationAzureBlob resources.
type locationAzureBlobState struct {
	// The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
	AccessTier *string `pulumi:"accessTier"`
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns []string `pulumi:"agentArns"`
	// Amazon Resource Name (ARN) of the DataSync Location.
	Arn *string `pulumi:"arn"`
	// The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
	BlobType *string `pulumi:"blobType"`
	// The URL of the Azure Blob Storage container involved in your transfer.
	ContainerUrl *string `pulumi:"containerUrl"`
	// The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
	SasConfiguration *LocationAzureBlobSasConfiguration `pulumi:"sasConfiguration"`
	// Path segments if you want to limit your transfer to a virtual directory in the container.
	Subdirectory *string `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	Uri     *string           `pulumi:"uri"`
}

type LocationAzureBlobState struct {
	// The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
	AccessTier pulumix.Input[*string]
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns pulumix.Input[[]string]
	// Amazon Resource Name (ARN) of the DataSync Location.
	Arn pulumix.Input[*string]
	// The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
	AuthenticationType pulumix.Input[*string]
	// The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
	BlobType pulumix.Input[*string]
	// The URL of the Azure Blob Storage container involved in your transfer.
	ContainerUrl pulumix.Input[*string]
	// The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
	SasConfiguration pulumix.Input[*LocationAzureBlobSasConfigurationArgs]
	// Path segments if you want to limit your transfer to a virtual directory in the container.
	Subdirectory pulumix.Input[*string]
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	Uri     pulumix.Input[*string]
}

func (LocationAzureBlobState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationAzureBlobState)(nil)).Elem()
}

type locationAzureBlobArgs struct {
	// The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
	AccessTier *string `pulumi:"accessTier"`
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns []string `pulumi:"agentArns"`
	// The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
	AuthenticationType string `pulumi:"authenticationType"`
	// The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
	BlobType *string `pulumi:"blobType"`
	// The URL of the Azure Blob Storage container involved in your transfer.
	ContainerUrl string `pulumi:"containerUrl"`
	// The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
	SasConfiguration *LocationAzureBlobSasConfiguration `pulumi:"sasConfiguration"`
	// Path segments if you want to limit your transfer to a virtual directory in the container.
	Subdirectory *string `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LocationAzureBlob resource.
type LocationAzureBlobArgs struct {
	// The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
	AccessTier pulumix.Input[*string]
	// A list of DataSync Agent ARNs with which this location will be associated.
	AgentArns pulumix.Input[[]string]
	// The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
	AuthenticationType pulumix.Input[string]
	// The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
	BlobType pulumix.Input[*string]
	// The URL of the Azure Blob Storage container involved in your transfer.
	ContainerUrl pulumix.Input[string]
	// The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
	SasConfiguration pulumix.Input[*LocationAzureBlobSasConfigurationArgs]
	// Path segments if you want to limit your transfer to a virtual directory in the container.
	Subdirectory pulumix.Input[*string]
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (LocationAzureBlobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationAzureBlobArgs)(nil)).Elem()
}

type LocationAzureBlobOutput struct{ *pulumi.OutputState }

func (LocationAzureBlobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationAzureBlob)(nil)).Elem()
}

func (o LocationAzureBlobOutput) ToLocationAzureBlobOutput() LocationAzureBlobOutput {
	return o
}

func (o LocationAzureBlobOutput) ToLocationAzureBlobOutputWithContext(ctx context.Context) LocationAzureBlobOutput {
	return o
}

func (o LocationAzureBlobOutput) ToOutput(ctx context.Context) pulumix.Output[LocationAzureBlob] {
	return pulumix.Output[LocationAzureBlob]{
		OutputState: o.OutputState,
	}
}

// The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
func (o LocationAzureBlobOutput) AccessTier() pulumix.Output[*string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.Output[*string] { return v.AccessTier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A list of DataSync Agent ARNs with which this location will be associated.
func (o LocationAzureBlobOutput) AgentArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.ArrayOutput[string] { return v.AgentArns })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of the DataSync Location.
func (o LocationAzureBlobOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
func (o LocationAzureBlobOutput) AuthenticationType() pulumix.Output[string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.Output[string] { return v.AuthenticationType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
func (o LocationAzureBlobOutput) BlobType() pulumix.Output[*string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.Output[*string] { return v.BlobType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The URL of the Azure Blob Storage container involved in your transfer.
func (o LocationAzureBlobOutput) ContainerUrl() pulumix.Output[string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.Output[string] { return v.ContainerUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
func (o LocationAzureBlobOutput) SasConfiguration() pulumix.GPtrOutput[LocationAzureBlobSasConfiguration, LocationAzureBlobSasConfigurationOutput] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.GPtrOutput[LocationAzureBlobSasConfiguration, LocationAzureBlobSasConfigurationOutput] {
		return v.SasConfiguration
	})
	unwrapped := pulumix.Flatten[*LocationAzureBlobSasConfiguration, pulumix.GPtrOutput[LocationAzureBlobSasConfiguration, LocationAzureBlobSasConfigurationOutput]](value)
	return pulumix.GPtrOutput[LocationAzureBlobSasConfiguration, LocationAzureBlobSasConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Path segments if you want to limit your transfer to a virtual directory in the container.
func (o LocationAzureBlobOutput) Subdirectory() pulumix.Output[string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.Output[string] { return v.Subdirectory })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o LocationAzureBlobOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o LocationAzureBlobOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o LocationAzureBlobOutput) Uri() pulumix.Output[string] {
	value := pulumix.Apply[LocationAzureBlob](o, func(v LocationAzureBlob) pulumix.Output[string] { return v.Uri })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(LocationAzureBlobOutput{})
}
