// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides SSM Parameters by path.
func GetParametersByPath(ctx *pulumi.Context, args *GetParametersByPathArgs, opts ...pulumi.InvokeOption) (*GetParametersByPathResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetParametersByPathResult
	err := ctx.Invoke("aws:ssm/getParametersByPath:getParametersByPath", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getParametersByPath.
type GetParametersByPathArgs struct {
	// Prefix path of the parameter.
	Path string `pulumi:"path"`
	// Whether to recursively return parameters under `path`. Defaults to `false`.
	//
	// In addition to all arguments above, the following attributes are exported:
	Recursive *bool `pulumi:"recursive"`
	// Whether to return decrypted `SecureString` value. Defaults to `true`.
	WithDecryption *bool `pulumi:"withDecryption"`
}

// A collection of values returned by getParametersByPath.
type GetParametersByPathResult struct {
	Arns []string `pulumi:"arns"`
	// The provider-assigned unique ID for this managed resource.
	Id             string   `pulumi:"id"`
	Names          []string `pulumi:"names"`
	Path           string   `pulumi:"path"`
	Recursive      *bool    `pulumi:"recursive"`
	Types          []string `pulumi:"types"`
	Values         []string `pulumi:"values"`
	WithDecryption *bool    `pulumi:"withDecryption"`
}

func GetParametersByPathOutput(ctx *pulumi.Context, args GetParametersByPathOutputArgs, opts ...pulumi.InvokeOption) GetParametersByPathResultOutput {
	outputResult := pulumix.ApplyErr[*GetParametersByPathArgs](args.ToOutput(), func(plainArgs *GetParametersByPathArgs) (*GetParametersByPathResult, error) {
		return GetParametersByPath(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetParametersByPathResultOutput, *GetParametersByPathResult](outputResult)
}

// A collection of arguments for invoking getParametersByPath.
type GetParametersByPathOutputArgs struct {
	// Prefix path of the parameter.
	Path pulumix.Input[string] `pulumi:"path"`
	// Whether to recursively return parameters under `path`. Defaults to `false`.
	//
	// In addition to all arguments above, the following attributes are exported:
	Recursive pulumix.Input[*bool] `pulumi:"recursive"`
	// Whether to return decrypted `SecureString` value. Defaults to `true`.
	WithDecryption pulumix.Input[*bool] `pulumi:"withDecryption"`
}

func (args GetParametersByPathOutputArgs) ToOutput() pulumix.Output[*GetParametersByPathArgs] {
	allArgs := pulumix.All(
		args.Path.ToOutput(context.Background()).AsAny(),
		args.Recursive.ToOutput(context.Background()).AsAny(),
		args.WithDecryption.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetParametersByPathArgs {
		return &GetParametersByPathArgs{
			Path:           resolvedArgs[0].(string),
			Recursive:      resolvedArgs[1].(*bool),
			WithDecryption: resolvedArgs[2].(*bool),
		}
	})
}

type GetParametersByPathResultOutput struct{ *pulumi.OutputState }

func (GetParametersByPathResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParametersByPathResult)(nil)).Elem()
}

func (o GetParametersByPathResultOutput) ToOutput(context.Context) pulumix.Output[*GetParametersByPathResult] {
	return pulumix.Output[*GetParametersByPathResult]{
		OutputState: o.OutputState,
	}
}

func (o GetParametersByPathResultOutput) Arns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetParametersByPathResult](o, func(v *GetParametersByPathResult) []string { return v.Arns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetParametersByPathResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetParametersByPathResult](o, func(v *GetParametersByPathResult) string { return v.Id })
}

func (o GetParametersByPathResultOutput) Names() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetParametersByPathResult](o, func(v *GetParametersByPathResult) []string { return v.Names })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetParametersByPathResultOutput) Path() pulumix.Output[string] {
	return pulumix.Apply[*GetParametersByPathResult](o, func(v *GetParametersByPathResult) string { return v.Path })
}

func (o GetParametersByPathResultOutput) Recursive() pulumix.Output[*bool] {
	return pulumix.Apply[*GetParametersByPathResult](o, func(v *GetParametersByPathResult) *bool { return v.Recursive })
}

func (o GetParametersByPathResultOutput) Types() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetParametersByPathResult](o, func(v *GetParametersByPathResult) []string { return v.Types })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetParametersByPathResultOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetParametersByPathResult](o, func(v *GetParametersByPathResult) []string { return v.Values })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetParametersByPathResultOutput) WithDecryption() pulumix.Output[*bool] {
	return pulumix.Apply[*GetParametersByPathResult](o, func(v *GetParametersByPathResult) *bool { return v.WithDecryption })
}
