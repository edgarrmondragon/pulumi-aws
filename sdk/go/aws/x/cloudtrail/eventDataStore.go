// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudtrail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CloudTrail Event Data Store.
//
// More information about event data stores can be found in the [Event Data Store User Guide](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/query-event-data-store.html).
//
// > **Tip:** For an organization event data store you must create this resource in the management account.
type EventDataStore struct {
	pulumi.CustomResourceState

	// The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see [Log events by using advanced event selectors](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced) in the CloudTrail User Guide.
	AdvancedEventSelectors pulumix.GArrayOutput[EventDataStoreAdvancedEventSelector, EventDataStoreAdvancedEventSelectorOutput] `pulumi:"advancedEventSelectors"`
	// ARN of the event data store.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies the AWS KMS key ID to use to encrypt the events delivered by CloudTrail. The value can be an alias name prefixed by alias/, a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
	KmsKeyId pulumix.Output[*string] `pulumi:"kmsKeyId"`
	// Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created. Default: `true`.
	MultiRegionEnabled pulumix.Output[*bool] `pulumi:"multiRegionEnabled"`
	// The name of the event data store.
	Name pulumix.Output[string] `pulumi:"name"`
	// Specifies whether an event data store collects events logged for an organization in AWS Organizations. Default: `false`.
	OrganizationEnabled pulumix.Output[*bool] `pulumi:"organizationEnabled"`
	// The retention period of the event data store, in days. You can set a retention period of up to 2555 days, the equivalent of seven years. Default: `2555`.
	RetentionPeriod pulumix.Output[*int] `pulumi:"retentionPeriod"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled. Default: `true`.
	TerminationProtectionEnabled pulumix.Output[*bool] `pulumi:"terminationProtectionEnabled"`
}

// NewEventDataStore registers a new resource with the given unique name, arguments, and options.
func NewEventDataStore(ctx *pulumi.Context,
	name string, args *EventDataStoreArgs, opts ...pulumi.ResourceOption) (*EventDataStore, error) {
	if args == nil {
		args = &EventDataStoreArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventDataStore
	err := ctx.RegisterResource("aws:cloudtrail/eventDataStore:EventDataStore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventDataStore gets an existing EventDataStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventDataStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventDataStoreState, opts ...pulumi.ResourceOption) (*EventDataStore, error) {
	var resource EventDataStore
	err := ctx.ReadResource("aws:cloudtrail/eventDataStore:EventDataStore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventDataStore resources.
type eventDataStoreState struct {
	// The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see [Log events by using advanced event selectors](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced) in the CloudTrail User Guide.
	AdvancedEventSelectors []EventDataStoreAdvancedEventSelector `pulumi:"advancedEventSelectors"`
	// ARN of the event data store.
	Arn *string `pulumi:"arn"`
	// Specifies the AWS KMS key ID to use to encrypt the events delivered by CloudTrail. The value can be an alias name prefixed by alias/, a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created. Default: `true`.
	MultiRegionEnabled *bool `pulumi:"multiRegionEnabled"`
	// The name of the event data store.
	Name *string `pulumi:"name"`
	// Specifies whether an event data store collects events logged for an organization in AWS Organizations. Default: `false`.
	OrganizationEnabled *bool `pulumi:"organizationEnabled"`
	// The retention period of the event data store, in days. You can set a retention period of up to 2555 days, the equivalent of seven years. Default: `2555`.
	RetentionPeriod *int `pulumi:"retentionPeriod"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled. Default: `true`.
	TerminationProtectionEnabled *bool `pulumi:"terminationProtectionEnabled"`
}

type EventDataStoreState struct {
	// The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see [Log events by using advanced event selectors](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced) in the CloudTrail User Guide.
	AdvancedEventSelectors pulumix.Input[[]*EventDataStoreAdvancedEventSelectorArgs]
	// ARN of the event data store.
	Arn pulumix.Input[*string]
	// Specifies the AWS KMS key ID to use to encrypt the events delivered by CloudTrail. The value can be an alias name prefixed by alias/, a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
	KmsKeyId pulumix.Input[*string]
	// Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created. Default: `true`.
	MultiRegionEnabled pulumix.Input[*bool]
	// The name of the event data store.
	Name pulumix.Input[*string]
	// Specifies whether an event data store collects events logged for an organization in AWS Organizations. Default: `false`.
	OrganizationEnabled pulumix.Input[*bool]
	// The retention period of the event data store, in days. You can set a retention period of up to 2555 days, the equivalent of seven years. Default: `2555`.
	RetentionPeriod pulumix.Input[*int]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled. Default: `true`.
	TerminationProtectionEnabled pulumix.Input[*bool]
}

func (EventDataStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventDataStoreState)(nil)).Elem()
}

type eventDataStoreArgs struct {
	// The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see [Log events by using advanced event selectors](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced) in the CloudTrail User Guide.
	AdvancedEventSelectors []EventDataStoreAdvancedEventSelector `pulumi:"advancedEventSelectors"`
	// Specifies the AWS KMS key ID to use to encrypt the events delivered by CloudTrail. The value can be an alias name prefixed by alias/, a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created. Default: `true`.
	MultiRegionEnabled *bool `pulumi:"multiRegionEnabled"`
	// The name of the event data store.
	Name *string `pulumi:"name"`
	// Specifies whether an event data store collects events logged for an organization in AWS Organizations. Default: `false`.
	OrganizationEnabled *bool `pulumi:"organizationEnabled"`
	// The retention period of the event data store, in days. You can set a retention period of up to 2555 days, the equivalent of seven years. Default: `2555`.
	RetentionPeriod *int `pulumi:"retentionPeriod"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled. Default: `true`.
	TerminationProtectionEnabled *bool `pulumi:"terminationProtectionEnabled"`
}

// The set of arguments for constructing a EventDataStore resource.
type EventDataStoreArgs struct {
	// The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see [Log events by using advanced event selectors](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced) in the CloudTrail User Guide.
	AdvancedEventSelectors pulumix.Input[[]*EventDataStoreAdvancedEventSelectorArgs]
	// Specifies the AWS KMS key ID to use to encrypt the events delivered by CloudTrail. The value can be an alias name prefixed by alias/, a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
	KmsKeyId pulumix.Input[*string]
	// Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created. Default: `true`.
	MultiRegionEnabled pulumix.Input[*bool]
	// The name of the event data store.
	Name pulumix.Input[*string]
	// Specifies whether an event data store collects events logged for an organization in AWS Organizations. Default: `false`.
	OrganizationEnabled pulumix.Input[*bool]
	// The retention period of the event data store, in days. You can set a retention period of up to 2555 days, the equivalent of seven years. Default: `2555`.
	RetentionPeriod pulumix.Input[*int]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled. Default: `true`.
	TerminationProtectionEnabled pulumix.Input[*bool]
}

func (EventDataStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventDataStoreArgs)(nil)).Elem()
}

type EventDataStoreOutput struct{ *pulumi.OutputState }

func (EventDataStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDataStore)(nil)).Elem()
}

func (o EventDataStoreOutput) ToEventDataStoreOutput() EventDataStoreOutput {
	return o
}

func (o EventDataStoreOutput) ToEventDataStoreOutputWithContext(ctx context.Context) EventDataStoreOutput {
	return o
}

func (o EventDataStoreOutput) ToOutput(ctx context.Context) pulumix.Output[EventDataStore] {
	return pulumix.Output[EventDataStore]{
		OutputState: o.OutputState,
	}
}

// The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see [Log events by using advanced event selectors](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced) in the CloudTrail User Guide.
func (o EventDataStoreOutput) AdvancedEventSelectors() pulumix.GArrayOutput[EventDataStoreAdvancedEventSelector, EventDataStoreAdvancedEventSelectorOutput] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.GArrayOutput[EventDataStoreAdvancedEventSelector, EventDataStoreAdvancedEventSelectorOutput] {
		return v.AdvancedEventSelectors
	})
	unwrapped := pulumix.Flatten[[]EventDataStoreAdvancedEventSelector, pulumix.GArrayOutput[EventDataStoreAdvancedEventSelector, EventDataStoreAdvancedEventSelectorOutput]](value)
	return pulumix.GArrayOutput[EventDataStoreAdvancedEventSelector, EventDataStoreAdvancedEventSelectorOutput]{OutputState: unwrapped.OutputState}
}

// ARN of the event data store.
func (o EventDataStoreOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the AWS KMS key ID to use to encrypt the events delivered by CloudTrail. The value can be an alias name prefixed by alias/, a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
func (o EventDataStoreOutput) KmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.Output[*string] { return v.KmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created. Default: `true`.
func (o EventDataStoreOutput) MultiRegionEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.Output[*bool] { return v.MultiRegionEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The name of the event data store.
func (o EventDataStoreOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether an event data store collects events logged for an organization in AWS Organizations. Default: `false`.
func (o EventDataStoreOutput) OrganizationEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.Output[*bool] { return v.OrganizationEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The retention period of the event data store, in days. You can set a retention period of up to 2555 days, the equivalent of seven years. Default: `2555`.
func (o EventDataStoreOutput) RetentionPeriod() pulumix.Output[*int] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.Output[*int] { return v.RetentionPeriod })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o EventDataStoreOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o EventDataStoreOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled. Default: `true`.
func (o EventDataStoreOutput) TerminationProtectionEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[EventDataStore](o, func(v EventDataStore) pulumix.Output[*bool] { return v.TerminationProtectionEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

func init() {
	pulumi.RegisterOutputType(EventDataStoreOutput{})
}
