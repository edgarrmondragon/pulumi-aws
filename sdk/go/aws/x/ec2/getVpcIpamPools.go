// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `ec2.getVpcIpamPools` provides details about IPAM pools.
//
// This resource can prove useful when IPAM pools are created in another root
// module and you need the pool ids as input variables. For example, pools
// can be shared via RAM and used to create vpcs with CIDRs from that pool.
func GetVpcIpamPools(ctx *pulumi.Context, args *GetVpcIpamPoolsArgs, opts ...pulumi.InvokeOption) (*GetVpcIpamPoolsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpcIpamPoolsResult
	err := ctx.Invoke("aws:ec2/getVpcIpamPools:getVpcIpamPools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcIpamPools.
type GetVpcIpamPoolsArgs struct {
	// Custom filter block as described below.
	Filters []GetVpcIpamPoolsFilter `pulumi:"filters"`
}

// A collection of values returned by getVpcIpamPools.
type GetVpcIpamPoolsResult struct {
	Filters []GetVpcIpamPoolsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of IPAM pools and their attributes. See below for details
	IpamPools []GetVpcIpamPoolsIpamPool `pulumi:"ipamPools"`
}

func GetVpcIpamPoolsOutput(ctx *pulumi.Context, args GetVpcIpamPoolsOutputArgs, opts ...pulumi.InvokeOption) GetVpcIpamPoolsResultOutput {
	outputResult := pulumix.ApplyErr[*GetVpcIpamPoolsArgs](args.ToOutput(), func(plainArgs *GetVpcIpamPoolsArgs) (*GetVpcIpamPoolsResult, error) {
		return GetVpcIpamPools(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetVpcIpamPoolsResultOutput, *GetVpcIpamPoolsResult](outputResult)
}

// A collection of arguments for invoking getVpcIpamPools.
type GetVpcIpamPoolsOutputArgs struct {
	// Custom filter block as described below.
	Filters pulumix.Input[[]*GetVpcIpamPoolsFilterArgs] `pulumi:"filters"`
}

func (args GetVpcIpamPoolsOutputArgs) ToOutput() pulumix.Output[*GetVpcIpamPoolsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetVpcIpamPoolsArgs {
		return &GetVpcIpamPoolsArgs{
			Filters: resolvedArgs[0].([]GetVpcIpamPoolsFilter),
		}
	})
}

type GetVpcIpamPoolsResultOutput struct{ *pulumi.OutputState }

func (GetVpcIpamPoolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolsResult)(nil)).Elem()
}

func (o GetVpcIpamPoolsResultOutput) ToOutput(context.Context) pulumix.Output[*GetVpcIpamPoolsResult] {
	return pulumix.Output[*GetVpcIpamPoolsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetVpcIpamPoolsResultOutput) Filters() pulumix.GArrayOutput[GetVpcIpamPoolsFilter, GetVpcIpamPoolsFilterOutput] {
	value := pulumix.Apply[*GetVpcIpamPoolsResult](o, func(v *GetVpcIpamPoolsResult) []GetVpcIpamPoolsFilter { return v.Filters })
	return pulumix.GArrayOutput[GetVpcIpamPoolsFilter, GetVpcIpamPoolsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetVpcIpamPoolsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetVpcIpamPoolsResult](o, func(v *GetVpcIpamPoolsResult) string { return v.Id })
}

func (o GetVpcIpamPoolsResultOutput) IpamPools() pulumix.GArrayOutput[GetVpcIpamPoolsIpamPool, GetVpcIpamPoolsIpamPoolOutput] {
	value := pulumix.Apply[*GetVpcIpamPoolsResult](o, func(v *GetVpcIpamPoolsResult) []GetVpcIpamPoolsIpamPool { return v.IpamPools })
	return pulumix.GArrayOutput[GetVpcIpamPoolsIpamPool, GetVpcIpamPoolsIpamPoolOutput]{
		OutputState: value.OutputState,
	}
}
