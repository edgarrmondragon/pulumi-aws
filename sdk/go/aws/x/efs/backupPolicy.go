// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic File System (EFS) Backup Policy resource.
// Backup policies turn automatic backups on or off for an existing file system.
type BackupPolicy struct {
	pulumi.CustomResourceState

	// A backupPolicy object (documented below).
	BackupPolicy pulumix.GPtrOutput[BackupPolicyBackupPolicy, BackupPolicyBackupPolicyOutput] `pulumi:"backupPolicy"`
	// The ID of the EFS file system.
	FileSystemId pulumix.Output[string] `pulumi:"fileSystemId"`
}

// NewBackupPolicy registers a new resource with the given unique name, arguments, and options.
func NewBackupPolicy(ctx *pulumi.Context,
	name string, args *BackupPolicyArgs, opts ...pulumi.ResourceOption) (*BackupPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupPolicy == nil {
		return nil, errors.New("invalid value for required argument 'BackupPolicy'")
	}
	if args.FileSystemId == nil {
		return nil, errors.New("invalid value for required argument 'FileSystemId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackupPolicy
	err := ctx.RegisterResource("aws:efs/backupPolicy:BackupPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupPolicy gets an existing BackupPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupPolicyState, opts ...pulumi.ResourceOption) (*BackupPolicy, error) {
	var resource BackupPolicy
	err := ctx.ReadResource("aws:efs/backupPolicy:BackupPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupPolicy resources.
type backupPolicyState struct {
	// A backupPolicy object (documented below).
	BackupPolicy *BackupPolicyBackupPolicy `pulumi:"backupPolicy"`
	// The ID of the EFS file system.
	FileSystemId *string `pulumi:"fileSystemId"`
}

type BackupPolicyState struct {
	// A backupPolicy object (documented below).
	BackupPolicy pulumix.Input[*BackupPolicyBackupPolicyArgs]
	// The ID of the EFS file system.
	FileSystemId pulumix.Input[*string]
}

func (BackupPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyState)(nil)).Elem()
}

type backupPolicyArgs struct {
	// A backupPolicy object (documented below).
	BackupPolicy BackupPolicyBackupPolicy `pulumi:"backupPolicy"`
	// The ID of the EFS file system.
	FileSystemId string `pulumi:"fileSystemId"`
}

// The set of arguments for constructing a BackupPolicy resource.
type BackupPolicyArgs struct {
	// A backupPolicy object (documented below).
	BackupPolicy pulumix.Input[*BackupPolicyBackupPolicyArgs]
	// The ID of the EFS file system.
	FileSystemId pulumix.Input[string]
}

func (BackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPolicyArgs)(nil)).Elem()
}

type BackupPolicyOutput struct{ *pulumi.OutputState }

func (BackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicy)(nil)).Elem()
}

func (o BackupPolicyOutput) ToBackupPolicyOutput() BackupPolicyOutput {
	return o
}

func (o BackupPolicyOutput) ToBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyOutput {
	return o
}

func (o BackupPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[BackupPolicy] {
	return pulumix.Output[BackupPolicy]{
		OutputState: o.OutputState,
	}
}

// A backupPolicy object (documented below).
func (o BackupPolicyOutput) BackupPolicy() pulumix.GPtrOutput[BackupPolicyBackupPolicy, BackupPolicyBackupPolicyOutput] {
	value := pulumix.Apply[BackupPolicy](o, func(v BackupPolicy) pulumix.GPtrOutput[BackupPolicyBackupPolicy, BackupPolicyBackupPolicyOutput] {
		return v.BackupPolicy
	})
	unwrapped := pulumix.Flatten[*BackupPolicyBackupPolicy, pulumix.GPtrOutput[BackupPolicyBackupPolicy, BackupPolicyBackupPolicyOutput]](value)
	return pulumix.GPtrOutput[BackupPolicyBackupPolicy, BackupPolicyBackupPolicyOutput]{OutputState: unwrapped.OutputState}
}

// The ID of the EFS file system.
func (o BackupPolicyOutput) FileSystemId() pulumix.Output[string] {
	value := pulumix.Apply[BackupPolicy](o, func(v BackupPolicy) pulumix.Output[string] { return v.FileSystemId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(BackupPolicyOutput{})
}
