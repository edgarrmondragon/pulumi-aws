// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appintegrations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon AppIntegrations Data Integration resource.
type DataIntegration struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Data Integration.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies the description of the Data Integration.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
	KmsKey pulumix.Output[string] `pulumi:"kmsKey"`
	// Specifies the name of the Data Integration.
	Name pulumix.Output[string] `pulumi:"name"`
	// A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
	ScheduleConfig pulumix.GPtrOutput[DataIntegrationScheduleConfig, DataIntegrationScheduleConfigOutput] `pulumi:"scheduleConfig"`
	// Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
	SourceUri pulumix.Output[string] `pulumi:"sourceUri"`
	// Tags to apply to the Data Integration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDataIntegration registers a new resource with the given unique name, arguments, and options.
func NewDataIntegration(ctx *pulumi.Context,
	name string, args *DataIntegrationArgs, opts ...pulumi.ResourceOption) (*DataIntegration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KmsKey == nil {
		return nil, errors.New("invalid value for required argument 'KmsKey'")
	}
	if args.ScheduleConfig == nil {
		return nil, errors.New("invalid value for required argument 'ScheduleConfig'")
	}
	if args.SourceUri == nil {
		return nil, errors.New("invalid value for required argument 'SourceUri'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataIntegration
	err := ctx.RegisterResource("aws:appintegrations/dataIntegration:DataIntegration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataIntegration gets an existing DataIntegration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataIntegrationState, opts ...pulumi.ResourceOption) (*DataIntegration, error) {
	var resource DataIntegration
	err := ctx.ReadResource("aws:appintegrations/dataIntegration:DataIntegration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataIntegration resources.
type dataIntegrationState struct {
	// The Amazon Resource Name (ARN) of the Data Integration.
	Arn *string `pulumi:"arn"`
	// Specifies the description of the Data Integration.
	Description *string `pulumi:"description"`
	// Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
	KmsKey *string `pulumi:"kmsKey"`
	// Specifies the name of the Data Integration.
	Name *string `pulumi:"name"`
	// A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
	ScheduleConfig *DataIntegrationScheduleConfig `pulumi:"scheduleConfig"`
	// Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
	SourceUri *string `pulumi:"sourceUri"`
	// Tags to apply to the Data Integration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DataIntegrationState struct {
	// The Amazon Resource Name (ARN) of the Data Integration.
	Arn pulumix.Input[*string]
	// Specifies the description of the Data Integration.
	Description pulumix.Input[*string]
	// Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
	KmsKey pulumix.Input[*string]
	// Specifies the name of the Data Integration.
	Name pulumix.Input[*string]
	// A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
	ScheduleConfig pulumix.Input[*DataIntegrationScheduleConfigArgs]
	// Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
	SourceUri pulumix.Input[*string]
	// Tags to apply to the Data Integration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DataIntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataIntegrationState)(nil)).Elem()
}

type dataIntegrationArgs struct {
	// Specifies the description of the Data Integration.
	Description *string `pulumi:"description"`
	// Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
	KmsKey string `pulumi:"kmsKey"`
	// Specifies the name of the Data Integration.
	Name *string `pulumi:"name"`
	// A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
	ScheduleConfig DataIntegrationScheduleConfig `pulumi:"scheduleConfig"`
	// Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
	SourceUri string `pulumi:"sourceUri"`
	// Tags to apply to the Data Integration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DataIntegration resource.
type DataIntegrationArgs struct {
	// Specifies the description of the Data Integration.
	Description pulumix.Input[*string]
	// Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
	KmsKey pulumix.Input[string]
	// Specifies the name of the Data Integration.
	Name pulumix.Input[*string]
	// A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
	ScheduleConfig pulumix.Input[*DataIntegrationScheduleConfigArgs]
	// Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
	SourceUri pulumix.Input[string]
	// Tags to apply to the Data Integration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DataIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataIntegrationArgs)(nil)).Elem()
}

type DataIntegrationOutput struct{ *pulumi.OutputState }

func (DataIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegration)(nil)).Elem()
}

func (o DataIntegrationOutput) ToDataIntegrationOutput() DataIntegrationOutput {
	return o
}

func (o DataIntegrationOutput) ToDataIntegrationOutputWithContext(ctx context.Context) DataIntegrationOutput {
	return o
}

func (o DataIntegrationOutput) ToOutput(ctx context.Context) pulumix.Output[DataIntegration] {
	return pulumix.Output[DataIntegration]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Data Integration.
func (o DataIntegrationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DataIntegration](o, func(v DataIntegration) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the description of the Data Integration.
func (o DataIntegrationOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[DataIntegration](o, func(v DataIntegration) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
func (o DataIntegrationOutput) KmsKey() pulumix.Output[string] {
	value := pulumix.Apply[DataIntegration](o, func(v DataIntegration) pulumix.Output[string] { return v.KmsKey })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the name of the Data Integration.
func (o DataIntegrationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[DataIntegration](o, func(v DataIntegration) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
func (o DataIntegrationOutput) ScheduleConfig() pulumix.GPtrOutput[DataIntegrationScheduleConfig, DataIntegrationScheduleConfigOutput] {
	value := pulumix.Apply[DataIntegration](o, func(v DataIntegration) pulumix.GPtrOutput[DataIntegrationScheduleConfig, DataIntegrationScheduleConfigOutput] {
		return v.ScheduleConfig
	})
	unwrapped := pulumix.Flatten[*DataIntegrationScheduleConfig, pulumix.GPtrOutput[DataIntegrationScheduleConfig, DataIntegrationScheduleConfigOutput]](value)
	return pulumix.GPtrOutput[DataIntegrationScheduleConfig, DataIntegrationScheduleConfigOutput]{OutputState: unwrapped.OutputState}
}

// Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
func (o DataIntegrationOutput) SourceUri() pulumix.Output[string] {
	value := pulumix.Apply[DataIntegration](o, func(v DataIntegration) pulumix.Output[string] { return v.SourceUri })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Tags to apply to the Data Integration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DataIntegrationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DataIntegration](o, func(v DataIntegration) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DataIntegrationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DataIntegration](o, func(v DataIntegration) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DataIntegrationOutput{})
}
