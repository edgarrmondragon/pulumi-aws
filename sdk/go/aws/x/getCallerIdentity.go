// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get the access to the effective Account ID, User ID, and ARN in
// which this provider is authorized.
func GetCallerIdentity(ctx *pulumi.Context, args *GetCallerIdentityArgs, opts ...pulumi.InvokeOption) (*GetCallerIdentityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCallerIdentityResult
	err := ctx.Invoke("aws:index/getCallerIdentity:getCallerIdentity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCallerIdentity.
type GetCallerIdentityArgs struct {
	// Account ID number of the account that owns or contains the calling entity.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getCallerIdentity.
type GetCallerIdentityResult struct {
	// AWS Account ID number of the account that owns or contains the calling entity.
	AccountId string `pulumi:"accountId"`
	// ARN associated with the calling entity.
	Arn string `pulumi:"arn"`
	// Account ID number of the account that owns or contains the calling entity.
	Id string `pulumi:"id"`
	// Unique identifier of the calling entity.
	UserId string `pulumi:"userId"`
}

func GetCallerIdentityOutput(ctx *pulumi.Context, args GetCallerIdentityOutputArgs, opts ...pulumi.InvokeOption) GetCallerIdentityResultOutput {
	outputResult := pulumix.ApplyErr[*GetCallerIdentityArgs](args.ToOutput(), func(plainArgs *GetCallerIdentityArgs) (*GetCallerIdentityResult, error) {
		return GetCallerIdentity(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetCallerIdentityResultOutput, *GetCallerIdentityResult](outputResult)
}

// A collection of arguments for invoking getCallerIdentity.
type GetCallerIdentityOutputArgs struct {
	// Account ID number of the account that owns or contains the calling entity.
	Id pulumix.Input[*string] `pulumi:"id"`
}

func (args GetCallerIdentityOutputArgs) ToOutput() pulumix.Output[*GetCallerIdentityArgs] {
	allArgs := pulumix.All(
		args.Id.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetCallerIdentityArgs {
		return &GetCallerIdentityArgs{
			Id: resolvedArgs[0].(*string),
		}
	})
}

type GetCallerIdentityResultOutput struct{ *pulumi.OutputState }

func (GetCallerIdentityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCallerIdentityResult)(nil)).Elem()
}

func (o GetCallerIdentityResultOutput) ToOutput(context.Context) pulumix.Output[*GetCallerIdentityResult] {
	return pulumix.Output[*GetCallerIdentityResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCallerIdentityResultOutput) AccountId() pulumix.Output[string] {
	return pulumix.Apply[*GetCallerIdentityResult](o, func(v *GetCallerIdentityResult) string { return v.AccountId })
}

func (o GetCallerIdentityResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*GetCallerIdentityResult](o, func(v *GetCallerIdentityResult) string { return v.Arn })
}

func (o GetCallerIdentityResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetCallerIdentityResult](o, func(v *GetCallerIdentityResult) string { return v.Id })
}

func (o GetCallerIdentityResultOutput) UserId() pulumix.Output[string] {
	return pulumix.Apply[*GetCallerIdentityResult](o, func(v *GetCallerIdentityResult) string { return v.UserId })
}
