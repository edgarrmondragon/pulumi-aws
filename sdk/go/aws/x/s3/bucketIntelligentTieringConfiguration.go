// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an [S3 Intelligent-Tiering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/intelligent-tiering.html) configuration resource.
type BucketIntelligentTieringConfiguration struct {
	pulumi.CustomResourceState

	// Name of the bucket this intelligent tiering configuration is associated with.
	Bucket pulumix.Output[string] `pulumi:"bucket"`
	// Bucket filter. The configuration only includes objects that meet the filter's criteria (documented below).
	Filter pulumix.GPtrOutput[BucketIntelligentTieringConfigurationFilter, BucketIntelligentTieringConfigurationFilterOutput] `pulumi:"filter"`
	// Unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.
	Name pulumix.Output[string] `pulumi:"name"`
	// Specifies the status of the configuration. Valid values: `Enabled`, `Disabled`.
	Status pulumix.Output[*string] `pulumi:"status"`
	// S3 Intelligent-Tiering storage class tiers of the configuration (documented below).
	Tierings pulumix.GArrayOutput[BucketIntelligentTieringConfigurationTiering, BucketIntelligentTieringConfigurationTieringOutput] `pulumi:"tierings"`
}

// NewBucketIntelligentTieringConfiguration registers a new resource with the given unique name, arguments, and options.
func NewBucketIntelligentTieringConfiguration(ctx *pulumi.Context,
	name string, args *BucketIntelligentTieringConfigurationArgs, opts ...pulumi.ResourceOption) (*BucketIntelligentTieringConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Tierings == nil {
		return nil, errors.New("invalid value for required argument 'Tierings'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketIntelligentTieringConfiguration
	err := ctx.RegisterResource("aws:s3/bucketIntelligentTieringConfiguration:BucketIntelligentTieringConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketIntelligentTieringConfiguration gets an existing BucketIntelligentTieringConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketIntelligentTieringConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketIntelligentTieringConfigurationState, opts ...pulumi.ResourceOption) (*BucketIntelligentTieringConfiguration, error) {
	var resource BucketIntelligentTieringConfiguration
	err := ctx.ReadResource("aws:s3/bucketIntelligentTieringConfiguration:BucketIntelligentTieringConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketIntelligentTieringConfiguration resources.
type bucketIntelligentTieringConfigurationState struct {
	// Name of the bucket this intelligent tiering configuration is associated with.
	Bucket *string `pulumi:"bucket"`
	// Bucket filter. The configuration only includes objects that meet the filter's criteria (documented below).
	Filter *BucketIntelligentTieringConfigurationFilter `pulumi:"filter"`
	// Unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.
	Name *string `pulumi:"name"`
	// Specifies the status of the configuration. Valid values: `Enabled`, `Disabled`.
	Status *string `pulumi:"status"`
	// S3 Intelligent-Tiering storage class tiers of the configuration (documented below).
	Tierings []BucketIntelligentTieringConfigurationTiering `pulumi:"tierings"`
}

type BucketIntelligentTieringConfigurationState struct {
	// Name of the bucket this intelligent tiering configuration is associated with.
	Bucket pulumix.Input[*string]
	// Bucket filter. The configuration only includes objects that meet the filter's criteria (documented below).
	Filter pulumix.Input[*BucketIntelligentTieringConfigurationFilterArgs]
	// Unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.
	Name pulumix.Input[*string]
	// Specifies the status of the configuration. Valid values: `Enabled`, `Disabled`.
	Status pulumix.Input[*string]
	// S3 Intelligent-Tiering storage class tiers of the configuration (documented below).
	Tierings pulumix.Input[[]*BucketIntelligentTieringConfigurationTieringArgs]
}

func (BucketIntelligentTieringConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketIntelligentTieringConfigurationState)(nil)).Elem()
}

type bucketIntelligentTieringConfigurationArgs struct {
	// Name of the bucket this intelligent tiering configuration is associated with.
	Bucket string `pulumi:"bucket"`
	// Bucket filter. The configuration only includes objects that meet the filter's criteria (documented below).
	Filter *BucketIntelligentTieringConfigurationFilter `pulumi:"filter"`
	// Unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.
	Name *string `pulumi:"name"`
	// Specifies the status of the configuration. Valid values: `Enabled`, `Disabled`.
	Status *string `pulumi:"status"`
	// S3 Intelligent-Tiering storage class tiers of the configuration (documented below).
	Tierings []BucketIntelligentTieringConfigurationTiering `pulumi:"tierings"`
}

// The set of arguments for constructing a BucketIntelligentTieringConfiguration resource.
type BucketIntelligentTieringConfigurationArgs struct {
	// Name of the bucket this intelligent tiering configuration is associated with.
	Bucket pulumix.Input[string]
	// Bucket filter. The configuration only includes objects that meet the filter's criteria (documented below).
	Filter pulumix.Input[*BucketIntelligentTieringConfigurationFilterArgs]
	// Unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.
	Name pulumix.Input[*string]
	// Specifies the status of the configuration. Valid values: `Enabled`, `Disabled`.
	Status pulumix.Input[*string]
	// S3 Intelligent-Tiering storage class tiers of the configuration (documented below).
	Tierings pulumix.Input[[]*BucketIntelligentTieringConfigurationTieringArgs]
}

func (BucketIntelligentTieringConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketIntelligentTieringConfigurationArgs)(nil)).Elem()
}

type BucketIntelligentTieringConfigurationOutput struct{ *pulumi.OutputState }

func (BucketIntelligentTieringConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIntelligentTieringConfiguration)(nil)).Elem()
}

func (o BucketIntelligentTieringConfigurationOutput) ToBucketIntelligentTieringConfigurationOutput() BucketIntelligentTieringConfigurationOutput {
	return o
}

func (o BucketIntelligentTieringConfigurationOutput) ToBucketIntelligentTieringConfigurationOutputWithContext(ctx context.Context) BucketIntelligentTieringConfigurationOutput {
	return o
}

func (o BucketIntelligentTieringConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[BucketIntelligentTieringConfiguration] {
	return pulumix.Output[BucketIntelligentTieringConfiguration]{
		OutputState: o.OutputState,
	}
}

// Name of the bucket this intelligent tiering configuration is associated with.
func (o BucketIntelligentTieringConfigurationOutput) Bucket() pulumix.Output[string] {
	value := pulumix.Apply[BucketIntelligentTieringConfiguration](o, func(v BucketIntelligentTieringConfiguration) pulumix.Output[string] { return v.Bucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Bucket filter. The configuration only includes objects that meet the filter's criteria (documented below).
func (o BucketIntelligentTieringConfigurationOutput) Filter() pulumix.GPtrOutput[BucketIntelligentTieringConfigurationFilter, BucketIntelligentTieringConfigurationFilterOutput] {
	value := pulumix.Apply[BucketIntelligentTieringConfiguration](o, func(v BucketIntelligentTieringConfiguration) pulumix.GPtrOutput[BucketIntelligentTieringConfigurationFilter, BucketIntelligentTieringConfigurationFilterOutput] {
		return v.Filter
	})
	unwrapped := pulumix.Flatten[*BucketIntelligentTieringConfigurationFilter, pulumix.GPtrOutput[BucketIntelligentTieringConfigurationFilter, BucketIntelligentTieringConfigurationFilterOutput]](value)
	return pulumix.GPtrOutput[BucketIntelligentTieringConfigurationFilter, BucketIntelligentTieringConfigurationFilterOutput]{OutputState: unwrapped.OutputState}
}

// Unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.
func (o BucketIntelligentTieringConfigurationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[BucketIntelligentTieringConfiguration](o, func(v BucketIntelligentTieringConfiguration) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the status of the configuration. Valid values: `Enabled`, `Disabled`.
func (o BucketIntelligentTieringConfigurationOutput) Status() pulumix.Output[*string] {
	value := pulumix.Apply[BucketIntelligentTieringConfiguration](o, func(v BucketIntelligentTieringConfiguration) pulumix.Output[*string] { return v.Status })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// S3 Intelligent-Tiering storage class tiers of the configuration (documented below).
func (o BucketIntelligentTieringConfigurationOutput) Tierings() pulumix.GArrayOutput[BucketIntelligentTieringConfigurationTiering, BucketIntelligentTieringConfigurationTieringOutput] {
	value := pulumix.Apply[BucketIntelligentTieringConfiguration](o, func(v BucketIntelligentTieringConfiguration) pulumix.GArrayOutput[BucketIntelligentTieringConfigurationTiering, BucketIntelligentTieringConfigurationTieringOutput] {
		return v.Tierings
	})
	unwrapped := pulumix.Flatten[[]BucketIntelligentTieringConfigurationTiering, pulumix.GArrayOutput[BucketIntelligentTieringConfigurationTiering, BucketIntelligentTieringConfigurationTieringOutput]](value)
	return pulumix.GArrayOutput[BucketIntelligentTieringConfigurationTiering, BucketIntelligentTieringConfigurationTieringOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(BucketIntelligentTieringConfigurationOutput{})
}
