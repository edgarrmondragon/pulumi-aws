// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `ec2.getVpcIpamPoolCidrs` provides details about an IPAM pool.
//
// This resource can prove useful when an ipam pool was shared to your account and you want to know all (or a filtered list) of the CIDRs that are provisioned into the pool.
func GetVpcIpamPoolCidrs(ctx *pulumi.Context, args *GetVpcIpamPoolCidrsArgs, opts ...pulumi.InvokeOption) (*GetVpcIpamPoolCidrsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpcIpamPoolCidrsResult
	err := ctx.Invoke("aws:ec2/getVpcIpamPoolCidrs:getVpcIpamPoolCidrs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcIpamPoolCidrs.
type GetVpcIpamPoolCidrsArgs struct {
	// Custom filter block as described below.
	Filters []GetVpcIpamPoolCidrsFilter `pulumi:"filters"`
	// ID of the IPAM pool you would like the list of provisioned CIDRs.
	IpamPoolId string `pulumi:"ipamPoolId"`
}

// A collection of values returned by getVpcIpamPoolCidrs.
type GetVpcIpamPoolCidrsResult struct {
	Filters []GetVpcIpamPoolCidrsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The CIDRs provisioned into the IPAM pool, described below.
	IpamPoolCidrs []GetVpcIpamPoolCidrsIpamPoolCidr `pulumi:"ipamPoolCidrs"`
	IpamPoolId    string                            `pulumi:"ipamPoolId"`
}

func GetVpcIpamPoolCidrsOutput(ctx *pulumi.Context, args GetVpcIpamPoolCidrsOutputArgs, opts ...pulumi.InvokeOption) GetVpcIpamPoolCidrsResultOutput {
	outputResult := pulumix.ApplyErr[*GetVpcIpamPoolCidrsArgs](args.ToOutput(), func(plainArgs *GetVpcIpamPoolCidrsArgs) (*GetVpcIpamPoolCidrsResult, error) {
		return GetVpcIpamPoolCidrs(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetVpcIpamPoolCidrsResultOutput, *GetVpcIpamPoolCidrsResult](outputResult)
}

// A collection of arguments for invoking getVpcIpamPoolCidrs.
type GetVpcIpamPoolCidrsOutputArgs struct {
	// Custom filter block as described below.
	Filters pulumix.Input[[]*GetVpcIpamPoolCidrsFilterArgs] `pulumi:"filters"`
	// ID of the IPAM pool you would like the list of provisioned CIDRs.
	IpamPoolId pulumix.Input[string] `pulumi:"ipamPoolId"`
}

func (args GetVpcIpamPoolCidrsOutputArgs) ToOutput() pulumix.Output[*GetVpcIpamPoolCidrsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.IpamPoolId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetVpcIpamPoolCidrsArgs {
		return &GetVpcIpamPoolCidrsArgs{
			Filters:    resolvedArgs[0].([]GetVpcIpamPoolCidrsFilter),
			IpamPoolId: resolvedArgs[1].(string),
		}
	})
}

type GetVpcIpamPoolCidrsResultOutput struct{ *pulumi.OutputState }

func (GetVpcIpamPoolCidrsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcIpamPoolCidrsResult)(nil)).Elem()
}

func (o GetVpcIpamPoolCidrsResultOutput) ToOutput(context.Context) pulumix.Output[*GetVpcIpamPoolCidrsResult] {
	return pulumix.Output[*GetVpcIpamPoolCidrsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetVpcIpamPoolCidrsResultOutput) Filters() pulumix.GArrayOutput[GetVpcIpamPoolCidrsFilter, GetVpcIpamPoolCidrsFilterOutput] {
	value := pulumix.Apply[*GetVpcIpamPoolCidrsResult](o, func(v *GetVpcIpamPoolCidrsResult) []GetVpcIpamPoolCidrsFilter { return v.Filters })
	return pulumix.GArrayOutput[GetVpcIpamPoolCidrsFilter, GetVpcIpamPoolCidrsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetVpcIpamPoolCidrsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetVpcIpamPoolCidrsResult](o, func(v *GetVpcIpamPoolCidrsResult) string { return v.Id })
}

func (o GetVpcIpamPoolCidrsResultOutput) IpamPoolCidrs() pulumix.GArrayOutput[GetVpcIpamPoolCidrsIpamPoolCidr, GetVpcIpamPoolCidrsIpamPoolCidrOutput] {
	value := pulumix.Apply[*GetVpcIpamPoolCidrsResult](o, func(v *GetVpcIpamPoolCidrsResult) []GetVpcIpamPoolCidrsIpamPoolCidr { return v.IpamPoolCidrs })
	return pulumix.GArrayOutput[GetVpcIpamPoolCidrsIpamPoolCidr, GetVpcIpamPoolCidrsIpamPoolCidrOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetVpcIpamPoolCidrsResultOutput) IpamPoolId() pulumix.Output[string] {
	return pulumix.Apply[*GetVpcIpamPoolCidrsResult](o, func(v *GetVpcIpamPoolCidrsResult) string { return v.IpamPoolId })
}
