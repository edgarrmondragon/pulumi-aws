// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emrcontainers

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EMR Containers (EMR on EKS) Job Template.
type JobTemplate struct {
	pulumi.CustomResourceState

	// ARN of the job template.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The job template data which holds values of StartJobRun API request.
	JobTemplateData pulumix.GPtrOutput[JobTemplateJobTemplateData, JobTemplateJobTemplateDataOutput] `pulumi:"jobTemplateData"`
	// The KMS key ARN used to encrypt the job template.
	KmsKeyArn pulumix.Output[*string] `pulumi:"kmsKeyArn"`
	// The specified name of the job template.
	Name pulumix.Output[string] `pulumi:"name"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewJobTemplate registers a new resource with the given unique name, arguments, and options.
func NewJobTemplate(ctx *pulumi.Context,
	name string, args *JobTemplateArgs, opts ...pulumi.ResourceOption) (*JobTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobTemplateData == nil {
		return nil, errors.New("invalid value for required argument 'JobTemplateData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JobTemplate
	err := ctx.RegisterResource("aws:emrcontainers/jobTemplate:JobTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobTemplate gets an existing JobTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobTemplateState, opts ...pulumi.ResourceOption) (*JobTemplate, error) {
	var resource JobTemplate
	err := ctx.ReadResource("aws:emrcontainers/jobTemplate:JobTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobTemplate resources.
type jobTemplateState struct {
	// ARN of the job template.
	Arn *string `pulumi:"arn"`
	// The job template data which holds values of StartJobRun API request.
	JobTemplateData *JobTemplateJobTemplateData `pulumi:"jobTemplateData"`
	// The KMS key ARN used to encrypt the job template.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The specified name of the job template.
	Name *string `pulumi:"name"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type JobTemplateState struct {
	// ARN of the job template.
	Arn pulumix.Input[*string]
	// The job template data which holds values of StartJobRun API request.
	JobTemplateData pulumix.Input[*JobTemplateJobTemplateDataArgs]
	// The KMS key ARN used to encrypt the job template.
	KmsKeyArn pulumix.Input[*string]
	// The specified name of the job template.
	Name pulumix.Input[*string]
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (JobTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobTemplateState)(nil)).Elem()
}

type jobTemplateArgs struct {
	// The job template data which holds values of StartJobRun API request.
	JobTemplateData JobTemplateJobTemplateData `pulumi:"jobTemplateData"`
	// The KMS key ARN used to encrypt the job template.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The specified name of the job template.
	Name *string `pulumi:"name"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a JobTemplate resource.
type JobTemplateArgs struct {
	// The job template data which holds values of StartJobRun API request.
	JobTemplateData pulumix.Input[*JobTemplateJobTemplateDataArgs]
	// The KMS key ARN used to encrypt the job template.
	KmsKeyArn pulumix.Input[*string]
	// The specified name of the job template.
	Name pulumix.Input[*string]
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (JobTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobTemplateArgs)(nil)).Elem()
}

type JobTemplateOutput struct{ *pulumi.OutputState }

func (JobTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplate)(nil)).Elem()
}

func (o JobTemplateOutput) ToJobTemplateOutput() JobTemplateOutput {
	return o
}

func (o JobTemplateOutput) ToJobTemplateOutputWithContext(ctx context.Context) JobTemplateOutput {
	return o
}

func (o JobTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplate] {
	return pulumix.Output[JobTemplate]{
		OutputState: o.OutputState,
	}
}

// ARN of the job template.
func (o JobTemplateOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[JobTemplate](o, func(v JobTemplate) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The job template data which holds values of StartJobRun API request.
func (o JobTemplateOutput) JobTemplateData() pulumix.GPtrOutput[JobTemplateJobTemplateData, JobTemplateJobTemplateDataOutput] {
	value := pulumix.Apply[JobTemplate](o, func(v JobTemplate) pulumix.GPtrOutput[JobTemplateJobTemplateData, JobTemplateJobTemplateDataOutput] {
		return v.JobTemplateData
	})
	unwrapped := pulumix.Flatten[*JobTemplateJobTemplateData, pulumix.GPtrOutput[JobTemplateJobTemplateData, JobTemplateJobTemplateDataOutput]](value)
	return pulumix.GPtrOutput[JobTemplateJobTemplateData, JobTemplateJobTemplateDataOutput]{OutputState: unwrapped.OutputState}
}

// The KMS key ARN used to encrypt the job template.
func (o JobTemplateOutput) KmsKeyArn() pulumix.Output[*string] {
	value := pulumix.Apply[JobTemplate](o, func(v JobTemplate) pulumix.Output[*string] { return v.KmsKeyArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The specified name of the job template.
func (o JobTemplateOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[JobTemplate](o, func(v JobTemplate) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o JobTemplateOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[JobTemplate](o, func(v JobTemplate) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o JobTemplateOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[JobTemplate](o, func(v JobTemplate) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(JobTemplateOutput{})
}
