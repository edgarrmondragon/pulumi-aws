// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codedeploy

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CodeDeploy Deployment Group for a CodeDeploy Application
//
// > **NOTE on blue/green deployments:** When using `greenFleetProvisioningOption` with the `COPY_AUTO_SCALING_GROUP` action, CodeDeploy will create a new ASG with a different name. This ASG is _not_ managed by this provider and will conflict with existing configuration and state. You may want to use a different approach to managing deployments that involve multiple ASG, such as `DISCOVER_EXISTING` with separate blue and green ASG.
type DeploymentGroup struct {
	pulumi.CustomResourceState

	// Configuration block of alarms associated with the deployment group (documented below).
	AlarmConfiguration pulumix.GPtrOutput[DeploymentGroupAlarmConfiguration, DeploymentGroupAlarmConfigurationOutput] `pulumi:"alarmConfiguration"`
	// The name of the application.
	AppName pulumix.Output[string] `pulumi:"appName"`
	// The ARN of the CodeDeploy deployment group.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
	AutoRollbackConfiguration pulumix.GPtrOutput[DeploymentGroupAutoRollbackConfiguration, DeploymentGroupAutoRollbackConfigurationOutput] `pulumi:"autoRollbackConfiguration"`
	// Autoscaling groups associated with the deployment group.
	AutoscalingGroups pulumix.ArrayOutput[string] `pulumi:"autoscalingGroups"`
	// Configuration block of the blue/green deployment options for a deployment group (documented below).
	BlueGreenDeploymentConfig pulumix.GPtrOutput[DeploymentGroupBlueGreenDeploymentConfig, DeploymentGroupBlueGreenDeploymentConfigOutput] `pulumi:"blueGreenDeploymentConfig"`
	// The destination platform type for the deployment.
	ComputePlatform pulumix.Output[string] `pulumi:"computePlatform"`
	// The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
	DeploymentConfigName pulumix.Output[*string] `pulumi:"deploymentConfigName"`
	// The ID of the CodeDeploy deployment group.
	DeploymentGroupId pulumix.Output[string] `pulumi:"deploymentGroupId"`
	// The name of the deployment group.
	DeploymentGroupName pulumix.Output[string] `pulumi:"deploymentGroupName"`
	// Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
	DeploymentStyle pulumix.GPtrOutput[DeploymentGroupDeploymentStyle, DeploymentGroupDeploymentStyleOutput] `pulumi:"deploymentStyle"`
	// Tag filters associated with the deployment group. See the AWS docs for details.
	Ec2TagFilters pulumix.GArrayOutput[DeploymentGroupEc2TagFilter, DeploymentGroupEc2TagFilterOutput] `pulumi:"ec2TagFilters"`
	// Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
	Ec2TagSets pulumix.GArrayOutput[DeploymentGroupEc2TagSet, DeploymentGroupEc2TagSetOutput] `pulumi:"ec2TagSets"`
	// Configuration block(s) of the ECS services for a deployment group (documented below).
	EcsService pulumix.GPtrOutput[DeploymentGroupEcsService, DeploymentGroupEcsServiceOutput] `pulumi:"ecsService"`
	// Single configuration block of the load balancer to use in a blue/green deployment (documented below).
	LoadBalancerInfo pulumix.GPtrOutput[DeploymentGroupLoadBalancerInfo, DeploymentGroupLoadBalancerInfoOutput] `pulumi:"loadBalancerInfo"`
	// On premise tag filters associated with the group. See the AWS docs for details.
	OnPremisesInstanceTagFilters pulumix.GArrayOutput[DeploymentGroupOnPremisesInstanceTagFilter, DeploymentGroupOnPremisesInstanceTagFilterOutput] `pulumi:"onPremisesInstanceTagFilters"`
	// The service role ARN that allows deployments.
	ServiceRoleArn pulumix.Output[string] `pulumi:"serviceRoleArn"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Configuration block(s) of the triggers for the deployment group (documented below).
	TriggerConfigurations pulumix.GArrayOutput[DeploymentGroupTriggerConfiguration, DeploymentGroupTriggerConfigurationOutput] `pulumi:"triggerConfigurations"`
}

// NewDeploymentGroup registers a new resource with the given unique name, arguments, and options.
func NewDeploymentGroup(ctx *pulumi.Context,
	name string, args *DeploymentGroupArgs, opts ...pulumi.ResourceOption) (*DeploymentGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppName == nil {
		return nil, errors.New("invalid value for required argument 'AppName'")
	}
	if args.DeploymentGroupName == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentGroupName'")
	}
	if args.ServiceRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeploymentGroup
	err := ctx.RegisterResource("aws:codedeploy/deploymentGroup:DeploymentGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeploymentGroup gets an existing DeploymentGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeploymentGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentGroupState, opts ...pulumi.ResourceOption) (*DeploymentGroup, error) {
	var resource DeploymentGroup
	err := ctx.ReadResource("aws:codedeploy/deploymentGroup:DeploymentGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeploymentGroup resources.
type deploymentGroupState struct {
	// Configuration block of alarms associated with the deployment group (documented below).
	AlarmConfiguration *DeploymentGroupAlarmConfiguration `pulumi:"alarmConfiguration"`
	// The name of the application.
	AppName *string `pulumi:"appName"`
	// The ARN of the CodeDeploy deployment group.
	Arn *string `pulumi:"arn"`
	// Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
	AutoRollbackConfiguration *DeploymentGroupAutoRollbackConfiguration `pulumi:"autoRollbackConfiguration"`
	// Autoscaling groups associated with the deployment group.
	AutoscalingGroups []string `pulumi:"autoscalingGroups"`
	// Configuration block of the blue/green deployment options for a deployment group (documented below).
	BlueGreenDeploymentConfig *DeploymentGroupBlueGreenDeploymentConfig `pulumi:"blueGreenDeploymentConfig"`
	// The destination platform type for the deployment.
	ComputePlatform *string `pulumi:"computePlatform"`
	// The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
	DeploymentConfigName *string `pulumi:"deploymentConfigName"`
	// The ID of the CodeDeploy deployment group.
	DeploymentGroupId *string `pulumi:"deploymentGroupId"`
	// The name of the deployment group.
	DeploymentGroupName *string `pulumi:"deploymentGroupName"`
	// Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
	DeploymentStyle *DeploymentGroupDeploymentStyle `pulumi:"deploymentStyle"`
	// Tag filters associated with the deployment group. See the AWS docs for details.
	Ec2TagFilters []DeploymentGroupEc2TagFilter `pulumi:"ec2TagFilters"`
	// Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
	Ec2TagSets []DeploymentGroupEc2TagSet `pulumi:"ec2TagSets"`
	// Configuration block(s) of the ECS services for a deployment group (documented below).
	EcsService *DeploymentGroupEcsService `pulumi:"ecsService"`
	// Single configuration block of the load balancer to use in a blue/green deployment (documented below).
	LoadBalancerInfo *DeploymentGroupLoadBalancerInfo `pulumi:"loadBalancerInfo"`
	// On premise tag filters associated with the group. See the AWS docs for details.
	OnPremisesInstanceTagFilters []DeploymentGroupOnPremisesInstanceTagFilter `pulumi:"onPremisesInstanceTagFilters"`
	// The service role ARN that allows deployments.
	ServiceRoleArn *string `pulumi:"serviceRoleArn"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Configuration block(s) of the triggers for the deployment group (documented below).
	TriggerConfigurations []DeploymentGroupTriggerConfiguration `pulumi:"triggerConfigurations"`
}

type DeploymentGroupState struct {
	// Configuration block of alarms associated with the deployment group (documented below).
	AlarmConfiguration pulumix.Input[*DeploymentGroupAlarmConfigurationArgs]
	// The name of the application.
	AppName pulumix.Input[*string]
	// The ARN of the CodeDeploy deployment group.
	Arn pulumix.Input[*string]
	// Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
	AutoRollbackConfiguration pulumix.Input[*DeploymentGroupAutoRollbackConfigurationArgs]
	// Autoscaling groups associated with the deployment group.
	AutoscalingGroups pulumix.Input[[]string]
	// Configuration block of the blue/green deployment options for a deployment group (documented below).
	BlueGreenDeploymentConfig pulumix.Input[*DeploymentGroupBlueGreenDeploymentConfigArgs]
	// The destination platform type for the deployment.
	ComputePlatform pulumix.Input[*string]
	// The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
	DeploymentConfigName pulumix.Input[*string]
	// The ID of the CodeDeploy deployment group.
	DeploymentGroupId pulumix.Input[*string]
	// The name of the deployment group.
	DeploymentGroupName pulumix.Input[*string]
	// Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
	DeploymentStyle pulumix.Input[*DeploymentGroupDeploymentStyleArgs]
	// Tag filters associated with the deployment group. See the AWS docs for details.
	Ec2TagFilters pulumix.Input[[]*DeploymentGroupEc2TagFilterArgs]
	// Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
	Ec2TagSets pulumix.Input[[]*DeploymentGroupEc2TagSetArgs]
	// Configuration block(s) of the ECS services for a deployment group (documented below).
	EcsService pulumix.Input[*DeploymentGroupEcsServiceArgs]
	// Single configuration block of the load balancer to use in a blue/green deployment (documented below).
	LoadBalancerInfo pulumix.Input[*DeploymentGroupLoadBalancerInfoArgs]
	// On premise tag filters associated with the group. See the AWS docs for details.
	OnPremisesInstanceTagFilters pulumix.Input[[]*DeploymentGroupOnPremisesInstanceTagFilterArgs]
	// The service role ARN that allows deployments.
	ServiceRoleArn pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Configuration block(s) of the triggers for the deployment group (documented below).
	TriggerConfigurations pulumix.Input[[]*DeploymentGroupTriggerConfigurationArgs]
}

func (DeploymentGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentGroupState)(nil)).Elem()
}

type deploymentGroupArgs struct {
	// Configuration block of alarms associated with the deployment group (documented below).
	AlarmConfiguration *DeploymentGroupAlarmConfiguration `pulumi:"alarmConfiguration"`
	// The name of the application.
	AppName string `pulumi:"appName"`
	// Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
	AutoRollbackConfiguration *DeploymentGroupAutoRollbackConfiguration `pulumi:"autoRollbackConfiguration"`
	// Autoscaling groups associated with the deployment group.
	AutoscalingGroups []string `pulumi:"autoscalingGroups"`
	// Configuration block of the blue/green deployment options for a deployment group (documented below).
	BlueGreenDeploymentConfig *DeploymentGroupBlueGreenDeploymentConfig `pulumi:"blueGreenDeploymentConfig"`
	// The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
	DeploymentConfigName *string `pulumi:"deploymentConfigName"`
	// The name of the deployment group.
	DeploymentGroupName string `pulumi:"deploymentGroupName"`
	// Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
	DeploymentStyle *DeploymentGroupDeploymentStyle `pulumi:"deploymentStyle"`
	// Tag filters associated with the deployment group. See the AWS docs for details.
	Ec2TagFilters []DeploymentGroupEc2TagFilter `pulumi:"ec2TagFilters"`
	// Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
	Ec2TagSets []DeploymentGroupEc2TagSet `pulumi:"ec2TagSets"`
	// Configuration block(s) of the ECS services for a deployment group (documented below).
	EcsService *DeploymentGroupEcsService `pulumi:"ecsService"`
	// Single configuration block of the load balancer to use in a blue/green deployment (documented below).
	LoadBalancerInfo *DeploymentGroupLoadBalancerInfo `pulumi:"loadBalancerInfo"`
	// On premise tag filters associated with the group. See the AWS docs for details.
	OnPremisesInstanceTagFilters []DeploymentGroupOnPremisesInstanceTagFilter `pulumi:"onPremisesInstanceTagFilters"`
	// The service role ARN that allows deployments.
	ServiceRoleArn string `pulumi:"serviceRoleArn"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Configuration block(s) of the triggers for the deployment group (documented below).
	TriggerConfigurations []DeploymentGroupTriggerConfiguration `pulumi:"triggerConfigurations"`
}

// The set of arguments for constructing a DeploymentGroup resource.
type DeploymentGroupArgs struct {
	// Configuration block of alarms associated with the deployment group (documented below).
	AlarmConfiguration pulumix.Input[*DeploymentGroupAlarmConfigurationArgs]
	// The name of the application.
	AppName pulumix.Input[string]
	// Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
	AutoRollbackConfiguration pulumix.Input[*DeploymentGroupAutoRollbackConfigurationArgs]
	// Autoscaling groups associated with the deployment group.
	AutoscalingGroups pulumix.Input[[]string]
	// Configuration block of the blue/green deployment options for a deployment group (documented below).
	BlueGreenDeploymentConfig pulumix.Input[*DeploymentGroupBlueGreenDeploymentConfigArgs]
	// The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
	DeploymentConfigName pulumix.Input[*string]
	// The name of the deployment group.
	DeploymentGroupName pulumix.Input[string]
	// Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
	DeploymentStyle pulumix.Input[*DeploymentGroupDeploymentStyleArgs]
	// Tag filters associated with the deployment group. See the AWS docs for details.
	Ec2TagFilters pulumix.Input[[]*DeploymentGroupEc2TagFilterArgs]
	// Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
	Ec2TagSets pulumix.Input[[]*DeploymentGroupEc2TagSetArgs]
	// Configuration block(s) of the ECS services for a deployment group (documented below).
	EcsService pulumix.Input[*DeploymentGroupEcsServiceArgs]
	// Single configuration block of the load balancer to use in a blue/green deployment (documented below).
	LoadBalancerInfo pulumix.Input[*DeploymentGroupLoadBalancerInfoArgs]
	// On premise tag filters associated with the group. See the AWS docs for details.
	OnPremisesInstanceTagFilters pulumix.Input[[]*DeploymentGroupOnPremisesInstanceTagFilterArgs]
	// The service role ARN that allows deployments.
	ServiceRoleArn pulumix.Input[string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Configuration block(s) of the triggers for the deployment group (documented below).
	TriggerConfigurations pulumix.Input[[]*DeploymentGroupTriggerConfigurationArgs]
}

func (DeploymentGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentGroupArgs)(nil)).Elem()
}

type DeploymentGroupOutput struct{ *pulumi.OutputState }

func (DeploymentGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroup)(nil)).Elem()
}

func (o DeploymentGroupOutput) ToDeploymentGroupOutput() DeploymentGroupOutput {
	return o
}

func (o DeploymentGroupOutput) ToDeploymentGroupOutputWithContext(ctx context.Context) DeploymentGroupOutput {
	return o
}

func (o DeploymentGroupOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentGroup] {
	return pulumix.Output[DeploymentGroup]{
		OutputState: o.OutputState,
	}
}

// Configuration block of alarms associated with the deployment group (documented below).
func (o DeploymentGroupOutput) AlarmConfiguration() pulumix.GPtrOutput[DeploymentGroupAlarmConfiguration, DeploymentGroupAlarmConfigurationOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GPtrOutput[DeploymentGroupAlarmConfiguration, DeploymentGroupAlarmConfigurationOutput] {
		return v.AlarmConfiguration
	})
	unwrapped := pulumix.Flatten[*DeploymentGroupAlarmConfiguration, pulumix.GPtrOutput[DeploymentGroupAlarmConfiguration, DeploymentGroupAlarmConfigurationOutput]](value)
	return pulumix.GPtrOutput[DeploymentGroupAlarmConfiguration, DeploymentGroupAlarmConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The name of the application.
func (o DeploymentGroupOutput) AppName() pulumix.Output[string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.Output[string] { return v.AppName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the CodeDeploy deployment group.
func (o DeploymentGroupOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
func (o DeploymentGroupOutput) AutoRollbackConfiguration() pulumix.GPtrOutput[DeploymentGroupAutoRollbackConfiguration, DeploymentGroupAutoRollbackConfigurationOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GPtrOutput[DeploymentGroupAutoRollbackConfiguration, DeploymentGroupAutoRollbackConfigurationOutput] {
		return v.AutoRollbackConfiguration
	})
	unwrapped := pulumix.Flatten[*DeploymentGroupAutoRollbackConfiguration, pulumix.GPtrOutput[DeploymentGroupAutoRollbackConfiguration, DeploymentGroupAutoRollbackConfigurationOutput]](value)
	return pulumix.GPtrOutput[DeploymentGroupAutoRollbackConfiguration, DeploymentGroupAutoRollbackConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Autoscaling groups associated with the deployment group.
func (o DeploymentGroupOutput) AutoscalingGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.ArrayOutput[string] { return v.AutoscalingGroups })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block of the blue/green deployment options for a deployment group (documented below).
func (o DeploymentGroupOutput) BlueGreenDeploymentConfig() pulumix.GPtrOutput[DeploymentGroupBlueGreenDeploymentConfig, DeploymentGroupBlueGreenDeploymentConfigOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GPtrOutput[DeploymentGroupBlueGreenDeploymentConfig, DeploymentGroupBlueGreenDeploymentConfigOutput] {
		return v.BlueGreenDeploymentConfig
	})
	unwrapped := pulumix.Flatten[*DeploymentGroupBlueGreenDeploymentConfig, pulumix.GPtrOutput[DeploymentGroupBlueGreenDeploymentConfig, DeploymentGroupBlueGreenDeploymentConfigOutput]](value)
	return pulumix.GPtrOutput[DeploymentGroupBlueGreenDeploymentConfig, DeploymentGroupBlueGreenDeploymentConfigOutput]{OutputState: unwrapped.OutputState}
}

// The destination platform type for the deployment.
func (o DeploymentGroupOutput) ComputePlatform() pulumix.Output[string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.Output[string] { return v.ComputePlatform })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
func (o DeploymentGroupOutput) DeploymentConfigName() pulumix.Output[*string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.Output[*string] { return v.DeploymentConfigName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ID of the CodeDeploy deployment group.
func (o DeploymentGroupOutput) DeploymentGroupId() pulumix.Output[string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.Output[string] { return v.DeploymentGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the deployment group.
func (o DeploymentGroupOutput) DeploymentGroupName() pulumix.Output[string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.Output[string] { return v.DeploymentGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
func (o DeploymentGroupOutput) DeploymentStyle() pulumix.GPtrOutput[DeploymentGroupDeploymentStyle, DeploymentGroupDeploymentStyleOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GPtrOutput[DeploymentGroupDeploymentStyle, DeploymentGroupDeploymentStyleOutput] {
		return v.DeploymentStyle
	})
	unwrapped := pulumix.Flatten[*DeploymentGroupDeploymentStyle, pulumix.GPtrOutput[DeploymentGroupDeploymentStyle, DeploymentGroupDeploymentStyleOutput]](value)
	return pulumix.GPtrOutput[DeploymentGroupDeploymentStyle, DeploymentGroupDeploymentStyleOutput]{OutputState: unwrapped.OutputState}
}

// Tag filters associated with the deployment group. See the AWS docs for details.
func (o DeploymentGroupOutput) Ec2TagFilters() pulumix.GArrayOutput[DeploymentGroupEc2TagFilter, DeploymentGroupEc2TagFilterOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GArrayOutput[DeploymentGroupEc2TagFilter, DeploymentGroupEc2TagFilterOutput] {
		return v.Ec2TagFilters
	})
	unwrapped := pulumix.Flatten[[]DeploymentGroupEc2TagFilter, pulumix.GArrayOutput[DeploymentGroupEc2TagFilter, DeploymentGroupEc2TagFilterOutput]](value)
	return pulumix.GArrayOutput[DeploymentGroupEc2TagFilter, DeploymentGroupEc2TagFilterOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
func (o DeploymentGroupOutput) Ec2TagSets() pulumix.GArrayOutput[DeploymentGroupEc2TagSet, DeploymentGroupEc2TagSetOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GArrayOutput[DeploymentGroupEc2TagSet, DeploymentGroupEc2TagSetOutput] {
		return v.Ec2TagSets
	})
	unwrapped := pulumix.Flatten[[]DeploymentGroupEc2TagSet, pulumix.GArrayOutput[DeploymentGroupEc2TagSet, DeploymentGroupEc2TagSetOutput]](value)
	return pulumix.GArrayOutput[DeploymentGroupEc2TagSet, DeploymentGroupEc2TagSetOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block(s) of the ECS services for a deployment group (documented below).
func (o DeploymentGroupOutput) EcsService() pulumix.GPtrOutput[DeploymentGroupEcsService, DeploymentGroupEcsServiceOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GPtrOutput[DeploymentGroupEcsService, DeploymentGroupEcsServiceOutput] {
		return v.EcsService
	})
	unwrapped := pulumix.Flatten[*DeploymentGroupEcsService, pulumix.GPtrOutput[DeploymentGroupEcsService, DeploymentGroupEcsServiceOutput]](value)
	return pulumix.GPtrOutput[DeploymentGroupEcsService, DeploymentGroupEcsServiceOutput]{OutputState: unwrapped.OutputState}
}

// Single configuration block of the load balancer to use in a blue/green deployment (documented below).
func (o DeploymentGroupOutput) LoadBalancerInfo() pulumix.GPtrOutput[DeploymentGroupLoadBalancerInfo, DeploymentGroupLoadBalancerInfoOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GPtrOutput[DeploymentGroupLoadBalancerInfo, DeploymentGroupLoadBalancerInfoOutput] {
		return v.LoadBalancerInfo
	})
	unwrapped := pulumix.Flatten[*DeploymentGroupLoadBalancerInfo, pulumix.GPtrOutput[DeploymentGroupLoadBalancerInfo, DeploymentGroupLoadBalancerInfoOutput]](value)
	return pulumix.GPtrOutput[DeploymentGroupLoadBalancerInfo, DeploymentGroupLoadBalancerInfoOutput]{OutputState: unwrapped.OutputState}
}

// On premise tag filters associated with the group. See the AWS docs for details.
func (o DeploymentGroupOutput) OnPremisesInstanceTagFilters() pulumix.GArrayOutput[DeploymentGroupOnPremisesInstanceTagFilter, DeploymentGroupOnPremisesInstanceTagFilterOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GArrayOutput[DeploymentGroupOnPremisesInstanceTagFilter, DeploymentGroupOnPremisesInstanceTagFilterOutput] {
		return v.OnPremisesInstanceTagFilters
	})
	unwrapped := pulumix.Flatten[[]DeploymentGroupOnPremisesInstanceTagFilter, pulumix.GArrayOutput[DeploymentGroupOnPremisesInstanceTagFilter, DeploymentGroupOnPremisesInstanceTagFilterOutput]](value)
	return pulumix.GArrayOutput[DeploymentGroupOnPremisesInstanceTagFilter, DeploymentGroupOnPremisesInstanceTagFilterOutput]{OutputState: unwrapped.OutputState}
}

// The service role ARN that allows deployments.
func (o DeploymentGroupOutput) ServiceRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.Output[string] { return v.ServiceRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DeploymentGroupOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DeploymentGroupOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block(s) of the triggers for the deployment group (documented below).
func (o DeploymentGroupOutput) TriggerConfigurations() pulumix.GArrayOutput[DeploymentGroupTriggerConfiguration, DeploymentGroupTriggerConfigurationOutput] {
	value := pulumix.Apply[DeploymentGroup](o, func(v DeploymentGroup) pulumix.GArrayOutput[DeploymentGroupTriggerConfiguration, DeploymentGroupTriggerConfigurationOutput] {
		return v.TriggerConfigurations
	})
	unwrapped := pulumix.Flatten[[]DeploymentGroupTriggerConfiguration, pulumix.GArrayOutput[DeploymentGroupTriggerConfiguration, DeploymentGroupTriggerConfigurationOutput]](value)
	return pulumix.GArrayOutput[DeploymentGroupTriggerConfiguration, DeploymentGroupTriggerConfigurationOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DeploymentGroupOutput{})
}
