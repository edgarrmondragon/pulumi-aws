// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS WorkSpaces Connection Alias.
type ConnectionAlias struct {
	pulumi.CustomResourceState

	// The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
	ConnectionString pulumix.Output[string] `pulumi:"connectionString"`
	// The identifier of the Amazon Web Services account that owns the connection alias.
	OwnerAccountId pulumix.Output[string] `pulumi:"ownerAccountId"`
	// The current state of the connection alias.
	State pulumix.Output[string] `pulumi:"state"`
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumix.MapOutput[string]                                                  `pulumi:"tagsAll"`
	Timeouts pulumix.GPtrOutput[ConnectionAliasTimeouts, ConnectionAliasTimeoutsOutput] `pulumi:"timeouts"`
}

// NewConnectionAlias registers a new resource with the given unique name, arguments, and options.
func NewConnectionAlias(ctx *pulumi.Context,
	name string, args *ConnectionAliasArgs, opts ...pulumi.ResourceOption) (*ConnectionAlias, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionString == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionString'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConnectionAlias
	err := ctx.RegisterResource("aws:workspaces/connectionAlias:ConnectionAlias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectionAlias gets an existing ConnectionAlias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionAlias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionAliasState, opts ...pulumi.ResourceOption) (*ConnectionAlias, error) {
	var resource ConnectionAlias
	err := ctx.ReadResource("aws:workspaces/connectionAlias:ConnectionAlias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectionAlias resources.
type connectionAliasState struct {
	// The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
	ConnectionString *string `pulumi:"connectionString"`
	// The identifier of the Amazon Web Services account that owns the connection alias.
	OwnerAccountId *string `pulumi:"ownerAccountId"`
	// The current state of the connection alias.
	State *string `pulumi:"state"`
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  map[string]string        `pulumi:"tagsAll"`
	Timeouts *ConnectionAliasTimeouts `pulumi:"timeouts"`
}

type ConnectionAliasState struct {
	// The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
	ConnectionString pulumix.Input[*string]
	// The identifier of the Amazon Web Services account that owns the connection alias.
	OwnerAccountId pulumix.Input[*string]
	// The current state of the connection alias.
	State pulumix.Input[*string]
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumix.Input[map[string]string]
	Timeouts pulumix.Input[*ConnectionAliasTimeoutsArgs]
}

func (ConnectionAliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionAliasState)(nil)).Elem()
}

type connectionAliasArgs struct {
	// The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
	ConnectionString string `pulumi:"connectionString"`
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string        `pulumi:"tags"`
	Timeouts *ConnectionAliasTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ConnectionAlias resource.
type ConnectionAliasArgs struct {
	// The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
	ConnectionString pulumix.Input[string]
	// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumix.Input[map[string]string]
	Timeouts pulumix.Input[*ConnectionAliasTimeoutsArgs]
}

func (ConnectionAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionAliasArgs)(nil)).Elem()
}

type ConnectionAliasOutput struct{ *pulumi.OutputState }

func (ConnectionAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAlias)(nil)).Elem()
}

func (o ConnectionAliasOutput) ToConnectionAliasOutput() ConnectionAliasOutput {
	return o
}

func (o ConnectionAliasOutput) ToConnectionAliasOutputWithContext(ctx context.Context) ConnectionAliasOutput {
	return o
}

func (o ConnectionAliasOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionAlias] {
	return pulumix.Output[ConnectionAlias]{
		OutputState: o.OutputState,
	}
}

// The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
func (o ConnectionAliasOutput) ConnectionString() pulumix.Output[string] {
	value := pulumix.Apply[ConnectionAlias](o, func(v ConnectionAlias) pulumix.Output[string] { return v.ConnectionString })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier of the Amazon Web Services account that owns the connection alias.
func (o ConnectionAliasOutput) OwnerAccountId() pulumix.Output[string] {
	value := pulumix.Apply[ConnectionAlias](o, func(v ConnectionAlias) pulumix.Output[string] { return v.OwnerAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The current state of the connection alias.
func (o ConnectionAliasOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[ConnectionAlias](o, func(v ConnectionAlias) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ConnectionAliasOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ConnectionAlias](o, func(v ConnectionAlias) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ConnectionAliasOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ConnectionAlias](o, func(v ConnectionAlias) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o ConnectionAliasOutput) Timeouts() pulumix.GPtrOutput[ConnectionAliasTimeouts, ConnectionAliasTimeoutsOutput] {
	value := pulumix.Apply[ConnectionAlias](o, func(v ConnectionAlias) pulumix.GPtrOutput[ConnectionAliasTimeouts, ConnectionAliasTimeoutsOutput] {
		return v.Timeouts
	})
	unwrapped := pulumix.Flatten[*ConnectionAliasTimeouts, pulumix.GPtrOutput[ConnectionAliasTimeouts, ConnectionAliasTimeoutsOutput]](value)
	return pulumix.GPtrOutput[ConnectionAliasTimeouts, ConnectionAliasTimeoutsOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ConnectionAliasOutput{})
}
