// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appautoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type PolicyStepScalingPolicyConfiguration struct {
	// Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
	AdjustmentType *string `pulumi:"adjustmentType"`
	// Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
	Cooldown *int `pulumi:"cooldown"`
	// Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
	MetricAggregationType *string `pulumi:"metricAggregationType"`
	// Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
	MinAdjustmentMagnitude *int `pulumi:"minAdjustmentMagnitude"`
	// Set of adjustments that manage scaling. These have the following structure:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/appautoscaling"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := appautoscaling.NewPolicy(ctx, "ecsPolicy", &appautoscaling.PolicyArgs{
	// 			StepScalingPolicyConfiguration: &appautoscaling.PolicyStepScalingPolicyConfigurationArgs{
	// 				StepAdjustments: appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustmentArray{
	// 					&appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustmentArgs{
	// 						MetricIntervalLowerBound: pulumi.String("1"),
	// 						MetricIntervalUpperBound: pulumi.String("2"),
	// 						ScalingAdjustment:        -1,
	// 					},
	// 					&appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustmentArgs{
	// 						MetricIntervalLowerBound: pulumi.String("2"),
	// 						MetricIntervalUpperBound: pulumi.String("3"),
	// 						ScalingAdjustment:        pulumi.Int(1),
	// 					},
	// 				},
	// 			},
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	StepAdjustments []PolicyStepScalingPolicyConfigurationStepAdjustment `pulumi:"stepAdjustments"`
}

type PolicyStepScalingPolicyConfigurationArgs struct {
	// Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
	AdjustmentType pulumix.Input[*string] `pulumi:"adjustmentType"`
	// Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
	Cooldown pulumix.Input[*int] `pulumi:"cooldown"`
	// Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
	MetricAggregationType pulumix.Input[*string] `pulumi:"metricAggregationType"`
	// Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
	MinAdjustmentMagnitude pulumix.Input[*int] `pulumi:"minAdjustmentMagnitude"`
	// Set of adjustments that manage scaling. These have the following structure:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/appautoscaling"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := appautoscaling.NewPolicy(ctx, "ecsPolicy", &appautoscaling.PolicyArgs{
	// 			StepScalingPolicyConfiguration: &appautoscaling.PolicyStepScalingPolicyConfigurationArgs{
	// 				StepAdjustments: appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustmentArray{
	// 					&appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustmentArgs{
	// 						MetricIntervalLowerBound: pulumi.String("1"),
	// 						MetricIntervalUpperBound: pulumi.String("2"),
	// 						ScalingAdjustment:        -1,
	// 					},
	// 					&appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustmentArgs{
	// 						MetricIntervalLowerBound: pulumi.String("2"),
	// 						MetricIntervalUpperBound: pulumi.String("3"),
	// 						ScalingAdjustment:        pulumi.Int(1),
	// 					},
	// 				},
	// 			},
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	StepAdjustments pulumix.Input[[]*PolicyStepScalingPolicyConfigurationStepAdjustmentArgs] `pulumi:"stepAdjustments"`
}

func (PolicyStepScalingPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (i PolicyStepScalingPolicyConfigurationArgs) ToPolicyStepScalingPolicyConfigurationOutput() PolicyStepScalingPolicyConfigurationOutput {
	return i.ToPolicyStepScalingPolicyConfigurationOutputWithContext(context.Background())
}

func (i PolicyStepScalingPolicyConfigurationArgs) ToPolicyStepScalingPolicyConfigurationOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStepScalingPolicyConfigurationOutput)
}

func (i *PolicyStepScalingPolicyConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyStepScalingPolicyConfigurationArgs] {
	return pulumix.Val(i)
}

type PolicyStepScalingPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (PolicyStepScalingPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (o PolicyStepScalingPolicyConfigurationOutput) ToPolicyStepScalingPolicyConfigurationOutput() PolicyStepScalingPolicyConfigurationOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationOutput) ToPolicyStepScalingPolicyConfigurationOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyStepScalingPolicyConfiguration] {
	return pulumix.Output[PolicyStepScalingPolicyConfiguration]{
		OutputState: o.OutputState,
	}
}

// Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
func (o PolicyStepScalingPolicyConfigurationOutput) AdjustmentType() pulumix.Output[*string] {
	return pulumix.Apply[PolicyStepScalingPolicyConfiguration](o, func(v PolicyStepScalingPolicyConfiguration) *string { return v.AdjustmentType })
}

// Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
func (o PolicyStepScalingPolicyConfigurationOutput) Cooldown() pulumix.Output[*int] {
	return pulumix.Apply[PolicyStepScalingPolicyConfiguration](o, func(v PolicyStepScalingPolicyConfiguration) *int { return v.Cooldown })
}

// Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
func (o PolicyStepScalingPolicyConfigurationOutput) MetricAggregationType() pulumix.Output[*string] {
	return pulumix.Apply[PolicyStepScalingPolicyConfiguration](o, func(v PolicyStepScalingPolicyConfiguration) *string { return v.MetricAggregationType })
}

// Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
func (o PolicyStepScalingPolicyConfigurationOutput) MinAdjustmentMagnitude() pulumix.Output[*int] {
	return pulumix.Apply[PolicyStepScalingPolicyConfiguration](o, func(v PolicyStepScalingPolicyConfiguration) *int { return v.MinAdjustmentMagnitude })
}

// Set of adjustments that manage scaling. These have the following structure:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/appautoscaling"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := appautoscaling.NewPolicy(ctx, "ecsPolicy", &appautoscaling.PolicyArgs{
//				StepScalingPolicyConfiguration: &appautoscaling.PolicyStepScalingPolicyConfigurationArgs{
//					StepAdjustments: appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustmentArray{
//						&appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustmentArgs{
//							MetricIntervalLowerBound: pulumi.String("1"),
//							MetricIntervalUpperBound: pulumi.String("2"),
//							ScalingAdjustment:        -1,
//						},
//						&appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustmentArgs{
//							MetricIntervalLowerBound: pulumi.String("2"),
//							MetricIntervalUpperBound: pulumi.String("3"),
//							ScalingAdjustment:        pulumi.Int(1),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func (o PolicyStepScalingPolicyConfigurationOutput) StepAdjustments() pulumix.GArrayOutput[PolicyStepScalingPolicyConfigurationStepAdjustment, PolicyStepScalingPolicyConfigurationStepAdjustmentOutput] {
	value := pulumix.Apply[PolicyStepScalingPolicyConfiguration](o, func(v PolicyStepScalingPolicyConfiguration) []PolicyStepScalingPolicyConfigurationStepAdjustment {
		return v.StepAdjustments
	})
	return pulumix.GArrayOutput[PolicyStepScalingPolicyConfigurationStepAdjustment, PolicyStepScalingPolicyConfigurationStepAdjustmentOutput]{OutputState: value.OutputState}
}

type PolicyStepScalingPolicyConfigurationStepAdjustment struct {
	// Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
	MetricIntervalLowerBound *string `pulumi:"metricIntervalLowerBound"`
	// Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
	MetricIntervalUpperBound *string `pulumi:"metricIntervalUpperBound"`
	// Number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
	ScalingAdjustment int `pulumi:"scalingAdjustment"`
}

type PolicyStepScalingPolicyConfigurationStepAdjustmentArgs struct {
	// Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
	MetricIntervalLowerBound pulumix.Input[*string] `pulumi:"metricIntervalLowerBound"`
	// Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
	MetricIntervalUpperBound pulumix.Input[*string] `pulumi:"metricIntervalUpperBound"`
	// Number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
	ScalingAdjustment pulumix.Input[int] `pulumi:"scalingAdjustment"`
}

func (PolicyStepScalingPolicyConfigurationStepAdjustmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepScalingPolicyConfigurationStepAdjustment)(nil)).Elem()
}

func (i PolicyStepScalingPolicyConfigurationStepAdjustmentArgs) ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutput() PolicyStepScalingPolicyConfigurationStepAdjustmentOutput {
	return i.ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutputWithContext(context.Background())
}

func (i PolicyStepScalingPolicyConfigurationStepAdjustmentArgs) ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationStepAdjustmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStepScalingPolicyConfigurationStepAdjustmentOutput)
}

func (i *PolicyStepScalingPolicyConfigurationStepAdjustmentArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyStepScalingPolicyConfigurationStepAdjustmentArgs] {
	return pulumix.Val(i)
}

type PolicyStepScalingPolicyConfigurationStepAdjustmentOutput struct{ *pulumi.OutputState }

func (PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepScalingPolicyConfigurationStepAdjustment)(nil)).Elem()
}

func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutput() PolicyStepScalingPolicyConfigurationStepAdjustmentOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationStepAdjustmentOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyStepScalingPolicyConfigurationStepAdjustment] {
	return pulumix.Output[PolicyStepScalingPolicyConfigurationStepAdjustment]{
		OutputState: o.OutputState,
	}
}

// Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) MetricIntervalLowerBound() pulumix.Output[*string] {
	return pulumix.Apply[PolicyStepScalingPolicyConfigurationStepAdjustment](o, func(v PolicyStepScalingPolicyConfigurationStepAdjustment) *string { return v.MetricIntervalLowerBound })
}

// Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) MetricIntervalUpperBound() pulumix.Output[*string] {
	return pulumix.Apply[PolicyStepScalingPolicyConfigurationStepAdjustment](o, func(v PolicyStepScalingPolicyConfigurationStepAdjustment) *string { return v.MetricIntervalUpperBound })
}

// Number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) ScalingAdjustment() pulumix.Output[int] {
	return pulumix.Apply[PolicyStepScalingPolicyConfigurationStepAdjustment](o, func(v PolicyStepScalingPolicyConfigurationStepAdjustment) int { return v.ScalingAdjustment })
}

type PolicyTargetTrackingScalingPolicyConfiguration struct {
	// Custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
	CustomizedMetricSpecification *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification `pulumi:"customizedMetricSpecification"`
	// Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
	DisableScaleIn *bool `pulumi:"disableScaleIn"`
	// Predefined metric. See supported fields below.
	PredefinedMetricSpecification *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification `pulumi:"predefinedMetricSpecification"`
	// Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
	ScaleInCooldown *int `pulumi:"scaleInCooldown"`
	// Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
	ScaleOutCooldown *int `pulumi:"scaleOutCooldown"`
	// Target value for the metric.
	TargetValue float64 `pulumi:"targetValue"`
}

type PolicyTargetTrackingScalingPolicyConfigurationArgs struct {
	// Custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
	CustomizedMetricSpecification pulumix.Input[*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs] `pulumi:"customizedMetricSpecification"`
	// Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
	DisableScaleIn pulumix.Input[*bool] `pulumi:"disableScaleIn"`
	// Predefined metric. See supported fields below.
	PredefinedMetricSpecification pulumix.Input[*PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs] `pulumi:"predefinedMetricSpecification"`
	// Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
	ScaleInCooldown pulumix.Input[*int] `pulumi:"scaleInCooldown"`
	// Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
	ScaleOutCooldown pulumix.Input[*int] `pulumi:"scaleOutCooldown"`
	// Target value for the metric.
	TargetValue pulumix.Input[float64] `pulumi:"targetValue"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationOutput() PolicyTargetTrackingScalingPolicyConfigurationOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationOutput)
}

func (i *PolicyTargetTrackingScalingPolicyConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetTrackingScalingPolicyConfigurationArgs] {
	return pulumix.Val(i)
}

type PolicyTargetTrackingScalingPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationOutput() PolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetTrackingScalingPolicyConfiguration] {
	return pulumix.Output[PolicyTargetTrackingScalingPolicyConfiguration]{
		OutputState: o.OutputState,
	}
}

// Custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) CustomizedMetricSpecification() pulumix.GPtrOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput] {
	value := pulumix.Apply[PolicyTargetTrackingScalingPolicyConfiguration](o, func(v PolicyTargetTrackingScalingPolicyConfiguration) *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification {
		return v.CustomizedMetricSpecification
	})
	return pulumix.GPtrOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput]{OutputState: value.OutputState}
}

// Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) DisableScaleIn() pulumix.Output[*bool] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfiguration](o, func(v PolicyTargetTrackingScalingPolicyConfiguration) *bool { return v.DisableScaleIn })
}

// Predefined metric. See supported fields below.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) PredefinedMetricSpecification() pulumix.GPtrOutput[PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification, PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput] {
	value := pulumix.Apply[PolicyTargetTrackingScalingPolicyConfiguration](o, func(v PolicyTargetTrackingScalingPolicyConfiguration) *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification {
		return v.PredefinedMetricSpecification
	})
	return pulumix.GPtrOutput[PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification, PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput]{OutputState: value.OutputState}
}

// Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ScaleInCooldown() pulumix.Output[*int] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfiguration](o, func(v PolicyTargetTrackingScalingPolicyConfiguration) *int { return v.ScaleInCooldown })
}

// Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ScaleOutCooldown() pulumix.Output[*int] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfiguration](o, func(v PolicyTargetTrackingScalingPolicyConfiguration) *int { return v.ScaleOutCooldown })
}

// Target value for the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) TargetValue() pulumix.Output[float64] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfiguration](o, func(v PolicyTargetTrackingScalingPolicyConfiguration) float64 { return v.TargetValue })
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification struct {
	// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
	Dimensions []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension `pulumi:"dimensions"`
	// Name of the metric.
	MetricName *string `pulumi:"metricName"`
	// Metrics to include, as a metric data query.
	Metrics []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric `pulumi:"metrics"`
	// Namespace of the metric.
	Namespace *string `pulumi:"namespace"`
	// Statistic of the metric. Valid values: `Average`, `Minimum`, `Maximum`, `SampleCount`, and `Sum`.
	Statistic *string `pulumi:"statistic"`
	// Unit of the metric.
	Unit *string `pulumi:"unit"`
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs struct {
	// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
	Dimensions pulumix.Input[[]*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs] `pulumi:"dimensions"`
	// Name of the metric.
	MetricName pulumix.Input[*string] `pulumi:"metricName"`
	// Metrics to include, as a metric data query.
	Metrics pulumix.Input[[]*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricArgs] `pulumi:"metrics"`
	// Namespace of the metric.
	Namespace pulumix.Input[*string] `pulumi:"namespace"`
	// Statistic of the metric. Valid values: `Average`, `Minimum`, `Maximum`, `SampleCount`, and `Sum`.
	Statistic pulumix.Input[*string] `pulumi:"statistic"`
	// Unit of the metric.
	Unit pulumix.Input[*string] `pulumi:"unit"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput)
}

func (i *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs] {
	return pulumix.Val(i)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification] {
	return pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification]{
		OutputState: o.OutputState,
	}
}

// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) Dimensions() pulumix.GArrayOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput] {
	value := pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension {
		return v.Dimensions
	})
	return pulumix.GArrayOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput]{OutputState: value.OutputState}
}

// Name of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) MetricName() pulumix.Output[*string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *string {
		return v.MetricName
	})
}

// Metrics to include, as a metric data query.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) Metrics() pulumix.GArrayOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput] {
	value := pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric {
		return v.Metrics
	})
	return pulumix.GArrayOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput]{OutputState: value.OutputState}
}

// Namespace of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) Namespace() pulumix.Output[*string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *string {
		return v.Namespace
	})
}

// Statistic of the metric. Valid values: `Average`, `Minimum`, `Maximum`, `SampleCount`, and `Sum`.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) Statistic() pulumix.Output[*string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *string {
		return v.Statistic
	})
}

// Unit of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) Unit() pulumix.Output[*string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *string {
		return v.Unit
	})
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension struct {
	// Name of the policy. Must be between 1 and 255 characters in length.
	Name string `pulumi:"name"`
	// Value of the dimension.
	Value string `pulumi:"value"`
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs struct {
	// Name of the policy. Must be between 1 and 255 characters in length.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the dimension.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput)
}

func (i *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs] {
	return pulumix.Val(i)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension] {
	return pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension]{
		OutputState: o.OutputState,
	}
}

// Name of the policy. Must be between 1 and 255 characters in length.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension) string {
		return v.Name
	})
}

// Value of the dimension.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension) string {
		return v.Value
	})
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric struct {
	// Math expression used on the returned metric. You must specify either `expression` or `metricStat`, but not both.
	Expression *string `pulumi:"expression"`
	// Short name for the metric used in target tracking scaling policy.
	Id string `pulumi:"id"`
	// Human-readable label for this metric or expression.
	Label *string `pulumi:"label"`
	// Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either `expression` or `metricStat`, but not both.
	MetricStat *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat `pulumi:"metricStat"`
	// Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
	ReturnData *bool `pulumi:"returnData"`
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricArgs struct {
	// Math expression used on the returned metric. You must specify either `expression` or `metricStat`, but not both.
	Expression pulumix.Input[*string] `pulumi:"expression"`
	// Short name for the metric used in target tracking scaling policy.
	Id pulumix.Input[string] `pulumi:"id"`
	// Human-readable label for this metric or expression.
	Label pulumix.Input[*string] `pulumi:"label"`
	// Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either `expression` or `metricStat`, but not both.
	MetricStat pulumix.Input[*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs] `pulumi:"metricStat"`
	// Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
	ReturnData pulumix.Input[*bool] `pulumi:"returnData"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput)
}

func (i *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricArgs] {
	return pulumix.Val(i)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric] {
	return pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric]{
		OutputState: o.OutputState,
	}
}

// Math expression used on the returned metric. You must specify either `expression` or `metricStat`, but not both.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput) Expression() pulumix.Output[*string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric) *string {
		return v.Expression
	})
}

// Short name for the metric used in target tracking scaling policy.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric) string {
		return v.Id
	})
}

// Human-readable label for this metric or expression.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput) Label() pulumix.Output[*string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric) *string {
		return v.Label
	})
}

// Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either `expression` or `metricStat`, but not both.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput) MetricStat() pulumix.GPtrOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput] {
	value := pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric) *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat {
		return v.MetricStat
	})
	return pulumix.GPtrOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput]{OutputState: value.OutputState}
}

// Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput) ReturnData() pulumix.Output[*bool] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetric) *bool {
		return v.ReturnData
	})
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat struct {
	// Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.
	Metric PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric `pulumi:"metric"`
	// Statistic of the metrics to return.
	Stat string `pulumi:"stat"`
	// Unit of the metric.
	Unit *string `pulumi:"unit"`
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs struct {
	// Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.
	Metric pulumix.Input[*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs] `pulumi:"metric"`
	// Statistic of the metrics to return.
	Stat pulumix.Input[string] `pulumi:"stat"`
	// Unit of the metric.
	Unit pulumix.Input[*string] `pulumi:"unit"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput)
}

func (i *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatArgs] {
	return pulumix.Val(i)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat] {
	return pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat]{
		OutputState: o.OutputState,
	}
}

// Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput) Metric() pulumix.GPtrOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput] {
	value := pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric {
		return v.Metric
	})
	return pulumix.GPtrOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput]{OutputState: value.OutputState}
}

// Statistic of the metrics to return.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput) Stat() pulumix.Output[string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat) string {
		return v.Stat
	})
}

// Unit of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput) Unit() pulumix.Output[*string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStat) *string {
		return v.Unit
	})
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric struct {
	// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
	Dimensions []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension `pulumi:"dimensions"`
	// Name of the metric.
	MetricName string `pulumi:"metricName"`
	// Namespace of the metric.
	Namespace string `pulumi:"namespace"`
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs struct {
	// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
	Dimensions pulumix.Input[[]*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionArgs] `pulumi:"dimensions"`
	// Name of the metric.
	MetricName pulumix.Input[string] `pulumi:"metricName"`
	// Namespace of the metric.
	Namespace pulumix.Input[string] `pulumi:"namespace"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput)
}

func (i *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricArgs] {
	return pulumix.Val(i)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric] {
	return pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric]{
		OutputState: o.OutputState,
	}
}

// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput) Dimensions() pulumix.GArrayOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput] {
	value := pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric) []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension {
		return v.Dimensions
	})
	return pulumix.GArrayOutput[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput]{OutputState: value.OutputState}
}

// Name of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput) MetricName() pulumix.Output[string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric) string {
		return v.MetricName
	})
}

// Namespace of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput) Namespace() pulumix.Output[string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetric) string {
		return v.Namespace
	})
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension struct {
	// Name of the policy. Must be between 1 and 255 characters in length.
	Name string `pulumi:"name"`
	// Value of the dimension.
	Value string `pulumi:"value"`
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionArgs struct {
	// Name of the policy. Must be between 1 and 255 characters in length.
	Name pulumix.Input[string] `pulumi:"name"`
	// Value of the dimension.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput)
}

func (i *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionArgs] {
	return pulumix.Val(i)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension] {
	return pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension]{
		OutputState: o.OutputState,
	}
}

// Name of the policy. Must be between 1 and 255 characters in length.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension) string {
		return v.Name
	})
}

// Value of the dimension.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension](o, func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimension) string {
		return v.Value
	})
}

type PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification struct {
	// Metric type.
	PredefinedMetricType string `pulumi:"predefinedMetricType"`
	// Reserved for future use if the `predefinedMetricType` is not `ALBRequestCountPerTarget`. If the `predefinedMetricType` is `ALBRequestCountPerTarget`, you must specify this argument. Documentation can be found at: [AWS Predefined Scaling Metric Specification](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedScalingMetricSpecification.html). Must be less than or equal to 1023 characters in length.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

type PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs struct {
	// Metric type.
	PredefinedMetricType pulumix.Input[string] `pulumi:"predefinedMetricType"`
	// Reserved for future use if the `predefinedMetricType` is not `ALBRequestCountPerTarget`. If the `predefinedMetricType` is `ALBRequestCountPerTarget`, you must specify this argument. Documentation can be found at: [AWS Predefined Scaling Metric Specification](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedScalingMetricSpecification.html). Must be less than or equal to 1023 characters in length.
	ResourceLabel pulumix.Input[*string] `pulumi:"resourceLabel"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput)
}

func (i *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs] {
	return pulumix.Val(i)
}

type PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification] {
	return pulumix.Output[PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification]{
		OutputState: o.OutputState,
	}
}

// Metric type.
func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) PredefinedMetricType() pulumix.Output[string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification](o, func(v PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification) string {
		return v.PredefinedMetricType
	})
}

// Reserved for future use if the `predefinedMetricType` is not `ALBRequestCountPerTarget`. If the `predefinedMetricType` is `ALBRequestCountPerTarget`, you must specify this argument. Documentation can be found at: [AWS Predefined Scaling Metric Specification](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedScalingMetricSpecification.html). Must be less than or equal to 1023 characters in length.
func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ResourceLabel() pulumix.Output[*string] {
	return pulumix.Apply[PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification](o, func(v PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification) *string {
		return v.ResourceLabel
	})
}

type ScheduledActionScalableTargetAction struct {
	// Maximum capacity. At least one of `maxCapacity` or `minCapacity` must be set.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Minimum capacity. At least one of `minCapacity` or `maxCapacity` must be set.
	MinCapacity *int `pulumi:"minCapacity"`
}

type ScheduledActionScalableTargetActionArgs struct {
	// Maximum capacity. At least one of `maxCapacity` or `minCapacity` must be set.
	MaxCapacity pulumix.Input[*int] `pulumi:"maxCapacity"`
	// Minimum capacity. At least one of `minCapacity` or `maxCapacity` must be set.
	MinCapacity pulumix.Input[*int] `pulumi:"minCapacity"`
}

func (ScheduledActionScalableTargetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionScalableTargetAction)(nil)).Elem()
}

func (i ScheduledActionScalableTargetActionArgs) ToScheduledActionScalableTargetActionOutput() ScheduledActionScalableTargetActionOutput {
	return i.ToScheduledActionScalableTargetActionOutputWithContext(context.Background())
}

func (i ScheduledActionScalableTargetActionArgs) ToScheduledActionScalableTargetActionOutputWithContext(ctx context.Context) ScheduledActionScalableTargetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionScalableTargetActionOutput)
}

func (i *ScheduledActionScalableTargetActionArgs) ToOutput(ctx context.Context) pulumix.Output[*ScheduledActionScalableTargetActionArgs] {
	return pulumix.Val(i)
}

type ScheduledActionScalableTargetActionOutput struct{ *pulumi.OutputState }

func (ScheduledActionScalableTargetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionScalableTargetAction)(nil)).Elem()
}

func (o ScheduledActionScalableTargetActionOutput) ToScheduledActionScalableTargetActionOutput() ScheduledActionScalableTargetActionOutput {
	return o
}

func (o ScheduledActionScalableTargetActionOutput) ToScheduledActionScalableTargetActionOutputWithContext(ctx context.Context) ScheduledActionScalableTargetActionOutput {
	return o
}

func (o ScheduledActionScalableTargetActionOutput) ToOutput(ctx context.Context) pulumix.Output[ScheduledActionScalableTargetAction] {
	return pulumix.Output[ScheduledActionScalableTargetAction]{
		OutputState: o.OutputState,
	}
}

// Maximum capacity. At least one of `maxCapacity` or `minCapacity` must be set.
func (o ScheduledActionScalableTargetActionOutput) MaxCapacity() pulumix.Output[*int] {
	return pulumix.Apply[ScheduledActionScalableTargetAction](o, func(v ScheduledActionScalableTargetAction) *int { return v.MaxCapacity })
}

// Minimum capacity. At least one of `minCapacity` or `maxCapacity` must be set.
func (o ScheduledActionScalableTargetActionOutput) MinCapacity() pulumix.Output[*int] {
	return pulumix.Apply[ScheduledActionScalableTargetAction](o, func(v ScheduledActionScalableTargetAction) *int { return v.MinCapacity })
}

func init() {
	pulumi.RegisterOutputType(PolicyStepScalingPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(PolicyStepScalingPolicyConfigurationStepAdjustmentOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationMetricMetricStatMetricDimensionOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(ScheduledActionScalableTargetActionOutput{})
}
