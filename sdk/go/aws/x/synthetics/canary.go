// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synthetics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Synthetics Canary resource.
//
// > **NOTE:** When you create a canary, AWS creates supporting implicit resources. See the Amazon CloudWatch Synthetics documentation on [DeleteCanary](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DeleteCanary.html) for a full list. Neither AWS nor this provider deletes these implicit resources automatically when the canary is deleted. Before deleting a canary, ensure you have all the information about the canary that you need to delete the implicit resources using the AWS Console, or AWS CLI.
type Canary struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the Canary.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.
	ArtifactConfig pulumix.GPtrOutput[CanaryArtifactConfig, CanaryArtifactConfigOutput] `pulumi:"artifactConfig"`
	// Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.
	ArtifactS3Location pulumix.Output[string] `pulumi:"artifactS3Location"`
	// Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.
	DeleteLambda pulumix.Output[*bool] `pulumi:"deleteLambda"`
	// ARN of the Lambda function that is used as your canary's engine.
	EngineArn pulumix.Output[string] `pulumi:"engineArn"`
	// ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.
	ExecutionRoleArn pulumix.Output[string] `pulumi:"executionRoleArn"`
	// Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	FailureRetentionPeriod pulumix.Output[*int] `pulumi:"failureRetentionPeriod"`
	// Entry point to use for the source code when running the canary. This value must end with the string `.handler` .
	Handler pulumix.Output[string] `pulumi:"handler"`
	// Name for this canary. Has a maximum length of 21 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.
	Name pulumix.Output[string] `pulumi:"name"`
	// Configuration block for individual canary runs. Detailed below.
	RunConfig pulumix.GPtrOutput[CanaryRunConfig, CanaryRunConfigOutput] `pulumi:"runConfig"`
	// Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.
	RuntimeVersion pulumix.Output[string] `pulumi:"runtimeVersion"`
	// Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zipFile`.**
	S3Bucket pulumix.Output[*string] `pulumi:"s3Bucket"`
	// S3 key of your script. **Conflicts with `zipFile`.**
	S3Key pulumix.Output[*string] `pulumi:"s3Key"`
	// S3 version ID of your script. **Conflicts with `zipFile`.**
	S3Version pulumix.Output[*string] `pulumi:"s3Version"`
	// Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.
	//
	// The following arguments are optional:
	Schedule pulumix.GPtrOutput[CanarySchedule, CanaryScheduleOutput] `pulumi:"schedule"`
	// ARN of the Lambda layer where Synthetics stores the canary script code.
	SourceLocationArn pulumix.Output[string] `pulumi:"sourceLocationArn"`
	// Whether to run or stop the canary.
	StartCanary pulumix.Output[*bool] `pulumi:"startCanary"`
	// Canary status.
	Status pulumix.Output[string] `pulumi:"status"`
	// Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	SuccessRetentionPeriod pulumix.Output[*int] `pulumi:"successRetentionPeriod"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Structure that contains information about when the canary was created, modified, and most recently run. see Timeline.
	Timelines pulumix.GArrayOutput[CanaryTimeline, CanaryTimelineOutput] `pulumi:"timelines"`
	// Configuration block. Detailed below.
	VpcConfig pulumix.GPtrOutput[CanaryVpcConfig, CanaryVpcConfigOutput] `pulumi:"vpcConfig"`
	// ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3Bucket`, `s3Key`, and `s3Version`.**
	ZipFile pulumix.Output[*string] `pulumi:"zipFile"`
}

// NewCanary registers a new resource with the given unique name, arguments, and options.
func NewCanary(ctx *pulumi.Context,
	name string, args *CanaryArgs, opts ...pulumi.ResourceOption) (*Canary, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArtifactS3Location == nil {
		return nil, errors.New("invalid value for required argument 'ArtifactS3Location'")
	}
	if args.ExecutionRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ExecutionRoleArn'")
	}
	if args.Handler == nil {
		return nil, errors.New("invalid value for required argument 'Handler'")
	}
	if args.RuntimeVersion == nil {
		return nil, errors.New("invalid value for required argument 'RuntimeVersion'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Canary
	err := ctx.RegisterResource("aws:synthetics/canary:Canary", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCanary gets an existing Canary resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCanary(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CanaryState, opts ...pulumi.ResourceOption) (*Canary, error) {
	var resource Canary
	err := ctx.ReadResource("aws:synthetics/canary:Canary", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Canary resources.
type canaryState struct {
	// Amazon Resource Name (ARN) of the Canary.
	Arn *string `pulumi:"arn"`
	// configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.
	ArtifactConfig *CanaryArtifactConfig `pulumi:"artifactConfig"`
	// Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.
	ArtifactS3Location *string `pulumi:"artifactS3Location"`
	// Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.
	DeleteLambda *bool `pulumi:"deleteLambda"`
	// ARN of the Lambda function that is used as your canary's engine.
	EngineArn *string `pulumi:"engineArn"`
	// ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.
	ExecutionRoleArn *string `pulumi:"executionRoleArn"`
	// Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	FailureRetentionPeriod *int `pulumi:"failureRetentionPeriod"`
	// Entry point to use for the source code when running the canary. This value must end with the string `.handler` .
	Handler *string `pulumi:"handler"`
	// Name for this canary. Has a maximum length of 21 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.
	Name *string `pulumi:"name"`
	// Configuration block for individual canary runs. Detailed below.
	RunConfig *CanaryRunConfig `pulumi:"runConfig"`
	// Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zipFile`.**
	S3Bucket *string `pulumi:"s3Bucket"`
	// S3 key of your script. **Conflicts with `zipFile`.**
	S3Key *string `pulumi:"s3Key"`
	// S3 version ID of your script. **Conflicts with `zipFile`.**
	S3Version *string `pulumi:"s3Version"`
	// Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.
	//
	// The following arguments are optional:
	Schedule *CanarySchedule `pulumi:"schedule"`
	// ARN of the Lambda layer where Synthetics stores the canary script code.
	SourceLocationArn *string `pulumi:"sourceLocationArn"`
	// Whether to run or stop the canary.
	StartCanary *bool `pulumi:"startCanary"`
	// Canary status.
	Status *string `pulumi:"status"`
	// Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	SuccessRetentionPeriod *int `pulumi:"successRetentionPeriod"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Structure that contains information about when the canary was created, modified, and most recently run. see Timeline.
	Timelines []CanaryTimeline `pulumi:"timelines"`
	// Configuration block. Detailed below.
	VpcConfig *CanaryVpcConfig `pulumi:"vpcConfig"`
	// ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3Bucket`, `s3Key`, and `s3Version`.**
	ZipFile *string `pulumi:"zipFile"`
}

type CanaryState struct {
	// Amazon Resource Name (ARN) of the Canary.
	Arn pulumix.Input[*string]
	// configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.
	ArtifactConfig pulumix.Input[*CanaryArtifactConfigArgs]
	// Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.
	ArtifactS3Location pulumix.Input[*string]
	// Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.
	DeleteLambda pulumix.Input[*bool]
	// ARN of the Lambda function that is used as your canary's engine.
	EngineArn pulumix.Input[*string]
	// ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.
	ExecutionRoleArn pulumix.Input[*string]
	// Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	FailureRetentionPeriod pulumix.Input[*int]
	// Entry point to use for the source code when running the canary. This value must end with the string `.handler` .
	Handler pulumix.Input[*string]
	// Name for this canary. Has a maximum length of 21 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.
	Name pulumix.Input[*string]
	// Configuration block for individual canary runs. Detailed below.
	RunConfig pulumix.Input[*CanaryRunConfigArgs]
	// Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.
	RuntimeVersion pulumix.Input[*string]
	// Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zipFile`.**
	S3Bucket pulumix.Input[*string]
	// S3 key of your script. **Conflicts with `zipFile`.**
	S3Key pulumix.Input[*string]
	// S3 version ID of your script. **Conflicts with `zipFile`.**
	S3Version pulumix.Input[*string]
	// Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.
	//
	// The following arguments are optional:
	Schedule pulumix.Input[*CanaryScheduleArgs]
	// ARN of the Lambda layer where Synthetics stores the canary script code.
	SourceLocationArn pulumix.Input[*string]
	// Whether to run or stop the canary.
	StartCanary pulumix.Input[*bool]
	// Canary status.
	Status pulumix.Input[*string]
	// Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	SuccessRetentionPeriod pulumix.Input[*int]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Structure that contains information about when the canary was created, modified, and most recently run. see Timeline.
	Timelines pulumix.Input[[]*CanaryTimelineArgs]
	// Configuration block. Detailed below.
	VpcConfig pulumix.Input[*CanaryVpcConfigArgs]
	// ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3Bucket`, `s3Key`, and `s3Version`.**
	ZipFile pulumix.Input[*string]
}

func (CanaryState) ElementType() reflect.Type {
	return reflect.TypeOf((*canaryState)(nil)).Elem()
}

type canaryArgs struct {
	// configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.
	ArtifactConfig *CanaryArtifactConfig `pulumi:"artifactConfig"`
	// Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.
	ArtifactS3Location string `pulumi:"artifactS3Location"`
	// Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.
	DeleteLambda *bool `pulumi:"deleteLambda"`
	// ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.
	ExecutionRoleArn string `pulumi:"executionRoleArn"`
	// Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	FailureRetentionPeriod *int `pulumi:"failureRetentionPeriod"`
	// Entry point to use for the source code when running the canary. This value must end with the string `.handler` .
	Handler string `pulumi:"handler"`
	// Name for this canary. Has a maximum length of 21 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.
	Name *string `pulumi:"name"`
	// Configuration block for individual canary runs. Detailed below.
	RunConfig *CanaryRunConfig `pulumi:"runConfig"`
	// Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.
	RuntimeVersion string `pulumi:"runtimeVersion"`
	// Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zipFile`.**
	S3Bucket *string `pulumi:"s3Bucket"`
	// S3 key of your script. **Conflicts with `zipFile`.**
	S3Key *string `pulumi:"s3Key"`
	// S3 version ID of your script. **Conflicts with `zipFile`.**
	S3Version *string `pulumi:"s3Version"`
	// Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.
	//
	// The following arguments are optional:
	Schedule CanarySchedule `pulumi:"schedule"`
	// Whether to run or stop the canary.
	StartCanary *bool `pulumi:"startCanary"`
	// Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	SuccessRetentionPeriod *int `pulumi:"successRetentionPeriod"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Configuration block. Detailed below.
	VpcConfig *CanaryVpcConfig `pulumi:"vpcConfig"`
	// ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3Bucket`, `s3Key`, and `s3Version`.**
	ZipFile *string `pulumi:"zipFile"`
}

// The set of arguments for constructing a Canary resource.
type CanaryArgs struct {
	// configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.
	ArtifactConfig pulumix.Input[*CanaryArtifactConfigArgs]
	// Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.
	ArtifactS3Location pulumix.Input[string]
	// Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.
	DeleteLambda pulumix.Input[*bool]
	// ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.
	ExecutionRoleArn pulumix.Input[string]
	// Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	FailureRetentionPeriod pulumix.Input[*int]
	// Entry point to use for the source code when running the canary. This value must end with the string `.handler` .
	Handler pulumix.Input[string]
	// Name for this canary. Has a maximum length of 21 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.
	Name pulumix.Input[*string]
	// Configuration block for individual canary runs. Detailed below.
	RunConfig pulumix.Input[*CanaryRunConfigArgs]
	// Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.
	RuntimeVersion pulumix.Input[string]
	// Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zipFile`.**
	S3Bucket pulumix.Input[*string]
	// S3 key of your script. **Conflicts with `zipFile`.**
	S3Key pulumix.Input[*string]
	// S3 version ID of your script. **Conflicts with `zipFile`.**
	S3Version pulumix.Input[*string]
	// Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.
	//
	// The following arguments are optional:
	Schedule pulumix.Input[*CanaryScheduleArgs]
	// Whether to run or stop the canary.
	StartCanary pulumix.Input[*bool]
	// Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
	SuccessRetentionPeriod pulumix.Input[*int]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Configuration block. Detailed below.
	VpcConfig pulumix.Input[*CanaryVpcConfigArgs]
	// ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3Bucket`, `s3Key`, and `s3Version`.**
	ZipFile pulumix.Input[*string]
}

func (CanaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*canaryArgs)(nil)).Elem()
}

type CanaryOutput struct{ *pulumi.OutputState }

func (CanaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Canary)(nil)).Elem()
}

func (o CanaryOutput) ToCanaryOutput() CanaryOutput {
	return o
}

func (o CanaryOutput) ToCanaryOutputWithContext(ctx context.Context) CanaryOutput {
	return o
}

func (o CanaryOutput) ToOutput(ctx context.Context) pulumix.Output[Canary] {
	return pulumix.Output[Canary]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the Canary.
func (o CanaryOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See Artifact Config.
func (o CanaryOutput) ArtifactConfig() pulumix.GPtrOutput[CanaryArtifactConfig, CanaryArtifactConfigOutput] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.GPtrOutput[CanaryArtifactConfig, CanaryArtifactConfigOutput] {
		return v.ArtifactConfig
	})
	unwrapped := pulumix.Flatten[*CanaryArtifactConfig, pulumix.GPtrOutput[CanaryArtifactConfig, CanaryArtifactConfigOutput]](value)
	return pulumix.GPtrOutput[CanaryArtifactConfig, CanaryArtifactConfigOutput]{OutputState: unwrapped.OutputState}
}

// Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.
func (o CanaryOutput) ArtifactS3Location() pulumix.Output[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[string] { return v.ArtifactS3Location })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.
func (o CanaryOutput) DeleteLambda() pulumix.Output[*bool] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[*bool] { return v.DeleteLambda })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// ARN of the Lambda function that is used as your canary's engine.
func (o CanaryOutput) EngineArn() pulumix.Output[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[string] { return v.EngineArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.
func (o CanaryOutput) ExecutionRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[string] { return v.ExecutionRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
func (o CanaryOutput) FailureRetentionPeriod() pulumix.Output[*int] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[*int] { return v.FailureRetentionPeriod })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Entry point to use for the source code when running the canary. This value must end with the string `.handler` .
func (o CanaryOutput) Handler() pulumix.Output[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[string] { return v.Handler })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name for this canary. Has a maximum length of 21 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.
func (o CanaryOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block for individual canary runs. Detailed below.
func (o CanaryOutput) RunConfig() pulumix.GPtrOutput[CanaryRunConfig, CanaryRunConfigOutput] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.GPtrOutput[CanaryRunConfig, CanaryRunConfigOutput] { return v.RunConfig })
	unwrapped := pulumix.Flatten[*CanaryRunConfig, pulumix.GPtrOutput[CanaryRunConfig, CanaryRunConfigOutput]](value)
	return pulumix.GPtrOutput[CanaryRunConfig, CanaryRunConfigOutput]{OutputState: unwrapped.OutputState}
}

// Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.
func (o CanaryOutput) RuntimeVersion() pulumix.Output[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[string] { return v.RuntimeVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zipFile`.**
func (o CanaryOutput) S3Bucket() pulumix.Output[*string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[*string] { return v.S3Bucket })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// S3 key of your script. **Conflicts with `zipFile`.**
func (o CanaryOutput) S3Key() pulumix.Output[*string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[*string] { return v.S3Key })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// S3 version ID of your script. **Conflicts with `zipFile`.**
func (o CanaryOutput) S3Version() pulumix.Output[*string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[*string] { return v.S3Version })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.
//
// The following arguments are optional:
func (o CanaryOutput) Schedule() pulumix.GPtrOutput[CanarySchedule, CanaryScheduleOutput] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.GPtrOutput[CanarySchedule, CanaryScheduleOutput] { return v.Schedule })
	unwrapped := pulumix.Flatten[*CanarySchedule, pulumix.GPtrOutput[CanarySchedule, CanaryScheduleOutput]](value)
	return pulumix.GPtrOutput[CanarySchedule, CanaryScheduleOutput]{OutputState: unwrapped.OutputState}
}

// ARN of the Lambda layer where Synthetics stores the canary script code.
func (o CanaryOutput) SourceLocationArn() pulumix.Output[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[string] { return v.SourceLocationArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to run or stop the canary.
func (o CanaryOutput) StartCanary() pulumix.Output[*bool] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[*bool] { return v.StartCanary })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Canary status.
func (o CanaryOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.
func (o CanaryOutput) SuccessRetentionPeriod() pulumix.Output[*int] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[*int] { return v.SuccessRetentionPeriod })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CanaryOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CanaryOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Structure that contains information about when the canary was created, modified, and most recently run. see Timeline.
func (o CanaryOutput) Timelines() pulumix.GArrayOutput[CanaryTimeline, CanaryTimelineOutput] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.GArrayOutput[CanaryTimeline, CanaryTimelineOutput] { return v.Timelines })
	unwrapped := pulumix.Flatten[[]CanaryTimeline, pulumix.GArrayOutput[CanaryTimeline, CanaryTimelineOutput]](value)
	return pulumix.GArrayOutput[CanaryTimeline, CanaryTimelineOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block. Detailed below.
func (o CanaryOutput) VpcConfig() pulumix.GPtrOutput[CanaryVpcConfig, CanaryVpcConfigOutput] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.GPtrOutput[CanaryVpcConfig, CanaryVpcConfigOutput] { return v.VpcConfig })
	unwrapped := pulumix.Flatten[*CanaryVpcConfig, pulumix.GPtrOutput[CanaryVpcConfig, CanaryVpcConfigOutput]](value)
	return pulumix.GPtrOutput[CanaryVpcConfig, CanaryVpcConfigOutput]{OutputState: unwrapped.OutputState}
}

// ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3Bucket`, `s3Key`, and `s3Version`.**
func (o CanaryOutput) ZipFile() pulumix.Output[*string] {
	value := pulumix.Apply[Canary](o, func(v Canary) pulumix.Output[*string] { return v.ZipFile })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(CanaryOutput{})
}
