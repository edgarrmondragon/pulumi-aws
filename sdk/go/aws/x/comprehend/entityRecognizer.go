// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package comprehend

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS Comprehend Entity Recognizer.
type EntityRecognizer struct {
	pulumi.CustomResourceState

	// ARN of the Entity Recognizer version.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn pulumix.Output[string] `pulumi:"dataAccessRoleArn"`
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig pulumix.GPtrOutput[EntityRecognizerInputDataConfig, EntityRecognizerInputDataConfigOutput] `pulumi:"inputDataConfig"`
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode pulumix.Output[string] `pulumi:"languageCode"`
	// The ID or ARN of a KMS Key used to encrypt trained Entity Recognizers.
	ModelKmsKeyId pulumix.Output[*string] `pulumi:"modelKmsKeyId"`
	// Name for the Entity Recognizer.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Name for the version of the Entity Recognizer.
	// Each version must have a unique name within the Entity Recognizer.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName pulumix.Output[string] `pulumi:"versionName"`
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix pulumix.Output[string] `pulumi:"versionNamePrefix"`
	// ID or ARN of a KMS Key used to encrypt storage volumes during job processing.
	VolumeKmsKeyId pulumix.Output[*string] `pulumi:"volumeKmsKeyId"`
	// Configuration parameters for VPC to contain Entity Recognizer resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig pulumix.GPtrOutput[EntityRecognizerVpcConfig, EntityRecognizerVpcConfigOutput] `pulumi:"vpcConfig"`
}

// NewEntityRecognizer registers a new resource with the given unique name, arguments, and options.
func NewEntityRecognizer(ctx *pulumi.Context,
	name string, args *EntityRecognizerArgs, opts ...pulumi.ResourceOption) (*EntityRecognizer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataAccessRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'DataAccessRoleArn'")
	}
	if args.InputDataConfig == nil {
		return nil, errors.New("invalid value for required argument 'InputDataConfig'")
	}
	if args.LanguageCode == nil {
		return nil, errors.New("invalid value for required argument 'LanguageCode'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EntityRecognizer
	err := ctx.RegisterResource("aws:comprehend/entityRecognizer:EntityRecognizer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEntityRecognizer gets an existing EntityRecognizer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEntityRecognizer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EntityRecognizerState, opts ...pulumi.ResourceOption) (*EntityRecognizer, error) {
	var resource EntityRecognizer
	err := ctx.ReadResource("aws:comprehend/entityRecognizer:EntityRecognizer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EntityRecognizer resources.
type entityRecognizerState struct {
	// ARN of the Entity Recognizer version.
	Arn *string `pulumi:"arn"`
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn *string `pulumi:"dataAccessRoleArn"`
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig *EntityRecognizerInputDataConfig `pulumi:"inputDataConfig"`
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode *string `pulumi:"languageCode"`
	// The ID or ARN of a KMS Key used to encrypt trained Entity Recognizers.
	ModelKmsKeyId *string `pulumi:"modelKmsKeyId"`
	// Name for the Entity Recognizer.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Name for the version of the Entity Recognizer.
	// Each version must have a unique name within the Entity Recognizer.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName *string `pulumi:"versionName"`
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix *string `pulumi:"versionNamePrefix"`
	// ID or ARN of a KMS Key used to encrypt storage volumes during job processing.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// Configuration parameters for VPC to contain Entity Recognizer resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig *EntityRecognizerVpcConfig `pulumi:"vpcConfig"`
}

type EntityRecognizerState struct {
	// ARN of the Entity Recognizer version.
	Arn pulumix.Input[*string]
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn pulumix.Input[*string]
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig pulumix.Input[*EntityRecognizerInputDataConfigArgs]
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode pulumix.Input[*string]
	// The ID or ARN of a KMS Key used to encrypt trained Entity Recognizers.
	ModelKmsKeyId pulumix.Input[*string]
	// Name for the Entity Recognizer.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Name for the version of the Entity Recognizer.
	// Each version must have a unique name within the Entity Recognizer.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName pulumix.Input[*string]
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix pulumix.Input[*string]
	// ID or ARN of a KMS Key used to encrypt storage volumes during job processing.
	VolumeKmsKeyId pulumix.Input[*string]
	// Configuration parameters for VPC to contain Entity Recognizer resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig pulumix.Input[*EntityRecognizerVpcConfigArgs]
}

func (EntityRecognizerState) ElementType() reflect.Type {
	return reflect.TypeOf((*entityRecognizerState)(nil)).Elem()
}

type entityRecognizerArgs struct {
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn string `pulumi:"dataAccessRoleArn"`
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig EntityRecognizerInputDataConfig `pulumi:"inputDataConfig"`
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode string `pulumi:"languageCode"`
	// The ID or ARN of a KMS Key used to encrypt trained Entity Recognizers.
	ModelKmsKeyId *string `pulumi:"modelKmsKeyId"`
	// Name for the Entity Recognizer.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Name for the version of the Entity Recognizer.
	// Each version must have a unique name within the Entity Recognizer.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName *string `pulumi:"versionName"`
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix *string `pulumi:"versionNamePrefix"`
	// ID or ARN of a KMS Key used to encrypt storage volumes during job processing.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// Configuration parameters for VPC to contain Entity Recognizer resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig *EntityRecognizerVpcConfig `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a EntityRecognizer resource.
type EntityRecognizerArgs struct {
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn pulumix.Input[string]
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig pulumix.Input[*EntityRecognizerInputDataConfigArgs]
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode pulumix.Input[string]
	// The ID or ARN of a KMS Key used to encrypt trained Entity Recognizers.
	ModelKmsKeyId pulumix.Input[*string]
	// Name for the Entity Recognizer.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Name for the version of the Entity Recognizer.
	// Each version must have a unique name within the Entity Recognizer.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName pulumix.Input[*string]
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix pulumix.Input[*string]
	// ID or ARN of a KMS Key used to encrypt storage volumes during job processing.
	VolumeKmsKeyId pulumix.Input[*string]
	// Configuration parameters for VPC to contain Entity Recognizer resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig pulumix.Input[*EntityRecognizerVpcConfigArgs]
}

func (EntityRecognizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*entityRecognizerArgs)(nil)).Elem()
}

type EntityRecognizerOutput struct{ *pulumi.OutputState }

func (EntityRecognizerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizer)(nil)).Elem()
}

func (o EntityRecognizerOutput) ToEntityRecognizerOutput() EntityRecognizerOutput {
	return o
}

func (o EntityRecognizerOutput) ToEntityRecognizerOutputWithContext(ctx context.Context) EntityRecognizerOutput {
	return o
}

func (o EntityRecognizerOutput) ToOutput(ctx context.Context) pulumix.Output[EntityRecognizer] {
	return pulumix.Output[EntityRecognizer]{
		OutputState: o.OutputState,
	}
}

// ARN of the Entity Recognizer version.
func (o EntityRecognizerOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
func (o EntityRecognizerOutput) DataAccessRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.Output[string] { return v.DataAccessRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration for the training and testing data.
// See the `inputDataConfig` Configuration Block section below.
func (o EntityRecognizerOutput) InputDataConfig() pulumix.GPtrOutput[EntityRecognizerInputDataConfig, EntityRecognizerInputDataConfigOutput] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.GPtrOutput[EntityRecognizerInputDataConfig, EntityRecognizerInputDataConfigOutput] {
		return v.InputDataConfig
	})
	unwrapped := pulumix.Flatten[*EntityRecognizerInputDataConfig, pulumix.GPtrOutput[EntityRecognizerInputDataConfig, EntityRecognizerInputDataConfigOutput]](value)
	return pulumix.GPtrOutput[EntityRecognizerInputDataConfig, EntityRecognizerInputDataConfigOutput]{OutputState: unwrapped.OutputState}
}

// Two-letter language code for the language.
// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
func (o EntityRecognizerOutput) LanguageCode() pulumix.Output[string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.Output[string] { return v.LanguageCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID or ARN of a KMS Key used to encrypt trained Entity Recognizers.
func (o EntityRecognizerOutput) ModelKmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.Output[*string] { return v.ModelKmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name for the Entity Recognizer.
// Has a maximum length of 63 characters.
// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
//
// The following arguments are optional:
func (o EntityRecognizerOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
func (o EntityRecognizerOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o EntityRecognizerOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Name for the version of the Entity Recognizer.
// Each version must have a unique name within the Entity Recognizer.
// If omitted, the provider will assign a random, unique version name.
// If explicitly set to `""`, no version name will be set.
// Has a maximum length of 63 characters.
// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
// Conflicts with `versionNamePrefix`.
func (o EntityRecognizerOutput) VersionName() pulumix.Output[string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.Output[string] { return v.VersionName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique version name beginning with the specified prefix.
// Has a maximum length of 37 characters.
// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
// Conflicts with `versionName`.
func (o EntityRecognizerOutput) VersionNamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.Output[string] { return v.VersionNamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID or ARN of a KMS Key used to encrypt storage volumes during job processing.
func (o EntityRecognizerOutput) VolumeKmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.Output[*string] { return v.VolumeKmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration parameters for VPC to contain Entity Recognizer resources.
// See the `vpcConfig` Configuration Block section below.
func (o EntityRecognizerOutput) VpcConfig() pulumix.GPtrOutput[EntityRecognizerVpcConfig, EntityRecognizerVpcConfigOutput] {
	value := pulumix.Apply[EntityRecognizer](o, func(v EntityRecognizer) pulumix.GPtrOutput[EntityRecognizerVpcConfig, EntityRecognizerVpcConfigOutput] {
		return v.VpcConfig
	})
	unwrapped := pulumix.Flatten[*EntityRecognizerVpcConfig, pulumix.GPtrOutput[EntityRecognizerVpcConfig, EntityRecognizerVpcConfigOutput]](value)
	return pulumix.GPtrOutput[EntityRecognizerVpcConfig, EntityRecognizerVpcConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(EntityRecognizerOutput{})
}
