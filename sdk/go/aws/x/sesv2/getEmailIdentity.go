// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sesv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS SESv2 (Simple Email V2) Email Identity.
func LookupEmailIdentity(ctx *pulumi.Context, args *LookupEmailIdentityArgs, opts ...pulumi.InvokeOption) (*LookupEmailIdentityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEmailIdentityResult
	err := ctx.Invoke("aws:sesv2/getEmailIdentity:getEmailIdentity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEmailIdentity.
type LookupEmailIdentityArgs struct {
	// The name of the email identity.
	EmailIdentity string `pulumi:"emailIdentity"`
	// Key-value mapping of resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getEmailIdentity.
type LookupEmailIdentityResult struct {
	// ARN of the Email Identity.
	Arn                  string `pulumi:"arn"`
	ConfigurationSetName string `pulumi:"configurationSetName"`
	// A list of objects that contains at most one element with information about the private key and selector that you want to use to configure DKIM for the identity for Bring Your Own DKIM (BYODKIM) for the identity, or, configures the key length to be used for Easy DKIM.
	DkimSigningAttributes []GetEmailIdentityDkimSigningAttribute `pulumi:"dkimSigningAttributes"`
	EmailIdentity         string                                 `pulumi:"emailIdentity"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The email identity type. Valid values: `EMAIL_ADDRESS`, `DOMAIN`.
	IdentityType string `pulumi:"identityType"`
	// Key-value mapping of resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Specifies whether or not the identity is verified.
	VerifiedForSendingStatus bool `pulumi:"verifiedForSendingStatus"`
}

func LookupEmailIdentityOutput(ctx *pulumi.Context, args LookupEmailIdentityOutputArgs, opts ...pulumi.InvokeOption) LookupEmailIdentityResultOutput {
	outputResult := pulumix.ApplyErr[*LookupEmailIdentityArgs](args.ToOutput(), func(plainArgs *LookupEmailIdentityArgs) (*LookupEmailIdentityResult, error) {
		return LookupEmailIdentity(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupEmailIdentityResultOutput, *LookupEmailIdentityResult](outputResult)
}

// A collection of arguments for invoking getEmailIdentity.
type LookupEmailIdentityOutputArgs struct {
	// The name of the email identity.
	EmailIdentity pulumix.Input[string] `pulumi:"emailIdentity"`
	// Key-value mapping of resource tags.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupEmailIdentityOutputArgs) ToOutput() pulumix.Output[*LookupEmailIdentityArgs] {
	allArgs := pulumix.All(
		args.EmailIdentity.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupEmailIdentityArgs {
		return &LookupEmailIdentityArgs{
			EmailIdentity: resolvedArgs[0].(string),
			Tags:          resolvedArgs[1].(map[string]string),
		}
	})
}

type LookupEmailIdentityResultOutput struct{ *pulumi.OutputState }

func (LookupEmailIdentityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmailIdentityResult)(nil)).Elem()
}

func (o LookupEmailIdentityResultOutput) ToOutput(context.Context) pulumix.Output[*LookupEmailIdentityResult] {
	return pulumix.Output[*LookupEmailIdentityResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupEmailIdentityResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) string { return v.Arn })
}

func (o LookupEmailIdentityResultOutput) ConfigurationSetName() pulumix.Output[string] {
	return pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) string { return v.ConfigurationSetName })
}

func (o LookupEmailIdentityResultOutput) DkimSigningAttributes() pulumix.GArrayOutput[GetEmailIdentityDkimSigningAttribute, GetEmailIdentityDkimSigningAttributeOutput] {
	value := pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) []GetEmailIdentityDkimSigningAttribute {
		return v.DkimSigningAttributes
	})
	return pulumix.GArrayOutput[GetEmailIdentityDkimSigningAttribute, GetEmailIdentityDkimSigningAttributeOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupEmailIdentityResultOutput) EmailIdentity() pulumix.Output[string] {
	return pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) string { return v.EmailIdentity })
}

func (o LookupEmailIdentityResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) string { return v.Id })
}

func (o LookupEmailIdentityResultOutput) IdentityType() pulumix.Output[string] {
	return pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) string { return v.IdentityType })
}

func (o LookupEmailIdentityResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupEmailIdentityResultOutput) VerifiedForSendingStatus() pulumix.Output[bool] {
	return pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) bool { return v.VerifiedForSendingStatus })
}
