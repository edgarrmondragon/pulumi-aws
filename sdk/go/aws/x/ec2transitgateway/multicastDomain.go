// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EC2 Transit Gateway Multicast Domain.
type MulticastDomain struct {
	pulumi.CustomResourceState

	// EC2 Transit Gateway Multicast Domain Amazon Resource Name (ARN).
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	AutoAcceptSharedAssociations pulumix.Output[*string] `pulumi:"autoAcceptSharedAssociations"`
	// Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	Igmpv2Support pulumix.Output[*string] `pulumi:"igmpv2Support"`
	// Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	StaticSourcesSupport pulumix.Output[*string] `pulumi:"staticSourcesSupport"`
	// Key-value tags for the EC2 Transit Gateway Multicast Domain. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// EC2 Transit Gateway identifier. The EC2 Transit Gateway must have `multicastSupport` enabled.
	TransitGatewayId pulumix.Output[string] `pulumi:"transitGatewayId"`
}

// NewMulticastDomain registers a new resource with the given unique name, arguments, and options.
func NewMulticastDomain(ctx *pulumi.Context,
	name string, args *MulticastDomainArgs, opts ...pulumi.ResourceOption) (*MulticastDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TransitGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MulticastDomain
	err := ctx.RegisterResource("aws:ec2transitgateway/multicastDomain:MulticastDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMulticastDomain gets an existing MulticastDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMulticastDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MulticastDomainState, opts ...pulumi.ResourceOption) (*MulticastDomain, error) {
	var resource MulticastDomain
	err := ctx.ReadResource("aws:ec2transitgateway/multicastDomain:MulticastDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MulticastDomain resources.
type multicastDomainState struct {
	// EC2 Transit Gateway Multicast Domain Amazon Resource Name (ARN).
	Arn *string `pulumi:"arn"`
	// Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	AutoAcceptSharedAssociations *string `pulumi:"autoAcceptSharedAssociations"`
	// Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	Igmpv2Support *string `pulumi:"igmpv2Support"`
	// Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
	OwnerId *string `pulumi:"ownerId"`
	// Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	StaticSourcesSupport *string `pulumi:"staticSourcesSupport"`
	// Key-value tags for the EC2 Transit Gateway Multicast Domain. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// EC2 Transit Gateway identifier. The EC2 Transit Gateway must have `multicastSupport` enabled.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
}

type MulticastDomainState struct {
	// EC2 Transit Gateway Multicast Domain Amazon Resource Name (ARN).
	Arn pulumix.Input[*string]
	// Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	AutoAcceptSharedAssociations pulumix.Input[*string]
	// Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	Igmpv2Support pulumix.Input[*string]
	// Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
	OwnerId pulumix.Input[*string]
	// Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	StaticSourcesSupport pulumix.Input[*string]
	// Key-value tags for the EC2 Transit Gateway Multicast Domain. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// EC2 Transit Gateway identifier. The EC2 Transit Gateway must have `multicastSupport` enabled.
	TransitGatewayId pulumix.Input[*string]
}

func (MulticastDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*multicastDomainState)(nil)).Elem()
}

type multicastDomainArgs struct {
	// Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	AutoAcceptSharedAssociations *string `pulumi:"autoAcceptSharedAssociations"`
	// Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	Igmpv2Support *string `pulumi:"igmpv2Support"`
	// Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	StaticSourcesSupport *string `pulumi:"staticSourcesSupport"`
	// Key-value tags for the EC2 Transit Gateway Multicast Domain. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// EC2 Transit Gateway identifier. The EC2 Transit Gateway must have `multicastSupport` enabled.
	TransitGatewayId string `pulumi:"transitGatewayId"`
}

// The set of arguments for constructing a MulticastDomain resource.
type MulticastDomainArgs struct {
	// Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	AutoAcceptSharedAssociations pulumix.Input[*string]
	// Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	Igmpv2Support pulumix.Input[*string]
	// Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
	StaticSourcesSupport pulumix.Input[*string]
	// Key-value tags for the EC2 Transit Gateway Multicast Domain. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// EC2 Transit Gateway identifier. The EC2 Transit Gateway must have `multicastSupport` enabled.
	TransitGatewayId pulumix.Input[string]
}

func (MulticastDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*multicastDomainArgs)(nil)).Elem()
}

type MulticastDomainOutput struct{ *pulumi.OutputState }

func (MulticastDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MulticastDomain)(nil)).Elem()
}

func (o MulticastDomainOutput) ToMulticastDomainOutput() MulticastDomainOutput {
	return o
}

func (o MulticastDomainOutput) ToMulticastDomainOutputWithContext(ctx context.Context) MulticastDomainOutput {
	return o
}

func (o MulticastDomainOutput) ToOutput(ctx context.Context) pulumix.Output[MulticastDomain] {
	return pulumix.Output[MulticastDomain]{
		OutputState: o.OutputState,
	}
}

// EC2 Transit Gateway Multicast Domain Amazon Resource Name (ARN).
func (o MulticastDomainOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[MulticastDomain](o, func(v MulticastDomain) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
func (o MulticastDomainOutput) AutoAcceptSharedAssociations() pulumix.Output[*string] {
	value := pulumix.Apply[MulticastDomain](o, func(v MulticastDomain) pulumix.Output[*string] { return v.AutoAcceptSharedAssociations })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
func (o MulticastDomainOutput) Igmpv2Support() pulumix.Output[*string] {
	value := pulumix.Apply[MulticastDomain](o, func(v MulticastDomain) pulumix.Output[*string] { return v.Igmpv2Support })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
func (o MulticastDomainOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[MulticastDomain](o, func(v MulticastDomain) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain. Valid values: `disable`, `enable`. Default value: `disable`.
func (o MulticastDomainOutput) StaticSourcesSupport() pulumix.Output[*string] {
	value := pulumix.Apply[MulticastDomain](o, func(v MulticastDomain) pulumix.Output[*string] { return v.StaticSourcesSupport })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value tags for the EC2 Transit Gateway Multicast Domain. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o MulticastDomainOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[MulticastDomain](o, func(v MulticastDomain) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o MulticastDomainOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[MulticastDomain](o, func(v MulticastDomain) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// EC2 Transit Gateway identifier. The EC2 Transit Gateway must have `multicastSupport` enabled.
func (o MulticastDomainOutput) TransitGatewayId() pulumix.Output[string] {
	value := pulumix.Apply[MulticastDomain](o, func(v MulticastDomain) pulumix.Output[string] { return v.TransitGatewayId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(MulticastDomainOutput{})
}
