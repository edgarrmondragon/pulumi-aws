// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Attaches a Lightsail Instance to a Lightsail Load Balancer.
type LbAttachment struct {
	pulumi.CustomResourceState

	// The name of the instance to attach to the load balancer.
	InstanceName pulumix.Output[string] `pulumi:"instanceName"`
	// The name of the Lightsail load balancer.
	LbName pulumix.Output[string] `pulumi:"lbName"`
}

// NewLbAttachment registers a new resource with the given unique name, arguments, and options.
func NewLbAttachment(ctx *pulumi.Context,
	name string, args *LbAttachmentArgs, opts ...pulumi.ResourceOption) (*LbAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.LbName == nil {
		return nil, errors.New("invalid value for required argument 'LbName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LbAttachment
	err := ctx.RegisterResource("aws:lightsail/lbAttachment:LbAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbAttachment gets an existing LbAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbAttachmentState, opts ...pulumi.ResourceOption) (*LbAttachment, error) {
	var resource LbAttachment
	err := ctx.ReadResource("aws:lightsail/lbAttachment:LbAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbAttachment resources.
type lbAttachmentState struct {
	// The name of the instance to attach to the load balancer.
	InstanceName *string `pulumi:"instanceName"`
	// The name of the Lightsail load balancer.
	LbName *string `pulumi:"lbName"`
}

type LbAttachmentState struct {
	// The name of the instance to attach to the load balancer.
	InstanceName pulumix.Input[*string]
	// The name of the Lightsail load balancer.
	LbName pulumix.Input[*string]
}

func (LbAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbAttachmentState)(nil)).Elem()
}

type lbAttachmentArgs struct {
	// The name of the instance to attach to the load balancer.
	InstanceName string `pulumi:"instanceName"`
	// The name of the Lightsail load balancer.
	LbName string `pulumi:"lbName"`
}

// The set of arguments for constructing a LbAttachment resource.
type LbAttachmentArgs struct {
	// The name of the instance to attach to the load balancer.
	InstanceName pulumix.Input[string]
	// The name of the Lightsail load balancer.
	LbName pulumix.Input[string]
}

func (LbAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbAttachmentArgs)(nil)).Elem()
}

type LbAttachmentOutput struct{ *pulumi.OutputState }

func (LbAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbAttachment)(nil)).Elem()
}

func (o LbAttachmentOutput) ToLbAttachmentOutput() LbAttachmentOutput {
	return o
}

func (o LbAttachmentOutput) ToLbAttachmentOutputWithContext(ctx context.Context) LbAttachmentOutput {
	return o
}

func (o LbAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[LbAttachment] {
	return pulumix.Output[LbAttachment]{
		OutputState: o.OutputState,
	}
}

// The name of the instance to attach to the load balancer.
func (o LbAttachmentOutput) InstanceName() pulumix.Output[string] {
	value := pulumix.Apply[LbAttachment](o, func(v LbAttachment) pulumix.Output[string] { return v.InstanceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the Lightsail load balancer.
func (o LbAttachmentOutput) LbName() pulumix.Output[string] {
	value := pulumix.Apply[LbAttachment](o, func(v LbAttachment) pulumix.Output[string] { return v.LbName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(LbAttachmentOutput{})
}
