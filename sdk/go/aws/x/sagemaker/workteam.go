// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker Workteam resource.
type Workteam struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this Workteam.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A description of the work team.
	Description pulumix.Output[string] `pulumi:"description"`
	// A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognitoMemberDefinition`. For workforces created using your own OIDC identity provider (IdP) use `oidcMemberDefinition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
	MemberDefinitions pulumix.GArrayOutput[WorkteamMemberDefinition, WorkteamMemberDefinitionOutput] `pulumi:"memberDefinitions"`
	// Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
	NotificationConfiguration pulumix.GPtrOutput[WorkteamNotificationConfiguration, WorkteamNotificationConfigurationOutput] `pulumi:"notificationConfiguration"`
	// The subdomain for your OIDC Identity Provider.
	Subdomain pulumix.Output[string] `pulumi:"subdomain"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The name of the Workteam (must be unique).
	WorkforceName pulumix.Output[string] `pulumi:"workforceName"`
	// The name of the workforce.
	WorkteamName pulumix.Output[string] `pulumi:"workteamName"`
}

// NewWorkteam registers a new resource with the given unique name, arguments, and options.
func NewWorkteam(ctx *pulumi.Context,
	name string, args *WorkteamArgs, opts ...pulumi.ResourceOption) (*Workteam, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.MemberDefinitions == nil {
		return nil, errors.New("invalid value for required argument 'MemberDefinitions'")
	}
	if args.WorkforceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkforceName'")
	}
	if args.WorkteamName == nil {
		return nil, errors.New("invalid value for required argument 'WorkteamName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Workteam
	err := ctx.RegisterResource("aws:sagemaker/workteam:Workteam", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkteam gets an existing Workteam resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkteam(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkteamState, opts ...pulumi.ResourceOption) (*Workteam, error) {
	var resource Workteam
	err := ctx.ReadResource("aws:sagemaker/workteam:Workteam", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workteam resources.
type workteamState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Workteam.
	Arn *string `pulumi:"arn"`
	// A description of the work team.
	Description *string `pulumi:"description"`
	// A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognitoMemberDefinition`. For workforces created using your own OIDC identity provider (IdP) use `oidcMemberDefinition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
	MemberDefinitions []WorkteamMemberDefinition `pulumi:"memberDefinitions"`
	// Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
	NotificationConfiguration *WorkteamNotificationConfiguration `pulumi:"notificationConfiguration"`
	// The subdomain for your OIDC Identity Provider.
	Subdomain *string `pulumi:"subdomain"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The name of the Workteam (must be unique).
	WorkforceName *string `pulumi:"workforceName"`
	// The name of the workforce.
	WorkteamName *string `pulumi:"workteamName"`
}

type WorkteamState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Workteam.
	Arn pulumix.Input[*string]
	// A description of the work team.
	Description pulumix.Input[*string]
	// A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognitoMemberDefinition`. For workforces created using your own OIDC identity provider (IdP) use `oidcMemberDefinition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
	MemberDefinitions pulumix.Input[[]*WorkteamMemberDefinitionArgs]
	// Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
	NotificationConfiguration pulumix.Input[*WorkteamNotificationConfigurationArgs]
	// The subdomain for your OIDC Identity Provider.
	Subdomain pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The name of the Workteam (must be unique).
	WorkforceName pulumix.Input[*string]
	// The name of the workforce.
	WorkteamName pulumix.Input[*string]
}

func (WorkteamState) ElementType() reflect.Type {
	return reflect.TypeOf((*workteamState)(nil)).Elem()
}

type workteamArgs struct {
	// A description of the work team.
	Description string `pulumi:"description"`
	// A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognitoMemberDefinition`. For workforces created using your own OIDC identity provider (IdP) use `oidcMemberDefinition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
	MemberDefinitions []WorkteamMemberDefinition `pulumi:"memberDefinitions"`
	// Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
	NotificationConfiguration *WorkteamNotificationConfiguration `pulumi:"notificationConfiguration"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The name of the Workteam (must be unique).
	WorkforceName string `pulumi:"workforceName"`
	// The name of the workforce.
	WorkteamName string `pulumi:"workteamName"`
}

// The set of arguments for constructing a Workteam resource.
type WorkteamArgs struct {
	// A description of the work team.
	Description pulumix.Input[string]
	// A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognitoMemberDefinition`. For workforces created using your own OIDC identity provider (IdP) use `oidcMemberDefinition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
	MemberDefinitions pulumix.Input[[]*WorkteamMemberDefinitionArgs]
	// Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
	NotificationConfiguration pulumix.Input[*WorkteamNotificationConfigurationArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The name of the Workteam (must be unique).
	WorkforceName pulumix.Input[string]
	// The name of the workforce.
	WorkteamName pulumix.Input[string]
}

func (WorkteamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workteamArgs)(nil)).Elem()
}

type WorkteamOutput struct{ *pulumi.OutputState }

func (WorkteamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Workteam)(nil)).Elem()
}

func (o WorkteamOutput) ToWorkteamOutput() WorkteamOutput {
	return o
}

func (o WorkteamOutput) ToWorkteamOutputWithContext(ctx context.Context) WorkteamOutput {
	return o
}

func (o WorkteamOutput) ToOutput(ctx context.Context) pulumix.Output[Workteam] {
	return pulumix.Output[Workteam]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) assigned by AWS to this Workteam.
func (o WorkteamOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Workteam](o, func(v Workteam) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description of the work team.
func (o WorkteamOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[Workteam](o, func(v Workteam) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognitoMemberDefinition`. For workforces created using your own OIDC identity provider (IdP) use `oidcMemberDefinition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
func (o WorkteamOutput) MemberDefinitions() pulumix.GArrayOutput[WorkteamMemberDefinition, WorkteamMemberDefinitionOutput] {
	value := pulumix.Apply[Workteam](o, func(v Workteam) pulumix.GArrayOutput[WorkteamMemberDefinition, WorkteamMemberDefinitionOutput] {
		return v.MemberDefinitions
	})
	unwrapped := pulumix.Flatten[[]WorkteamMemberDefinition, pulumix.GArrayOutput[WorkteamMemberDefinition, WorkteamMemberDefinitionOutput]](value)
	return pulumix.GArrayOutput[WorkteamMemberDefinition, WorkteamMemberDefinitionOutput]{OutputState: unwrapped.OutputState}
}

// Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
func (o WorkteamOutput) NotificationConfiguration() pulumix.GPtrOutput[WorkteamNotificationConfiguration, WorkteamNotificationConfigurationOutput] {
	value := pulumix.Apply[Workteam](o, func(v Workteam) pulumix.GPtrOutput[WorkteamNotificationConfiguration, WorkteamNotificationConfigurationOutput] {
		return v.NotificationConfiguration
	})
	unwrapped := pulumix.Flatten[*WorkteamNotificationConfiguration, pulumix.GPtrOutput[WorkteamNotificationConfiguration, WorkteamNotificationConfigurationOutput]](value)
	return pulumix.GPtrOutput[WorkteamNotificationConfiguration, WorkteamNotificationConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The subdomain for your OIDC Identity Provider.
func (o WorkteamOutput) Subdomain() pulumix.Output[string] {
	value := pulumix.Apply[Workteam](o, func(v Workteam) pulumix.Output[string] { return v.Subdomain })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o WorkteamOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Workteam](o, func(v Workteam) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o WorkteamOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Workteam](o, func(v Workteam) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The name of the Workteam (must be unique).
func (o WorkteamOutput) WorkforceName() pulumix.Output[string] {
	value := pulumix.Apply[Workteam](o, func(v Workteam) pulumix.Output[string] { return v.WorkforceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the workforce.
func (o WorkteamOutput) WorkteamName() pulumix.Output[string] {
	value := pulumix.Apply[Workteam](o, func(v Workteam) pulumix.Output[string] { return v.WorkteamName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(WorkteamOutput{})
}
