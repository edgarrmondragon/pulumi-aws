// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an AWS Storage Gateway SMB File Share.
type SmbFileShare struct {
	pulumi.CustomResourceState

	// The files and folders on this share will only be visible to users with read access. Default value is `false`.
	AccessBasedEnumeration pulumix.Output[*bool] `pulumi:"accessBasedEnumeration"`
	// A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	AdminUserLists pulumix.ArrayOutput[string] `pulumi:"adminUserLists"`
	// Amazon Resource Name (ARN) of the SMB File Share.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
	AuditDestinationArn pulumix.Output[*string] `pulumi:"auditDestinationArn"`
	// The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
	Authentication pulumix.Output[*string] `pulumi:"authentication"`
	// The region of the S3 buck used by the file share. Required when specifying a `vpcEndpointDnsName`.
	BucketRegion pulumix.Output[*string] `pulumi:"bucketRegion"`
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes pulumix.GPtrOutput[SmbFileShareCacheAttributes, SmbFileShareCacheAttributesOutput] `pulumi:"cacheAttributes"`
	// The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
	CaseSensitivity pulumix.Output[*string] `pulumi:"caseSensitivity"`
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass pulumix.Output[*string] `pulumi:"defaultStorageClass"`
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName pulumix.Output[string] `pulumi:"fileShareName"`
	// ID of the SMB File Share.
	FileshareId pulumix.Output[string] `pulumi:"fileshareId"`
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn pulumix.Output[string] `pulumi:"gatewayArn"`
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled pulumix.Output[*bool] `pulumi:"guessMimeTypeEnabled"`
	// A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	InvalidUserLists pulumix.ArrayOutput[string] `pulumi:"invalidUserLists"`
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted pulumix.Output[*bool] `pulumi:"kmsEncrypted"`
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn pulumix.Output[*string] `pulumi:"kmsKeyArn"`
	// The ARN of the backed storage used for storing file data.
	LocationArn pulumix.Output[string] `pulumi:"locationArn"`
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy pulumix.Output[*string] `pulumi:"notificationPolicy"`
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl pulumix.Output[*string] `pulumi:"objectAcl"`
	// Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
	OplocksEnabled pulumix.Output[bool] `pulumi:"oplocksEnabled"`
	// File share path used by the NFS client to identify the mount point.
	Path pulumix.Output[string] `pulumi:"path"`
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly pulumix.Output[*bool] `pulumi:"readOnly"`
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays pulumix.Output[*bool] `pulumi:"requesterPays"`
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
	SmbAclEnabled pulumix.Output[*bool] `pulumi:"smbAclEnabled"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
	ValidUserLists pulumix.ArrayOutput[string] `pulumi:"validUserLists"`
	// The DNS name of the VPC endpoint for S3 private link.
	VpcEndpointDnsName pulumix.Output[*string] `pulumi:"vpcEndpointDnsName"`
}

// NewSmbFileShare registers a new resource with the given unique name, arguments, and options.
func NewSmbFileShare(ctx *pulumi.Context,
	name string, args *SmbFileShareArgs, opts ...pulumi.ResourceOption) (*SmbFileShare, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayArn == nil {
		return nil, errors.New("invalid value for required argument 'GatewayArn'")
	}
	if args.LocationArn == nil {
		return nil, errors.New("invalid value for required argument 'LocationArn'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SmbFileShare
	err := ctx.RegisterResource("aws:storagegateway/smbFileShare:SmbFileShare", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSmbFileShare gets an existing SmbFileShare resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSmbFileShare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SmbFileShareState, opts ...pulumi.ResourceOption) (*SmbFileShare, error) {
	var resource SmbFileShare
	err := ctx.ReadResource("aws:storagegateway/smbFileShare:SmbFileShare", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SmbFileShare resources.
type smbFileShareState struct {
	// The files and folders on this share will only be visible to users with read access. Default value is `false`.
	AccessBasedEnumeration *bool `pulumi:"accessBasedEnumeration"`
	// A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	AdminUserLists []string `pulumi:"adminUserLists"`
	// Amazon Resource Name (ARN) of the SMB File Share.
	Arn *string `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
	AuditDestinationArn *string `pulumi:"auditDestinationArn"`
	// The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
	Authentication *string `pulumi:"authentication"`
	// The region of the S3 buck used by the file share. Required when specifying a `vpcEndpointDnsName`.
	BucketRegion *string `pulumi:"bucketRegion"`
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes *SmbFileShareCacheAttributes `pulumi:"cacheAttributes"`
	// The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
	CaseSensitivity *string `pulumi:"caseSensitivity"`
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass *string `pulumi:"defaultStorageClass"`
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName *string `pulumi:"fileShareName"`
	// ID of the SMB File Share.
	FileshareId *string `pulumi:"fileshareId"`
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn *string `pulumi:"gatewayArn"`
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled *bool `pulumi:"guessMimeTypeEnabled"`
	// A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	InvalidUserLists []string `pulumi:"invalidUserLists"`
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted *bool `pulumi:"kmsEncrypted"`
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The ARN of the backed storage used for storing file data.
	LocationArn *string `pulumi:"locationArn"`
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy *string `pulumi:"notificationPolicy"`
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl *string `pulumi:"objectAcl"`
	// Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
	OplocksEnabled *bool `pulumi:"oplocksEnabled"`
	// File share path used by the NFS client to identify the mount point.
	Path *string `pulumi:"path"`
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly *bool `pulumi:"readOnly"`
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays *bool `pulumi:"requesterPays"`
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn *string `pulumi:"roleArn"`
	// Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
	SmbAclEnabled *bool `pulumi:"smbAclEnabled"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
	ValidUserLists []string `pulumi:"validUserLists"`
	// The DNS name of the VPC endpoint for S3 private link.
	VpcEndpointDnsName *string `pulumi:"vpcEndpointDnsName"`
}

type SmbFileShareState struct {
	// The files and folders on this share will only be visible to users with read access. Default value is `false`.
	AccessBasedEnumeration pulumix.Input[*bool]
	// A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	AdminUserLists pulumix.Input[[]string]
	// Amazon Resource Name (ARN) of the SMB File Share.
	Arn pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
	AuditDestinationArn pulumix.Input[*string]
	// The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
	Authentication pulumix.Input[*string]
	// The region of the S3 buck used by the file share. Required when specifying a `vpcEndpointDnsName`.
	BucketRegion pulumix.Input[*string]
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes pulumix.Input[*SmbFileShareCacheAttributesArgs]
	// The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
	CaseSensitivity pulumix.Input[*string]
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass pulumix.Input[*string]
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName pulumix.Input[*string]
	// ID of the SMB File Share.
	FileshareId pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn pulumix.Input[*string]
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled pulumix.Input[*bool]
	// A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	InvalidUserLists pulumix.Input[[]string]
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted pulumix.Input[*bool]
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn pulumix.Input[*string]
	// The ARN of the backed storage used for storing file data.
	LocationArn pulumix.Input[*string]
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy pulumix.Input[*string]
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl pulumix.Input[*string]
	// Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
	OplocksEnabled pulumix.Input[*bool]
	// File share path used by the NFS client to identify the mount point.
	Path pulumix.Input[*string]
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly pulumix.Input[*bool]
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays pulumix.Input[*bool]
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn pulumix.Input[*string]
	// Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
	SmbAclEnabled pulumix.Input[*bool]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
	ValidUserLists pulumix.Input[[]string]
	// The DNS name of the VPC endpoint for S3 private link.
	VpcEndpointDnsName pulumix.Input[*string]
}

func (SmbFileShareState) ElementType() reflect.Type {
	return reflect.TypeOf((*smbFileShareState)(nil)).Elem()
}

type smbFileShareArgs struct {
	// The files and folders on this share will only be visible to users with read access. Default value is `false`.
	AccessBasedEnumeration *bool `pulumi:"accessBasedEnumeration"`
	// A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	AdminUserLists []string `pulumi:"adminUserLists"`
	// The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
	AuditDestinationArn *string `pulumi:"auditDestinationArn"`
	// The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
	Authentication *string `pulumi:"authentication"`
	// The region of the S3 buck used by the file share. Required when specifying a `vpcEndpointDnsName`.
	BucketRegion *string `pulumi:"bucketRegion"`
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes *SmbFileShareCacheAttributes `pulumi:"cacheAttributes"`
	// The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
	CaseSensitivity *string `pulumi:"caseSensitivity"`
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass *string `pulumi:"defaultStorageClass"`
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName *string `pulumi:"fileShareName"`
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn string `pulumi:"gatewayArn"`
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled *bool `pulumi:"guessMimeTypeEnabled"`
	// A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	InvalidUserLists []string `pulumi:"invalidUserLists"`
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted *bool `pulumi:"kmsEncrypted"`
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The ARN of the backed storage used for storing file data.
	LocationArn string `pulumi:"locationArn"`
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy *string `pulumi:"notificationPolicy"`
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl *string `pulumi:"objectAcl"`
	// Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
	OplocksEnabled *bool `pulumi:"oplocksEnabled"`
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly *bool `pulumi:"readOnly"`
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays *bool `pulumi:"requesterPays"`
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn string `pulumi:"roleArn"`
	// Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
	SmbAclEnabled *bool `pulumi:"smbAclEnabled"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
	ValidUserLists []string `pulumi:"validUserLists"`
	// The DNS name of the VPC endpoint for S3 private link.
	VpcEndpointDnsName *string `pulumi:"vpcEndpointDnsName"`
}

// The set of arguments for constructing a SmbFileShare resource.
type SmbFileShareArgs struct {
	// The files and folders on this share will only be visible to users with read access. Default value is `false`.
	AccessBasedEnumeration pulumix.Input[*bool]
	// A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	AdminUserLists pulumix.Input[[]string]
	// The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
	AuditDestinationArn pulumix.Input[*string]
	// The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
	Authentication pulumix.Input[*string]
	// The region of the S3 buck used by the file share. Required when specifying a `vpcEndpointDnsName`.
	BucketRegion pulumix.Input[*string]
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes pulumix.Input[*SmbFileShareCacheAttributesArgs]
	// The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
	CaseSensitivity pulumix.Input[*string]
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass pulumix.Input[*string]
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn pulumix.Input[string]
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled pulumix.Input[*bool]
	// A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
	InvalidUserLists pulumix.Input[[]string]
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted pulumix.Input[*bool]
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn pulumix.Input[*string]
	// The ARN of the backed storage used for storing file data.
	LocationArn pulumix.Input[string]
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy pulumix.Input[*string]
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl pulumix.Input[*string]
	// Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
	OplocksEnabled pulumix.Input[*bool]
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly pulumix.Input[*bool]
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays pulumix.Input[*bool]
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn pulumix.Input[string]
	// Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
	SmbAclEnabled pulumix.Input[*bool]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
	ValidUserLists pulumix.Input[[]string]
	// The DNS name of the VPC endpoint for S3 private link.
	VpcEndpointDnsName pulumix.Input[*string]
}

func (SmbFileShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*smbFileShareArgs)(nil)).Elem()
}

type SmbFileShareOutput struct{ *pulumi.OutputState }

func (SmbFileShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbFileShare)(nil)).Elem()
}

func (o SmbFileShareOutput) ToSmbFileShareOutput() SmbFileShareOutput {
	return o
}

func (o SmbFileShareOutput) ToSmbFileShareOutputWithContext(ctx context.Context) SmbFileShareOutput {
	return o
}

func (o SmbFileShareOutput) ToOutput(ctx context.Context) pulumix.Output[SmbFileShare] {
	return pulumix.Output[SmbFileShare]{
		OutputState: o.OutputState,
	}
}

// The files and folders on this share will only be visible to users with read access. Default value is `false`.
func (o SmbFileShareOutput) AccessBasedEnumeration() pulumix.Output[*bool] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*bool] { return v.AccessBasedEnumeration })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
func (o SmbFileShareOutput) AdminUserLists() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.ArrayOutput[string] { return v.AdminUserLists })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of the SMB File Share.
func (o SmbFileShareOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
func (o SmbFileShareOutput) AuditDestinationArn() pulumix.Output[*string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*string] { return v.AuditDestinationArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
func (o SmbFileShareOutput) Authentication() pulumix.Output[*string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*string] { return v.Authentication })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The region of the S3 buck used by the file share. Required when specifying a `vpcEndpointDnsName`.
func (o SmbFileShareOutput) BucketRegion() pulumix.Output[*string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*string] { return v.BucketRegion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Refresh cache information. see Cache Attributes for more details.
func (o SmbFileShareOutput) CacheAttributes() pulumix.GPtrOutput[SmbFileShareCacheAttributes, SmbFileShareCacheAttributesOutput] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.GPtrOutput[SmbFileShareCacheAttributes, SmbFileShareCacheAttributesOutput] {
		return v.CacheAttributes
	})
	unwrapped := pulumix.Flatten[*SmbFileShareCacheAttributes, pulumix.GPtrOutput[SmbFileShareCacheAttributes, SmbFileShareCacheAttributesOutput]](value)
	return pulumix.GPtrOutput[SmbFileShareCacheAttributes, SmbFileShareCacheAttributesOutput]{OutputState: unwrapped.OutputState}
}

// The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
func (o SmbFileShareOutput) CaseSensitivity() pulumix.Output[*string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*string] { return v.CaseSensitivity })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
func (o SmbFileShareOutput) DefaultStorageClass() pulumix.Output[*string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*string] { return v.DefaultStorageClass })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
func (o SmbFileShareOutput) FileShareName() pulumix.Output[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[string] { return v.FileShareName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the SMB File Share.
func (o SmbFileShareOutput) FileshareId() pulumix.Output[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[string] { return v.FileshareId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the file gateway.
func (o SmbFileShareOutput) GatewayArn() pulumix.Output[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[string] { return v.GatewayArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
func (o SmbFileShareOutput) GuessMimeTypeEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*bool] { return v.GuessMimeTypeEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
func (o SmbFileShareOutput) InvalidUserLists() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.ArrayOutput[string] { return v.InvalidUserLists })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
func (o SmbFileShareOutput) KmsEncrypted() pulumix.Output[*bool] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*bool] { return v.KmsEncrypted })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
func (o SmbFileShareOutput) KmsKeyArn() pulumix.Output[*string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*string] { return v.KmsKeyArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN of the backed storage used for storing file data.
func (o SmbFileShareOutput) LocationArn() pulumix.Output[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[string] { return v.LocationArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
func (o SmbFileShareOutput) NotificationPolicy() pulumix.Output[*string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*string] { return v.NotificationPolicy })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Access Control List permission for S3 objects. Defaults to `private`.
func (o SmbFileShareOutput) ObjectAcl() pulumix.Output[*string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*string] { return v.ObjectAcl })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
func (o SmbFileShareOutput) OplocksEnabled() pulumix.Output[bool] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[bool] { return v.OplocksEnabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// File share path used by the NFS client to identify the mount point.
func (o SmbFileShareOutput) Path() pulumix.Output[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[string] { return v.Path })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
func (o SmbFileShareOutput) ReadOnly() pulumix.Output[*bool] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*bool] { return v.ReadOnly })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
func (o SmbFileShareOutput) RequesterPays() pulumix.Output[*bool] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*bool] { return v.RequesterPays })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
func (o SmbFileShareOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
func (o SmbFileShareOutput) SmbAclEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*bool] { return v.SmbAclEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o SmbFileShareOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o SmbFileShareOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add '@' before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
func (o SmbFileShareOutput) ValidUserLists() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.ArrayOutput[string] { return v.ValidUserLists })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The DNS name of the VPC endpoint for S3 private link.
func (o SmbFileShareOutput) VpcEndpointDnsName() pulumix.Output[*string] {
	value := pulumix.Apply[SmbFileShare](o, func(v SmbFileShare) pulumix.Output[*string] { return v.VpcEndpointDnsName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(SmbFileShareOutput{})
}
