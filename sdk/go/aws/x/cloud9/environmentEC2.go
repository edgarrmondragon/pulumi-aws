// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud9

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Cloud9 EC2 Development Environment.
type EnvironmentEC2 struct {
	pulumi.CustomResourceState

	// The ARN of the environment.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The number of minutes until the running instance is shut down after the environment has last been used.
	AutomaticStopTimeMinutes pulumix.Output[*int] `pulumi:"automaticStopTimeMinutes"`
	// The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
	ConnectionType pulumix.Output[*string] `pulumi:"connectionType"`
	// The description of the environment.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The identifier for the Amazon Machine Image (AMI) that's used to create the EC2 instance. Valid values are
	// * `amazonlinux-1-x86_64`
	// * `amazonlinux-2-x86_64`
	// * `ubuntu-18.04-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
	ImageId pulumix.Output[*string] `pulumi:"imageId"`
	// The type of instance to connect to the environment, e.g., `t2.micro`.
	InstanceType pulumix.Output[string] `pulumi:"instanceType"`
	// The name of the environment.
	Name pulumix.Output[string] `pulumi:"name"`
	// The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment's creator.
	OwnerArn pulumix.Output[string] `pulumi:"ownerArn"`
	// The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
	SubnetId pulumix.Output[*string] `pulumi:"subnetId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The type of the environment (e.g., `ssh` or `ec2`)
	Type pulumix.Output[string] `pulumi:"type"`
}

// NewEnvironmentEC2 registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentEC2(ctx *pulumi.Context,
	name string, args *EnvironmentEC2Args, opts ...pulumi.ResourceOption) (*EnvironmentEC2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentEC2
	err := ctx.RegisterResource("aws:cloud9/environmentEC2:EnvironmentEC2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentEC2 gets an existing EnvironmentEC2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentEC2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentEC2State, opts ...pulumi.ResourceOption) (*EnvironmentEC2, error) {
	var resource EnvironmentEC2
	err := ctx.ReadResource("aws:cloud9/environmentEC2:EnvironmentEC2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentEC2 resources.
type environmentEC2State struct {
	// The ARN of the environment.
	Arn *string `pulumi:"arn"`
	// The number of minutes until the running instance is shut down after the environment has last been used.
	AutomaticStopTimeMinutes *int `pulumi:"automaticStopTimeMinutes"`
	// The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
	ConnectionType *string `pulumi:"connectionType"`
	// The description of the environment.
	Description *string `pulumi:"description"`
	// The identifier for the Amazon Machine Image (AMI) that's used to create the EC2 instance. Valid values are
	// * `amazonlinux-1-x86_64`
	// * `amazonlinux-2-x86_64`
	// * `ubuntu-18.04-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
	ImageId *string `pulumi:"imageId"`
	// The type of instance to connect to the environment, e.g., `t2.micro`.
	InstanceType *string `pulumi:"instanceType"`
	// The name of the environment.
	Name *string `pulumi:"name"`
	// The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment's creator.
	OwnerArn *string `pulumi:"ownerArn"`
	// The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
	SubnetId *string `pulumi:"subnetId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The type of the environment (e.g., `ssh` or `ec2`)
	Type *string `pulumi:"type"`
}

type EnvironmentEC2State struct {
	// The ARN of the environment.
	Arn pulumix.Input[*string]
	// The number of minutes until the running instance is shut down after the environment has last been used.
	AutomaticStopTimeMinutes pulumix.Input[*int]
	// The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
	ConnectionType pulumix.Input[*string]
	// The description of the environment.
	Description pulumix.Input[*string]
	// The identifier for the Amazon Machine Image (AMI) that's used to create the EC2 instance. Valid values are
	// * `amazonlinux-1-x86_64`
	// * `amazonlinux-2-x86_64`
	// * `ubuntu-18.04-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
	ImageId pulumix.Input[*string]
	// The type of instance to connect to the environment, e.g., `t2.micro`.
	InstanceType pulumix.Input[*string]
	// The name of the environment.
	Name pulumix.Input[*string]
	// The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment's creator.
	OwnerArn pulumix.Input[*string]
	// The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
	SubnetId pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The type of the environment (e.g., `ssh` or `ec2`)
	Type pulumix.Input[*string]
}

func (EnvironmentEC2State) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentEC2State)(nil)).Elem()
}

type environmentEC2Args struct {
	// The number of minutes until the running instance is shut down after the environment has last been used.
	AutomaticStopTimeMinutes *int `pulumi:"automaticStopTimeMinutes"`
	// The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
	ConnectionType *string `pulumi:"connectionType"`
	// The description of the environment.
	Description *string `pulumi:"description"`
	// The identifier for the Amazon Machine Image (AMI) that's used to create the EC2 instance. Valid values are
	// * `amazonlinux-1-x86_64`
	// * `amazonlinux-2-x86_64`
	// * `ubuntu-18.04-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
	ImageId *string `pulumi:"imageId"`
	// The type of instance to connect to the environment, e.g., `t2.micro`.
	InstanceType string `pulumi:"instanceType"`
	// The name of the environment.
	Name *string `pulumi:"name"`
	// The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment's creator.
	OwnerArn *string `pulumi:"ownerArn"`
	// The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
	SubnetId *string `pulumi:"subnetId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EnvironmentEC2 resource.
type EnvironmentEC2Args struct {
	// The number of minutes until the running instance is shut down after the environment has last been used.
	AutomaticStopTimeMinutes pulumix.Input[*int]
	// The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
	ConnectionType pulumix.Input[*string]
	// The description of the environment.
	Description pulumix.Input[*string]
	// The identifier for the Amazon Machine Image (AMI) that's used to create the EC2 instance. Valid values are
	// * `amazonlinux-1-x86_64`
	// * `amazonlinux-2-x86_64`
	// * `ubuntu-18.04-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
	// * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
	ImageId pulumix.Input[*string]
	// The type of instance to connect to the environment, e.g., `t2.micro`.
	InstanceType pulumix.Input[string]
	// The name of the environment.
	Name pulumix.Input[*string]
	// The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment's creator.
	OwnerArn pulumix.Input[*string]
	// The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
	SubnetId pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (EnvironmentEC2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentEC2Args)(nil)).Elem()
}

type EnvironmentEC2Output struct{ *pulumi.OutputState }

func (EnvironmentEC2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEC2)(nil)).Elem()
}

func (o EnvironmentEC2Output) ToEnvironmentEC2Output() EnvironmentEC2Output {
	return o
}

func (o EnvironmentEC2Output) ToEnvironmentEC2OutputWithContext(ctx context.Context) EnvironmentEC2Output {
	return o
}

func (o EnvironmentEC2Output) ToOutput(ctx context.Context) pulumix.Output[EnvironmentEC2] {
	return pulumix.Output[EnvironmentEC2]{
		OutputState: o.OutputState,
	}
}

// The ARN of the environment.
func (o EnvironmentEC2Output) Arn() pulumix.Output[string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of minutes until the running instance is shut down after the environment has last been used.
func (o EnvironmentEC2Output) AutomaticStopTimeMinutes() pulumix.Output[*int] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[*int] { return v.AutomaticStopTimeMinutes })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
func (o EnvironmentEC2Output) ConnectionType() pulumix.Output[*string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[*string] { return v.ConnectionType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The description of the environment.
func (o EnvironmentEC2Output) Description() pulumix.Output[*string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The identifier for the Amazon Machine Image (AMI) that's used to create the EC2 instance. Valid values are
// * `amazonlinux-1-x86_64`
// * `amazonlinux-2-x86_64`
// * `ubuntu-18.04-x86_64`
// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64`
// * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
// * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
func (o EnvironmentEC2Output) ImageId() pulumix.Output[*string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[*string] { return v.ImageId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The type of instance to connect to the environment, e.g., `t2.micro`.
func (o EnvironmentEC2Output) InstanceType() pulumix.Output[string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[string] { return v.InstanceType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the environment.
func (o EnvironmentEC2Output) Name() pulumix.Output[string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment's creator.
func (o EnvironmentEC2Output) OwnerArn() pulumix.Output[string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[string] { return v.OwnerArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
func (o EnvironmentEC2Output) SubnetId() pulumix.Output[*string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[*string] { return v.SubnetId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o EnvironmentEC2Output) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o EnvironmentEC2Output) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The type of the environment (e.g., `ssh` or `ec2`)
func (o EnvironmentEC2Output) Type() pulumix.Output[string] {
	value := pulumix.Apply[EnvironmentEC2](o, func(v EnvironmentEC2) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentEC2Output{})
}
