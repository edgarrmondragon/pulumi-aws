// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Enables the IPAM Service and promotes a delegated administrator.
type VpcIpamOrganizationAdminAccount struct {
	pulumi.CustomResourceState

	// The Organizations ARN for the delegate account.
	Arn                     pulumix.Output[string] `pulumi:"arn"`
	DelegatedAdminAccountId pulumix.Output[string] `pulumi:"delegatedAdminAccountId"`
	// The Organizations email for the delegate account.
	Email pulumix.Output[string] `pulumi:"email"`
	// The Organizations name for the delegate account.
	Name pulumix.Output[string] `pulumi:"name"`
	// The AWS service principal.
	ServicePrincipal pulumix.Output[string] `pulumi:"servicePrincipal"`
}

// NewVpcIpamOrganizationAdminAccount registers a new resource with the given unique name, arguments, and options.
func NewVpcIpamOrganizationAdminAccount(ctx *pulumi.Context,
	name string, args *VpcIpamOrganizationAdminAccountArgs, opts ...pulumi.ResourceOption) (*VpcIpamOrganizationAdminAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DelegatedAdminAccountId == nil {
		return nil, errors.New("invalid value for required argument 'DelegatedAdminAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcIpamOrganizationAdminAccount
	err := ctx.RegisterResource("aws:ec2/vpcIpamOrganizationAdminAccount:VpcIpamOrganizationAdminAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcIpamOrganizationAdminAccount gets an existing VpcIpamOrganizationAdminAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcIpamOrganizationAdminAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcIpamOrganizationAdminAccountState, opts ...pulumi.ResourceOption) (*VpcIpamOrganizationAdminAccount, error) {
	var resource VpcIpamOrganizationAdminAccount
	err := ctx.ReadResource("aws:ec2/vpcIpamOrganizationAdminAccount:VpcIpamOrganizationAdminAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcIpamOrganizationAdminAccount resources.
type vpcIpamOrganizationAdminAccountState struct {
	// The Organizations ARN for the delegate account.
	Arn                     *string `pulumi:"arn"`
	DelegatedAdminAccountId *string `pulumi:"delegatedAdminAccountId"`
	// The Organizations email for the delegate account.
	Email *string `pulumi:"email"`
	// The Organizations name for the delegate account.
	Name *string `pulumi:"name"`
	// The AWS service principal.
	ServicePrincipal *string `pulumi:"servicePrincipal"`
}

type VpcIpamOrganizationAdminAccountState struct {
	// The Organizations ARN for the delegate account.
	Arn                     pulumix.Input[*string]
	DelegatedAdminAccountId pulumix.Input[*string]
	// The Organizations email for the delegate account.
	Email pulumix.Input[*string]
	// The Organizations name for the delegate account.
	Name pulumix.Input[*string]
	// The AWS service principal.
	ServicePrincipal pulumix.Input[*string]
}

func (VpcIpamOrganizationAdminAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamOrganizationAdminAccountState)(nil)).Elem()
}

type vpcIpamOrganizationAdminAccountArgs struct {
	DelegatedAdminAccountId string `pulumi:"delegatedAdminAccountId"`
}

// The set of arguments for constructing a VpcIpamOrganizationAdminAccount resource.
type VpcIpamOrganizationAdminAccountArgs struct {
	DelegatedAdminAccountId pulumix.Input[string]
}

func (VpcIpamOrganizationAdminAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamOrganizationAdminAccountArgs)(nil)).Elem()
}

type VpcIpamOrganizationAdminAccountOutput struct{ *pulumi.OutputState }

func (VpcIpamOrganizationAdminAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIpamOrganizationAdminAccount)(nil)).Elem()
}

func (o VpcIpamOrganizationAdminAccountOutput) ToVpcIpamOrganizationAdminAccountOutput() VpcIpamOrganizationAdminAccountOutput {
	return o
}

func (o VpcIpamOrganizationAdminAccountOutput) ToVpcIpamOrganizationAdminAccountOutputWithContext(ctx context.Context) VpcIpamOrganizationAdminAccountOutput {
	return o
}

func (o VpcIpamOrganizationAdminAccountOutput) ToOutput(ctx context.Context) pulumix.Output[VpcIpamOrganizationAdminAccount] {
	return pulumix.Output[VpcIpamOrganizationAdminAccount]{
		OutputState: o.OutputState,
	}
}

// The Organizations ARN for the delegate account.
func (o VpcIpamOrganizationAdminAccountOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamOrganizationAdminAccount](o, func(v VpcIpamOrganizationAdminAccount) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o VpcIpamOrganizationAdminAccountOutput) DelegatedAdminAccountId() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamOrganizationAdminAccount](o, func(v VpcIpamOrganizationAdminAccount) pulumix.Output[string] { return v.DelegatedAdminAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Organizations email for the delegate account.
func (o VpcIpamOrganizationAdminAccountOutput) Email() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamOrganizationAdminAccount](o, func(v VpcIpamOrganizationAdminAccount) pulumix.Output[string] { return v.Email })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Organizations name for the delegate account.
func (o VpcIpamOrganizationAdminAccountOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamOrganizationAdminAccount](o, func(v VpcIpamOrganizationAdminAccount) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS service principal.
func (o VpcIpamOrganizationAdminAccountOutput) ServicePrincipal() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamOrganizationAdminAccount](o, func(v VpcIpamOrganizationAdminAccount) pulumix.Output[string] { return v.ServicePrincipal })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(VpcIpamOrganizationAdminAccountOutput{})
}
