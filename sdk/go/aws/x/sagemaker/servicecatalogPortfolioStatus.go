// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages status of Service Catalog in SageMaker. Service Catalog is used to create SageMaker projects.
type ServicecatalogPortfolioStatus struct {
	pulumi.CustomResourceState

	// Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`.
	Status pulumix.Output[string] `pulumi:"status"`
}

// NewServicecatalogPortfolioStatus registers a new resource with the given unique name, arguments, and options.
func NewServicecatalogPortfolioStatus(ctx *pulumi.Context,
	name string, args *ServicecatalogPortfolioStatusArgs, opts ...pulumi.ResourceOption) (*ServicecatalogPortfolioStatus, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServicecatalogPortfolioStatus
	err := ctx.RegisterResource("aws:sagemaker/servicecatalogPortfolioStatus:ServicecatalogPortfolioStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicecatalogPortfolioStatus gets an existing ServicecatalogPortfolioStatus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicecatalogPortfolioStatus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicecatalogPortfolioStatusState, opts ...pulumi.ResourceOption) (*ServicecatalogPortfolioStatus, error) {
	var resource ServicecatalogPortfolioStatus
	err := ctx.ReadResource("aws:sagemaker/servicecatalogPortfolioStatus:ServicecatalogPortfolioStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServicecatalogPortfolioStatus resources.
type servicecatalogPortfolioStatusState struct {
	// Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`.
	Status *string `pulumi:"status"`
}

type ServicecatalogPortfolioStatusState struct {
	// Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`.
	Status pulumix.Input[*string]
}

func (ServicecatalogPortfolioStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicecatalogPortfolioStatusState)(nil)).Elem()
}

type servicecatalogPortfolioStatusArgs struct {
	// Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`.
	Status string `pulumi:"status"`
}

// The set of arguments for constructing a ServicecatalogPortfolioStatus resource.
type ServicecatalogPortfolioStatusArgs struct {
	// Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`.
	Status pulumix.Input[string]
}

func (ServicecatalogPortfolioStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicecatalogPortfolioStatusArgs)(nil)).Elem()
}

type ServicecatalogPortfolioStatusOutput struct{ *pulumi.OutputState }

func (ServicecatalogPortfolioStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicecatalogPortfolioStatus)(nil)).Elem()
}

func (o ServicecatalogPortfolioStatusOutput) ToServicecatalogPortfolioStatusOutput() ServicecatalogPortfolioStatusOutput {
	return o
}

func (o ServicecatalogPortfolioStatusOutput) ToServicecatalogPortfolioStatusOutputWithContext(ctx context.Context) ServicecatalogPortfolioStatusOutput {
	return o
}

func (o ServicecatalogPortfolioStatusOutput) ToOutput(ctx context.Context) pulumix.Output[ServicecatalogPortfolioStatus] {
	return pulumix.Output[ServicecatalogPortfolioStatus]{
		OutputState: o.OutputState,
	}
}

// Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`.
func (o ServicecatalogPortfolioStatusOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[ServicecatalogPortfolioStatus](o, func(v ServicecatalogPortfolioStatus) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ServicecatalogPortfolioStatusOutput{})
}
