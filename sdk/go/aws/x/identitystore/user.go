// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identitystore

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource manages a User resource within an Identity Store.
//
// > **Note:** If you use an external identity provider or Active Directory as your identity source,
// use this resource with caution. IAM Identity Center does not support outbound synchronization,
// so your identity source does not automatically update with the changes that you make to
// users using this resource.
type User struct {
	pulumi.CustomResourceState

	// Details about the user's address. At most 1 address is allowed. Detailed below.
	Addresses pulumix.GPtrOutput[UserAddresses, UserAddressesOutput] `pulumi:"addresses"`
	// The name that is typically displayed when the user is referenced.
	DisplayName pulumix.Output[string] `pulumi:"displayName"`
	// Details about the user's email. At most 1 email is allowed. Detailed below.
	Emails pulumix.GPtrOutput[UserEmails, UserEmailsOutput] `pulumi:"emails"`
	// A list of identifiers issued to this resource by an external identity provider.
	ExternalIds pulumix.GArrayOutput[UserExternalId, UserExternalIdOutput] `pulumi:"externalIds"`
	// The globally unique identifier for the identity store that this user is in.
	IdentityStoreId pulumix.Output[string] `pulumi:"identityStoreId"`
	// The user's geographical region or location.
	Locale pulumix.Output[*string] `pulumi:"locale"`
	// Details about the user's full name. Detailed below.
	Name pulumix.GPtrOutput[UserName, UserNameOutput] `pulumi:"name"`
	// An alternate name for the user.
	Nickname pulumix.Output[*string] `pulumi:"nickname"`
	// Details about the user's phone number. At most 1 phone number is allowed. Detailed below.
	PhoneNumbers pulumix.GPtrOutput[UserPhoneNumbers, UserPhoneNumbersOutput] `pulumi:"phoneNumbers"`
	// The preferred language of the user.
	PreferredLanguage pulumix.Output[*string] `pulumi:"preferredLanguage"`
	// An URL that may be associated with the user.
	ProfileUrl pulumix.Output[*string] `pulumi:"profileUrl"`
	// The user's time zone.
	Timezone pulumix.Output[*string] `pulumi:"timezone"`
	// The user's title.
	Title pulumix.Output[*string] `pulumi:"title"`
	// The identifier for this user in the identity store.
	UserId pulumix.Output[string] `pulumi:"userId"`
	// A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
	//
	// The following arguments are optional:
	UserName pulumix.Output[string] `pulumi:"userName"`
	// The user type.
	UserType pulumix.Output[*string] `pulumi:"userType"`
}

// NewUser registers a new resource with the given unique name, arguments, and options.
func NewUser(ctx *pulumi.Context,
	name string, args *UserArgs, opts ...pulumi.ResourceOption) (*User, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IdentityStoreId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityStoreId'")
	}
	if args.UserName == nil {
		return nil, errors.New("invalid value for required argument 'UserName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource User
	err := ctx.RegisterResource("aws:identitystore/user:User", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUser gets an existing User resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserState, opts ...pulumi.ResourceOption) (*User, error) {
	var resource User
	err := ctx.ReadResource("aws:identitystore/user:User", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering User resources.
type userState struct {
	// Details about the user's address. At most 1 address is allowed. Detailed below.
	Addresses *UserAddresses `pulumi:"addresses"`
	// The name that is typically displayed when the user is referenced.
	DisplayName *string `pulumi:"displayName"`
	// Details about the user's email. At most 1 email is allowed. Detailed below.
	Emails *UserEmails `pulumi:"emails"`
	// A list of identifiers issued to this resource by an external identity provider.
	ExternalIds []UserExternalId `pulumi:"externalIds"`
	// The globally unique identifier for the identity store that this user is in.
	IdentityStoreId *string `pulumi:"identityStoreId"`
	// The user's geographical region or location.
	Locale *string `pulumi:"locale"`
	// Details about the user's full name. Detailed below.
	Name *UserName `pulumi:"name"`
	// An alternate name for the user.
	Nickname *string `pulumi:"nickname"`
	// Details about the user's phone number. At most 1 phone number is allowed. Detailed below.
	PhoneNumbers *UserPhoneNumbers `pulumi:"phoneNumbers"`
	// The preferred language of the user.
	PreferredLanguage *string `pulumi:"preferredLanguage"`
	// An URL that may be associated with the user.
	ProfileUrl *string `pulumi:"profileUrl"`
	// The user's time zone.
	Timezone *string `pulumi:"timezone"`
	// The user's title.
	Title *string `pulumi:"title"`
	// The identifier for this user in the identity store.
	UserId *string `pulumi:"userId"`
	// A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
	//
	// The following arguments are optional:
	UserName *string `pulumi:"userName"`
	// The user type.
	UserType *string `pulumi:"userType"`
}

type UserState struct {
	// Details about the user's address. At most 1 address is allowed. Detailed below.
	Addresses pulumix.Input[*UserAddressesArgs]
	// The name that is typically displayed when the user is referenced.
	DisplayName pulumix.Input[*string]
	// Details about the user's email. At most 1 email is allowed. Detailed below.
	Emails pulumix.Input[*UserEmailsArgs]
	// A list of identifiers issued to this resource by an external identity provider.
	ExternalIds pulumix.Input[[]*UserExternalIdArgs]
	// The globally unique identifier for the identity store that this user is in.
	IdentityStoreId pulumix.Input[*string]
	// The user's geographical region or location.
	Locale pulumix.Input[*string]
	// Details about the user's full name. Detailed below.
	Name pulumix.Input[*UserNameArgs]
	// An alternate name for the user.
	Nickname pulumix.Input[*string]
	// Details about the user's phone number. At most 1 phone number is allowed. Detailed below.
	PhoneNumbers pulumix.Input[*UserPhoneNumbersArgs]
	// The preferred language of the user.
	PreferredLanguage pulumix.Input[*string]
	// An URL that may be associated with the user.
	ProfileUrl pulumix.Input[*string]
	// The user's time zone.
	Timezone pulumix.Input[*string]
	// The user's title.
	Title pulumix.Input[*string]
	// The identifier for this user in the identity store.
	UserId pulumix.Input[*string]
	// A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
	//
	// The following arguments are optional:
	UserName pulumix.Input[*string]
	// The user type.
	UserType pulumix.Input[*string]
}

func (UserState) ElementType() reflect.Type {
	return reflect.TypeOf((*userState)(nil)).Elem()
}

type userArgs struct {
	// Details about the user's address. At most 1 address is allowed. Detailed below.
	Addresses *UserAddresses `pulumi:"addresses"`
	// The name that is typically displayed when the user is referenced.
	DisplayName string `pulumi:"displayName"`
	// Details about the user's email. At most 1 email is allowed. Detailed below.
	Emails *UserEmails `pulumi:"emails"`
	// The globally unique identifier for the identity store that this user is in.
	IdentityStoreId string `pulumi:"identityStoreId"`
	// The user's geographical region or location.
	Locale *string `pulumi:"locale"`
	// Details about the user's full name. Detailed below.
	Name *UserName `pulumi:"name"`
	// An alternate name for the user.
	Nickname *string `pulumi:"nickname"`
	// Details about the user's phone number. At most 1 phone number is allowed. Detailed below.
	PhoneNumbers *UserPhoneNumbers `pulumi:"phoneNumbers"`
	// The preferred language of the user.
	PreferredLanguage *string `pulumi:"preferredLanguage"`
	// An URL that may be associated with the user.
	ProfileUrl *string `pulumi:"profileUrl"`
	// The user's time zone.
	Timezone *string `pulumi:"timezone"`
	// The user's title.
	Title *string `pulumi:"title"`
	// A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
	//
	// The following arguments are optional:
	UserName string `pulumi:"userName"`
	// The user type.
	UserType *string `pulumi:"userType"`
}

// The set of arguments for constructing a User resource.
type UserArgs struct {
	// Details about the user's address. At most 1 address is allowed. Detailed below.
	Addresses pulumix.Input[*UserAddressesArgs]
	// The name that is typically displayed when the user is referenced.
	DisplayName pulumix.Input[string]
	// Details about the user's email. At most 1 email is allowed. Detailed below.
	Emails pulumix.Input[*UserEmailsArgs]
	// The globally unique identifier for the identity store that this user is in.
	IdentityStoreId pulumix.Input[string]
	// The user's geographical region or location.
	Locale pulumix.Input[*string]
	// Details about the user's full name. Detailed below.
	Name pulumix.Input[*UserNameArgs]
	// An alternate name for the user.
	Nickname pulumix.Input[*string]
	// Details about the user's phone number. At most 1 phone number is allowed. Detailed below.
	PhoneNumbers pulumix.Input[*UserPhoneNumbersArgs]
	// The preferred language of the user.
	PreferredLanguage pulumix.Input[*string]
	// An URL that may be associated with the user.
	ProfileUrl pulumix.Input[*string]
	// The user's time zone.
	Timezone pulumix.Input[*string]
	// The user's title.
	Title pulumix.Input[*string]
	// A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
	//
	// The following arguments are optional:
	UserName pulumix.Input[string]
	// The user type.
	UserType pulumix.Input[*string]
}

func (UserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userArgs)(nil)).Elem()
}

type UserOutput struct{ *pulumi.OutputState }

func (UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*User)(nil)).Elem()
}

func (o UserOutput) ToUserOutput() UserOutput {
	return o
}

func (o UserOutput) ToUserOutputWithContext(ctx context.Context) UserOutput {
	return o
}

func (o UserOutput) ToOutput(ctx context.Context) pulumix.Output[User] {
	return pulumix.Output[User]{
		OutputState: o.OutputState,
	}
}

// Details about the user's address. At most 1 address is allowed. Detailed below.
func (o UserOutput) Addresses() pulumix.GPtrOutput[UserAddresses, UserAddressesOutput] {
	value := pulumix.Apply[User](o, func(v User) pulumix.GPtrOutput[UserAddresses, UserAddressesOutput] { return v.Addresses })
	unwrapped := pulumix.Flatten[*UserAddresses, pulumix.GPtrOutput[UserAddresses, UserAddressesOutput]](value)
	return pulumix.GPtrOutput[UserAddresses, UserAddressesOutput]{OutputState: unwrapped.OutputState}
}

// The name that is typically displayed when the user is referenced.
func (o UserOutput) DisplayName() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.DisplayName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Details about the user's email. At most 1 email is allowed. Detailed below.
func (o UserOutput) Emails() pulumix.GPtrOutput[UserEmails, UserEmailsOutput] {
	value := pulumix.Apply[User](o, func(v User) pulumix.GPtrOutput[UserEmails, UserEmailsOutput] { return v.Emails })
	unwrapped := pulumix.Flatten[*UserEmails, pulumix.GPtrOutput[UserEmails, UserEmailsOutput]](value)
	return pulumix.GPtrOutput[UserEmails, UserEmailsOutput]{OutputState: unwrapped.OutputState}
}

// A list of identifiers issued to this resource by an external identity provider.
func (o UserOutput) ExternalIds() pulumix.GArrayOutput[UserExternalId, UserExternalIdOutput] {
	value := pulumix.Apply[User](o, func(v User) pulumix.GArrayOutput[UserExternalId, UserExternalIdOutput] { return v.ExternalIds })
	unwrapped := pulumix.Flatten[[]UserExternalId, pulumix.GArrayOutput[UserExternalId, UserExternalIdOutput]](value)
	return pulumix.GArrayOutput[UserExternalId, UserExternalIdOutput]{OutputState: unwrapped.OutputState}
}

// The globally unique identifier for the identity store that this user is in.
func (o UserOutput) IdentityStoreId() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.IdentityStoreId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The user's geographical region or location.
func (o UserOutput) Locale() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.Locale })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Details about the user's full name. Detailed below.
func (o UserOutput) Name() pulumix.GPtrOutput[UserName, UserNameOutput] {
	value := pulumix.Apply[User](o, func(v User) pulumix.GPtrOutput[UserName, UserNameOutput] { return v.Name })
	unwrapped := pulumix.Flatten[*UserName, pulumix.GPtrOutput[UserName, UserNameOutput]](value)
	return pulumix.GPtrOutput[UserName, UserNameOutput]{OutputState: unwrapped.OutputState}
}

// An alternate name for the user.
func (o UserOutput) Nickname() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.Nickname })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Details about the user's phone number. At most 1 phone number is allowed. Detailed below.
func (o UserOutput) PhoneNumbers() pulumix.GPtrOutput[UserPhoneNumbers, UserPhoneNumbersOutput] {
	value := pulumix.Apply[User](o, func(v User) pulumix.GPtrOutput[UserPhoneNumbers, UserPhoneNumbersOutput] { return v.PhoneNumbers })
	unwrapped := pulumix.Flatten[*UserPhoneNumbers, pulumix.GPtrOutput[UserPhoneNumbers, UserPhoneNumbersOutput]](value)
	return pulumix.GPtrOutput[UserPhoneNumbers, UserPhoneNumbersOutput]{OutputState: unwrapped.OutputState}
}

// The preferred language of the user.
func (o UserOutput) PreferredLanguage() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.PreferredLanguage })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// An URL that may be associated with the user.
func (o UserOutput) ProfileUrl() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.ProfileUrl })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The user's time zone.
func (o UserOutput) Timezone() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.Timezone })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The user's title.
func (o UserOutput) Title() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.Title })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The identifier for this user in the identity store.
func (o UserOutput) UserId() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.UserId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
//
// The following arguments are optional:
func (o UserOutput) UserName() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.UserName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The user type.
func (o UserOutput) UserType() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.UserType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(UserOutput{})
}
