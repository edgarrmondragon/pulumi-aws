// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The S3 account public access block data source returns account-level public access block configuration.
func LookupAccountPublicAccessBlock(ctx *pulumi.Context, args *LookupAccountPublicAccessBlockArgs, opts ...pulumi.InvokeOption) (*LookupAccountPublicAccessBlockResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountPublicAccessBlockResult
	err := ctx.Invoke("aws:s3/getAccountPublicAccessBlock:getAccountPublicAccessBlock", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountPublicAccessBlock.
type LookupAccountPublicAccessBlockArgs struct {
	// AWS account ID to configure. Defaults to automatically determined account ID of the AWS provider.
	AccountId *string `pulumi:"accountId"`
}

// A collection of values returned by getAccountPublicAccessBlock.
type LookupAccountPublicAccessBlockResult struct {
	AccountId *string `pulumi:"accountId"`
	// Whether or not Amazon S3 should block public ACLs for buckets in this account is enabled. Returns as `true` or `false`.
	BlockPublicAcls bool `pulumi:"blockPublicAcls"`
	// Whether or not Amazon S3 should block public bucket policies for buckets in this account is enabled. Returns as `true` or `false`.
	BlockPublicPolicy bool `pulumi:"blockPublicPolicy"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether or not Amazon S3 should ignore public ACLs for buckets in this account is enabled. Returns as `true` or `false`.
	IgnorePublicAcls bool `pulumi:"ignorePublicAcls"`
	// Whether or not Amazon S3 should restrict public bucket policies for buckets in this account is enabled. Returns as `true` or `false`.
	RestrictPublicBuckets bool `pulumi:"restrictPublicBuckets"`
}

func LookupAccountPublicAccessBlockOutput(ctx *pulumi.Context, args LookupAccountPublicAccessBlockOutputArgs, opts ...pulumi.InvokeOption) LookupAccountPublicAccessBlockResultOutput {
	outputResult := pulumix.ApplyErr[*LookupAccountPublicAccessBlockArgs](args.ToOutput(), func(plainArgs *LookupAccountPublicAccessBlockArgs) (*LookupAccountPublicAccessBlockResult, error) {
		return LookupAccountPublicAccessBlock(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupAccountPublicAccessBlockResultOutput, *LookupAccountPublicAccessBlockResult](outputResult)
}

// A collection of arguments for invoking getAccountPublicAccessBlock.
type LookupAccountPublicAccessBlockOutputArgs struct {
	// AWS account ID to configure. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Input[*string] `pulumi:"accountId"`
}

func (args LookupAccountPublicAccessBlockOutputArgs) ToOutput() pulumix.Output[*LookupAccountPublicAccessBlockArgs] {
	allArgs := pulumix.All(
		args.AccountId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupAccountPublicAccessBlockArgs {
		return &LookupAccountPublicAccessBlockArgs{
			AccountId: resolvedArgs[0].(*string),
		}
	})
}

type LookupAccountPublicAccessBlockResultOutput struct{ *pulumi.OutputState }

func (LookupAccountPublicAccessBlockResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountPublicAccessBlockResult)(nil)).Elem()
}

func (o LookupAccountPublicAccessBlockResultOutput) ToOutput(context.Context) pulumix.Output[*LookupAccountPublicAccessBlockResult] {
	return pulumix.Output[*LookupAccountPublicAccessBlockResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupAccountPublicAccessBlockResultOutput) AccountId() pulumix.Output[*string] {
	return pulumix.Apply[*LookupAccountPublicAccessBlockResult](o, func(v *LookupAccountPublicAccessBlockResult) *string { return v.AccountId })
}

func (o LookupAccountPublicAccessBlockResultOutput) BlockPublicAcls() pulumix.Output[bool] {
	return pulumix.Apply[*LookupAccountPublicAccessBlockResult](o, func(v *LookupAccountPublicAccessBlockResult) bool { return v.BlockPublicAcls })
}

func (o LookupAccountPublicAccessBlockResultOutput) BlockPublicPolicy() pulumix.Output[bool] {
	return pulumix.Apply[*LookupAccountPublicAccessBlockResult](o, func(v *LookupAccountPublicAccessBlockResult) bool { return v.BlockPublicPolicy })
}

func (o LookupAccountPublicAccessBlockResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupAccountPublicAccessBlockResult](o, func(v *LookupAccountPublicAccessBlockResult) string { return v.Id })
}

func (o LookupAccountPublicAccessBlockResultOutput) IgnorePublicAcls() pulumix.Output[bool] {
	return pulumix.Apply[*LookupAccountPublicAccessBlockResult](o, func(v *LookupAccountPublicAccessBlockResult) bool { return v.IgnorePublicAcls })
}

func (o LookupAccountPublicAccessBlockResultOutput) RestrictPublicBuckets() pulumix.Output[bool] {
	return pulumix.Apply[*LookupAccountPublicAccessBlockResult](o, func(v *LookupAccountPublicAccessBlockResult) bool { return v.RestrictPublicBuckets })
}
