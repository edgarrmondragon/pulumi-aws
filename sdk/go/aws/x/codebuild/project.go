// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codebuild

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CodeBuild Project resource. See also the `codebuild.Webhook` resource, which manages the webhook to the source (e.g., the "rebuild every time a code change is pushed" option in the CodeBuild web console).
type Project struct {
	pulumi.CustomResourceState

	// ARN of the CodeBuild project.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Configuration block. Detailed below.
	Artifacts pulumix.GPtrOutput[ProjectArtifacts, ProjectArtifactsOutput] `pulumi:"artifacts"`
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled pulumix.Output[*bool] `pulumi:"badgeEnabled"`
	// URL of the build badge when `badgeEnabled` is enabled.
	BadgeUrl pulumix.Output[string] `pulumi:"badgeUrl"`
	// Defines the batch build options for the project.
	BuildBatchConfig pulumix.GPtrOutput[ProjectBuildBatchConfig, ProjectBuildBatchConfigOutput] `pulumi:"buildBatchConfig"`
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout pulumix.Output[*int] `pulumi:"buildTimeout"`
	// Configuration block. Detailed below.
	Cache pulumix.GPtrOutput[ProjectCache, ProjectCacheOutput] `pulumi:"cache"`
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit pulumix.Output[*int] `pulumi:"concurrentBuildLimit"`
	// Short description of the project.
	Description pulumix.Output[string] `pulumi:"description"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey pulumix.Output[string] `pulumi:"encryptionKey"`
	// Configuration block. Detailed below.
	Environment pulumix.GPtrOutput[ProjectEnvironment, ProjectEnvironmentOutput] `pulumi:"environment"`
	// A set of file system locations to mount inside the build. File system locations are documented below.
	FileSystemLocations pulumix.GArrayOutput[ProjectFileSystemLocation, ProjectFileSystemLocationOutput] `pulumi:"fileSystemLocations"`
	// Configuration block. Detailed below.
	LogsConfig pulumix.GPtrOutput[ProjectLogsConfig, ProjectLogsConfigOutput] `pulumi:"logsConfig"`
	// Project's name.
	Name pulumix.Output[string] `pulumi:"name"`
	// Specifies the visibility of the project's builds. Possible values are: `PUBLIC_READ` and `PRIVATE`. Default value is `PRIVATE`.
	ProjectVisibility pulumix.Output[*string] `pulumi:"projectVisibility"`
	// The project identifier used with the public build APIs.
	PublicProjectAlias pulumix.Output[string] `pulumi:"publicProjectAlias"`
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout pulumix.Output[*int] `pulumi:"queuedTimeout"`
	// The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds.
	ResourceAccessRole pulumix.Output[*string] `pulumi:"resourceAccessRole"`
	// Configuration block. Detailed below.
	SecondaryArtifacts pulumix.GArrayOutput[ProjectSecondaryArtifact, ProjectSecondaryArtifactOutput] `pulumi:"secondaryArtifacts"`
	// Configuration block. Detailed below.
	SecondarySourceVersions pulumix.GArrayOutput[ProjectSecondarySourceVersion, ProjectSecondarySourceVersionOutput] `pulumi:"secondarySourceVersions"`
	// Configuration block. Detailed below.
	SecondarySources pulumix.GArrayOutput[ProjectSecondarySource, ProjectSecondarySourceOutput] `pulumi:"secondarySources"`
	// Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
	ServiceRole pulumix.Output[string] `pulumi:"serviceRole"`
	// Configuration block. Detailed below.
	//
	// The following arguments are optional:
	Source pulumix.GPtrOutput[ProjectSource, ProjectSourceOutput] `pulumi:"source"`
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion pulumix.Output[*string] `pulumi:"sourceVersion"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Configuration block. Detailed below.
	VpcConfig pulumix.GPtrOutput[ProjectVpcConfig, ProjectVpcConfigOutput] `pulumi:"vpcConfig"`
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOption) (*Project, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Artifacts == nil {
		return nil, errors.New("invalid value for required argument 'Artifacts'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.ServiceRole == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRole'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Project
	err := ctx.RegisterResource("aws:codebuild/project:Project", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectState, opts ...pulumi.ResourceOption) (*Project, error) {
	var resource Project
	err := ctx.ReadResource("aws:codebuild/project:Project", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Project resources.
type projectState struct {
	// ARN of the CodeBuild project.
	Arn *string `pulumi:"arn"`
	// Configuration block. Detailed below.
	Artifacts *ProjectArtifacts `pulumi:"artifacts"`
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled *bool `pulumi:"badgeEnabled"`
	// URL of the build badge when `badgeEnabled` is enabled.
	BadgeUrl *string `pulumi:"badgeUrl"`
	// Defines the batch build options for the project.
	BuildBatchConfig *ProjectBuildBatchConfig `pulumi:"buildBatchConfig"`
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout *int `pulumi:"buildTimeout"`
	// Configuration block. Detailed below.
	Cache *ProjectCache `pulumi:"cache"`
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit *int `pulumi:"concurrentBuildLimit"`
	// Short description of the project.
	Description *string `pulumi:"description"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// Configuration block. Detailed below.
	Environment *ProjectEnvironment `pulumi:"environment"`
	// A set of file system locations to mount inside the build. File system locations are documented below.
	FileSystemLocations []ProjectFileSystemLocation `pulumi:"fileSystemLocations"`
	// Configuration block. Detailed below.
	LogsConfig *ProjectLogsConfig `pulumi:"logsConfig"`
	// Project's name.
	Name *string `pulumi:"name"`
	// Specifies the visibility of the project's builds. Possible values are: `PUBLIC_READ` and `PRIVATE`. Default value is `PRIVATE`.
	ProjectVisibility *string `pulumi:"projectVisibility"`
	// The project identifier used with the public build APIs.
	PublicProjectAlias *string `pulumi:"publicProjectAlias"`
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout *int `pulumi:"queuedTimeout"`
	// The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds.
	ResourceAccessRole *string `pulumi:"resourceAccessRole"`
	// Configuration block. Detailed below.
	SecondaryArtifacts []ProjectSecondaryArtifact `pulumi:"secondaryArtifacts"`
	// Configuration block. Detailed below.
	SecondarySourceVersions []ProjectSecondarySourceVersion `pulumi:"secondarySourceVersions"`
	// Configuration block. Detailed below.
	SecondarySources []ProjectSecondarySource `pulumi:"secondarySources"`
	// Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
	ServiceRole *string `pulumi:"serviceRole"`
	// Configuration block. Detailed below.
	//
	// The following arguments are optional:
	Source *ProjectSource `pulumi:"source"`
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion *string `pulumi:"sourceVersion"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Configuration block. Detailed below.
	VpcConfig *ProjectVpcConfig `pulumi:"vpcConfig"`
}

type ProjectState struct {
	// ARN of the CodeBuild project.
	Arn pulumix.Input[*string]
	// Configuration block. Detailed below.
	Artifacts pulumix.Input[*ProjectArtifactsArgs]
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled pulumix.Input[*bool]
	// URL of the build badge when `badgeEnabled` is enabled.
	BadgeUrl pulumix.Input[*string]
	// Defines the batch build options for the project.
	BuildBatchConfig pulumix.Input[*ProjectBuildBatchConfigArgs]
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout pulumix.Input[*int]
	// Configuration block. Detailed below.
	Cache pulumix.Input[*ProjectCacheArgs]
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit pulumix.Input[*int]
	// Short description of the project.
	Description pulumix.Input[*string]
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey pulumix.Input[*string]
	// Configuration block. Detailed below.
	Environment pulumix.Input[*ProjectEnvironmentArgs]
	// A set of file system locations to mount inside the build. File system locations are documented below.
	FileSystemLocations pulumix.Input[[]*ProjectFileSystemLocationArgs]
	// Configuration block. Detailed below.
	LogsConfig pulumix.Input[*ProjectLogsConfigArgs]
	// Project's name.
	Name pulumix.Input[*string]
	// Specifies the visibility of the project's builds. Possible values are: `PUBLIC_READ` and `PRIVATE`. Default value is `PRIVATE`.
	ProjectVisibility pulumix.Input[*string]
	// The project identifier used with the public build APIs.
	PublicProjectAlias pulumix.Input[*string]
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout pulumix.Input[*int]
	// The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds.
	ResourceAccessRole pulumix.Input[*string]
	// Configuration block. Detailed below.
	SecondaryArtifacts pulumix.Input[[]*ProjectSecondaryArtifactArgs]
	// Configuration block. Detailed below.
	SecondarySourceVersions pulumix.Input[[]*ProjectSecondarySourceVersionArgs]
	// Configuration block. Detailed below.
	SecondarySources pulumix.Input[[]*ProjectSecondarySourceArgs]
	// Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
	ServiceRole pulumix.Input[*string]
	// Configuration block. Detailed below.
	//
	// The following arguments are optional:
	Source pulumix.Input[*ProjectSourceArgs]
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Configuration block. Detailed below.
	VpcConfig pulumix.Input[*ProjectVpcConfigArgs]
}

func (ProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectState)(nil)).Elem()
}

type projectArgs struct {
	// Configuration block. Detailed below.
	Artifacts ProjectArtifacts `pulumi:"artifacts"`
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled *bool `pulumi:"badgeEnabled"`
	// Defines the batch build options for the project.
	BuildBatchConfig *ProjectBuildBatchConfig `pulumi:"buildBatchConfig"`
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout *int `pulumi:"buildTimeout"`
	// Configuration block. Detailed below.
	Cache *ProjectCache `pulumi:"cache"`
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit *int `pulumi:"concurrentBuildLimit"`
	// Short description of the project.
	Description *string `pulumi:"description"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// Configuration block. Detailed below.
	Environment ProjectEnvironment `pulumi:"environment"`
	// A set of file system locations to mount inside the build. File system locations are documented below.
	FileSystemLocations []ProjectFileSystemLocation `pulumi:"fileSystemLocations"`
	// Configuration block. Detailed below.
	LogsConfig *ProjectLogsConfig `pulumi:"logsConfig"`
	// Project's name.
	Name *string `pulumi:"name"`
	// Specifies the visibility of the project's builds. Possible values are: `PUBLIC_READ` and `PRIVATE`. Default value is `PRIVATE`.
	ProjectVisibility *string `pulumi:"projectVisibility"`
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout *int `pulumi:"queuedTimeout"`
	// The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds.
	ResourceAccessRole *string `pulumi:"resourceAccessRole"`
	// Configuration block. Detailed below.
	SecondaryArtifacts []ProjectSecondaryArtifact `pulumi:"secondaryArtifacts"`
	// Configuration block. Detailed below.
	SecondarySourceVersions []ProjectSecondarySourceVersion `pulumi:"secondarySourceVersions"`
	// Configuration block. Detailed below.
	SecondarySources []ProjectSecondarySource `pulumi:"secondarySources"`
	// Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
	ServiceRole string `pulumi:"serviceRole"`
	// Configuration block. Detailed below.
	//
	// The following arguments are optional:
	Source ProjectSource `pulumi:"source"`
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion *string `pulumi:"sourceVersion"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Configuration block. Detailed below.
	VpcConfig *ProjectVpcConfig `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// Configuration block. Detailed below.
	Artifacts pulumix.Input[*ProjectArtifactsArgs]
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled pulumix.Input[*bool]
	// Defines the batch build options for the project.
	BuildBatchConfig pulumix.Input[*ProjectBuildBatchConfigArgs]
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout pulumix.Input[*int]
	// Configuration block. Detailed below.
	Cache pulumix.Input[*ProjectCacheArgs]
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit pulumix.Input[*int]
	// Short description of the project.
	Description pulumix.Input[*string]
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey pulumix.Input[*string]
	// Configuration block. Detailed below.
	Environment pulumix.Input[*ProjectEnvironmentArgs]
	// A set of file system locations to mount inside the build. File system locations are documented below.
	FileSystemLocations pulumix.Input[[]*ProjectFileSystemLocationArgs]
	// Configuration block. Detailed below.
	LogsConfig pulumix.Input[*ProjectLogsConfigArgs]
	// Project's name.
	Name pulumix.Input[*string]
	// Specifies the visibility of the project's builds. Possible values are: `PUBLIC_READ` and `PRIVATE`. Default value is `PRIVATE`.
	ProjectVisibility pulumix.Input[*string]
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout pulumix.Input[*int]
	// The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds.
	ResourceAccessRole pulumix.Input[*string]
	// Configuration block. Detailed below.
	SecondaryArtifacts pulumix.Input[[]*ProjectSecondaryArtifactArgs]
	// Configuration block. Detailed below.
	SecondarySourceVersions pulumix.Input[[]*ProjectSecondarySourceVersionArgs]
	// Configuration block. Detailed below.
	SecondarySources pulumix.Input[[]*ProjectSecondarySourceArgs]
	// Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
	ServiceRole pulumix.Input[string]
	// Configuration block. Detailed below.
	//
	// The following arguments are optional:
	Source pulumix.Input[*ProjectSourceArgs]
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Configuration block. Detailed below.
	VpcConfig pulumix.Input[*ProjectVpcConfigArgs]
}

func (ProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectArgs)(nil)).Elem()
}

type ProjectOutput struct{ *pulumi.OutputState }

func (ProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Project)(nil)).Elem()
}

func (o ProjectOutput) ToProjectOutput() ProjectOutput {
	return o
}

func (o ProjectOutput) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return o
}

func (o ProjectOutput) ToOutput(ctx context.Context) pulumix.Output[Project] {
	return pulumix.Output[Project]{
		OutputState: o.OutputState,
	}
}

// ARN of the CodeBuild project.
func (o ProjectOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block. Detailed below.
func (o ProjectOutput) Artifacts() pulumix.GPtrOutput[ProjectArtifacts, ProjectArtifactsOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GPtrOutput[ProjectArtifacts, ProjectArtifactsOutput] { return v.Artifacts })
	unwrapped := pulumix.Flatten[*ProjectArtifacts, pulumix.GPtrOutput[ProjectArtifacts, ProjectArtifactsOutput]](value)
	return pulumix.GPtrOutput[ProjectArtifacts, ProjectArtifactsOutput]{OutputState: unwrapped.OutputState}
}

// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
func (o ProjectOutput) BadgeEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[*bool] { return v.BadgeEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// URL of the build badge when `badgeEnabled` is enabled.
func (o ProjectOutput) BadgeUrl() pulumix.Output[string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[string] { return v.BadgeUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Defines the batch build options for the project.
func (o ProjectOutput) BuildBatchConfig() pulumix.GPtrOutput[ProjectBuildBatchConfig, ProjectBuildBatchConfigOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GPtrOutput[ProjectBuildBatchConfig, ProjectBuildBatchConfigOutput] {
		return v.BuildBatchConfig
	})
	unwrapped := pulumix.Flatten[*ProjectBuildBatchConfig, pulumix.GPtrOutput[ProjectBuildBatchConfig, ProjectBuildBatchConfigOutput]](value)
	return pulumix.GPtrOutput[ProjectBuildBatchConfig, ProjectBuildBatchConfigOutput]{OutputState: unwrapped.OutputState}
}

// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
func (o ProjectOutput) BuildTimeout() pulumix.Output[*int] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[*int] { return v.BuildTimeout })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Configuration block. Detailed below.
func (o ProjectOutput) Cache() pulumix.GPtrOutput[ProjectCache, ProjectCacheOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GPtrOutput[ProjectCache, ProjectCacheOutput] { return v.Cache })
	unwrapped := pulumix.Flatten[*ProjectCache, pulumix.GPtrOutput[ProjectCache, ProjectCacheOutput]](value)
	return pulumix.GPtrOutput[ProjectCache, ProjectCacheOutput]{OutputState: unwrapped.OutputState}
}

// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
func (o ProjectOutput) ConcurrentBuildLimit() pulumix.Output[*int] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[*int] { return v.ConcurrentBuildLimit })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Short description of the project.
func (o ProjectOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
func (o ProjectOutput) EncryptionKey() pulumix.Output[string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[string] { return v.EncryptionKey })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block. Detailed below.
func (o ProjectOutput) Environment() pulumix.GPtrOutput[ProjectEnvironment, ProjectEnvironmentOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GPtrOutput[ProjectEnvironment, ProjectEnvironmentOutput] { return v.Environment })
	unwrapped := pulumix.Flatten[*ProjectEnvironment, pulumix.GPtrOutput[ProjectEnvironment, ProjectEnvironmentOutput]](value)
	return pulumix.GPtrOutput[ProjectEnvironment, ProjectEnvironmentOutput]{OutputState: unwrapped.OutputState}
}

// A set of file system locations to mount inside the build. File system locations are documented below.
func (o ProjectOutput) FileSystemLocations() pulumix.GArrayOutput[ProjectFileSystemLocation, ProjectFileSystemLocationOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GArrayOutput[ProjectFileSystemLocation, ProjectFileSystemLocationOutput] {
		return v.FileSystemLocations
	})
	unwrapped := pulumix.Flatten[[]ProjectFileSystemLocation, pulumix.GArrayOutput[ProjectFileSystemLocation, ProjectFileSystemLocationOutput]](value)
	return pulumix.GArrayOutput[ProjectFileSystemLocation, ProjectFileSystemLocationOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block. Detailed below.
func (o ProjectOutput) LogsConfig() pulumix.GPtrOutput[ProjectLogsConfig, ProjectLogsConfigOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GPtrOutput[ProjectLogsConfig, ProjectLogsConfigOutput] { return v.LogsConfig })
	unwrapped := pulumix.Flatten[*ProjectLogsConfig, pulumix.GPtrOutput[ProjectLogsConfig, ProjectLogsConfigOutput]](value)
	return pulumix.GPtrOutput[ProjectLogsConfig, ProjectLogsConfigOutput]{OutputState: unwrapped.OutputState}
}

// Project's name.
func (o ProjectOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the visibility of the project's builds. Possible values are: `PUBLIC_READ` and `PRIVATE`. Default value is `PRIVATE`.
func (o ProjectOutput) ProjectVisibility() pulumix.Output[*string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[*string] { return v.ProjectVisibility })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The project identifier used with the public build APIs.
func (o ProjectOutput) PublicProjectAlias() pulumix.Output[string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[string] { return v.PublicProjectAlias })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
func (o ProjectOutput) QueuedTimeout() pulumix.Output[*int] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[*int] { return v.QueuedTimeout })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds.
func (o ProjectOutput) ResourceAccessRole() pulumix.Output[*string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[*string] { return v.ResourceAccessRole })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block. Detailed below.
func (o ProjectOutput) SecondaryArtifacts() pulumix.GArrayOutput[ProjectSecondaryArtifact, ProjectSecondaryArtifactOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GArrayOutput[ProjectSecondaryArtifact, ProjectSecondaryArtifactOutput] {
		return v.SecondaryArtifacts
	})
	unwrapped := pulumix.Flatten[[]ProjectSecondaryArtifact, pulumix.GArrayOutput[ProjectSecondaryArtifact, ProjectSecondaryArtifactOutput]](value)
	return pulumix.GArrayOutput[ProjectSecondaryArtifact, ProjectSecondaryArtifactOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block. Detailed below.
func (o ProjectOutput) SecondarySourceVersions() pulumix.GArrayOutput[ProjectSecondarySourceVersion, ProjectSecondarySourceVersionOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GArrayOutput[ProjectSecondarySourceVersion, ProjectSecondarySourceVersionOutput] {
		return v.SecondarySourceVersions
	})
	unwrapped := pulumix.Flatten[[]ProjectSecondarySourceVersion, pulumix.GArrayOutput[ProjectSecondarySourceVersion, ProjectSecondarySourceVersionOutput]](value)
	return pulumix.GArrayOutput[ProjectSecondarySourceVersion, ProjectSecondarySourceVersionOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block. Detailed below.
func (o ProjectOutput) SecondarySources() pulumix.GArrayOutput[ProjectSecondarySource, ProjectSecondarySourceOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GArrayOutput[ProjectSecondarySource, ProjectSecondarySourceOutput] {
		return v.SecondarySources
	})
	unwrapped := pulumix.Flatten[[]ProjectSecondarySource, pulumix.GArrayOutput[ProjectSecondarySource, ProjectSecondarySourceOutput]](value)
	return pulumix.GArrayOutput[ProjectSecondarySource, ProjectSecondarySourceOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
func (o ProjectOutput) ServiceRole() pulumix.Output[string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[string] { return v.ServiceRole })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block. Detailed below.
//
// The following arguments are optional:
func (o ProjectOutput) Source() pulumix.GPtrOutput[ProjectSource, ProjectSourceOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GPtrOutput[ProjectSource, ProjectSourceOutput] { return v.Source })
	unwrapped := pulumix.Flatten[*ProjectSource, pulumix.GPtrOutput[ProjectSource, ProjectSourceOutput]](value)
	return pulumix.GPtrOutput[ProjectSource, ProjectSourceOutput]{OutputState: unwrapped.OutputState}
}

// Version of the build input to be built for this project. If not specified, the latest version is used.
func (o ProjectOutput) SourceVersion() pulumix.Output[*string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.Output[*string] { return v.SourceVersion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ProjectOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ProjectOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block. Detailed below.
func (o ProjectOutput) VpcConfig() pulumix.GPtrOutput[ProjectVpcConfig, ProjectVpcConfigOutput] {
	value := pulumix.Apply[Project](o, func(v Project) pulumix.GPtrOutput[ProjectVpcConfig, ProjectVpcConfigOutput] { return v.VpcConfig })
	unwrapped := pulumix.Flatten[*ProjectVpcConfig, pulumix.GPtrOutput[ProjectVpcConfig, ProjectVpcConfigOutput]](value)
	return pulumix.GPtrOutput[ProjectVpcConfig, ProjectVpcConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ProjectOutput{})
}
