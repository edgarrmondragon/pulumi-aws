// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The Autoscaling Groups data source allows access to the list of AWS
// ASGs within a specific region. This will allow you to pass a list of AutoScaling Groups to other resources.
func GetAmiIds(ctx *pulumi.Context, args *GetAmiIdsArgs, opts ...pulumi.InvokeOption) (*GetAmiIdsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAmiIdsResult
	err := ctx.Invoke("aws:autoscaling/getAmiIds:getAmiIds", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAmiIds.
type GetAmiIdsArgs struct {
	// Filter used to scope the list e.g., by tags. See [related docs](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_Filter.html).
	Filters []GetAmiIdsFilter `pulumi:"filters"`
	// List of autoscaling group names
	Names []string `pulumi:"names"`
}

// A collection of values returned by getAmiIds.
type GetAmiIdsResult struct {
	// List of the Autoscaling Groups Arns in the current region.
	Arns    []string          `pulumi:"arns"`
	Filters []GetAmiIdsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of the Autoscaling Groups in the current region.
	Names []string `pulumi:"names"`
}

func GetAmiIdsOutput(ctx *pulumi.Context, args GetAmiIdsOutputArgs, opts ...pulumi.InvokeOption) GetAmiIdsResultOutput {
	outputResult := pulumix.ApplyErr[*GetAmiIdsArgs](args.ToOutput(), func(plainArgs *GetAmiIdsArgs) (*GetAmiIdsResult, error) {
		return GetAmiIds(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetAmiIdsResultOutput, *GetAmiIdsResult](outputResult)
}

// A collection of arguments for invoking getAmiIds.
type GetAmiIdsOutputArgs struct {
	// Filter used to scope the list e.g., by tags. See [related docs](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_Filter.html).
	Filters pulumix.Input[[]*GetAmiIdsFilterArgs] `pulumi:"filters"`
	// List of autoscaling group names
	Names pulumix.Input[[]string] `pulumi:"names"`
}

func (args GetAmiIdsOutputArgs) ToOutput() pulumix.Output[*GetAmiIdsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Names.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetAmiIdsArgs {
		return &GetAmiIdsArgs{
			Filters: resolvedArgs[0].([]GetAmiIdsFilter),
			Names:   resolvedArgs[1].([]string),
		}
	})
}

type GetAmiIdsResultOutput struct{ *pulumi.OutputState }

func (GetAmiIdsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAmiIdsResult)(nil)).Elem()
}

func (o GetAmiIdsResultOutput) ToOutput(context.Context) pulumix.Output[*GetAmiIdsResult] {
	return pulumix.Output[*GetAmiIdsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAmiIdsResultOutput) Arns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAmiIdsResult](o, func(v *GetAmiIdsResult) []string { return v.Arns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAmiIdsResultOutput) Filters() pulumix.GArrayOutput[GetAmiIdsFilter, GetAmiIdsFilterOutput] {
	value := pulumix.Apply[*GetAmiIdsResult](o, func(v *GetAmiIdsResult) []GetAmiIdsFilter { return v.Filters })
	return pulumix.GArrayOutput[GetAmiIdsFilter, GetAmiIdsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetAmiIdsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetAmiIdsResult](o, func(v *GetAmiIdsResult) string { return v.Id })
}

func (o GetAmiIdsResultOutput) Names() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAmiIdsResult](o, func(v *GetAmiIdsResult) []string { return v.Names })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}
